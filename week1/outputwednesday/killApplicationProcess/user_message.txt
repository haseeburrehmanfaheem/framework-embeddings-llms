// API: killApplicationProcess
// Service: ActivityManagerService_3

public void killApplicationProcess() {
    int var6 = Binder.getCallingUid();
    ActivityManagerService.boostPriorityForLockedSection();
    ProcessRecord var24 = getProcessRecordLocked(param2,param3,1);
    ProcessList var5 = this.mProcessList;
    ProcessRecord var7 = var5.getProcessRecordLocked(param2,param3,param4);
    ProcessList$MyProcessMap var6 = this.mProcessNames;
    ArrayMap var8 = var6.getMap();
    Object var10 = var8.get(param2);
    SparseArray var11 = (SparseArray) var10;
    int var14 = var11.size();
    ProcessList$MyProcessMap var30 = this.mProcessNames;
    Object var32 = var30.get(param2,param3);
    ProcessRecord var33 = (ProcessRecord) var32;
    ActivityManagerService var34 = this.mService;
    int var35 = var34.mLastMemoryLevel;
    int var36 = var33.setProcState;
    long var38 = var33.lastCachedPss;
    long var40 = getCachedRestoreThresholdKb();
    var41 = var38 lt var40;
    ProcessState var42 = var33.baseProcessTracker;
    ProcessState var44 = var33.baseProcessTracker;
    ProcessRecord$PackageList var45 = var33.pkgList;
    ArrayMap var46 = var45.mPkgList;
    long var47 = var33.lastCachedPss;
    var44.reportCachedKill(var46,var47);
    ProcessRecord$PackageList var49 = var33.pkgList;
    int var51 = var49.size();
    var52 = var51 sub 1;
    long var83 = var33.lastCachedPss;
    String var85 = Long.toString(var83);
    var33.kill(var92,1);
    boolean var4 = this.killedByAm;
    Trace.traceBegin(64,kill);
    ActivityManagerService var9 = this.mService;
    ApplicationInfo var10 = this.info;
    int var11 = var10.uid;
    ActivityManagerService var12 = this.mService;
    int var13 = var12.mCurOomAdjUid;
    ActivityManagerService var15 = this.mService;
    String var22 = toShortString();
    int var28 = this.setAdj;
    ApplicationInfo var38 = this.info;
    int var39 = var38.uid;
    var15.reportUidInfoMessageLocked(ActivityManager,var37,var39);
    int var45 = this.pid;
    Object var49 = new Object(5);
    int var50 = this.userId;
    Integer var52 = Integer.valueOf(var50);
    arraystore 49[5] = 52;
    int var53 = this.pid;
    Integer var55 = Integer.valueOf(var53);
    arraystore 49[46] = 55;
    String var57 = this.processName;
    arraystore 49[56] = 57;
    int var59 = this.setAdj;
    Integer var61 = Integer.valueOf(var59);
    arraystore 49[58] = 61;
    arraystore 49[62] = 2;
    int var65 = this.pid;
    Process.killProcessQuiet(var65);
    int var67 = this.uid;
    int var68 = this.pid;
    ProcessList.killProcessGroup(var67,var68);
    boolean var75 = this.mPersistent;
    this.killed = 1;
    this.killedByAm = 1;
    Trace.traceEnd(64);<PATH_SEP>int var6 = Binder.getCallingUid();
    ActivityManagerService.boostPriorityForLockedSection();
    ProcessRecord var24 = getProcessRecordLocked(param2,param3,1);
    ProcessList var5 = this.mProcessList;
    ProcessRecord var7 = var5.getProcessRecordLocked(param2,param3,param4);
    ProcessList$MyProcessMap var6 = this.mProcessNames;
    ArrayMap var8 = var6.getMap();
    Object var10 = var8.get(param2);
    SparseArray var11 = (SparseArray) var10;
    int var14 = var11.size();
    ProcessList$MyProcessMap var30 = this.mProcessNames;
    Object var32 = var30.get(param2,param3);
    ProcessRecord var33 = (ProcessRecord) var32;
    ActivityManagerService var34 = this.mService;
    int var35 = var34.mLastMemoryLevel;
    int var36 = var33.setProcState;
    long var38 = var33.lastCachedPss;
    long var40 = getCachedRestoreThresholdKb();
    var41 = var38 lt var40;
    ProcessState var42 = var33.baseProcessTracker;
    ProcessState var44 = var33.baseProcessTracker;
    ProcessRecord$PackageList var45 = var33.pkgList;
    ArrayMap var46 = var45.mPkgList;
    long var47 = var33.lastCachedPss;
    var44.reportCachedKill(var46,var47);
    ProcessRecord$PackageList var49 = var33.pkgList;
    int var51 = var49.size();
    var52 = var51 sub 1;
    ProcessRecord$PackageList var53 = var33.pkgList;
    ProcessStats$ProcessStateHolder var55 = var53.valueAt(var71);
    ApplicationInfo var57 = var33.info;
    int var58 = var57.uid;
    ProcessState var59 = var55.state;
    String var61 = var59.getName();
    ProcessState var62 = var55.state;
    String var64 = var62.getPackage();
    String var2 = this.mPackage;
    Ljava/lang/String var2<PATH_SEP>int var6 = Binder.getCallingUid();
    ActivityManagerService.boostPriorityForLockedSection();
    ProcessRecord var24 = getProcessRecordLocked(param2,param3,1);
    ProcessList var5 = this.mProcessList;
    ProcessRecord var7 = var5.getProcessRecordLocked(param2,param3,param4);
    ProcessList$MyProcessMap var6 = this.mProcessNames;
    ArrayMap var8 = var6.getMap();
    Object var10 = var8.get(param2);
    SparseArray var11 = (SparseArray) var10;
    int var14 = var11.size();
    ProcessList$MyProcessMap var30 = this.mProcessNames;
    Object var32 = var30.get(param2,param3);
    ProcessRecord var33 = (ProcessRecord) var32;
    ActivityManagerService var34 = this.mService;
    int var35 = var34.mLastMemoryLevel;
    int var36 = var33.setProcState;
    long var38 = var33.lastCachedPss;
    long var40 = getCachedRestoreThresholdKb();
    var41 = var38 lt var40;
    ProcessState var42 = var33.baseProcessTracker;
    ProcessState var44 = var33.baseProcessTracker;
    ProcessRecord$PackageList var45 = var33.pkgList;
    ArrayMap var46 = var45.mPkgList;
    long var47 = var33.lastCachedPss;
    var44.reportCachedKill(var46,var47);
    ProcessRecord$PackageList var49 = var33.pkgList;
    int var51 = var49.size();
    var52 = var51 sub 1;
    long var83 = var33.lastCachedPss;
    String var85 = Long.toString(var83);
    var33.kill(var92,1);
    boolean var4 = this.killedByAm;
    Trace.traceBegin(64,kill);
    ActivityManagerService var9 = this.mService;
    ActivityManagerService var15 = this.mService;
    String var22 = toShortString();
    int var28 = this.setAdj;
    ApplicationInfo var38 = this.info;
    int var39 = var38.uid;
    var15.reportUidInfoMessageLocked(ActivityManager,var37,var39);
    int var45 = this.pid;
    this.pendingStart = 0;
    boolean var75 = this.mPersistent;
    this.killed = 1;
    this.killedByAm = 1;<PATH_SEP>int var6 = Binder.getCallingUid();
    ActivityManagerService.boostPriorityForLockedSection();
    ProcessRecord var24 = getProcessRecordLocked(param2,param3,1);
    ProcessList var5 = this.mProcessList;
    ProcessRecord var7 = var5.getProcessRecordLocked(param2,param3,param4);
    ProcessList$MyProcessMap var6 = this.mProcessNames;
    ArrayMap var8 = var6.getMap();
    Object var10 = var8.get(param2);
    SparseArray var11 = (SparseArray) var10;
    int var14 = var11.size();
    ProcessList$MyProcessMap var30 = this.mProcessNames;
    Object var32 = var30.get(param2,param3);
    ProcessRecord var33 = (ProcessRecord) var32;
    ActivityManagerService var34 = this.mService;
    int var35 = var34.mLastMemoryLevel;
    int var36 = var33.setProcState;
    long var38 = var33.lastCachedPss;
    long var40 = getCachedRestoreThresholdKb();
    var41 = var38 lt var40;
    ProcessState var42 = var33.baseProcessTracker;
    ProcessState var44 = var33.baseProcessTracker;
    ProcessRecord$PackageList var45 = var33.pkgList;
    ArrayMap var46 = var45.mPkgList;
    long var47 = var33.lastCachedPss;
    var44.reportCachedKill(var46,var47);
    ensureNotDead();{ensureNotDead();};
    ProcessState var5 = this.mCommonProcess;
    var5.addCachedKill(1,param3,param3,param3);
    ProcessState var8 = this.mCommonProcess;
    boolean var9 = var8.mMultiPackage;
    int var12 = size();
    var14 = var12 add -1;
    ProcessState var16 = pullFixedProc(param2,var19);
    var16.addCachedKill(1,param3,param3,param3);
}