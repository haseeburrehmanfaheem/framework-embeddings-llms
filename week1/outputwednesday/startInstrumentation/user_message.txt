// API: startInstrumentation
// Service: ActivityManagerService_9

public void startInstrumentation() {
    int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    UserController var16 = this.mUserController;
    int var20 = var16.handleIncomingUser(var15,var13,param8,0,2,startInstrumentation,0);
    boolean var22 = hasFileDescriptors();
    ActivityManagerService.boostPriorityForLockedSection();
    Context var30 = this.mContext;
    PackageManager var32 = var30.getPackageManager();
    InstrumentationInfo var35 = var32.getInstrumentationInfo(param2,1024);
    IPackageManager var38 = AppGlobals.getPackageManager();
    String var39 = var35.targetPackage;
    ApplicationInfo var41 = var38.getApplicationInfo(var39,1024,var20);
    reportStartInstrumentationFailureLocked(param6,param2,var230);
    Bundle var9 = new Bundle();
    var9.putString(id,ActivityManagerService);
    var9.putString(Error,param4);
    InstrumentationReporter var16 = this.mInstrumentationReporter;
    var16.reportStatus(param2,param3,-1,var9);
    InstrumentationReporter$Report var6 = new InstrumentationReporter$Report();
    report(var6);
    Object var3 = this.mLock;
    Thread var4 = this.mThread;
    InstrumentationReporter$MyThread var6 = new InstrumentationReporter$MyThread();
    this.mThread = var6;
    Thread var8 = this.mThread;
    var8.start();
    ArrayList var11 = this.mPendingReports;
    ArrayList var12 = new ArrayList();
    this.mPendingReports = var12;
    ArrayList var16 = this.mPendingReports;
    boolean var18 = var16.add(param2);
    Object var19 = this.mLock;
    var19.notifyAll();<PATH_SEP>int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    UserController var16 = this.mUserController;
    int var20 = var16.handleIncomingUser(var15,var13,param8,0,2,startInstrumentation,0);
    boolean var22 = hasFileDescriptors();
    ActivityManagerService.boostPriorityForLockedSection();
    Context var30 = this.mContext;
    PackageManager var32 = var30.getPackageManager();
    InstrumentationInfo var35 = var32.getInstrumentationInfo(param2,1024);
    IPackageManager var38 = AppGlobals.getPackageManager();
    String var39 = var35.targetPackage;
    ApplicationInfo var41 = var38.getApplicationInfo(var39,1024,var20);
    reportStartInstrumentationFailureLocked(param6,param2,var230);
    Bundle var9 = new Bundle();
    var9.putString(id,ActivityManagerService);
    var9.putString(Error,param4);
    InstrumentationReporter var16 = this.mInstrumentationReporter;
    var16.reportStatus(param2,param3,-1,var9);<PATH_SEP>int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    UserController var16 = this.mUserController;
    int var20 = var16.handleIncomingUser(var15,var13,param8,0,2,startInstrumentation,0);
    boolean var22 = hasFileDescriptors();
    ActivityManagerService.boostPriorityForLockedSection();
    Context var30 = this.mContext;
    PackageManager var32 = var30.getPackageManager();
    InstrumentationInfo var35 = var32.getInstrumentationInfo(param2,1024);
    IPackageManager var38 = AppGlobals.getPackageManager();
    IPackageManager var2 = ActivityThread.getPackageManager();
    IPackageManager var1 = sPackageManager;
    IBinder var5 = ServiceManager.getService(package);
    IPackageManager var7 = IPackageManager$Stub.asInterface(var5);
    var7.sPackageManager = var7;<PATH_SEP>int var13 = Binder.getCallingUid();
    int var15 = Binder.getCallingPid();
    UserController var16 = this.mUserController;
    int var20 = var16.handleIncomingUser(var15,var13,param8,0,2,startInstrumentation,0);
    boolean var22 = hasFileDescriptors();
    ActivityManagerService.boostPriorityForLockedSection();
    Context var30 = this.mContext;
    PackageManager var32 = var30.getPackageManager();
    InstrumentationInfo var35 = var32.getInstrumentationInfo(param2,1024);
    IPackageManager var38 = AppGlobals.getPackageManager();
    String var39 = var35.targetPackage;
    ApplicationInfo var41 = var38.getApplicationInfo(var39,1024,var20);
    reportStartInstrumentationFailureLocked(param6,param2,var230);
    Bundle var9 = new Bundle();
    var9.putString(id,ActivityManagerService);
    var9.putString(Error,param4);
    InstrumentationReporter var16 = this.mInstrumentationReporter;
    var16.reportStatus(param2,param3,-1,var9);
    InstrumentationReporter$Report var6 = new InstrumentationReporter$Report();
    report(var6);
    Object var3 = this.mLock;
    Thread var4 = this.mThread;
    ArrayList var11 = this.mPendingReports;
    ArrayList var16 = this.mPendingReports;
    boolean var18 = var16.add(param2);
}