// API: startUserInForegroundWithListener
// Service: ActivityManagerService_3

public void startUserInForegroundWithListener() {
    UserController var4 = this.mUserController;
    boolean var7 = var4.startUser(param2,1,param3);
    UserController$Injector var5 = this.mInjector;
    int var55 = Binder.getCallingUid();
    int var57 = Binder.getCallingPid();
    long var59 = Binder.clearCallingIdentity();
    int var61 = getCurrentUserId();
    UserState var64 = getStartedUserState(param2);
    UserController$Injector var78 = this.mInjector;
    var78.clearAllLockedTasks(startUser);
    UserInfo var85 = getUserInfo(param2);
    boolean var87 = var85.isManagedProfile();
    boolean var91 = var85.preCreated;
    boolean var93 = this.mUserSwitchUiEnabled;
    UserController$Injector var94 = this.mInjector;
    WindowManagerService var96 = var94.getWindowManager();
    var96.startFreezingScreen(17432729,17432728);
    Object var104 = this.mLock;
    SparseArray var105 = this.mStartedUsers;
    Object var107 = var105.get(param2);
    UserState var108 = (UserState) var107;
    UserState var140 = new UserState();
    UserHandle var142 = UserHandle.of(param2);
    ProgressReporter var144 = var140.mUnlockProgress;
    UserController$UserProgressListener var145 = new UserController$UserProgressListener();
    var144.addListener(var145);
    SparseArray var148 = this.mStartedUsers;
    var148.put(param2,var140);<PATH_SEP>UserController var4 = this.mUserController;
    boolean var7 = var4.startUser(param2,1,param3);
    UserController$Injector var5 = this.mInjector;
    int var55 = Binder.getCallingUid();
    int var57 = Binder.getCallingPid();
    long var59 = Binder.clearCallingIdentity();
    int var61 = getCurrentUserId();
    UserState var64 = getStartedUserState(param2);
    UserController$Injector var78 = this.mInjector;
    var78.clearAllLockedTasks(startUser);
    UserInfo var85 = getUserInfo(param2);
    boolean var87 = var85.isManagedProfile();
    boolean var91 = var85.preCreated;
    boolean var93 = this.mUserSwitchUiEnabled;
    UserController$Injector var94 = this.mInjector;
    WindowManagerService var96 = var94.getWindowManager();
    var96.startFreezingScreen(17432729,17432728);
    WindowManagerGlobalLock var12 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    boolean var14 = this.mClientFreezingScreen;
    this.mClientFreezingScreen = 1;
    long var17 = Binder.clearCallingIdentity();
    startFreezingDisplayLocked(param2,param3);
    WindowManagerService$H var19 = this.mH;
    var19.removeMessages(30);
    WindowManagerService$H var22 = this.mH;
    boolean var25 = var22.sendEmptyMessageDelayed(30,5000);
    Binder.restoreCallingIdentity(var17);
    WindowManagerService.resetPriorityAfterLockedSection();
    WindowManagerThreadPriorityBooster var1 = sThreadPriorityBooster;
    this.reset();<PATH_SEP>UserController var4 = this.mUserController;
    boolean var7 = var4.startUser(param2,1,param3);
    UserController$Injector var5 = this.mInjector;
    int var55 = Binder.getCallingUid();
    int var57 = Binder.getCallingPid();
    long var59 = Binder.clearCallingIdentity();
    int var61 = getCurrentUserId();
    UserState var64 = getStartedUserState(param2);
    UserController$Injector var78 = this.mInjector;
    var78.clearAllLockedTasks(startUser);
    UserInfo var85 = getUserInfo(param2);
    boolean var87 = var85.isManagedProfile();
    boolean var91 = var85.preCreated;
    boolean var93 = this.mUserSwitchUiEnabled;
    UserController$Injector var94 = this.mInjector;
    WindowManagerService var96 = var94.getWindowManager();
    var96.startFreezingScreen(17432729,17432728);
    Object var104 = this.mLock;
    SparseArray var105 = this.mStartedUsers;
    Object var107 = var105.get(param2);
    UserState var108 = (UserState) var107;
    UserState var140 = new UserState();
    UserHandle var142 = UserHandle.of(param2);
    ProgressReporter var144 = var140.mUnlockProgress;
    UserController$UserProgressListener var145 = new UserController$UserProgressListener();
    var144.addListener(var145);
    RemoteCallbackList var4 = this.mListeners;
    boolean var6 = var4.register(param2);<PATH_SEP>UserController var4 = this.mUserController;
    boolean var7 = var4.startUser(param2,1,param3);
    UserController$Injector var5 = this.mInjector;
    int var55 = Binder.getCallingUid();
    int var57 = Binder.getCallingPid();
    long var59 = Binder.clearCallingIdentity();
    int var61 = getCurrentUserId();
    UserState var64 = getStartedUserState(param2);
    UserController$Injector var78 = this.mInjector;
    var78.clearAllLockedTasks(startUser);
    UserInfo var85 = getUserInfo(param2);
    boolean var87 = var85.isManagedProfile();
    boolean var91 = var85.preCreated;
    boolean var93 = this.mUserSwitchUiEnabled;
    UserController$Injector var94 = this.mInjector;
    WindowManagerService var96 = var94.getWindowManager();
    var96.startFreezingScreen(17432729,17432728);
    Object var104 = this.mLock;
    SparseArray var105 = this.mStartedUsers;
    Object var107 = var105.get(param2);
    UserState var108 = (UserState) var107;
    UserState var140 = new UserState();
    UserHandle var142 = UserHandle.of(param2);
    ProgressReporter var144 = var140.mUnlockProgress;
    UserController$UserProgressListener var145 = new UserController$UserProgressListener();
    var144.addListener(var145);
    SparseArray var148 = this.mStartedUsers;
    var148.put(param2,var140);
    updateStartedUserArrayLU();
    SparseArray var3 = this.mStartedUsers;
    int var5 = var3.size();
    [I var21 = new [I(var19);
    this.mStartedUserArray = var21;
}