// Method: moveTaskToStack
// Service: ActivityManagerService_4

public void moveTaskToStack() {
    ActivityTaskManagerService var5 = this.mActivityTaskManager;
    var5.moveTaskToStack(param2,param3,param4);
    WindowManagerGlobalLock var8 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    long var11 = Binder.clearCallingIdentity();
    RootActivityContainer var12 = this.mRootActivityContainer;
    TaskRecord var14 = var12.anyTaskForId(param2);
    RootActivityContainer var16 = this.mRootActivityContainer;
    ActivityStack var18 = var16.getStack(param3);
    boolean var31 = var18.isActivityTypeStandardOrUndefined();
    boolean var49 = var18.inSplitScreenPrimaryWindowingMode();
    WindowManagerService var50 = this.mWindowManager;
    var50.setDockedStackCreateState(0,0);
    boolean var57 = var14.reparent(var18,param4,1,1,0,moveTaskToStack);
    boolean var13 = reparent(param2,var10,param4,param5,param6,1,param7);
    ActivityTaskManagerService var9 = this.mService;
    ActivityStackSupervisor var10 = var9.mStackSupervisor;
    ActivityTaskManagerService var11 = this.mService;
    RootActivityContainer var12 = var11.mRootActivityContainer;
    ActivityTaskManagerService var13 = this.mService;
    WindowManagerService var14 = var13.mWindowManager;
    ActivityStack var16 = getStack();
    ActivityStack var22 = var10.getReparentTargetStack(this,param2,var20);
    int var23 = var22.mDisplayId;
    boolean var25 = canBeLaunchedOnDisplay(var23);
    ActivityRecord var28 = var22.getResumedActivity();
    ActivityRecord var30 = var22.topRunningActivityLocked();
    boolean var32 = var22.startPausingLocked(0,0,0,0);
    int var37 = var22.getWindowingMode();
    ActivityRecord var39 = getTopActivity();
    int var41 = getWindowingMode();
    boolean var43 = TaskRecord.replaceWindowsOnTaskMove(var41,var37);
    IApplicationToken$Stub var50 = var39.appToken;
    var14.setWillReplaceWindow(var50,param5);
    var14.deferSurfaceLayout();
    ActivityRecord var56 = topRunningActivityLocked();
    boolean var59 = var12.isTopDisplayFocusedStack(var16);
    ActivityRecord var61 = topRunningActivityLocked();
    ActivityRecord var69 = var16.getResumedActivity();
    ActivityRecord var76 = var16.mPausingActivity;
    boolean var81 = var16.isTopStackOnDisplay();
    ActivityRecord var83 = var16.topRunningActivityLocked();
    int var95 = var22.getAdjustedPositionForTask(this,param3,0);
    Task var97 = this.mTask;
    TaskStack var99 = var22.getTaskStack();
    var97.reparent(var99,var95,var103);
    var16.removeTask(this,param8,var107);
    var22.addTask(this,var95,0,param8);
    var10.scheduleUpdatePictureInPictureModeIfNeeded(this,var16);
    IVoiceInteractionSession var112 = this.voiceSession;
    IVoiceInteractionSession var118 = this.voiceSession;
    Intent var119 = this.intent;
    int var120 = this.taskId;
    var118.taskStarted(var119,var120);
    var22.moveToFrontAndResumeStateIfNeeded(var56,var105,var73,var79,param8);
    ActivityTaskManagerService var133 = this.mService;
    ActivityStackSupervisor var134 = var133.mStackSupervisor;
    ArrayList var135 = var134.mNoAnimActivities;
    boolean var137 = var135.add(var39);
    var22.prepareFreezingTaskBounds();
    Rect var145 = getRequestedOverrideBounds();
    Rect var149 = var22.getRequestedOverrideBounds();
    boolean var151 = Objects.equals(var145,var149);
    Rect var193 = getLaunchBounds();
    ActivityTaskManagerService var194 = this.mService;
    ActivityStackSupervisor var195 = var194.mStackSupervisor;
    LaunchParamsController var197 = var195.getLaunchParamsController();
    boolean var199 = var197.layoutTask(this,0);
    boolean var207 = resize(var200,2,var205,param6);
    var14.continueSurfaceLayout();
    int var241 = getWindowingMode();
    var10.handleNonResizableTaskIfNeeded(this,var241,0,var22);
    boolean var243<PATH_SEP>ActivityTaskManagerService var5 = this.mActivityTaskManager;
    var5.moveTaskToStack(param2,param3,param4);
    WindowManagerGlobalLock var8 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    long var11 = Binder.clearCallingIdentity();
    RootActivityContainer var12 = this.mRootActivityContainer;
    TaskRecord var14 = var12.anyTaskForId(param2);
    RootActivityContainer var16 = this.mRootActivityContainer;
    ActivityStack var18 = var16.getStack(param3);
    boolean var31 = var18.isActivityTypeStandardOrUndefined();
    boolean var49 = var18.inSplitScreenPrimaryWindowingMode();
    WindowManagerService var50 = this.mWindowManager;
    var50.setDockedStackCreateState(0,0);
    boolean var57 = var14.reparent(var18,param4,1,1,0,moveTaskToStack);
    boolean var13 = reparent(param2,var10,param4,param5,param6,1,param7);
    ActivityTaskManagerService var9 = this.mService;
    ActivityStackSupervisor var10 = var9.mStackSupervisor;
    ActivityTaskManagerService var11 = this.mService;
    RootActivityContainer var12 = var11.mRootActivityContainer;
    ActivityTaskManagerService var13 = this.mService;
    WindowManagerService var14 = var13.mWindowManager;
    ActivityStack var16 = getStack();
    ActivityStack var22 = var10.getReparentTargetStack(this,param2,var20);
    int var23 = var22.mDisplayId;
    boolean var25 = canBeLaunchedOnDisplay(var23);
    ActivityRecord var28 = var22.getResumedActivity();
    ActivityRecord var30 = var22.topRunningActivityLocked();
    boolean var32 = var22.startPausingLocked(0,0,0,0);
    int var37 = var22.getWindowingMode();
    ActivityRecord var39 = getTopActivity();
    int var41 = getWindowingMode();
    boolean var43 = TaskRecord.replaceWindowsOnTaskMove(var41,var37);
    IApplicationToken$Stub var50 = var39.appToken;
    var14.setWillReplaceWindow(var50,param5);
    var14.deferSurfaceLayout();
    ActivityRecord var56 = topRunningActivityLocked();
    boolean var59 = var12.isTopDisplayFocusedStack(var16);
    ActivityRecord var61 = topRunningActivityLocked();
    ActivityRecord var69 = var16.getResumedActivity();
    ActivityRecord var76 = var16.mPausingActivity;
    boolean var81 = var16.isTopStackOnDisplay();
    ActivityRecord var83 = var16.topRunningActivityLocked();
    int var95 = var22.getAdjustedPositionForTask(this,param3,0);
    Task var97 = this.mTask;
    TaskStack var99 = var22.getTaskStack();
    var97.reparent(var99,var95,var103);
    var16.removeTask(this,param8,var107);
    var22.addTask(this,var95,0,param8);
    var10.scheduleUpdatePictureInPictureModeIfNeeded(this,var16);
    IVoiceInteractionSession var112 = this.voiceSession;
    IVoiceInteractionSession var118 = this.voiceSession;
    Intent var119 = this.intent;
    int var120 = this.taskId;
    var118.taskStarted(var119,var120);
    var22.moveToFrontAndResumeStateIfNeeded(var56,var105,var73,var79,param8);
    ActivityTaskManagerService var133 = this.mService;
    ActivityStackSupervisor var134 = var133.mStackSupervisor;
    ArrayList var135 = var134.mNoAnimActivities;
    boolean var137 = var135.add(var39);
    var22.prepareFreezingTaskBounds();
    Rect var145 = getRequestedOverrideBounds();
    Rect var149 = var22.getRequestedOverrideBounds();
    boolean var151 = Objects.equals(var145,var149);
    Rect var193 = getLaunchBounds();
    boolean var207 = resize(var200,2,var205,param6);
    var14.continueSurfaceLayout();
    IApplicationToken$Stub var226 = var39.appToken;
    var14.scheduleClearWillReplaceWindows(var226,var227);<PATH_SEP>ActivityTaskManagerService var5 = this.mActivityTaskManager;
    var5.moveTaskToStack(param2,param3,param4);
    WindowManagerGlobalLock var8 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    long var11 = Binder.clearCallingIdentity();
    RootActivityContainer var12 = this.mRootActivityContainer;
    TaskRecord var14 = var12.anyTaskForId(param2);
    RootActivityContainer var16 = this.mRootActivityContainer;
    ActivityStack var18 = var16.getStack(param3);
    boolean var31 = var18.isActivityTypeStandardOrUndefined();
    boolean var49 = var18.inSplitScreenPrimaryWindowingMode();
    WindowManagerService var50 = this.mWindowManager;
    var50.setDockedStackCreateState(0,0);
    boolean var57 = var14.reparent(var18,param4,1,1,0,moveTaskToStack);
    boolean var13 = reparent(param2,var10,param4,param5,param6,1,param7);
    ActivityTaskManagerService var9 = this.mService;
    ActivityStackSupervisor var10 = var9.mStackSupervisor;
    ActivityTaskManagerService var11 = this.mService;
    RootActivityContainer var12 = var11.mRootActivityContainer;
    ActivityTaskManagerService var13 = this.mService;
    WindowManagerService var14 = var13.mWindowManager;
    ActivityStack var16 = getStack();
    ActivityStack var22 = var10.getReparentTargetStack(this,param2,var20);
    int var23 = var22.mDisplayId;
    boolean var25 = canBeLaunchedOnDisplay(var23);
    ActivityRecord var28 = var22.getResumedActivity();
    ActivityRecord var30 = var22.topRunningActivityLocked();
    boolean var32 = var22.startPausingLocked(0,0,0,0);
    int var37 = var22.getWindowingMode();
    ActivityRecord var39 = getTopActivity();
    int var41 = getWindowingMode();
    boolean var43 = TaskRecord.replaceWindowsOnTaskMove(var41,var37);
    IApplicationToken$Stub var50 = var39.appToken;
    var14.setWillReplaceWindow(var50,param5);
    var14.deferSurfaceLayout();
    ActivityRecord var56 = topRunningActivityLocked();
    boolean var59 = var12.isTopDisplayFocusedStack(var16);
    ActivityRecord var61 = topRunningActivityLocked();
    ActivityRecord var69 = var16.getResumedActivity();
    ActivityRecord var76 = var16.mPausingActivity;
    boolean var81 = var16.isTopStackOnDisplay();
    ActivityRecord var83 = var16.topRunningActivityLocked();
    int var95 = var22.getAdjustedPositionForTask(this,param3,0);
    Task var97 = this.mTask;
    TaskStack var99 = var22.getTaskStack();
    var97.reparent(var99,var95,var103);
    var16.removeTask(this,param8,var107);
    var22.addTask(this,var95,0,param8);
    var10.scheduleUpdatePictureInPictureModeIfNeeded(this,var16);
    IVoiceInteractionSession var112 = this.voiceSession;
    IVoiceInteractionSession var118 = this.voiceSession;
    Intent var119 = this.intent;
    int var120 = this.taskId;
    var118.taskStarted(var119,var120);
    var22.moveToFrontAndResumeStateIfNeeded(var56,var105,var73,var79,param8);
    ActivityTaskManagerService var133 = this.mService;
    ActivityStackSupervisor var134 = var133.mStackSupervisor;
    ArrayList var135 = var134.mNoAnimActivities;
    boolean var137 = var135.add(var39);
    var22.prepareFreezingTaskBounds();
    Rect var145 = getRequestedOverrideBounds();
    Rect var149 = var22.getRequestedOverrideBounds();
    boolean var151 = Objects.equals(var145,var149);
    Rect var193 = getLaunchBounds();
    boolean var207 = resize(var200,2,var205,param6);
    var14.continueSurfaceLayout();
    var12.ensureActivitiesVisible(0,0,var232);{var12.ensureActivitiesVisible(0,0,var232);};
    boolean var235 = var12.resumeFocusedStacksTopActivities();
    int var241 = getWindowingMode();
    var10.handleNonResizableTaskIfNeeded(this,var241,0,var22);
    boolean var243<PATH_SEP>ActivityTaskManagerService var5 = this.mActivityTaskManager;
    var5.moveTaskToStack(param2,param3,param4);
    WindowManagerGlobalLock var8 = this.mGlobalLock;
    WindowManagerService.boostPriorityForLockedSection();
    long var11 = Binder.clearCallingIdentity();
    RootActivityContainer var12 = this.mRootActivityContainer;
    TaskRecord var14 = var12.anyTaskForId(param2);
    RootActivityContainer var16 = this.mRootActivityContainer;
    ActivityStack var18 = var16.getStack(param3);
    boolean var31 = var18.isActivityTypeStandardOrUndefined();
    boolean var49 = var18.inSplitScreenPrimaryWindowingMode();
    WindowManagerService var50 = this.mWindowManager;
    var50.setDockedStackCreateState(0,0);
    boolean var57 = var14.reparent(var18,param4,1,1,0,moveTaskToStack);
    boolean var13 = reparent(param2,var10,param4,param5,param6,1,param7);
    ActivityTaskManagerService var9 = this.mService;
    ActivityStackSupervisor var10 = var9.mStackSupervisor;
    ActivityTaskManagerService var11 = this.mService;
    RootActivityContainer var12 = var11.mRootActivityContainer;
    ActivityTaskManagerService var13 = this.mService;
    WindowManagerService var14 = var13.mWindowManager;
    ActivityStack var16 = getStack();
    ActivityStack var22 = var10.getReparentTargetStack(this,param2,var20);
    int var23 = var22.mDisplayId;
    boolean var25 = canBeLaunchedOnDisplay(var23);
    ActivityRecord var28 = var22.getResumedActivity();
    ActivityRecord var30 = var22.topRunningActivityLocked();
    boolean var32 = var22.startPausingLocked(0,0,0,0);
    int var37 = var22.getWindowingMode();
    ActivityRecord var39 = getTopActivity();
    int var41 = getWindowingMode();
    boolean var43 = TaskRecord.replaceWindowsOnTaskMove(var41,var37);
    IApplicationToken$Stub var50 = var39.appToken;
    var14.setWillReplaceWindow(var50,param5);
    var14.deferSurfaceLayout();
    ActivityRecord var56 = topRunningActivityLocked();
    boolean var59 = var12.isTopDisplayFocusedStack(var16);
    ActivityRecord var61 = topRunningActivityLocked();
    ActivityRecord var69 = var16.getResumedActivity();
    ActivityRecord var76 = var16.mPausingActivity;
    boolean var81 = var16.isTopStackOnDisplay();
    ActivityRecord var83 = var16.topRunningActivityLocked();
    int var95 = var22.getAdjustedPositionForTask(this,param3,0);
    Task var97 = this.mTask;
    TaskStack var99 = var22.getTaskStack();
    var97.reparent(var99,var95,var103);
    var16.removeTask(this,param8,var107);
    var22.addTask(this,var95,0,param8);
    var10.scheduleUpdatePictureInPictureModeIfNeeded(this,var16);
    IVoiceInteractionSession var112 = this.voiceSession;
    IVoiceInteractionSession var118 = this.voiceSession;
    Intent var119 = this.intent;
    int var120 = this.taskId;
    var118.taskStarted(var119,var120);
    var22.moveToFrontAndResumeStateIfNeeded(var56,var105,var73,var79,param8);
    ActivityTaskManagerService var133 = this.mService;
    ActivityStackSupervisor var134 = var133.mStackSupervisor;
    ArrayList var135 = var134.mNoAnimActivities;
    boolean var137 = var135.add(var39);
    var22.prepareFreezingTaskBounds();
    Rect var145 = getRequestedOverrideBounds();
    Rect var149 = var22.getRequestedOverrideBounds();
    boolean var151 = Objects.equals(var145,var149);
    ActivityTaskManagerService var163 = this.mService;
    ActivityStackSupervisor var164 = var163.mStackSupervisor;
    var164.moveRecentsStackToFront(param8);
    Rect var175 = var22.getRequestedOverrideBounds();
    boolean var178 = resize(var175,0,var176,param6);
    var14.continueSurfaceLayout();
    IApplicationToken$Stub var226 = var39.appToken;
    var14.scheduleClearWillReplaceWindows(var226,var227);
}