This is path 1 for the API with depth 2:
depth : 0
public long getMaximumDataBlockSize(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	return v3;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
depth : 2
public long doGetMaximumDataBlockSize(){
	long v1 = p0.getBlockDeviceSize();
	return phiInstruction;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public long getMaximumDataBlockSize(){
	int v1 = Binder.getCallingUid();
	PersistentDataBlockService.-$$Nest$menforceUid(this.this$0, v1);
	long v3 = PersistentDataBlockService.-$$Nest$mdoGetMaximumDataBlockSize(this.this$0);
	return v3;
}
-----
depth : 1
public void -$$Nest$menforceUid(PersistentDataBlockService p1, int p2){
	p1.enforceUid(p2);
	return;
}
-----
depth : 2
public void enforceUid(int p1){
	return;
}
-----
depth : 1
public long -$$Nest$mdoGetMaximumDataBlockSize(PersistentDataBlockService p1){
	long v1 = p1.doGetMaximumDataBlockSize();
	return v1;
}
-----
depth : 2
public long doGetMaximumDataBlockSize(){
	long v1 = p0.getBlockDeviceSize();
	return phiInstruction;
}
-----
