The method getOemUnlockEnabled has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public boolean getOemUnlockEnabled(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	boolean v2 = PersistentDataBlockService.-$$Nest$mdoGetOemUnlockEnabled(this.this$0);
	return v2;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
depth : 1
public boolean -$$Nest$mdoGetOemUnlockEnabled(PersistentDataBlockService p1){
	boolean v1 = p1.doGetOemUnlockEnabled();
	return v1;
}
-----
depth : 2
public boolean doGetOemUnlockEnabled(){
	DataInputStream v0 = new DataInputStream;
	FileInputStream v0 = new FileInputStream(v0);
	File v0 = new File(this.mDataBlockFile);
	int v3 = Slog.e(this.TAG, "partition not available");
	return 0;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public boolean getOemUnlockEnabled(){
	PersistentDataBlockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	boolean v2 = PersistentDataBlockService.-$$Nest$mdoGetOemUnlockEnabled(this.this$0);
	return v2;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(PersistentDataBlockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
depth : 1
public boolean -$$Nest$mdoGetOemUnlockEnabled(PersistentDataBlockService p1){
	boolean v1 = p1.doGetOemUnlockEnabled();
	return v1;
}
-----
depth : 2
public boolean doGetOemUnlockEnabled(){
	DataInputStream v0 = new DataInputStream;
	FileInputStream v0 = new FileInputStream(v0);
	File v0 = new File(this.mDataBlockFile);
	int v3 = Slog.e(this.TAG, "partition not available");
	return 0;
}
-----

and the following sink code:
['boolean v2 = PersistentDataBlockService.-$$Nest$mdoGetOemUnlockEnabled(this.this$0);\npublic boolean -$$Nest$mdoGetOemUnlockEnabled(PersistentDataBlockService p1){\nboolean v1 = p1.doGetOemUnlockEnabled();\npublic boolean doGetOemUnlockEnabled(){\nreturn 0;\nreturn v2;']

The method getOemUnlockEnabled has the following similar APIs:

- API Name: isOemUnlockAllowed()Z with Similarity Score: 0.8596096634864807
  - Access Control Level: SYS_OR_SIG and the following code:
OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, phiInstruction);
p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
Object v1 = LocalServices.getService(PersistentDataBlockManagerInterna.class);
v1.forceOemUnlockEnabled(p1);

- API Name: setOemUnlockEnabled(Z)V with Similarity Score: 0.844541072845459
  - Access Control Level: SYS_OR_SIG and the following code:
PersistentDataBlockService.-$$Nest$mdoSetOemUnlockEnabledLocked(this.this$0, p1);
public void doSetOemUnlockEnabledLocked(boolean p1){
FileChannel v1 = p0.getBlockOutputChannel();
long v2 = p0.getBlockDeviceSize();
FileChannel v3 = v1.position((v2 - 1));
SystemProperties.set("sys.oem_unlock_allowed", phiInstruction);

