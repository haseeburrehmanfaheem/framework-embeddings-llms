The method revokeSlicePermission has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void revokeSlicePermission(String p1, String p2, Uri p3){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	p0.enforceOwner(p1, p3, v3);
	this.mPermissions.revokeSliceAccess(p2, v3, p1, v3, p3);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void revokeSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.revokeUri(p5, v1);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	caughtException.addSuppressed(caughtException);
	int v7 = Log.e("SlicePermissionManager", "Can't read client", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void revokeUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.removePath(v5);
	return;
}
-----

and the following sink code:
['this.mPermissions.revokeSliceAccess(p2, v3, p1, v3, p3);\nSlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);\nSliceClientPermissions v3 = p0.getClient(v0);\nv3.revokeUri(p5, v1);', 'SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);\nObject v1 = this.mCachedClients.get(p1);\nSliceClientPermissions v7 = new SliceClientPermissions(p1,p0);\nObject v9 = this.mCachedClients.put(p1, v7);']

The method revokeSlicePermission has the following similar APIs:

- API Name: grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V with Similarity Score: 0.8643988370895386
  - Access Control Level: NONE and the following code:
SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
this.mPermissions.grantSliceAccess(p2, v3, p1, v3, p3);

- API Name: checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I with Similarity Score: 0.8621689081192017
  - Access Control Level: NORMAL and the following code:
SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
SliceClientPermissions v3 = p0.getClient(v0);
v3.grantUri(p5, v1);

