The method reboot has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void reboot(boolean p1){
	p0.enforceStatusBarService();
	int v2 = Binder.getCallingPid();
	ShutdownCheckPoints.recordCheckPoint(v2, phiInstruction);
	long v4 = Binder.clearCallingIdentity();
	this.mNotificationDelegate.prepareForPossibleShutdown();
	StatusBarManagerService$$ExternalSyntheticLambda2 v5 = new StatusBarManagerService$$ExternalSyntheticLambda2(p1,phiInstruction);
	boolean v7 = this.mHandler.post(v5);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void enforceStatusBarService(){
	return;
}
-----
depth : 1
public void recordCheckPoint(int p1, String p2){
	this.INSTANCE.recordCheckPointInternal(p1, p2);
	return;
}
-----
depth : 2
public void recordCheckPointInternal(int p1, String p2){
	ShutdownCheckPoints$SystemServerCheckPoint v1 = new ShutdownCheckPoints$SystemServerCheckPoint(this.mInjector,p2);
	p0.recordCheckPointInternal(phiInstruction);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("Binder shutdown checkpoint recorded with pid=");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.v("ShutdownCheckPoints", v7);
	return;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void reboot(boolean p1){
	p0.enforceStatusBarService();
	int v2 = Binder.getCallingPid();
	ShutdownCheckPoints.recordCheckPoint(v2, phiInstruction);
	long v4 = Binder.clearCallingIdentity();
	this.mNotificationDelegate.prepareForPossibleShutdown();
	StatusBarManagerService$$ExternalSyntheticLambda2 v5 = new StatusBarManagerService$$ExternalSyntheticLambda2(p1,phiInstruction);
	boolean v7 = this.mHandler.post(v5);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void enforceStatusBarService(){
	return;
}
-----
depth : 1
public void recordCheckPoint(int p1, String p2){
	this.INSTANCE.recordCheckPointInternal(p1, p2);
	return;
}
-----
depth : 2
public void recordCheckPointInternal(int p1, String p2){
	ShutdownCheckPoints$BinderCheckPoint v1 = new ShutdownCheckPoints$BinderCheckPoint(this.mInjector,p1,p2);
	p0.recordCheckPointInternal(phiInstruction);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("Binder shutdown checkpoint recorded with pid=");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.v("ShutdownCheckPoints", v7);
	return;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void reboot(boolean p1){
	p0.enforceStatusBarService();
	int v2 = Binder.getCallingPid();
	ShutdownCheckPoints.recordCheckPoint(v2, phiInstruction);
	long v4 = Binder.clearCallingIdentity();
	this.mNotificationDelegate.prepareForPossibleShutdown();
	StatusBarManagerService$$ExternalSyntheticLambda2 v5 = new StatusBarManagerService$$ExternalSyntheticLambda2(p1,phiInstruction);
	boolean v7 = this.mHandler.post(v5);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void enforceStatusBarService(){
	return;
}
-----
depth : 1
public void recordCheckPoint(int p1, String p2){
	this.INSTANCE.recordCheckPointInternal(p1, p2);
	return;
}
-----
depth : 2
public void recordCheckPointInternal(int p1, String p2){
	ShutdownCheckPoints$SystemServerCheckPoint v1 = new ShutdownCheckPoints$SystemServerCheckPoint(this.mInjector,p2);
	p0.recordCheckPointInternal(phiInstruction);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("Binder shutdown checkpoint recorded with pid=");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.v("ShutdownCheckPoints", v7);
	return;
}
-----

and the following sink code:
['int v2 = Binder.getCallingPid();\nShutdownCheckPoints.recordCheckPoint(v2, phiInstruction);', 'this.mNotificationDelegate.prepareForPossibleShutdown();\nStatusBarManagerService$$ExternalSyntheticLambda2 v5 = new StatusBarManagerService$$ExternalSyntheticLambda2(p1,phiInstruction);\nboolean v7 = this.mHandler.post(v5);']

The method reboot has the following similar APIs:

- API Name: restart()V with Similarity Score: 0.8587847948074341
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v4 = this.mHandler.post(v2);
StatusBarManagerService$$ExternalSyntheticLambda0 v2 = new StatusBarManagerService$$ExternalSyntheticLambda0(p0);

- API Name: shutdown()V with Similarity Score: 0.8577584624290466
  - Access Control Level: SYS_OR_SIG and the following code:
int v2 = Binder.getCallingPid();
ShutdownCheckPoints.recordCheckPoint(v2, "userrequested");
ShutdownCheckPoints$SystemServerCheckPoint v1 = new ShutdownCheckPoints$SystemServerCheckPoint(this.mInjector,p2);

