The method registerStatusBar has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public RegisterStatusBarResult registerStatusBar(IStatusBar p1){
	p0.enforceStatusBarService();
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("registerStatusBar bar=");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	int v6 = Slog.i("StatusBarManagerService", v5);
	this.mBar = p1;
	this.mDeathRecipient.linkToDeath();
	p0.notifyBarAttachChanged();
	ArrayMap v8 = new ArrayMap(this.mIcons);
	Object v10 = this.mDisplayUiState.get(0);
	ArraySet v11 = StatusBarManagerService$UiState.-$$Nest$fgetmTransientBarTypes(v10);
	int v12 = v11.size();
	[I v12 = new [I(v12);
	RegisterStatusBarResult v12 = new RegisterStatusBarResult(v8,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v12,v25);
	int v13 = p0.gatherDisableActionsLocked(this.mCurrentUserId, 1);
	int v14 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearance(v10);
	AppearanceRegion v15 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearanceRegions(v10);
	int v16 = StatusBarManagerService$UiState.-$$Nest$fgetmImeWindowVis(v10);
	int v17 = StatusBarManagerService$UiState.-$$Nest$fgetmImeBackDisposition(v10);
	boolean v18 = StatusBarManagerService$UiState.-$$Nest$fgetmShowImeSwitcher(v10);
	int v19 = p0.gatherDisableActionsLocked(this.mCurrentUserId, 2);
	IBinder v20 = StatusBarManagerService$UiState.-$$Nest$fgetmImeToken(v10);
	boolean v21 = StatusBarManagerService$UiState.-$$Nest$fgetmNavbarColorManagedByIme(v10);
	int v22 = StatusBarManagerService$UiState.-$$Nest$fgetmBehavior(v10);
	InsetsVisibilities v23 = StatusBarManagerService$UiState.-$$Nest$fgetmRequestedVisibilities(v10);
	String v24 = StatusBarManagerService$UiState.-$$Nest$fgetmPackageName(v10);
	LetterboxDetails v25 = StatusBarManagerService$UiState.-$$Nest$fgetmLetterboxDetails(v10);
	return v12;
}
-----
depth : 1
public void enforceStatusBarService(){
	return;
}
-----
depth : 1
public void linkToDeath(){
	IStatusBar v1 = StatusBarManagerService.-$$Nest$fgetmBar(this.this$0);
	IBinder v2 = v1.asBinder();
	StatusBarManagerService$DeathRecipient v3 = StatusBarManagerService.-$$Nest$fgetmDeathRecipient(this.this$0);
	v2.linkToDeath(v3, 0);
	int v5 = Slog.e("StatusBarManagerService", "Unable to register Death Recipient for status bar", caughtException);
	return;
}
-----
depth : 2
public IStatusBar -$$Nest$fgetmBar(StatusBarManagerService p1){
	return this.mBar;
}
-----
depth : 2
public StatusBarManagerService$DeathRecipient -$$Nest$fgetmDeathRecipient(StatusBarManagerService p1){
	return this.mDeathRecipient;
}
-----
depth : 1
public void notifyBarAttachChanged(){
	Handler v1 = UiThread.getHandler();
	StatusBarManagerService$$ExternalSyntheticLambda4 v1 = new StatusBarManagerService$$ExternalSyntheticLambda4(p0);
	boolean v3 = v1.post(v1);
	StatusBarManagerService$$ExternalSyntheticLambda5 v3 = new StatusBarManagerService$$ExternalSyntheticLambda5(p0);
	boolean v5 = this.mHandler.post(v3);
	return;
}
-----
depth : 2
public Handler getHandler(){
	UiThread.ensureThreadLocked();
	return this.sHandler;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public RegisterStatusBarResult registerStatusBar(IStatusBar p1){
	p0.enforceStatusBarService();
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("registerStatusBar bar=");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	int v6 = Slog.i("StatusBarManagerService", v5);
	this.mBar = p1;
	this.mDeathRecipient.linkToDeath();
	p0.notifyBarAttachChanged();
	ArrayMap v8 = new ArrayMap(this.mIcons);
	Object v10 = this.mDisplayUiState.get(0);
	ArraySet v11 = StatusBarManagerService$UiState.-$$Nest$fgetmTransientBarTypes(v10);
	int v12 = v11.size();
	[I v12 = new [I(v12);
	RegisterStatusBarResult v12 = new RegisterStatusBarResult(v8,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v12,v25);
	int v13 = p0.gatherDisableActionsLocked(this.mCurrentUserId, 1);
	int v14 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearance(v10);
	AppearanceRegion v15 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearanceRegions(v10);
	int v16 = StatusBarManagerService$UiState.-$$Nest$fgetmImeWindowVis(v10);
	int v17 = StatusBarManagerService$UiState.-$$Nest$fgetmImeBackDisposition(v10);
	boolean v18 = StatusBarManagerService$UiState.-$$Nest$fgetmShowImeSwitcher(v10);
	int v19 = p0.gatherDisableActionsLocked(this.mCurrentUserId, 2);
	IBinder v20 = StatusBarManagerService$UiState.-$$Nest$fgetmImeToken(v10);
	boolean v21 = StatusBarManagerService$UiState.-$$Nest$fgetmNavbarColorManagedByIme(v10);
	int v22 = StatusBarManagerService$UiState.-$$Nest$fgetmBehavior(v10);
	InsetsVisibilities v23 = StatusBarManagerService$UiState.-$$Nest$fgetmRequestedVisibilities(v10);
	String v24 = StatusBarManagerService$UiState.-$$Nest$fgetmPackageName(v10);
	LetterboxDetails v25 = StatusBarManagerService$UiState.-$$Nest$fgetmLetterboxDetails(v10);
	return v12;
}
-----
depth : 1
public void enforceStatusBarService(){
	return;
}
-----
depth : 1
public void linkToDeath(){
	IStatusBar v1 = StatusBarManagerService.-$$Nest$fgetmBar(this.this$0);
	IBinder v2 = v1.asBinder();
	StatusBarManagerService$DeathRecipient v3 = StatusBarManagerService.-$$Nest$fgetmDeathRecipient(this.this$0);
	v2.linkToDeath(v3, 0);
	return;
}
-----
depth : 2
public IStatusBar -$$Nest$fgetmBar(StatusBarManagerService p1){
	return this.mBar;
}
-----
depth : 2
public StatusBarManagerService$DeathRecipient -$$Nest$fgetmDeathRecipient(StatusBarManagerService p1){
	return this.mDeathRecipient;
}
-----
depth : 1
public void notifyBarAttachChanged(){
	Handler v1 = UiThread.getHandler();
	StatusBarManagerService$$ExternalSyntheticLambda4 v1 = new StatusBarManagerService$$ExternalSyntheticLambda4(p0);
	boolean v3 = v1.post(v1);
	StatusBarManagerService$$ExternalSyntheticLambda5 v3 = new StatusBarManagerService$$ExternalSyntheticLambda5(p0);
	boolean v5 = this.mHandler.post(v3);
	return;
}
-----
depth : 2
public Handler getHandler(){
	UiThread.ensureThreadLocked();
	return this.sHandler;
}
-----

and the following sink code:
['this.mBar = p1;\nArrayMap v8 = new ArrayMap(this.mIcons);\nObject v10 = this.mDisplayUiState.get(0);\nRegisterStatusBarResult v12 = new RegisterStatusBarResult(v8,v13,v14,v15,v16,v17,v18,v19,v20,v21,v22,v23,v24,v12,v25);\nreturn v12;']

The method registerStatusBar has the following similar APIs:

- API Name: setIcon(Ljava/lang/String;Ljava/lang/String;IILjava/lang/String;)V with Similarity Score: 0.801673173904419
  - Access Control Level: SYS_OR_SIG and the following code:
StatusBarIcon v1 = new StatusBarIcon(p2,UserHandle.SYSTEM,p3,p4,0,p5);
Object v3 = this.mIcons.put(p1, v1);
this.mBar.setIcon(p1, v1);

