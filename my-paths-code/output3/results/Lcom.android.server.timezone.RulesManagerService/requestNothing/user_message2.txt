The method requestNothing has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission("android.permission.UPDATE_TIME_ZONE_RULES");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v3);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v6 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v6);
	return;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 2
public CheckToken fromByteArray(byte[] p1){
	ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
	DataInputStream v1 = new DataInputStream(v0);
	int v3 = v1.readInt();
	long v4 = v1.readLong();
	long v5 = v1.readLong();
	CheckToken v5 = new CheckToken(v3,v5);
	PackageVersions v5 = new PackageVersions(v4,v5);
	v1.close();
	return v5;
}
-----
depth : 1
public void recordCheckResult(CheckToken p1, boolean p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("recordOperationResult: checkToken=");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append(" success=");
	StringBuilder v5 = v0.append(p2);
	String v6 = v0.toString();
	int v7 = Slog.i("timezone.PackageTracker", v6);
	boolean v8 = this.mPackageStatusStorage.markChecked(p1, p2);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append("recordCheckResult: could not update token=");
	StringBuilder v11 = v8.append(p1);
	StringBuilder v12 = v8.append(" with success=");
	StringBuilder v13 = v8.append(p2);
	StringBuilder v14 = v8.append(". Optimistic lock failure");
	String v15 = v8.toString();
	int v16 = Slog.i("timezone.PackageTracker", v15);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	return;
}
-----
depth : 2
public boolean markChecked(CheckToken p1, boolean p2){
	Integer v1 = Integer.valueOf(phiInstruction);
	boolean v2 = p0.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v1, CheckToken.mPackageVersions);
	return v2;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission("android.permission.UPDATE_TIME_ZONE_RULES");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v3);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v6 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v6);
	return;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 2
public CheckToken fromByteArray(byte[] p1){
	ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
	DataInputStream v1 = new DataInputStream(v0);
	int v3 = v1.readInt();
	long v4 = v1.readLong();
	long v5 = v1.readLong();
	CheckToken v5 = new CheckToken(v3,v5);
	PackageVersions v5 = new PackageVersions(v4,v5);
	v1.close();
	return v5;
}
-----
depth : 1
public void recordCheckResult(CheckToken p1, boolean p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("recordOperationResult: checkToken=");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append(" success=");
	StringBuilder v5 = v0.append(p2);
	String v6 = v0.toString();
	int v7 = Slog.i("timezone.PackageTracker", v6);
	boolean v8 = this.mPackageStatusStorage.markChecked(p1, p2);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append("recordCheckResult: could not update token=");
	StringBuilder v11 = v8.append(p1);
	StringBuilder v12 = v8.append(" with success=");
	StringBuilder v13 = v8.append(p2);
	StringBuilder v14 = v8.append(". Optimistic lock failure");
	String v15 = v8.toString();
	int v16 = Slog.i("timezone.PackageTracker", v15);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	return;
}
-----
depth : 2
public boolean markChecked(CheckToken p1, boolean p2){
	Integer v1 = Integer.valueOf(phiInstruction);
	boolean v2 = p0.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v1, CheckToken.mPackageVersions);
	return v2;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission("android.permission.UPDATE_TIME_ZONE_RULES");
	String v2 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v2);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v5 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v5);
	return;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneRequestNothing(String p1){
	int v1 = EventLog.writeEvent(51630, p1);
	return;
}
-----
depth : 1
public void recordCheckResult(CheckToken p1, boolean p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("recordOperationResult: checkToken=");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append(" success=");
	StringBuilder v5 = v0.append(p2);
	String v6 = v0.toString();
	int v7 = Slog.i("timezone.PackageTracker", v6);
	boolean v8 = this.mPackageStatusStorage.markChecked(p1, p2);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append("recordCheckResult: could not update token=");
	StringBuilder v11 = v8.append(p1);
	StringBuilder v12 = v8.append(" with success=");
	StringBuilder v13 = v8.append(p2);
	StringBuilder v14 = v8.append(". Optimistic lock failure");
	String v15 = v8.toString();
	int v16 = Slog.i("timezone.PackageTracker", v15);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	return;
}
-----
depth : 2
public boolean markChecked(CheckToken p1, boolean p2){
	Integer v1 = Integer.valueOf(phiInstruction);
	boolean v2 = p0.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v1, CheckToken.mPackageVersions);
	return v2;
}
-----

and the following sink code:
['CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);\nCheckToken v1 = CheckToken.fromByteArray(p1);\nint v3 = v1.readInt();\nlong v4 = v1.readLong();\nlong v5 = v1.readLong();\nCheckToken v5 = new CheckToken(v3,v5);', 'this.mPackageTracker.recordCheckResult(phiInstruction, p2);\nStringBuilder v0 = new StringBuilder();\nStringBuilder v2 = v0.append("recordOperationResult: checkToken=");\nStringBuilder v3 = v0.append(p1);\nStringBuilder v4 = v0.append(" success=");\nStringBuilder v5 = v0.append(p2);\nString v6 = v0.toString();\nboolean v8 = this.mPackageStatusStorage.markChecked(p1, p2);']

The method requestNothing has the following similar APIs:

- API Name: requestUninstall([BLandroid/app/timezone/ICallback;)I with Similarity Score: 0.880966067314148
  - Access Control Level: NONE and the following code:
CheckToken v1 = CheckToken.fromByteArray(p1);
int v3 = v1.readInt();
long v4 = v1.readLong();
long v5 = v1.readLong();
CheckToken v5 = new CheckToken(v3,v5);

- API Name: requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I with Similarity Score: 0.8756322860717773
  - Access Control Level: NONE and the following code:
CheckToken v1 = CheckToken.fromByteArray(p1);
ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
DataInputStream v1 = new DataInputStream(v0);
int v3 = v1.readInt();
long v4 = v1.readLong();
long v5 = v1.readLong();
CheckToken v5 = new CheckToken(v3,v5);

