The method setString has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void setString(String p1, String p2, int p3){
	p0.checkWritePermission(p3);
	this.mStorage.setString(p1, p2, p3);
	return;
}
-----
depth : 1
public void checkWritePermission(int p1){
	return;
}
-----
depth : 1
public void setString(String p1, String p2, int p3){
	Preconditions.checkArgument(phiInstruction, "cannot store lock settings for FRP user");
	p0.writeKeyValue(p1, p2, p3);
	boolean v3 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
	BackupManager.dataChanged("com.android.providers.settings");
	return;
}
-----
depth : 2
public void writeKeyValue(String p1, String p2, int p3){
	SQLiteDatabase v1 = this.mOpenHelper.getWritableDatabase();
	p0.writeKeyValue(v1, p1, p2, p3);
	return;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void setString(String p1, String p2, int p3){
	p0.checkWritePermission(p3);
	this.mStorage.setString(p1, p2, p3);
	return;
}
-----
depth : 1
public void checkWritePermission(int p1){
	return;
}
-----
depth : 1
public void setString(String p1, String p2, int p3){
	Preconditions.checkArgument(phiInstruction, "cannot store lock settings for FRP user");
	p0.writeKeyValue(p1, p2, p3);
	boolean v3 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
	return;
}
-----
depth : 2
public void writeKeyValue(String p1, String p2, int p3){
	SQLiteDatabase v1 = this.mOpenHelper.getWritableDatabase();
	p0.writeKeyValue(v1, p1, p2, p3);
	return;
}
-----

and the following sink code:
['this.mStorage.setString(p1, p2, p3);\np0.writeKeyValue(p1, p2, p3);\nSQLiteDatabase v1 = this.mOpenHelper.getWritableDatabase();\np0.writeKeyValue(v1, p1, p2, p3);']

The method setString has the following similar APIs:

- API Name: setLong(Ljava/lang/String;JI)V with Similarity Score: 0.8488759398460388
  - Access Control Level: SYS_OR_SIG and the following code:
this.mStorage.setLong(p1, p2, p3);
p0.setString(p1, v1, p3);
p0.writeKeyValue(p1, p2, p3);

