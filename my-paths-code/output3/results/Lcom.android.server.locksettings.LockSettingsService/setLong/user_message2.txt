The method setLong has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void setLong(String p1, long p2, int p3){
	p0.checkWritePermission(p3);
	this.mStorage.setLong(p1, p2, p3);
	return;
}
-----
depth : 1
public void checkWritePermission(int p1){
	return;
}
-----
depth : 1
public void setLong(String p1, long p2, int p3){
	String v1 = Long.toString(p2);
	p0.setString(p1, v1, p3);
	return;
}
-----
depth : 2
public void setString(String p1, String p2, int p3){
	Preconditions.checkArgument(phiInstruction, "cannot store lock settings for FRP user");
	p0.writeKeyValue(p1, p2, p3);
	boolean v3 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
	BackupManager.dataChanged("com.android.providers.settings");
	return;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void setLong(String p1, long p2, int p3){
	p0.checkWritePermission(p3);
	this.mStorage.setLong(p1, p2, p3);
	return;
}
-----
depth : 1
public void checkWritePermission(int p1){
	return;
}
-----
depth : 1
public void setLong(String p1, long p2, int p3){
	String v1 = Long.toString(p2);
	p0.setString(p1, v1, p3);
	return;
}
-----
depth : 2
public void setString(String p1, String p2, int p3){
	Preconditions.checkArgument(phiInstruction, "cannot store lock settings for FRP user");
	p0.writeKeyValue(p1, p2, p3);
	boolean v3 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
	return;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void setLong(String p1, long p2, int p3){
	p0.checkWritePermission(p3);
	this.mStorage.setLong(p1, p2, p3);
	return;
}
-----
depth : 1
public void checkWritePermission(int p1){
	return;
}
-----
depth : 1
public void setLong(String p1, long p2, int p3){
	String v1 = Long.toString(p2);
	p0.setString(p1, v1, p3);
	return;
}
-----
depth : 2
public void setString(String p1, String p2, int p3){
	Preconditions.checkArgument(phiInstruction, "cannot store lock settings for FRP user");
	p0.writeKeyValue(p1, p2, p3);
	boolean v3 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
	BackupManager.dataChanged("com.android.providers.settings");
	return;
}
-----

and the following sink code:
['this.mStorage.setLong(p1, p2, p3);\np0.setString(p1, v1, p3);\np0.writeKeyValue(p1, p2, p3);', 'Preconditions.checkArgument(phiInstruction, "cannot store lock settings for FRP user");\nboolean v3 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);\nBackupManager.dataChanged("com.android.providers.settings");']

The method setLong has the following similar APIs:

- API Name: setString(Ljava/lang/String;Ljava/lang/String;I)V with Similarity Score: 0.8488759398460388
  - Access Control Level: SYS_OR_SIG and the following code:
this.mStorage.setString(p1, p2, p3);
p0.writeKeyValue(p1, p2, p3);
SQLiteDatabase v1 = this.mOpenHelper.getWritableDatabase();
p0.writeKeyValue(v1, p1, p2, p3);

- API Name: getLong(Ljava/lang/String;JI)J with Similarity Score: 0.8038596510887146
  - Access Control Level: SYS_OR_SIG and the following code:
long v2 = this.mStorage.getLong(p1, p2, p3);
return v2;

