The method getLong has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public long getLong(String p1, long p2, int p3){
	p0.checkReadPermission(p1, p3);
	long v2 = this.mStorage.getLong(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void checkReadPermission(String p1, int p2){
	int v1 = Binder.getCallingUid();
	return;
}
-----
depth : 1
public long getLong(String p1, long p2, int p3){
	String v1 = p0.getString(p1, 0, p3);
	boolean v2 = TextUtils.isEmpty(v1);
	return phiInstruction;
}
-----
depth : 2
public String getString(String p1, String p2, int p3){
	boolean v1 = "legacy_lock_pattern_enabled".equals(p1);
	String v2 = p0.readKeyValue(phiInstruction, p2, p3);
	return v2;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public long getLong(String p1, long p2, int p3){
	p0.checkReadPermission(p1, p3);
	long v2 = this.mStorage.getLong(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void checkReadPermission(String p1, int p2){
	int v1 = Binder.getCallingUid();
	return;
}
-----
depth : 1
public long getLong(String p1, long p2, int p3){
	String v1 = p0.getString(p1, 0, p3);
	boolean v2 = TextUtils.isEmpty(v1);
	long v3 = Long.parseLong(v1);
	return phiInstruction;
}
-----
depth : 2
public String getString(String p1, String p2, int p3){
	boolean v1 = "legacy_lock_pattern_enabled".equals(p1);
	String v2 = p0.readKeyValue(phiInstruction, p2, p3);
	return v2;
}
-----

and the following sink code:
['long v2 = this.mStorage.getLong(p1, p2, p3);\nreturn v2;', 'String v1 = p0.getString(p1, 0, p3);\nboolean v2 = TextUtils.isEmpty(v1);']

The method getLong has the following similar APIs:

- API Name: getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; with Similarity Score: 0.9139488935470581
  - Access Control Level: SYS_OR_SIG and the following code:
String v2 = this.mStorage.getString(p1, p2, p3);
return v2;

- API Name: setLong(Ljava/lang/String;JI)V with Similarity Score: 0.8038596510887146
  - Access Control Level: SYS_OR_SIG and the following code:
this.mStorage.setLong(p1, p2, p3);
p0.setString(p1, v1, p3);
p0.writeKeyValue(p1, p2, p3);

