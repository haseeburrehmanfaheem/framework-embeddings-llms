The method getRecoveryStatus has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public Map getRecoveryStatus(){
	Map v1 = this.mRecoverableKeyStoreManager.getRecoveryStatus();
	return v1;
}
-----
depth : 1
public Map getRecoveryStatus(){
	p0.checkRecoverKeyStorePermission();
	int v2 = Binder.getCallingUid();
	Map v3 = this.mDatabase.getStatusForAllKeys(v2);
	return v3;
}
-----
depth : 2
public void checkRecoverKeyStorePermission(){
	int v8 = UserHandle.getCallingUserId();
	int v9 = Binder.getCallingUid();
	this.mCleanupManager.registerRecoveryAgent(v8, v9);
	return;
}
-----
depth : 2
public Map getStatusForAllKeys(int p1){
	SQLiteDatabase v1 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v1 = new String(3);
	String v1 = new String(1);
	String v2 = Integer.toString(p1);
	Cursor v3 = v1.query("keys", v1, "uid = ?", v1, 0, 0, 0);
	HashMap v3 = new HashMap();
	boolean v5 = v3.moveToNext();
	v3.close();
	return v3;
}
-----

and the following sink code:
['Map v1 = this.mRecoverableKeyStoreManager.getRecoveryStatus();\nreturn v1;', 'int v2 = Binder.getCallingUid();\nMap v3 = this.mDatabase.getStatusForAllKeys(v2);\nreturn v3;']

The method getRecoveryStatus has the following similar APIs:

- API Name: setRecoveryStatus(Ljava/lang/String;I)V with Similarity Score: 0.8411587476730347
  - Access Control Level: SYS_OR_SIG and the following code:
this.mRecoverableKeyStoreManager.setRecoveryStatus(p1, p2);
p0.checkRecoverKeyStorePermission();
int v4 = this.mDatabase.setRecoveryStatus(v3, p1, p2);

