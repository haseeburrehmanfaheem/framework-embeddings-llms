The method removeCachedUnifiedChallenge has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void removeCachedUnifiedChallenge(int p1){
	this.mManagedProfilePasswordCache.removePassword(p1);
	return;
}
-----
depth : 1
public void removePassword(int p1){
	String v1 = ManagedProfilePasswordCache.getEncryptionKeyName(p1);
	String v2 = ManagedProfilePasswordCache.getLegacyEncryptionKeyName(p1);
	boolean v3 = this.mKeyStore.containsAlias(v1);
	this.mKeyStore.deleteEntry(v1);
	boolean v5 = this.mKeyStore.containsAlias(v2);
	int v6 = Slog.d("ManagedProfilePasswordCache", "Cannot delete key", caughtException);
	boolean v7 = this.mEncryptedPasswords.contains(p1);
	Object v8 = this.mEncryptedPasswords.get(p1);
	Arrays.fill(v8, 0);
	this.mEncryptedPasswords.remove(p1);
	return;
}
-----
depth : 2
public String getEncryptionKeyName(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("com.android.server.locksettings.unified_profile_cache_v2_");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	return v4;
}
-----
depth : 2
public String getLegacyEncryptionKeyName(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("com.android.server.locksettings.unified_profile_cache_");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	return v4;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void removeCachedUnifiedChallenge(int p1){
	this.mManagedProfilePasswordCache.removePassword(p1);
	return;
}
-----
depth : 1
public void removePassword(int p1){
	String v1 = ManagedProfilePasswordCache.getEncryptionKeyName(p1);
	String v2 = ManagedProfilePasswordCache.getLegacyEncryptionKeyName(p1);
	boolean v3 = this.mKeyStore.containsAlias(v1);
	this.mKeyStore.deleteEntry(v1);
	int v5 = Slog.d("ManagedProfilePasswordCache", "Cannot delete key", caughtException);
	boolean v6 = this.mEncryptedPasswords.contains(p1);
	Object v7 = this.mEncryptedPasswords.get(p1);
	Arrays.fill(v7, 0);
	this.mEncryptedPasswords.remove(p1);
	return;
}
-----
depth : 2
public String getEncryptionKeyName(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("com.android.server.locksettings.unified_profile_cache_v2_");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	return v4;
}
-----
depth : 2
public String getLegacyEncryptionKeyName(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("com.android.server.locksettings.unified_profile_cache_");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	return v4;
}
-----

and the following sink code:
['String v1 = ManagedProfilePasswordCache.getEncryptionKeyName(p1);\nString v2 = ManagedProfilePasswordCache.getLegacyEncryptionKeyName(p1);\nthis.mKeyStore.deleteEntry(v1);', 'StringBuilder v0 = new StringBuilder();\nStringBuilder v2 = v0.append("com.android.server.locksettings.unified_profile_cache_v2_");\nStringBuilder v3 = v0.append(p1);\nString v4 = v0.toString();\nreturn v4;']

The method removeCachedUnifiedChallenge has the following similar APIs:

- API Name: tryUnlockWithCachedUnifiedChallenge(I)Z with Similarity Score: 0.8277599215507507
  - Access Control Level: SYS_OR_SIG and the following code:
Object v1 = this.mEncryptedPasswords.get(p1);
String v2 = ManagedProfilePasswordCache.getEncryptionKeyName(p1);
Key v3 = this.mKeyStore.getKey(v2, 0);

