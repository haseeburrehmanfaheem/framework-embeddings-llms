This is path 1 for the API with depth 2:
depth : 0
public void resetKeyStore(int p1){
	p0.checkWritePermission(p1);
	ArrayList v1 = new ArrayList();
	ArrayList v2 = new ArrayList();
	List v4 = this.mUserManager.getProfiles(p1);
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	[I v7 = this.mUserManager.getProfileIdsWithDisabled(p1);
	UserInfo v8 = this.mUserManager.getUserInfo(p1);
	boolean v9 = v8.isPrimary();
	int v10 = AndroidKeyStoreMaintenance.clearNamespace(2, 102);
	int v11 = v1.size();
	return;
}
-----
depth : 1
public void checkWritePermission(int p1){
	return;
}
-----
depth : 1
public boolean isPrimary(){
	return phiInstruction;
}
-----
depth : 1
public int clearNamespace(int p1, long p2){
	IKeystoreMaintenance v1 = AndroidKeyStoreMaintenance.getService();
	v1.clearNamespace(p1, p2);
	int v3 = Log.e("AndroidKeyStoreMaintenance", "clearNamespace failed", caughtException);
	return ServiceSpecificException.errorCode;
}
-----
depth : 2
public IKeystoreMaintenance getService(){
	IBinder v1 = ServiceManager.checkService("android.security.maintenance");
	IKeystoreMaintenance v2 = IKeystoreMaintenance$Stub.asInterface(v1);
	return v2;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void resetKeyStore(int p1){
	p0.checkWritePermission(p1);
	ArrayList v1 = new ArrayList();
	ArrayList v2 = new ArrayList();
	List v4 = this.mUserManager.getProfiles(p1);
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	[I v7 = this.mUserManager.getProfileIdsWithDisabled(p1);
	UserInfo v8 = this.mUserManager.getUserInfo(p1);
	boolean v9 = v8.isPrimary();
	int v10 = AndroidKeyStoreMaintenance.clearNamespace(2, 102);
	int v11 = v1.size();
	return;
}
-----
depth : 1
public void checkWritePermission(int p1){
	return;
}
-----
depth : 1
public boolean isPrimary(){
	return phiInstruction;
}
-----
depth : 1
public int clearNamespace(int p1, long p2){
	IKeystoreMaintenance v1 = AndroidKeyStoreMaintenance.getService();
	v1.clearNamespace(p1, p2);
	int v3 = Log.e("AndroidKeyStoreMaintenance", "clearNamespace failed", caughtException);
	return ServiceSpecificException.errorCode;
}
-----
depth : 2
public IKeystoreMaintenance getService(){
	IBinder v1 = ServiceManager.checkService("android.security.maintenance");
	IKeystoreMaintenance v2 = IKeystoreMaintenance$Stub.asInterface(v1);
	return v2;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public void resetKeyStore(int p1){
	p0.checkWritePermission(p1);
	ArrayList v1 = new ArrayList();
	ArrayList v2 = new ArrayList();
	List v4 = this.mUserManager.getProfiles(p1);
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	[I v7 = this.mUserManager.getProfileIdsWithDisabled(p1);
	UserInfo v8 = this.mUserManager.getUserInfo(p1);
	boolean v9 = v8.isPrimary();
	int v10 = AndroidKeyStoreMaintenance.clearNamespace(2, 102);
	int v11 = v1.size();
	return;
}
-----
depth : 1
public void checkWritePermission(int p1){
	return;
}
-----
depth : 1
public boolean isPrimary(){
	return phiInstruction;
}
-----
depth : 1
public int clearNamespace(int p1, long p2){
	IKeystoreMaintenance v1 = AndroidKeyStoreMaintenance.getService();
	int v2 = Log.e("AndroidKeyStoreMaintenance", "clearNamespace failed", caughtException);
	return ServiceSpecificException.errorCode;
}
-----
depth : 2
public IKeystoreMaintenance getService(){
	IBinder v1 = ServiceManager.checkService("android.security.maintenance");
	IKeystoreMaintenance v2 = IKeystoreMaintenance$Stub.asInterface(v1);
	return v2;
}
-----
