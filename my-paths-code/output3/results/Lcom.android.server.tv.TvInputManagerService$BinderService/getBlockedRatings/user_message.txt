This is path 1 for the API with depth 2:
depth : 0
public List getBlockedRatings(int p1){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p1, "getBlockedRatings");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	ArrayList v6 = new ArrayList();
	PersistentDataStore v8 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v6);
	TvContentRating v9 = v8.getBlockedRatings();
	Binder.restoreCallingIdentity(v4);
	return v6;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$UserState -$$Nest$mgetOrCreateUserStateLocked(TvInputManagerService p1, int p2){
	TvInputManagerService$UserState v1 = p1.getOrCreateUserStateLocked(p2);
	return v1;
}
-----
depth : 2
public TvInputManagerService$UserState getOrCreateUserStateLocked(int p1){
	TvInputManagerService$UserState v1 = p0.getUserStateLocked(p1);
	TvInputManagerService$UserState v1 = new TvInputManagerService$UserState(this.mContext,p1,0);
	this.mUserStates.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public TvContentRating getBlockedRatings(){
	p0.loadIfNeeded();
	int v2 = this.mBlockedRatings.size();
	TvContentRating v2 = new TvContentRating(v2);
	Object v3 = this.mBlockedRatings.toArray(v2);
	return v3;
}
-----
depth : 2
public void loadIfNeeded(){
	p0.load();
	this.mLoaded = 1;
	return;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public List getBlockedRatings(int p1){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p1, "getBlockedRatings");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	ArrayList v6 = new ArrayList();
	PersistentDataStore v8 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v6);
	TvContentRating v9 = v8.getBlockedRatings();
	Binder.restoreCallingIdentity(v4);
	return v6;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$UserState -$$Nest$mgetOrCreateUserStateLocked(TvInputManagerService p1, int p2){
	TvInputManagerService$UserState v1 = p1.getOrCreateUserStateLocked(p2);
	return v1;
}
-----
depth : 2
public TvInputManagerService$UserState getOrCreateUserStateLocked(int p1){
	TvInputManagerService$UserState v1 = p0.getUserStateLocked(p1);
	return phiInstruction;
}
-----
depth : 1
public TvContentRating getBlockedRatings(){
	p0.loadIfNeeded();
	int v2 = this.mBlockedRatings.size();
	TvContentRating v2 = new TvContentRating(v2);
	Object v3 = this.mBlockedRatings.toArray(v2);
	return v3;
}
-----
depth : 2
public void loadIfNeeded(){
	p0.load();
	this.mLoaded = 1;
	return;
}
-----
