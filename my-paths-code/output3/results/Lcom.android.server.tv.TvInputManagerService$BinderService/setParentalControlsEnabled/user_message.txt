This is path 1 for the API with depth 2:
depth : 0
public void setParentalControlsEnabled(boolean p1, int p2){
	p0.ensureParentalControlsPermission();
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v3, p2, "setParentalControlsEnabled");
	long v5 = Binder.clearCallingIdentity();
	Object v6 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v4);
	PersistentDataStore v8 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v7);
	v8.setParentalControlsEnabled(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public void ensureParentalControlsPermission(){
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$UserState -$$Nest$mgetOrCreateUserStateLocked(TvInputManagerService p1, int p2){
	TvInputManagerService$UserState v1 = p1.getOrCreateUserStateLocked(p2);
	return v1;
}
-----
depth : 2
public TvInputManagerService$UserState getOrCreateUserStateLocked(int p1){
	TvInputManagerService$UserState v1 = p0.getUserStateLocked(p1);
	TvInputManagerService$UserState v1 = new TvInputManagerService$UserState(this.mContext,p1,0);
	this.mUserStates.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public void setParentalControlsEnabled(boolean p1){
	p0.loadIfNeeded();
	this.mParentalControlsEnabled = p1;
	this.mParentalControlsEnabledChanged = 1;
	p0.postSave();
	return;
}
-----
depth : 2
public void loadIfNeeded(){
	p0.load();
	this.mLoaded = 1;
	return;
}
-----
depth : 2
public void postSave(){
	this.mHandler.removeCallbacks(this.mSaveRunnable);
	boolean v2 = this.mHandler.post(this.mSaveRunnable);
	return;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void setParentalControlsEnabled(boolean p1, int p2){
	p0.ensureParentalControlsPermission();
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v3, p2, "setParentalControlsEnabled");
	long v5 = Binder.clearCallingIdentity();
	Object v6 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v4);
	PersistentDataStore v8 = TvInputManagerService$UserState.-$$Nest$fgetpersistentDataStore(v7);
	v8.setParentalControlsEnabled(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public void ensureParentalControlsPermission(){
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$UserState -$$Nest$mgetOrCreateUserStateLocked(TvInputManagerService p1, int p2){
	TvInputManagerService$UserState v1 = p1.getOrCreateUserStateLocked(p2);
	return v1;
}
-----
depth : 2
public TvInputManagerService$UserState getOrCreateUserStateLocked(int p1){
	TvInputManagerService$UserState v1 = p0.getUserStateLocked(p1);
	return phiInstruction;
}
-----
depth : 1
public void setParentalControlsEnabled(boolean p1){
	p0.loadIfNeeded();
	this.mParentalControlsEnabled = p1;
	this.mParentalControlsEnabledChanged = 1;
	p0.postSave();
	return;
}
-----
depth : 2
public void loadIfNeeded(){
	p0.load();
	this.mLoaded = 1;
	return;
}
-----
depth : 2
public void postSave(){
	this.mHandler.removeCallbacks(this.mSaveRunnable);
	boolean v2 = this.mHandler.post(this.mSaveRunnable);
	return;
}
-----
