The method requestChannelBrowsable has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void requestChannelBrowsable(Uri p1, int p2){
	String v1 = p0.getCallingPackageName();
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v3, p2, "requestChannelBrowsable");
	long v5 = Binder.clearCallingIdentity();
	Intent v5 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
	Context v7 = this.this$0.getContext();
	PackageManager v8 = v7.getPackageManager();
	List v9 = v8.queryBroadcastReceivers(v5, 0);
	Iterator v10 = v9.iterator();
	boolean v11 = v10.hasNext();
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public String getCallingPackageName(){
	Context v1 = TvInputManagerService.-$$Nest$fgetmContext(this.this$0);
	PackageManager v2 = v1.getPackageManager();
	int v3 = Binder.getCallingUid();
	String v4 = v2.getPackagesForUid(v3);
	return v4[0];
}
-----
depth : 2
public Context -$$Nest$fgetmContext(TvInputManagerService p1){
	return this.mContext;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void requestChannelBrowsable(Uri p1, int p2){
	String v1 = p0.getCallingPackageName();
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v3, p2, "requestChannelBrowsable");
	long v5 = Binder.clearCallingIdentity();
	Intent v5 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
	Context v7 = this.this$0.getContext();
	PackageManager v8 = v7.getPackageManager();
	List v9 = v8.queryBroadcastReceivers(v5, 0);
	Iterator v10 = v9.iterator();
	boolean v11 = v10.hasNext();
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public String getCallingPackageName(){
	Context v1 = TvInputManagerService.-$$Nest$fgetmContext(this.this$0);
	PackageManager v2 = v1.getPackageManager();
	int v3 = Binder.getCallingUid();
	String v4 = v2.getPackagesForUid(v3);
	return "unknown";
}
-----
depth : 2
public Context -$$Nest$fgetmContext(TvInputManagerService p1){
	return this.mContext;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void requestChannelBrowsable(Uri p1, int p2){
	String v1 = p0.getCallingPackageName();
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v4 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v3, p2, "requestChannelBrowsable");
	long v5 = Binder.clearCallingIdentity();
	Intent v5 = new Intent("android.media.tv.action.CHANNEL_BROWSABLE_REQUESTED");
	Context v7 = this.this$0.getContext();
	PackageManager v8 = v7.getPackageManager();
	List v9 = v8.queryBroadcastReceivers(v5, 0);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public String getCallingPackageName(){
	Context v1 = TvInputManagerService.-$$Nest$fgetmContext(this.this$0);
	PackageManager v2 = v1.getPackageManager();
	int v3 = Binder.getCallingUid();
	String v4 = v2.getPackagesForUid(v3);
	return v4[0];
}
-----
depth : 2
public Context -$$Nest$fgetmContext(TvInputManagerService p1){
	return this.mContext;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----

and the following sink code:
['String v1 = p0.getCallingPackageName();\nint v2 = Binder.getCallingPid();\nint v3 = Binder.getCallingUid();\nint v4 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v3, p2, "requestChannelBrowsable");', 'Context v1 = TvInputManagerService.-$$Nest$fgetmContext(this.this$0);\nPackageManager v2 = v1.getPackageManager();\nint v3 = Binder.getCallingUid();\nString v4 = v2.getPackagesForUid(v3);']

The method requestChannelBrowsable has the following similar APIs:

- API Name: requestBroadcastInfo(Landroid/os/IBinder;Landroid/media/tv/BroadcastInfoRequest;I)V with Similarity Score: 0.8738863468170166
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p3, "requestBroadcastInfo");
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();

- API Name: setVolume(Landroid/os/IBinder;FI)V with Similarity Score: 0.868148922920227
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingUid();
int v2 = Binder.getCallingPid();
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p3, "setVolume");

