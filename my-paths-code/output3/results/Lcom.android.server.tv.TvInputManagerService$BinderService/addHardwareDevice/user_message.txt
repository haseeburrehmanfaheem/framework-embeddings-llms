This is path 1 for the API with depth 2:
depth : 0
public void addHardwareDevice(int p1){
	TvInputHardwareInfo$Builder v0 = new TvInputHardwareInfo$Builder();
	TvInputHardwareInfo$Builder v2 = v0.deviceId(p1);
	TvInputHardwareInfo$Builder v3 = v2.type(9);
	TvInputHardwareInfo$Builder v4 = v3.audioType(0);
	TvInputHardwareInfo$Builder v5 = v4.audioAddress("0");
	TvInputHardwareInfo$Builder v6 = v5.hdmiPortId(0);
	TvInputHardwareInfo v7 = v6.build();
	TvInputHardwareManager v8 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	v8.onDeviceAvailable(v7, 0);
	return;
}
-----
depth : 1
public TvInputHardwareInfo$Builder deviceId(int p1){
	Integer v1 = Integer.valueOf(p1);
	this.mDeviceId = v1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder type(int p1){
	Integer v1 = Integer.valueOf(p1);
	this.mType = v1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder audioType(int p1){
	this.mAudioType = p1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder audioAddress(String p1){
	this.mAudioAddress = p1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder hdmiPortId(int p1){
	Integer v1 = Integer.valueOf(p1);
	this.mHdmiPortId = v1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo build(){
	int v1 = this.mType.intValue();
	int v2 = this.mType.intValue();
	TvInputHardwareInfo v2 = new TvInputHardwareInfo(0);
	int v4 = this.mDeviceId.intValue();
	TvInputHardwareInfo.-$$Nest$fputmDeviceId(v2, v4);
	int v6 = this.mType.intValue();
	TvInputHardwareInfo.-$$Nest$fputmType(v2, v6);
	TvInputHardwareInfo.-$$Nest$fputmAudioType(v2, this.mAudioType);
	int v9 = TvInputHardwareInfo.-$$Nest$fgetmAudioType(v2);
	TvInputHardwareInfo.-$$Nest$fputmAudioAddress(v2, this.mAudioAddress);
	int v11 = this.mHdmiPortId.intValue();
	TvInputHardwareInfo.-$$Nest$fputmHdmiPortId(v2, v11);
	int v13 = this.mCableConnectionStatus.intValue();
	TvInputHardwareInfo.-$$Nest$fputmCableConnectionStatus(v2, v13);
	return v2;
}
-----
depth : 2
public void -$$Nest$fputmDeviceId(TvInputHardwareInfo p1, int p2){
	this.mDeviceId = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmType(TvInputHardwareInfo p1, int p2){
	this.mType = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmAudioType(TvInputHardwareInfo p1, int p2){
	this.mAudioType = p2;
	return;
}
-----
depth : 2
public int -$$Nest$fgetmAudioType(TvInputHardwareInfo p1){
	return this.mAudioType;
}
-----
depth : 2
public void -$$Nest$fputmAudioAddress(TvInputHardwareInfo p1, String p2){
	this.mAudioAddress = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmHdmiPortId(TvInputHardwareInfo p1, int p2){
	this.mHdmiPortId = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmCableConnectionStatus(TvInputHardwareInfo p1, int p2){
	this.mCableConnectionStatus = p2;
	return;
}
-----
depth : 1
public void onDeviceAvailable(TvInputHardwareInfo p1, TvStreamConfig p2){
	TvInputHardwareManager$Connection v0 = new TvInputHardwareManager$Connection(p0,p1);
	v0.updateConfigsLocked(p2);
	int v3 = p1.getCableConnectionStatus();
	boolean v4 = v0.updateCableConnectionStatusLocked(v3);
	int v5 = p1.getDeviceId();
	this.mConnections.put(v5, v0);
	p0.buildHardwareListLocked();
	Message v8 = this.mHandler.obtainMessage(2, 0, 0, p1);
	v8.sendToTarget();
	int v10 = p1.getType();
	p0.processPendingHdmiDeviceEventsLocked();
	return;
}
-----
depth : 2
public void updateConfigsLocked(TvStreamConfig p1){
	this.mConfigs = p1;
	return;
}
-----
depth : 2
public int getCableConnectionStatus(){
	return this.mCableConnectionStatus;
}
-----
depth : 2
public boolean updateCableConnectionStatusLocked(int p1){
	this.mIsCableConnectionStatusUpdated = 1;
	TvInputHardwareInfo$Builder v1 = this.mHardwareInfo.toBuilder();
	TvInputHardwareInfo$Builder v2 = v1.cableConnectionStatus(p1);
	TvInputHardwareInfo v3 = v2.build();
	this.mHardwareInfo = v3;
	return this.mIsCableConnectionStatusUpdated;
}
-----
depth : 2
public int getDeviceId(){
	return this.mDeviceId;
}
-----
depth : 2
public void buildHardwareListLocked(){
	this.mHardwareList.clear();
	int v2 = this.mConnections.size();
	return;
}
-----
depth : 2
public int getType(){
	return this.mType;
}
-----
depth : 2
public void processPendingHdmiDeviceEventsLocked(){
	Iterator v1 = this.mPendingHdmiDeviceEvents.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void addHardwareDevice(int p1){
	TvInputHardwareInfo$Builder v0 = new TvInputHardwareInfo$Builder();
	TvInputHardwareInfo$Builder v2 = v0.deviceId(p1);
	TvInputHardwareInfo$Builder v3 = v2.type(9);
	TvInputHardwareInfo$Builder v4 = v3.audioType(0);
	TvInputHardwareInfo$Builder v5 = v4.audioAddress("0");
	TvInputHardwareInfo$Builder v6 = v5.hdmiPortId(0);
	TvInputHardwareInfo v7 = v6.build();
	TvInputHardwareManager v8 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	v8.onDeviceAvailable(v7, 0);
	return;
}
-----
depth : 1
public TvInputHardwareInfo$Builder deviceId(int p1){
	Integer v1 = Integer.valueOf(p1);
	this.mDeviceId = v1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder type(int p1){
	Integer v1 = Integer.valueOf(p1);
	this.mType = v1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder audioType(int p1){
	this.mAudioType = p1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder audioAddress(String p1){
	this.mAudioAddress = p1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder hdmiPortId(int p1){
	Integer v1 = Integer.valueOf(p1);
	this.mHdmiPortId = v1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo build(){
	int v1 = this.mType.intValue();
	int v2 = this.mType.intValue();
	TvInputHardwareInfo v2 = new TvInputHardwareInfo(0);
	int v4 = this.mDeviceId.intValue();
	TvInputHardwareInfo.-$$Nest$fputmDeviceId(v2, v4);
	int v6 = this.mType.intValue();
	TvInputHardwareInfo.-$$Nest$fputmType(v2, v6);
	TvInputHardwareInfo.-$$Nest$fputmAudioType(v2, this.mAudioType);
	int v9 = TvInputHardwareInfo.-$$Nest$fgetmAudioType(v2);
	TvInputHardwareInfo.-$$Nest$fputmAudioAddress(v2, this.mAudioAddress);
	int v11 = this.mHdmiPortId.intValue();
	TvInputHardwareInfo.-$$Nest$fputmHdmiPortId(v2, v11);
	int v13 = this.mCableConnectionStatus.intValue();
	TvInputHardwareInfo.-$$Nest$fputmCableConnectionStatus(v2, v13);
	return v2;
}
-----
depth : 2
public void -$$Nest$fputmDeviceId(TvInputHardwareInfo p1, int p2){
	this.mDeviceId = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmType(TvInputHardwareInfo p1, int p2){
	this.mType = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmAudioType(TvInputHardwareInfo p1, int p2){
	this.mAudioType = p2;
	return;
}
-----
depth : 2
public int -$$Nest$fgetmAudioType(TvInputHardwareInfo p1){
	return this.mAudioType;
}
-----
depth : 2
public void -$$Nest$fputmAudioAddress(TvInputHardwareInfo p1, String p2){
	this.mAudioAddress = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmHdmiPortId(TvInputHardwareInfo p1, int p2){
	this.mHdmiPortId = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmCableConnectionStatus(TvInputHardwareInfo p1, int p2){
	this.mCableConnectionStatus = p2;
	return;
}
-----
depth : 1
public void onDeviceAvailable(TvInputHardwareInfo p1, TvStreamConfig p2){
	TvInputHardwareManager$Connection v0 = new TvInputHardwareManager$Connection(p0,p1);
	v0.updateConfigsLocked(p2);
	int v3 = p1.getCableConnectionStatus();
	boolean v4 = v0.updateCableConnectionStatusLocked(v3);
	int v5 = p1.getDeviceId();
	this.mConnections.put(v5, v0);
	p0.buildHardwareListLocked();
	Message v8 = this.mHandler.obtainMessage(2, 0, 0, p1);
	v8.sendToTarget();
	int v10 = p1.getType();
	p0.processPendingHdmiDeviceEventsLocked();
	return;
}
-----
depth : 2
public void updateConfigsLocked(TvStreamConfig p1){
	this.mConfigs = p1;
	return;
}
-----
depth : 2
public int getCableConnectionStatus(){
	return this.mCableConnectionStatus;
}
-----
depth : 2
public boolean updateCableConnectionStatusLocked(int p1){
	this.mIsCableConnectionStatusUpdated = 1;
	TvInputHardwareInfo$Builder v1 = this.mHardwareInfo.toBuilder();
	TvInputHardwareInfo$Builder v2 = v1.cableConnectionStatus(p1);
	TvInputHardwareInfo v3 = v2.build();
	this.mHardwareInfo = v3;
	return this.mIsCableConnectionStatusUpdated;
}
-----
depth : 2
public int getDeviceId(){
	return this.mDeviceId;
}
-----
depth : 2
public void buildHardwareListLocked(){
	this.mHardwareList.clear();
	int v2 = this.mConnections.size();
	return;
}
-----
depth : 2
public int getType(){
	return this.mType;
}
-----
depth : 2
public void processPendingHdmiDeviceEventsLocked(){
	Iterator v1 = this.mPendingHdmiDeviceEvents.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public void addHardwareDevice(int p1){
	TvInputHardwareInfo$Builder v0 = new TvInputHardwareInfo$Builder();
	TvInputHardwareInfo$Builder v2 = v0.deviceId(p1);
	TvInputHardwareInfo$Builder v3 = v2.type(9);
	TvInputHardwareInfo$Builder v4 = v3.audioType(0);
	TvInputHardwareInfo$Builder v5 = v4.audioAddress("0");
	TvInputHardwareInfo$Builder v6 = v5.hdmiPortId(0);
	TvInputHardwareInfo v7 = v6.build();
	TvInputHardwareManager v8 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	v8.onDeviceAvailable(v7, 0);
	return;
}
-----
depth : 1
public TvInputHardwareInfo$Builder deviceId(int p1){
	Integer v1 = Integer.valueOf(p1);
	this.mDeviceId = v1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder type(int p1){
	Integer v1 = Integer.valueOf(p1);
	this.mType = v1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder audioType(int p1){
	this.mAudioType = p1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder audioAddress(String p1){
	this.mAudioAddress = p1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo$Builder hdmiPortId(int p1){
	Integer v1 = Integer.valueOf(p1);
	this.mHdmiPortId = v1;
	return p0;
}
-----
depth : 1
public TvInputHardwareInfo build(){
	int v1 = this.mType.intValue();
	int v2 = this.mType.intValue();
	TvInputHardwareInfo v2 = new TvInputHardwareInfo(0);
	int v4 = this.mDeviceId.intValue();
	TvInputHardwareInfo.-$$Nest$fputmDeviceId(v2, v4);
	int v6 = this.mType.intValue();
	TvInputHardwareInfo.-$$Nest$fputmType(v2, v6);
	TvInputHardwareInfo.-$$Nest$fputmAudioType(v2, this.mAudioType);
	int v9 = TvInputHardwareInfo.-$$Nest$fgetmAudioType(v2);
	TvInputHardwareInfo.-$$Nest$fputmAudioAddress(v2, this.mAudioAddress);
	int v11 = this.mHdmiPortId.intValue();
	TvInputHardwareInfo.-$$Nest$fputmHdmiPortId(v2, v11);
	int v13 = this.mCableConnectionStatus.intValue();
	TvInputHardwareInfo.-$$Nest$fputmCableConnectionStatus(v2, v13);
	return v2;
}
-----
depth : 2
public void -$$Nest$fputmDeviceId(TvInputHardwareInfo p1, int p2){
	this.mDeviceId = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmType(TvInputHardwareInfo p1, int p2){
	this.mType = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmAudioType(TvInputHardwareInfo p1, int p2){
	this.mAudioType = p2;
	return;
}
-----
depth : 2
public int -$$Nest$fgetmAudioType(TvInputHardwareInfo p1){
	return this.mAudioType;
}
-----
depth : 2
public void -$$Nest$fputmAudioAddress(TvInputHardwareInfo p1, String p2){
	this.mAudioAddress = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmHdmiPortId(TvInputHardwareInfo p1, int p2){
	this.mHdmiPortId = p2;
	return;
}
-----
depth : 2
public void -$$Nest$fputmCableConnectionStatus(TvInputHardwareInfo p1, int p2){
	this.mCableConnectionStatus = p2;
	return;
}
-----
depth : 1
public void onDeviceAvailable(TvInputHardwareInfo p1, TvStreamConfig p2){
	TvInputHardwareManager$Connection v0 = new TvInputHardwareManager$Connection(p0,p1);
	v0.updateConfigsLocked(p2);
	int v3 = p1.getCableConnectionStatus();
	boolean v4 = v0.updateCableConnectionStatusLocked(v3);
	int v5 = p1.getDeviceId();
	this.mConnections.put(v5, v0);
	p0.buildHardwareListLocked();
	Message v8 = this.mHandler.obtainMessage(2, 0, 0, p1);
	v8.sendToTarget();
	int v10 = p1.getType();
	p0.processPendingHdmiDeviceEventsLocked();
	return;
}
-----
depth : 2
public void updateConfigsLocked(TvStreamConfig p1){
	this.mConfigs = p1;
	return;
}
-----
depth : 2
public int getCableConnectionStatus(){
	return this.mCableConnectionStatus;
}
-----
depth : 2
public boolean updateCableConnectionStatusLocked(int p1){
	this.mIsCableConnectionStatusUpdated = 1;
	TvInputHardwareInfo$Builder v1 = this.mHardwareInfo.toBuilder();
	TvInputHardwareInfo$Builder v2 = v1.cableConnectionStatus(p1);
	TvInputHardwareInfo v3 = v2.build();
	this.mHardwareInfo = v3;
	return this.mIsCableConnectionStatusUpdated;
}
-----
depth : 2
public int getDeviceId(){
	return this.mDeviceId;
}
-----
depth : 2
public void buildHardwareListLocked(){
	this.mHardwareList.clear();
	int v2 = this.mConnections.size();
	return;
}
-----
depth : 2
public int getType(){
	return this.mType;
}
-----
depth : 2
public void processPendingHdmiDeviceEventsLocked(){
	Iterator v1 = this.mPendingHdmiDeviceEvents.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
