The method removeBroadcastInfo has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void removeBroadcastInfo(IBinder p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p3, "removeBroadcastInfo");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$SessionState v6 = TvInputManagerService.-$$Nest$mgetSessionStateLocked(this.this$0, p1, v1, v3);
	ITvInputSession v7 = TvInputManagerService.-$$Nest$mgetSessionLocked(this.this$0, v6);
	v7.removeBroadcastInfo(p2);
	int v9 = Slog.e("TvInputManagerService", "error in removeBroadcastInfo", caughtException);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$SessionState -$$Nest$mgetSessionStateLocked(TvInputManagerService p1, IBinder p2, int p3, int p4){
	TvInputManagerService$SessionState v1 = p1.getSessionStateLocked(p2, p3, p4);
	return v1;
}
-----
depth : 2
public TvInputManagerService$SessionState getSessionStateLocked(IBinder p1, int p2, int p3){
	TvInputManagerService$UserState v1 = p0.getOrCreateUserStateLocked(p3);
	TvInputManagerService$SessionState v2 = p0.getSessionStateLocked(p1, p2, v1);
	return v2;
}
-----
depth : 1
public ITvInputSession -$$Nest$mgetSessionLocked(TvInputManagerService p1, TvInputManagerService$SessionState p2){
	ITvInputSession v1 = p1.getSessionLocked(p2);
	return v1;
}
-----
depth : 2
public ITvInputSession getSessionLocked(TvInputManagerService$SessionState p1){
	ITvInputSession v1 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p1);
	return v1;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void removeBroadcastInfo(IBinder p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p3, "removeBroadcastInfo");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$SessionState v6 = TvInputManagerService.-$$Nest$mgetSessionStateLocked(this.this$0, p1, v1, v3);
	ITvInputSession v7 = TvInputManagerService.-$$Nest$mgetSessionLocked(this.this$0, v6);
	int v8 = Slog.e("TvInputManagerService", "error in removeBroadcastInfo", caughtException);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$SessionState -$$Nest$mgetSessionStateLocked(TvInputManagerService p1, IBinder p2, int p3, int p4){
	TvInputManagerService$SessionState v1 = p1.getSessionStateLocked(p2, p3, p4);
	return v1;
}
-----
depth : 2
public TvInputManagerService$SessionState getSessionStateLocked(IBinder p1, int p2, int p3){
	TvInputManagerService$UserState v1 = p0.getOrCreateUserStateLocked(p3);
	TvInputManagerService$SessionState v2 = p0.getSessionStateLocked(p1, p2, v1);
	return v2;
}
-----
depth : 1
public ITvInputSession -$$Nest$mgetSessionLocked(TvInputManagerService p1, TvInputManagerService$SessionState p2){
	ITvInputSession v1 = p1.getSessionLocked(p2);
	return v1;
}
-----
depth : 2
public ITvInputSession getSessionLocked(TvInputManagerService$SessionState p1){
	ITvInputSession v1 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p1);
	return v1;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void removeBroadcastInfo(IBinder p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p3, "removeBroadcastInfo");
	long v4 = Binder.clearCallingIdentity();
	Object v5 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$SessionState v6 = TvInputManagerService.-$$Nest$mgetSessionStateLocked(this.this$0, p1, v1, v3);
	ITvInputSession v7 = TvInputManagerService.-$$Nest$mgetSessionLocked(this.this$0, v6);
	v7.removeBroadcastInfo(p2);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$SessionState -$$Nest$mgetSessionStateLocked(TvInputManagerService p1, IBinder p2, int p3, int p4){
	TvInputManagerService$SessionState v1 = p1.getSessionStateLocked(p2, p3, p4);
	return v1;
}
-----
depth : 2
public TvInputManagerService$SessionState getSessionStateLocked(IBinder p1, int p2, int p3){
	TvInputManagerService$UserState v1 = p0.getOrCreateUserStateLocked(p3);
	TvInputManagerService$SessionState v2 = p0.getSessionStateLocked(p1, p2, v1);
	return v2;
}
-----
depth : 1
public ITvInputSession -$$Nest$mgetSessionLocked(TvInputManagerService p1, TvInputManagerService$SessionState p2){
	ITvInputSession v1 = p1.getSessionLocked(p2);
	return v1;
}
-----
depth : 2
public ITvInputSession getSessionLocked(TvInputManagerService$SessionState p1){
	ITvInputSession v1 = TvInputManagerService$SessionState.-$$Nest$fgetsession(p1);
	return v1;
}
-----

and the following sink code:
['int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p3, "removeBroadcastInfo");\npublic int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){\nint v1 = p1.resolveCallingUserId(p2, p3, p4, p5);\npublic int resolveCallingUserId(int p1, int p2, int p3, String p4){\nint v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);', 'TvInputManagerService$SessionState v6 = TvInputManagerService.-$$Nest$mgetSessionStateLocked(this.this$0, p1, v1, v3);\npublic TvInputManagerService$SessionState -$$Nest$mgetSessionStateLocked(TvInputManagerService p1, IBinder p2, int p3, int p4){\nTvInputManagerService$SessionState v1 = p1.getSessionStateLocked(p2, p3, p4);\npublic TvInputManagerService$SessionState getSessionStateLocked(IBinder p1, int p2, int p3){\nTvInputManagerService$UserState v1 = p0.getOrCreateUserStateLocked(p3);\nTvInputManagerService$SessionState v2 = p0.getSessionStateLocked(p1, p2, v1);']

The method removeBroadcastInfo has the following similar APIs:

- API Name: relayoutOverlayView(Landroid/os/IBinder;Landroid/graphics/Rect;I)V with Similarity Score: 0.921782910823822
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p3, "relayoutOverlayView");
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);

- API Name: createOverlayView(Landroid/os/IBinder;Landroid/os/IBinder;Landroid/graphics/Rect;I)V with Similarity Score: 0.9209021925926208
  - Access Control Level: SYS_OR_SIG and the following code:
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p4, "createOverlayView");
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);

