This is path 1 for the API with depth 2:
depth : 0
public void createSession(ITvInputClient p1, String p2, boolean p3, int p4, int p5){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p5, "createSession");
	long v4 = Binder.clearCallingIdentity();
	UUID v5 = UUID.randomUUID();
	String v6 = v5.toString();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	int v8 = TvInputManagerService.-$$Nest$fgetmCurrentUserId(this.this$0);
	Set v9 = TvInputManagerService.-$$Nest$fgetmRunningProfiles(this.this$0);
	Integer v10 = Integer.valueOf(p5);
	boolean v11 = v9.contains(v10);
	TvInputManagerService$UserState v12 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	Map v13 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v12);
	Object v14 = v13.get(p2);
	StringBuilder v14 = new StringBuilder();
	StringBuilder v16 = v14.append("Failed to find input state for inputId=");
	StringBuilder v17 = v14.append(p2);
	String v18 = v14.toString();
	int v19 = Slog.w("TvInputManagerService", v18);
	TvInputManagerService.-$$Nest$msendSessionTokenToClientLocked(this.this$0, p1, p2, 0, 0, p4);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$UserState -$$Nest$mgetOrCreateUserStateLocked(TvInputManagerService p1, int p2){
	TvInputManagerService$UserState v1 = p1.getOrCreateUserStateLocked(p2);
	return v1;
}
-----
depth : 2
public TvInputManagerService$UserState getOrCreateUserStateLocked(int p1){
	TvInputManagerService$UserState v1 = p0.getUserStateLocked(p1);
	TvInputManagerService$UserState v1 = new TvInputManagerService$UserState(this.mContext,p1,0);
	this.mUserStates.put(p1, v1);
	return phiInstruction;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void createSession(ITvInputClient p1, String p2, boolean p3, int p4, int p5){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p5, "createSession");
	long v4 = Binder.clearCallingIdentity();
	UUID v5 = UUID.randomUUID();
	String v6 = v5.toString();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	int v8 = TvInputManagerService.-$$Nest$fgetmCurrentUserId(this.this$0);
	Set v9 = TvInputManagerService.-$$Nest$fgetmRunningProfiles(this.this$0);
	Integer v10 = Integer.valueOf(p5);
	boolean v11 = v9.contains(v10);
	TvInputManagerService$UserState v12 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
	Map v13 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v12);
	Object v14 = v13.get(p2);
	StringBuilder v14 = new StringBuilder();
	StringBuilder v16 = v14.append("Failed to find input state for inputId=");
	StringBuilder v17 = v14.append(p2);
	String v18 = v14.toString();
	int v19 = Slog.w("TvInputManagerService", v18);
	TvInputManagerService.-$$Nest$msendSessionTokenToClientLocked(this.this$0, p1, p2, 0, 0, p4);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$UserState -$$Nest$mgetOrCreateUserStateLocked(TvInputManagerService p1, int p2){
	TvInputManagerService$UserState v1 = p1.getOrCreateUserStateLocked(p2);
	return v1;
}
-----
depth : 2
public TvInputManagerService$UserState getOrCreateUserStateLocked(int p1){
	TvInputManagerService$UserState v1 = p0.getUserStateLocked(p1);
	return phiInstruction;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public void createSession(ITvInputClient p1, String p2, boolean p3, int p4, int p5){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p5, "createSession");
	long v4 = Binder.clearCallingIdentity();
	UUID v5 = UUID.randomUUID();
	String v6 = v5.toString();
	Object v7 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	int v8 = TvInputManagerService.-$$Nest$fgetmCurrentUserId(this.this$0);
	Set v9 = TvInputManagerService.-$$Nest$fgetmRunningProfiles(this.this$0);
	Integer v10 = Integer.valueOf(p5);
	boolean v11 = v9.contains(v10);
	TvInputManagerService.-$$Nest$msendSessionTokenToClientLocked(this.this$0, p1, p2, 0, 0, p4);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
