The method captureFrame has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public boolean captureFrame(String p1, Surface p2, TvStreamConfig p3, int p4){
	p0.ensureCaptureTvInputPermission();
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v5 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v4, v3, p4, "captureFrame");
	Object v6 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v5);
	Map v8 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v7);
	Object v9 = v8.get(p1);
	Map v10 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
	Collection v11 = v10.values();
	Iterator v12 = v11.iterator();
	boolean v13 = v12.hasNext();
	Object v14 = v12.next();
	String v15 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v14);
	boolean v16 = v15.equals(p1);
	IBinder v17 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v14);
	Map v18 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
	IBinder v19 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v14);
	Object v20 = v18.get(v19);
	String v21 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v20);
	TvInputHardwareManager v22 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	boolean v23 = v22.captureFrame(phiInstruction, p2, p3, v3, v5);
	Binder.restoreCallingIdentity(v2);
	return v23;
}
-----
depth : 1
public void ensureCaptureTvInputPermission(){
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$UserState -$$Nest$mgetOrCreateUserStateLocked(TvInputManagerService p1, int p2){
	TvInputManagerService$UserState v1 = p1.getOrCreateUserStateLocked(p2);
	return v1;
}
-----
depth : 2
public TvInputManagerService$UserState getOrCreateUserStateLocked(int p1){
	TvInputManagerService$UserState v1 = p0.getUserStateLocked(p1);
	TvInputManagerService$UserState v1 = new TvInputManagerService$UserState(this.mContext,p1,0);
	this.mUserStates.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public boolean captureFrame(String p1, Surface p2, TvStreamConfig p3, int p4, int p5){
	int v1 = p0.findDeviceIdForInputIdLocked(p1);
	Object v2 = this.mConnections.get(v1);
	TvInputHardwareManager$TvInputHardwareImpl v3 = v2.getHardwareImplLocked();
	Runnable v4 = v2.getOnFirstFrameCapturedLocked();
	v4.run();
	v2.setOnFirstFrameCapturedLocked(0);
	boolean v7 = TvInputHardwareManager$TvInputHardwareImpl.-$$Nest$mstartCapture(v3, p2, p3);
	TvInputHardwareManager$2 v7 = new TvInputHardwareManager$2(p0,v3,p3);
	v2.setOnFirstFrameCapturedLocked(v7);
	return v7;
}
-----
depth : 2
public int findDeviceIdForInputIdLocked(String p1){
	int v1 = this.mConnections.size();
	Object v2 = this.mConnections.get(phiInstruction);
	TvInputInfo v3 = v2.getInfoLocked();
	String v4 = v3.getId();
	boolean v5 = v4.equals(p1);
	return phiInstruction;
}
-----
depth : 2
public TvInputHardwareManager$TvInputHardwareImpl getHardwareImplLocked(){
	return this.mHardware;
}
-----
depth : 2
public Runnable getOnFirstFrameCapturedLocked(){
	return this.mOnFirstFrameCaptured;
}
-----
depth : 2
public void setOnFirstFrameCapturedLocked(Runnable p1){
	this.mOnFirstFrameCaptured = p1;
	return;
}
-----
depth : 2
public boolean -$$Nest$mstartCapture(TvInputHardwareManager$TvInputHardwareImpl p1, Surface p2, TvStreamConfig p3){
	boolean v1 = p1.startCapture(p2, p3);
	return v1;
}
-----
depth : 2
public void setOnFirstFrameCapturedLocked(Runnable p1){
	this.mOnFirstFrameCaptured = p1;
	return;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public boolean captureFrame(String p1, Surface p2, TvStreamConfig p3, int p4){
	p0.ensureCaptureTvInputPermission();
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v5 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v4, v3, p4, "captureFrame");
	Object v6 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v5);
	Map v8 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v7);
	Object v9 = v8.get(p1);
	Map v10 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
	Collection v11 = v10.values();
	Iterator v12 = v11.iterator();
	boolean v13 = v12.hasNext();
	Object v14 = v12.next();
	String v15 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v14);
	boolean v16 = v15.equals(p1);
	IBinder v17 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v14);
	Map v18 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
	IBinder v19 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v14);
	Object v20 = v18.get(v19);
	String v21 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v20);
	TvInputHardwareManager v22 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	boolean v23 = v22.captureFrame(phiInstruction, p2, p3, v3, v5);
	Binder.restoreCallingIdentity(v2);
	return v23;
}
-----
depth : 1
public void ensureCaptureTvInputPermission(){
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$UserState -$$Nest$mgetOrCreateUserStateLocked(TvInputManagerService p1, int p2){
	TvInputManagerService$UserState v1 = p1.getOrCreateUserStateLocked(p2);
	return v1;
}
-----
depth : 2
public TvInputManagerService$UserState getOrCreateUserStateLocked(int p1){
	TvInputManagerService$UserState v1 = p0.getUserStateLocked(p1);
	TvInputManagerService$UserState v1 = new TvInputManagerService$UserState(this.mContext,p1,0);
	this.mUserStates.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public boolean captureFrame(String p1, Surface p2, TvStreamConfig p3, int p4, int p5){
	int v1 = p0.findDeviceIdForInputIdLocked(p1);
	Object v2 = this.mConnections.get(v1);
	TvInputHardwareManager$TvInputHardwareImpl v3 = v2.getHardwareImplLocked();
	Runnable v4 = v2.getOnFirstFrameCapturedLocked();
	v4.run();
	v2.setOnFirstFrameCapturedLocked(0);
	boolean v7 = TvInputHardwareManager$TvInputHardwareImpl.-$$Nest$mstartCapture(v3, p2, p3);
	TvInputHardwareManager$2 v7 = new TvInputHardwareManager$2(p0,v3,p3);
	v2.setOnFirstFrameCapturedLocked(v7);
	return v7;
}
-----
depth : 2
public int findDeviceIdForInputIdLocked(String p1){
	int v1 = this.mConnections.size();
	Object v2 = this.mConnections.get(phiInstruction);
	TvInputInfo v3 = v2.getInfoLocked();
	String v4 = v3.getId();
	boolean v5 = v4.equals(p1);
	return phiInstruction;
}
-----
depth : 2
public TvInputHardwareManager$TvInputHardwareImpl getHardwareImplLocked(){
	return this.mHardware;
}
-----
depth : 2
public Runnable getOnFirstFrameCapturedLocked(){
	return this.mOnFirstFrameCaptured;
}
-----
depth : 2
public void setOnFirstFrameCapturedLocked(Runnable p1){
	this.mOnFirstFrameCaptured = p1;
	return;
}
-----
depth : 2
public boolean -$$Nest$mstartCapture(TvInputHardwareManager$TvInputHardwareImpl p1, Surface p2, TvStreamConfig p3){
	boolean v1 = p1.startCapture(p2, p3);
	return v1;
}
-----
depth : 2
public void setOnFirstFrameCapturedLocked(Runnable p1){
	this.mOnFirstFrameCaptured = p1;
	return;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public boolean captureFrame(String p1, Surface p2, TvStreamConfig p3, int p4){
	p0.ensureCaptureTvInputPermission();
	long v2 = Binder.clearCallingIdentity();
	int v3 = Binder.getCallingUid();
	int v4 = Binder.getCallingPid();
	int v5 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v4, v3, p4, "captureFrame");
	Object v6 = TvInputManagerService.-$$Nest$fgetmLock(this.this$0);
	TvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v5);
	Map v8 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v7);
	Object v9 = v8.get(p1);
	Map v10 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
	Collection v11 = v10.values();
	Iterator v12 = v11.iterator();
	boolean v13 = v12.hasNext();
	Object v14 = v12.next();
	String v15 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v14);
	boolean v16 = v15.equals(p1);
	IBinder v17 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v14);
	Map v18 = TvInputManagerService$UserState.-$$Nest$fgetsessionStateMap(v7);
	IBinder v19 = TvInputManagerService$SessionState.-$$Nest$fgethardwareSessionToken(v14);
	Object v20 = v18.get(v19);
	String v21 = TvInputManagerService$SessionState.-$$Nest$fgetinputId(v20);
	TvInputHardwareManager v22 = TvInputManagerService.-$$Nest$fgetmTvInputHardwareManager(this.this$0);
	boolean v23 = v22.captureFrame(phiInstruction, p2, p3, v3, v5);
	Binder.restoreCallingIdentity(v2);
	return v23;
}
-----
depth : 1
public void ensureCaptureTvInputPermission(){
	return;
}
-----
depth : 1
public int -$$Nest$mresolveCallingUserId(TvInputManagerService p1, int p2, int p3, int p4, String p5){
	int v1 = p1.resolveCallingUserId(p2, p3, p4, p5);
	return v1;
}
-----
depth : 2
public int resolveCallingUserId(int p1, int p2, int p3, String p4){
	int v1 = ActivityManager.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public TvInputManagerService$UserState -$$Nest$mgetOrCreateUserStateLocked(TvInputManagerService p1, int p2){
	TvInputManagerService$UserState v1 = p1.getOrCreateUserStateLocked(p2);
	return v1;
}
-----
depth : 2
public TvInputManagerService$UserState getOrCreateUserStateLocked(int p1){
	TvInputManagerService$UserState v1 = p0.getUserStateLocked(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean captureFrame(String p1, Surface p2, TvStreamConfig p3, int p4, int p5){
	int v1 = p0.findDeviceIdForInputIdLocked(p1);
	Object v2 = this.mConnections.get(v1);
	TvInputHardwareManager$TvInputHardwareImpl v3 = v2.getHardwareImplLocked();
	Runnable v4 = v2.getOnFirstFrameCapturedLocked();
	v4.run();
	v2.setOnFirstFrameCapturedLocked(0);
	boolean v7 = TvInputHardwareManager$TvInputHardwareImpl.-$$Nest$mstartCapture(v3, p2, p3);
	TvInputHardwareManager$2 v7 = new TvInputHardwareManager$2(p0,v3,p3);
	v2.setOnFirstFrameCapturedLocked(v7);
	return v7;
}
-----
depth : 2
public int findDeviceIdForInputIdLocked(String p1){
	int v1 = this.mConnections.size();
	Object v2 = this.mConnections.get(phiInstruction);
	TvInputInfo v3 = v2.getInfoLocked();
	String v4 = v3.getId();
	boolean v5 = v4.equals(p1);
	return phiInstruction;
}
-----
depth : 2
public TvInputHardwareManager$TvInputHardwareImpl getHardwareImplLocked(){
	return this.mHardware;
}
-----
depth : 2
public Runnable getOnFirstFrameCapturedLocked(){
	return this.mOnFirstFrameCaptured;
}
-----
depth : 2
public void setOnFirstFrameCapturedLocked(Runnable p1){
	this.mOnFirstFrameCaptured = p1;
	return;
}
-----
depth : 2
public boolean -$$Nest$mstartCapture(TvInputHardwareManager$TvInputHardwareImpl p1, Surface p2, TvStreamConfig p3){
	boolean v1 = p1.startCapture(p2, p3);
	return v1;
}
-----
depth : 2
public void setOnFirstFrameCapturedLocked(Runnable p1){
	this.mOnFirstFrameCaptured = p1;
	return;
}
-----

and the following sink code:
['int v5 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v4, v3, p4, "captureFrame");\nTvInputManagerService$UserState v7 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v5);\nMap v8 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v7);\nObject v9 = v8.get(p1);\nTvInputHardwareManager$2 v7 = new TvInputHardwareManager$2(p0,v3,p3);\nboolean v23 = v22.captureFrame(phiInstruction, p2, p3, v3, v5);']

The method captureFrame has the following similar APIs:

- API Name: getTvInputInfo(Ljava/lang/String;I)Landroid/media/tv/TvInputInfo; with Similarity Score: 0.8655956387519836
  - Access Control Level: NONE and the following code:
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v1, v2, p2, "getTvInputInfo");
TvInputManagerService$UserState v6 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
Map v7 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v6);
Object v8 = v7.get(p1);

- API Name: createSession(Landroid/media/tv/ITvInputClient;Ljava/lang/String;ZII)V with Similarity Score: 0.842080295085907
  - Access Control Level: NONE and the following code:
int v3 = TvInputManagerService.-$$Nest$mresolveCallingUserId(this.this$0, v2, v1, p5, "createSession");
TvInputManagerService$UserState v12 = TvInputManagerService.-$$Nest$mgetOrCreateUserStateLocked(this.this$0, v3);
Map v13 = TvInputManagerService$UserState.-$$Nest$fgetinputMap(v12);
Object v14 = v13.get(p2);

