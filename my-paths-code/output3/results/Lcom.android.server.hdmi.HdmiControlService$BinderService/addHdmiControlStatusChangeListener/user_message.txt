This is path 1 for the API with depth 2:
depth : 0
public void addHdmiControlStatusChangeListener(IHdmiControlStatusChangeListener p1){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	this.this$0.addHdmiControlStatusChangeListener(p1);
	return;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public void addHdmiControlStatusChangeListener(IHdmiControlStatusChangeListener p1){
	HdmiControlService$HdmiControlStatusChangeListenerRecord v0 = new HdmiControlService$HdmiControlStatusChangeListenerRecord(p0,p1);
	IBinder v2 = p1.asBinder();
	v2.linkToDeath(v0, 0);
	boolean v4 = this.mHdmiControlStatusChangeListenerRecords.add(v0);
	HdmiControlService$9 v4 = new HdmiControlService$9(p0,v0,p1);
	p0.runOnServiceThread(v4);
	return;
}
-----
depth : 2
public void runOnServiceThread(Runnable p1){
	WorkSourceUidPreservingRunnable v0 = new WorkSourceUidPreservingRunnable(p1);
	boolean v2 = this.mHandler.post(v0);
	return;
}
-----
