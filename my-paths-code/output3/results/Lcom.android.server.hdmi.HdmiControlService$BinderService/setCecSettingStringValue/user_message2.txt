The method setCecSettingStringValue has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void setCecSettingStringValue(String p1, String p2){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
	v3.setStringValue(p1, p2);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public void setStringValue(String p1, String p2){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	boolean v2 = v1.getUserConfigurable();
	String v3 = v1.getValueType();
	boolean v4 = v3.equals("string");
	List v5 = p0.getAllowedStringValues(p1);
	boolean v6 = v5.contains(p2);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append("Updating CEC setting '");
	StringBuilder v9 = v6.append(p1);
	StringBuilder v10 = v6.append("' to '");
	StringBuilder v11 = v6.append(p2);
	StringBuilder v12 = v6.append("'.");
	String v13 = v6.toString();
	Object v13 = new Object(0);
	HdmiLogger.debug(v13, v13);
	p0.storeValue(v1, p2);
	return;
}
-----
depth : 2
public HdmiCecConfig$Setting getSetting(String p1){
	boolean v1 = this.mSettings.containsKey(p1);
	Object v2 = this.mSettings.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean getUserConfigurable(){
	return this.mUserConfigurable;
}
-----
depth : 2
public String getValueType(){
	HdmiCecConfig$Value v1 = p0.getDefaultValue();
	String v2 = v1.getStringValue();
	return phiInstruction;
}
-----
depth : 2
public List getAllowedStringValues(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("string");
	ArrayList v3 = new ArrayList();
	List v5 = v1.getAllowedValues();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	return v3;
}
-----
depth : 2
public void debug(String p1, Object p2){
	HdmiLogger v1 = HdmiLogger.getLogger();
	String v2 = HdmiLogger.toLogString(p1, p2);
	v1.debugInternal(v2);
	return;
}
-----
depth : 2
public void storeValue(HdmiCecConfig$Setting p1, String p2){
	int v1 = p0.getStorage(p1);
	String v2 = p0.getStorageKey(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("Setting '");
	StringBuilder v5 = v2.append(v2);
	StringBuilder v6 = v2.append("' shared pref.");
	String v7 = v2.toString();
	Object v7 = new Object(0);
	HdmiLogger.debug(v7, v7);
	this.mStorageAdapter.storeSharedPref(v2, p2);
	p0.notifySettingChanged(p1);
	return;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void setCecSettingStringValue(String p1, String p2){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
	v3.setStringValue(p1, p2);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public void setStringValue(String p1, String p2){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	boolean v2 = v1.getUserConfigurable();
	String v3 = v1.getValueType();
	boolean v4 = v3.equals("string");
	List v5 = p0.getAllowedStringValues(p1);
	boolean v6 = v5.contains(p2);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append("Updating CEC setting '");
	StringBuilder v9 = v6.append(p1);
	StringBuilder v10 = v6.append("' to '");
	StringBuilder v11 = v6.append(p2);
	StringBuilder v12 = v6.append("'.");
	String v13 = v6.toString();
	Object v13 = new Object(0);
	HdmiLogger.debug(v13, v13);
	p0.storeValue(v1, p2);
	return;
}
-----
depth : 2
public HdmiCecConfig$Setting getSetting(String p1){
	boolean v1 = this.mSettings.containsKey(p1);
	Object v2 = this.mSettings.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean getUserConfigurable(){
	return this.mUserConfigurable;
}
-----
depth : 2
public String getValueType(){
	HdmiCecConfig$Value v1 = p0.getDefaultValue();
	String v2 = v1.getStringValue();
	return phiInstruction;
}
-----
depth : 2
public List getAllowedStringValues(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("string");
	ArrayList v3 = new ArrayList();
	List v5 = v1.getAllowedValues();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	return v3;
}
-----
depth : 2
public void debug(String p1, Object p2){
	HdmiLogger v1 = HdmiLogger.getLogger();
	String v2 = HdmiLogger.toLogString(p1, p2);
	v1.debugInternal(v2);
	return;
}
-----
depth : 2
public void storeValue(HdmiCecConfig$Setting p1, String p2){
	int v1 = p0.getStorage(p1);
	String v2 = p0.getStorageKey(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("Setting '");
	StringBuilder v5 = v2.append(v2);
	StringBuilder v6 = v2.append("' global setting.");
	String v7 = v2.toString();
	Object v7 = new Object(0);
	HdmiLogger.debug(v7, v7);
	this.mStorageAdapter.storeGlobalSetting(v2, p2);
	return;
}
-----

and the following sink code:
['p0.enforceAccessPermission();\np0.setWorkSourceUidToCallingUid();', 'HdmiCecConfig$Setting v1 = p0.getSetting(p1);\nboolean v2 = v1.getUserConfigurable();\nString v3 = v1.getValueType();\nList v5 = p0.getAllowedStringValues(p1);\np0.storeValue(v1, p2);']

The method setCecSettingStringValue has the following similar APIs:

- API Name: powerOnRemoteDevice(II)V with Similarity Score: 1.0
  - Access Control Level: SYS_OR_SIG and the following code:
p0.enforceAccessPermission();
p0.setWorkSourceUidToCallingUid();

- API Name: sendVendorCommand(II[BZ)V with Similarity Score: 1.0
  - Access Control Level: SYS_OR_SIG and the following code:
p0.enforceAccessPermission();
p0.setWorkSourceUidToCallingUid();

