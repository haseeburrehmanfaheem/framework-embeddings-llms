The method getCecSettingIntValue has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public int getCecSettingIntValue(String p1){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
	int v4 = v3.getIntValue(p1);
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public int getIntValue(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("int");
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("Getting CEC setting value '");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("'.");
	String v8 = v3.toString();
	Object v8 = new Object(0);
	HdmiLogger.debug(v8, v8);
	HdmiCecConfig$Value v10 = v1.getDefaultValue();
	Integer v11 = v10.getIntValue();
	int v12 = v11.intValue();
	String v13 = Integer.toString(v12);
	String v14 = p0.retrieveValue(v1, v13);
	int v15 = Integer.parseInt(v14);
	return v15;
}
-----
depth : 2
public HdmiCecConfig$Setting getSetting(String p1){
	boolean v1 = this.mSettings.containsKey(p1);
	Object v2 = this.mSettings.get(p1);
	return phiInstruction;
}
-----
depth : 2
public String getValueType(){
	HdmiCecConfig$Value v1 = p0.getDefaultValue();
	String v2 = v1.getStringValue();
	return phiInstruction;
}
-----
depth : 2
public void debug(String p1, Object p2){
	HdmiLogger v1 = HdmiLogger.getLogger();
	String v2 = HdmiLogger.toLogString(p1, p2);
	v1.debugInternal(v2);
	return;
}
-----
depth : 2
public HdmiCecConfig$Value getDefaultValue(){
	return this.mDefaultValue;
}
-----
depth : 2
public Integer getIntValue(){
	return this.mIntValue;
}
-----
depth : 2
public String retrieveValue(HdmiCecConfig$Setting p1, String p2){
	int v1 = p0.getStorage(p1);
	String v2 = p0.getStorageKey(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("Reading '");
	StringBuilder v5 = v2.append(v2);
	StringBuilder v6 = v2.append("' shared preference.");
	String v7 = v2.toString();
	Object v7 = new Object(0);
	HdmiLogger.debug(v7, v7);
	String v9 = this.mStorageAdapter.retrieveSharedPref(v2, p2);
	return v9;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public int getCecSettingIntValue(String p1){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
	int v4 = v3.getIntValue(p1);
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public int getIntValue(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("int");
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append("Getting CEC setting value '");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("'.");
	String v8 = v3.toString();
	Object v8 = new Object(0);
	HdmiLogger.debug(v8, v8);
	HdmiCecConfig$Value v10 = v1.getDefaultValue();
	Integer v11 = v10.getIntValue();
	int v12 = v11.intValue();
	String v13 = Integer.toString(v12);
	String v14 = p0.retrieveValue(v1, v13);
	int v15 = Integer.parseInt(v14);
	return v15;
}
-----
depth : 2
public HdmiCecConfig$Setting getSetting(String p1){
	boolean v1 = this.mSettings.containsKey(p1);
	Object v2 = this.mSettings.get(p1);
	return phiInstruction;
}
-----
depth : 2
public String getValueType(){
	HdmiCecConfig$Value v1 = p0.getDefaultValue();
	String v2 = v1.getStringValue();
	return phiInstruction;
}
-----
depth : 2
public void debug(String p1, Object p2){
	HdmiLogger v1 = HdmiLogger.getLogger();
	String v2 = HdmiLogger.toLogString(p1, p2);
	v1.debugInternal(v2);
	return;
}
-----
depth : 2
public HdmiCecConfig$Value getDefaultValue(){
	return this.mDefaultValue;
}
-----
depth : 2
public Integer getIntValue(){
	return this.mIntValue;
}
-----
depth : 2
public String retrieveValue(HdmiCecConfig$Setting p1, String p2){
	int v1 = p0.getStorage(p1);
	String v2 = p0.getStorageKey(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("Reading '");
	StringBuilder v5 = v2.append(v2);
	StringBuilder v6 = v2.append("' global setting.");
	String v7 = v2.toString();
	Object v7 = new Object(0);
	HdmiLogger.debug(v7, v7);
	String v9 = this.mStorageAdapter.retrieveGlobalSetting(v2, p2);
	return v9;
}
-----

and the following sink code:
['HdmiCecConfig$Setting v1 = p0.getSetting(p1);\nString v2 = v1.getValueType();\nHdmiCecConfig$Value v10 = v1.getDefaultValue();\nInteger v11 = v10.getIntValue();\nint v12 = v11.intValue();\nString v13 = Integer.toString(v12);\nString v14 = p0.retrieveValue(v1, v13);\nint v15 = Integer.parseInt(v14);\nreturn v15;', 'HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();\nint v4 = v3.getIntValue(p1);\nreturn v4;']

The method getCecSettingIntValue has the following similar APIs:

- API Name: setCecSettingStringValue(Ljava/lang/String;Ljava/lang/String;)V with Similarity Score: 0.8864816427230835
  - Access Control Level: SYS_OR_SIG and the following code:
HdmiCecConfig$Setting v1 = p0.getSetting(p1);
boolean v2 = v1.getUserConfigurable();
String v3 = v1.getValueType();
List v5 = p0.getAllowedStringValues(p1);
p0.storeValue(v1, p2);

- API Name: getAllowedCecSettingStringValues(Ljava/lang/String;)Ljava/util/List; with Similarity Score: 0.8650744557380676
  - Access Control Level: SYS_OR_SIG and the following code:
HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
List v4 = v3.getAllowedStringValues(p1);
HdmiCecConfig$Setting v1 = p0.getSetting(p1);
String v2 = v1.getValueType();
boolean v3 = v2.equals("string");
ArrayList v3 = new ArrayList();
List v5 = v1.getAllowedValues();
return v3;

