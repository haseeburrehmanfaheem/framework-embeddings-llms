The method getAllowedCecSettingIntValues has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public [I getAllowedCecSettingIntValues(String p1){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
	List v4 = v3.getAllowedIntValues(p1);
	Stream v5 = v4.stream();
	HdmiControlService$BinderService$$ExternalSyntheticLambda0 v5 = new HdmiControlService$BinderService$$ExternalSyntheticLambda0();
	IntStream v7 = v5.mapToInt(v5);
	[I v8 = v7.toArray();
	Binder.restoreCallingIdentity(v2);
	return v8;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public List getAllowedIntValues(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("int");
	ArrayList v3 = new ArrayList();
	List v5 = v1.getAllowedValues();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	return v3;
}
-----
depth : 2
public HdmiCecConfig$Setting getSetting(String p1){
	boolean v1 = this.mSettings.containsKey(p1);
	Object v2 = this.mSettings.get(p1);
	return phiInstruction;
}
-----
depth : 2
public String getValueType(){
	HdmiCecConfig$Value v1 = p0.getDefaultValue();
	String v2 = v1.getStringValue();
	return phiInstruction;
}
-----
depth : 2
public List getAllowedValues(){
	return this.mAllowedValues;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public [I getAllowedCecSettingIntValues(String p1){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
	List v4 = v3.getAllowedIntValues(p1);
	Stream v5 = v4.stream();
	HdmiControlService$BinderService$$ExternalSyntheticLambda0 v5 = new HdmiControlService$BinderService$$ExternalSyntheticLambda0();
	IntStream v7 = v5.mapToInt(v5);
	[I v8 = v7.toArray();
	Binder.restoreCallingIdentity(v2);
	return v8;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public List getAllowedIntValues(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("int");
	ArrayList v3 = new ArrayList();
	List v5 = v1.getAllowedValues();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	return v3;
}
-----
depth : 2
public HdmiCecConfig$Setting getSetting(String p1){
	boolean v1 = this.mSettings.containsKey(p1);
	Object v2 = this.mSettings.get(p1);
	return phiInstruction;
}
-----
depth : 2
public String getValueType(){
	HdmiCecConfig$Value v1 = p0.getDefaultValue();
	String v2 = v1.getStringValue();
	return phiInstruction;
}
-----
depth : 2
public List getAllowedValues(){
	return this.mAllowedValues;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public [I getAllowedCecSettingIntValues(String p1){
	HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
	List v4 = v3.getAllowedIntValues(p1);
	Stream v5 = v4.stream();
	HdmiControlService$BinderService$$ExternalSyntheticLambda0 v5 = new HdmiControlService$BinderService$$ExternalSyntheticLambda0();
	IntStream v7 = v5.mapToInt(v5);
	[I v8 = v7.toArray();
	Binder.restoreCallingIdentity(v2);
	return v8;
}
-----
depth : 1
public void -$$Nest$minitBinderCall(HdmiControlService p1){
	p1.initBinderCall();
	return;
}
-----
depth : 2
public void initBinderCall(){
	p0.enforceAccessPermission();
	p0.setWorkSourceUidToCallingUid();
	return;
}
-----
depth : 1
public List getAllowedIntValues(String p1){
	HdmiCecConfig$Setting v1 = p0.getSetting(p1);
	String v2 = v1.getValueType();
	boolean v3 = v2.equals("int");
	ArrayList v3 = new ArrayList();
	List v5 = v1.getAllowedValues();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	return v3;
}
-----
depth : 2
public HdmiCecConfig$Setting getSetting(String p1){
	boolean v1 = this.mSettings.containsKey(p1);
	return phiInstruction;
}
-----
depth : 2
public String getValueType(){
	HdmiCecConfig$Value v1 = p0.getDefaultValue();
	String v2 = v1.getStringValue();
	return phiInstruction;
}
-----
depth : 2
public List getAllowedValues(){
	return this.mAllowedValues;
}
-----

and the following sink code:
['HdmiControlService.-$$Nest$minitBinderCall(this.this$0);\nlong v2 = Binder.clearCallingIdentity();\nHdmiCecConfig v3 = this.this$0.getHdmiCecConfig();\nList v4 = v3.getAllowedIntValues(p1);\nStream v5 = v4.stream();\nHdmiControlService$BinderService$$ExternalSyntheticLambda0 v6 = new HdmiControlService$BinderService$$ExternalSyntheticLambda0();\nIntStream v7 = v6.mapToInt(v6);\n[I v8 = v7.toArray();\nreturn v8;']

The method getAllowedCecSettingIntValues has the following similar APIs:

- API Name: setCecSettingIntValue(Ljava/lang/String;I)V with Similarity Score: 0.8620955944061279
  - Access Control Level: SYS_OR_SIG and the following code:
HdmiControlService.-$$Nest$minitBinderCall(this.this$0);
long v2 = Binder.clearCallingIdentity();
HdmiCecConfig v3 = this.this$0.getHdmiCecConfig();
v3.setIntValue(p1, p2);

