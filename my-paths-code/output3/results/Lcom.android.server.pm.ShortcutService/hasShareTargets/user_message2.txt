The method hasShareTargets has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public boolean hasShareTargets(String p1, String p2, int p3){
	p0.throwIfUserLockedL(p3);
	ShortcutPackage v4 = p0.getPackageShortcutsLocked(p2, p3);
	boolean v5 = v4.hasShareTargets();
	return v5;
}
-----
depth : 1
public void throwIfUserLockedL(int p1){
	boolean v1 = p0.isUserUnlockedL(p1);
	return;
}
-----
depth : 2
public boolean isUserUnlockedL(int p1){
	boolean v1 = this.mUnlockedUsers.get(p1);
	boolean v2 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public ShortcutPackage getPackageShortcutsLocked(String p1, int p2){
	ShortcutUser v1 = p0.getUserShortcutsLocked(p2);
	ShortcutPackage v2 = v1.getPackageShortcuts(p1);
	return v2;
}
-----
depth : 2
public ShortcutUser getUserShortcutsLocked(int p1){
	boolean v1 = p0.isUserUnlockedL(p1);
	p0.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v3 = this.mUsers.get(p1);
	ShortcutUser v4 = p0.loadUserLocked(p1);
	ShortcutUser v4 = new ShortcutUser(p0,p1);
	this.mUsers.put(p1, phiInstruction);
	p0.checkPackageChanges(p1);
	return phiInstruction;
}
-----
depth : 2
public ShortcutPackage getPackageShortcuts(String p1){
	ShortcutPackage v1 = p0.getPackageShortcutsIfExists(p1);
	ShortcutPackage v1 = new ShortcutPackage(p0,this.mUserId,p1);
	Object v3 = this.mPackages.put(p1, v1);
	return phiInstruction;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public boolean hasShareTargets(String p1, String p2, int p3){
	p0.throwIfUserLockedL(p3);
	ShortcutPackage v4 = p0.getPackageShortcutsLocked(p2, p3);
	boolean v5 = v4.hasShareTargets();
	return v5;
}
-----
depth : 1
public void throwIfUserLockedL(int p1){
	boolean v1 = p0.isUserUnlockedL(p1);
	return;
}
-----
depth : 2
public boolean isUserUnlockedL(int p1){
	boolean v1 = this.mUnlockedUsers.get(p1);
	return 1;
}
-----
depth : 1
public ShortcutPackage getPackageShortcutsLocked(String p1, int p2){
	ShortcutUser v1 = p0.getUserShortcutsLocked(p2);
	ShortcutPackage v2 = v1.getPackageShortcuts(p1);
	return v2;
}
-----
depth : 2
public ShortcutUser getUserShortcutsLocked(int p1){
	boolean v1 = p0.isUserUnlockedL(p1);
	p0.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v3 = this.mUsers.get(p1);
	ShortcutUser v4 = p0.loadUserLocked(p1);
	ShortcutUser v4 = new ShortcutUser(p0,p1);
	this.mUsers.put(p1, phiInstruction);
	p0.checkPackageChanges(p1);
	return phiInstruction;
}
-----
depth : 2
public ShortcutPackage getPackageShortcuts(String p1){
	ShortcutPackage v1 = p0.getPackageShortcutsIfExists(p1);
	ShortcutPackage v1 = new ShortcutPackage(p0,this.mUserId,p1);
	Object v3 = this.mPackages.put(p1, v1);
	return phiInstruction;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public boolean hasShareTargets(String p1, String p2, int p3){
	p0.throwIfUserLockedL(p3);
	ShortcutPackage v4 = p0.getPackageShortcutsLocked(p2, p3);
	boolean v5 = v4.hasShareTargets();
	return v5;
}
-----
depth : 1
public void throwIfUserLockedL(int p1){
	boolean v1 = p0.isUserUnlockedL(p1);
	return;
}
-----
depth : 2
public boolean isUserUnlockedL(int p1){
	boolean v1 = this.mUnlockedUsers.get(p1);
	boolean v2 = this.mUserManagerInternal.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public ShortcutPackage getPackageShortcutsLocked(String p1, int p2){
	ShortcutUser v1 = p0.getUserShortcutsLocked(p2);
	ShortcutPackage v2 = v1.getPackageShortcuts(p1);
	return v2;
}
-----
depth : 2
public ShortcutUser getUserShortcutsLocked(int p1){
	boolean v1 = p0.isUserUnlockedL(p1);
	p0.wtf("User still locked");
	this.mLastLockedUser = p1;
	Object v3 = this.mUsers.get(p1);
	ShortcutUser v4 = p0.loadUserLocked(p1);
	this.mUsers.put(p1, phiInstruction);
	p0.checkPackageChanges(p1);
	return phiInstruction;
}
-----
depth : 2
public ShortcutPackage getPackageShortcuts(String p1){
	ShortcutPackage v1 = p0.getPackageShortcutsIfExists(p1);
	ShortcutPackage v1 = new ShortcutPackage(p0,this.mUserId,p1);
	Object v3 = this.mPackages.put(p1, v1);
	return phiInstruction;
}
-----

and the following sink code:
['ShortcutPackage v4 = p0.getPackageShortcutsLocked(p2, p3);\nboolean v5 = v4.hasShareTargets();\nreturn v5;']

The method hasShareTargets has the following similar APIs:

- API Name: onApplicationActive(Ljava/lang/String;I)V with Similarity Score: 0.8449105024337769
  - Access Control Level: SYS_OR_SIG and the following code:
ShortcutPackage v3 = p0.getPackageShortcutsLocked(p1, p2);
v3.resetRateLimitingForCommandLineNoSaving();

- API Name: disableShortcuts(Ljava/lang/String;Ljava/util/List;Ljava/lang/CharSequence;II)V with Similarity Score: 0.8025898933410645
  - Access Control Level: SYS_OR_SIG and the following code:
ShortcutPackage v4 = p0.getPackageShortcutsForPublisherLocked(p1, p5);
v4.ensureImmutableShortcutsNotIncludedWithIds(p2, 1);
int v6 = p2.size();
v4.adjustRanks();

