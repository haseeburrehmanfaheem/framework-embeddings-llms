The method remove has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void remove(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleRemove(v4, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void remove(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w("FaceService", "Null provider for remove");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void remove(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleRemove(v4, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	int v6 = Slog.e("FaceService", "Single sensor, but provider not found");
	return 0;
}
-----

and the following sink code:
['Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);\nint v4 = Pair.first.intValue();\nPair.second.scheduleRemove(v4, p1, p2, p3, p4, p5);\nPair v1 = p1.getSingleProvider();\nList v1 = p0.getSensorProperties();\nInteger v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);\nPair v7 = new Pair(v8,v6);']

The method remove has the following similar APIs:

- API Name: cancelEnrollment(Landroid/os/IBinder;J)V with Similarity Score: 0.8225153684616089
  - Access Control Level: NORMAL and the following code:
List v1 = p0.getSensorProperties();
Object v3 = v1.get(0);
Iterator v4 = this.mServiceProviders.iterator();
boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
Pair v7 = new Pair(v8,v6);

- API Name: enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J with Similarity Score: 0.8216276168823242
  - Access Control Level: NORMAL and the following code:
Pair v1 = p1.getSingleProvider();
List v1 = p0.getSensorProperties();
int v2 = v1.size();
Object v3 = v1.get(0);
Iterator v4 = this.mServiceProviders.iterator();
boolean v5 = v4.hasNext();
Object v6 = v4.next();
boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
Pair v7 = new Pair(v8,v6);
Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);

