The method isOemUnlockAllowedByCarrier has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public boolean isOemUnlockAllowedByCarrier(){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void -$$Nest$menforceManageCarrierOemUnlockPermission(OemLockService p1){
	p1.enforceManageCarrierOemUnlockPermission();
	return;
}
-----
depth : 2
public void enforceManageCarrierOemUnlockPermission(){
	return;
}
-----

and the following sink code:
['OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);\nlong v2 = Binder.clearCallingIdentity();\nOemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);\nboolean v4 = v3.isOemUnlockAllowedByCarrier();\nBinder.restoreCallingIdentity(v2);\nreturn v4;']

The method isOemUnlockAllowedByCarrier has the following similar APIs:

- API Name: setOemUnlockAllowedByCarrier(Z[B)V with Similarity Score: 0.9564201235771179
  - Access Control Level: SYS_OR_SIG and the following code:
OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
long v3 = Binder.clearCallingIdentity();
OemLock v4 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
v4.setOemUnlockAllowedByCarrier(p1, p2);
Binder.restoreCallingIdentity(v3);

- API Name: isOemUnlockAllowedByUser()Z with Similarity Score: 0.8147966861724854
  - Access Control Level: SYS_OR_SIG and the following code:
OemLockService.-$$Nest$menforceManageUserOemUnlockPermission(this.this$0);
OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
boolean v4 = v3.isOemUnlockAllowedByDevice();
return v4;

