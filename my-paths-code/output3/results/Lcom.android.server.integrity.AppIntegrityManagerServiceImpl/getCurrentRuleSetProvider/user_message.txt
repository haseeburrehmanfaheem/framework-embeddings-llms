This is path 1 for the API with depth 2:
depth : 0
public String getCurrentRuleSetProvider(){
	int v1 = Binder.getCallingUid();
	String v2 = p0.getCallerPackageNameOrThrow(v1);
	RuleMetadata v3 = this.mIntegrityFileManager.readMetadata();
	String v4 = v3.getRuleProvider();
	String v5 = v3.getRuleProvider();
	return phiInstruction;
}
-----
depth : 1
public String getCallerPackageNameOrThrow(int p1){
	String v1 = p0.getCallingRulePusherPackageName(p1);
	return v1;
}
-----
depth : 2
public String getCallingRulePusherPackageName(int p1){
	List v1 = p0.getAllowedRuleProviderSystemApps();
	List v2 = p0.getPackageListForUid(p1);
	ArrayList v2 = new ArrayList();
	Iterator v4 = v2.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = v2.isEmpty();
	Object v7 = v2.get(0);
	return phiInstruction;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public String getCurrentRuleSetProvider(){
	int v1 = Binder.getCallingUid();
	String v2 = p0.getCallerPackageNameOrThrow(v1);
	RuleMetadata v3 = this.mIntegrityFileManager.readMetadata();
	String v4 = v3.getRuleProvider();
	String v5 = v3.getRuleProvider();
	return phiInstruction;
}
-----
depth : 1
public String getCallerPackageNameOrThrow(int p1){
	String v1 = p0.getCallingRulePusherPackageName(p1);
	return v1;
}
-----
depth : 2
public String getCallingRulePusherPackageName(int p1){
	List v1 = p0.getAllowedRuleProviderSystemApps();
	List v2 = p0.getPackageListForUid(p1);
	ArrayList v2 = new ArrayList();
	Iterator v4 = v2.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = v2.isEmpty();
	return phiInstruction;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public String getCurrentRuleSetProvider(){
	int v1 = Binder.getCallingUid();
	String v2 = p0.getCallerPackageNameOrThrow(v1);
	RuleMetadata v3 = this.mIntegrityFileManager.readMetadata();
	String v4 = v3.getRuleProvider();
	return phiInstruction;
}
-----
depth : 1
public String getCallerPackageNameOrThrow(int p1){
	String v1 = p0.getCallingRulePusherPackageName(p1);
	return v1;
}
-----
depth : 2
public String getCallingRulePusherPackageName(int p1){
	List v1 = p0.getAllowedRuleProviderSystemApps();
	List v2 = p0.getPackageListForUid(p1);
	ArrayList v2 = new ArrayList();
	Iterator v4 = v2.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = v2.isEmpty();
	Object v7 = v2.get(0);
	return phiInstruction;
}
-----
