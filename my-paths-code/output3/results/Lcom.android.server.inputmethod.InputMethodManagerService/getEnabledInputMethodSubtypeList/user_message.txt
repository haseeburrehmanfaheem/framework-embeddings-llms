This is path 1 for the API with depth 2:
depth : 0
public List getEnabledInputMethodSubtypeList(String p1, boolean p2){
	int v1 = UserHandle.getCallingUserId();
	int v2 = this.mSettings.getCurrentUserId();
	[I v3 = InputMethodUtils.resolveUserId(v1, v2, 0);
	long v4 = Binder.clearCallingIdentity();
	List v5 = p0.getEnabledInputMethodSubtypeListLocked(p1, p2, v3[0]);
	Binder.restoreCallingIdentity(v4);
	return v5;
}
-----
depth : 1
public int getCurrentUserId(){
	return this.mCurrentUserId;
}
-----
depth : 1
public [I resolveUserId(int p1, int p2, PrintWriter p3){
	Object v1 = LocalServices.getService(UserManagerInterna.class);
	boolean v2 = v1.exists(p1);
	[I v2 = new [I(1);
	return v2;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public List getEnabledInputMethodSubtypeListLocked(String p1, boolean p2, int p3){
	String v2 = p0.getSelectedMethodIdLocked();
	Object v3 = this.mMethodMap.get(v2);
	List v4 = this.mSettings.getEnabledInputMethodSubtypeListLocked(this.mContext, phiInstruction, p2);
	return v4;
}
-----
depth : 2
public String getSelectedMethodIdLocked(){
	String v1 = this.mBindingController.getSelectedMethodId();
	return v1;
}
-----
depth : 2
public List getEnabledInputMethodSubtypeListLocked(Context p1, InputMethodInfo p2, boolean p3){
	List v1 = p0.getEnabledInputMethodSubtypeListLocked(p2);
	boolean v2 = v1.isEmpty();
	Resources v3 = p1.getResources();
	ArrayList v4 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v3, p2);
	List v5 = InputMethodSubtype.sort(p1, 0, p2, phiInstruction);
	return v5;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public List getEnabledInputMethodSubtypeList(String p1, boolean p2){
	int v1 = UserHandle.getCallingUserId();
	int v2 = this.mSettings.getCurrentUserId();
	[I v3 = InputMethodUtils.resolveUserId(v1, v2, 0);
	long v4 = Binder.clearCallingIdentity();
	List v5 = p0.getEnabledInputMethodSubtypeListLocked(p1, p2, v3[0]);
	Binder.restoreCallingIdentity(v4);
	return v5;
}
-----
depth : 1
public int getCurrentUserId(){
	return this.mCurrentUserId;
}
-----
depth : 1
public [I resolveUserId(int p1, int p2, PrintWriter p3){
	Object v1 = LocalServices.getService(UserManagerInterna.class);
	boolean v2 = v1.exists(p1);
	[I v2 = new [I(1);
	return v2;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public List getEnabledInputMethodSubtypeListLocked(String p1, boolean p2, int p3){
	String v2 = p0.getSelectedMethodIdLocked();
	Object v3 = this.mMethodMap.get(p1);
	List v4 = this.mSettings.getEnabledInputMethodSubtypeListLocked(this.mContext, phiInstruction, p2);
	return v4;
}
-----
depth : 2
public String getSelectedMethodIdLocked(){
	String v1 = this.mBindingController.getSelectedMethodId();
	return v1;
}
-----
depth : 2
public List getEnabledInputMethodSubtypeListLocked(Context p1, InputMethodInfo p2, boolean p3){
	List v1 = p0.getEnabledInputMethodSubtypeListLocked(p2);
	boolean v2 = v1.isEmpty();
	Resources v3 = p1.getResources();
	ArrayList v4 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v3, p2);
	List v5 = InputMethodSubtype.sort(p1, 0, p2, phiInstruction);
	return v5;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public List getEnabledInputMethodSubtypeList(String p1, boolean p2){
	int v1 = UserHandle.getCallingUserId();
	int v2 = this.mSettings.getCurrentUserId();
	[I v3 = InputMethodUtils.resolveUserId(v1, v2, 0);
	long v4 = Binder.clearCallingIdentity();
	List v5 = p0.getEnabledInputMethodSubtypeListLocked(p1, p2, v3[0]);
	Binder.restoreCallingIdentity(v4);
	return v5;
}
-----
depth : 1
public int getCurrentUserId(){
	return this.mCurrentUserId;
}
-----
depth : 1
public [I resolveUserId(int p1, int p2, PrintWriter p3){
	Object v1 = LocalServices.getService(UserManagerInterna.class);
	[I v1 = new [I(1);
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public List getEnabledInputMethodSubtypeListLocked(String p1, boolean p2, int p3){
	String v2 = p0.getSelectedMethodIdLocked();
	Object v3 = this.mMethodMap.get(v2);
	List v4 = this.mSettings.getEnabledInputMethodSubtypeListLocked(this.mContext, phiInstruction, p2);
	return v4;
}
-----
depth : 2
public String getSelectedMethodIdLocked(){
	String v1 = this.mBindingController.getSelectedMethodId();
	return v1;
}
-----
depth : 2
public List getEnabledInputMethodSubtypeListLocked(Context p1, InputMethodInfo p2, boolean p3){
	List v1 = p0.getEnabledInputMethodSubtypeListLocked(p2);
	boolean v2 = v1.isEmpty();
	Resources v3 = p1.getResources();
	ArrayList v4 = InputMethodUtils.getImplicitlyApplicableSubtypesLocked(v3, p2);
	List v5 = InputMethodSubtype.sort(p1, 0, p2, phiInstruction);
	return v5;
}
-----
