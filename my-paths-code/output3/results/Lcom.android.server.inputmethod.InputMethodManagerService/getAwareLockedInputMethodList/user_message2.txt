The method getAwareLockedInputMethodList has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public List getAwareLockedInputMethodList(int p1, int p2){
	List v1 = p0.getInputMethodListInternal(p1, p2);
	return v1;
}
-----
depth : 1
public List getInputMethodListInternal(int p1, int p2){
	int v3 = this.mSettings.getCurrentUserId();
	[I v4 = InputMethodUtils.resolveUserId(p1, v3, 0);
	long v5 = Binder.clearCallingIdentity();
	List v6 = p0.getInputMethodListLocked(v4[0], p2);
	Binder.restoreCallingIdentity(v5);
	return v6;
}
-----
depth : 2
public int getCurrentUserId(){
	return this.mCurrentUserId;
}
-----
depth : 2
public [I resolveUserId(int p1, int p2, PrintWriter p3){
	Object v1 = LocalServices.getService(UserManagerInterna.class);
	boolean v2 = v1.exists(p1);
	p3.print("User #");
	p3.print(p1);
	p3.println(" does not exit.");
	[I v5 = new [I(0);
	return v5;
}
-----
depth : 2
public List getInputMethodListLocked(int p1, int p2){
	ArrayMap v1 = new ArrayMap();
	ArrayList v2 = new ArrayList();
	ArrayMap v3 = new ArrayMap();
	AdditionalSubtypeUtils.load(v3, p1);
	InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, p1, v3, v1, v2, p2);
	return phiInstruction;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public List getAwareLockedInputMethodList(int p1, int p2){
	List v1 = p0.getInputMethodListInternal(p1, p2);
	return v1;
}
-----
depth : 1
public List getInputMethodListInternal(int p1, int p2){
	int v3 = this.mSettings.getCurrentUserId();
	[I v4 = InputMethodUtils.resolveUserId(p1, v3, 0);
	long v5 = Binder.clearCallingIdentity();
	List v6 = p0.getInputMethodListLocked(v4[0], p2);
	Binder.restoreCallingIdentity(v5);
	return v6;
}
-----
depth : 2
public int getCurrentUserId(){
	return this.mCurrentUserId;
}
-----
depth : 2
public [I resolveUserId(int p1, int p2, PrintWriter p3){
	Object v1 = LocalServices.getService(UserManagerInterna.class);
	boolean v2 = v1.exists(p1);
	p3.print("User #");
	p3.print(p1);
	p3.println(" does not exit.");
	[I v5 = new [I(0);
	return v5;
}
-----
depth : 2
public List getInputMethodListLocked(int p1, int p2){
	ArrayMap v1 = new ArrayMap();
	ArrayList v2 = new ArrayList();
	ArrayMap v3 = new ArrayMap();
	AdditionalSubtypeUtils.load(v3, p1);
	InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, p1, v3, v1, v2, p2);
	return phiInstruction;
}
-----

and the following sink code:
['List v1 = p0.getInputMethodListInternal(p1, p2);\nint v3 = this.mSettings.getCurrentUserId();\n[I v4 = InputMethodUtils.resolveUserId(p1, v3, 0);\nlong v5 = Binder.clearCallingIdentity();\nList v6 = p0.getInputMethodListLocked(v4[0], p2);\nreturn v6;\nreturn v1;']

The method getAwareLockedInputMethodList has the following similar APIs:

- API Name: getInputMethodList(I)Ljava/util/List; with Similarity Score: 0.9401180744171143
  - Access Control Level: SYS_OR_SIG and the following code:
List v1 = p0.getInputMethodListInternal(p1, 0);
int v3 = this.mSettings.getCurrentUserId();
[I v4 = InputMethodUtils.resolveUserId(p1, v3, 0);
List v6 = p0.getInputMethodListLocked(v4[0], p2);
return v6;

- API Name: getEnabledInputMethodSubtypeList(Ljava/lang/String;Z)Ljava/util/List; with Similarity Score: 0.8903931379318237
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = UserHandle.getCallingUserId();
int v2 = this.mSettings.getCurrentUserId();
[I v3 = InputMethodUtils.resolveUserId(v1, v2, 0);
long v4 = Binder.clearCallingIdentity();
List v5 = p0.getEnabledInputMethodSubtypeListLocked(p1, p2, v3[0]);
return v5;

