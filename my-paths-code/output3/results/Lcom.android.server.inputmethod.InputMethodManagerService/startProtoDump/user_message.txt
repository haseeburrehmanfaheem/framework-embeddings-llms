This is path 1 for the API with depth 2:
depth : 0
public void startProtoDump(byte[] p1, int p2, String p3){
	ImeTracing v1 = ImeTracing.getInstance();
	boolean v2 = v1.isAvailable();
	boolean v3 = v1.isEnabled();
	ProtoOutputStream v3 = new ProtoOutputStream();
	long v5 = v3.start(2246267895810);
	long v6 = SystemClock.elapsedRealtimeNanos();
	v3.write(1125281431553, v6);
	v3.write(1138166333442, p3);
	p0.dumpDebug(v3, 1146756268035);
	v3.end(v5);
	v1.addToBuffer(v3, p2);
	return;
}
-----
depth : 1
public ImeTracing getInstance(){
	boolean v1 = ImeTracing.isSystemProcess();
	ImeTracingServerImpl v1 = new ImeTracingServerImpl();
	this.sInstance = phiInstruction;
	return this.sInstance;
}
-----
depth : 2
public boolean isSystemProcess(){
	boolean v1 = ActivityThread.isSystem();
	return v1;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void startProtoDump(byte[] p1, int p2, String p3){
	ImeTracing v1 = ImeTracing.getInstance();
	boolean v2 = v1.isAvailable();
	boolean v3 = v1.isEnabled();
	ProtoOutputStream v3 = new ProtoOutputStream();
	long v5 = v3.start(2246267895810);
	long v6 = SystemClock.elapsedRealtimeNanos();
	v3.write(1125281431553, v6);
	v3.write(1138166333442, p3);
	p0.dumpDebug(v3, 1146756268035);
	v3.end(v5);
	v1.addToBuffer(v3, p2);
	return;
}
-----
depth : 1
public ImeTracing getInstance(){
	boolean v1 = ImeTracing.isSystemProcess();
	ImeTracingClientImpl v1 = new ImeTracingClientImpl();
	this.sInstance = phiInstruction;
	return this.sInstance;
}
-----
depth : 2
public boolean isSystemProcess(){
	boolean v1 = ActivityThread.isSystem();
	return v1;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public void startProtoDump(byte[] p1, int p2, String p3){
	ImeTracing v1 = ImeTracing.getInstance();
	boolean v2 = v1.isAvailable();
	boolean v3 = v1.isEnabled();
	ProtoOutputStream v3 = new ProtoOutputStream();
	long v5 = v3.start(2246267895810);
	long v6 = SystemClock.elapsedRealtimeNanos();
	v3.write(1125281431553, v6);
	v3.write(1138166333442, p3);
	v3.write(1146756268035, p1);
	v3.end(v5);
	v1.addToBuffer(v3, p2);
	return;
}
-----
depth : 1
public ImeTracing getInstance(){
	boolean v1 = ImeTracing.isSystemProcess();
	ImeTracingServerImpl v1 = new ImeTracingServerImpl();
	this.sInstance = phiInstruction;
	return this.sInstance;
}
-----
depth : 2
public boolean isSystemProcess(){
	boolean v1 = ActivityThread.isSystem();
	return v1;
}
-----
