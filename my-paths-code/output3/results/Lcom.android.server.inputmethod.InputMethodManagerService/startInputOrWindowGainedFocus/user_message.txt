This is path 1 for the API with depth 2:
depth : 0
public InputBindResult startInputOrWindowGainedFocus(int p1, IInputMethodClient p2, IBinder p3, int p4, int p5, int p6, EditorInfo p7, IInputContext p8, IRemoteAccessibilityInputConnection p9, int p10, ImeOnBackInvokedDispatcher p11){
	InputBindResult v1 = p0.startInputOrWindowGainedFocusInternal(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
	return v1;
}
-----
depth : 1
public InputBindResult startInputOrWindowGainedFocusInternal(int p1, IInputMethodClient p2, IBinder p3, int p4, int p5, int p6, EditorInfo p7, IInputContext p8, IRemoteAccessibilityInputConnection p9, int p10, ImeOnBackInvokedDispatcher p11){
	int v7 = EditorInfo.targetInputMethodUser.getIdentifier();
	boolean v8 = this.mUserManagerInternal.isUserRunning(v7);
	long v9 = Binder.clearCallingIdentity();
	InputBindResult v10 = p0.startInputOrWindowGainedFocusInternalLocked(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, phiInstruction, p11);
	Binder.restoreCallingIdentity(v9);
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append("InputBindResult is @NonNull. startInputReason=");
	String v14 = InputMethodDebug.startInputReasonToString(p1);
	StringBuilder v15 = v11.append(v14);
	StringBuilder v16 = v11.append(" windowFlags=#");
	String v17 = Integer.toHexString(p6);
	StringBuilder v18 = v11.append(v17);
	StringBuilder v19 = v11.append(" editorInfo=");
	StringBuilder v20 = v11.append(p7);
	String v21 = v11.toString();
	int v22 = Slog.wtf("InputMethodManagerService", v21);
	Trace.traceEnd(32);
	return InputBindResult.NULL;
}
-----
depth : 2
public InputBindResult startInputOrWindowGainedFocusInternalLocked(int p1, IInputMethodClient p2, IBinder p3, int p4, int p5, int p6, EditorInfo p7, IInputContext p8, IRemoteAccessibilityInputConnection p9, int p10, int p11, ImeOnBackInvokedDispatcher p12){
	InputBindResult v7 = p0.startInputUncheckedLocked(v2, p8, p9, p7, p4, p1, p10, p12);
	return v7;
}
-----
depth : 2
public String startInputReasonToString(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("Unknown=");
	StringBuilder v3 = v2.append(p1);
	String v4 = v3.toString();
	return v4;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public InputBindResult startInputOrWindowGainedFocus(int p1, IInputMethodClient p2, IBinder p3, int p4, int p5, int p6, EditorInfo p7, IInputContext p8, IRemoteAccessibilityInputConnection p9, int p10, ImeOnBackInvokedDispatcher p11){
	InputBindResult v1 = p0.startInputOrWindowGainedFocusInternal(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11);
	return v1;
}
-----
depth : 1
public InputBindResult startInputOrWindowGainedFocusInternal(int p1, IInputMethodClient p2, IBinder p3, int p4, int p5, int p6, EditorInfo p7, IInputContext p8, IRemoteAccessibilityInputConnection p9, int p10, ImeOnBackInvokedDispatcher p11){
	long v6 = Binder.clearCallingIdentity();
	InputBindResult v7 = p0.startInputOrWindowGainedFocusInternalLocked(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, phiInstruction, p11);
	Binder.restoreCallingIdentity(v6);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append("InputBindResult is @NonNull. startInputReason=");
	String v11 = InputMethodDebug.startInputReasonToString(p1);
	StringBuilder v12 = v8.append(v11);
	StringBuilder v13 = v8.append(" windowFlags=#");
	String v14 = Integer.toHexString(p6);
	StringBuilder v15 = v8.append(v14);
	StringBuilder v16 = v8.append(" editorInfo=");
	StringBuilder v17 = v8.append(p7);
	String v18 = v8.toString();
	int v19 = Slog.wtf("InputMethodManagerService", v18);
	Trace.traceEnd(32);
	return InputBindResult.NULL;
}
-----
depth : 2
public InputBindResult startInputOrWindowGainedFocusInternalLocked(int p1, IInputMethodClient p2, IBinder p3, int p4, int p5, int p6, EditorInfo p7, IInputContext p8, IRemoteAccessibilityInputConnection p9, int p10, int p11, ImeOnBackInvokedDispatcher p12){
	InputBindResult v7 = p0.startInputUncheckedLocked(v2, p8, p9, p7, p4, p1, p10, p12);
	return v7;
}
-----
depth : 2
public String startInputReasonToString(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append("Unknown=");
	StringBuilder v3 = v2.append(p1);
	String v4 = v3.toString();
	return v4;
}
-----
