The method downloadMessage has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void downloadMessage(int p1, String p2, String p3, Uri p4, Bundle p5, PendingIntent p6, long p7, String p8){
	Uri v11 = p0.adjustUriForUserAndGrantPermission(p4, "android.service.carrier.CarrierMessagingService", 3, p1);
	IMms v12 = MmsServiceBroker.-$$Nest$mgetServiceGuarded(this.this$0);
	v12.downloadMessage(p1, p2, p3, v11, p5, p6, p7, p8);
	return;
}
-----
depth : 1
public Uri adjustUriForUserAndGrantPermission(Uri p1, String p2, int p3, int p4){
	Uri v6 = ContentProvider.maybeAddUserId(p1, v5);
	long v7 = Binder.clearCallingIdentity();
	Object v8 = LocalServices.getService(UriGrantsManagerInterna.class);
	NeededUriGrants v9 = v8.checkGrantUriPermissionFromIntent(v0, v4, "com.android.phone", 0);
	v8.grantUriPermissionUncheckedFromIntent(v9, 0);
	Intent v10 = new Intent(p2);
	Context v12 = MmsServiceBroker.-$$Nest$fgetmContext(this.this$0);
	Object v13 = v12.getSystemService("phone");
	int v14 = MmsServiceBroker.-$$Nest$mgetPhoneIdFromSubId(this.this$0, p4);
	List v15 = v13.getCarrierPackageNamesForIntentAndPhone(v10, v14);
	int v16 = v15.size();
	Object v17 = v15.get(0);
	NeededUriGrants v18 = v8.checkGrantUriPermissionFromIntent(v0, v4, v17, 0);
	v8.grantUriPermissionUncheckedFromIntent(v18, 0);
	Binder.restoreCallingIdentity(v7);
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public Context -$$Nest$fgetmContext(MmsServiceBroker p1){
	return this.mContext;
}
-----
depth : 2
public int -$$Nest$mgetPhoneIdFromSubId(MmsServiceBroker p1, int p2){
	int v1 = p1.getPhoneIdFromSubId(p2);
	return v1;
}
-----
depth : 1
public IMms -$$Nest$mgetServiceGuarded(MmsServiceBroker p1){
	IMms v1 = p1.getServiceGuarded();
	return v1;
}
-----
depth : 2
public IMms getServiceGuarded(){
	IMms v1 = p0.getOrConnectService();
	return this.mServiceStubForFailure;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void downloadMessage(int p1, String p2, String p3, Uri p4, Bundle p5, PendingIntent p6, long p7, String p8){
	Uri v11 = p0.adjustUriForUserAndGrantPermission(p4, "android.service.carrier.CarrierMessagingService", 3, p1);
	IMms v12 = MmsServiceBroker.-$$Nest$mgetServiceGuarded(this.this$0);
	v12.downloadMessage(p1, p2, p3, v11, p5, p6, p7, p8);
	return;
}
-----
depth : 1
public Uri adjustUriForUserAndGrantPermission(Uri p1, String p2, int p3, int p4){
	Uri v6 = ContentProvider.maybeAddUserId(p1, v5);
	long v7 = Binder.clearCallingIdentity();
	Object v8 = LocalServices.getService(UriGrantsManagerInterna.class);
	NeededUriGrants v9 = v8.checkGrantUriPermissionFromIntent(v0, v4, "com.android.phone", 0);
	v8.grantUriPermissionUncheckedFromIntent(v9, 0);
	Intent v10 = new Intent(p2);
	Context v12 = MmsServiceBroker.-$$Nest$fgetmContext(this.this$0);
	Object v13 = v12.getSystemService("phone");
	int v14 = MmsServiceBroker.-$$Nest$mgetPhoneIdFromSubId(this.this$0, p4);
	List v15 = v13.getCarrierPackageNamesForIntentAndPhone(v10, v14);
	int v16 = v15.size();
	Object v17 = v15.get(0);
	NeededUriGrants v18 = v8.checkGrantUriPermissionFromIntent(v0, v4, v17, 0);
	v8.grantUriPermissionUncheckedFromIntent(v18, 0);
	Binder.restoreCallingIdentity(v7);
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public Context -$$Nest$fgetmContext(MmsServiceBroker p1){
	return this.mContext;
}
-----
depth : 2
public int -$$Nest$mgetPhoneIdFromSubId(MmsServiceBroker p1, int p2){
	int v1 = p1.getPhoneIdFromSubId(p2);
	return v1;
}
-----
depth : 1
public IMms -$$Nest$mgetServiceGuarded(MmsServiceBroker p1){
	IMms v1 = p1.getServiceGuarded();
	return v1;
}
-----
depth : 2
public IMms getServiceGuarded(){
	IMms v1 = p0.getOrConnectService();
	return v1;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void downloadMessage(int p1, String p2, String p3, Uri p4, Bundle p5, PendingIntent p6, long p7, String p8){
	Uri v11 = p0.adjustUriForUserAndGrantPermission(p4, "android.service.carrier.CarrierMessagingService", 3, p1);
	IMms v12 = MmsServiceBroker.-$$Nest$mgetServiceGuarded(this.this$0);
	v12.downloadMessage(p1, p2, p3, v11, p5, p6, p7, p8);
	return;
}
-----
depth : 1
public Uri adjustUriForUserAndGrantPermission(Uri p1, String p2, int p3, int p4){
	long v6 = Binder.clearCallingIdentity();
	Object v7 = LocalServices.getService(UriGrantsManagerInterna.class);
	NeededUriGrants v8 = v7.checkGrantUriPermissionFromIntent(v0, v4, "com.android.phone", 0);
	v7.grantUriPermissionUncheckedFromIntent(v8, 0);
	Intent v9 = new Intent(p2);
	Context v11 = MmsServiceBroker.-$$Nest$fgetmContext(this.this$0);
	Object v12 = v11.getSystemService("phone");
	int v13 = MmsServiceBroker.-$$Nest$mgetPhoneIdFromSubId(this.this$0, p4);
	List v14 = v12.getCarrierPackageNamesForIntentAndPhone(v9, v13);
	int v15 = v14.size();
	Object v16 = v14.get(0);
	NeededUriGrants v17 = v7.checkGrantUriPermissionFromIntent(v0, v4, v16, 0);
	v7.grantUriPermissionUncheckedFromIntent(v17, 0);
	Binder.restoreCallingIdentity(v6);
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public Context -$$Nest$fgetmContext(MmsServiceBroker p1){
	return this.mContext;
}
-----
depth : 2
public int -$$Nest$mgetPhoneIdFromSubId(MmsServiceBroker p1, int p2){
	int v1 = p1.getPhoneIdFromSubId(p2);
	return v1;
}
-----
depth : 1
public IMms -$$Nest$mgetServiceGuarded(MmsServiceBroker p1){
	IMms v1 = p1.getServiceGuarded();
	return v1;
}
-----
depth : 2
public IMms getServiceGuarded(){
	IMms v1 = p0.getOrConnectService();
	return this.mServiceStubForFailure;
}
-----

and the following sink code:
['Uri v11 = p0.adjustUriForUserAndGrantPermission(p4, "android.service.carrier.CarrierMessagingService", 3, p1);\nIMms v12 = MmsServiceBroker.-$$Nest$mgetServiceGuarded(this.this$0);\nv12.downloadMessage(p1, p2, p3, v11, p5, p6, p7, p8);', 'Object v8 = LocalServices.getService(UriGrantsManagerInterna.class);\nNeededUriGrants v9 = v8.checkGrantUriPermissionFromIntent(v0, v4, "com.android.phone", 0);\nv8.grantUriPermissionUncheckedFromIntent(v9, 0);']

The method downloadMessage has the following similar APIs:

- API Name: sendMessage(ILjava/lang/String;Landroid/net/Uri;Ljava/lang/String;Landroid/os/Bundle;Landroid/app/PendingIntent;JLjava/lang/String;)V with Similarity Score: 0.9436665773391724
  - Access Control Level: SYS_OR_SIG and the following code:
Uri v11 = p0.adjustUriForUserAndGrantPermission(p3, "android.service.carrier.CarrierMessagingService", 1, p1);
IMms v12 = MmsServiceBroker.-$$Nest$mgetServiceGuarded(this.this$0);
v12.sendMessage(p1, p2, v11, p4, p5, p6, p7, p8);

