This is path 1 for the API with depth 2:
depth : 0
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public void unhandledBackLocked(){
	ActivityRecord v1 = p0.getTopMostActivity();
	int v2 = v1.finishIfPossible("unhandled-back", 1);
	return;
}
-----
depth : 2
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public int finishIfPossible(String p1, boolean p2){
	int v1 = p0.finishIfPossible(0, 0, 0, p1, p2);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public void unhandledBackLocked(){
	ActivityRecord v1 = p0.getTopMostActivity();
	int v2 = v1.finishIfPossible("unhandled-back", 1);
	return;
}
-----
depth : 2
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public int finishIfPossible(String p1, boolean p2){
	int v1 = p0.finishIfPossible(0, 0, 0, p1, p2);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public void unhandledBackLocked(){
	ActivityRecord v1 = p0.getTopMostActivity();
	int v2 = v1.finishIfPossible("unhandled-back", 1);
	return;
}
-----
depth : 2
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public int finishIfPossible(String p1, boolean p2){
	int v1 = p0.finishIfPossible(0, 0, 0, p1, p2);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
