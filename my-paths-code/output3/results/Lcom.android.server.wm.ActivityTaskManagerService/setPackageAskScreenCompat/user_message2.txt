The method setPackageAskScreenCompat has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setPackageAskCompatModeLocked(String p1, boolean p2){
	p0.setPackageFlagLocked(p1, 1, p2);
	return;
}
-----
depth : 2
public void setPackageFlagLocked(String p1, int p2, boolean p3){
	int v1 = p0.getPackageFlags(p1);
	Integer v2 = Integer.valueOf(phiInstruction);
	Object v3 = this.mPackages.put(p1, v2);
	p0.scheduleWrite();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void setPackageAskCompatModeLocked(String p1, boolean p2){
	p0.setPackageFlagLocked(p1, 1, p2);
	return;
}
-----
depth : 2
public void setPackageFlagLocked(String p1, int p2, boolean p3){
	int v1 = p0.getPackageFlags(p1);
	Integer v2 = Integer.valueOf(phiInstruction);
	Object v3 = this.mPackages.put(p1, v2);
	p0.scheduleWrite();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setPackageAskCompatModeLocked(String p1, boolean p2){
	p0.setPackageFlagLocked(p1, 1, p2);
	return;
}
-----
depth : 2
public void setPackageFlagLocked(String p1, int p2, boolean p3){
	int v1 = p0.getPackageFlags(p1);
	Integer v2 = Integer.valueOf(phiInstruction);
	Object v3 = this.mPackages.put(p1, v2);
	p0.scheduleWrite();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----

and the following sink code:
['this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);\np0.setPackageFlagLocked(p1, 1, p2);\nInteger v2 = Integer.valueOf(phiInstruction);\nObject v3 = this.mPackages.put(p1, v2);', 'WindowManagerService.boostPriorityForLockedSection();\nthis.sThreadPriorityBooster.boost();']

The method setPackageAskScreenCompat has the following similar APIs:

- API Name: cancelTaskWindowTransition(I)V with Similarity Score: 1.0000001192092896
  - Access Control Level: SYS_OR_SIG and the following code:
WindowManagerService.boostPriorityForLockedSection();
this.sThreadPriorityBooster.boost();

- API Name: setLockScreenShown(ZZ)V with Similarity Score: 1.0000001192092896
  - Access Control Level: SYS_OR_SIG and the following code:
WindowManagerService.boostPriorityForLockedSection();
this.sThreadPriorityBooster.boost();

