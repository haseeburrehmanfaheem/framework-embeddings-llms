This is path 1 for the API with depth 2:
depth : 0
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 2
public ActivityRecord getTopNonFinishingActivity(boolean p1){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
depth : 1
public DevicePolicyCache getInstance(){
	Object v1 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache$EmptyDevicePolicyCache v2 = DevicePolicyCache$EmptyDevicePolicyCache.-$$Nest$sfgetINSTANCE();
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public DevicePolicyCache$EmptyDevicePolicyCache -$$Nest$sfgetINSTANCE(){
	return this.INSTANCE;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 2
public ActivityRecord getTopNonFinishingActivity(boolean p1){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
depth : 1
public DevicePolicyCache getInstance(){
	Object v1 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache$EmptyDevicePolicyCache v2 = DevicePolicyCache$EmptyDevicePolicyCache.-$$Nest$sfgetINSTANCE();
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public DevicePolicyCache$EmptyDevicePolicyCache -$$Nest$sfgetINSTANCE(){
	return this.INSTANCE;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 2
public ActivityRecord getTopNonFinishingActivity(boolean p1){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
depth : 1
public DevicePolicyCache getInstance(){
	Object v1 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache$EmptyDevicePolicyCache v2 = DevicePolicyCache$EmptyDevicePolicyCache.-$$Nest$sfgetINSTANCE();
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public DevicePolicyCache$EmptyDevicePolicyCache -$$Nest$sfgetINSTANCE(){
	return this.INSTANCE;
}
-----
