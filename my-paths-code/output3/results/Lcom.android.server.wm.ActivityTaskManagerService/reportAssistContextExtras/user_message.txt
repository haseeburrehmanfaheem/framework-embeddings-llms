This is path 1 for the API with depth 2:
depth : 0
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable("android.intent.extra.REFERRER", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v10 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 2
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 2
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable("android.intent.extra.REFERRER", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v10 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 2
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 2
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable("android.intent.extra.REFERRER", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v10 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 2
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 2
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
