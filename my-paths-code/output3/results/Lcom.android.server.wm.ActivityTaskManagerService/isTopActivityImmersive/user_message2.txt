The method isTopActivityImmersive has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller("isTopActivityImmersive");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller("isTopActivityImmersive");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller("isTopActivityImmersive");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----

and the following sink code:
['Task v3 = p0.getTopDisplayFocusedRootTask();\nActivityRecord v4 = v3.topRunningActivity();']

The method isTopActivityImmersive has the following similar APIs:

- API Name: isAssistDataAllowedOnCurrentActivity()Z with Similarity Score: 0.9456148147583008
  - Access Control Level: NONE and the following code:
Task v2 = p0.getTopDisplayFocusedRootTask();
boolean v3 = v2.isActivityTypeAssistant();
ActivityRecord v4 = v2.getTopNonFinishingActivity();

- API Name: getFrontActivityScreenCompatMode()I with Similarity Score: 0.8952821493148804
  - Access Control Level: SYS_OR_SIG and the following code:
Task v3 = p0.getTopDisplayFocusedRootTask();
ActivityRecord v4 = v3.topRunningActivity();
int v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
return v5;

