This is path 1 for the API with depth 2:
depth : 0
public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v5 = Boolean.valueOf(p1);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, "setLockScreenShown");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v9 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v9);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v14 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v16 = this.mH.post(v14);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v5 = Boolean.valueOf(p1);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, "setLockScreenShown");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v9 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v9);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v14 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v16 = this.mH.post(v14);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v5 = Boolean.valueOf(p1);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, "setLockScreenShown");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v9 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v9);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v14 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v16 = this.mH.post(v14);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
