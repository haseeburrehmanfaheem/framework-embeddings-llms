This is path 1 for the API with depth 2:
depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission("android.permission.INTERACT_ACROSS_USERS");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission("android.permission.INTERACT_ACROSS_USERS");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
