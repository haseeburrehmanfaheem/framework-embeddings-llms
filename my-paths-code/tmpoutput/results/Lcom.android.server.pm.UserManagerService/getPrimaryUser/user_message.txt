This is path 1 for the API with depth 2:
depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission("query users");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission("query users");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
