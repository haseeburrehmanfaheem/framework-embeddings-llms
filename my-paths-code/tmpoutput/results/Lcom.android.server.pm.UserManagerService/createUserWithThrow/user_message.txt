This is path 1 for the API with depth 2:
depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, "Cannot add user");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("createUser-");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, "Cannot add user");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("createUser-");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----

This is path 3 for the API with depth 2:
depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	int v2 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v2, "Cannot add user");
	UserInfo v4 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v4;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append("createUser-");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
