This is path 1 for the API with depth 2:
depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission("check if in the same profile group");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkQueryUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.QUERY_USERS");
	return v1;
}
-----
depth : 1
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission("check if in the same profile group");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkQueryUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.QUERY_USERS");
	return v1;
}
-----
depth : 1
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
