This is path 1 for the API with depth 2:
depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission("get user account");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission("get user account");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
