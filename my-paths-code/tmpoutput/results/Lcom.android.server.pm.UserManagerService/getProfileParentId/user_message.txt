This is path 1 for the API with depth 2:
depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission("get the profile parent");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return p1;
}
-----
depth : 2
public Object -$$Nest$fgetmUsersLock(UserManagerService p1){
	return this.mUsersLock;
}
-----
depth : 2
public UserInfo -$$Nest$mgetProfileParentLU(UserManagerService p1, int p2){
	UserInfo v1 = p1.getProfileParentLU(p2);
	return v1;
}
-----

This is path 2 for the API with depth 2:
depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission("get the profile parent");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return UserInfo.id;
}
-----
depth : 2
public Object -$$Nest$fgetmUsersLock(UserManagerService p1){
	return this.mUsersLock;
}
-----
depth : 2
public UserInfo -$$Nest$mgetProfileParentLU(UserManagerService p1, int p2){
	UserInfo v1 = p1.getProfileParentLU(p2);
	return v1;
}
-----
