The method isUserNameSet has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----

and the following sink code:
['int v1 = Binder.getCallingUid();\nboolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();\nUserInfo v4 = p0.getUserInfoLU(p1);', 'boolean v1 = UserManagerService.hasCreateUsersPermission();\nint v2 = Binder.getCallingUid();\nboolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);']

The method isUserNameSet has the following similar APIs:

- API Name: getUserName()Ljava/lang/String; with Similarity Score: 1.0
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v1 = UserManagerService.hasCreateUsersPermission();
int v2 = Binder.getCallingUid();
boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);

- API Name: getProfiles(IZ)Ljava/util/List; with Similarity Score: 0.9693561792373657
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
int v2 = Binder.getCallingUid();
boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);

