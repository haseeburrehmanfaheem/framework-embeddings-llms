The method setUserAccount has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user account");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user account");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user account");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----

and the following sink code:
['Object v2 = this.mUsers.get(p1);\nboolean v3 = Objects.equals(UserManagerService$UserData.account, p2);\nUserManagerService$UserData.account = p2;', 'UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user account");']

The method setUserAccount has the following similar APIs:

- API Name: getUserAccount(I)Ljava/lang/String; with Similarity Score: 0.9193761348724365
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mUsers.get(p1);
return UserManagerService$UserData.account;

- API Name: setUserAdmin(I)V with Similarity Score: 0.8861690759658813
  - Access Control Level: SYS_OR_SIG and the following code:
UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user admin");
boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);
boolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);

