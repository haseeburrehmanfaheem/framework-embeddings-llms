This is path 1 for the API with depth 2:
depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission("check user type");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission("check user type");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission("check user type");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
