The method getSeedAccountType has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission("Cannot get seed account information");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission("Cannot get seed account information");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----

and the following sink code:
['UserManagerService$UserData v2 = p0.getUserDataLU(p1);\nreturn phiInstruction;', 'int v1 = Binder.getCallingUid();\nboolean v2 = UserManagerService.hasManageUsersPermission(v1);']

The method getSeedAccountType has the following similar APIs:

- API Name: canHaveRestrictedProfile(I)Z with Similarity Score: 1.0
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingUid();
boolean v2 = UserManagerService.hasManageUsersPermission(v1);

- API Name: setDefaultGuestRestrictions(Landroid/os/Bundle;)V with Similarity Score: 1.0
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingUid();
boolean v2 = UserManagerService.hasManageUsersPermission(v1);

