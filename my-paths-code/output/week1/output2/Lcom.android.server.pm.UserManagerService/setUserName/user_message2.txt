The method setUserName has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission("rename users");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission("rename users");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission("rename users");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	long v4 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----

and the following sink code:
['UserManagerService.checkManageUsersPermission("rename users");\nboolean v1 = UserManagerService.hasManageUsersPermission();\nint v1 = Binder.getCallingUid();\nboolean v2 = UserManagerService.hasManageUsersPermission(v1);', 'UserInfo.name = p2;\np0.writeUserLP(v2);\np0.sendUserInfoChangedBroadcast(p1);']

The method setUserName has the following similar APIs:

- API Name: canHaveRestrictedProfile(I)Z with Similarity Score: 0.906494140625
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingUid();
boolean v2 = UserManagerService.hasManageUsersPermission(v1);

- API Name: setDefaultGuestRestrictions(Landroid/os/Bundle;)V with Similarity Score: 0.906494140625
  - Access Control Level: SYS_OR_SIG and the following code:
int v1 = Binder.getCallingUid();
boolean v2 = UserManagerService.hasManageUsersPermission(v1);

