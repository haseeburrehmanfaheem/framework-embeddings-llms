The method getUserRestrictionSources has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission("hasBaseUserRestriction");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder("Unknown restriction queried by uid ");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append(" (");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append(" et al");
	StringBuilder v10 = v4.append(")");
	StringBuilder v11 = v4.append(": ");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf("UserRestrictionsUtils", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission("hasBaseUserRestriction");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder("Unknown restriction queried by uid ");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append(" (");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append(")");
	StringBuilder v10 = v4.append(": ");
	StringBuilder v11 = v4.append(p1);
	boolean v12 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v13 = v4.toString();
	int v14 = Slog.wtf("UserRestrictionsUtils", v13);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	RestrictionsSet v5 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v6 = v5.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v7 = v2.addAll(v6);
	List v8 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission("hasBaseUserRestriction");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder("Unknown restriction queried by uid ");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append(" (");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append(" et al");
	StringBuilder v10 = v4.append(")");
	StringBuilder v11 = v4.append(": ");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf("UserRestrictionsUtils", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----

and the following sink code:
['boolean v4 = p0.hasBaseUserRestriction(p1, p2);\nBundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);\nboolean v4 = v3.getBoolean(p1, 0);\nreturn phiInstruction;', 'ArrayList v2 = new ArrayList();\nboolean v6 = v2.add(v4);\nList v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);\nboolean v9 = v2.addAll(v8);\nreturn v2;']

The method getUserRestrictionSources has the following similar APIs:

- API Name: getUserRestrictionSource(Ljava/lang/String;I)I with Similarity Score: 0.8156574368476868
  - Access Control Level: SYS_OR_SIG and the following code:
List v1 = p0.getUserRestrictionSources(p1, p2);
int v2 = v1.size();
return phiInstruction;

- API Name: setUserRestriction(Ljava/lang/String;ZI)V with Similarity Score: 0.8140348196029663
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
Bundle v4 = BundleUtils.clone(v3);
v4.putBoolean(p1, p2);
p0.updateUserRestrictionsInternalLR(v4, p3);

