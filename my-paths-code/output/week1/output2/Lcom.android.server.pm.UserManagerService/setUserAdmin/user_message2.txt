The method setUserAdmin has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user admin");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user admin");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user admin");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----

and the following sink code:
['UserInfo v2 = p0.getUserInfoLU(p1);\nboolean v3 = v2.isAdmin();\nUserInfo.flags = (UserInfo.flags ^ 2);\nUserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);\np0.writeUserLP(v4);', 'UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user admin");\nboolean v2 = UserManagerService.hasPermissionGranted("android.permission.MANAGE_USERS", v1);\nboolean v3 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS_FULL", v1);']

The method setUserAdmin has the following similar APIs:

- API Name: setUserEnabled(I)V with Similarity Score: 0.9844028949737549
  - Access Control Level: SYS_OR_SIG and the following code:
UserInfo v2 = p0.getUserInfoLU(p1);
boolean v3 = v2.isEnabled();
UserInfo.flags = (UserInfo.flags ^ 64);
UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
p0.writeUserLP(v4);

- API Name: setUserAccount(ILjava/lang/String;)V with Similarity Score: 0.8861690759658813
  - Access Control Level: SYS_OR_SIG and the following code:
UserManagerService.checkManageUserAndAcrossUsersFullPermission("set user account");

