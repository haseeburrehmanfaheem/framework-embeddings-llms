This is path 1 for the API with depth 2:
depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission("check if user type is enabled.");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission("check if user type is enabled.");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission("check if user type is enabled.");
	Object v2 = this.mUserTypes.get(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
