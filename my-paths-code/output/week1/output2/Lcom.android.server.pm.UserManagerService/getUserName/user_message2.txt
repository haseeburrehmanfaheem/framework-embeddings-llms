The method getUserName has the following code snippet:

This is path 1 for the API with depth 2:
depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.GET_ACCOUNTS_PRIVILEGED", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.GET_ACCOUNTS_PRIVILEGED", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.GET_ACCOUNTS_PRIVILEGED", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return "";
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----

and the following sink code:
['int v1 = Binder.getCallingUid();\nboolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();\nint v4 = UserHandle.getUserId(v1);\nUserInfo v5 = p0.getUserInfoLU(v4);\nUserInfo v6 = p0.userWithName(v5);\nreturn UserInfo.name;', 'boolean v1 = UserManagerService.hasCreateUsersPermission();\nint v2 = Binder.getCallingUid();\nboolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);']

The method getUserName has the following similar APIs:

- API Name: isUserNameSet(I)Z with Similarity Score: 1.0
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v1 = UserManagerService.hasCreateUsersPermission();
int v2 = Binder.getCallingUid();
boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);

- API Name: getProfiles(IZ)Ljava/util/List; with Similarity Score: 0.9693561792373657
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
int v2 = Binder.getCallingUid();
boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);

