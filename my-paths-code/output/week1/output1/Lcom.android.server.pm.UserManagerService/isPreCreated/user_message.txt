This is path 1 for the API with depth 2:
depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, "isPreCreated");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, "isPreCreated");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, "isPreCreated");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted("android.permission.INTERACT_ACROSS_USERS", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
