This is path 1 for the API with depth 2:
depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("query isRestricted for user ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("query isRestricted for user ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isRestricted();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission("android.permission.CREATE_USERS");
	return v1;
}
-----
