This is path 1 for the API with depth 2:
depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission("query user");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
This is path 2 for the API with depth 2:
depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission("query user");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted("android.permission.QUERY_USERS", v2);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
This is path 3 for the API with depth 2:
depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission("query user");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
