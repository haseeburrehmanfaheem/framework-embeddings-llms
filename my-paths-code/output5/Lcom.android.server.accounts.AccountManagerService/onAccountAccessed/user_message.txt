This is path 1 for the API with depth 2:
public void onAccountAccessed(String p1){
	int v3 = UserHandle.getCallingUserId();
	long v4 = Binder.clearCallingIdentity();
	String v5 = this.mContext.getOpPackageName();
	List v10 = AccountManagerService.getTypesForCaller(v7, p1, 1);
	List v9 = v10;
	boolean v11 = v9.isEmpty();
	if (v11 == 0) {
		long v12 = IAccountManager$Stub.clearCallingIdentity();
		AccountManagerService$UserAccounts v14 = AccountManagerService.getUserAccountsNotChecked(p1);
		AccountManagerService$UserAccounts v13 = v14;
		ArrayList v16 = new ArrayList();
		Iterator v18 = v9.iterator();
		boolean v19 = v18.hasNext();
		if (v19 == 0) {
			int v20 = v16.size();
			Account v21 = new Account(v20);
			int v22 = v16.size();
			if ( >= v22) {
				Account v15 = v21;
				IAccountManager$Stub.restoreCallingIdentity(v12);
				Account v6 = v15;
				if ( >= v6.length) {
					Binder.restoreCallingIdentity(v4);
					return;
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void onAccountAccessed(String p1){
	int v3 = UserHandle.getCallingUserId();
	long v4 = Binder.clearCallingIdentity();
	String v5 = this.mContext.getOpPackageName();
	List v10 = AccountManagerService.getTypesForCaller(v7, p1, 1);
	List v9 = v10;
	boolean v11 = v9.isEmpty();
	if (v11 == 0) {
		Account v6 = this.EMPTY_ACCOUNT_ARRAY;
		if ( >= v6.length) {
			Binder.restoreCallingIdentity(v4);
			return;
		}
	}
}
