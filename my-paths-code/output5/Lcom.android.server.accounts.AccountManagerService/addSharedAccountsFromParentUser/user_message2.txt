The method addSharedAccountsFromParentUser has the following code snippet:

This is path 1 for the API with depth 2:
public void addSharedAccountsFromParentUser(int p1, int p2, String p3){
	if (v24 != 0) {
		if (p1 == 0) {
			boolean v25 = v23.contains(p1);
			if (v25 == 0) {
				List v26 = AccountManagerService.getTypesVisibleToCaller(, p2, );
				boolean v27 = v26.isEmpty();
				if (v27 != 0) {
					if (p1 == 0) {
						boolean v28 = v26.contains(p1);
						if (v28 != 0) {
							Account v5 = this.EMPTY_ACCOUNT_ARRAY;
							Account v2 = v5;
							if ( >= v2.length) {
								return;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['List v26 = AccountManagerService.getTypesVisibleToCaller(, p2, );\nboolean v27 = v26.isEmpty();', 'Account v5 = this.EMPTY_ACCOUNT_ARRAY;']

The method addSharedAccountsFromParentUser has the following similar APIs:

- API Name: hasFeatures(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;[Ljava/lang/String;Ljava/lang/String;)V with Similarity Score: 0.8878005146980286
  - Access Control Level: SYS_OR_SIG and the following code:
List v26 = AccountManagerService.getTypesVisibleToCaller(p1, p3, p4);
boolean v27 = v26.contains(p2);

- API Name: getAccountsForPackage(Ljava/lang/String;ILjava/lang/String;)[Landroid/accounts/Account; with Similarity Score: 0.8818674087524414
  - Access Control Level: SYS_OR_SIG and the following code:
List v26 = AccountManagerService.getTypesForCaller(, p2, 1);
List v25 = v26;
Account v4 = this.EMPTY_ACCOUNT_ARRAY;
return v4;

