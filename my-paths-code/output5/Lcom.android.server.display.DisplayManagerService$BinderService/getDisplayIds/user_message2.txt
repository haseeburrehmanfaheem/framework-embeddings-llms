The method getDisplayIds has the following code snippet:

This is path 1 for the API with depth 1:
public [I getDisplayIds(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v3 = this.mSyncRoot;
	LogicalDisplayMapper v4 = this.mLogicalDisplayMapper;
	int v6 = this.mLogicalDisplays.size();
	[I v7 = new [I(v6);
	if ( >= v6) {
		if ( == v6) {
			[I v8 = Arrays.copyOfRange(v7, 0, );
			[I v5 = ;
			Binder.restoreCallingIdentity(v2);
			return v5;
		}
	}
}
This is path 2 for the API with depth 1:
public [I getDisplayIds(){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v3 = this.mSyncRoot;
	LogicalDisplayMapper v4 = this.mLogicalDisplayMapper;
	int v6 = this.mLogicalDisplays.size();
	[I v7 = new [I(v6);
	if ( >= v6) {
		if ( == v6) {
			[I v5 = ;
			Binder.restoreCallingIdentity(v2);
			return v5;
		}
	}
}

and the following sink code:
['[I v7 = new [I(v6);\nreturn v5;']

The method getDisplayIds has the following similar APIs:

- API Name: getDisableFlags(Landroid/os/IBinder;I)[I with Similarity Score: 0.7120689749717712
  - Access Control Level: SYS_OR_SIG and the following code:
Pair v5 = new Pair(v6,);
Integer v6 = Integer.valueOf();
Pair v3 = v5;
[I v8 = new [I(2);
return v8;

