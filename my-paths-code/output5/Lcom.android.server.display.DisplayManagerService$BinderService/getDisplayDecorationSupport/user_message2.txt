The method getDisplayDecorationSupport has the following code snippet:

This is path 1 for the API with depth 2:
public DisplayDecorationSupport getDisplayDecorationSupport(int p1){
	long v1 = Binder.clearCallingIdentity();
	IBinder v4 = DisplayManagerService.getDisplayToken(p2);
	if (v4 != 0) {
		DisplayDecorationSupport v3 = 0;
		DisplayDecorationSupport v2 = v3;
		Binder.restoreCallingIdentity(v1);
		return v2;
	}
}
This is path 2 for the API with depth 2:
public DisplayDecorationSupport getDisplayDecorationSupport(int p1){
	long v1 = Binder.clearCallingIdentity();
	IBinder v4 = DisplayManagerService.getDisplayToken(p2);
	if (v4 != 0) {
		DisplayDecorationSupport v5 = SurfaceControl.getDisplayDecorationSupport(v4);
		DisplayDecorationSupport v3 = v5;
		DisplayDecorationSupport v2 = v3;
		Binder.restoreCallingIdentity(v1);
		return v2;
	}
}

and the following sink code:
['IBinder v4 = DisplayManagerService.getDisplayToken(p2);\nDisplayDecorationSupport v5 = SurfaceControl.getDisplayDecorationSupport(v4);\nDisplayDecorationSupport v3 = v5;\nDisplayDecorationSupport v2 = v3;\nreturn v2;']

The method getDisplayDecorationSupport has the following similar APIs:

- API Name: setVirtualDisplaySurface(Landroid/hardware/display/IVirtualDisplayCallback;Landroid/view/Surface;)V with Similarity Score: 0.7314626574516296
  - Access Control Level: NONE and the following code:
this.mVirtualDisplayAdapter.setVirtualDisplaySurfaceLocked(p2, p3);
IBinder v2 = p1.asBinder();

