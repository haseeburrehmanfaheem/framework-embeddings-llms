The method getBrightnessInfo has the following code snippet:

This is path 1 for the API with depth 1:
public BrightnessInfo getBrightnessInfo(int p1){
	long v3 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v4 = this.mSyncRoot;
	SparseArray v5 = this.mDisplayPowerControllers;
	Object v6 = v5.get(p1);
	if (v6 == 0) {
		BrightnessInfo v8 = new BrightnessInfo(MutableFloat.value,MutableFloat.value,MutableFloat.value,MutableFloat.value,MutableInt.value,MutableFloat.value,MutableInt.value);
		BrightnessInfo v7 = v8;
		Binder.restoreCallingIdentity(v3);
		return v7;
	}
}
This is path 2 for the API with depth 1:
public BrightnessInfo getBrightnessInfo(int p1){
	long v3 = Binder.clearCallingIdentity();
	DisplayManagerService$SyncRoot v4 = this.mSyncRoot;
	SparseArray v5 = this.mDisplayPowerControllers;
	Object v6 = v5.get(p1);
	if (v6 == 0) {
		Binder.restoreCallingIdentity(v3);
		return 0;
	}
}

and the following sink code:
['BrightnessInfo v8 = new BrightnessInfo(MutableFloat.value,MutableFloat.value,MutableFloat.value,MutableFloat.value,MutableInt.value,MutableFloat.value,MutableFloat.value);\nBrightnessInfo v7 = v8;\nreturn v7;']

The method getBrightnessInfo has the following similar APIs:

- API Name: getBrightness(I)F with Similarity Score: 0.7394512295722961
  - Access Control Level: SYS_OR_SIG and the following code:
float v8 = this.mBrightness;
boolean v9 = Float.isNaN(v8);
float v11 = MathUtils.constrain(v8, 0, 1065353216);
float v10 = v11;
float v7 = v10;
return v7;

