The method requestColorMode has the following code snippet:

This is path 1 for the API with depth 2:
public void requestColorMode(int p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	LogicalDisplay v6 = this.mLogicalDisplayMapper.getDisplayLocked(p2);
	if (v6 == 0) {
		int v7 = v6.getRequestedColorModeLocked();
		if (v7 == p3) {
			v6.setRequestedColorModeLocked(p3);
			DisplayManagerService.scheduleTraversalLocked(0);
			Binder.restoreCallingIdentity(v3);
			return;
		}
	}
}
This is path 2 for the API with depth 2:
public void requestColorMode(int p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	LogicalDisplay v6 = this.mLogicalDisplayMapper.getDisplayLocked(p2);
	if (v6 == 0) {
		Binder.restoreCallingIdentity(v3);
		return;
	}
}

and the following sink code:
['int v7 = v6.getRequestedColorModeLocked();\nv6.setRequestedColorModeLocked(p3);']

The method requestColorMode has the following similar APIs:

- API Name: uncrypt(Ljava/lang/String;Landroid/os/IRecoverySystemProgressListener;)Z with Similarity Score: 0.7499505281448364
  - Access Control Level: SYS_OR_SIG and the following code:
int v40 = v22.getPercentageUncrypted();
p2.onProgress(v40);

- API Name: setTemporaryBrightness(IF)V with Similarity Score: 0.7096865177154541
  - Access Control Level: SYS_OR_SIG and the following code:
int v8 = Float.floatToIntBits(p2);
Message v9 = this.mHandler.obtainMessage(6, v8, 0);
v9.sendToTarget();

