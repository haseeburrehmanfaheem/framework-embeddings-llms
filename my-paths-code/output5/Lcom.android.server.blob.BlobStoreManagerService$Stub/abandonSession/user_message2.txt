The method abandonSession has the following code snippet:

This is path 1 for the API with depth 2:
public void abandonSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p2, p3, p4);
	v15.open();
	v15.abandon();
	if (BlobStoreConfig.LOGV == 0) {
		BlobStoreManagerService.writeBlobSessionsAsync();
		return;
	}
}
This is path 2 for the API with depth 2:
public void abandonSession(long p1, String p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append("sessionId must be positive: ");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	float v6 = Preconditions.checkArgumentPositive(p1, v5);
	Object v7 = Objects.requireNonNull(p2, "packageName must not be null");
	int v8 = Binder.getCallingUid();
	BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p2, p3, p4);
	v15.open();
	v15.abandon();
	if (BlobStoreConfig.LOGV == 0) {
		BlobStoreManagerService.writeBlobSessionsAsync();
		return;
	}
}

and the following sink code:
['BlobStoreSession v15 = BlobStoreManagerService.openSessionInternal(p2, p3, p4);\nv15.abandon();', 'Object v7 = Objects.requireNonNull(p2, "packageName must not be null");\nStringBuilder v1 = new StringBuilder();\nStringBuilder v3 = v1.append("sessionId must be positive: ");\nStringBuilder v4 = v1.append(p1);']

The method abandonSession has the following similar APIs:

- API Name: openSession(JLjava/lang/String;)Landroid/app/blob/IBlobStoreSession; with Similarity Score: 0.7221829891204834
  - Access Control Level: SYS_OR_SIG and the following code:
LongSparseArray v16 = BlobStoreManagerService.getUserSessionsLocked(v15);
Object v17 = v16.get(p2);
boolean v18 = v17.hasAccess(p3, p4);
boolean v19 = v17.isFinalized();
v17.open();
BlobStoreSession v14 = v17;
BlobStoreSession v13 = v14;
return v13;

- API Name: createSession(Landroid/app/blob/BlobHandle;Ljava/lang/String;)J with Similarity Score: 0.7076511383056641
  - Access Control Level: SYS_OR_SIG and the following code:
long v28 = BlobStoreManagerService.generateNextSessionIdLocked();
BlobStoreSession v29 = new BlobStoreSession(this.mContext,v28,p2,p3,p4,this.mSessionStateChangeListener);
int v31 = UserHandle.getUserId(p3);
BlobStoreManagerService.addSessionForUserLocked(v29, v31);
if (BlobStoreConfig.LOGV == 0) {
    BlobStoreManagerService.writeBlobSessionsAsync();
long v25 = v28;
long v24 = v25;
return v24;

