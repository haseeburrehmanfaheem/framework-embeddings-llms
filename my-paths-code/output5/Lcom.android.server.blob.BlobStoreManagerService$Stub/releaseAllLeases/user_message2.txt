The method releaseAllLeases has the following code snippet:

This is path 1 for the API with depth 2:
public void releaseAllLeases(String p1){
	Object v1 = Objects.requireNonNull(p1, "packageName must not be null");
	int v2 = Binder.getCallingUid();
	if (v10 != 0) {
		int v11 = UserHandle.getUserId(p2);
		boolean v12 = this.mPackageManagerInternal.isInstantApp(p3, v11);
		if (v12 != 0) {
			boolean v8 = ;
			boolean v7 = v8;
			if (v7 == 0) {
				BlobStoreManagerService$$ExternalSyntheticLambda12 v15 = new BlobStoreManagerService$$ExternalSyntheticLambda12(p3,p2);
				this.mBlobsMap.forEach(v15);
				BlobStoreManagerService.writeBlobsInfoAsync();
				if (BlobStoreConfig.LOGV == 0) {
					return;
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void releaseAllLeases(String p1){
	Object v1 = Objects.requireNonNull(p1, "packageName must not be null");
	int v2 = Binder.getCallingUid();
	if (v10 != 0) {
		int v11 = UserHandle.getUserId(p2);
		boolean v12 = this.mPackageManagerInternal.isInstantApp(p3, v11);
		if (v12 != 0) {
			boolean v8 = ;
			boolean v7 = v8;
			if (v7 == 0) {
				BlobStoreManagerService$$ExternalSyntheticLambda12 v15 = new BlobStoreManagerService$$ExternalSyntheticLambda12(p3,p2);
				this.mBlobsMap.forEach(v15);
				BlobStoreManagerService.writeBlobsInfoAsync();
				if (BlobStoreConfig.LOGV == 0) {
					return;
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void releaseAllLeases(String p1){
	Object v1 = Objects.requireNonNull(p1, "packageName must not be null");
	int v2 = Binder.getCallingUid();
	if (v10 != 0) {
		boolean v8 = ;
		boolean v7 = v8;
		if (v7 == 0) {
			BlobStoreManagerService$$ExternalSyntheticLambda12 v13 = new BlobStoreManagerService$$ExternalSyntheticLambda12(p3,p2);
			this.mBlobsMap.forEach(v13);
			BlobStoreManagerService.writeBlobsInfoAsync();
			if (BlobStoreConfig.LOGV == 0) {
				return;
			}
		}
	}
}

and the following sink code:
['BlobStoreManagerService$$ExternalSyntheticLambda12 v15 = new BlobStoreManagerService$$ExternalSyntheticLambda12(p3,p2);\nthis.mBlobsMap.forEach(v15);', 'int v11 = UserHandle.getUserId(p2);\nboolean v12 = this.mPackageManagerInternal.isInstantApp(p3, v11);']

The method releaseAllLeases has the following similar APIs:

- API Name: deleteBlob(J)V with Similarity Score: 0.8950232267379761
  - Access Control Level: SYS_OR_SIG and the following code:
Set v4 = this.mBlobsMap.entrySet();
BlobStoreManagerService$$ExternalSyntheticLambda8 v5 = new BlobStoreManagerService$$ExternalSyntheticLambda8(BlobStoreManagerService,p2);
boolean v7 = v4.removeIf(v5);

- API Name: getLeasedBlobs(Ljava/lang/String;)Ljava/util/List; with Similarity Score: 0.8488451838493347
  - Access Control Level: SYS_OR_SIG and the following code:
ArrayList v9 = new ArrayList();
BlobStoreManagerService$$ExternalSyntheticLambda13 v11 = new BlobStoreManagerService$$ExternalSyntheticLambda13(p3,p2,v9);
BlobStoreManagerService.forEachBlobLocked(v11);
List v8 = v9;
List v7 = v8;
return v7;

