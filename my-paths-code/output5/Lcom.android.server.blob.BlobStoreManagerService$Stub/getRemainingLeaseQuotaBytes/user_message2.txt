The method getRemainingLeaseQuotaBytes has the following code snippet:

This is path 1 for the API with depth 2:
public long getRemainingLeaseQuotaBytes(String p1){
	int v1 = Binder.getCallingUid();
	long v8 = BlobStoreConfig.getAppDataBytesLimit();
	long v9 = BlobStoreManagerService.getTotalUsageBytesLocked(p2, p3);
	if (((v8 - v9) < 0) <= 0) {
		long v7 = ;
		long v6 = v7;
		return v6;
	}
}
This is path 2 for the API with depth 2:
public long getRemainingLeaseQuotaBytes(String p1){
	int v1 = Binder.getCallingUid();
	long v8 = BlobStoreConfig.getAppDataBytesLimit();
	long v9 = BlobStoreManagerService.getTotalUsageBytesLocked(p2, p3);
	if (((v8 - v9) < 0) <= 0) {
		long v7 = ;
		long v6 = v7;
		return v6;
	}
}

and the following sink code:
['long v8 = BlobStoreConfig.getAppDataBytesLimit();\nlong v9 = BlobStoreManagerService.getTotalUsageBytesLocked(p2, p3);\nif (((v8 - v9) < 0) <= 0) {\nlong v7 = ;\nlong v6 = v7;\nreturn v6;']

The method getRemainingLeaseQuotaBytes has the following similar APIs:

- API Name: getDataBlockSize()I with Similarity Score: 0.7283201813697815
  - Access Control Level: SYS_OR_SIG and the following code:
int v15 = PersistentDataBlockService.-$$Nest$mgetTotalDataSizeLocked(this.this$0, v7);
return v15;

- API Name: acquireLease(Landroid/app/blob/BlobHandle;ILjava/lang/CharSequence;JLjava/lang/String;)V with Similarity Score: 0.7040026187896729
  - Access Control Level: SYS_OR_SIG and the following code:
Object v41 = this.mBlobsMap.get(p2);
if (v41 == 0) {
boolean v42 = v41.isAccessAllowedForCaller(p7, p6);
long v43 = v41.getSize();
long v44 = BlobStoreManagerService.getRemainingLeaseQuotaBytesInternal(p6, p7);

