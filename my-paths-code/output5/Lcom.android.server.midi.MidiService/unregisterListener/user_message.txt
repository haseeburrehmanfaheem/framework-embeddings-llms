This is path 1 for the API with depth 2:
public void unregisterListener(IBinder p1, IMidiDeviceListener p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v3 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v3, 0);
		Object v6 = this.mClients.put(p1, v3);
		MidiService$Client v1 = ;
		if (v1 != 0) {
			IBinder v8 = p2.asBinder();
			Object v9 = this.mListeners.remove(v8);
			int v10 = this.mListeners.size();
			if (v10 != 0) {
				int v11 = this.mDeviceConnections.size();
				if (v11 != 0) {
					HashMap v13 = MidiService.-$$Nest$fgetmClients(this.this$0);
					HashMap v14 = MidiService.-$$Nest$fgetmClients(this.this$0);
					Object v15 = v14.remove(this.mToken);
					boolean v16 = this.mToken.unlinkToDeath(MidiService$Client, 0);
					Collection v17 = this.mDeviceConnections.values();
					Iterator v18 = v17.iterator();
					boolean v19 = v18.hasNext();
					if (v19 == 0) {
						return;
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public void unregisterListener(IBinder p1, IMidiDeviceListener p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v3 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v3, 0);
		MidiService$Client v1 = 0;
		if (v1 != 0) {
			IBinder v7 = p2.asBinder();
			Object v8 = this.mListeners.remove(v7);
			int v9 = this.mListeners.size();
			if (v9 != 0) {
				int v10 = this.mDeviceConnections.size();
				if (v10 != 0) {
					HashMap v12 = MidiService.-$$Nest$fgetmClients(this.this$0);
					HashMap v13 = MidiService.-$$Nest$fgetmClients(this.this$0);
					Object v14 = v13.remove(this.mToken);
					boolean v15 = this.mToken.unlinkToDeath(MidiService$Client, 0);
					Collection v16 = this.mDeviceConnections.values();
					Iterator v17 = v16.iterator();
					boolean v18 = v17.hasNext();
					if (v18 == 0) {
						return;
					}
				}
			}
		}
	}
}

This is path 3 for the API with depth 2:
public void unregisterListener(IBinder p1, IMidiDeviceListener p2){
	Object v2 = this.mClients.get(p1);
	if (v2 != 0) {
		MidiService$Client v1 = ;
		if (v1 != 0) {
			IBinder v4 = p2.asBinder();
			Object v5 = this.mListeners.remove(v4);
			int v6 = this.mListeners.size();
			if (v6 != 0) {
				int v7 = this.mDeviceConnections.size();
				if (v7 != 0) {
					HashMap v9 = MidiService.-$$Nest$fgetmClients(this.this$0);
					HashMap v10 = MidiService.-$$Nest$fgetmClients(this.this$0);
					Object v11 = v10.remove(this.mToken);
					boolean v12 = this.mToken.unlinkToDeath(MidiService$Client, 0);
					Collection v13 = this.mDeviceConnections.values();
					Iterator v14 = v13.iterator();
					boolean v15 = v14.hasNext();
					if (v15 == 0) {
						return;
					}
				}
			}
		}
	}
}
