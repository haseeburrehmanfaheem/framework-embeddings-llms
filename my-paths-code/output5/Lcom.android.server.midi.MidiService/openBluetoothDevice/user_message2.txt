The method openBluetoothDevice has the following code snippet:

This is path 1 for the API with depth 2:
public void openBluetoothDevice(IBinder p1, BluetoothDevice p2, IMidiDeviceOpenCallback p3){
	int v1 = Log.d("MidiService", "openBluetoothDevice()");
	Object v3 = this.mClients.get(p1);
	if (v3 != 0) {
		MidiService$Client v4 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v4, 0);
		Object v7 = this.mClients.put(p1, v4);
		MidiService$Client v2 = ;
		if (v2 != 0) {
			int v8 = Log.i("MidiService", "alloc device...");
			Object v9 = this.mBluetoothDevices.get(p2);
			if (v9 != 0) {
				MidiService$Device v10 = new MidiService$Device(p0,p2);
				Object v12 = this.mBluetoothDevices.put(p2, v10);
				StringBuilder v13 = new StringBuilder();
				StringBuilder v15 = v13.append("device: ");
				StringBuilder v16 = v13.append();
				String v17 = v13.toString();
				int v18 = Log.i("MidiService", v17);
				long v19 = Binder.clearCallingIdentity();
				StringBuilder v20 = new StringBuilder();
				StringBuilder v22 = v20.append("addDeviceConnection() [C] device:");
				StringBuilder v23 = v20.append();
				String v24 = v20.toString();
				int v25 = Log.i("MidiService", v24);
				StringBuilder v27 = new StringBuilder();
				StringBuilder v29 = v27.append("addDeviceConnection() device:");
				StringBuilder v30 = v27.append();
				String v31 = v27.toString();
				int v32 = Log.d("MidiService.Client", v31);
				int v33 = this.mDeviceConnections.size();
				if (v33 >= 64) {
					MidiService$DeviceConnection v34 = new MidiService$DeviceConnection(this.this$0,,MidiService$Client,p3);
					IBinder v36 = this.mToken;
					Object v37 = this.mDeviceConnections.put(v36, v34);
					StringBuilder v39 = new StringBuilder();
					StringBuilder v41 = v39.append("addDeviceConnection() [A] connection:");
					StringBuilder v42 = v39.append(v34);
					String v43 = v39.toString();
					int v44 = Log.d("MidiService.Device", v43);
					StringBuilder v45 = new StringBuilder();
					StringBuilder v47 = v45.append("  mServer:");
					StringBuilder v48 = v45.append(this.mServer);
					String v49 = v45.toString();
					int v50 = Log.d("MidiService.Device", v49);
					if (this.mServer == 0) {
						int v51 = Log.i("MidiService.Device", "++++ A");
						boolean v52 = this.mDeviceConnections.add(v34);
						v34.notifyClient(this.mServer);
						Binder.restoreCallingIdentity(v19);
						return;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void openBluetoothDevice(IBinder p1, BluetoothDevice p2, IMidiDeviceOpenCallback p3){
	int v1 = Log.d("MidiService", "openBluetoothDevice()");
	Object v3 = this.mClients.get(p1);
	if (v3 != 0) {
		MidiService$Client v4 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v4, 0);
		MidiService$Client v2 = 0;
		if (v2 != 0) {
			int v7 = Log.i("MidiService", "alloc device...");
			Object v8 = this.mBluetoothDevices.get(p2);
			if (v8 != 0) {
				MidiService$Device v9 = new MidiService$Device(p0,p2);
				Object v11 = this.mBluetoothDevices.put(p2, v9);
				StringBuilder v12 = new StringBuilder();
				StringBuilder v14 = v12.append("device: ");
				StringBuilder v15 = v12.append();
				String v16 = v12.toString();
				int v17 = Log.i("MidiService", v16);
				long v18 = Binder.clearCallingIdentity();
				StringBuilder v19 = new StringBuilder();
				StringBuilder v21 = v19.append("addDeviceConnection() [C] device:");
				StringBuilder v22 = v19.append();
				String v23 = v19.toString();
				int v24 = Log.i("MidiService", v23);
				StringBuilder v26 = new StringBuilder();
				StringBuilder v28 = v26.append("addDeviceConnection() device:");
				StringBuilder v29 = v26.append();
				String v30 = v26.toString();
				int v31 = Log.d("MidiService.Client", v30);
				int v32 = this.mDeviceConnections.size();
				if (v32 >= 64) {
					MidiService$DeviceConnection v33 = new MidiService$DeviceConnection(this.this$0,,MidiService$Client,p3);
					IBinder v35 = this.mToken;
					Object v36 = this.mDeviceConnections.put(v35, v33);
					StringBuilder v38 = new StringBuilder();
					StringBuilder v40 = v38.append("addDeviceConnection() [A] connection:");
					StringBuilder v41 = v38.append(v33);
					String v42 = v38.toString();
					int v43 = Log.d("MidiService.Device", v42);
					StringBuilder v44 = new StringBuilder();
					StringBuilder v46 = v44.append("  mServer:");
					StringBuilder v47 = v44.append(this.mServer);
					String v48 = v44.toString();
					int v49 = Log.d("MidiService.Device", v48);
					if (this.mServer == 0) {
						int v50 = Log.i("MidiService.Device", "++++ A");
						boolean v51 = this.mDeviceConnections.add(v33);
						v33.notifyClient(this.mServer);
						Binder.restoreCallingIdentity(v18);
						return;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void openBluetoothDevice(IBinder p1, BluetoothDevice p2, IMidiDeviceOpenCallback p3){
	int v1 = Log.d("MidiService", "openBluetoothDevice()");
	Object v3 = this.mClients.get(p1);
	if (v3 != 0) {
		MidiService$Client v4 = new MidiService$Client(MidiService,p1);
		p1.linkToDeath(v4, 0);
		Object v7 = this.mClients.put(p1, v4);
		MidiService$Client v2 = ;
		if (v2 != 0) {
			int v8 = Log.i("MidiService", "alloc device...");
			Object v9 = this.mBluetoothDevices.get(p2);
			if (v9 != 0) {
				StringBuilder v10 = new StringBuilder();
				StringBuilder v12 = v10.append("device: ");
				StringBuilder v13 = v10.append();
				String v14 = v10.toString();
				int v15 = Log.i("MidiService", v14);
				long v16 = Binder.clearCallingIdentity();
				StringBuilder v17 = new StringBuilder();
				StringBuilder v19 = v17.append("addDeviceConnection() [C] device:");
				StringBuilder v20 = v17.append();
				String v21 = v17.toString();
				int v22 = Log.i("MidiService", v21);
				StringBuilder v24 = new StringBuilder();
				StringBuilder v26 = v24.append("addDeviceConnection() device:");
				StringBuilder v27 = v24.append();
				String v28 = v24.toString();
				int v29 = Log.d("MidiService.Client", v28);
				int v30 = this.mDeviceConnections.size();
				if (v30 >= 64) {
					MidiService$DeviceConnection v31 = new MidiService$DeviceConnection(this.this$0,,MidiService$Client,p3);
					IBinder v33 = this.mToken;
					Object v34 = this.mDeviceConnections.put(v33, v31);
					StringBuilder v36 = new StringBuilder();
					StringBuilder v38 = v36.append("addDeviceConnection() [A] connection:");
					StringBuilder v39 = v36.append(v31);
					String v40 = v36.toString();
					int v41 = Log.d("MidiService.Device", v40);
					StringBuilder v42 = new StringBuilder();
					StringBuilder v44 = v42.append("  mServer:");
					StringBuilder v45 = v42.append(this.mServer);
					String v46 = v42.toString();
					int v47 = Log.d("MidiService.Device", v46);
					if (this.mServer == 0) {
						int v48 = Log.i("MidiService.Device", "++++ A");
						boolean v49 = this.mDeviceConnections.add(v31);
						v31.notifyClient(this.mServer);
						Binder.restoreCallingIdentity(v16);
						return;
					}
				}
			}
		}
	}
}

and the following sink code:
['MidiService$Client v4 = new MidiService$Client(MidiService,p1);\np1.linkToDeath(v4, 0);\nObject v7 = this.mClients.put(p1, v4);', 'MidiService$Device v10 = new MidiService$Device(p0,p2);\nMidiService$DeviceConnection v34 = new MidiService$DeviceConnection(this.this$0,,MidiService$Client,p3);']

The method openBluetoothDevice has the following similar APIs:

- API Name: openDevice(Landroid/os/IBinder;Landroid/media/midi/MidiDeviceInfo;Landroid/media/midi/IMidiDeviceOpenCallback;)V with Similarity Score: 0.991223156452179
  - Access Control Level: NONE and the following code:
MidiService$Client v3 = new MidiService$Client(MidiService,p1);
p1.linkToDeath(v3, 0);
Object v6 = this.mClients.put(p1, v3);

- API Name: closeDevice(Landroid/os/IBinder;Landroid/os/IBinder;)V with Similarity Score: 0.9525349736213684
  - Access Control Level: NONE and the following code:
Object v2 = this.mClients.get(p1);
MidiService$Client v3 = new MidiService$Client(MidiService,p1);
p1.linkToDeath(v3, 0);
Object v6 = this.mClients.put(p1, v3);

