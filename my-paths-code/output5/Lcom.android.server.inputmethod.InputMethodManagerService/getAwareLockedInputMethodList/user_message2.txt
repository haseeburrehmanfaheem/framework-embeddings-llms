The method getAwareLockedInputMethodList has the following code snippet:

This is path 1 for the API with depth 2:
public List getAwareLockedInputMethodList(int p1, int p2){
	int v4 = this.mCurrentUserId;
	Object v6 = LocalServices.getService(UserManagerInterna.class);
	if (p1 != -1) {
		if (p1 != -2) {
			if (p1 >= 0) {
				boolean v7 = v6.exists(p1);
				if (v7 == 0) {
					if (0 == 0) {
						0.print("User #");
						0.print(p1);
						0.println(" does not exit.");
						[I v11 = new [I(0);
						[I v5 = v11;
						if (v5.length == 1) {
							long v12 = Binder.clearCallingIdentity();
							if (p2 != 0) {
								ArrayMap v15 = new ArrayMap();
								ArrayList v17 = new ArrayList();
								ArrayMap v19 = new ArrayMap();
								AdditionalSubtypeUtils.load(v19, v5[0]);
								InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2);
								List v13 = ;
								Binder.restoreCallingIdentity(v12);
								List v1 = v13;
								return v1;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getAwareLockedInputMethodList(int p1, int p2){
	int v4 = this.mCurrentUserId;
	Object v6 = LocalServices.getService(UserManagerInterna.class);
	if (p1 != -1) {
		if (p1 != -2) {
			if (p1 >= 0) {
				boolean v7 = v6.exists(p1);
				if (v7 == 0) {
					if (0 == 0) {
						0.print("User #");
						0.print(p1);
						0.println(" does not exit.");
						[I v11 = new [I(0);
						[I v5 = v11;
						if (v5.length == 1) {
							long v12 = Binder.clearCallingIdentity();
							ArrayMap v15 = new ArrayMap();
							ArrayList v17 = new ArrayList();
							ArrayMap v19 = new ArrayMap();
							AdditionalSubtypeUtils.load(v19, v5[0]);
							InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2);
							List v13 = ;
							Binder.restoreCallingIdentity(v12);
							List v1 = v13;
							return v1;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v6 = LocalServices.getService(UserManagerInterna.class);\nboolean v7 = v6.exists(p1);\n[I v11 = new [I(0);\n[I v5 = v11;\nArrayMap v15 = new ArrayMap();\nArrayList v17 = new ArrayList();\nArrayMap v19 = new ArrayMap();\nAdditionalSubtypeUtils.load(v19, v5[0]);\nInputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2);\nList v1 = v13;\nreturn v1;']

The method getAwareLockedInputMethodList has the following similar APIs:

- API Name: getInputMethodList(I)Ljava/util/List; with Similarity Score: 0.8248907923698425
  - Access Control Level: SYS_OR_SIG and the following code:
ArrayMap v15 = new ArrayMap();
ArrayList v17 = new ArrayList();
ArrayMap v19 = new ArrayMap();
AdditionalSubtypeUtils.load(v19, v5[0]);
InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2);
List v1 = v13;
return v1;

- API Name: getEnabledInputMethodList(I)Ljava/util/List; with Similarity Score: 0.7813187837600708
  - Access Control Level: SYS_OR_SIG and the following code:
[I v8 = new [I(1);
ArrayMap v13 = new ArrayMap();
ArrayList v15 = new ArrayList();
InputMethodUtils$InputMethodSettings v21 = new InputMethodUtils$InputMethodSettings(v22,v23,v12,v4[0],1);
InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, p1, v17, v13, v15, 0);
ArrayList v26 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodListWithFilterLocked(0);
return v10;

