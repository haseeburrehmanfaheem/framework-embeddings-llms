The method getEnabledInputMethodList has the following code snippet:

This is path 1 for the API with depth 2:
public List getEnabledInputMethodList(int p1){
	int v3 = this.mCurrentUserId;
	Object v6 = this.sLocalServiceObjects.get(UserManagerInterna.class);
	Object v5 = v6;
	if (p1 != -1) {
		if (p1 != -2) {
			if (p1 >= 0) {
				boolean v7 = v5.exists(p1);
				if (v7 == 0) {
					[I v8 = new [I(1);
					[I v4 = v8;
					if (v4.length == 1) {
						long v9 = Binder.clearCallingIdentity();
						ArrayMap v13 = new ArrayMap();
						ArrayList v15 = new ArrayList();
						ArrayMap v17 = new ArrayMap();
						AdditionalSubtypeUtils.load(v17, p1);
						InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, p1, v17, v13, v15, 0);
						ArrayMap v12 = v13;
						InputMethodUtils$InputMethodSettings v21 = new InputMethodUtils$InputMethodSettings(v22,v23,v12,v4[0],1);
						Resources v22 = this.mContext.getResources();
						ContentResolver v23 = this.mContext.getContentResolver();
						ArrayList v26 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodListWithFilterLocked(0);
						ArrayList v25 = v26;
						List v10 = v25;
						Binder.restoreCallingIdentity(v9);
						return v10;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getEnabledInputMethodList(int p1){
	int v2 = this.mCurrentUserId;
	Object v5 = this.sLocalServiceObjects.get(UserManagerInterna.class);
	Object v4 = v5;
	if (p1 != -1) {
		if (p1 != -2) {
			if (p1 >= 0) {
				boolean v6 = v4.exists(p1);
				if (v6 == 0) {
					[I v7 = new [I(1);
					[I v3 = v7;
					if (v3.length == 1) {
						long v8 = Binder.clearCallingIdentity();
						ArrayMap v12 = new ArrayMap();
						ArrayList v14 = new ArrayList();
						ArrayMap v16 = new ArrayMap();
						AdditionalSubtypeUtils.load(v16, p1);
						InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, p1, v16, v12, v14, 0);
						ArrayMap v11 = v12;
						InputMethodUtils$InputMethodSettings v20 = new InputMethodUtils$InputMethodSettings(v21,v22,v11,v3[0],1);
						Resources v21 = this.mContext.getResources();
						ContentResolver v22 = this.mContext.getContentResolver();
						ArrayList v25 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodListWithFilterLocked(0);
						ArrayList v24 = v25;
						List v9 = v24;
						Binder.restoreCallingIdentity(v8);
						return v9;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public List getEnabledInputMethodList(int p1){
	int v3 = this.mCurrentUserId;
	Object v6 = this.sLocalServiceObjects.get(UserManagerInterna.class);
	Object v5 = v6;
	if (p1 != -1) {
		[I v7 = v5.getUserIds();
		[I v4 = v7;
		if (v4.length == 1) {
			long v8 = Binder.clearCallingIdentity();
			ArrayMap v12 = new ArrayMap();
			ArrayList v14 = new ArrayList();
			ArrayMap v16 = new ArrayMap();
			AdditionalSubtypeUtils.load(v16, p1);
			InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, p1, v16, v12, v14, 0);
			ArrayMap v11 = v12;
			InputMethodUtils$InputMethodSettings v20 = new InputMethodUtils$InputMethodSettings(v21,v22,v11,v4[0],1);
			Resources v21 = this.mContext.getResources();
			ContentResolver v22 = this.mContext.getContentResolver();
			ArrayList v25 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodListWithFilterLocked(0);
			ArrayList v24 = v25;
			List v9 = v24;
			Binder.restoreCallingIdentity(v8);
			return v9;
		}
	}
}

and the following sink code:
['[I v8 = new [I(1);\nArrayMap v13 = new ArrayMap();\nArrayList v15 = new ArrayList();\nInputMethodUtils$InputMethodSettings v21 = new InputMethodUtils$InputMethodSettings(v22,v23,v12,v4[0],1);\nInputMethodManagerService.queryInputMethodServicesInternal(this.mContext, p1, v17, v13, v15, 0);\nArrayList v26 = InputMethodUtils$InputMethodSettings.getEnabledInputMethodListWithFilterLocked(0);\nreturn v10;']

The method getEnabledInputMethodList has the following similar APIs:

- API Name: getAwareLockedInputMethodList(II)Ljava/util/List; with Similarity Score: 0.7813187837600708
  - Access Control Level: SYS_OR_SIG and the following code:
Object v6 = LocalServices.getService(UserManagerInterna.class);
boolean v7 = v6.exists(p1);
[I v11 = new [I(0);
[I v5 = v11;
ArrayMap v15 = new ArrayMap();
ArrayList v17 = new ArrayList();
ArrayMap v19 = new ArrayMap();
AdditionalSubtypeUtils.load(v19, v5[0]);
InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2);
List v1 = v13;
return v1;

- API Name: getInputMethodList(I)Ljava/util/List; with Similarity Score: 0.7693122625350952
  - Access Control Level: SYS_OR_SIG and the following code:
ArrayMap v15 = new ArrayMap();
ArrayList v17 = new ArrayList();
ArrayMap v19 = new ArrayMap();
AdditionalSubtypeUtils.load(v19, v5[0]);
InputMethodManagerService.queryInputMethodServicesInternal(this.mContext, v5[0], v19, v15, v17, p2);
List v1 = v13;
return v1;

