The method isUidNetworkingBlocked has the following code snippet:

This is path 1 for the API with depth 2:
public boolean isUidNetworkingBlocked(int p1, boolean p2){
	Object v3 = this.mUidBlockedState.get(p1);
	if (v3 != 0) {
		if (p2 != 0) {
			if (this.LOGD != 0) {
				if (p1 != this.mDebugUid) {
					String v11 = NetworkPolicyManagerService$UidBlockedState.toString(this.blockedReasons, this.allowedReasons, this.effectiveBlockedReasons);
					String v10 = v11;
					if (v3 != 0) {
						Object v16 = NetworkPolicyLogger$LogBuffer.getNextSlot();
						if (v16 != 0) {
							v16.reset();
							NetworkPolicyLogger$Data.type = 1;
							NetworkPolicyLogger$Data.ifield1 = p1;
							NetworkPolicyLogger$Data.ifield2 = NetworkPolicyManagerService$UidBlockedState.blockedReasons;
							NetworkPolicyLogger$Data.ifield3 = NetworkPolicyManagerService$UidBlockedState.allowedReasons;
							NetworkPolicyLogger$Data.ifield4 = NetworkPolicyManagerService$UidBlockedState.effectiveBlockedReasons;
							long v18 = System.currentTimeMillis();
							NetworkPolicyLogger$Data.timeStamp = v18;
							long v19 = this.mStatLogger.logDurationStat(1, v1);
							if ( == 0) {
								return ;
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public boolean isUidNetworkingBlocked(int p1, boolean p2){
	Object v3 = this.mUidBlockedState.get(p1);
	if (v3 != 0) {
		if (p2 != 0) {
			if (this.LOGD != 0) {
				if (p1 != this.mDebugUid) {
					String v11 = NetworkPolicyManagerService$UidBlockedState.toString(this.blockedReasons, this.allowedReasons, this.effectiveBlockedReasons);
					String v10 = v11;
					if (v3 != 0) {
						Object v16 = NetworkPolicyLogger$LogBuffer.getNextSlot();
						if (v16 != 0) {
							v16.reset();
							NetworkPolicyLogger$Data.type = 1;
							NetworkPolicyLogger$Data.ifield1 = p1;
							NetworkPolicyLogger$Data.ifield2 = NetworkPolicyManagerService$UidBlockedState.blockedReasons;
							NetworkPolicyLogger$Data.ifield3 = NetworkPolicyManagerService$UidBlockedState.allowedReasons;
							NetworkPolicyLogger$Data.ifield4 = NetworkPolicyManagerService$UidBlockedState.effectiveBlockedReasons;
							long v18 = System.currentTimeMillis();
							NetworkPolicyLogger$Data.timeStamp = v18;
							long v19 = this.mStatLogger.logDurationStat(1, v1);
							if ( == 0) {
								return ;
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public boolean isUidNetworkingBlocked(int p1, boolean p2){
	Object v3 = this.mUidBlockedState.get(p1);
	if (v3 != 0) {
		if (p2 != 0) {
			if (this.LOGD != 0) {
				if (p1 != this.mDebugUid) {
					String v11 = NetworkPolicyManagerService$UidBlockedState.toString(this.blockedReasons, this.allowedReasons, this.effectiveBlockedReasons);
					String v10 = v11;
					if (v3 != 0) {
						Object v16 = NetworkPolicyLogger$LogBuffer.getNextSlot();
						if (v16 != 0) {
							v16.reset();
							NetworkPolicyLogger$Data.type = 1;
							NetworkPolicyLogger$Data.ifield1 = p1;
							NetworkPolicyLogger$Data.ifield2 = NetworkPolicyManagerService$UidBlockedState.blockedReasons;
							NetworkPolicyLogger$Data.ifield3 = NetworkPolicyManagerService$UidBlockedState.allowedReasons;
							NetworkPolicyLogger$Data.ifield4 = NetworkPolicyManagerService$UidBlockedState.effectiveBlockedReasons;
							long v18 = System.currentTimeMillis();
							NetworkPolicyLogger$Data.timeStamp = v18;
							long v19 = this.mStatLogger.logDurationStat(1, v1);
							if ( == 0) {
								return ;
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v3 = this.mUidBlockedState.get(p1);\nString v11 = NetworkPolicyManagerService$UidBlockedState.toString(this.blockedReasons, this.allowedReasons, this.effectiveBlockedReasons);\nNetworkPolicyLogger$Data.type = 1;\nNetworkPolicyLogger$Data.ifield1 = p1;\nNetworkPolicyLogger$Data.ifield2 = NetworkPolicyManagerService$UidBlockedState.blockedReasons;\nNetworkPolicyLogger$Data.ifield3 = NetworkPolicyManagerService$UidBlockedState.allowedReasons;\nNetworkPolicyLogger$Data.ifield4 = NetworkPolicyManagerService$UidBlockedState.effectiveBlockedReasons;']

The method isUidNetworkingBlocked has the following similar APIs:

- API Name: isUidRestrictedOnMeteredNetworks(I)Z with Similarity Score: 0.7377870082855225
  - Access Control Level: SYS_OR_SIG and the following code:
Object v2 = this.mUidBlockedState.get(p1);

