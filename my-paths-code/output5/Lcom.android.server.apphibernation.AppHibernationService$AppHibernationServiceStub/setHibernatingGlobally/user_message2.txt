The method setHibernatingGlobally has the following code snippet:

This is path 1 for the API with depth 2:
public void setHibernatingGlobally(String p1, boolean p2){
	Object v4 = this.mGlobalHibernationStates.get(p1);
	if (v4 == 0) {
		int v5 = Binder.getCallingUid();
		boolean v6 = this.mPackageManagerInternal.canQueryPackage(v5, p1);
		if (v6 != 0) {
			if (GlobalLevelState.hibernated == p2) {
				GlobalLevelState.hibernated = p2;
				if (p2 == 0) {
					AppHibernationService$$ExternalSyntheticLambda0 v7 = new AppHibernationService$$ExternalSyntheticLambda0(AppHibernationService,p1,v4);
					this.mBackgroundExecutor.execute(v7);
					ArrayList v10 = new ArrayList(v11);
					Collection v11 = this.mGlobalHibernationStates.values();
					this.mScheduledStatesToWrite = v10;
					boolean v14 = this.mExecutorService.isShutdown();
					if (v14 == 0) {
						if (this.mFuture == 0) {
							HibernationStateDiskStore$$ExternalSyntheticLambda0 v15 = new HibernationStateDiskStore$$ExternalSyntheticLambda0(HibernationStateDiskStore);
							ScheduledFuture v17 = this.mExecutorService.schedule(v15, 60000, TimeUnit.MILLISECONDS);
							this.mFuture = v17;
							return;
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setHibernatingGlobally(String p1, boolean p2){
	Object v4 = this.mGlobalHibernationStates.get(p1);
	if (v4 == 0) {
		int v5 = Binder.getCallingUid();
		boolean v6 = this.mPackageManagerInternal.canQueryPackage(v5, p1);
		if (v6 != 0) {
			if (GlobalLevelState.hibernated == p2) {
				GlobalLevelState.hibernated = p2;
				if (p2 == 0) {
					GlobalLevelState.savedByte = 0;
					long v7 = System.currentTimeMillis();
					GlobalLevelState.lastUnhibernatedMs = v7;
					ArrayList v8 = new ArrayList(v9);
					Collection v9 = this.mGlobalHibernationStates.values();
					this.mScheduledStatesToWrite = v8;
					boolean v12 = this.mExecutorService.isShutdown();
					if (v12 == 0) {
						if (this.mFuture == 0) {
							HibernationStateDiskStore$$ExternalSyntheticLambda0 v13 = new HibernationStateDiskStore$$ExternalSyntheticLambda0(HibernationStateDiskStore);
							ScheduledFuture v15 = this.mExecutorService.schedule(v13, 60000, TimeUnit.MILLISECONDS);
							this.mFuture = v15;
							return;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['Object v4 = this.mGlobalHibernationStates.get(p1);\nAppHibernationService$$ExternalSyntheticLambda0 v7 = new AppHibernationService$$ExternalSyntheticLambda0(AppHibernationService,p1,v4);\nthis.mBackgroundExecutor.execute(v7);', 'Object v4 = this.mGlobalHibernationStates.get(p1);\nGlobalLevelState.hibernated = p2;\nGlobalLevelState.savedByte = 0;\nlong v7 = System.currentTimeMillis();\nGlobalLevelState.lastUnhibernatedMs = v7;', 'HibernationStateDiskStore$$ExternalSyntheticLambda0 v13 = new HibernationStateDiskStore$$ExternalSyntheticLambda0(HibernationStateDiskStore);\nScheduledFuture v15 = this.mExecutorService.schedule(v13, 60000, TimeUnit.MILLISECONDS);']

The method setHibernatingGlobally has the following similar APIs:

- API Name: isHibernatingGlobally(Ljava/lang/String;)Z with Similarity Score: 0.775216817855835
  - Access Control Level: SYS_OR_SIG and the following code:
Object v4 = this.mGlobalHibernationStates.get(p1);
if (v4 == 0) {
int v5 = Binder.getCallingUid();
boolean v6 = this.mPackageManagerInternal.canQueryPackage(v5, p1);
if (v6 != 0) {
boolean v1 = GlobalLevelState.hibernated;
return v1;

- API Name: setHibernatingForUser(Ljava/lang/String;IZ)V with Similarity Score: 0.7708228826522827
  - Access Control Level: SYS_OR_SIG and the following code:
UserLevelState v22 = new UserLevelState(v15);
AppHibernationService$$ExternalSyntheticLambda4 v24 = new AppHibernationService$$ExternalSyntheticLambda4(v22,v4);
this.mBackgroundExecutor.execute(v24);

