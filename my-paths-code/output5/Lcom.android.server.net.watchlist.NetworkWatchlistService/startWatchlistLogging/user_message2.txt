The method startWatchlistLogging has the following code snippet:

This is path 1 for the API with depth 1:
public boolean startWatchlistLogging(){
	if (this.mIsLoggingEnabled == 0) {
		boolean v3 = this.mIpConnectivityMetrics.addNetdEventCallback(2, this.mNetdEventCallback);
		boolean v2 = 0;
		return v2;
	}
}
This is path 2 for the API with depth 1:
public boolean startWatchlistLogging(){
	if (this.mIsLoggingEnabled == 0) {
		boolean v3 = this.mIpConnectivityMetrics.addNetdEventCallback(2, this.mNetdEventCallback);
		if (v3 == 0) {
			this.mIsLoggingEnabled = 1;
			boolean v2 = 1;
			return v2;
		}
	}
}
This is path 3 for the API with depth 1:
public boolean startWatchlistLogging(){
	if (this.mIsLoggingEnabled == 0) {
		boolean v3 = this.mIpConnectivityMetrics.addNetdEventCallback(2, this.mNetdEventCallback);
		if (v3 == 0) {
			boolean v2 = 0;
			return v2;
		}
	}
}

and the following sink code:
['boolean v3 = this.mIpConnectivityMetrics.addNetdEventCallback(2, this.mNetdEventCallback);\nif (v3 == 0) {\nthis.mIsLoggingEnabled = 1;\nboolean v2 = 1;\nreturn v2;']

The method startWatchlistLogging has the following similar APIs:

- API Name: stopWatchlistLogging()Z with Similarity Score: 0.9361504912376404
  - Access Control Level: NONE and the following code:
if (this.mIsLoggingEnabled != 0) {
this.mIsLoggingEnabled = 0;
boolean v3 = this.mIpConnectivityMetrics.removeNetdEventCallback(2);
boolean v2 = v3;
return v2;

- API Name: logEvent(Landroid/net/ConnectivityMetricsEvent;)I with Similarity Score: 0.7264237999916077
  - Access Control Level: NONE and the following code:
this.mEventLog.append(p2);
boolean v7 = IpConnectivityMetrics.isRateLimited(p2);
boolean v8 = this.mBuffer.add(p2);

