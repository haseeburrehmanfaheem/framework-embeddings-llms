The method requestBaseStateOverride has the following code snippet:

This is path 1 for the API with depth 2:
public void requestBaseStateOverride(IBinder p1, int p2, int p3){
	if (p1 == 0) {
		long v4 = Binder.clearCallingIdentity();
		Optional v7 = DeviceStateManagerService.getStateLocked(p2);
		boolean v8 = v7.isPresent();
		if (v8 == 0) {
			Object v9 = this.mProcessRecords.get(p4);
			if (v9 == 0) {
				boolean v10 = this.mOverrideRequestController.hasRequest(p5, 1);
				if (v10 != 0) {
					OverrideRequest v11 = new OverrideRequest(p5,p4,p2,p3,1);
					this.mOverrideRequestController.addBaseStateRequest(v11);
					Binder.restoreCallingIdentity(v4);
					return;
				}
			}
		}
	}
}

and the following sink code:
['Optional v7 = DeviceStateManagerService.getStateLocked(p2);\nboolean v8 = v7.isPresent();\nObject v9 = this.mProcessRecords.get(p4);\nboolean v10 = this.mOverrideRequestController.hasRequest(p5, 1);\nOverrideRequest v11 = new OverrideRequest(p5, p4, p2, p3, 1);\nthis.mOverrideRequestController.addBaseStateRequest(v11);']

The method requestBaseStateOverride has the following similar APIs:

- API Name: requestState(Landroid/os/IBinder;II)V with Similarity Score: 0.8763479590415955
  - Access Control Level: SYS_OR_SIG and the following code:
if (p1 == 0) {
Object v12 = this.mProcessRecords.get(p4);
boolean v13 = this.mOverrideRequestController.hasRequest(p5, 0);
Optional v14 = DeviceStateManagerService.getStateLocked(p2);
OverrideRequest v16 = new OverrideRequest(p5,p4,p2,p3,0);
this.mOverrideRequestController.addRequest(v16);

- API Name: cancelStateRequest()V with Similarity Score: 0.7262283563613892
  - Access Control Level: SYS_OR_SIG and the following code:
Object v11 = this.mProcessRecords.get(p2);
DeviceStateManagerService$$ExternalSyntheticLambda3 v13 = new DeviceStateManagerService$$ExternalSyntheticLambda3(this.mOverrideRequestController);
this.mActiveOverride.ifPresent(v13);

