The method getContentCaptureConditions has the following code snippet:

This is path 1 for the API with depth 2:
public void getContentCaptureConditions(String p1, IResultReceiver p2){
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0(p0,p1);
	p3.run();
	String v6 = caughtException.getMessage();
	Bundle v7 = SyncResultReceiver.bundleFor(v6);
	p2.send(-1, v7);
	boolean v4 = 1;
	boolean v3 = v4;
	if (v3 == 0) {
		int v16 = UserHandle.getCallingUserId();
		Object v17 = ContentCaptureManagerService.access$1400(this.this$0);
		AbstractPerUserSystemService v18 = ContentCaptureManagerService.access$1500(this.this$0, v16);
		if (v18 != 0) {
			ArraySet v19 = v18.getContentCaptureConditionsLocked(p1);
			ArrayList v20 = ContentCaptureHelper.toList(v19);
			Bundle v21 = SyncResultReceiver.bundleFor();
			p2.send(0, v21);
			return;
		}
	}
}
This is path 2 for the API with depth 2:
public void getContentCaptureConditions(String p1, IResultReceiver p2){
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0(p0,p1);
	p3.run();
	String v6 = caughtException.getMessage();
	Bundle v7 = SyncResultReceiver.bundleFor(v6);
	p2.send(-1, v7);
	boolean v4 = 1;
	boolean v3 = v4;
	if (v3 == 0) {
		int v16 = UserHandle.getCallingUserId();
		Object v17 = ContentCaptureManagerService.access$1400(this.this$0);
		AbstractPerUserSystemService v18 = ContentCaptureManagerService.access$1500(this.this$0, v16);
		if (v18 != 0) {
			Bundle v19 = SyncResultReceiver.bundleFor();
			p2.send(0, v19);
			return;
		}
	}
}
This is path 3 for the API with depth 2:
public void getContentCaptureConditions(String p1, IResultReceiver p2){
	ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0 v1 = new ContentCaptureManagerService$ContentCaptureManagerServiceStub$$ExternalSyntheticLambda0(p0,p1);
	p3.run();
	String v6 = caughtException.getMessage();
	Bundle v7 = SyncResultReceiver.bundleFor(v6);
	p2.send(-1, v7);
	boolean v4 = 1;
	boolean v3 = v4;
	if (v3 == 0) {
		int v16 = UserHandle.getCallingUserId();
		Object v17 = ContentCaptureManagerService.access$1400(this.this$0);
		AbstractPerUserSystemService v18 = ContentCaptureManagerService.access$1500(this.this$0, v16);
		if (v18 != 0) {
			ArraySet v19 = v18.getContentCaptureConditionsLocked(p1);
			ArrayList v20 = ContentCaptureHelper.toList(v19);
			Bundle v21 = SyncResultReceiver.bundleFor();
			p2.send(0, v21);
			return;
		}
	}
}

and the following sink code:
['ArraySet v19 = v18.getContentCaptureConditionsLocked(p1);\nArrayList v20 = ContentCaptureHelper.toList(v19);\nBundle v21 = SyncResultReceiver.bundleFor();\np2.send(0, v21);', 'Bundle v7 = SyncResultReceiver.bundleFor(v6);\np2.send(-1, v7);']

The method getContentCaptureConditions has the following similar APIs:

- API Name: registerContentCaptureOptionsCallback(Ljava/lang/String;Landroid/view/contentcapture/IContentCaptureOptionsCallback;)V with Similarity Score: 0.7090306878089905
  - Access Control Level: NONE and the following code:
ContentCaptureOptions v28 = new ContentCaptureOptions(ContentCaptureManagerService.mDevCfgLoggingLevel,ContentCaptureManagerService.mDevCfgMaxBufferSize,ContentCaptureManagerService.mDevCfgIdleFlushingFrequencyMs,ContentCaptureManagerService.mDevCfgTextChangeFlushingFrequencyMs,ContentCaptureManagerService.mDevCfgLogHistorySize,);
p2.setContentCaptureOptions(v28);

