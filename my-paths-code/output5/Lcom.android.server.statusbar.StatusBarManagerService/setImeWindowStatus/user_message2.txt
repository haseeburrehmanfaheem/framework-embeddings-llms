The method setImeWindowStatus has the following code snippet:

This is path 1 for the API with depth 2:
public void setImeWindowStatus(int p1, IBinder p2, int p3, int p4, boolean p5){
	Object v4 = this.mDisplayUiState.get(p1);
	if (v4 != 0) {
		StatusBarManagerService$UiState v5 = new StatusBarManagerService$UiState(0);
		this.mDisplayUiState.put(p1, v5);
		StatusBarManagerService$UiState v3 = ;
		this.mImeWindowVis = p2;
		this.mImeBackDisposition = p3;
		this.mShowImeSwitcher = p4;
		this.mImeToken = p5;
		StatusBarManagerService$$ExternalSyntheticLambda1 v10 = new StatusBarManagerService$$ExternalSyntheticLambda1(p0,p1,p2,p3,p4,p5);
		boolean v12 = this.mHandler.post(v10);
		return;
	}
}
This is path 2 for the API with depth 2:
public void setImeWindowStatus(int p1, IBinder p2, int p3, int p4, boolean p5){
	Object v4 = this.mDisplayUiState.get(p1);
	if (v4 != 0) {
		StatusBarManagerService$UiState v3 = ;
		this.mImeWindowVis = p2;
		this.mImeBackDisposition = p3;
		this.mShowImeSwitcher = p4;
		this.mImeToken = p5;
		StatusBarManagerService$$ExternalSyntheticLambda1 v7 = new StatusBarManagerService$$ExternalSyntheticLambda1(p0,p1,p2,p3,p4,p5);
		boolean v9 = this.mHandler.post(v7);
		return;
	}
}

and the following sink code:
['Object v4 = this.mDisplayUiState.get(p1);\nthis.mImeWindowVis = p2;\nthis.mImeBackDisposition = p3;\nthis.mShowImeSwitcher = p4;\nthis.mImeToken = p5;\nStatusBarManagerService$$ExternalSyntheticLambda1 v10 = new StatusBarManagerService$$ExternalSyntheticLambda1(p0,p1,p2,p3,p4,p5);\nboolean v12 = this.mHandler.post(v10);']

The method setImeWindowStatus has the following similar APIs:

- API Name: reportPerceptibleAsync(Landroid/os/IBinder;Z)V with Similarity Score: 0.7810568809509277
  - Access Control Level: SYS_OR_SIG and the following code:
Object v1 = Objects.requireNonNull(p1, "windowToken must not be null");
int v2 = Binder.getCallingUid();
this.mCurPerceptible = p2;
IBinder v18 = this.mBindingController.getCurToken();
long v19 = Binder.clearCallingIdentity();
StatusBarManagerService$UiState.-$$Nest$msetImeWindowState(v29, , p2, v20, v25);
boolean v33 = this.mHandler.post(v31);
Notification v56 = this.mImeSwitcherNotification.build();
this.mNotificationManager.notifyAsUser(0, 8, v56, UserHandle.ALL);

- API Name: registerStatusBar(Lcom/android/internal/statusbar/IStatusBar;)Lcom/android/internal/statusbar/RegisterStatusBarResult; with Similarity Score: 0.7427012920379639
  - Access Control Level: SYS_OR_SIG and the following code:
this.mBar = p1;
IStatusBar v10 = this.mBar;
ArrayMap v23 = new ArrayMap(this.mIcons);
Object v25 = this.mDisplayUiState.get(0);
int v30 = p0.gatherDisableActionsLocked(this.mCurrentUserId, 1);
int v31 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearance(v25);
AppearanceRegion v32 = StatusBarManagerService$UiState.-$$Nest$fgetmAppearanceRegions(v25);
int v33 = StatusBarManagerService$UiState.-$$Nest$fgetmImeWindowVis(v25);
int v34 = StatusBarManagerService$UiState.-$$Nest$fgetmImeBackDisposition(v25);
boolean v35 = StatusBarManagerService$UiState.-$$Nest$fgetmShowImeSwitcher(v25);
int v36 = p0.gatherDisableActionsLocked(this.mCurrentUserId, 2);
IBinder v37 = StatusBarManagerService$UiState.-$$Nest$fgetmImeToken(v25);
boolean v38 = StatusBarManagerService$UiState.-$$Nest$fgetmNavbarColorManagedByIme(v25);
int v39 = StatusBarManagerService$UiState.-$$Nest$fgetmBehavior(v25);
InsetsVisibilities v40 = StatusBarManagerService$UiState.-$$Nest$fgetmRequestedVisibilities(v25);
String v41 = StatusBarManagerService$UiState.-$$Nest$fgetmPackageName(v25);
LetterboxDetails v42 = StatusBarManagerService$UiState.-$$Nest$fgetmLetterboxDetails(v25);
[I v28 = new [I(v27);
RegisterStatusBarResult v29 = new RegisterStatusBarResult(v23,v30,v31,v32,v33,v34,v35,v36,v37,v38,v39,v40,v41,v28,v42);
return v29;

