The method getAllowedCecSettingStringValues has the following code snippet:

This is path 1 for the API with depth 2:
public List getAllowedCecSettingStringValues(String p1){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		Object v10 = this.mSettings.get(p1);
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue();
			String v13 = v12.getStringValue();
			if (v13 == 0) {
				String v11 = ;
				boolean v14 = v11.equals("string");
				if (v14 == 0) {
					ArrayList v15 = new ArrayList();
					List v17 = this.mAllowedValues;
					Iterator v18 = v17.iterator();
					boolean v19 = v18.hasNext();
					if (v19 == 0) {
						List v7 = v15;
						Binder.restoreCallingIdentity(v5);
						return v7;
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public List getAllowedCecSettingStringValues(String p1){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		Object v10 = this.mSettings.get(p1);
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue();
			String v13 = v12.getStringValue();
			if (v13 == 0) {
				String v11 = ;
				boolean v14 = v11.equals("string");
				if (v14 == 0) {
					ArrayList v15 = new ArrayList();
					List v17 = this.mAllowedValues;
					Iterator v18 = v17.iterator();
					boolean v19 = v18.hasNext();
					if (v19 == 0) {
						List v7 = v15;
						Binder.restoreCallingIdentity(v5);
						return v7;
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public List getAllowedCecSettingStringValues(String p1){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			HdmiCecConfig$Value v11 = HdmiCecConfig$Setting.getDefaultValue();
			String v12 = v11.getStringValue();
			if (v12 == 0) {
				String v10 = ;
				boolean v13 = v10.equals("string");
				if (v13 == 0) {
					ArrayList v14 = new ArrayList();
					List v16 = this.mAllowedValues;
					Iterator v17 = v16.iterator();
					boolean v18 = v17.hasNext();
					if (v18 == 0) {
						List v7 = v14;
						Binder.restoreCallingIdentity(v5);
						return v7;
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v9 = this.mSettings.containsKey(p1);\nObject v10 = this.mSettings.get(p1);\nArrayList v15 = new ArrayList();\nList v7 = v14;\nreturn v7;']

The method getAllowedCecSettingStringValues has the following similar APIs:

- API Name: getAllowedCecSettingIntValues(Ljava/lang/String;)[I with Similarity Score: 0.8072180151939392
  - Access Control Level: NONE and the following code:
boolean v9 = this.mSettings.containsKey(p1);
Object v10 = this.mSettings.get(p1);
HdmiCecConfig$Setting v8 = ;
HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue();
ArrayList v15 = new ArrayList();
List v17 = this.mAllowedValues;
Stream v20 = v7.stream();
HdmiControlService$BinderService$$ExternalSyntheticLambda0 v21 = new HdmiControlService$BinderService$$ExternalSyntheticLambda0();
IntStream v23 = v20.mapToInt(v21);
[I v24 = v23.toArray();
return v24;

- API Name: getCecSettingStringValue(Ljava/lang/String;)Ljava/lang/String; with Similarity Score: 0.7696590423583984
  - Access Control Level: NONE and the following code:
Object v10 = this.mSettings.get(p1);
HdmiCecConfig$Setting v8 = ;
HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue();
String v13 = v12.getStringValue();
int v29 = HdmiCecConfig.getStorage(v8);
String v30 = HdmiCecConfig.getStorageKey(v8);
String v39 = this.mStorageAdapter.retrieveGlobalSetting(v30, v27);
String v28 = v39;
String v7 = v28;
return v7;

