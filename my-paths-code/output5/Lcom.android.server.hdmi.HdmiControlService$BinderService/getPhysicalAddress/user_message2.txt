The method getPhysicalAddress has the following code snippet:

This is path 1 for the API with depth 2:
public int getPhysicalAddress(){
	HdmiControlService.setWorkSourceUidToCallingUid();
	Object v5 = HdmiControlService.-$$Nest$fgetmLock(this.this$0);
	HdmiCecNetwork v6 = HdmiControlService.-$$Nest$fgetmHdmiCecNetwork(this.this$0);
	HdmiCecController.assertRunOnServiceThread();
	int v10 = this.mNativeWrapperImpl.nativeGetPhysicalAddress();
	int v8 = v10;
	int v7 = v8;
	return v7;
}

and the following sink code:
['int v10 = this.mNativeWrapperImpl.nativeGetPhysicalAddress();\nint v8 = v10;\nint v7 = v8;\nreturn v7;']

The method getPhysicalAddress has the following similar APIs:

- API Name: startUpdateCredentialsSession(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZLandroid/os/Bundle;)V with Similarity Score: 0.7115090489387512
  - Access Control Level: SYS_OR_SIG and the following code:
int v21 = Binder.getCallingUid();
AccountManagerService$14 v29 = new AccountManagerService$14(p0,v27,p1,Account.type,p4,Account.name,0,1,v25,p2,p3,p5);

- API Name: getAuthToken(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZZLandroid/os/Bundle;)V with Similarity Score: 0.7051236629486084
  - Access Control Level: NONE and the following code:
int v19 = Binder.getCallingPid();
StringBuilder v20 = v3.append(v19);

