This is path 1 for the API with depth 2:
public String getCecSettingStringValue(String p1){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		Object v10 = this.mSettings.get(p1);
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue();
			String v13 = v12.getStringValue();
			if (v13 == 0) {
				String v11 = ;
				boolean v14 = v11.equals("string");
				if (v14 == 0) {
					StringBuilder v15 = new StringBuilder();
					StringBuilder v17 = v15.append("Getting CEC setting value '");
					StringBuilder v18 = v15.append(p1);
					StringBuilder v19 = v15.append("'.");
					String v20 = v15.toString();
					Object v21 = new Object(0);
					HdmiLogger v23 = HdmiLogger.getLogger();
					String v24 = HdmiLogger.toLogString(v20, v21);
					v23.debugInternal(v24);
					if (this.mDefaultValue == 0) {
						HdmiCecConfig$Value v26 = this.mDefaultValue;
						String v27 = this.mStringValue;
						int v29 = HdmiCecConfig.getStorage(v8);
						String v30 = HdmiCecConfig.getStorageKey(v8);
						if (v29 != 0) {
							if (v29 != 1) {
								if (v29 != 2) {
									StringBuilder v31 = new StringBuilder();
									StringBuilder v33 = v31.append("Reading '");
									StringBuilder v34 = v31.append(v30);
									StringBuilder v35 = v31.append("' shared preference.");
									String v36 = v31.toString();
									Object v37 = new Object(0);
									HdmiLogger.debug(v36, v37);
									String v39 = this.mStorageAdapter.retrieveSharedPref(v30, v27);
									String v28 = v39;
									String v7 = v28;
									Binder.restoreCallingIdentity(v5);
									return v7;
								}
							}
						}
					}
				}
			}
		}
	}
}

This is path 2 for the API with depth 2:
public String getCecSettingStringValue(String p1){
	HdmiControlService.setWorkSourceUidToCallingUid();
	long v5 = Binder.clearCallingIdentity();
	HdmiCecConfig v6 = this.this$0.getHdmiCecConfig();
	boolean v9 = this.mSettings.containsKey(p1);
	if (v9 == 0) {
		Object v10 = this.mSettings.get(p1);
		HdmiCecConfig$Setting v8 = ;
		if (v8 == 0) {
			HdmiCecConfig$Value v12 = HdmiCecConfig$Setting.getDefaultValue();
			String v13 = v12.getStringValue();
			if (v13 == 0) {
				String v11 = ;
				boolean v14 = v11.equals("string");
				if (v14 == 0) {
					StringBuilder v15 = new StringBuilder();
					StringBuilder v17 = v15.append("Getting CEC setting value '");
					StringBuilder v18 = v15.append(p1);
					StringBuilder v19 = v15.append("'.");
					String v20 = v15.toString();
					Object v21 = new Object(0);
					HdmiLogger v23 = HdmiLogger.getLogger();
					String v24 = HdmiLogger.toLogString(v20, v21);
					v23.debugInternal(v24);
					if (this.mDefaultValue == 0) {
						HdmiCecConfig$Value v26 = this.mDefaultValue;
						String v27 = this.mStringValue;
						int v29 = HdmiCecConfig.getStorage(v8);
						String v30 = HdmiCecConfig.getStorageKey(v8);
						if (v29 != 0) {
							if (v29 != 1) {
								StringBuilder v31 = new StringBuilder();
								StringBuilder v33 = v31.append("Reading '");
								StringBuilder v34 = v31.append(v30);
								StringBuilder v35 = v31.append("' global setting.");
								String v36 = v31.toString();
								Object v37 = new Object(0);
								HdmiLogger.debug(v36, v37);
								String v39 = this.mStorageAdapter.retrieveGlobalSetting(v30, v27);
								String v28 = v39;
								String v7 = v28;
								Binder.restoreCallingIdentity(v5);
								return v7;
							}
						}
					}
				}
			}
		}
	}
}
