The method getString has the following code snippet:

This is path 1 for the API with depth 2:
public String getString(String p1, String p2, int p3){
	if (p3 != -9999) {
		boolean v3 = "legacy_lock_pattern_enabled".equals(p1);
		if (v3 == 0) {
			boolean v5 = this.mCache.hasKeyValue(, p3);
			if (v5 == 0) {
				int v6 = LockSettingsStorage$Cache.-$$Nest$mgetVersion(this.mCache);
				SQLiteDatabase v7 = this.mOpenHelper.getReadableDatabase();
				String v8 = new String(2);
				String v9 = Integer.toString(p3);
				Cursor v10 = v7.query("locksettings", this.COLUMNS_FOR_QUERY, "user=? AND name=?", v8, 0, 0, 0);
				if (v10 == 0) {
					boolean v11 = v10.moveToFirst();
					if (v11 == 0) {
						String v12 = v10.getString(0);
						v10.close();
						this.mCache.putKeyValueIfUnchanged(, , p3, v6);
						if ( != this.DEFAULT) {
							String v4 = ;
							String v2 = v4;
							return v2;
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['boolean v5 = this.mCache.hasKeyValue(, p3);\nint v6 = LockSettingsStorage$Cache.-$$Nest$mgetVersion(this.mCache);\nSQLiteDatabase v7 = this.mOpenHelper.getReadableDatabase();\nCursor v10 = v7.query("locksettings", this.COLUMNS_FOR_QUERY, "user=? AND name=?", new String[]{"android.lockscreen.password_type"}, 0, 0, 0);\nString v12 = v10.getString(0);\nthis.mCache.putKeyValueIfUnchanged(, , p3, v6);\nif ( != this.DEFAULT) {\nString v4 = ;\nString v2 = v4;\nreturn v2;']

The method getString has the following similar APIs:

- API Name: getCredentialType(I)I with Similarity Score: 0.7833727598190308
  - Access Control Level: SYS_OR_SIG and the following code:
long v6 = LockSettingsService.getLong("sp-handle", 0, p1);
byte[] v8 = SyntheticPasswordManager.loadState("pwd", v5, p1);
long v16 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
int v15 = v16;
boolean v18 = LockPatternUtils.isQualityAlphabeticPassword(v15);
boolean v19 = LockPatternUtils.isQualityNumericPin(v15);
int v17 = 3;
int v2 = v17;
return v2;

- API Name: getBoolean(Ljava/lang/String;ZI)Z with Similarity Score: 0.7748932838439941
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = "lock_pattern_autolock".equals(p1);
if (p3 != -9999) {
LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
long v7 = LockSettingsService.getLong("sp-handle", 0, p1);
byte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);

