The method setBoolean has the following code snippet:

This is path 1 for the API with depth 2:
public void setBoolean(String p1, boolean p2, int p3){
	if (p2 == 0) {
		if (p3 == -9999) {
			Preconditions.checkArgument(, "cannot store lock settings for FRP user");
			LockSettingsStorage.writeKeyValue(p1, , p3);
			boolean v6 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
			if (v6 == 0) {
				BackupManager.dataChanged("com.android.providers.settings");
				return;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setBoolean(String p1, boolean p2, int p3){
	if (p2 == 0) {
		if (p3 == -9999) {
			Preconditions.checkArgument(, "cannot store lock settings for FRP user");
			LockSettingsStorage.writeKeyValue(p1, , p3);
			boolean v6 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
			if (v6 == 0) {
				return;
			}
		}
	}
}

and the following sink code:
['LockSettingsStorage.writeKeyValue(p1, , p3);']

The method setBoolean has the following similar APIs:

- API Name: setLong(Ljava/lang/String;JI)V with Similarity Score: 0.9195499420166016
  - Access Control Level: NONE and the following code:
String v3 = Long.toString(p2);
LockSettingsStorage.writeKeyValue(p1, v3, p3);

- API Name: setString(Ljava/lang/String;Ljava/lang/String;I)V with Similarity Score: 0.7701042890548706
  - Access Control Level: NONE and the following code:
SQLiteDatabase v5 = this.mOpenHelper.getWritableDatabase();
LockSettingsStorage.writeKeyValue(v5, p1, p2, p3);

