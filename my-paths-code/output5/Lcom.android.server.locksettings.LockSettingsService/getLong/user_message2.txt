The method getLong has the following code snippet:

This is path 1 for the API with depth 2:
public long getLong(String p1, long p2, int p3){
	if (p3 != -9999) {
		boolean v4 = "legacy_lock_pattern_enabled".equals(p1);
		if (v4 == 0) {
			String v5 = LockSettingsStorage.readKeyValue(, 0, p3);
			String v3 = v5;
			boolean v6 = TextUtils.isEmpty(v3);
			if (v6 == 0) {
				long v2 = ;
				return v2;
			}
		}
	}
}
This is path 2 for the API with depth 2:
public long getLong(String p1, long p2, int p3){
	if (p3 != -9999) {
		boolean v4 = "legacy_lock_pattern_enabled".equals(p1);
		if (v4 == 0) {
			String v5 = LockSettingsStorage.readKeyValue(, 0, p3);
			String v3 = v5;
			boolean v6 = TextUtils.isEmpty(v3);
			if (v6 == 0) {
				long v7 = Long.parseLong(v3);
				long v2 = ;
				return v2;
			}
		}
	}
}

and the following sink code:
['boolean v4 = "legacy_lock_pattern_enabled".equals(p1);\nString v5 = LockSettingsStorage.readKeyValue(, 0, p3);\nlong v7 = Long.parseLong(v3);']

The method getLong has the following similar APIs:

- API Name: getBoolean(Ljava/lang/String;ZI)Z with Similarity Score: 0.817334771156311
  - Access Control Level: SYS_OR_SIG and the following code:
boolean v2 = "lock_pattern_autolock".equals(p1);
if (p3 != -9999) {
LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
long v7 = LockSettingsService.getLong("sp-handle", 0, p1);
byte[] v9 = SyntheticPasswordManager.loadState("pwd", v6, p1);

- API Name: getCredentialType(I)I with Similarity Score: 0.7706642150878906
  - Access Control Level: SYS_OR_SIG and the following code:
long v6 = LockSettingsService.getLong("sp-handle", 0, p1);
byte[] v8 = SyntheticPasswordManager.loadState("pwd", v5, p1);
long v16 = this.mStorage.getLong("lockscreen.password_type", 0, p1);
int v15 = v16;
boolean v18 = LockPatternUtils.isQualityAlphabeticPassword(v15);
boolean v19 = LockPatternUtils.isQualityNumericPin(v15);
int v17 = 3;
int v2 = v17;
return v2;

