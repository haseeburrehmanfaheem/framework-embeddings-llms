The method setRecoveryStatus has the following code snippet:

This is path 1 for the API with depth 2:
public void setRecoveryStatus(String p1, int p2){
	Object v3 = Objects.requireNonNull(p1, "alias is null");
	int v4 = Binder.getCallingUid();
	SQLiteDatabase v6 = this.mKeyStoreDbHelper.getWritableDatabase();
	ContentValues v7 = new ContentValues();
	Integer v9 = Integer.valueOf(p2);
	v7.put("recovery_status", v9);
	String v11 = new String(2);
	String v12 = String.valueOf(v4);
	int v13 = v6.update("keys", v7, "uid = ? AND alias = ?", v11);
	int v5 = v13;
	if ((v5 < 0) < 0) {
		return;
	}
}

and the following sink code:
['SQLiteDatabase v6 = this.mKeyStoreDbHelper.getWritableDatabase();\nContentValues v7 = new ContentValues();\nInteger v9 = Integer.valueOf(p2);\nv7.put("recovery_status", v9);\nint v13 = v6.update("keys", v7, "uid = ? AND alias = ?", new String[]{String.valueOf(v4), p1});']

The method setRecoveryStatus has the following similar APIs:

- API Name: setRecoverySecretTypes([I)V with Similarity Score: 0.8856967687606812
  - Access Control Level: NONE and the following code:
SQLiteDatabase v24 = this.mKeyStoreDbHelper.getWritableDatabase();
ContentValues v25 = new ContentValues();
RecoverableKeyStoreDb.ensureRecoveryServiceMetadataEntryExists(v4, v5);

- API Name: setRecoverySecretTypes([I)V with Similarity Score: 0.8606226444244385
  - Access Control Level: NONE and the following code:
SQLiteDatabase v7 = this.mKeyStoreDbHelper.getReadableDatabase();
Cursor v12 = v7.query("recovery_service_metadata", v8, "user_id = ? AND uid = ?", v9, 0, 0, 0);
String v17 = v12.getString(v15);
SQLiteDatabase v24 = this.mKeyStoreDbHelper.getWritableDatabase();
v25.put("secret_types", v33);
int v39 = v24.update("recovery_service_metadata", v25, "user_id = ? AND uid = ?", v36);

