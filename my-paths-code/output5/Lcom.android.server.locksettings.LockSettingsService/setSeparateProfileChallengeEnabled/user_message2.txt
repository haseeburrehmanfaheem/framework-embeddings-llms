The method setSeparateProfileChallengeEnabled has the following code snippet:

This is path 1 for the API with depth 2:
public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(, "Credential is already zeroized");
				int v2 = this.mType;
				if (v2 != -1) {
					if (p3 == 0) {
						boolean v8 = "lock_pattern_autolock".equals("lockscreen.profilechallenge");
						if (v8 == 0) {
							int v9 = LockSettingsService.getCredentialTypeInternal(p1);
							if (v9 != 1) {
								boolean v6 = ;
								this.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);
								if (p2 == 0) {
									String v14 = LockSettingsStorage.getChildProfileLockFile(p1);
									LockSettingsStorage.deleteFile(v14);
									caughtException.printStackTrace();
									StringBuilder v24 = new StringBuilder();
									StringBuilder v26 = v24.append("profile_key_name_encrypt_");
									StringBuilder v27 = v24.append(p1);
									String v28 = v24.toString();
									this.mJavaKeyStore.deleteEntry(v28);
									StringBuilder v30 = new StringBuilder();
									StringBuilder v32 = v30.append("profile_key_name_decrypt_");
									StringBuilder v33 = v30.append(p1);
									String v34 = v30.toString();
									this.mJavaKeyStore.deleteEntry(v34);
									p0.notifySeparateProfileChallengeChanged(p1);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 2 for the API with depth 2:
public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(, "Credential is already zeroized");
				int v2 = this.mType;
				if (v2 != -1) {
					if (p3 == 0) {
						LockscreenCredential v5 = LockscreenCredential.createNone();
						boolean v9 = "lock_pattern_autolock".equals("lockscreen.profilechallenge");
						if (v9 == 0) {
							int v10 = LockSettingsService.getCredentialTypeInternal(p1);
							if (v10 != 1) {
								boolean v7 = ;
								this.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);
								if (p2 == 0) {
									String v15 = LockSettingsStorage.getChildProfileLockFile(p1);
									LockSettingsStorage.deleteFile(v15);
									caughtException.printStackTrace();
									StringBuilder v25 = new StringBuilder();
									StringBuilder v27 = v25.append("profile_key_name_encrypt_");
									StringBuilder v28 = v25.append(p1);
									String v29 = v25.toString();
									this.mJavaKeyStore.deleteEntry(v29);
									StringBuilder v31 = new StringBuilder();
									StringBuilder v33 = v31.append("profile_key_name_decrypt_");
									StringBuilder v34 = v31.append(p1);
									String v35 = v31.toString();
									this.mJavaKeyStore.deleteEntry(v35);
									p0.notifySeparateProfileChallengeChanged(p1);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
This is path 3 for the API with depth 2:
public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(, "Credential is already zeroized");
				int v2 = this.mType;
				if (v2 != -1) {
					if (p3 == 0) {
						boolean v8 = "lock_pattern_autolock".equals("lockscreen.profilechallenge");
						if (v8 == 0) {
							int v9 = LockSettingsService.getCredentialTypeInternal(p1);
							if (v9 != 1) {
								boolean v6 = ;
								this.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);
								if (p2 == 0) {
									String v14 = LockSettingsStorage.getChildProfileLockFile(p1);
									LockSettingsStorage.deleteFile(v14);
									caughtException.printStackTrace();
									StringBuilder v24 = new StringBuilder();
									StringBuilder v26 = v24.append("profile_key_name_encrypt_");
									StringBuilder v27 = v24.append(p1);
									String v28 = v24.toString();
									this.mJavaKeyStore.deleteEntry(v28);
									StringBuilder v30 = new StringBuilder();
									StringBuilder v32 = v30.append("profile_key_name_decrypt_");
									StringBuilder v33 = v30.append(p1);
									String v34 = v30.toString();
									this.mJavaKeyStore.deleteEntry(v34);
									p0.notifySeparateProfileChallengeChanged(p1);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}

and the following sink code:
['int v9 = LockSettingsService.getCredentialTypeInternal(p1);\nthis.mStorage.setBoolean("lockscreen.profilechallenge", p2, p1);', 'String v14 = LockSettingsStorage.getChildProfileLockFile(p1);\nLockSettingsStorage.deleteFile(v14);', 'StringBuilder v24 = new StringBuilder();\nStringBuilder v26 = v24.append("profile_key_name_encrypt_");\nStringBuilder v27 = v24.append(p1);\nString v28 = v24.toString();\nthis.mJavaKeyStore.deleteEntry(v28);', 'StringBuilder v30 = new StringBuilder();\nStringBuilder v32 = v30.append("profile_key_name_decrypt_");\nStringBuilder v33 = v30.append(p1);\nString v34 = v30.toString();\nthis.mJavaKeyStore.deleteEntry(v34);']

The method setSeparateProfileChallengeEnabled has the following similar APIs:

- API Name: getSeparateProfileChallengeEnabled(I)Z with Similarity Score: 0.8729046583175659
  - Access Control Level: NONE and the following code:
String v4 = LockSettingsStorage.getString("lockscreen.profilechallenge", 0, p1);
return v2;

- API Name: removeCachedUnifiedChallenge(I)V with Similarity Score: 0.8262602686882019
  - Access Control Level: NONE and the following code:
StringBuilder v3 = new StringBuilder();
StringBuilder v5 = v3.append("com.android.server.locksettings.unified_profile_cache_v2_");
StringBuilder v6 = v3.append(p1);
String v7 = v3.toString();
String v2 = v7;
boolean v14 = this.mKeyStore.containsAlias(v2);
this.mKeyStore.deleteEntry(v2);
Object v19 = this.mEncryptedPasswords.get(p1);
Arrays.fill(v19, 0);
this.mEncryptedPasswords.remove(p1);

