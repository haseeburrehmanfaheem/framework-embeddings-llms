The method getMaximumDataBlockSize has the following code snippet:

This is path 1 for the API with depth 2:
public long getMaximumDataBlockSize(){
	int v1 = Binder.getCallingUid();
	if (p2 != this.mAllowedUid) {
		long v6 = PersistentDataBlockService.getBlockDeviceSize();
		if (((((((v6 - 8) - 32) - 10000) - 1000) - 1) < 102400) > 0) {
			long v5 = ;
			long v4 = v5;
			return v4;
		}
	}
}
This is path 2 for the API with depth 2:
public long getMaximumDataBlockSize(){
	int v1 = Binder.getCallingUid();
	if (p2 != this.mAllowedUid) {
		long v6 = PersistentDataBlockService.getBlockDeviceSize();
		if (((((((v6 - 8) - 32) - 10000) - 1000) - 1) < 102400) > 0) {
			long v5 = ;
			long v4 = v5;
			return v4;
		}
	}
}

and the following sink code:
['long v6 = PersistentDataBlockService.getBlockDeviceSize();\nif (((((((v6 - 8) - 32) - 10000) - 1000) - 1) < 102400) > 0)\nlong v5 = ;\nlong v4 = v5;\nreturn v4;']

The method getMaximumDataBlockSize has the following similar APIs:

- API Name: getOemUnlockEnabled()Z with Similarity Score: 0.8419801592826843
  - Access Control Level: NONE and the following code:
File v6 = new File(this.mDataBlockFile);
FileInputStream v5 = new FileInputStream(v6);
DataInputStream v4 = new DataInputStream(v5);
long v10 = PersistentDataBlockService.getBlockDeviceSize();
long v11 = v4.skip((v10 - 1));
byte v12 = v4.readByte();
if (v12 == 0) {

- API Name: getDataBlockSize()I with Similarity Score: 0.7424176931381226
  - Access Control Level: SYS_OR_SIG and the following code:
int v15 = PersistentDataBlockService.-$$Nest$mgetTotalDataSizeLocked(this.this$0, v7);
return v15;

