The method getPersistentDataPackageName has the following code snippet:

This is path 1 for the API with depth 2:
public String getPersistentDataPackageName(){
	if (v3 == 0) {
		int v4 = Binder.getCallingUid();
		this.this$0.enforceUid(v4);
		Context v7 = PersistentDataBlockService.-$$Nest$fgetmContext(this.this$0);
		String v8 = v7.getString(17040017);
		return v8;
	}
}

and the following sink code:
['int v4 = Binder.getCallingUid();\nthis.this$0.enforceUid(v4);\nContext v7 = PersistentDataBlockService.-$$Nest$fgetmContext(this.this$0);\nString v8 = v7.getString(17040017);\nreturn v8;']

The method getPersistentDataPackageName has the following similar APIs:

- API Name: startUpdateCredentialsSession(Landroid/accounts/IAccountManagerResponse;Landroid/accounts/Account;Ljava/lang/String;ZLandroid/os/Bundle;)V with Similarity Score: 0.7614018321037292
  - Access Control Level: SYS_OR_SIG and the following code:
int v21 = Binder.getCallingUid();
AccountManagerService$14 v29 = new AccountManagerService$14(p0,v27,p1,Account.type,p4,Account.name,0,1,v25,p2,p3,p5);

- API Name: setOemUnlockEnabled(Z)V with Similarity Score: 0.7493399381637573
  - Access Control Level: SYS_OR_SIG and the following code:
int v5 = UserHandle.getCallingUserId();
UserManager v6 = UserManager.get(this.mContext);
boolean v7 = v6.isUserAdmin(v5);
if (p1 == 0) {
Object v8 = PersistentDataBlockService.-$$Nest$fgetmLock(this.this$0);
FileChannel v11 = PersistentDataBlockService.getBlockOutputChannel();
long v12 = PersistentDataBlockService.getBlockDeviceSize();
FileChannel v13 = v11.position((v12 - 1));
ByteBuffer v14 = ByteBuffer.allocate(1);
if (p2 == 0) {
int v17 = v11.write(v14);
v11.force(1);

