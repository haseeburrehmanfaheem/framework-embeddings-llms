"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/timezone/RulesManagerService","requestUninstall([BLandroid/app/timezone/ICallback;)I","0","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
9 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 2 @9 exception:8,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestUninstall(Ljava/lang/String;)V > 13 @19 exception:14,
monitorenter 1,
conditional branch(eq, to iindex=-1) 3,7,
18 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
20 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 18 @27 exception:19,
conditional branch(eq, to iindex=-1) 20,7,
22 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, set(Z)V > 22,21 @38 exception:23,
24 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
25 = new <Application,Lcom/android/server/timezone/RulesManagerService$UninstallRunnable>@43,
invokespecial < Application, Lcom/android/server/timezone/RulesManagerService$UninstallRunnable, <init>(Lcom/android/server/timezone/RulesManagerService;Lcom/android/server/timezone/CheckToken;Landroid/app/timezone/ICallback;)V > 25,1,10,3 @45 exception:26,
invokeinterface < Application, Ljava/util/concurrent/Executor, execute(Ljava/lang/Runnable;)V > 24,25 @48 exception:27,
monitorexit 1,
return 7,","depth : 0
public int requestUninstall(byte[] p1, ICallback p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestUninstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$UninstallRunnable v6 = new RulesManagerService$UninstallRunnable(p0,phiInstruction,p2);
	this.mExecutor.execute(v6);
	return 0;
}
-----
","public int requestUninstall(byte[] p1, ICallback p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestUninstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$UninstallRunnable v7 = new RulesManagerService$UninstallRunnable(p0,phiInstruction,p2);
	this.mExecutor.execute(v7);
	return 0;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestUninstall([BLandroid/app/timezone/ICallback;)I","1","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
9 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 2 @9 exception:8,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
return 3,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
conditional branch(ne, to iindex=-1) 1,2,
goto (from iindex= 2 to iindex = 5),
5 = phi  2,4,
return 5,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestUninstall(Ljava/lang/String;)V > 13 @19 exception:14,
4 = invokestatic < Application, Landroid/util/EventLog, writeEvent(ILjava/lang/String;)I > 2,1 @3 exception:3,
return,
monitorenter 1,
conditional branch(eq, to iindex=-1) 3,7,
18 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
20 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 18 @27 exception:19,
conditional branch(eq, to iindex=-1) 20,7,
22 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, set(Z)V > 22,21 @38 exception:23,
24 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
25 = new <Application,Lcom/android/server/timezone/RulesManagerService$UninstallRunnable>@43,
invokespecial < Application, Lcom/android/server/timezone/RulesManagerService$UninstallRunnable, <init>(Lcom/android/server/timezone/RulesManagerService;Lcom/android/server/timezone/CheckToken;Landroid/app/timezone/ICallback;)V > 25,1,10,3 @45 exception:26,
invokeinterface < Application, Ljava/util/concurrent/Executor, execute(Ljava/lang/Runnable;)V > 24,25 @48 exception:27,
monitorexit 1,
return 7,","depth : 0
public int requestUninstall(byte[] p1, ICallback p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestUninstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$UninstallRunnable v6 = new RulesManagerService$UninstallRunnable(p0,phiInstruction,p2);
	this.mExecutor.execute(v6);
	return 0;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneRequestUninstall(String p1){
	int v1 = EventLog.writeEvent(51620, p1);
	return;
}
-----
","public int requestUninstall(byte[] p1, ICallback p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v3 = CheckToken.fromByteArray(p1);
	CheckToken v2 = v3;
	String v4 = phiInstruction;
	int v6 = EventLog.writeEvent(51620, v4);
	boolean v7 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$UninstallRunnable v9 = new RulesManagerService$UninstallRunnable(p0,phiInstruction,p2);
	this.mExecutor.execute(v9);
	return 0;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestUninstall([BLandroid/app/timezone/ICallback;)I","1","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
9 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 2 @9 exception:8,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
return 3,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Ljava/lang/Object, toString()Ljava/lang/String; > 1 @4 exception:3,
5 = phi  2,4,
return 5,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestUninstall(Ljava/lang/String;)V > 13 @19 exception:14,
4 = invokestatic < Application, Landroid/util/EventLog, writeEvent(ILjava/lang/String;)I > 2,1 @3 exception:3,
return,
monitorenter 1,
conditional branch(eq, to iindex=-1) 3,7,
18 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
20 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 18 @27 exception:19,
conditional branch(eq, to iindex=-1) 20,7,
22 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, set(Z)V > 22,21 @38 exception:23,
24 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
25 = new <Application,Lcom/android/server/timezone/RulesManagerService$UninstallRunnable>@43,
invokespecial < Application, Lcom/android/server/timezone/RulesManagerService$UninstallRunnable, <init>(Lcom/android/server/timezone/RulesManagerService;Lcom/android/server/timezone/CheckToken;Landroid/app/timezone/ICallback;)V > 25,1,10,3 @45 exception:26,
invokeinterface < Application, Ljava/util/concurrent/Executor, execute(Ljava/lang/Runnable;)V > 24,25 @48 exception:27,
monitorexit 1,
return 7,","depth : 0
public int requestUninstall(byte[] p1, ICallback p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestUninstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$UninstallRunnable v6 = new RulesManagerService$UninstallRunnable(p0,phiInstruction,p2);
	this.mExecutor.execute(v6);
	return 0;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	String v1 = p1.toString();
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneRequestUninstall(String p1){
	int v1 = EventLog.writeEvent(51620, p1);
	return;
}
-----
","public int requestUninstall(byte[] p1, ICallback p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v3 = CheckToken.fromByteArray(p1);
	CheckToken v2 = v3;
	String v5 = phiInstruction.toString();
	String v4 = phiInstruction;
	int v7 = EventLog.writeEvent(51620, v4);
	boolean v8 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$UninstallRunnable v10 = new RulesManagerService$UninstallRunnable(p0,phiInstruction,p2);
	this.mExecutor.execute(v10);
	return 0;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestUninstall([BLandroid/app/timezone/ICallback;)I","2","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
9 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 2 @9 exception:8,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
2 = new <Application,Ljava/io/ByteArrayInputStream>@0,
invokespecial < Application, Ljava/io/ByteArrayInputStream, <init>([B)V > 2,1 @2 exception:3,
4 = new <Application,Ljava/io/DataInputStream>@5,
invokespecial < Application, Ljava/io/DataInputStream, <init>(Ljava/io/InputStream;)V > 4,2 @7 exception:5,
7 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 4 @10 exception:6,
9 = invokevirtual < Application, Ljava/io/DataInputStream, readLong()J > 4 @14 exception:8,
11 = invokevirtual < Application, Ljava/io/DataInputStream, readLong()J > 4 @18 exception:10,
12 = new <Application,Lcom/android/server/timezone/CheckToken>@22,
13 = new <Application,Lcom/android/server/timezone/PackageVersions>@24,
invokespecial < Application, Lcom/android/server/timezone/PackageVersions, <init>(JJ)V > 13,9,11 @26 exception:14,
invokespecial < Application, Lcom/android/server/timezone/CheckToken, <init>(ILcom/android/server/timezone/PackageVersions;)V > 12,7,13 @29 exception:15,
invokevirtual < Application, Ljava/io/DataInputStream, close()V > 4 @32 exception:25,
return 12,
return 3,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestUninstall(Ljava/lang/String;)V > 13 @19 exception:14,
monitorenter 1,
conditional branch(eq, to iindex=-1) 3,7,
18 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
20 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 18 @27 exception:19,
conditional branch(eq, to iindex=-1) 20,7,
22 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, set(Z)V > 22,21 @38 exception:23,
24 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
25 = new <Application,Lcom/android/server/timezone/RulesManagerService$UninstallRunnable>@43,
invokespecial < Application, Lcom/android/server/timezone/RulesManagerService$UninstallRunnable, <init>(Lcom/android/server/timezone/RulesManagerService;Lcom/android/server/timezone/CheckToken;Landroid/app/timezone/ICallback;)V > 25,1,10,3 @45 exception:26,
invokeinterface < Application, Ljava/util/concurrent/Executor, execute(Ljava/lang/Runnable;)V > 24,25 @48 exception:27,
monitorexit 1,
return 7,","depth : 0
public int requestUninstall(byte[] p1, ICallback p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestUninstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$UninstallRunnable v6 = new RulesManagerService$UninstallRunnable(p0,phiInstruction,p2);
	this.mExecutor.execute(v6);
	return 0;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 2
public CheckToken fromByteArray(byte[] p1){
	ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
	DataInputStream v1 = new DataInputStream(v0);
	int v3 = v1.readInt();
	long v4 = v1.readLong();
	long v5 = v1.readLong();
	CheckToken v5 = new CheckToken(v3,v5);
	PackageVersions v5 = new PackageVersions(v4,v5);
	v1.close();
	return v5;
}
-----
","public int requestUninstall(byte[] p1, ICallback p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	ByteArrayInputStream v4 = new ByteArrayInputStream(p1);
	DataInputStream v6 = new DataInputStream(v4);
	int v8 = v6.readInt();
	long v9 = v6.readLong();
	long v10 = v6.readLong();
	CheckToken v11 = new CheckToken(v8,v12);
	PackageVersions v12 = new PackageVersions(v9,v10);
	v6.close();
	CheckToken v3 = v11;
	CheckToken v2 = v3;
	String v16 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestUninstall(v16);
	boolean v18 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$UninstallRunnable v20 = new RulesManagerService$UninstallRunnable(p0,phiInstruction,p2);
	this.mExecutor.execute(v20);
	return 0;
}
","NONE"

"Lcom/android/server/timezone/RulesManagerService","requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I","0","6 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 6,7 @5 exception:8,
conditional branch(eq, to iindex=-1) 3,9,
11 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 3 @11 exception:10,
12 = phi  9,11,
15 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 12 @15 exception:14,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestInstall(Ljava/lang/String;)V > 15 @19 exception:16,
monitorenter 1,
conditional branch(eq, to iindex=-1) 2,9,
conditional branch(eq, to iindex=-1) 4,9,
23 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
25 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 23 @30 exception:24,
conditional branch(eq, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, set(Z)V > 26,5 @52 exception:27,
28 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
29 = new <Application,Lcom/android/server/timezone/RulesManagerService$InstallRunnable>@57,
invokespecial < Application, Lcom/android/server/timezone/RulesManagerService$InstallRunnable, <init>(Lcom/android/server/timezone/RulesManagerService;Landroid/os/ParcelFileDescriptor;Lcom/android/server/timezone/CheckToken;Landroid/app/timezone/ICallback;)V > 29,1,2,12,4 @59 exception:30,
invokeinterface < Application, Ljava/util/concurrent/Executor, execute(Ljava/lang/Runnable;)V > 28,29 @62 exception:31,
monitorexit 1,
return 9,","depth : 0
public int requestInstall(ParcelFileDescriptor p1, byte[] p2, ICallback p3){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p2);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestInstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$InstallRunnable v6 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);
	this.mExecutor.execute(v6);
	return 0;
}
-----
","public int requestInstall(ParcelFileDescriptor p1, byte[] p2, ICallback p3){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p2);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestInstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$InstallRunnable v7 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);
	this.mExecutor.execute(v7);
	return 0;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I","1","6 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 6,7 @5 exception:8,
conditional branch(eq, to iindex=-1) 3,9,
11 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 3 @11 exception:10,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
return 3,
12 = phi  9,11,
15 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 12 @15 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
goto (from iindex= 2 to iindex = 5),
5 = phi  2,4,
return 5,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestInstall(Ljava/lang/String;)V > 15 @19 exception:16,
4 = invokestatic < Application, Landroid/util/EventLog, writeEvent(ILjava/lang/String;)I > 2,1 @3 exception:3,
return,
monitorenter 1,
conditional branch(eq, to iindex=-1) 2,9,
conditional branch(eq, to iindex=-1) 4,9,
23 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
25 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 23 @30 exception:24,
conditional branch(eq, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, set(Z)V > 26,5 @52 exception:27,
28 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
29 = new <Application,Lcom/android/server/timezone/RulesManagerService$InstallRunnable>@57,
invokespecial < Application, Lcom/android/server/timezone/RulesManagerService$InstallRunnable, <init>(Lcom/android/server/timezone/RulesManagerService;Landroid/os/ParcelFileDescriptor;Lcom/android/server/timezone/CheckToken;Landroid/app/timezone/ICallback;)V > 29,1,2,12,4 @59 exception:30,
invokeinterface < Application, Ljava/util/concurrent/Executor, execute(Ljava/lang/Runnable;)V > 28,29 @62 exception:31,
monitorexit 1,
return 9,","depth : 0
public int requestInstall(ParcelFileDescriptor p1, byte[] p2, ICallback p3){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p2);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestInstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$InstallRunnable v6 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);
	this.mExecutor.execute(v6);
	return 0;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneRequestInstall(String p1){
	int v1 = EventLog.writeEvent(51610, p1);
	return;
}
-----
","public int requestInstall(ParcelFileDescriptor p1, byte[] p2, ICallback p3){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v3 = CheckToken.fromByteArray(p2);
	CheckToken v2 = v3;
	String v4 = phiInstruction;
	int v6 = EventLog.writeEvent(51610, v4);
	boolean v7 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$InstallRunnable v9 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);
	this.mExecutor.execute(v9);
	return 0;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I","1","6 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 6,7 @5 exception:8,
conditional branch(eq, to iindex=-1) 3,9,
11 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 3 @11 exception:10,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
return 3,
12 = phi  9,11,
15 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 12 @15 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Ljava/lang/Object, toString()Ljava/lang/String; > 1 @4 exception:3,
5 = phi  2,4,
return 5,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestInstall(Ljava/lang/String;)V > 15 @19 exception:16,
4 = invokestatic < Application, Landroid/util/EventLog, writeEvent(ILjava/lang/String;)I > 2,1 @3 exception:3,
return,
monitorenter 1,
conditional branch(eq, to iindex=-1) 2,9,
conditional branch(eq, to iindex=-1) 4,9,
23 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
25 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 23 @30 exception:24,
conditional branch(eq, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, set(Z)V > 26,5 @52 exception:27,
28 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
29 = new <Application,Lcom/android/server/timezone/RulesManagerService$InstallRunnable>@57,
invokespecial < Application, Lcom/android/server/timezone/RulesManagerService$InstallRunnable, <init>(Lcom/android/server/timezone/RulesManagerService;Landroid/os/ParcelFileDescriptor;Lcom/android/server/timezone/CheckToken;Landroid/app/timezone/ICallback;)V > 29,1,2,12,4 @59 exception:30,
invokeinterface < Application, Ljava/util/concurrent/Executor, execute(Ljava/lang/Runnable;)V > 28,29 @62 exception:31,
monitorexit 1,
return 9,","depth : 0
public int requestInstall(ParcelFileDescriptor p1, byte[] p2, ICallback p3){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p2);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestInstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$InstallRunnable v6 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);
	this.mExecutor.execute(v6);
	return 0;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	String v1 = p1.toString();
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneRequestInstall(String p1){
	int v1 = EventLog.writeEvent(51610, p1);
	return;
}
-----
","public int requestInstall(ParcelFileDescriptor p1, byte[] p2, ICallback p3){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v3 = CheckToken.fromByteArray(p2);
	CheckToken v2 = v3;
	String v5 = phiInstruction.toString();
	String v4 = phiInstruction;
	int v7 = EventLog.writeEvent(51610, v4);
	boolean v8 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$InstallRunnable v10 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);
	this.mExecutor.execute(v10);
	return 0;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestInstall(Landroid/os/ParcelFileDescriptor;[BLandroid/app/timezone/ICallback;)I","2","6 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 6,7 @5 exception:8,
conditional branch(eq, to iindex=-1) 3,9,
11 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 3 @11 exception:10,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
2 = new <Application,Ljava/io/ByteArrayInputStream>@0,
invokespecial < Application, Ljava/io/ByteArrayInputStream, <init>([B)V > 2,1 @2 exception:3,
4 = new <Application,Ljava/io/DataInputStream>@5,
invokespecial < Application, Ljava/io/DataInputStream, <init>(Ljava/io/InputStream;)V > 4,2 @7 exception:5,
7 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 4 @10 exception:6,
9 = invokevirtual < Application, Ljava/io/DataInputStream, readLong()J > 4 @14 exception:8,
11 = invokevirtual < Application, Ljava/io/DataInputStream, readLong()J > 4 @18 exception:10,
12 = new <Application,Lcom/android/server/timezone/CheckToken>@22,
13 = new <Application,Lcom/android/server/timezone/PackageVersions>@24,
invokespecial < Application, Lcom/android/server/timezone/PackageVersions, <init>(JJ)V > 13,9,11 @26 exception:14,
invokespecial < Application, Lcom/android/server/timezone/CheckToken, <init>(ILcom/android/server/timezone/PackageVersions;)V > 12,7,13 @29 exception:15,
invokevirtual < Application, Ljava/io/DataInputStream, close()V > 4 @32 exception:25,
return 12,
return 3,
12 = phi  9,11,
15 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 12 @15 exception:14,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestInstall(Ljava/lang/String;)V > 15 @19 exception:16,
monitorenter 1,
conditional branch(eq, to iindex=-1) 2,9,
conditional branch(eq, to iindex=-1) 4,9,
23 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
25 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 23 @30 exception:24,
conditional branch(eq, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, set(Z)V > 26,5 @52 exception:27,
28 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
29 = new <Application,Lcom/android/server/timezone/RulesManagerService$InstallRunnable>@57,
invokespecial < Application, Lcom/android/server/timezone/RulesManagerService$InstallRunnable, <init>(Lcom/android/server/timezone/RulesManagerService;Landroid/os/ParcelFileDescriptor;Lcom/android/server/timezone/CheckToken;Landroid/app/timezone/ICallback;)V > 29,1,2,12,4 @59 exception:30,
invokeinterface < Application, Ljava/util/concurrent/Executor, execute(Ljava/lang/Runnable;)V > 28,29 @62 exception:31,
monitorexit 1,
return 9,","depth : 0
public int requestInstall(ParcelFileDescriptor p1, byte[] p2, ICallback p3){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p2);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestInstall(v3);
	boolean v5 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$InstallRunnable v6 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);
	this.mExecutor.execute(v6);
	return 0;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 2
public CheckToken fromByteArray(byte[] p1){
	ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
	DataInputStream v1 = new DataInputStream(v0);
	int v3 = v1.readInt();
	long v4 = v1.readLong();
	long v5 = v1.readLong();
	CheckToken v5 = new CheckToken(v3,v5);
	PackageVersions v5 = new PackageVersions(v4,v5);
	v1.close();
	return v5;
}
-----
","public int requestInstall(ParcelFileDescriptor p1, byte[] p2, ICallback p3){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	ByteArrayInputStream v4 = new ByteArrayInputStream(p1);
	DataInputStream v6 = new DataInputStream(v4);
	int v8 = v6.readInt();
	long v9 = v6.readLong();
	long v10 = v6.readLong();
	CheckToken v11 = new CheckToken(v8,v12);
	PackageVersions v12 = new PackageVersions(v9,v10);
	v6.close();
	CheckToken v3 = v11;
	CheckToken v2 = v3;
	String v16 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestInstall(v16);
	boolean v18 = this.mOperationInProgress.get();
	this.mOperationInProgress.set(1);
	RulesManagerService$InstallRunnable v20 = new RulesManagerService$InstallRunnable(p0,p1,phiInstruction,p3);
	this.mExecutor.execute(v20);
	return 0;
}
","NONE"

"Lcom/android/server/timezone/RulesManagerService","requestNothing([BZ)V","0","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
9 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 2 @9 exception:8,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestNothing(Ljava/lang/String;)V > 13 @19 exception:14,
15 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPackageTracker, <Application,Lcom/android/server/timezone/PackageTracker> > 1,
invokevirtual < Application, Lcom/android/server/timezone/PackageTracker, recordCheckResult(Lcom/android/server/timezone/CheckToken;Z)V > 15,10,3 @24 exception:16,
18 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @27 exception:17,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneNothingComplete(Ljava/lang/String;)V > 18 @31 exception:19,
return,","depth : 0
public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v3);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v6 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v6);
	return;
}
-----
","public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v3);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v6 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v6);
	return;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestNothing([BZ)V","1","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
9 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 2 @9 exception:8,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
return 3,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
conditional branch(ne, to iindex=-1) 1,2,
goto (from iindex= 2 to iindex = 5),
5 = phi  2,4,
return 5,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestNothing(Ljava/lang/String;)V > 13 @19 exception:14,
4 = invokestatic < Application, Landroid/util/EventLog, writeEvent(ILjava/lang/String;)I > 2,1 @3 exception:3,
return,
15 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPackageTracker, <Application,Lcom/android/server/timezone/PackageTracker> > 1,
invokevirtual < Application, Lcom/android/server/timezone/PackageTracker, recordCheckResult(Lcom/android/server/timezone/CheckToken;Z)V > 15,10,3 @24 exception:16,
monitorenter 1,
5 = new <Application,Ljava/lang/StringBuilder>@3,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @5 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 5,2 @13 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,12 @18 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 5,3 @21 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @24 exception:17,
20 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,18 @28 exception:19,
21 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mTrackingEnabled, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 21,22,
conditional branch(ne, to iindex=-1) 2,22,
23 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mPackageStatusStorage, <Application,Lcom/android/server/timezone/PackageStatusStorage> > 1,
25 = invokevirtual < Application, Lcom/android/server/timezone/PackageStatusStorage, markChecked(Lcom/android/server/timezone/CheckToken;Z)Z > 23,2,3 @107 exception:24,
conditional branch(eq, to iindex=-1) 25,22,
26 = new <Application,Ljava/lang/StringBuilder>@143,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @145 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @150 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 26,2 @153 exception:31,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,33 @158 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 26,3 @161 exception:36,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,38 @166 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @169 exception:41,
44 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,42 @173 exception:43,
45 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mIntentHelper, <Application,Lcom/android/server/timezone/PackageTrackerIntentHelper> > 1,
46 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mDelayBeforeReliabilityCheckMillis, <Primordial,I> > 1,
47 = conversion(J) 46,
invokeinterface < Application, Lcom/android/server/timezone/PackageTrackerIntentHelper, scheduleReliabilityTrigger(J)V > 45,47 @181 exception:48,
49 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > 1,
51 = binaryop(add) 49 , 50,
putfield 1.< Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > = 51,
monitorexit 1,
return,
18 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @27 exception:17,
conditional branch(ne, to iindex=-1) 1,2,
goto (from iindex= 2 to iindex = 5),
5 = phi  2,4,
return 5,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneNothingComplete(Ljava/lang/String;)V > 18 @31 exception:19,
4 = invokestatic < Application, Landroid/util/EventLog, writeEvent(ILjava/lang/String;)I > 2,1 @3 exception:3,
return,
return,","depth : 0
public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v3);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v6 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v6);
	return;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneRequestNothing(String p1){
	int v1 = EventLog.writeEvent(51630, p1);
	return;
}
-----
depth : 1
public void recordCheckResult(CheckToken p1, boolean p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""recordOperationResult: checkToken="");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("" success="");
	StringBuilder v5 = v0.append(p2);
	String v6 = v0.toString();
	int v7 = Slog.i(""timezone.PackageTracker"", v6);
	boolean v8 = this.mPackageStatusStorage.markChecked(p1, p2);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""recordCheckResult: could not update token="");
	StringBuilder v11 = v8.append(p1);
	StringBuilder v12 = v8.append("" with success="");
	StringBuilder v13 = v8.append(p2);
	StringBuilder v14 = v8.append("". Optimistic lock failure"");
	String v15 = v8.toString();
	int v16 = Slog.i(""timezone.PackageTracker"", v15);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	return;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneNothingComplete(String p1){
	int v1 = EventLog.writeEvent(51631, p1);
	return;
}
-----
","public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v3 = CheckToken.fromByteArray(p1);
	CheckToken v2 = v3;
	String v4 = phiInstruction;
	int v6 = EventLog.writeEvent(51630, v4);
	boolean v16 = this.mPackageStatusStorage.markChecked(phiInstruction, p2);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	String v27 = phiInstruction;
	int v29 = EventLog.writeEvent(51631, v27);
	return;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestNothing([BZ)V","1","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
9 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 2 @9 exception:8,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
return 3,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Ljava/lang/Object, toString()Ljava/lang/String; > 1 @4 exception:3,
5 = phi  2,4,
return 5,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestNothing(Ljava/lang/String;)V > 13 @19 exception:14,
4 = invokestatic < Application, Landroid/util/EventLog, writeEvent(ILjava/lang/String;)I > 2,1 @3 exception:3,
return,
15 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPackageTracker, <Application,Lcom/android/server/timezone/PackageTracker> > 1,
invokevirtual < Application, Lcom/android/server/timezone/PackageTracker, recordCheckResult(Lcom/android/server/timezone/CheckToken;Z)V > 15,10,3 @24 exception:16,
monitorenter 1,
5 = new <Application,Ljava/lang/StringBuilder>@3,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @5 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 5,2 @13 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,12 @18 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 5,3 @21 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @24 exception:17,
20 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,18 @28 exception:19,
21 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mTrackingEnabled, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 21,22,
conditional branch(ne, to iindex=-1) 2,22,
23 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mPackageStatusStorage, <Application,Lcom/android/server/timezone/PackageStatusStorage> > 1,
25 = invokevirtual < Application, Lcom/android/server/timezone/PackageStatusStorage, markChecked(Lcom/android/server/timezone/CheckToken;Z)Z > 23,2,3 @107 exception:24,
conditional branch(eq, to iindex=-1) 25,22,
26 = new <Application,Ljava/lang/StringBuilder>@143,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @145 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @150 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 26,2 @153 exception:31,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,33 @158 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 26,3 @161 exception:36,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,38 @166 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @169 exception:41,
44 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,42 @173 exception:43,
45 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mIntentHelper, <Application,Lcom/android/server/timezone/PackageTrackerIntentHelper> > 1,
46 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mDelayBeforeReliabilityCheckMillis, <Primordial,I> > 1,
47 = conversion(J) 46,
invokeinterface < Application, Lcom/android/server/timezone/PackageTrackerIntentHelper, scheduleReliabilityTrigger(J)V > 45,47 @181 exception:48,
49 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > 1,
51 = binaryop(add) 49 , 50,
putfield 1.< Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > = 51,
monitorexit 1,
return,
18 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @27 exception:17,
conditional branch(ne, to iindex=-1) 1,2,
goto (from iindex= 2 to iindex = 5),
5 = phi  2,4,
return 5,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneNothingComplete(Ljava/lang/String;)V > 18 @31 exception:19,
4 = invokestatic < Application, Landroid/util/EventLog, writeEvent(ILjava/lang/String;)I > 2,1 @3 exception:3,
return,
return,","depth : 0
public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v3);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v6 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v6);
	return;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	String v1 = p1.toString();
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneRequestNothing(String p1){
	int v1 = EventLog.writeEvent(51630, p1);
	return;
}
-----
depth : 1
public void recordCheckResult(CheckToken p1, boolean p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""recordOperationResult: checkToken="");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("" success="");
	StringBuilder v5 = v0.append(p2);
	String v6 = v0.toString();
	int v7 = Slog.i(""timezone.PackageTracker"", v6);
	boolean v8 = this.mPackageStatusStorage.markChecked(p1, p2);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""recordCheckResult: could not update token="");
	StringBuilder v11 = v8.append(p1);
	StringBuilder v12 = v8.append("" with success="");
	StringBuilder v13 = v8.append(p2);
	StringBuilder v14 = v8.append("". Optimistic lock failure"");
	String v15 = v8.toString();
	int v16 = Slog.i(""timezone.PackageTracker"", v15);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	return;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneNothingComplete(String p1){
	int v1 = EventLog.writeEvent(51631, p1);
	return;
}
-----
","public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v3 = CheckToken.fromByteArray(p1);
	CheckToken v2 = v3;
	String v5 = phiInstruction.toString();
	String v4 = phiInstruction;
	int v7 = EventLog.writeEvent(51630, v4);
	boolean v17 = this.mPackageStatusStorage.markChecked(phiInstruction, p2);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	String v28 = phiInstruction;
	int v30 = EventLog.writeEvent(51631, v28);
	return;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestNothing([BZ)V","2","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
9 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 2 @9 exception:8,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
2 = new <Application,Ljava/io/ByteArrayInputStream>@0,
invokespecial < Application, Ljava/io/ByteArrayInputStream, <init>([B)V > 2,1 @2 exception:3,
4 = new <Application,Ljava/io/DataInputStream>@5,
invokespecial < Application, Ljava/io/DataInputStream, <init>(Ljava/io/InputStream;)V > 4,2 @7 exception:5,
7 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 4 @10 exception:6,
9 = invokevirtual < Application, Ljava/io/DataInputStream, readLong()J > 4 @14 exception:8,
11 = invokevirtual < Application, Ljava/io/DataInputStream, readLong()J > 4 @18 exception:10,
12 = new <Application,Lcom/android/server/timezone/CheckToken>@22,
13 = new <Application,Lcom/android/server/timezone/PackageVersions>@24,
invokespecial < Application, Lcom/android/server/timezone/PackageVersions, <init>(JJ)V > 13,9,11 @26 exception:14,
invokespecial < Application, Lcom/android/server/timezone/CheckToken, <init>(ILcom/android/server/timezone/PackageVersions;)V > 12,7,13 @29 exception:15,
invokevirtual < Application, Ljava/io/DataInputStream, close()V > 4 @32 exception:25,
return 12,
return 3,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestNothing(Ljava/lang/String;)V > 13 @19 exception:14,
15 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPackageTracker, <Application,Lcom/android/server/timezone/PackageTracker> > 1,
invokevirtual < Application, Lcom/android/server/timezone/PackageTracker, recordCheckResult(Lcom/android/server/timezone/CheckToken;Z)V > 15,10,3 @24 exception:16,
monitorenter 1,
5 = new <Application,Ljava/lang/StringBuilder>@3,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @5 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 5,2 @13 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,12 @18 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 5,3 @21 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @24 exception:17,
20 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,18 @28 exception:19,
21 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mTrackingEnabled, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 21,22,
conditional branch(ne, to iindex=-1) 2,22,
23 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mPackageStatusStorage, <Application,Lcom/android/server/timezone/PackageStatusStorage> > 1,
25 = invokevirtual < Application, Lcom/android/server/timezone/PackageStatusStorage, markChecked(Lcom/android/server/timezone/CheckToken;Z)Z > 23,2,3 @107 exception:24,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/timezone/CheckToken, mOptimisticLockId, <Primordial,I> > 2,
6 = binaryop(add) 4 , 5,
conditional branch(eq, to iindex=-1) 3,7,
goto (from iindex= 5 to iindex = 2),
10 = phi  9,8,
12 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 10 @10 exception:11,
13 = getfield < Application, Lcom/android/server/timezone/CheckToken, mPackageVersions, <Application,Lcom/android/server/timezone/PackageVersions> > 2,
15 = invokevirtual < Application, Lcom/android/server/timezone/PackageStatusStorage, writePackageStatusWithOptimisticLockCheck(IILjava/lang/Integer;Lcom/android/server/timezone/PackageVersions;)Z > 1,4,6,12,13 @16 exception:14,
monitorexit 1,
return 15,
conditional branch(eq, to iindex=-1) 25,22,
26 = new <Application,Ljava/lang/StringBuilder>@143,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @145 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @150 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 26,2 @153 exception:31,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,33 @158 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 26,3 @161 exception:36,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,38 @166 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @169 exception:41,
44 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,42 @173 exception:43,
45 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mIntentHelper, <Application,Lcom/android/server/timezone/PackageTrackerIntentHelper> > 1,
46 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mDelayBeforeReliabilityCheckMillis, <Primordial,I> > 1,
47 = conversion(J) 46,
invokeinterface < Application, Lcom/android/server/timezone/PackageTrackerIntentHelper, scheduleReliabilityTrigger(J)V > 45,47 @181 exception:48,
49 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > 1,
51 = binaryop(add) 49 , 50,
putfield 1.< Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > = 51,
monitorexit 1,
return,
18 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @27 exception:17,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneNothingComplete(Ljava/lang/String;)V > 18 @31 exception:19,
return,","depth : 0
public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v3);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v6 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v6);
	return;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 2
public CheckToken fromByteArray(byte[] p1){
	ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
	DataInputStream v1 = new DataInputStream(v0);
	int v3 = v1.readInt();
	long v4 = v1.readLong();
	long v5 = v1.readLong();
	CheckToken v5 = new CheckToken(v3,v5);
	PackageVersions v5 = new PackageVersions(v4,v5);
	v1.close();
	return v5;
}
-----
depth : 1
public void recordCheckResult(CheckToken p1, boolean p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""recordOperationResult: checkToken="");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("" success="");
	StringBuilder v5 = v0.append(p2);
	String v6 = v0.toString();
	int v7 = Slog.i(""timezone.PackageTracker"", v6);
	boolean v8 = this.mPackageStatusStorage.markChecked(p1, p2);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""recordCheckResult: could not update token="");
	StringBuilder v11 = v8.append(p1);
	StringBuilder v12 = v8.append("" with success="");
	StringBuilder v13 = v8.append(p2);
	StringBuilder v14 = v8.append("". Optimistic lock failure"");
	String v15 = v8.toString();
	int v16 = Slog.i(""timezone.PackageTracker"", v15);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	return;
}
-----
depth : 2
public boolean markChecked(CheckToken p1, boolean p2){
	Integer v1 = Integer.valueOf(phiInstruction);
	boolean v2 = p0.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v1, CheckToken.mPackageVersions);
	return v2;
}
-----
","public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	ByteArrayInputStream v4 = new ByteArrayInputStream(p1);
	DataInputStream v6 = new DataInputStream(v4);
	int v8 = v6.readInt();
	long v9 = v6.readLong();
	long v10 = v6.readLong();
	CheckToken v11 = new CheckToken(v8,v12);
	PackageVersions v12 = new PackageVersions(v9,v10);
	v6.close();
	CheckToken v3 = v11;
	CheckToken v2 = v3;
	String v16 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v16);
	Integer v28 = Integer.valueOf(phiInstruction);
	boolean v29 = PackageStatusStorage.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v28, CheckToken.mPackageVersions);
	boolean v27 = v29;
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	String v40 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v40);
	return;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestNothing([BZ)V","2","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
9 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, createCheckTokenOrThrow([B)Lcom/android/server/timezone/CheckToken; > 2 @9 exception:8,
3 = invokestatic < Application, Lcom/android/server/timezone/CheckToken, fromByteArray([B)Lcom/android/server/timezone/CheckToken; > 1 @0 exception:2,
2 = new <Application,Ljava/io/ByteArrayInputStream>@0,
invokespecial < Application, Ljava/io/ByteArrayInputStream, <init>([B)V > 2,1 @2 exception:3,
4 = new <Application,Ljava/io/DataInputStream>@5,
invokespecial < Application, Ljava/io/DataInputStream, <init>(Ljava/io/InputStream;)V > 4,2 @7 exception:5,
7 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 4 @10 exception:6,
9 = invokevirtual < Application, Ljava/io/DataInputStream, readLong()J > 4 @14 exception:8,
11 = invokevirtual < Application, Ljava/io/DataInputStream, readLong()J > 4 @18 exception:10,
12 = new <Application,Lcom/android/server/timezone/CheckToken>@22,
13 = new <Application,Lcom/android/server/timezone/PackageVersions>@24,
invokespecial < Application, Lcom/android/server/timezone/PackageVersions, <init>(JJ)V > 13,9,11 @26 exception:14,
invokespecial < Application, Lcom/android/server/timezone/CheckToken, <init>(ILcom/android/server/timezone/PackageVersions;)V > 12,7,13 @29 exception:15,
invokevirtual < Application, Ljava/io/DataInputStream, close()V > 4 @32 exception:25,
return 12,
return 3,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestNothing(Ljava/lang/String;)V > 13 @19 exception:14,
15 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPackageTracker, <Application,Lcom/android/server/timezone/PackageTracker> > 1,
invokevirtual < Application, Lcom/android/server/timezone/PackageTracker, recordCheckResult(Lcom/android/server/timezone/CheckToken;Z)V > 15,10,3 @24 exception:16,
monitorenter 1,
5 = new <Application,Ljava/lang/StringBuilder>@3,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @5 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 5,2 @13 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,12 @18 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 5,3 @21 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @24 exception:17,
20 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,18 @28 exception:19,
21 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mTrackingEnabled, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 21,22,
conditional branch(ne, to iindex=-1) 2,22,
23 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mPackageStatusStorage, <Application,Lcom/android/server/timezone/PackageStatusStorage> > 1,
25 = invokevirtual < Application, Lcom/android/server/timezone/PackageStatusStorage, markChecked(Lcom/android/server/timezone/CheckToken;Z)Z > 23,2,3 @107 exception:24,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/timezone/CheckToken, mOptimisticLockId, <Primordial,I> > 2,
6 = binaryop(add) 4 , 5,
conditional branch(eq, to iindex=-1) 3,7,
10 = phi  9,8,
12 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 10 @10 exception:11,
13 = getfield < Application, Lcom/android/server/timezone/CheckToken, mPackageVersions, <Application,Lcom/android/server/timezone/PackageVersions> > 2,
15 = invokevirtual < Application, Lcom/android/server/timezone/PackageStatusStorage, writePackageStatusWithOptimisticLockCheck(IILjava/lang/Integer;Lcom/android/server/timezone/PackageVersions;)Z > 1,4,6,12,13 @16 exception:14,
monitorexit 1,
return 15,
conditional branch(eq, to iindex=-1) 25,22,
26 = new <Application,Ljava/lang/StringBuilder>@143,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @145 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @150 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 26,2 @153 exception:31,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,33 @158 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 26,3 @161 exception:36,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,38 @166 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @169 exception:41,
44 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,42 @173 exception:43,
45 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mIntentHelper, <Application,Lcom/android/server/timezone/PackageTrackerIntentHelper> > 1,
46 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mDelayBeforeReliabilityCheckMillis, <Primordial,I> > 1,
47 = conversion(J) 46,
invokeinterface < Application, Lcom/android/server/timezone/PackageTrackerIntentHelper, scheduleReliabilityTrigger(J)V > 45,47 @181 exception:48,
49 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > 1,
51 = binaryop(add) 49 , 50,
putfield 1.< Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > = 51,
monitorexit 1,
return,
18 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @27 exception:17,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneNothingComplete(Ljava/lang/String;)V > 18 @31 exception:19,
return,","depth : 0
public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	CheckToken v2 = RulesManagerService.createCheckTokenOrThrow(p1);
	String v3 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v3);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v6 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v6);
	return;
}
-----
depth : 1
public CheckToken createCheckTokenOrThrow(byte[] p1){
	CheckToken v1 = CheckToken.fromByteArray(p1);
	return v1;
}
-----
depth : 2
public CheckToken fromByteArray(byte[] p1){
	ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
	DataInputStream v1 = new DataInputStream(v0);
	int v3 = v1.readInt();
	long v4 = v1.readLong();
	long v5 = v1.readLong();
	CheckToken v5 = new CheckToken(v3,v5);
	PackageVersions v5 = new PackageVersions(v4,v5);
	v1.close();
	return v5;
}
-----
depth : 1
public void recordCheckResult(CheckToken p1, boolean p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""recordOperationResult: checkToken="");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("" success="");
	StringBuilder v5 = v0.append(p2);
	String v6 = v0.toString();
	int v7 = Slog.i(""timezone.PackageTracker"", v6);
	boolean v8 = this.mPackageStatusStorage.markChecked(p1, p2);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""recordCheckResult: could not update token="");
	StringBuilder v11 = v8.append(p1);
	StringBuilder v12 = v8.append("" with success="");
	StringBuilder v13 = v8.append(p2);
	StringBuilder v14 = v8.append("". Optimistic lock failure"");
	String v15 = v8.toString();
	int v16 = Slog.i(""timezone.PackageTracker"", v15);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	return;
}
-----
depth : 2
public boolean markChecked(CheckToken p1, boolean p2){
	Integer v1 = Integer.valueOf(phiInstruction);
	boolean v2 = p0.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v1, CheckToken.mPackageVersions);
	return v2;
}
-----
","public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	ByteArrayInputStream v4 = new ByteArrayInputStream(p1);
	DataInputStream v6 = new DataInputStream(v4);
	int v8 = v6.readInt();
	long v9 = v6.readLong();
	long v10 = v6.readLong();
	CheckToken v11 = new CheckToken(v8,v12);
	PackageVersions v12 = new PackageVersions(v9,v10);
	v6.close();
	CheckToken v3 = v11;
	CheckToken v2 = v3;
	String v16 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v16);
	Integer v28 = Integer.valueOf(phiInstruction);
	boolean v29 = PackageStatusStorage.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v28, CheckToken.mPackageVersions);
	boolean v27 = v29;
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	String v40 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v40);
	return;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","requestNothing([BZ)V","2","4 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 4,5 @4 exception:6,
conditional branch(eq, to iindex=-1) 2,7,
10 = phi  9,7,
13 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @15 exception:12,
conditional branch(ne, to iindex=-1) 1,2,
goto (from iindex= 2 to iindex = 5),
5 = phi  2,4,
return 5,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneRequestNothing(Ljava/lang/String;)V > 13 @19 exception:14,
4 = invokestatic < Application, Landroid/util/EventLog, writeEvent(ILjava/lang/String;)I > 2,1 @3 exception:3,
return,
15 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPackageTracker, <Application,Lcom/android/server/timezone/PackageTracker> > 1,
invokevirtual < Application, Lcom/android/server/timezone/PackageTracker, recordCheckResult(Lcom/android/server/timezone/CheckToken;Z)V > 15,10,3 @24 exception:16,
monitorenter 1,
5 = new <Application,Ljava/lang/StringBuilder>@3,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @5 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 5,2 @13 exception:10,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,12 @18 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 5,3 @21 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @24 exception:17,
20 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,18 @28 exception:19,
21 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mTrackingEnabled, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 21,22,
conditional branch(ne, to iindex=-1) 2,22,
23 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mPackageStatusStorage, <Application,Lcom/android/server/timezone/PackageStatusStorage> > 1,
25 = invokevirtual < Application, Lcom/android/server/timezone/PackageStatusStorage, markChecked(Lcom/android/server/timezone/CheckToken;Z)Z > 23,2,3 @107 exception:24,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/timezone/CheckToken, mOptimisticLockId, <Primordial,I> > 2,
6 = binaryop(add) 4 , 5,
conditional branch(eq, to iindex=-1) 3,7,
goto (from iindex= 5 to iindex = 2),
10 = phi  9,8,
12 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 10 @10 exception:11,
13 = getfield < Application, Lcom/android/server/timezone/CheckToken, mPackageVersions, <Application,Lcom/android/server/timezone/PackageVersions> > 2,
15 = invokevirtual < Application, Lcom/android/server/timezone/PackageStatusStorage, writePackageStatusWithOptimisticLockCheck(IILjava/lang/Integer;Lcom/android/server/timezone/PackageVersions;)Z > 1,4,6,12,13 @16 exception:14,
monitorexit 1,
return 15,
conditional branch(eq, to iindex=-1) 25,22,
26 = new <Application,Ljava/lang/StringBuilder>@143,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @145 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @150 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 26,2 @153 exception:31,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,33 @158 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 26,3 @161 exception:36,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,38 @166 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @169 exception:41,
44 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 4,42 @173 exception:43,
45 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mIntentHelper, <Application,Lcom/android/server/timezone/PackageTrackerIntentHelper> > 1,
46 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mDelayBeforeReliabilityCheckMillis, <Primordial,I> > 1,
47 = conversion(J) 46,
invokeinterface < Application, Lcom/android/server/timezone/PackageTrackerIntentHelper, scheduleReliabilityTrigger(J)V > 45,47 @181 exception:48,
49 = getfield < Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > 1,
51 = binaryop(add) 49 , 50,
putfield 1.< Application, Lcom/android/server/timezone/PackageTracker, mCheckFailureCount, <Primordial,I> > = 51,
monitorexit 1,
return,
18 = invokestatic < Application, Lcom/android/server/timezone/RulesManagerService, toStringOrNull(Ljava/lang/Object;)Ljava/lang/String; > 10 @27 exception:17,
invokestatic < Application, Lcom/android/server/EventLogTags, writeTimezoneNothingComplete(Ljava/lang/String;)V > 18 @31 exception:19,
return,","depth : 0
public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	String v2 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneRequestNothing(v2);
	this.mPackageTracker.recordCheckResult(phiInstruction, p2);
	String v5 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v5);
	return;
}
-----
depth : 1
public String toStringOrNull(Object p1){
	return phiInstruction;
}
-----
depth : 1
public void writeTimezoneRequestNothing(String p1){
	int v1 = EventLog.writeEvent(51630, p1);
	return;
}
-----
depth : 1
public void recordCheckResult(CheckToken p1, boolean p2){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""recordOperationResult: checkToken="");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("" success="");
	StringBuilder v5 = v0.append(p2);
	String v6 = v0.toString();
	int v7 = Slog.i(""timezone.PackageTracker"", v6);
	boolean v8 = this.mPackageStatusStorage.markChecked(p1, p2);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""recordCheckResult: could not update token="");
	StringBuilder v11 = v8.append(p1);
	StringBuilder v12 = v8.append("" with success="");
	StringBuilder v13 = v8.append(p2);
	StringBuilder v14 = v8.append("". Optimistic lock failure"");
	String v15 = v8.toString();
	int v16 = Slog.i(""timezone.PackageTracker"", v15);
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	return;
}
-----
depth : 2
public boolean markChecked(CheckToken p1, boolean p2){
	Integer v1 = Integer.valueOf(phiInstruction);
	boolean v2 = p0.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v1, CheckToken.mPackageVersions);
	return v2;
}
-----
","public void requestNothing(byte[] p1, boolean p2){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.UPDATE_TIME_ZONE_RULES"");
	String v2 = phiInstruction;
	int v4 = EventLog.writeEvent(51630, v2);
	Integer v15 = Integer.valueOf(phiInstruction);
	boolean v16 = PackageStatusStorage.writePackageStatusWithOptimisticLockCheck(CheckToken.mOptimisticLockId, (CheckToken.mOptimisticLockId + 1), v15, CheckToken.mPackageVersions);
	boolean v14 = v16;
	this.mIntentHelper.scheduleReliabilityTrigger(this.mDelayBeforeReliabilityCheckMillis);
	this.mCheckFailureCount = (this.mCheckFailureCount + 1);
	String v27 = RulesManagerService.toStringOrNull(phiInstruction);
	EventLogTags.writeTimezoneNothingComplete(v27);
	return;
}
","NONE"

"Lcom/android/server/timezone/RulesManagerService","getRulesState()Landroid/app/timezone/RulesState;","0","2 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 2,3 @4 exception:4,
6 = invokevirtual < Application, Lcom/android/server/timezone/RulesManagerService, getRulesStateInternal()Landroid/app/timezone/RulesState; > 1 @7 exception:5,
return 6,","depth : 0
public RulesState getRulesState(){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.QUERY_TIME_ZONE_RULES"");
	RulesState v2 = p0.getRulesStateInternal();
	return v2;
}
-----
","public RulesState getRulesState(){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.QUERY_TIME_ZONE_RULES"");
	RulesState v2 = p0.getRulesStateInternal();
	return v2;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","getRulesState()Landroid/app/timezone/RulesState;","1","2 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 2,3 @4 exception:4,
6 = invokevirtual < Application, Lcom/android/server/timezone/RulesManagerService, getRulesStateInternal()Landroid/app/timezone/RulesState; > 1 @7 exception:5,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mInstaller, <Application,Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller> > 1,
5 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, readBaseVersion()Lcom/android/i18n/timezone/TzDataSetVersion; > 3 @6 exception:4,
13 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mInstaller, <Application,Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller> > 1,
18 = getCaughtException ,
26 = phi  12,2,
27 = phi  25,18,
32 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 7,30,27 @50 exception:31,
39 = phi  33,26,
40 = phi  34,2,
43 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
45 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 43 @59 exception:44,
conditional branch(ne, to iindex=-1) 45,2,
46 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mInstaller, <Application,Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller> > 1,
48 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, getStagedDistroOperation()Lcom/android/timezone/distro/StagedDistroOperation; > 46 @67 exception:47,
conditional branch(ne, to iindex=-1) 48,2,
49 = getfield < Application, Lcom/android/timezone/distro/StagedDistroOperation, isUninstall, <Primordial,Z> > 48,
54 = getCaughtException ,
66 = phi  65,54,
69 = phi  55,2,
74 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 7,72,66 @104 exception:73,
78 = phi  2,69,
92 = phi  83,78,
93 = phi  82,2,
96 = new <Application,Landroid/app/timezone/RulesState>@109,
98 = invokevirtual < Application, Lcom/android/i18n/timezone/TzDataSetVersion, getRulesVersion()Ljava/lang/String; > 5 @111 exception:97,
99 = getstatic < Application, Lcom/android/server/timezone/RulesManagerService, DISTRO_FORMAT_VERSION_SUPPORTED, <Application,Landroid/app/timezone/DistroFormatVersion> >,
invokespecial < Application, Landroid/app/timezone/RulesState, <init>(Ljava/lang/String;Landroid/app/timezone/DistroFormatVersion;ZILandroid/app/timezone/DistroRulesVersion;ILandroid/app/timezone/DistroRulesVersion;)V > 96,98,99,45,92,93,39,40 @118 exception:100,
monitorexit 1,
return 96,
return 6,","depth : 0
public RulesState getRulesState(){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.QUERY_TIME_ZONE_RULES"");
	RulesState v2 = p0.getRulesStateInternal();
	return v2;
}
-----
depth : 1
public RulesState getRulesStateInternal(){
	TzDataSetVersion v1 = this.mInstaller.readBaseVersion();
	int v2 = Slog.w(""timezone.RulesManagerService"", ""Failed to read installed distro."", phiInstruction);
	boolean v3 = this.mOperationInProgress.get();
	StagedDistroOperation v4 = this.mInstaller.getStagedDistroOperation();
	int v5 = Slog.w(""timezone.RulesManagerService"", ""Failed to read staged distro."", phiInstruction);
	RulesState v5 = new RulesState(v6,this.DISTRO_FORMAT_VERSION_SUPPORTED,v3,phiInstruction,phiInstruction,phiInstruction,phiInstruction);
	String v6 = v1.getRulesVersion();
	return v5;
}
-----
","public RulesState getRulesState(){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.QUERY_TIME_ZONE_RULES"");
	TzDataSetVersion v3 = this.mInstaller.readBaseVersion();
	boolean v5 = this.mOperationInProgress.get();
	StagedDistroOperation v6 = this.mInstaller.getStagedDistroOperation();
	RulesState v8 = new RulesState(v9,this.DISTRO_FORMAT_VERSION_SUPPORTED,v5,phiInstruction,phiInstruction,phiInstruction,phiInstruction);
	String v9 = v3.getRulesVersion();
	RulesState v2 = v8;
	return v2;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","getRulesState()Landroid/app/timezone/RulesState;","2","2 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 2,3 @4 exception:4,
6 = invokevirtual < Application, Lcom/android/server/timezone/RulesManagerService, getRulesStateInternal()Landroid/app/timezone/RulesState; > 1 @7 exception:5,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mInstaller, <Application,Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller> > 1,
5 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, readBaseVersion()Lcom/android/i18n/timezone/TzDataSetVersion; > 3 @6 exception:4,
2 = getfield < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, baseVersionFile, <Application,Ljava/io/File> > 1,
4 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, readBaseVersion(Ljava/io/File;)Lcom/android/i18n/timezone/TzDataSetVersion; > 1,2 @2 exception:3,
return 4,
13 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mInstaller, <Application,Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller> > 1,
18 = getCaughtException ,
26 = phi  12,2,
27 = phi  25,18,
32 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 7,30,27 @50 exception:31,
39 = phi  33,26,
40 = phi  34,2,
43 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
45 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 43 @59 exception:44,
conditional branch(ne, to iindex=-1) 45,2,
46 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mInstaller, <Application,Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller> > 1,
48 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, getStagedDistroOperation()Lcom/android/timezone/distro/StagedDistroOperation; > 46 @67 exception:47,
2 = getfield < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, stagedTzDataDir, <Application,Ljava/io/File> > 1,
4 = invokevirtual < Application, Ljava/io/File, exists()Z > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = new <Application,Ljava/io/File>@10,
7 = getfield < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, stagedTzDataDir, <Application,Ljava/io/File> > 1,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 6,7,8 @16 exception:9,
11 = invokevirtual < Application, Ljava/io/File, exists()Z > 6 @19 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
12 = getfield < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, stagedTzDataDir, <Application,Ljava/io/File> > 1,
14 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, readDistroVersion(Ljava/io/File;)Lcom/android/timezone/distro/DistroVersion; > 1,12 @32 exception:13,
16 = invokestatic < Application, Lcom/android/timezone/distro/StagedDistroOperation, install(Lcom/android/timezone/distro/DistroVersion;)Lcom/android/timezone/distro/StagedDistroOperation; > 14 @36 exception:15,
return 16,
conditional branch(ne, to iindex=-1) 48,2,
49 = getfield < Application, Lcom/android/timezone/distro/StagedDistroOperation, isUninstall, <Primordial,Z> > 48,
54 = getCaughtException ,
66 = phi  65,54,
69 = phi  55,2,
74 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 7,72,66 @104 exception:73,
78 = phi  2,69,
92 = phi  83,78,
93 = phi  82,2,
96 = new <Application,Landroid/app/timezone/RulesState>@109,
98 = invokevirtual < Application, Lcom/android/i18n/timezone/TzDataSetVersion, getRulesVersion()Ljava/lang/String; > 5 @111 exception:97,
99 = getstatic < Application, Lcom/android/server/timezone/RulesManagerService, DISTRO_FORMAT_VERSION_SUPPORTED, <Application,Landroid/app/timezone/DistroFormatVersion> >,
invokespecial < Application, Landroid/app/timezone/RulesState, <init>(Ljava/lang/String;Landroid/app/timezone/DistroFormatVersion;ZILandroid/app/timezone/DistroRulesVersion;ILandroid/app/timezone/DistroRulesVersion;)V > 96,98,99,45,92,93,39,40 @118 exception:100,
monitorexit 1,
return 96,
return 6,","depth : 0
public RulesState getRulesState(){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.QUERY_TIME_ZONE_RULES"");
	RulesState v2 = p0.getRulesStateInternal();
	return v2;
}
-----
depth : 1
public RulesState getRulesStateInternal(){
	TzDataSetVersion v1 = this.mInstaller.readBaseVersion();
	int v2 = Slog.w(""timezone.RulesManagerService"", ""Failed to read installed distro."", phiInstruction);
	boolean v3 = this.mOperationInProgress.get();
	StagedDistroOperation v4 = this.mInstaller.getStagedDistroOperation();
	int v5 = Slog.w(""timezone.RulesManagerService"", ""Failed to read staged distro."", phiInstruction);
	RulesState v5 = new RulesState(v6,this.DISTRO_FORMAT_VERSION_SUPPORTED,v3,phiInstruction,phiInstruction,phiInstruction,phiInstruction);
	String v6 = v1.getRulesVersion();
	return v5;
}
-----
depth : 2
public TzDataSetVersion readBaseVersion(){
	TzDataSetVersion v1 = p0.readBaseVersion(this.baseVersionFile);
	return v1;
}
-----
depth : 2
public StagedDistroOperation getStagedDistroOperation(){
	boolean v1 = this.stagedTzDataDir.exists();
	File v1 = new File(this.stagedTzDataDir,""STAGED_UNINSTALL_TOMBSTONE"");
	boolean v3 = v1.exists();
	DistroVersion v4 = p0.readDistroVersion(this.stagedTzDataDir);
	StagedDistroOperation v5 = StagedDistroOperation.install(v4);
	return v5;
}
-----
","public RulesState getRulesState(){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.QUERY_TIME_ZONE_RULES"");
	TzDataSetVersion v4 = TimeZoneDistroInstaller.readBaseVersion(this.baseVersionFile);
	TzDataSetVersion v3 = v4;
	boolean v6 = this.mOperationInProgress.get();
	boolean v8 = this.stagedTzDataDir.exists();
	File v9 = new File(this.stagedTzDataDir,""STAGED_UNINSTALL_TOMBSTONE"");
	boolean v11 = v9.exists();
	DistroVersion v12 = TimeZoneDistroInstaller.readDistroVersion(this.stagedTzDataDir);
	StagedDistroOperation v13 = StagedDistroOperation.install(v12);
	StagedDistroOperation v7 = v13;
	RulesState v15 = new RulesState(v16,this.DISTRO_FORMAT_VERSION_SUPPORTED,v6,phiInstruction,phiInstruction,phiInstruction,phiInstruction);
	String v16 = v3.getRulesVersion();
	RulesState v2 = v15;
	return v2;
}
","NONE"
"Lcom/android/server/timezone/RulesManagerService","getRulesState()Landroid/app/timezone/RulesState;","2","2 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mPermissionHelper, <Application,Lcom/android/server/timezone/PermissionHelper> > 1,
invokeinterface < Application, Lcom/android/server/timezone/PermissionHelper, enforceCallerHasPermission(Ljava/lang/String;)V > 2,3 @4 exception:4,
6 = invokevirtual < Application, Lcom/android/server/timezone/RulesManagerService, getRulesStateInternal()Landroid/app/timezone/RulesState; > 1 @7 exception:5,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mInstaller, <Application,Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller> > 1,
5 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, readBaseVersion()Lcom/android/i18n/timezone/TzDataSetVersion; > 3 @6 exception:4,
2 = getfield < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, baseVersionFile, <Application,Ljava/io/File> > 1,
4 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, readBaseVersion(Ljava/io/File;)Lcom/android/i18n/timezone/TzDataSetVersion; > 1,2 @2 exception:3,
return 4,
13 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mInstaller, <Application,Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller> > 1,
18 = getCaughtException ,
26 = phi  12,2,
27 = phi  25,18,
32 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 7,30,27 @50 exception:31,
39 = phi  33,26,
40 = phi  34,2,
43 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mOperationInProgress, <Application,Ljava/util/concurrent/atomic/AtomicBoolean> > 1,
45 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicBoolean, get()Z > 43 @59 exception:44,
conditional branch(ne, to iindex=-1) 45,2,
46 = getfield < Application, Lcom/android/server/timezone/RulesManagerService, mInstaller, <Application,Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller> > 1,
48 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, getStagedDistroOperation()Lcom/android/timezone/distro/StagedDistroOperation; > 46 @67 exception:47,
2 = getfield < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, stagedTzDataDir, <Application,Ljava/io/File> > 1,
4 = invokevirtual < Application, Ljava/io/File, exists()Z > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = new <Application,Ljava/io/File>@10,
7 = getfield < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, stagedTzDataDir, <Application,Ljava/io/File> > 1,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 6,7,8 @16 exception:9,
11 = invokevirtual < Application, Ljava/io/File, exists()Z > 6 @19 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
12 = getfield < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, stagedTzDataDir, <Application,Ljava/io/File> > 1,
14 = invokevirtual < Application, Lcom/android/timezone/distro/installer/TimeZoneDistroInstaller, readDistroVersion(Ljava/io/File;)Lcom/android/timezone/distro/DistroVersion; > 1,12 @32 exception:13,
16 = invokestatic < Application, Lcom/android/timezone/distro/StagedDistroOperation, install(Lcom/android/timezone/distro/DistroVersion;)Lcom/android/timezone/distro/StagedDistroOperation; > 14 @36 exception:15,
return 16,
54 = getCaughtException ,
66 = phi  65,54,
69 = phi  55,2,
74 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 7,72,66 @104 exception:73,
78 = phi  2,69,
92 = phi  83,78,
93 = phi  82,2,
96 = new <Application,Landroid/app/timezone/RulesState>@109,
98 = invokevirtual < Application, Lcom/android/i18n/timezone/TzDataSetVersion, getRulesVersion()Ljava/lang/String; > 5 @111 exception:97,
99 = getstatic < Application, Lcom/android/server/timezone/RulesManagerService, DISTRO_FORMAT_VERSION_SUPPORTED, <Application,Landroid/app/timezone/DistroFormatVersion> >,
invokespecial < Application, Landroid/app/timezone/RulesState, <init>(Ljava/lang/String;Landroid/app/timezone/DistroFormatVersion;ZILandroid/app/timezone/DistroRulesVersion;ILandroid/app/timezone/DistroRulesVersion;)V > 96,98,99,45,92,93,39,40 @118 exception:100,
monitorexit 1,
return 96,
return 6,","depth : 0
public RulesState getRulesState(){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.QUERY_TIME_ZONE_RULES"");
	RulesState v2 = p0.getRulesStateInternal();
	return v2;
}
-----
depth : 1
public RulesState getRulesStateInternal(){
	TzDataSetVersion v1 = this.mInstaller.readBaseVersion();
	int v2 = Slog.w(""timezone.RulesManagerService"", ""Failed to read installed distro."", phiInstruction);
	boolean v3 = this.mOperationInProgress.get();
	StagedDistroOperation v4 = this.mInstaller.getStagedDistroOperation();
	int v5 = Slog.w(""timezone.RulesManagerService"", ""Failed to read staged distro."", phiInstruction);
	RulesState v5 = new RulesState(v6,this.DISTRO_FORMAT_VERSION_SUPPORTED,v3,phiInstruction,phiInstruction,phiInstruction,phiInstruction);
	String v6 = v1.getRulesVersion();
	return v5;
}
-----
depth : 2
public TzDataSetVersion readBaseVersion(){
	TzDataSetVersion v1 = p0.readBaseVersion(this.baseVersionFile);
	return v1;
}
-----
depth : 2
public StagedDistroOperation getStagedDistroOperation(){
	boolean v1 = this.stagedTzDataDir.exists();
	File v1 = new File(this.stagedTzDataDir,""STAGED_UNINSTALL_TOMBSTONE"");
	boolean v3 = v1.exists();
	DistroVersion v4 = p0.readDistroVersion(this.stagedTzDataDir);
	StagedDistroOperation v5 = StagedDistroOperation.install(v4);
	return v5;
}
-----
","public RulesState getRulesState(){
	this.mPermissionHelper.enforceCallerHasPermission(""android.permission.QUERY_TIME_ZONE_RULES"");
	TzDataSetVersion v4 = TimeZoneDistroInstaller.readBaseVersion(this.baseVersionFile);
	TzDataSetVersion v3 = v4;
	boolean v6 = this.mOperationInProgress.get();
	boolean v8 = this.stagedTzDataDir.exists();
	File v9 = new File(this.stagedTzDataDir,""STAGED_UNINSTALL_TOMBSTONE"");
	boolean v11 = v9.exists();
	DistroVersion v12 = TimeZoneDistroInstaller.readDistroVersion(this.stagedTzDataDir);
	StagedDistroOperation v13 = StagedDistroOperation.install(v12);
	StagedDistroOperation v7 = v13;
	RulesState v15 = new RulesState(v16,this.DISTRO_FORMAT_VERSION_SUPPORTED,v6,phiInstruction,phiInstruction,phiInstruction,phiInstruction);
	String v16 = v3.getRulesVersion();
	RulesState v2 = v15;
	return v2;
}
","NONE"

