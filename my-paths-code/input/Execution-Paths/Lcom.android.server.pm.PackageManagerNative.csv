"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/pm/PackageManagerNative","getStagedApexModuleNames()[Ljava/lang/String;","0","2 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
3 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 2,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/StagingManager, getStagedApexModuleNames()Ljava/util/List; > 5 @8 exception:6,
9 = new <Application,[Ljava/lang/String>@138 ,
12 = checkcast <Application,[Ljava/lang/String>11 <Application,[Ljava/lang/String>,
return 12,","depth : 0
public String getStagedApexModuleNames(){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	List v2 = v1.getStagedApexModuleNames();
	String v2 = new String(0);
	Object v3 = v2.toArray(v2);
	return v3;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getStagedApexModuleNames()[Ljava/lang/String;","1","2 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
3 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 2,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 3 @4 exception:4,
2 = getfield < Application, Lcom/android/server/pm/PackageInstallerService, mStagingManager, <Application,Lcom/android/server/pm/StagingManager> > 1,
return 2,
7 = invokevirtual < Application, Lcom/android/server/pm/StagingManager, getStagedApexModuleNames()Ljava/util/List; > 5 @8 exception:6,
2 = new <Application,Ljava/util/ArrayList>@0,
4 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
33 = phi  32,5,
6 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 33,8,
monitorexit 4,
return 2,
9 = new <Application,[Ljava/lang/String>@138 ,
12 = checkcast <Application,[Ljava/lang/String>11 <Application,[Ljava/lang/String>,
return 12,","depth : 0
public String getStagedApexModuleNames(){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	List v2 = v1.getStagedApexModuleNames();
	String v2 = new String(0);
	Object v3 = v2.toArray(v2);
	return v3;
}
-----
depth : 1
public StagingManager getStagingManager(){
	return this.mStagingManager;
}
-----
depth : 1
public List getStagedApexModuleNames(){
	ArrayList v0 = new ArrayList();
	int v2 = this.mStagedSessions.size();
	return v0;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","getVersionCodeForPackage(Ljava/lang/String;)J","0","8 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 8 @12 exception:9,
conditional branch(eq, to iindex=-1) 12,13,
return 3,","depth : 0
public long getVersionCodeForPackage(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	PackageInfo v4 = v3.getPackageInfo(p1, 0, v2);
	long v5 = v4.getLongVersionCode();
	return 0;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getVersionCodeForPackage(Ljava/lang/String;)J","1","8 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 8 @12 exception:9,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 12,13,
return 3,","depth : 0
public long getVersionCodeForPackage(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	PackageInfo v4 = v3.getPackageInfo(p1, 0, v2);
	long v5 = v4.getLongVersionCode();
	return 0;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getVersionCodeForPackage(Ljava/lang/String;)J","1","8 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 8 @12 exception:9,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
return 3,","depth : 0
public long getVersionCodeForPackage(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	return 0;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getVersionCodeForPackage(Ljava/lang/String;)J","2","8 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 8 @12 exception:9,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 12,13,
return 3,","depth : 0
public long getVersionCodeForPackage(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	PackageInfo v4 = v3.getPackageInfo(p1, 0, v2);
	long v5 = v4.getLongVersionCode();
	return 0;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getVersionCodeForPackage(Ljava/lang/String;)J","2","8 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 8 @12 exception:9,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
return 3,","depth : 0
public long getVersionCodeForPackage(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	return 0;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getVersionCodeForPackage(Ljava/lang/String;)J","2","8 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 8 @12 exception:9,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
return 3,","depth : 0
public long getVersionCodeForPackage(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	PackageInfo v4 = v3.getPackageInfo(p1, 0, v2);
	return 0;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","isPackageDebuggable(Ljava/lang/String;)Z","0","5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @6 exception:6,
conditional branch(eq, to iindex=-1) 10,11,
23 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 10,
25 = binaryop(and) 23 , 24,
conditional branch(eq, to iindex=-1) 25,11,
goto (from iindex= 13 to iindex = 2),
27 = phi  26,11,
return 27,","depth : 0
public boolean isPackageDebuggable(String p1){
	int v1 = UserHandle.getCallingUserId();
	Computer v2 = this.mPm.snapshotComputer();
	ApplicationInfo v3 = v2.getApplicationInfo(p1, 0, v1);
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","isPackageDebuggable(Ljava/lang/String;)Z","1","5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @6 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 10,11,
23 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 10,
25 = binaryop(and) 23 , 24,
conditional branch(eq, to iindex=-1) 25,11,
goto (from iindex= 13 to iindex = 2),
27 = phi  26,11,
return 27,","depth : 0
public boolean isPackageDebuggable(String p1){
	int v1 = UserHandle.getCallingUserId();
	Computer v2 = this.mPm.snapshotComputer();
	ApplicationInfo v3 = v2.getApplicationInfo(p1, 0, v1);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","isPackageDebuggable(Ljava/lang/String;)Z","1","5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @6 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 10,11,
23 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 10,
25 = binaryop(and) 23 , 24,
conditional branch(eq, to iindex=-1) 25,11,
27 = phi  26,11,
return 27,","depth : 0
public boolean isPackageDebuggable(String p1){
	int v1 = UserHandle.getCallingUserId();
	Computer v2 = this.mPm.snapshotComputer();
	ApplicationInfo v3 = v2.getApplicationInfo(p1, 0, v1);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","isPackageDebuggable(Ljava/lang/String;)Z","2","5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @6 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 10,11,
23 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 10,
25 = binaryop(and) 23 , 24,
conditional branch(eq, to iindex=-1) 25,11,
goto (from iindex= 13 to iindex = 2),
27 = phi  26,11,
return 27,","depth : 0
public boolean isPackageDebuggable(String p1){
	int v1 = UserHandle.getCallingUserId();
	Computer v2 = this.mPm.snapshotComputer();
	ApplicationInfo v3 = v2.getApplicationInfo(p1, 0, v1);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","isPackageDebuggable(Ljava/lang/String;)Z","2","5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @6 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 10,11,
23 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 10,
25 = binaryop(and) 23 , 24,
conditional branch(eq, to iindex=-1) 25,11,
goto (from iindex= 13 to iindex = 2),
27 = phi  26,11,
return 27,","depth : 0
public boolean isPackageDebuggable(String p1){
	int v1 = UserHandle.getCallingUserId();
	Computer v2 = this.mPm.snapshotComputer();
	ApplicationInfo v3 = v2.getApplicationInfo(p1, 0, v1);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	int v2 = p1.getUsed();
	PackageManagerService$Snapshot v2 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v3 = new ComputerEngine(v2,p2);
	long v5 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v5, phiInstruction);
	return v3;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","isPackageDebuggable(Ljava/lang/String;)Z","2","5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @6 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 10,11,
23 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 10,
25 = binaryop(and) 23 , 24,
conditional branch(eq, to iindex=-1) 25,11,
27 = phi  26,11,
return 27,","depth : 0
public boolean isPackageDebuggable(String p1){
	int v1 = UserHandle.getCallingUserId();
	Computer v2 = this.mPm.snapshotComputer();
	ApplicationInfo v3 = v2.getApplicationInfo(p1, 0, v1);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","getInstallerForPackage(Ljava/lang/String;)Ljava/lang/String;","0","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @10 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(eq, to iindex=-1) 17,10,
18 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 17,
20 = binaryop(and) 18 , 19,
conditional branch(eq, to iindex=-1) 20,10,
return 23,","depth : 0
public String getInstallerForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getInstallerPackageName(p1);
	boolean v3 = TextUtils.isEmpty(v2);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v4);
	ApplicationInfo v6 = v1.getApplicationInfo(p1, 0, v5);
	return ""preload"";
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getInstallerForPackage(Ljava/lang/String;)Ljava/lang/String;","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @10 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(eq, to iindex=-1) 17,10,
18 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 17,
20 = binaryop(and) 18 , 19,
conditional branch(eq, to iindex=-1) 20,10,
return 23,","depth : 0
public String getInstallerForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getInstallerPackageName(p1);
	boolean v3 = TextUtils.isEmpty(v2);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v4);
	ApplicationInfo v6 = v1.getApplicationInfo(p1, 0, v5);
	return ""preload"";
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getInstallerForPackage(Ljava/lang/String;)Ljava/lang/String;","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @10 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(eq, to iindex=-1) 17,10,
18 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 17,
20 = binaryop(and) 18 , 19,
conditional branch(eq, to iindex=-1) 20,10,
return 22,","depth : 0
public String getInstallerForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getInstallerPackageName(p1);
	boolean v3 = TextUtils.isEmpty(v2);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v4);
	ApplicationInfo v6 = v1.getApplicationInfo(p1, 0, v5);
	return """";
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getInstallerForPackage(Ljava/lang/String;)Ljava/lang/String;","2","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @10 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(eq, to iindex=-1) 17,10,
18 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 17,
20 = binaryop(and) 18 , 19,
conditional branch(eq, to iindex=-1) 20,10,
return 23,","depth : 0
public String getInstallerForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getInstallerPackageName(p1);
	boolean v3 = TextUtils.isEmpty(v2);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v4);
	ApplicationInfo v6 = v1.getApplicationInfo(p1, 0, v5);
	return ""preload"";
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getInstallerForPackage(Ljava/lang/String;)Ljava/lang/String;","2","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @10 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(eq, to iindex=-1) 17,10,
18 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 17,
20 = binaryop(and) 18 , 19,
conditional branch(eq, to iindex=-1) 20,10,
return 22,","depth : 0
public String getInstallerForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getInstallerPackageName(p1);
	boolean v3 = TextUtils.isEmpty(v2);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v4);
	ApplicationInfo v6 = v1.getApplicationInfo(p1, 0, v5);
	return """";
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getInstallerForPackage(Ljava/lang/String;)Ljava/lang/String;","2","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @10 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(eq, to iindex=-1) 17,10,
18 = getfield < Application, Landroid/content/pm/ApplicationInfo, flags, <Primordial,I> > 17,
20 = binaryop(and) 18 , 19,
conditional branch(eq, to iindex=-1) 20,10,
return 23,","depth : 0
public String getInstallerForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getInstallerPackageName(p1);
	boolean v3 = TextUtils.isEmpty(v2);
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v4);
	ApplicationInfo v6 = v1.getApplicationInfo(p1, 0, v5);
	return ""preload"";
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	int v2 = p1.getUsed();
	PackageManagerService$Snapshot v2 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v3 = new ComputerEngine(v2,p2);
	long v5 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v5, phiInstruction);
	return v3;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","hasSha256SigningCertificate(Ljava/lang/String;[B)Z","0","4 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 4 @2 exception:5,
return 9,","depth : 0
public boolean hasSha256SigningCertificate(String p1, byte[] p2){
	Computer v1 = this.mPm.snapshotComputer();
	boolean v2 = v1.hasSigningCertificate(p1, p2, 1);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","hasSha256SigningCertificate(Ljava/lang/String;[B)Z","1","4 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 4 @2 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
return 9,","depth : 0
public boolean hasSha256SigningCertificate(String p1, byte[] p2){
	Computer v1 = this.mPm.snapshotComputer();
	boolean v2 = v1.hasSigningCertificate(p1, p2, 1);
	return v2;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","hasSha256SigningCertificate(Ljava/lang/String;[B)Z","2","4 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 4 @2 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
return 9,","depth : 0
public boolean hasSha256SigningCertificate(String p1, byte[] p2){
	Computer v1 = this.mPm.snapshotComputer();
	boolean v2 = v1.hasSigningCertificate(p1, p2, 1);
	return v2;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","hasSha256SigningCertificate(Ljava/lang/String;[B)Z","2","4 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 4 @2 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
return 9,","depth : 0
public boolean hasSha256SigningCertificate(String p1, byte[] p2){
	Computer v1 = this.mPm.snapshotComputer();
	boolean v2 = v1.hasSigningCertificate(p1, p2, 1);
	return v2;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	int v2 = p1.getUsed();
	PackageManagerService$Snapshot v2 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v3 = new ComputerEngine(v2,p2);
	long v5 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v5, phiInstruction);
	return v3;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V","0","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
invokevirtual < Application, Lcom/android/server/pm/StagingManager, registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V > 6,2 @8 exception:7,
return,","depth : 0
public void registerStagedApexObserver(IStagedApexObserver p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	v1.registerStagedApexObserver(p1);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageInstallerService, mStagingManager, <Application,Lcom/android/server/pm/StagingManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/pm/StagingManager, registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V > 6,2 @8 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 5,3,
13 = getCaughtException ,
16 = invokevirtual < Application, Landroid/os/RemoteException, getMessage()Ljava/lang/String; > 13 @26 exception:15,
23 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorenter 23,
24 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorexit 23,
return,
return,","depth : 0
public void registerStagedApexObserver(IStagedApexObserver p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	v1.registerStagedApexObserver(p1);
	return;
}
-----
depth : 1
public StagingManager getStagingManager(){
	return this.mStagingManager;
}
-----
depth : 1
public void registerStagedApexObserver(IStagedApexObserver p1){
	IBinder v1 = p1.asBinder();
	IBinder v2 = p1.asBinder();
	String v3 = [resolveCodeAbst] + 13 = getCaughtException .getMessage();
	int v4 = Slog.w(""StagingManager"", v3);
	boolean v5 = this.mStagedApexObservers.add(p1);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageInstallerService, mStagingManager, <Application,Lcom/android/server/pm/StagingManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/pm/StagingManager, registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V > 6,2 @8 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 5,3,
8 = new <Application,Lcom/android/server/pm/StagingManager$1>@13,
13 = getCaughtException ,
16 = invokevirtual < Application, Landroid/os/RemoteException, getMessage()Ljava/lang/String; > 13 @26 exception:15,
23 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorenter 23,
24 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorexit 23,
return,
return,","depth : 0
public void registerStagedApexObserver(IStagedApexObserver p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	v1.registerStagedApexObserver(p1);
	return;
}
-----
depth : 1
public StagingManager getStagingManager(){
	return this.mStagingManager;
}
-----
depth : 1
public void registerStagedApexObserver(IStagedApexObserver p1){
	IBinder v1 = p1.asBinder();
	IBinder v2 = p1.asBinder();
	StagingManager$1 v2 = new StagingManager$1(p0,p1);
	v2.linkToDeath(v2, 0);
	String v5 = [resolveCodeAbst] + 13 = getCaughtException .getMessage();
	int v6 = Slog.w(""StagingManager"", v5);
	boolean v7 = this.mStagedApexObservers.add(p1);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageInstallerService, mStagingManager, <Application,Lcom/android/server/pm/StagingManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/pm/StagingManager, registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V > 6,2 @8 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 5,3,
8 = new <Application,Lcom/android/server/pm/StagingManager$1>@13,
goto (from iindex= 11 to iindex = 11),
23 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorenter 23,
24 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorexit 23,
return,
return,","depth : 0
public void registerStagedApexObserver(IStagedApexObserver p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	v1.registerStagedApexObserver(p1);
	return;
}
-----
depth : 1
public StagingManager getStagingManager(){
	return this.mStagingManager;
}
-----
depth : 1
public void registerStagedApexObserver(IStagedApexObserver p1){
	IBinder v1 = p1.asBinder();
	IBinder v2 = p1.asBinder();
	StagingManager$1 v2 = new StagingManager$1(p0,p1);
	v2.linkToDeath(v2, 0);
	boolean v5 = this.mStagedApexObservers.add(p1);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageInstallerService, mStagingManager, <Application,Lcom/android/server/pm/StagingManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/pm/StagingManager, registerStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V > 6,2 @8 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 5,3,
23 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorenter 23,
24 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorexit 23,
return,
return,","depth : 0
public void registerStagedApexObserver(IStagedApexObserver p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	v1.registerStagedApexObserver(p1);
	return;
}
-----
depth : 1
public StagingManager getStagingManager(){
	return this.mStagingManager;
}
-----
depth : 1
public void registerStagedApexObserver(IStagedApexObserver p1){
	IBinder v1 = p1.asBinder();
	boolean v2 = this.mStagedApexObservers.add(p1);
	return;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","unregisterPackageChangeObserver(Landroid/content/pm/IPackageChangeObserver;)V","0","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 3,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 5,
10 = new <Application,Ljava/lang/StringBuilder>@14,
15 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
16 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 15,
monitorexit 4,
return,","depth : 0
public void unregisterPackageChangeObserver(IPackageChangeObserver p1){
	boolean v1 = PackageManagerService.mPackageChangeObservers.remove(p1);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Size of mPackageChangeObservers after unregistry is "");
	int v4 = PackageManagerService.mPackageChangeObservers.size();
	StringBuilder v5 = v1.append(v4);
	String v6 = v1.toString();
	int v7 = Log.d(""PackageManager"", v6);
	return;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","isAudioPlaybackCaptureAllowed([Ljava/lang/String;)[Z","0","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
10 = arraylength 2,
11 = new <Primordial,[Z>@1510 ,
13 = binaryop(sub) 10 , 12,
29 = phi  28,13,
conditional branch(lt, to iindex=-1) 29,14,
return 11,","depth : 0
public [Z isAudioPlaybackCaptureAllowed(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	[Z v3 = new [Z(p1.length);
	return v3;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","isAudioPlaybackCaptureAllowed([Ljava/lang/String;)[Z","1","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
10 = arraylength 2,
11 = new <Primordial,[Z>@1510 ,
13 = binaryop(sub) 10 , 12,
29 = phi  28,13,
conditional branch(lt, to iindex=-1) 29,14,
return 11,","depth : 0
public [Z isAudioPlaybackCaptureAllowed(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	[Z v3 = new [Z(p1.length);
	return v3;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","isAudioPlaybackCaptureAllowed([Ljava/lang/String;)[Z","2","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
10 = arraylength 2,
11 = new <Primordial,[Z>@1510 ,
13 = binaryop(sub) 10 , 12,
29 = phi  28,13,
conditional branch(lt, to iindex=-1) 29,14,
return 11,","depth : 0
public [Z isAudioPlaybackCaptureAllowed(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	[Z v3 = new [Z(p1.length);
	return v3;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","isAudioPlaybackCaptureAllowed([Ljava/lang/String;)[Z","2","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
10 = arraylength 2,
11 = new <Primordial,[Z>@1510 ,
13 = binaryop(sub) 10 , 12,
29 = phi  28,13,
conditional branch(lt, to iindex=-1) 29,14,
return 11,","depth : 0
public [Z isAudioPlaybackCaptureAllowed(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	[Z v3 = new [Z(p1.length);
	return v3;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	int v2 = p1.getUsed();
	PackageManagerService$Snapshot v2 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v3 = new ComputerEngine(v2,p2);
	long v5 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v5, phiInstruction);
	return v3;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","getNamesForUids([I)[Ljava/lang/String;","0","conditional branch(eq, to iindex=-1) 2,3,
4 = arraylength 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @10 exception:6,
conditional branch(eq, to iindex=-1) 9,3,
14 = arraylength 2,
15 = new <Application,[Ljava/lang/String>@2314 ,
16 = phi  9,15,
18 = arraylength 16,
20 = binaryop(add) 18 , 19,
25 = phi  24,20,
conditional branch(lt, to iindex=-1) 25,3,
return 16,","depth : 0
public String getNamesForUids([I p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getNamesForUids(p1);
	String v2 = new String(p1.length);
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getNamesForUids([I)[Ljava/lang/String;","1","conditional branch(eq, to iindex=-1) 2,3,
4 = arraylength 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @10 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 9,3,
14 = arraylength 2,
15 = new <Application,[Ljava/lang/String>@2314 ,
16 = phi  9,15,
18 = arraylength 16,
20 = binaryop(add) 18 , 19,
25 = phi  24,20,
conditional branch(lt, to iindex=-1) 25,3,
return 16,","depth : 0
public String getNamesForUids([I p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getNamesForUids(p1);
	String v2 = new String(p1.length);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getNamesForUids([I)[Ljava/lang/String;","1","conditional branch(eq, to iindex=-1) 2,3,
4 = arraylength 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @10 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 9,3,
goto (from iindex= 12 to iindex = 4),
16 = phi  9,15,
18 = arraylength 16,
20 = binaryop(add) 18 , 19,
25 = phi  24,20,
conditional branch(lt, to iindex=-1) 25,3,
return 16,","depth : 0
public String getNamesForUids([I p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getNamesForUids(p1);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getNamesForUids([I)[Ljava/lang/String;","2","conditional branch(eq, to iindex=-1) 2,3,
4 = arraylength 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @10 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 9,3,
14 = arraylength 2,
15 = new <Application,[Ljava/lang/String>@2314 ,
16 = phi  9,15,
18 = arraylength 16,
20 = binaryop(add) 18 , 19,
25 = phi  24,20,
conditional branch(lt, to iindex=-1) 25,3,
return 16,","depth : 0
public String getNamesForUids([I p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getNamesForUids(p1);
	String v2 = new String(p1.length);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getNamesForUids([I)[Ljava/lang/String;","2","conditional branch(eq, to iindex=-1) 2,3,
4 = arraylength 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @10 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 9,3,
goto (from iindex= 12 to iindex = 4),
16 = phi  9,15,
18 = arraylength 16,
20 = binaryop(add) 18 , 19,
25 = phi  24,20,
conditional branch(lt, to iindex=-1) 25,3,
return 16,","depth : 0
public String getNamesForUids([I p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getNamesForUids(p1);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getNamesForUids([I)[Ljava/lang/String;","2","conditional branch(eq, to iindex=-1) 2,3,
4 = arraylength 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 5 @10 exception:6,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 9,3,
14 = arraylength 2,
15 = new <Application,[Ljava/lang/String>@2314 ,
16 = phi  9,15,
18 = arraylength 16,
20 = binaryop(add) 18 , 19,
25 = phi  24,20,
conditional branch(lt, to iindex=-1) 25,3,
return 16,","depth : 0
public String getNamesForUids([I p1){
	Computer v1 = this.mPm.snapshotComputer();
	String v2 = v1.getNamesForUids(p1);
	String v2 = new String(p1.length);
	return phiInstruction;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	int v2 = p1.getUsed();
	PackageManagerService$Snapshot v2 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v3 = new ComputerEngine(v2,p2);
	long v5 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v5, phiInstruction);
	return v3;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","getAllPackages()[Ljava/lang/String;","0","2 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 2 @2 exception:3,
8 = new <Application,[Ljava/lang/String>@117 ,
11 = checkcast <Application,[Ljava/lang/String>10 <Application,[Ljava/lang/String>,
return 11,","depth : 0
public String getAllPackages(){
	Computer v1 = this.mPm.snapshotComputer();
	List v2 = v1.getAllPackages();
	String v2 = new String(0);
	Object v3 = v2.toArray(v2);
	return v3;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getAllPackages()[Ljava/lang/String;","1","2 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
8 = new <Application,[Ljava/lang/String>@117 ,
11 = checkcast <Application,[Ljava/lang/String>10 <Application,[Ljava/lang/String>,
return 11,","depth : 0
public String getAllPackages(){
	Computer v1 = this.mPm.snapshotComputer();
	List v2 = v1.getAllPackages();
	String v2 = new String(0);
	Object v3 = v2.toArray(v2);
	return v3;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getAllPackages()[Ljava/lang/String;","2","2 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
8 = new <Application,[Ljava/lang/String>@117 ,
11 = checkcast <Application,[Ljava/lang/String>10 <Application,[Ljava/lang/String>,
return 11,","depth : 0
public String getAllPackages(){
	Computer v1 = this.mPm.snapshotComputer();
	List v2 = v1.getAllPackages();
	String v2 = new String(0);
	Object v3 = v2.toArray(v2);
	return v3;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getAllPackages()[Ljava/lang/String;","2","2 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
8 = new <Application,[Ljava/lang/String>@117 ,
11 = checkcast <Application,[Ljava/lang/String>10 <Application,[Ljava/lang/String>,
return 11,","depth : 0
public String getAllPackages(){
	Computer v1 = this.mPm.snapshotComputer();
	List v2 = v1.getAllPackages();
	String v2 = new String(0);
	Object v3 = v2.toArray(v2);
	return v3;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	int v2 = p1.getUsed();
	PackageManagerService$Snapshot v2 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v3 = new ComputerEngine(v2,p2);
	long v5 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v5, phiInstruction);
	return v3;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","getStagedApexInfo(Ljava/lang/String;)Landroid/content/pm/StagedApexInfo;","0","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/StagingManager, getStagedApexInfo(Ljava/lang/String;)Landroid/content/pm/StagedApexInfo; > 6,2 @8 exception:7,
return 8,","depth : 0
public StagedApexInfo getStagedApexInfo(String p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	StagedApexInfo v2 = v1.getStagedApexInfo(p1);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getStagedApexInfo(Ljava/lang/String;)Landroid/content/pm/StagedApexInfo;","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageInstallerService, mStagingManager, <Application,Lcom/android/server/pm/StagingManager> > 1,
return 2,
8 = invokevirtual < Application, Lcom/android/server/pm/StagingManager, getStagedApexInfo(Ljava/lang/String;)Landroid/content/pm/StagedApexInfo; > 6,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
31 = phi  30,4,
5 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 31,7,
8 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/StagingManager$StagedSession>10 <Application,Lcom/android/server/pm/StagingManager$StagedSession>,
conditional branch(eq, to iindex=-1) 13,4,
conditional branch(ne, to iindex=-1) 15,4,
conditional branch(ne, to iindex=-1) 17,4,
conditional branch(ne, to iindex=-1) 19,4,
21 = invokevirtual < Application, Lcom/android/server/pm/StagingManager, getStagedApexInfos(Lcom/android/server/pm/StagingManager$StagedSession;)Ljava/util/Map; > 1,11 @45 exception:20,
24 = checkcast <Application,Landroid/apex/ApexInfo>23 <Application,Landroid/apex/ApexInfo>,
conditional branch(eq, to iindex=-1) 24,4,
32 = new <Application,Landroid/content/pm/StagedApexInfo>@57,
34 = getfield < Application, Landroid/apex/ApexInfo, moduleName, <Application,Ljava/lang/String> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, moduleName, <Application,Ljava/lang/String> > = 34,
35 = getfield < Application, Landroid/apex/ApexInfo, modulePath, <Application,Ljava/lang/String> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, diskImagePath, <Application,Ljava/lang/String> > = 35,
36 = getfield < Application, Landroid/apex/ApexInfo, versionCode, <Primordial,J> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, versionCode, <Primordial,J> > = 36,
37 = getfield < Application, Landroid/apex/ApexInfo, versionName, <Application,Ljava/lang/String> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, versionName, <Application,Ljava/lang/String> > = 37,
38 = getfield < Application, Landroid/apex/ApexInfo, hasClassPathJars, <Primordial,Z> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, hasClassPathJars, <Primordial,Z> > = 38,
monitorexit 3,
return 32,
return 8,","depth : 0
public StagedApexInfo getStagedApexInfo(String p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	StagedApexInfo v2 = v1.getStagedApexInfo(p1);
	return v2;
}
-----
depth : 1
public StagingManager getStagingManager(){
	return this.mStagingManager;
}
-----
depth : 1
public StagedApexInfo getStagedApexInfo(String p1){
	int v1 = this.mStagedSessions.size();
	Object v2 = this.mStagedSessions.valueAt(phiInstruction);
	boolean v3 = v2.isSessionReady();
	boolean v4 = v2.isDestroyed();
	boolean v5 = v2.hasParentSessionId();
	boolean v6 = v2.containsApexSession();
	Map v7 = p0.getStagedApexInfos(v2);
	Object v8 = v7.get(p1);
	StagedApexInfo v8 = new StagedApexInfo();
	StagedApexInfo.moduleName = ApexInfo.moduleName;
	StagedApexInfo.diskImagePath = ApexInfo.modulePath;
	StagedApexInfo.versionCode = ApexInfo.versionCode;
	StagedApexInfo.versionName = ApexInfo.versionName;
	StagedApexInfo.hasClassPathJars = ApexInfo.hasClassPathJars;
	return v8;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getStagedApexInfo(Ljava/lang/String;)Landroid/content/pm/StagedApexInfo;","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageInstallerService, mStagingManager, <Application,Lcom/android/server/pm/StagingManager> > 1,
return 2,
8 = invokevirtual < Application, Lcom/android/server/pm/StagingManager, getStagedApexInfo(Ljava/lang/String;)Landroid/content/pm/StagedApexInfo; > 6,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
31 = phi  30,4,
5 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 31,7,
monitorexit 3,
return 4,
return 8,","depth : 0
public StagedApexInfo getStagedApexInfo(String p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	StagedApexInfo v2 = v1.getStagedApexInfo(p1);
	return v2;
}
-----
depth : 1
public StagingManager getStagingManager(){
	return this.mStagingManager;
}
-----
depth : 1
public StagedApexInfo getStagedApexInfo(String p1){
	int v1 = this.mStagedSessions.size();
	return 0;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getStagedApexInfo(Ljava/lang/String;)Landroid/content/pm/StagedApexInfo;","2","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageInstallerService, mStagingManager, <Application,Lcom/android/server/pm/StagingManager> > 1,
return 2,
8 = invokevirtual < Application, Lcom/android/server/pm/StagingManager, getStagedApexInfo(Ljava/lang/String;)Landroid/content/pm/StagedApexInfo; > 6,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
31 = phi  30,4,
5 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 31,7,
8 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedSessions, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/StagingManager$StagedSession>10 <Application,Lcom/android/server/pm/StagingManager$StagedSession>,
conditional branch(eq, to iindex=-1) 13,4,
conditional branch(ne, to iindex=-1) 15,4,
conditional branch(ne, to iindex=-1) 17,4,
conditional branch(ne, to iindex=-1) 19,4,
21 = invokevirtual < Application, Lcom/android/server/pm/StagingManager, getStagedApexInfos(Lcom/android/server/pm/StagingManager$StagedSession;)Ljava/util/Map; > 1,11 @45 exception:20,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 4 to iindex = 2),
5 = phi  4,3,
10 = binaryop(xor) 4 , 9,
11 = new <Application,Ljava/lang/StringBuilder>@17,
25 = new <Application,Ljava/lang/StringBuilder>@45,
conditional branch(eq, to iindex=-1) 38,3,
conditional branch(eq, to iindex=-1) 40,3,
41 = new <Application,Landroid/apex/ApexSessionParams>@82,
putfield 41.< Application, Landroid/apex/ApexSessionParams, sessionId, <Primordial,I> > = 44,
45 = new <Application,Landroid/util/IntArray>@93,
conditional branch(eq, to iindex=-1) 48,3,
conditional branch(eq, to iindex=-1) 54,3,
putfield 41.< Application, Landroid/apex/ApexSessionParams, childSessionIds, <Primordial,[I> > = 71,
72 = getfield < Application, Lcom/android/server/pm/StagingManager, mApexManager, <Application,Lcom/android/server/pm/ApexManager> > 1,
75 = new <Application,Landroid/util/ArrayMap>@150,
77 = arraylength 74,
84 = phi  83,3,
conditional branch(ge, to iindex=-1) 84,77,
return 75,
24 = checkcast <Application,Landroid/apex/ApexInfo>23 <Application,Landroid/apex/ApexInfo>,
conditional branch(eq, to iindex=-1) 24,4,
32 = new <Application,Landroid/content/pm/StagedApexInfo>@57,
34 = getfield < Application, Landroid/apex/ApexInfo, moduleName, <Application,Ljava/lang/String> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, moduleName, <Application,Ljava/lang/String> > = 34,
35 = getfield < Application, Landroid/apex/ApexInfo, modulePath, <Application,Ljava/lang/String> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, diskImagePath, <Application,Ljava/lang/String> > = 35,
36 = getfield < Application, Landroid/apex/ApexInfo, versionCode, <Primordial,J> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, versionCode, <Primordial,J> > = 36,
37 = getfield < Application, Landroid/apex/ApexInfo, versionName, <Application,Ljava/lang/String> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, versionName, <Application,Ljava/lang/String> > = 37,
38 = getfield < Application, Landroid/apex/ApexInfo, hasClassPathJars, <Primordial,Z> > 24,
putfield 32.< Application, Landroid/content/pm/StagedApexInfo, hasClassPathJars, <Primordial,Z> > = 38,
monitorexit 3,
return 32,
return 8,","depth : 0
public StagedApexInfo getStagedApexInfo(String p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	StagedApexInfo v2 = v1.getStagedApexInfo(p1);
	return v2;
}
-----
depth : 1
public StagingManager getStagingManager(){
	return this.mStagingManager;
}
-----
depth : 1
public StagedApexInfo getStagedApexInfo(String p1){
	int v1 = this.mStagedSessions.size();
	Object v2 = this.mStagedSessions.valueAt(phiInstruction);
	boolean v3 = v2.isSessionReady();
	boolean v4 = v2.isDestroyed();
	boolean v5 = v2.hasParentSessionId();
	boolean v6 = v2.containsApexSession();
	Map v7 = p0.getStagedApexInfos(v2);
	Object v8 = v7.get(p1);
	StagedApexInfo v8 = new StagedApexInfo();
	StagedApexInfo.moduleName = ApexInfo.moduleName;
	StagedApexInfo.diskImagePath = ApexInfo.modulePath;
	StagedApexInfo.versionCode = ApexInfo.versionCode;
	StagedApexInfo.versionName = ApexInfo.versionName;
	StagedApexInfo.hasClassPathJars = ApexInfo.hasClassPathJars;
	return v8;
}
-----
depth : 2
public Map getStagedApexInfos(StagingManager$StagedSession p1){
	Preconditions.checkArgument(phiInstruction, ""Session is null"");
	boolean v2 = p1.hasParentSessionId();
	StringBuilder v2 = new StringBuilder();
	int v4 = p1.sessionId();
	StringBuilder v5 = v2.append(v4);
	StringBuilder v6 = v2.append("" session has parent session"");
	String v7 = v2.toString();
	Preconditions.checkArgument((1 ^ v2), v7);
	boolean v9 = p1.containsApexSession();
	StringBuilder v9 = new StringBuilder();
	int v11 = p1.sessionId();
	StringBuilder v12 = v9.append(v11);
	StringBuilder v13 = v9.append("" session does not contain apex"");
	String v14 = v9.toString();
	Preconditions.checkArgument(v9, v14);
	boolean v16 = p1.isSessionReady();
	boolean v17 = p1.isDestroyed();
	ApexSessionParams v17 = new ApexSessionParams();
	int v19 = p1.sessionId();
	ApexSessionParams.sessionId = v19;
	IntArray v19 = new IntArray();
	boolean v21 = p1.isMultiPackage();
	List v22 = p1.getChildSessions();
	Iterator v23 = v22.iterator();
	boolean v24 = v23.hasNext();
	[I v25 = v19.toArray();
	ApexSessionParams.childSessionIds = v25;
	ApexInfo v26 = this.mApexManager.getStagedApexInfos(v17);
	ArrayMap v26 = new ArrayMap();
	return v26;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","getTargetSdkVersionForPackage(Ljava/lang/String;)I","0","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
return 7,","depth : 0
public int getTargetSdkVersionForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	int v2 = v1.getTargetSdkVersion(p1);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getTargetSdkVersionForPackage(Ljava/lang/String;)I","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 7,8,
return 7,","depth : 0
public int getTargetSdkVersionForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	int v2 = v1.getTargetSdkVersion(p1);
	return v2;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getTargetSdkVersionForPackage(Ljava/lang/String;)I","2","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 7,8,
return 7,","depth : 0
public int getTargetSdkVersionForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	int v2 = v1.getTargetSdkVersion(p1);
	return v2;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getTargetSdkVersionForPackage(Ljava/lang/String;)I","2","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
5 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 7,8,
return 7,","depth : 0
public int getTargetSdkVersionForPackage(String p1){
	Computer v1 = this.mPm.snapshotComputer();
	int v2 = v1.getTargetSdkVersion(p1);
	return v2;
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	int v2 = p1.getUsed();
	PackageManagerService$Snapshot v2 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v3 = new ComputerEngine(v2,p2);
	long v5 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v5, phiInstruction);
	return v3;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","registerPackageChangeObserver(Landroid/content/pm/IPackageChangeObserver;)V","0","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 3,
monitorenter 4,
12 = getCaughtException ,
15 = invokevirtual < Application, Landroid/os/RemoteException, getMessage()Ljava/lang/String; > 12 @24 exception:14,
22 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
23 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 22,
26 = new <Application,Ljava/lang/StringBuilder>@40,
31 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
32 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 31,
monitorexit 4,
return,","depth : 0
public void registerPackageChangeObserver(IPackageChangeObserver p1){
	IBinder v1 = p1.asBinder();
	String v2 = [resolveCodeAbst] + 12 = getCaughtException .getMessage();
	int v3 = Log.e(""PackageManager"", v2);
	boolean v4 = PackageManagerService.mPackageChangeObservers.add(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Size of mPackageChangeObservers after registry is "");
	int v7 = PackageManagerService.mPackageChangeObservers.size();
	StringBuilder v8 = v4.append(v7);
	String v9 = v4.toString();
	int v10 = Log.d(""PackageManager"", v9);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","registerPackageChangeObserver(Landroid/content/pm/IPackageChangeObserver;)V","0","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 3,
monitorenter 4,
7 = new <Application,Lcom/android/server/pm/PackageManagerNative$PackageChangeObserverDeathRecipient>@9,
12 = getCaughtException ,
15 = invokevirtual < Application, Landroid/os/RemoteException, getMessage()Ljava/lang/String; > 12 @24 exception:14,
22 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
23 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 22,
26 = new <Application,Ljava/lang/StringBuilder>@40,
31 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
32 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 31,
monitorexit 4,
return,","depth : 0
public void registerPackageChangeObserver(IPackageChangeObserver p1){
	IBinder v1 = p1.asBinder();
	PackageManagerNative$PackageChangeObserverDeathRecipient v1 = new PackageManagerNative$PackageChangeObserverDeathRecipient(p0,p1);
	v1.linkToDeath(v1, 0);
	String v4 = [resolveCodeAbst] + 12 = getCaughtException .getMessage();
	int v5 = Log.e(""PackageManager"", v4);
	boolean v6 = PackageManagerService.mPackageChangeObservers.add(p1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Size of mPackageChangeObservers after registry is "");
	int v9 = PackageManagerService.mPackageChangeObservers.size();
	StringBuilder v10 = v6.append(v9);
	String v11 = v6.toString();
	int v12 = Log.d(""PackageManager"", v11);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","registerPackageChangeObserver(Landroid/content/pm/IPackageChangeObserver;)V","0","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 3,
monitorenter 4,
7 = new <Application,Lcom/android/server/pm/PackageManagerNative$PackageChangeObserverDeathRecipient>@9,
goto (from iindex= 9 to iindex = 13),
22 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
23 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 22,
26 = new <Application,Ljava/lang/StringBuilder>@40,
31 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
32 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mPackageChangeObservers, <Application,Ljava/util/ArrayList> > 31,
monitorexit 4,
return,","depth : 0
public void registerPackageChangeObserver(IPackageChangeObserver p1){
	IBinder v1 = p1.asBinder();
	PackageManagerNative$PackageChangeObserverDeathRecipient v1 = new PackageManagerNative$PackageChangeObserverDeathRecipient(p0,p1);
	v1.linkToDeath(v1, 0);
	boolean v4 = PackageManagerService.mPackageChangeObservers.add(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Size of mPackageChangeObservers after registry is "");
	int v7 = PackageManagerService.mPackageChangeObservers.size();
	StringBuilder v8 = v4.append(v7);
	String v9 = v4.toString();
	int v10 = Log.d(""PackageManager"", v9);
	return;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","getLocationFlags(Ljava/lang/String;)I","0","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
conditional branch(eq, to iindex=-1) 12,13,
conditional branch(eq, to iindex=-1) 28,13,
goto (from iindex= 18 to iindex = 2),
30 = phi  29,13,
31 = binaryop(or) 26 , 30,
conditional branch(eq, to iindex=-1) 33,13,
35 = phi  13,34,
36 = binaryop(or) 31 , 35,
return 36,","depth : 0
public int getLocationFlags(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	ApplicationInfo v4 = v3.getApplicationInfo(p1, 0, v2);
	boolean v5 = v4.isSystemApp();
	boolean v6 = v4.isVendor();
	boolean v7 = v4.isProduct();
	return ((v5 | phiInstruction) | phiInstruction);
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getLocationFlags(Ljava/lang/String;)I","1","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 12,13,
conditional branch(eq, to iindex=-1) 28,13,
goto (from iindex= 18 to iindex = 2),
30 = phi  29,13,
31 = binaryop(or) 26 , 30,
conditional branch(eq, to iindex=-1) 33,13,
35 = phi  13,34,
36 = binaryop(or) 31 , 35,
return 36,","depth : 0
public int getLocationFlags(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	ApplicationInfo v4 = v3.getApplicationInfo(p1, 0, v2);
	boolean v5 = v4.isSystemApp();
	boolean v6 = v4.isVendor();
	boolean v7 = v4.isProduct();
	return ((v5 | phiInstruction) | phiInstruction);
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getLocationFlags(Ljava/lang/String;)I","1","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 12,13,
conditional branch(eq, to iindex=-1) 28,13,
30 = phi  29,13,
31 = binaryop(or) 26 , 30,
conditional branch(eq, to iindex=-1) 33,13,
35 = phi  13,34,
36 = binaryop(or) 31 , 35,
return 36,","depth : 0
public int getLocationFlags(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	ApplicationInfo v4 = v3.getApplicationInfo(p1, 0, v2);
	boolean v5 = v4.isSystemApp();
	boolean v6 = v4.isVendor();
	boolean v7 = v4.isProduct();
	return ((v5 | phiInstruction) | phiInstruction);
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getLocationFlags(Ljava/lang/String;)I","2","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 12,13,
conditional branch(eq, to iindex=-1) 28,13,
goto (from iindex= 18 to iindex = 2),
30 = phi  29,13,
31 = binaryop(or) 26 , 30,
conditional branch(eq, to iindex=-1) 33,13,
35 = phi  13,34,
36 = binaryop(or) 31 , 35,
return 36,","depth : 0
public int getLocationFlags(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	ApplicationInfo v4 = v3.getApplicationInfo(p1, 0, v2);
	boolean v5 = v4.isSystemApp();
	boolean v6 = v4.isVendor();
	boolean v7 = v4.isProduct();
	return ((v5 | phiInstruction) | phiInstruction);
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getLocationFlags(Ljava/lang/String;)I","2","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 12,13,
conditional branch(eq, to iindex=-1) 28,13,
goto (from iindex= 18 to iindex = 2),
30 = phi  29,13,
31 = binaryop(or) 26 , 30,
conditional branch(eq, to iindex=-1) 33,13,
35 = phi  13,34,
36 = binaryop(or) 31 , 35,
return 36,","depth : 0
public int getLocationFlags(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	ApplicationInfo v4 = v3.getApplicationInfo(p1, 0, v2);
	boolean v5 = v4.isSystemApp();
	boolean v6 = v4.isVendor();
	boolean v7 = v4.isProduct();
	return ((v5 | phiInstruction) | phiInstruction);
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	int v2 = p1.getUsed();
	PackageManagerService$Snapshot v2 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v3 = new ComputerEngine(v2,p2);
	long v5 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v5, phiInstruction);
	return v3;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getLocationFlags(Ljava/lang/String;)I","2","7 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
9 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, snapshotComputer()Lcom/android/server/pm/Computer; > 7 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
conditional branch(eq, to iindex=-1) 4,5,
6 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshot, <Application,Ljava/util/concurrent/atomic/AtomicReference> >,
9 = checkcast <Application,Lcom/android/server/pm/Computer>8 <Application,Lcom/android/server/pm/Computer>,
10 = getstatic < Application, Lcom/android/server/pm/PackageManagerService, sSnapshotPendingVersion, <Application,Ljava/util/concurrent/atomic/AtomicInteger> >,
conditional branch(eq, to iindex=-1) 9,5,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotLock, <Application,Ljava/lang/Object> > 1,
monitorenter 17,
20 = checkcast <Application,Lcom/android/server/pm/Computer>19 <Application,Lcom/android/server/pm/Computer>,
conditional branch(eq, to iindex=-1) 20,5,
conditional branch(ne, to iindex=-1) 24,22,
27 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mLock, <Application,Lcom/android/server/pm/PackageManagerTracedLock> > 1,
monitorenter 27,
31 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, rebuildSnapshot(Lcom/android/server/pm/Computer;I)Lcom/android/server/pm/Computer; > 1,20,29 @72 exception:30,
conditional branch(ne, to iindex=-1) 2,6,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = new <Application,Lcom/android/server/pm/PackageManagerService$Snapshot>@13,
16 = new <Application,Lcom/android/server/pm/ComputerEngine>@19,
20 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mSnapshotStatistics, <Application,Lcom/android/server/pm/SnapshotStatistics> > 1,
conditional branch(eq, to iindex=-1) 20,6,
return 16,
monitorexit 27,
monitorexit 17,
return 34,
conditional branch(eq, to iindex=-1) 12,13,
conditional branch(eq, to iindex=-1) 28,13,
30 = phi  29,13,
31 = binaryop(or) 26 , 30,
conditional branch(eq, to iindex=-1) 33,13,
35 = phi  13,34,
36 = binaryop(or) 31 , 35,
return 36,","depth : 0
public int getLocationFlags(String p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Computer v3 = this.mPm.snapshotComputer();
	ApplicationInfo v4 = v3.getApplicationInfo(p1, 0, v2);
	boolean v5 = v4.isSystemApp();
	boolean v6 = v4.isVendor();
	boolean v7 = v4.isProduct();
	return ((v5 | phiInstruction) | phiInstruction);
}
-----
depth : 1
public Computer snapshotComputer(){
	boolean v1 = Thread.holdsLock(this.mLock);
	Object v2 = this.sSnapshot.get();
	int v3 = this.sSnapshotPendingVersion.get();
	int v4 = v2.getVersion();
	Object v5 = this.sSnapshot.get();
	int v6 = this.sSnapshotPendingVersion.get();
	int v7 = v5.getVersion();
	int v8 = this.sSnapshotPendingVersion.get();
	Computer v9 = p0.rebuildSnapshot(v5, v8);
	this.sSnapshot.set(v9);
	Computer v11 = v9.use();
	return v11;
}
-----
depth : 2
public Computer rebuildSnapshot(Computer p1, int p2){
	long v1 = SystemClock.currentTimeMicro();
	PackageManagerService$Snapshot v1 = new PackageManagerService$Snapshot(p0,2);
	ComputerEngine v2 = new ComputerEngine(v1,p2);
	long v4 = SystemClock.currentTimeMicro();
	this.mSnapshotStatistics.rebuild(v1, v4, phiInstruction);
	return v2;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","getModuleMetadataPackageName()Ljava/lang/String;","0","2 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, getModuleMetadataPackageName()Ljava/lang/String; > 2 @2 exception:3,
return 4,","depth : 0
public String getModuleMetadataPackageName(){
	String v1 = this.mPm.getModuleMetadataPackageName();
	return v1;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getModuleMetadataPackageName()Ljava/lang/String;","1","2 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, getModuleMetadataPackageName()Ljava/lang/String; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mModuleInfoProvider, <Application,Lcom/android/server/pm/ModuleInfoProvider> > 1,
4 = invokevirtual < Application, Lcom/android/server/pm/ModuleInfoProvider, getPackageName()Ljava/lang/String; > 2 @2 exception:3,
return 4,
return 4,","depth : 0
public String getModuleMetadataPackageName(){
	String v1 = this.mPm.getModuleMetadataPackageName();
	return v1;
}
-----
depth : 1
public String getModuleMetadataPackageName(){
	String v1 = this.mModuleInfoProvider.getPackageName();
	return v1;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","getModuleMetadataPackageName()Ljava/lang/String;","2","2 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, getModuleMetadataPackageName()Ljava/lang/String; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mModuleInfoProvider, <Application,Lcom/android/server/pm/ModuleInfoProvider> > 1,
4 = invokevirtual < Application, Lcom/android/server/pm/ModuleInfoProvider, getPackageName()Ljava/lang/String; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/pm/ModuleInfoProvider, mMetadataLoaded, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 2,3,
7 = getfield < Application, Lcom/android/server/pm/ModuleInfoProvider, mPackageName, <Application,Ljava/lang/String> > 1,
return 7,
return 4,
return 4,","depth : 0
public String getModuleMetadataPackageName(){
	String v1 = this.mPm.getModuleMetadataPackageName();
	return v1;
}
-----
depth : 1
public String getModuleMetadataPackageName(){
	String v1 = this.mModuleInfoProvider.getPackageName();
	return v1;
}
-----
depth : 2
public String getPackageName(){
	return this.mPackageName;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","hasSystemFeature(Ljava/lang/String;I)Z","0","4 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, hasSystemFeature(Ljava/lang/String;I)Z > 4,2,3 @2 exception:5,
return 6,","depth : 0
public boolean hasSystemFeature(String p1, int p2){
	boolean v1 = this.mPm.hasSystemFeature(p1, p2);
	return v1;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","hasSystemFeature(Ljava/lang/String;I)Z","1","4 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageManagerService, hasSystemFeature(Ljava/lang/String;I)Z > 4,2,3 @2 exception:5,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mAvailableFeatures, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mAvailableFeatures, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Landroid/content/pm/FeatureInfo>7 <Application,Landroid/content/pm/FeatureInfo>,
conditional branch(ne, to iindex=-1) 8,9,
monitorexit 4,
return 9,
return 6,","depth : 0
public boolean hasSystemFeature(String p1, int p2){
	boolean v1 = this.mPm.hasSystemFeature(p1, p2);
	return v1;
}
-----
depth : 1
public boolean hasSystemFeature(String p1, int p2){
	Object v1 = this.mAvailableFeatures.get(p1);
	return 0;
}
-----
","NONE"

"Lcom/android/server/pm/PackageManagerNative","unregisterStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V","0","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
invokevirtual < Application, Lcom/android/server/pm/StagingManager, unregisterStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V > 6,2 @8 exception:7,
return,","depth : 0
public void unregisterStagedApexObserver(IStagedApexObserver p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	v1.unregisterStagedApexObserver(p1);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/PackageManagerNative","unregisterStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V","1","3 = getfield < Application, Lcom/android/server/pm/PackageManagerNative, mPm, <Application,Lcom/android/server/pm/PackageManagerService> > 1,
4 = getfield < Application, Lcom/android/server/pm/PackageManagerService, mInstallerService, <Application,Lcom/android/server/pm/PackageInstallerService> > 3,
6 = invokevirtual < Application, Lcom/android/server/pm/PackageInstallerService, getStagingManager()Lcom/android/server/pm/StagingManager; > 4 @4 exception:5,
2 = getfield < Application, Lcom/android/server/pm/PackageInstallerService, mStagingManager, <Application,Lcom/android/server/pm/StagingManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/pm/StagingManager, unregisterStagedApexObserver(Landroid/content/pm/IStagedApexObserver;)V > 6,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/StagingManager, mStagedApexObservers, <Application,Ljava/util/List> > 1,
monitorexit 3,
return,
return,","depth : 0
public void unregisterStagedApexObserver(IStagedApexObserver p1){
	StagingManager v1 = PackageManagerService.mInstallerService.getStagingManager();
	v1.unregisterStagedApexObserver(p1);
	return;
}
-----
depth : 1
public StagingManager getStagingManager(){
	return this.mStagingManager;
}
-----
depth : 1
public void unregisterStagedApexObserver(IStagedApexObserver p1){
	boolean v1 = this.mStagedApexObservers.remove(p1);
	return;
}
-----
","NONE"

