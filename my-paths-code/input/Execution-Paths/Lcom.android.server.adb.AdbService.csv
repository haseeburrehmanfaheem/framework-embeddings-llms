"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/adb/AdbService","denyWirelessDebugging()V","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, denyWirelessDebugging()V > 6 @12 exception:7,
return,","depth : 0
public void denyWirelessDebugging(){
	this.mDebuggingManager.denyWirelessDebugging();
	return;
}
-----
","public void denyWirelessDebugging(){
	this.mDebuggingManager.denyWirelessDebugging();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","denyWirelessDebugging()V","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, denyWirelessDebugging()V > 6 @12 exception:7,
2 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
5 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessage(I)Z > 2,3 @4 exception:4,
return,
return,","depth : 0
public void denyWirelessDebugging(){
	this.mDebuggingManager.denyWirelessDebugging();
	return;
}
-----
depth : 1
public void denyWirelessDebugging(){
	boolean v1 = this.mHandler.sendEmptyMessage(19);
	return;
}
-----
","public void denyWirelessDebugging(){
	boolean v3 = this.mHandler.sendEmptyMessage(19);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","unregisterCallback(Landroid/debug/IAdbCallback;)V","0","3 = getfield < Application, Lcom/android/server/adb/AdbService, mCallbacks, <Application,Landroid/os/RemoteCallbackList> > 1,
5 = invokevirtual < Application, Landroid/os/RemoteCallbackList, unregister(Landroid/os/IInterface;)Z > 3,2 @2 exception:4,
return,","depth : 0
public void unregisterCallback(IAdbCallback p1){
	boolean v1 = this.mCallbacks.unregister(p1);
	return;
}
-----
","public void unregisterCallback(IAdbCallback p1){
	boolean v1 = this.mCallbacks.unregister(p1);
	return;
}
","NONE"

"Lcom/android/server/adb/AdbService","getAdbWirelessPort()I","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
11 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getAdbWirelessPort()I > 6 @12 exception:10,
return 11,","depth : 0
public int getAdbWirelessPort(){
	int v2 = this.mDebuggingManager.getAdbWirelessPort();
	return v2;
}
-----
","public int getAdbWirelessPort(){
	int v2 = this.mDebuggingManager.getAdbWirelessPort();
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","getAdbWirelessPort()I","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
11 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getAdbWirelessPort()I > 6 @12 exception:10,
3 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getAdbConnectionInfo()Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
return 4,
return 11,","depth : 0
public int getAdbWirelessPort(){
	int v2 = this.mDebuggingManager.getAdbWirelessPort();
	return v2;
}
-----
depth : 1
public int getAdbWirelessPort(){
	AdbDebuggingManager$AdbConnectionInfo v1 = p0.getAdbConnectionInfo();
	return 0;
}
-----
","public int getAdbWirelessPort(){
	AdbDebuggingManager$AdbConnectionInfo v3 = AdbDebuggingManager.getAdbConnectionInfo();
	int v2 = 0;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","getAdbWirelessPort()I","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
11 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getAdbWirelessPort()I > 6 @12 exception:10,
3 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getAdbConnectionInfo()Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo, getPort()I > 3 @8 exception:5,
return 6,
return 11,","depth : 0
public int getAdbWirelessPort(){
	int v2 = this.mDebuggingManager.getAdbWirelessPort();
	return v2;
}
-----
depth : 1
public int getAdbWirelessPort(){
	AdbDebuggingManager$AdbConnectionInfo v1 = p0.getAdbConnectionInfo();
	int v2 = v1.getPort();
	return v2;
}
-----
","public int getAdbWirelessPort(){
	AdbDebuggingManager$AdbConnectionInfo v3 = AdbDebuggingManager.getAdbConnectionInfo();
	int v4 = v3.getPort();
	int v2 = v4;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","getAdbWirelessPort()I","2","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
11 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getAdbWirelessPort()I > 6 @12 exception:10,
3 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getAdbConnectionInfo()Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo; > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mAdbConnectionInfo, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo> > 1,
monitorenter 2,
3 = new <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo>@3,
4 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mAdbConnectionInfo, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo> > 1,
invokespecial < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo, <init>(Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo;)V > 3,4 @7 exception:5,
monitorexit 2,
return 3,
conditional branch(ne, to iindex=-1) 3,4,
return 4,
return 11,","depth : 0
public int getAdbWirelessPort(){
	int v2 = this.mDebuggingManager.getAdbWirelessPort();
	return v2;
}
-----
depth : 1
public int getAdbWirelessPort(){
	AdbDebuggingManager$AdbConnectionInfo v1 = p0.getAdbConnectionInfo();
	return 0;
}
-----
depth : 2
public AdbDebuggingManager$AdbConnectionInfo getAdbConnectionInfo(){
	AdbDebuggingManager$AdbConnectionInfo v0 = new AdbDebuggingManager$AdbConnectionInfo(this.mAdbConnectionInfo);
	return v0;
}
-----
","public int getAdbWirelessPort(){
	AdbDebuggingManager$AdbConnectionInfo v4 = new AdbDebuggingManager$AdbConnectionInfo(this.mAdbConnectionInfo);
	AdbDebuggingManager$AdbConnectionInfo v3 = v4;
	int v2 = 0;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","getAdbWirelessPort()I","2","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
11 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getAdbWirelessPort()I > 6 @12 exception:10,
3 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getAdbConnectionInfo()Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo; > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mAdbConnectionInfo, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo> > 1,
monitorenter 2,
3 = new <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo>@3,
4 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mAdbConnectionInfo, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo> > 1,
invokespecial < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo, <init>(Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo;)V > 3,4 @7 exception:5,
monitorexit 2,
return 3,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo, getPort()I > 3 @8 exception:5,
2 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbConnectionInfo, mPort, <Primordial,I> > 1,
return 2,
return 6,
return 11,","depth : 0
public int getAdbWirelessPort(){
	int v2 = this.mDebuggingManager.getAdbWirelessPort();
	return v2;
}
-----
depth : 1
public int getAdbWirelessPort(){
	AdbDebuggingManager$AdbConnectionInfo v1 = p0.getAdbConnectionInfo();
	int v2 = v1.getPort();
	return v2;
}
-----
depth : 2
public AdbDebuggingManager$AdbConnectionInfo getAdbConnectionInfo(){
	AdbDebuggingManager$AdbConnectionInfo v0 = new AdbDebuggingManager$AdbConnectionInfo(this.mAdbConnectionInfo);
	return v0;
}
-----
depth : 2
public int getPort(){
	return this.mPort;
}
-----
","public int getAdbWirelessPort(){
	AdbDebuggingManager$AdbConnectionInfo v4 = new AdbDebuggingManager$AdbConnectionInfo(this.mAdbConnectionInfo);
	AdbDebuggingManager$AdbConnectionInfo v3 = v4;
	int v6 = this.mPort;
	int v2 = v6;
	return v2;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","enablePairingByPairingCode()V","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, enablePairingByPairingCode()V > 6 @12 exception:7,
return,","depth : 0
public void enablePairingByPairingCode(){
	this.mDebuggingManager.enablePairingByPairingCode();
	return;
}
-----
","public void enablePairingByPairingCode(){
	this.mDebuggingManager.enablePairingByPairingCode();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","enablePairingByPairingCode()V","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, enablePairingByPairingCode()V > 6 @12 exception:7,
2 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
5 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessage(I)Z > 2,3 @4 exception:4,
return,
return,","depth : 0
public void enablePairingByPairingCode(){
	this.mDebuggingManager.enablePairingByPairingCode();
	return;
}
-----
depth : 1
public void enablePairingByPairingCode(){
	boolean v1 = this.mHandler.sendEmptyMessage(15);
	return;
}
-----
","public void enablePairingByPairingCode(){
	boolean v3 = this.mHandler.sendEmptyMessage(15);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","enablePairingByQrCode(Ljava/lang/String;Ljava/lang/String;)V","0","4 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 2 @8 exception:8,
11 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 3 @11 exception:10,
12 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 12,6,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, enablePairingByQrCode(Ljava/lang/String;Ljava/lang/String;)V > 12,2,3 @18 exception:13,
return,","depth : 0
public void enablePairingByQrCode(String p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p1);
	CharSequence v3 = Preconditions.checkStringNotEmpty(p2);
	this.mDebuggingManager.enablePairingByQrCode(p1, p2);
	return;
}
-----
","public void enablePairingByQrCode(String p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p1);
	CharSequence v3 = Preconditions.checkStringNotEmpty(p2);
	this.mDebuggingManager.enablePairingByQrCode(p1, p2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","enablePairingByQrCode(Ljava/lang/String;Ljava/lang/String;)V","1","4 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 2 @8 exception:8,
11 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 3 @11 exception:10,
12 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 12,6,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, enablePairingByQrCode(Ljava/lang/String;Ljava/lang/String;)V > 12,2,3 @18 exception:13,
4 = new <Application,Landroid/os/Bundle>@0,
invokespecial < Application, Landroid/os/Bundle, <init>()V > 4 @2 exception:5,
invokevirtual < Application, Landroid/os/Bundle, putString(Ljava/lang/String;Ljava/lang/String;)V > 4,6,2 @8 exception:7,
invokevirtual < Application, Landroid/os/Bundle, putString(Ljava/lang/String;Ljava/lang/String;)V > 4,8,3 @14 exception:9,
10 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
13 = invokestatic < Application, Landroid/os/Message, obtain(Landroid/os/Handler;ILjava/lang/Object;)Landroid/os/Message; > 10,11,4 @21 exception:12,
14 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
16 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 14,13 @27 exception:15,
return,
return,","depth : 0
public void enablePairingByQrCode(String p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p1);
	CharSequence v3 = Preconditions.checkStringNotEmpty(p2);
	this.mDebuggingManager.enablePairingByQrCode(p1, p2);
	return;
}
-----
depth : 1
public void enablePairingByQrCode(String p1, String p2){
	Bundle v0 = new Bundle();
	v0.putString(""serviceName"", p1);
	v0.putString(""password"", p2);
	Message v4 = Message.obtain(this.mHandler, 16, v0);
	boolean v5 = this.mHandler.sendMessage(v4);
	return;
}
-----
","public void enablePairingByQrCode(String p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p1);
	CharSequence v3 = Preconditions.checkStringNotEmpty(p2);
	Bundle v5 = new Bundle();
	v5.putString(""serviceName"", p1);
	v5.putString(""password"", p2);
	Message v9 = Message.obtain(this.mHandler, 16, v5);
	boolean v10 = this.mHandler.sendMessage(v9);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","isAdbWifiQrSupported()Z","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
7 = invokevirtual < Application, Lcom/android/server/adb/AdbService, isAdbWifiSupported()Z > 1 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
11 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 9 @17 exception:10,
14 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 11,12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
goto (from iindex= 15 to iindex = 2),
21 = phi  19,8,
return 21,","depth : 0
public boolean isAdbWifiQrSupported(){
	boolean v2 = p0.isAdbWifiSupported();
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.camera.any"");
	return phiInstruction;
}
-----
","public boolean isAdbWifiQrSupported(){
	boolean v2 = p0.isAdbWifiSupported();
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.camera.any"");
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","isAdbWifiQrSupported()Z","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
7 = invokevirtual < Application, Lcom/android/server/adb/AdbService, isAdbWifiSupported()Z > 1 @9 exception:6,
2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
15 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 13 @25 exception:14,
18 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 15,16 @31 exception:17,
conditional branch(eq, to iindex=-1) 18,12,
goto (from iindex= 18 to iindex = 3),
25 = phi  12,23,
return 25,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
11 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 9 @17 exception:10,
14 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 11,12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
goto (from iindex= 15 to iindex = 2),
21 = phi  19,8,
return 21,","depth : 0
public boolean isAdbWifiQrSupported(){
	boolean v2 = p0.isAdbWifiSupported();
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.camera.any"");
	return phiInstruction;
}
-----
depth : 1
public boolean isAdbWifiSupported(){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.wifi"");
	PackageManager v4 = this.mContext.getPackageManager();
	boolean v5 = v4.hasSystemFeature(""android.hardware.ethernet"");
	return phiInstruction;
}
-----
","public boolean isAdbWifiQrSupported(){
	PackageManager v4 = this.mContext.getPackageManager();
	boolean v5 = v4.hasSystemFeature(""android.hardware.wifi"");
	PackageManager v6 = this.mContext.getPackageManager();
	boolean v7 = v6.hasSystemFeature(""android.hardware.ethernet"");
	boolean v2 = phiInstruction;
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.hardware.camera.any"");
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","isAdbWifiQrSupported()Z","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
7 = invokevirtual < Application, Lcom/android/server/adb/AdbService, isAdbWifiSupported()Z > 1 @9 exception:6,
2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
15 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 13 @25 exception:14,
18 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 15,16 @31 exception:17,
conditional branch(eq, to iindex=-1) 18,12,
goto (from iindex= 20 to iindex = 2),
25 = phi  12,23,
return 25,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
11 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 9 @17 exception:10,
14 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 11,12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,8,
goto (from iindex= 15 to iindex = 2),
21 = phi  19,8,
return 21,","depth : 0
public boolean isAdbWifiQrSupported(){
	boolean v2 = p0.isAdbWifiSupported();
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.camera.any"");
	return phiInstruction;
}
-----
depth : 1
public boolean isAdbWifiSupported(){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.wifi"");
	PackageManager v4 = this.mContext.getPackageManager();
	boolean v5 = v4.hasSystemFeature(""android.hardware.ethernet"");
	return phiInstruction;
}
-----
","public boolean isAdbWifiQrSupported(){
	PackageManager v4 = this.mContext.getPackageManager();
	boolean v5 = v4.hasSystemFeature(""android.hardware.wifi"");
	PackageManager v6 = this.mContext.getPackageManager();
	boolean v7 = v6.hasSystemFeature(""android.hardware.ethernet"");
	boolean v2 = phiInstruction;
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.hardware.camera.any"");
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","allowWirelessDebugging(ZLjava/lang/String;)V","0","4 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 3 @8 exception:8,
10 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 10,6,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, allowWirelessDebugging(ZLjava/lang/String;)V > 10,2,3 @15 exception:11,
return,","depth : 0
public void allowWirelessDebugging(boolean p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p2);
	this.mDebuggingManager.allowWirelessDebugging(p1, p2);
	return;
}
-----
","public void allowWirelessDebugging(boolean p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p2);
	this.mDebuggingManager.allowWirelessDebugging(p1, p2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","allowWirelessDebugging(ZLjava/lang/String;)V","1","4 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 3 @8 exception:8,
10 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 10,6,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, allowWirelessDebugging(ZLjava/lang/String;)V > 10,2,3 @15 exception:11,
4 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(I)Landroid/os/Message; > 4,5 @4 exception:6,
putfield 7.< Application, Landroid/os/Message, arg1, <Primordial,I> > = 2,
putfield 7.< Application, Landroid/os/Message, obj, <Application,Ljava/lang/Object> > = 3,
8 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
10 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 8,7 @14 exception:9,
return,
return,","depth : 0
public void allowWirelessDebugging(boolean p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p2);
	this.mDebuggingManager.allowWirelessDebugging(p1, p2);
	return;
}
-----
depth : 1
public void allowWirelessDebugging(boolean p1, String p2){
	Message v1 = this.mHandler.obtainMessage(18);
	Message.arg1 = p1;
	Message.obj = p2;
	boolean v2 = this.mHandler.sendMessage(v1);
	return;
}
-----
","public void allowWirelessDebugging(boolean p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p2);
	Message v4 = this.mHandler.obtainMessage(18);
	Message.arg1 = p1;
	Message.obj = p2;
	boolean v5 = this.mHandler.sendMessage(v4);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","disablePairing()V","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, disablePairing()V > 6 @12 exception:7,
return,","depth : 0
public void disablePairing(){
	this.mDebuggingManager.disablePairing();
	return;
}
-----
","public void disablePairing(){
	this.mDebuggingManager.disablePairing();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","disablePairing()V","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, disablePairing()V > 6 @12 exception:7,
2 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
5 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessage(I)Z > 2,3 @4 exception:4,
return,
return,","depth : 0
public void disablePairing(){
	this.mDebuggingManager.disablePairing();
	return;
}
-----
depth : 1
public void disablePairing(){
	boolean v1 = this.mHandler.sendEmptyMessage(14);
	return;
}
-----
","public void disablePairing(){
	boolean v3 = this.mHandler.sendEmptyMessage(14);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","unpairDevice(Ljava/lang/String;)V","0","3 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @5 exception:6,
8 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 2 @8 exception:7,
9 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 9,5,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, unpairDevice(Ljava/lang/String;)V > 9,2 @15 exception:10,
return,","depth : 0
public void unpairDevice(String p1){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p1);
	this.mDebuggingManager.unpairDevice(p1);
	return;
}
-----
","public void unpairDevice(String p1){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p1);
	this.mDebuggingManager.unpairDevice(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","unpairDevice(Ljava/lang/String;)V","1","3 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @5 exception:6,
8 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 2 @8 exception:7,
9 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 9,5,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, unpairDevice(Ljava/lang/String;)V > 9,2 @15 exception:10,
3 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
6 = invokestatic < Application, Landroid/os/Message, obtain(Landroid/os/Handler;ILjava/lang/Object;)Landroid/os/Message; > 3,4,2 @4 exception:5,
7 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
9 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 7,6 @10 exception:8,
return,
return,","depth : 0
public void unpairDevice(String p1){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p1);
	this.mDebuggingManager.unpairDevice(p1);
	return;
}
-----
depth : 1
public void unpairDevice(String p1){
	Message v1 = Message.obtain(this.mHandler, 17, p1);
	boolean v2 = this.mHandler.sendMessage(v1);
	return;
}
-----
","public void unpairDevice(String p1){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p1);
	Message v4 = Message.obtain(this.mHandler, 17, p1);
	boolean v5 = this.mHandler.sendMessage(v4);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","denyDebugging()V","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, denyDebugging()V > 6 @12 exception:7,
return,","depth : 0
public void denyDebugging(){
	this.mDebuggingManager.denyDebugging();
	return;
}
-----
","public void denyDebugging(){
	this.mDebuggingManager.denyDebugging();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","denyDebugging()V","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, denyDebugging()V > 6 @12 exception:7,
2 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
5 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessage(I)Z > 2,3 @3 exception:4,
return,
return,","depth : 0
public void denyDebugging(){
	this.mDebuggingManager.denyDebugging();
	return;
}
-----
depth : 1
public void denyDebugging(){
	boolean v1 = this.mHandler.sendEmptyMessage(4);
	return;
}
-----
","public void denyDebugging(){
	boolean v3 = this.mHandler.sendEmptyMessage(4);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","clearDebuggingKeys()V","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, clearDebuggingKeys()V > 6 @12 exception:10,
return,","depth : 0
public void clearDebuggingKeys(){
	this.mDebuggingManager.clearDebuggingKeys();
	return;
}
-----
","public void clearDebuggingKeys(){
	this.mDebuggingManager.clearDebuggingKeys();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","clearDebuggingKeys()V","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 6,4,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, clearDebuggingKeys()V > 6 @12 exception:10,
2 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
5 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessage(I)Z > 2,3 @3 exception:4,
return,
return,","depth : 0
public void clearDebuggingKeys(){
	this.mDebuggingManager.clearDebuggingKeys();
	return;
}
-----
depth : 1
public void clearDebuggingKeys(){
	boolean v1 = this.mHandler.sendEmptyMessage(6);
	return;
}
-----
","public void clearDebuggingKeys(){
	boolean v3 = this.mHandler.sendEmptyMessage(6);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","getPairedDevices()[Landroid/debug/FingerprintAndPairDevice;","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getPairedDevices()Ljava/util/Map; > 6 @13 exception:7,
10 = invokeinterface < Application, Ljava/util/Map, size()I > 8 @17 exception:9,
11 = new <Application,[Landroid/debug/FingerprintAndPairDevice>@2110 ,
13 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 8 @24 exception:12,
15 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 13 @28 exception:14,
32 = phi  31,4,
17 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 15 @32 exception:16,
conditional branch(eq, to iindex=-1) 17,4,
return 11,","depth : 0
public FingerprintAndPairDevice getPairedDevices(){
	Map v2 = this.mDebuggingManager.getPairedDevices();
	int v3 = v2.size();
	FingerprintAndPairDevice v3 = new FingerprintAndPairDevice(v3);
	Set v4 = v2.entrySet();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	return v3;
}
-----
","public FingerprintAndPairDevice getPairedDevices(){
	Map v2 = this.mDebuggingManager.getPairedDevices();
	int v3 = v2.size();
	FingerprintAndPairDevice v4 = new FingerprintAndPairDevice(v3);
	Set v5 = v2.entrySet();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","getPairedDevices()[Landroid/debug/FingerprintAndPairDevice;","1","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getPairedDevices()Ljava/util/Map; > 6 @13 exception:7,
2 = new <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbKeyStore>@0,
invokespecial < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbKeyStore, <init>(Lcom/android/server/adb/AdbDebuggingManager;)V > 2,1 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbKeyStore, getPairedDevices()Ljava/util/Map; > 2 @5 exception:4,
return 5,
10 = invokeinterface < Application, Ljava/util/Map, size()I > 8 @17 exception:9,
11 = new <Application,[Landroid/debug/FingerprintAndPairDevice>@2110 ,
13 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 8 @24 exception:12,
15 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 13 @28 exception:14,
32 = phi  31,4,
17 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 15 @32 exception:16,
conditional branch(eq, to iindex=-1) 17,4,
return 11,","depth : 0
public FingerprintAndPairDevice getPairedDevices(){
	Map v2 = this.mDebuggingManager.getPairedDevices();
	int v3 = v2.size();
	FingerprintAndPairDevice v3 = new FingerprintAndPairDevice(v3);
	Set v4 = v2.entrySet();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	return v3;
}
-----
depth : 1
public Map getPairedDevices(){
	AdbDebuggingManager$AdbKeyStore v0 = new AdbDebuggingManager$AdbKeyStore(p0);
	Map v2 = v0.getPairedDevices();
	return v2;
}
-----
","public FingerprintAndPairDevice getPairedDevices(){
	AdbDebuggingManager$AdbKeyStore v3 = new AdbDebuggingManager$AdbKeyStore(AdbDebuggingManager);
	Map v5 = v3.getPairedDevices();
	Map v2 = v5;
	int v6 = v2.size();
	FingerprintAndPairDevice v7 = new FingerprintAndPairDevice(v6);
	Set v8 = v2.entrySet();
	Iterator v9 = v8.iterator();
	boolean v10 = v9.hasNext();
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","getPairedDevices()[Landroid/debug/FingerprintAndPairDevice;","2","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @5 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, getPairedDevices()Ljava/util/Map; > 6 @13 exception:7,
2 = new <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbKeyStore>@0,
invokespecial < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbKeyStore, <init>(Lcom/android/server/adb/AdbDebuggingManager;)V > 2,1 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbKeyStore, getPairedDevices()Ljava/util/Map; > 2 @5 exception:4,
2 = new <Application,Ljava/util/HashMap>@0,
invokespecial < Application, Ljava/util/HashMap, <init>()V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager$AdbKeyStore, mKeyMap, <Application,Ljava/util/Map> > 1,
6 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 4 @7 exception:5,
8 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 6 @11 exception:7,
10 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 8 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
return 2,
return 5,
10 = invokeinterface < Application, Ljava/util/Map, size()I > 8 @17 exception:9,
11 = new <Application,[Landroid/debug/FingerprintAndPairDevice>@2110 ,
13 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 8 @24 exception:12,
15 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 13 @28 exception:14,
32 = phi  31,4,
17 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 15 @32 exception:16,
conditional branch(eq, to iindex=-1) 17,4,
return 11,","depth : 0
public FingerprintAndPairDevice getPairedDevices(){
	Map v2 = this.mDebuggingManager.getPairedDevices();
	int v3 = v2.size();
	FingerprintAndPairDevice v3 = new FingerprintAndPairDevice(v3);
	Set v4 = v2.entrySet();
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	return v3;
}
-----
depth : 1
public Map getPairedDevices(){
	AdbDebuggingManager$AdbKeyStore v0 = new AdbDebuggingManager$AdbKeyStore(p0);
	Map v2 = v0.getPairedDevices();
	return v2;
}
-----
depth : 2
public Map getPairedDevices(){
	HashMap v0 = new HashMap();
	Set v2 = this.mKeyMap.entrySet();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	return v0;
}
-----
","public FingerprintAndPairDevice getPairedDevices(){
	AdbDebuggingManager$AdbKeyStore v3 = new AdbDebuggingManager$AdbKeyStore(AdbDebuggingManager);
	HashMap v6 = new HashMap();
	Set v8 = this.mKeyMap.entrySet();
	Iterator v9 = v8.iterator();
	boolean v10 = v9.hasNext();
	Map v5 = v6;
	Map v2 = v5;
	int v11 = v2.size();
	FingerprintAndPairDevice v12 = new FingerprintAndPairDevice(v11);
	Set v13 = v2.entrySet();
	Iterator v14 = v13.iterator();
	boolean v15 = v14.hasNext();
	return v12;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","allowDebugging(ZLjava/lang/String;)V","0","4 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 3 @8 exception:8,
10 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 10,6,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, allowDebugging(ZLjava/lang/String;)V > 10,2,3 @15 exception:11,
return,","depth : 0
public void allowDebugging(boolean p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p2);
	this.mDebuggingManager.allowDebugging(p1, p2);
	return;
}
-----
","public void allowDebugging(boolean p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p2);
	this.mDebuggingManager.allowDebugging(p1, p2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","allowDebugging(ZLjava/lang/String;)V","1","4 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkStringNotEmpty(Ljava/lang/CharSequence;)Ljava/lang/CharSequence; > 3 @8 exception:8,
10 = getfield < Application, Lcom/android/server/adb/AdbService, mDebuggingManager, <Application,Lcom/android/server/adb/AdbDebuggingManager> > 1,
conditional branch(eq, to iindex=-1) 10,6,
invokevirtual < Application, Lcom/android/server/adb/AdbDebuggingManager, allowDebugging(ZLjava/lang/String;)V > 10,2,3 @15 exception:11,
4 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(I)Landroid/os/Message; > 4,5 @3 exception:6,
putfield 7.< Application, Landroid/os/Message, arg1, <Primordial,I> > = 2,
putfield 7.< Application, Landroid/os/Message, obj, <Application,Ljava/lang/Object> > = 3,
8 = getfield < Application, Lcom/android/server/adb/AdbDebuggingManager, mHandler, <Application,Lcom/android/server/adb/AdbDebuggingManager$AdbDebuggingHandler> > 1,
10 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 8,7 @13 exception:9,
return,
return,","depth : 0
public void allowDebugging(boolean p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p2);
	this.mDebuggingManager.allowDebugging(p1, p2);
	return;
}
-----
depth : 1
public void allowDebugging(boolean p1, String p2){
	Message v1 = this.mHandler.obtainMessage(3);
	Message.arg1 = p1;
	Message.obj = p2;
	boolean v2 = this.mHandler.sendMessage(v1);
	return;
}
-----
","public void allowDebugging(boolean p1, String p2){
	CharSequence v2 = Preconditions.checkStringNotEmpty(p2);
	Message v4 = this.mHandler.obtainMessage(3);
	Message.arg1 = p1;
	Message.obj = p2;
	boolean v5 = this.mHandler.sendMessage(v4);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","isAdbWifiSupported()Z","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
15 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 13 @25 exception:14,
18 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 15,16 @31 exception:17,
conditional branch(eq, to iindex=-1) 18,12,
goto (from iindex= 18 to iindex = 3),
25 = phi  12,23,
return 25,","depth : 0
public boolean isAdbWifiSupported(){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.wifi"");
	PackageManager v4 = this.mContext.getPackageManager();
	boolean v5 = v4.hasSystemFeature(""android.hardware.ethernet"");
	return phiInstruction;
}
-----
","public boolean isAdbWifiSupported(){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.wifi"");
	PackageManager v4 = this.mContext.getPackageManager();
	boolean v5 = v4.hasSystemFeature(""android.hardware.ethernet"");
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","isAdbWifiSupported()Z","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
15 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 13 @25 exception:14,
18 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 15,16 @31 exception:17,
conditional branch(eq, to iindex=-1) 18,12,
goto (from iindex= 20 to iindex = 2),
25 = phi  12,23,
return 25,","depth : 0
public boolean isAdbWifiSupported(){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.wifi"");
	PackageManager v4 = this.mContext.getPackageManager();
	boolean v5 = v4.hasSystemFeature(""android.hardware.ethernet"");
	return phiInstruction;
}
-----
","public boolean isAdbWifiSupported(){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.wifi"");
	PackageManager v4 = this.mContext.getPackageManager();
	boolean v5 = v4.hasSystemFeature(""android.hardware.ethernet"");
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/adb/AdbService","isAdbWifiSupported()Z","0","2 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/adb/AdbService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
25 = phi  12,23,
return 25,","depth : 0
public boolean isAdbWifiSupported(){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.wifi"");
	return phiInstruction;
}
-----
","public boolean isAdbWifiSupported(){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.wifi"");
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/adb/AdbService","registerCallback(Landroid/debug/IAdbCallback;)V","0","3 = getfield < Application, Lcom/android/server/adb/AdbService, mCallbacks, <Application,Landroid/os/RemoteCallbackList> > 1,
5 = invokevirtual < Application, Landroid/os/RemoteCallbackList, register(Landroid/os/IInterface;)Z > 3,2 @2 exception:4,
return,","depth : 0
public void registerCallback(IAdbCallback p1){
	boolean v1 = this.mCallbacks.register(p1);
	return;
}
-----
","public void registerCallback(IAdbCallback p1){
	boolean v1 = this.mCallbacks.register(p1);
	return;
}
","NONE"

