"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernatingPackagesForUser(I)Ljava/util/List;","0","3 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
5 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernatingPackagesForUser(I)Ljava/util/List; > 3,2 @2 exception:4,
return 5,","depth : 0
public List getHibernatingPackagesForUser(int p1){
	List v1 = this.mService.getHibernatingPackagesForUser(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernatingPackagesForUser(I)Ljava/util/List;","1","3 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
5 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernatingPackagesForUser(I)Ljava/util/List; > 3,2 @2 exception:4,
14 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,2,5 @23 exception:13,
15 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
18 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,14,5,16 @31 exception:17,
conditional branch(ne, to iindex=-1) 18,7,
19 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
22 = checkcast <Application,Ljava/util/Map>21 <Application,Ljava/util/Map>,
conditional branch(eq, to iindex=-1) 28,7,
monitorexit 15,
return 3,
return 5,","depth : 0
public List getHibernatingPackagesForUser(int p1){
	List v1 = this.mService.getHibernatingPackagesForUser(p1);
	return v1;
}
-----
depth : 1
public List getHibernatingPackagesForUser(int p1){
	int v4 = p0.handleIncomingUser(p1, ""getHibernatingPackagesForUser"");
	boolean v5 = p0.checkUserStatesExist(v4, ""getHibernatingPackagesForUser"", 1);
	Object v6 = this.mUserStates.get(v4);
	Collection v7 = v6.values();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernatingPackagesForUser(I)Ljava/util/List;","2","3 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
5 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernatingPackagesForUser(I)Ljava/util/List; > 3,2 @2 exception:4,
14 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,2,5 @23 exception:13,
6 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mIActivityManager, <Application,Landroid/app/IActivityManager> > 1,
return 12,
15 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
18 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,14,5,16 @31 exception:17,
5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserManager, <Application,Landroid/os/UserManager> > 1,
conditional branch(ne, to iindex=-1) 7,10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 13,10,
conditional branch(eq, to iindex=-1) 4,10,
14 = new <Application,[Ljava/lang/Object>@459 ,
arraystore 14[10] = 3,
return 10,
conditional branch(ne, to iindex=-1) 18,7,
19 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
22 = checkcast <Application,Ljava/util/Map>21 <Application,Ljava/util/Map>,
conditional branch(eq, to iindex=-1) 28,7,
monitorexit 15,
return 3,
return 5,","depth : 0
public List getHibernatingPackagesForUser(int p1){
	List v1 = this.mService.getHibernatingPackagesForUser(p1);
	return v1;
}
-----
depth : 1
public List getHibernatingPackagesForUser(int p1){
	int v4 = p0.handleIncomingUser(p1, ""getHibernatingPackagesForUser"");
	boolean v5 = p0.checkUserStatesExist(v4, ""getHibernatingPackagesForUser"", 1);
	Object v6 = this.mUserStates.get(v4);
	Collection v7 = v6.values();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	return v0;
}
-----
depth : 2
public int handleIncomingUser(int p1, String p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = this.mIActivityManager.handleIncomingUser(v2, v1, p1, 0, 1, p2, 0);
	return v3;
}
-----
depth : 2
public boolean checkUserStatesExist(int p1, String p2, boolean p3){
	boolean v1 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
	boolean v2 = this.mUserStates.contains(p1);
	Object v2 = new Object(1);
	String v3 = TextUtils.formatSimple(""Attempt to call %s before states have been read from disk"", v2);
	int v4 = Slog.w(""AppHibernationService"", v3);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernatingPackagesForUser(I)Ljava/util/List;","2","3 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
5 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernatingPackagesForUser(I)Ljava/util/List; > 3,2 @2 exception:4,
14 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,2,5 @23 exception:13,
6 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mIActivityManager, <Application,Landroid/app/IActivityManager> > 1,
return 12,
15 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
18 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,14,5,16 @31 exception:17,
5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserManager, <Application,Landroid/os/UserManager> > 1,
conditional branch(ne, to iindex=-1) 7,10,
conditional branch(eq, to iindex=-1) 4,10,
25 = new <Application,[Ljava/lang/Object>@1524 ,
arraystore 25[10] = 3,
arraystore 25[9] = 27,
return 10,
conditional branch(ne, to iindex=-1) 18,7,
19 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
22 = checkcast <Application,Ljava/util/Map>21 <Application,Ljava/util/Map>,
conditional branch(eq, to iindex=-1) 28,7,
monitorexit 15,
return 3,
return 5,","depth : 0
public List getHibernatingPackagesForUser(int p1){
	List v1 = this.mService.getHibernatingPackagesForUser(p1);
	return v1;
}
-----
depth : 1
public List getHibernatingPackagesForUser(int p1){
	int v4 = p0.handleIncomingUser(p1, ""getHibernatingPackagesForUser"");
	boolean v5 = p0.checkUserStatesExist(v4, ""getHibernatingPackagesForUser"", 1);
	Object v6 = this.mUserStates.get(v4);
	Collection v7 = v6.values();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	return v0;
}
-----
depth : 2
public int handleIncomingUser(int p1, String p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = this.mIActivityManager.handleIncomingUser(v2, v1, p1, 0, 1, p2, 0);
	return v3;
}
-----
depth : 2
public boolean checkUserStatesExist(int p1, String p2, boolean p3){
	boolean v1 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
	Object v1 = new Object(2);
	Integer v2 = Integer.valueOf(p1);
	String v3 = TextUtils.formatSimple(""Attempt to call %s on stopped or nonexistent user %d"", v1);
	int v4 = Slog.w(""AppHibernationService"", v3);
	return 0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","isHibernatingForUser(Ljava/lang/String;I)Z","0","4 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
6 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, isHibernatingForUser(Ljava/lang/String;I)Z > 4,2,3 @2 exception:5,
return 6,","depth : 0
public boolean isHibernatingForUser(String p1, int p2){
	boolean v1 = this.mService.isHibernatingForUser(p1, p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","isHibernatingForUser(Ljava/lang/String;I)Z","1","4 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
6 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, isHibernatingForUser(Ljava/lang/String;I)Z > 4,2,3 @2 exception:5,
21 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,4 @34 exception:20,
22 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,21,4,6 @41 exception:23,
conditional branch(ne, to iindex=-1) 24,6,
25 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
28 = checkcast <Application,Ljava/util/Map>27 <Application,Ljava/util/Map>,
31 = checkcast <Application,Lcom/android/server/apphibernation/UserLevelState>30 <Application,Lcom/android/server/apphibernation/UserLevelState>,
conditional branch(eq, to iindex=-1) 31,6,
32 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 36,6,
goto (from iindex= 39 to iindex = 5),
monitorexit 22,
return 6,
return 6,","depth : 0
public boolean isHibernatingForUser(String p1, int p2){
	boolean v1 = this.mService.isHibernatingForUser(p1, p2);
	return v1;
}
-----
depth : 1
public boolean isHibernatingForUser(String p1, int p2){
	int v7 = p0.handleIncomingUser(p2, ""isHibernatingForUser"");
	boolean v8 = p0.checkUserStatesExist(v7, ""isHibernatingForUser"", 0);
	Object v9 = this.mUserStates.get(v7);
	Object v10 = v9.get(p1);
	int v11 = Binder.getCallingUid();
	boolean v12 = this.mPackageManagerInternal.canQueryPackage(v11, p1);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","isHibernatingForUser(Ljava/lang/String;I)Z","2","4 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
6 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, isHibernatingForUser(Ljava/lang/String;I)Z > 4,2,3 @2 exception:5,
21 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,4 @34 exception:20,
6 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mIActivityManager, <Application,Landroid/app/IActivityManager> > 1,
return 12,
22 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,21,4,6 @41 exception:23,
5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserManager, <Application,Landroid/os/UserManager> > 1,
conditional branch(ne, to iindex=-1) 7,10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 13,10,
conditional branch(eq, to iindex=-1) 4,10,
14 = new <Application,[Ljava/lang/Object>@459 ,
arraystore 14[10] = 3,
return 10,
conditional branch(ne, to iindex=-1) 24,6,
25 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
28 = checkcast <Application,Ljava/util/Map>27 <Application,Ljava/util/Map>,
31 = checkcast <Application,Lcom/android/server/apphibernation/UserLevelState>30 <Application,Lcom/android/server/apphibernation/UserLevelState>,
conditional branch(eq, to iindex=-1) 31,6,
32 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 36,6,
goto (from iindex= 39 to iindex = 5),
monitorexit 22,
return 6,
return 6,","depth : 0
public boolean isHibernatingForUser(String p1, int p2){
	boolean v1 = this.mService.isHibernatingForUser(p1, p2);
	return v1;
}
-----
depth : 1
public boolean isHibernatingForUser(String p1, int p2){
	int v7 = p0.handleIncomingUser(p2, ""isHibernatingForUser"");
	boolean v8 = p0.checkUserStatesExist(v7, ""isHibernatingForUser"", 0);
	Object v9 = this.mUserStates.get(v7);
	Object v10 = v9.get(p1);
	int v11 = Binder.getCallingUid();
	boolean v12 = this.mPackageManagerInternal.canQueryPackage(v11, p1);
	return 0;
}
-----
depth : 2
public int handleIncomingUser(int p1, String p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = this.mIActivityManager.handleIncomingUser(v2, v1, p1, 0, 1, p2, 0);
	return v3;
}
-----
depth : 2
public boolean checkUserStatesExist(int p1, String p2, boolean p3){
	boolean v1 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
	boolean v2 = this.mUserStates.contains(p1);
	Object v2 = new Object(1);
	String v3 = TextUtils.formatSimple(""Attempt to call %s before states have been read from disk"", v2);
	int v4 = Slog.w(""AppHibernationService"", v3);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","isHibernatingForUser(Ljava/lang/String;I)Z","2","4 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
6 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, isHibernatingForUser(Ljava/lang/String;I)Z > 4,2,3 @2 exception:5,
21 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,4 @34 exception:20,
6 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mIActivityManager, <Application,Landroid/app/IActivityManager> > 1,
return 12,
22 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,21,4,6 @41 exception:23,
5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserManager, <Application,Landroid/os/UserManager> > 1,
conditional branch(ne, to iindex=-1) 7,10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 13,10,
conditional branch(eq, to iindex=-1) 4,10,
14 = new <Application,[Ljava/lang/Object>@459 ,
arraystore 14[10] = 3,
return 10,
conditional branch(ne, to iindex=-1) 24,6,
25 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
28 = checkcast <Application,Ljava/util/Map>27 <Application,Ljava/util/Map>,
31 = checkcast <Application,Lcom/android/server/apphibernation/UserLevelState>30 <Application,Lcom/android/server/apphibernation/UserLevelState>,
conditional branch(eq, to iindex=-1) 31,6,
32 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 36,6,
37 = getfield < Application, Lcom/android/server/apphibernation/UserLevelState, hibernated, <Primordial,Z> > 31,
monitorexit 22,
return 37,
return 6,","depth : 0
public boolean isHibernatingForUser(String p1, int p2){
	boolean v1 = this.mService.isHibernatingForUser(p1, p2);
	return v1;
}
-----
depth : 1
public boolean isHibernatingForUser(String p1, int p2){
	int v7 = p0.handleIncomingUser(p2, ""isHibernatingForUser"");
	boolean v8 = p0.checkUserStatesExist(v7, ""isHibernatingForUser"", 0);
	Object v9 = this.mUserStates.get(v7);
	Object v10 = v9.get(p1);
	int v11 = Binder.getCallingUid();
	boolean v12 = this.mPackageManagerInternal.canQueryPackage(v11, p1);
	return UserLevelState.hibernated;
}
-----
depth : 2
public int handleIncomingUser(int p1, String p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = this.mIActivityManager.handleIncomingUser(v2, v1, p1, 0, 1, p2, 0);
	return v3;
}
-----
depth : 2
public boolean checkUserStatesExist(int p1, String p2, boolean p3){
	boolean v1 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
	boolean v2 = this.mUserStates.contains(p1);
	Object v2 = new Object(1);
	String v3 = TextUtils.formatSimple(""Attempt to call %s before states have been read from disk"", v2);
	int v4 = Slog.w(""AppHibernationService"", v3);
	return 0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernationStatsForUser(Ljava/util/List;I)Ljava/util/Map;","0","conditional branch(eq, to iindex=-1) 2,4,
5 = new <Application,Landroid/util/ArraySet>@2,
goto (from iindex= 3 to iindex = 2),
7 = phi  5,4,
8 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
10 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernationStatsForUser(Ljava/util/Set;I)Ljava/util/Map; > 8,7,3 @11 exception:9,
return 10,","depth : 0
public Map getHibernationStatsForUser(List p1, int p2){
	ArraySet v0 = new ArraySet(p1);
	Map v2 = this.mService.getHibernationStatsForUser(phiInstruction, p2);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernationStatsForUser(Ljava/util/List;I)Ljava/util/Map;","1","conditional branch(eq, to iindex=-1) 2,4,
5 = new <Application,Landroid/util/ArraySet>@2,
goto (from iindex= 3 to iindex = 2),
7 = phi  5,4,
8 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
10 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernationStatsForUser(Ljava/util/Set;I)Ljava/util/Map; > 8,7,3 @11 exception:9,
15 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,6 @23 exception:14,
16 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
19 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,15,6,17 @31 exception:18,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 16,
return 4,
return 10,","depth : 0
public Map getHibernationStatsForUser(List p1, int p2){
	ArraySet v0 = new ArraySet(p1);
	Map v2 = this.mService.getHibernationStatsForUser(phiInstruction, p2);
	return v2;
}
-----
depth : 1
public Map getHibernationStatsForUser(Set p1, int p2){
	int v4 = p0.handleIncomingUser(p2, ""getHibernationStatsForUser"");
	boolean v5 = p0.checkUserStatesExist(v4, ""getHibernationStatsForUser"", 1);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernationStatsForUser(Ljava/util/List;I)Ljava/util/Map;","1","conditional branch(eq, to iindex=-1) 2,4,
7 = phi  5,4,
8 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
10 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernationStatsForUser(Ljava/util/Set;I)Ljava/util/Map; > 8,7,3 @11 exception:9,
15 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,6 @23 exception:14,
16 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
19 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,15,6,17 @31 exception:18,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 16,
return 4,
return 10,","depth : 0
public Map getHibernationStatsForUser(List p1, int p2){
	Map v1 = this.mService.getHibernationStatsForUser(phiInstruction, p2);
	return v1;
}
-----
depth : 1
public Map getHibernationStatsForUser(Set p1, int p2){
	int v4 = p0.handleIncomingUser(p2, ""getHibernationStatsForUser"");
	boolean v5 = p0.checkUserStatesExist(v4, ""getHibernationStatsForUser"", 1);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernationStatsForUser(Ljava/util/List;I)Ljava/util/Map;","2","conditional branch(eq, to iindex=-1) 2,4,
5 = new <Application,Landroid/util/ArraySet>@2,
goto (from iindex= 3 to iindex = 2),
7 = phi  5,4,
8 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
10 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernationStatsForUser(Ljava/util/Set;I)Ljava/util/Map; > 8,7,3 @11 exception:9,
15 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,6 @23 exception:14,
6 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mIActivityManager, <Application,Landroid/app/IActivityManager> > 1,
return 12,
16 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
19 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,15,6,17 @31 exception:18,
5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserManager, <Application,Landroid/os/UserManager> > 1,
conditional branch(ne, to iindex=-1) 7,10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 13,10,
conditional branch(eq, to iindex=-1) 4,10,
14 = new <Application,[Ljava/lang/Object>@459 ,
arraystore 14[10] = 3,
return 10,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 16,
return 4,
return 10,","depth : 0
public Map getHibernationStatsForUser(List p1, int p2){
	ArraySet v0 = new ArraySet(p1);
	Map v2 = this.mService.getHibernationStatsForUser(phiInstruction, p2);
	return v2;
}
-----
depth : 1
public Map getHibernationStatsForUser(Set p1, int p2){
	int v4 = p0.handleIncomingUser(p2, ""getHibernationStatsForUser"");
	boolean v5 = p0.checkUserStatesExist(v4, ""getHibernationStatsForUser"", 1);
	return v0;
}
-----
depth : 2
public int handleIncomingUser(int p1, String p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = this.mIActivityManager.handleIncomingUser(v2, v1, p1, 0, 1, p2, 0);
	return v3;
}
-----
depth : 2
public boolean checkUserStatesExist(int p1, String p2, boolean p3){
	boolean v1 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
	boolean v2 = this.mUserStates.contains(p1);
	Object v2 = new Object(1);
	String v3 = TextUtils.formatSimple(""Attempt to call %s before states have been read from disk"", v2);
	int v4 = Slog.w(""AppHibernationService"", v3);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernationStatsForUser(Ljava/util/List;I)Ljava/util/Map;","2","conditional branch(eq, to iindex=-1) 2,4,
5 = new <Application,Landroid/util/ArraySet>@2,
goto (from iindex= 3 to iindex = 2),
7 = phi  5,4,
8 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
10 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernationStatsForUser(Ljava/util/Set;I)Ljava/util/Map; > 8,7,3 @11 exception:9,
15 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,6 @23 exception:14,
6 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mIActivityManager, <Application,Landroid/app/IActivityManager> > 1,
return 12,
16 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
19 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,15,6,17 @31 exception:18,
5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserManager, <Application,Landroid/os/UserManager> > 1,
conditional branch(ne, to iindex=-1) 7,10,
conditional branch(eq, to iindex=-1) 4,10,
25 = new <Application,[Ljava/lang/Object>@1524 ,
arraystore 25[10] = 3,
arraystore 25[9] = 27,
return 10,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 16,
return 4,
return 10,","depth : 0
public Map getHibernationStatsForUser(List p1, int p2){
	ArraySet v0 = new ArraySet(p1);
	Map v2 = this.mService.getHibernationStatsForUser(phiInstruction, p2);
	return v2;
}
-----
depth : 1
public Map getHibernationStatsForUser(Set p1, int p2){
	int v4 = p0.handleIncomingUser(p2, ""getHibernationStatsForUser"");
	boolean v5 = p0.checkUserStatesExist(v4, ""getHibernationStatsForUser"", 1);
	return v0;
}
-----
depth : 2
public int handleIncomingUser(int p1, String p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = this.mIActivityManager.handleIncomingUser(v2, v1, p1, 0, 1, p2, 0);
	return v3;
}
-----
depth : 2
public boolean checkUserStatesExist(int p1, String p2, boolean p3){
	boolean v1 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
	Object v1 = new Object(2);
	Integer v2 = Integer.valueOf(p1);
	String v3 = TextUtils.formatSimple(""Attempt to call %s on stopped or nonexistent user %d"", v1);
	int v4 = Slog.w(""AppHibernationService"", v3);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","getHibernationStatsForUser(Ljava/util/List;I)Ljava/util/Map;","2","conditional branch(eq, to iindex=-1) 2,4,
7 = phi  5,4,
8 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
10 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, getHibernationStatsForUser(Ljava/util/Set;I)Ljava/util/Map; > 8,7,3 @11 exception:9,
15 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,6 @23 exception:14,
6 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mIActivityManager, <Application,Landroid/app/IActivityManager> > 1,
return 12,
16 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
19 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,15,6,17 @31 exception:18,
5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserManager, <Application,Landroid/os/UserManager> > 1,
conditional branch(ne, to iindex=-1) 7,10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 13,10,
conditional branch(eq, to iindex=-1) 4,10,
14 = new <Application,[Ljava/lang/Object>@459 ,
arraystore 14[10] = 3,
return 10,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 16,
return 4,
return 10,","depth : 0
public Map getHibernationStatsForUser(List p1, int p2){
	Map v1 = this.mService.getHibernationStatsForUser(phiInstruction, p2);
	return v1;
}
-----
depth : 1
public Map getHibernationStatsForUser(Set p1, int p2){
	int v4 = p0.handleIncomingUser(p2, ""getHibernationStatsForUser"");
	boolean v5 = p0.checkUserStatesExist(v4, ""getHibernationStatsForUser"", 1);
	return v0;
}
-----
depth : 2
public int handleIncomingUser(int p1, String p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = this.mIActivityManager.handleIncomingUser(v2, v1, p1, 0, 1, p2, 0);
	return v3;
}
-----
depth : 2
public boolean checkUserStatesExist(int p1, String p2, boolean p3){
	boolean v1 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
	boolean v2 = this.mUserStates.contains(p1);
	Object v2 = new Object(1);
	String v3 = TextUtils.formatSimple(""Attempt to call %s before states have been read from disk"", v2);
	int v4 = Slog.w(""AppHibernationService"", v3);
	return 0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","setHibernatingForUser(Ljava/lang/String;IZ)V","0","5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, setHibernatingForUser(Ljava/lang/String;IZ)V > 5,2,3,4 @2 exception:6,
return,","depth : 0
public void setHibernatingForUser(String p1, int p2, boolean p3){
	this.mService.setHibernatingForUser(p1, p2, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","setHibernatingForUser(Ljava/lang/String;IZ)V","1","5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, setHibernatingForUser(Ljava/lang/String;IZ)V > 5,2,3,4 @2 exception:6,
14 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,5 @19 exception:13,
15 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
18 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,14,5,16 @27 exception:17,
conditional branch(ne, to iindex=-1) 18,7,
19 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
22 = checkcast <Application,Ljava/util/Map>21 <Application,Ljava/util/Map>,
25 = checkcast <Application,Lcom/android/server/apphibernation/UserLevelState>24 <Application,Lcom/android/server/apphibernation/UserLevelState>,
conditional branch(eq, to iindex=-1) 25,7,
26 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 30,7,
31 = getfield < Application, Lcom/android/server/apphibernation/UserLevelState, hibernated, <Primordial,Z> > 25,
conditional branch(ne, to iindex=-1) 31,4,
putfield 25.< Application, Lcom/android/server/apphibernation/UserLevelState, hibernated, <Primordial,Z> > = 4,
conditional branch(eq, to iindex=-1) 4,7,
38 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mBackgroundExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
39 = new <Application,Lcom/android/server/apphibernation/AppHibernationService$$ExternalSyntheticLambda2>@76,
goto (from iindex= 44 to iindex = 17),
47 = new <Application,Lcom/android/server/apphibernation/UserLevelState>@101,
49 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mBackgroundExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
50 = new <Application,Lcom/android/server/apphibernation/AppHibernationService$$ExternalSyntheticLambda4>@108,
53 = new <Application,Ljava/util/ArrayList>@116,
54 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
57 = checkcast <Application,Ljava/util/Map>56 <Application,Ljava/util/Map>,
61 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserDiskStores, <Application,Landroid/util/SparseArray> > 1,
64 = checkcast <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore>63 <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore>,
invokevirtual < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, scheduleWriteHibernationStates(Ljava/util/List;)V > 64,53 @141 exception:65,
monitorexit 15,
return,
return,","depth : 0
public void setHibernatingForUser(String p1, int p2, boolean p3){
	this.mService.setHibernatingForUser(p1, p2, p3);
	return;
}
-----
depth : 1
public void setHibernatingForUser(String p1, int p2, boolean p3){
	int v3 = p0.handleIncomingUser(p2, ""setHibernatingForUser"");
	boolean v4 = p0.checkUserStatesExist(v3, ""setHibernatingForUser"", 1);
	Object v5 = this.mUserStates.get(v3);
	Object v6 = v5.get(p1);
	int v7 = Binder.getCallingUid();
	boolean v8 = this.mPackageManagerInternal.canQueryPackage(v7, p1);
	UserLevelState.hibernated = p3;
	AppHibernationService$$ExternalSyntheticLambda2 v8 = new AppHibernationService$$ExternalSyntheticLambda2(p0,p1,v3,v6);
	this.mBackgroundExecutor.execute(v8);
	UserLevelState v10 = new UserLevelState(v6);
	AppHibernationService$$ExternalSyntheticLambda4 v11 = new AppHibernationService$$ExternalSyntheticLambda4(v10,v3);
	this.mBackgroundExecutor.execute(v11);
	ArrayList v13 = new ArrayList(v15);
	Object v14 = this.mUserStates.get(v3);
	Collection v15 = v14.values();
	Object v17 = this.mUserDiskStores.get(v3);
	v17.scheduleWriteHibernationStates(v13);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","setHibernatingForUser(Ljava/lang/String;IZ)V","2","5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, setHibernatingForUser(Ljava/lang/String;IZ)V > 5,2,3,4 @2 exception:6,
14 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,5 @19 exception:13,
6 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mIActivityManager, <Application,Landroid/app/IActivityManager> > 1,
return 12,
15 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
18 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,14,5,16 @27 exception:17,
5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserManager, <Application,Landroid/os/UserManager> > 1,
conditional branch(ne, to iindex=-1) 7,10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 13,10,
conditional branch(eq, to iindex=-1) 4,10,
14 = new <Application,[Ljava/lang/Object>@459 ,
arraystore 14[10] = 3,
return 10,
conditional branch(ne, to iindex=-1) 18,7,
19 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
22 = checkcast <Application,Ljava/util/Map>21 <Application,Ljava/util/Map>,
25 = checkcast <Application,Lcom/android/server/apphibernation/UserLevelState>24 <Application,Lcom/android/server/apphibernation/UserLevelState>,
conditional branch(eq, to iindex=-1) 25,7,
26 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 30,7,
31 = getfield < Application, Lcom/android/server/apphibernation/UserLevelState, hibernated, <Primordial,Z> > 25,
conditional branch(ne, to iindex=-1) 31,4,
putfield 25.< Application, Lcom/android/server/apphibernation/UserLevelState, hibernated, <Primordial,Z> > = 4,
conditional branch(eq, to iindex=-1) 4,7,
38 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mBackgroundExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
39 = new <Application,Lcom/android/server/apphibernation/AppHibernationService$$ExternalSyntheticLambda2>@76,
goto (from iindex= 44 to iindex = 17),
47 = new <Application,Lcom/android/server/apphibernation/UserLevelState>@101,
49 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mBackgroundExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
50 = new <Application,Lcom/android/server/apphibernation/AppHibernationService$$ExternalSyntheticLambda4>@108,
53 = new <Application,Ljava/util/ArrayList>@116,
54 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
57 = checkcast <Application,Ljava/util/Map>56 <Application,Ljava/util/Map>,
61 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserDiskStores, <Application,Landroid/util/SparseArray> > 1,
64 = checkcast <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore>63 <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore>,
invokevirtual < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, scheduleWriteHibernationStates(Ljava/util/List;)V > 64,53 @141 exception:65,
monitorenter 1,
putfield 1.< Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mScheduledStatesToWrite, <Application,Ljava/util/List> > = 2,
3 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mExecutorService, <Application,Ljava/util/concurrent/ScheduledExecutorService> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mFuture, <Application,Ljava/util/concurrent/ScheduledFuture> > 1,
conditional branch(eq, to iindex=-1) 7,6,
8 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mExecutorService, <Application,Ljava/util/concurrent/ScheduledExecutorService> > 1,
9 = new <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore$$ExternalSyntheticLambda0>@35,
12 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
putfield 1.< Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mFuture, <Application,Ljava/util/concurrent/ScheduledFuture> > = 14,
monitorexit 1,
return,
monitorexit 15,
return,
return,","depth : 0
public void setHibernatingForUser(String p1, int p2, boolean p3){
	this.mService.setHibernatingForUser(p1, p2, p3);
	return;
}
-----
depth : 1
public void setHibernatingForUser(String p1, int p2, boolean p3){
	int v3 = p0.handleIncomingUser(p2, ""setHibernatingForUser"");
	boolean v4 = p0.checkUserStatesExist(v3, ""setHibernatingForUser"", 1);
	Object v5 = this.mUserStates.get(v3);
	Object v6 = v5.get(p1);
	int v7 = Binder.getCallingUid();
	boolean v8 = this.mPackageManagerInternal.canQueryPackage(v7, p1);
	UserLevelState.hibernated = p3;
	AppHibernationService$$ExternalSyntheticLambda2 v8 = new AppHibernationService$$ExternalSyntheticLambda2(p0,p1,v3,v6);
	this.mBackgroundExecutor.execute(v8);
	UserLevelState v10 = new UserLevelState(v6);
	AppHibernationService$$ExternalSyntheticLambda4 v11 = new AppHibernationService$$ExternalSyntheticLambda4(v10,v3);
	this.mBackgroundExecutor.execute(v11);
	ArrayList v13 = new ArrayList(v15);
	Object v14 = this.mUserStates.get(v3);
	Collection v15 = v14.values();
	Object v17 = this.mUserDiskStores.get(v3);
	v17.scheduleWriteHibernationStates(v13);
	return;
}
-----
depth : 2
public int handleIncomingUser(int p1, String p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = this.mIActivityManager.handleIncomingUser(v2, v1, p1, 0, 1, p2, 0);
	return v3;
}
-----
depth : 2
public boolean checkUserStatesExist(int p1, String p2, boolean p3){
	boolean v1 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
	boolean v2 = this.mUserStates.contains(p1);
	Object v2 = new Object(1);
	String v3 = TextUtils.formatSimple(""Attempt to call %s before states have been read from disk"", v2);
	int v4 = Slog.w(""AppHibernationService"", v3);
	return 0;
}
-----
depth : 2
public void scheduleWriteHibernationStates(List p1){
	this.mScheduledStatesToWrite = p1;
	boolean v1 = this.mExecutorService.isShutdown();
	HibernationStateDiskStore$$ExternalSyntheticLambda0 v1 = new HibernationStateDiskStore$$ExternalSyntheticLambda0(p0);
	ScheduledFuture v3 = this.mExecutorService.schedule(v1, 60000, TimeUnit.MILLISECONDS);
	this.mFuture = v3;
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","setHibernatingForUser(Ljava/lang/String;IZ)V","2","5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, setHibernatingForUser(Ljava/lang/String;IZ)V > 5,2,3,4 @2 exception:6,
14 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, handleIncomingUser(ILjava/lang/String;)I > 1,3,5 @19 exception:13,
6 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mIActivityManager, <Application,Landroid/app/IActivityManager> > 1,
return 12,
15 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
18 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, checkUserStatesExist(ILjava/lang/String;Z)Z > 1,14,5,16 @27 exception:17,
5 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserManager, <Application,Landroid/os/UserManager> > 1,
conditional branch(ne, to iindex=-1) 7,10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 13,10,
conditional branch(eq, to iindex=-1) 4,10,
14 = new <Application,[Ljava/lang/Object>@459 ,
arraystore 14[10] = 3,
return 10,
conditional branch(ne, to iindex=-1) 18,7,
19 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
22 = checkcast <Application,Ljava/util/Map>21 <Application,Ljava/util/Map>,
25 = checkcast <Application,Lcom/android/server/apphibernation/UserLevelState>24 <Application,Lcom/android/server/apphibernation/UserLevelState>,
conditional branch(eq, to iindex=-1) 25,7,
26 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 30,7,
31 = getfield < Application, Lcom/android/server/apphibernation/UserLevelState, hibernated, <Primordial,Z> > 25,
conditional branch(ne, to iindex=-1) 31,4,
putfield 25.< Application, Lcom/android/server/apphibernation/UserLevelState, hibernated, <Primordial,Z> > = 4,
conditional branch(eq, to iindex=-1) 4,7,
32 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mBackgroundExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
33 = new <Application,Lcom/android/server/apphibernation/AppHibernationService$$ExternalSyntheticLambda3>@87,
putfield 25.< Application, Lcom/android/server/apphibernation/UserLevelState, lastUnhibernatedMs, <Primordial,J> > = 37,
47 = new <Application,Lcom/android/server/apphibernation/UserLevelState>@101,
49 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mBackgroundExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
50 = new <Application,Lcom/android/server/apphibernation/AppHibernationService$$ExternalSyntheticLambda4>@108,
53 = new <Application,Ljava/util/ArrayList>@116,
54 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserStates, <Application,Landroid/util/SparseArray> > 1,
57 = checkcast <Application,Ljava/util/Map>56 <Application,Ljava/util/Map>,
61 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mUserDiskStores, <Application,Landroid/util/SparseArray> > 1,
64 = checkcast <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore>63 <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore>,
invokevirtual < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, scheduleWriteHibernationStates(Ljava/util/List;)V > 64,53 @141 exception:65,
monitorenter 1,
putfield 1.< Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mScheduledStatesToWrite, <Application,Ljava/util/List> > = 2,
3 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mExecutorService, <Application,Ljava/util/concurrent/ScheduledExecutorService> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mFuture, <Application,Ljava/util/concurrent/ScheduledFuture> > 1,
conditional branch(eq, to iindex=-1) 7,6,
8 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mExecutorService, <Application,Ljava/util/concurrent/ScheduledExecutorService> > 1,
9 = new <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore$$ExternalSyntheticLambda0>@35,
12 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
putfield 1.< Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mFuture, <Application,Ljava/util/concurrent/ScheduledFuture> > = 14,
monitorexit 1,
return,
monitorexit 15,
return,
return,","depth : 0
public void setHibernatingForUser(String p1, int p2, boolean p3){
	this.mService.setHibernatingForUser(p1, p2, p3);
	return;
}
-----
depth : 1
public void setHibernatingForUser(String p1, int p2, boolean p3){
	int v3 = p0.handleIncomingUser(p2, ""setHibernatingForUser"");
	boolean v4 = p0.checkUserStatesExist(v3, ""setHibernatingForUser"", 1);
	Object v5 = this.mUserStates.get(v3);
	Object v6 = v5.get(p1);
	int v7 = Binder.getCallingUid();
	boolean v8 = this.mPackageManagerInternal.canQueryPackage(v7, p1);
	UserLevelState.hibernated = p3;
	AppHibernationService$$ExternalSyntheticLambda3 v8 = new AppHibernationService$$ExternalSyntheticLambda3(p0,p1,v3);
	this.mBackgroundExecutor.execute(v8);
	long v11 = System.currentTimeMillis();
	UserLevelState.lastUnhibernatedMs = v11;
	UserLevelState v11 = new UserLevelState(v6);
	AppHibernationService$$ExternalSyntheticLambda4 v12 = new AppHibernationService$$ExternalSyntheticLambda4(v11,v3);
	this.mBackgroundExecutor.execute(v12);
	ArrayList v14 = new ArrayList(v16);
	Object v15 = this.mUserStates.get(v3);
	Collection v16 = v15.values();
	Object v18 = this.mUserDiskStores.get(v3);
	v18.scheduleWriteHibernationStates(v14);
	return;
}
-----
depth : 2
public int handleIncomingUser(int p1, String p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = this.mIActivityManager.handleIncomingUser(v2, v1, p1, 0, 1, p2, 0);
	return v3;
}
-----
depth : 2
public boolean checkUserStatesExist(int p1, String p2, boolean p3){
	boolean v1 = this.mUserManager.isUserUnlockingOrUnlocked(p1);
	boolean v2 = this.mUserStates.contains(p1);
	Object v2 = new Object(1);
	String v3 = TextUtils.formatSimple(""Attempt to call %s before states have been read from disk"", v2);
	int v4 = Slog.w(""AppHibernationService"", v3);
	return 0;
}
-----
depth : 2
public void scheduleWriteHibernationStates(List p1){
	this.mScheduledStatesToWrite = p1;
	boolean v1 = this.mExecutorService.isShutdown();
	HibernationStateDiskStore$$ExternalSyntheticLambda0 v1 = new HibernationStateDiskStore$$ExternalSyntheticLambda0(p0);
	ScheduledFuture v3 = this.mExecutorService.schedule(v1, 60000, TimeUnit.MILLISECONDS);
	this.mFuture = v3;
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","isHibernatingGlobally(Ljava/lang/String;)Z","0","3 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
5 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, isHibernatingGlobally(Ljava/lang/String;)Z > 3,2 @2 exception:4,
return 5,","depth : 0
public boolean isHibernatingGlobally(String p1){
	boolean v1 = this.mService.isHibernatingGlobally(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","isHibernatingGlobally(Ljava/lang/String;)Z","1","3 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
5 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, isHibernatingGlobally(Ljava/lang/String;)Z > 3,2 @2 exception:4,
3 = getstatic < Application, Lcom/android/server/apphibernation/AppHibernationService, sIsServiceEnabled, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 3,4,
return 4,
return 5,","depth : 0
public boolean isHibernatingGlobally(String p1){
	boolean v1 = this.mService.isHibernatingGlobally(p1);
	return v1;
}
-----
depth : 1
public boolean isHibernatingGlobally(String p1){
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","isHibernatingGlobally(Ljava/lang/String;)Z","1","3 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
5 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, isHibernatingGlobally(Ljava/lang/String;)Z > 3,2 @2 exception:4,
10 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalHibernationStates, <Application,Ljava/util/Map> > 1,
14 = checkcast <Application,Lcom/android/server/apphibernation/GlobalLevelState>13 <Application,Lcom/android/server/apphibernation/GlobalLevelState>,
conditional branch(eq, to iindex=-1) 14,4,
15 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 19,4,
goto (from iindex= 22 to iindex = 5),
monitorexit 10,
return 4,
return 5,","depth : 0
public boolean isHibernatingGlobally(String p1){
	boolean v1 = this.mService.isHibernatingGlobally(p1);
	return v1;
}
-----
depth : 1
public boolean isHibernatingGlobally(String p1){
	Object v3 = this.mGlobalHibernationStates.get(p1);
	int v4 = Binder.getCallingUid();
	boolean v5 = this.mPackageManagerInternal.canQueryPackage(v4, p1);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","isHibernatingGlobally(Ljava/lang/String;)Z","1","3 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
5 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, isHibernatingGlobally(Ljava/lang/String;)Z > 3,2 @2 exception:4,
10 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalHibernationStates, <Application,Ljava/util/Map> > 1,
14 = checkcast <Application,Lcom/android/server/apphibernation/GlobalLevelState>13 <Application,Lcom/android/server/apphibernation/GlobalLevelState>,
conditional branch(eq, to iindex=-1) 14,4,
15 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 19,4,
20 = getfield < Application, Lcom/android/server/apphibernation/GlobalLevelState, hibernated, <Primordial,Z> > 14,
monitorexit 10,
return 20,
return 5,","depth : 0
public boolean isHibernatingGlobally(String p1){
	boolean v1 = this.mService.isHibernatingGlobally(p1);
	return v1;
}
-----
depth : 1
public boolean isHibernatingGlobally(String p1){
	Object v3 = this.mGlobalHibernationStates.get(p1);
	int v4 = Binder.getCallingUid();
	boolean v5 = this.mPackageManagerInternal.canQueryPackage(v4, p1);
	return GlobalLevelState.hibernated;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","isHibernatingGlobally(Ljava/lang/String;)Z","1","3 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
5 = invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, isHibernatingGlobally(Ljava/lang/String;)Z > 3,2 @2 exception:4,
10 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalHibernationStates, <Application,Ljava/util/Map> > 1,
14 = checkcast <Application,Lcom/android/server/apphibernation/GlobalLevelState>13 <Application,Lcom/android/server/apphibernation/GlobalLevelState>,
conditional branch(eq, to iindex=-1) 14,4,
monitorexit 10,
return 4,
return 5,","depth : 0
public boolean isHibernatingGlobally(String p1){
	boolean v1 = this.mService.isHibernatingGlobally(p1);
	return v1;
}
-----
depth : 1
public boolean isHibernatingGlobally(String p1){
	Object v3 = this.mGlobalHibernationStates.get(p1);
	return 0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","setHibernatingGlobally(Ljava/lang/String;Z)V","0","4 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, setHibernatingGlobally(Ljava/lang/String;Z)V > 4,2,3 @2 exception:5,
return,","depth : 0
public void setHibernatingGlobally(String p1, boolean p2){
	this.mService.setHibernatingGlobally(p1, p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","setHibernatingGlobally(Ljava/lang/String;Z)V","1","4 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, setHibernatingGlobally(Ljava/lang/String;Z)V > 4,2,3 @2 exception:5,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
12 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalHibernationStates, <Application,Ljava/util/Map> > 1,
15 = checkcast <Application,Lcom/android/server/apphibernation/GlobalLevelState>14 <Application,Lcom/android/server/apphibernation/GlobalLevelState>,
conditional branch(eq, to iindex=-1) 15,5,
16 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 20,5,
21 = getfield < Application, Lcom/android/server/apphibernation/GlobalLevelState, hibernated, <Primordial,Z> > 15,
conditional branch(eq, to iindex=-1) 21,3,
putfield 15.< Application, Lcom/android/server/apphibernation/GlobalLevelState, hibernated, <Primordial,Z> > = 3,
conditional branch(eq, to iindex=-1) 3,5,
25 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mBackgroundExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
26 = new <Application,Lcom/android/server/apphibernation/AppHibernationService$$ExternalSyntheticLambda0>@52,
goto (from iindex= 30 to iindex = 11),
34 = new <Application,Ljava/util/ArrayList>@71,
35 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalHibernationStates, <Application,Ljava/util/Map> > 1,
39 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalLevelHibernationDiskStore, <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, scheduleWriteHibernationStates(Ljava/util/List;)V > 39,34 @84 exception:40,
monitorexit 11,
return,
return,","depth : 0
public void setHibernatingGlobally(String p1, boolean p2){
	this.mService.setHibernatingGlobally(p1, p2);
	return;
}
-----
depth : 1
public void setHibernatingGlobally(String p1, boolean p2){
	Object v3 = this.mGlobalHibernationStates.get(p1);
	int v4 = Binder.getCallingUid();
	boolean v5 = this.mPackageManagerInternal.canQueryPackage(v4, p1);
	GlobalLevelState.hibernated = p2;
	AppHibernationService$$ExternalSyntheticLambda0 v5 = new AppHibernationService$$ExternalSyntheticLambda0(p0,p1,v3);
	this.mBackgroundExecutor.execute(v5);
	ArrayList v7 = new ArrayList(v8);
	Collection v8 = this.mGlobalHibernationStates.values();
	this.mGlobalLevelHibernationDiskStore.scheduleWriteHibernationStates(v7);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","setHibernatingGlobally(Ljava/lang/String;Z)V","2","4 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, setHibernatingGlobally(Ljava/lang/String;Z)V > 4,2,3 @2 exception:5,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
12 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalHibernationStates, <Application,Ljava/util/Map> > 1,
15 = checkcast <Application,Lcom/android/server/apphibernation/GlobalLevelState>14 <Application,Lcom/android/server/apphibernation/GlobalLevelState>,
conditional branch(eq, to iindex=-1) 15,5,
16 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 20,5,
21 = getfield < Application, Lcom/android/server/apphibernation/GlobalLevelState, hibernated, <Primordial,Z> > 15,
conditional branch(eq, to iindex=-1) 21,3,
putfield 15.< Application, Lcom/android/server/apphibernation/GlobalLevelState, hibernated, <Primordial,Z> > = 3,
conditional branch(eq, to iindex=-1) 3,5,
25 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mBackgroundExecutor, <Application,Ljava/util/concurrent/Executor> > 1,
26 = new <Application,Lcom/android/server/apphibernation/AppHibernationService$$ExternalSyntheticLambda0>@52,
goto (from iindex= 30 to iindex = 11),
34 = new <Application,Ljava/util/ArrayList>@71,
35 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalHibernationStates, <Application,Ljava/util/Map> > 1,
39 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalLevelHibernationDiskStore, <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, scheduleWriteHibernationStates(Ljava/util/List;)V > 39,34 @84 exception:40,
monitorenter 1,
putfield 1.< Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mScheduledStatesToWrite, <Application,Ljava/util/List> > = 2,
3 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mExecutorService, <Application,Ljava/util/concurrent/ScheduledExecutorService> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mFuture, <Application,Ljava/util/concurrent/ScheduledFuture> > 1,
conditional branch(eq, to iindex=-1) 7,6,
8 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mExecutorService, <Application,Ljava/util/concurrent/ScheduledExecutorService> > 1,
9 = new <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore$$ExternalSyntheticLambda0>@35,
12 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
putfield 1.< Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mFuture, <Application,Ljava/util/concurrent/ScheduledFuture> > = 14,
monitorexit 1,
return,
monitorexit 11,
return,
return,","depth : 0
public void setHibernatingGlobally(String p1, boolean p2){
	this.mService.setHibernatingGlobally(p1, p2);
	return;
}
-----
depth : 1
public void setHibernatingGlobally(String p1, boolean p2){
	Object v3 = this.mGlobalHibernationStates.get(p1);
	int v4 = Binder.getCallingUid();
	boolean v5 = this.mPackageManagerInternal.canQueryPackage(v4, p1);
	GlobalLevelState.hibernated = p2;
	AppHibernationService$$ExternalSyntheticLambda0 v5 = new AppHibernationService$$ExternalSyntheticLambda0(p0,p1,v3);
	this.mBackgroundExecutor.execute(v5);
	ArrayList v7 = new ArrayList(v8);
	Collection v8 = this.mGlobalHibernationStates.values();
	this.mGlobalLevelHibernationDiskStore.scheduleWriteHibernationStates(v7);
	return;
}
-----
depth : 2
public void scheduleWriteHibernationStates(List p1){
	this.mScheduledStatesToWrite = p1;
	boolean v1 = this.mExecutorService.isShutdown();
	HibernationStateDiskStore$$ExternalSyntheticLambda0 v1 = new HibernationStateDiskStore$$ExternalSyntheticLambda0(p0);
	ScheduledFuture v3 = this.mExecutorService.schedule(v1, 60000, TimeUnit.MILLISECONDS);
	this.mFuture = v3;
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub","setHibernatingGlobally(Ljava/lang/String;Z)V","2","4 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService$AppHibernationServiceStub, mService, <Application,Lcom/android/server/apphibernation/AppHibernationService> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/AppHibernationService, setHibernatingGlobally(Ljava/lang/String;Z)V > 4,2,3 @2 exception:5,
11 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
12 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalHibernationStates, <Application,Ljava/util/Map> > 1,
15 = checkcast <Application,Lcom/android/server/apphibernation/GlobalLevelState>14 <Application,Lcom/android/server/apphibernation/GlobalLevelState>,
conditional branch(eq, to iindex=-1) 15,5,
16 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mPackageManagerInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 20,5,
21 = getfield < Application, Lcom/android/server/apphibernation/GlobalLevelState, hibernated, <Primordial,Z> > 15,
conditional branch(eq, to iindex=-1) 21,3,
putfield 15.< Application, Lcom/android/server/apphibernation/GlobalLevelState, hibernated, <Primordial,Z> > = 3,
conditional branch(eq, to iindex=-1) 3,5,
putfield 15.< Application, Lcom/android/server/apphibernation/GlobalLevelState, savedByte, <Primordial,J> > = 22,
putfield 15.< Application, Lcom/android/server/apphibernation/GlobalLevelState, lastUnhibernatedMs, <Primordial,J> > = 24,
34 = new <Application,Ljava/util/ArrayList>@71,
35 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalHibernationStates, <Application,Ljava/util/Map> > 1,
39 = getfield < Application, Lcom/android/server/apphibernation/AppHibernationService, mGlobalLevelHibernationDiskStore, <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore> > 1,
invokevirtual < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, scheduleWriteHibernationStates(Ljava/util/List;)V > 39,34 @84 exception:40,
monitorenter 1,
putfield 1.< Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mScheduledStatesToWrite, <Application,Ljava/util/List> > = 2,
3 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mExecutorService, <Application,Ljava/util/concurrent/ScheduledExecutorService> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mFuture, <Application,Ljava/util/concurrent/ScheduledFuture> > 1,
conditional branch(eq, to iindex=-1) 7,6,
8 = getfield < Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mExecutorService, <Application,Ljava/util/concurrent/ScheduledExecutorService> > 1,
9 = new <Application,Lcom/android/server/apphibernation/HibernationStateDiskStore$$ExternalSyntheticLambda0>@35,
12 = getstatic < Application, Ljava/util/concurrent/TimeUnit, MILLISECONDS, <Application,Ljava/util/concurrent/TimeUnit> >,
putfield 1.< Application, Lcom/android/server/apphibernation/HibernationStateDiskStore, mFuture, <Application,Ljava/util/concurrent/ScheduledFuture> > = 14,
monitorexit 1,
return,
monitorexit 11,
return,
return,","depth : 0
public void setHibernatingGlobally(String p1, boolean p2){
	this.mService.setHibernatingGlobally(p1, p2);
	return;
}
-----
depth : 1
public void setHibernatingGlobally(String p1, boolean p2){
	Object v3 = this.mGlobalHibernationStates.get(p1);
	int v4 = Binder.getCallingUid();
	boolean v5 = this.mPackageManagerInternal.canQueryPackage(v4, p1);
	GlobalLevelState.hibernated = p2;
	GlobalLevelState.savedByte = 0;
	long v6 = System.currentTimeMillis();
	GlobalLevelState.lastUnhibernatedMs = v6;
	ArrayList v6 = new ArrayList(v7);
	Collection v7 = this.mGlobalHibernationStates.values();
	this.mGlobalLevelHibernationDiskStore.scheduleWriteHibernationStates(v6);
	return;
}
-----
depth : 2
public void scheduleWriteHibernationStates(List p1){
	this.mScheduledStatesToWrite = p1;
	boolean v1 = this.mExecutorService.isShutdown();
	HibernationStateDiskStore$$ExternalSyntheticLambda0 v1 = new HibernationStateDiskStore$$ExternalSyntheticLambda0(p0);
	ScheduledFuture v3 = this.mExecutorService.schedule(v1, 60000, TimeUnit.MILLISECONDS);
	this.mFuture = v3;
	return;
}
-----
","SYS_OR_SIG"

