"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/wm/ActivityTaskManagerService","getLastResumedActivityUserId()I","0","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastResumedActivity, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 8,9,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getCurrentUserId()I > 1 @19 exception:12,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
return 13,","depth : 0
public int getLastResumedActivityUserId(){
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p0.getCurrentUserId();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
","public int getLastResumedActivityUserId(){
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p0.getCurrentUserId();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getLastResumedActivityUserId()I","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastResumedActivity, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 8,9,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getCurrentUserId()I > 1 @19 exception:12,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
4 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getCurrentUserId()I > 2 @2 exception:3,
return 4,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 13,","depth : 0
public int getLastResumedActivityUserId(){
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p0.getCurrentUserId();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public int getCurrentUserId(){
	int v1 = this.mAmInternal.getCurrentUserId();
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public int getLastResumedActivityUserId(){
	this.sThreadPriorityBooster.boost();
	int v5 = this.mAmInternal.getCurrentUserId();
	int v4 = v5;
	this.sThreadPriorityBooster.reset();
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getLastResumedActivityUserId()I","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastResumedActivity, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mUserId, <Primordial,I> > 8,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @31 exception:11,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 10,","depth : 0
public int getLastResumedActivityUserId(){
	WindowManagerService.boostPriorityForLockedSection();
	WindowManagerService.resetPriorityAfterLockedSection();
	return ActivityRecord.mUserId;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public int getLastResumedActivityUserId(){
	this.sThreadPriorityBooster.boost();
	this.sThreadPriorityBooster.reset();
	return ActivityRecord.mUserId;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getLastResumedActivityUserId()I","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastResumedActivity, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 8,9,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getCurrentUserId()I > 1 @19 exception:12,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 13,","depth : 0
public int getLastResumedActivityUserId(){
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p0.getCurrentUserId();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public int getLastResumedActivityUserId(){
	int v5 = p0.getCurrentUserId();
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getLastResumedActivityUserId()I","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastResumedActivity, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 8,9,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getCurrentUserId()I > 1 @19 exception:12,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 13,","depth : 0
public int getLastResumedActivityUserId(){
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p0.getCurrentUserId();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public int getLastResumedActivityUserId(){
	WindowManagerThreadPriorityBooster.boost();
	int v6 = p0.getCurrentUserId();
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getLastResumedActivityUserId()I","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastResumedActivity, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 8,9,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getCurrentUserId()I > 1 @19 exception:12,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 13,","depth : 0
public int getLastResumedActivityUserId(){
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p0.getCurrentUserId();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public int getLastResumedActivityUserId(){
	int v5 = p0.getCurrentUserId();
	WindowManagerThreadPriorityBooster.reset();
	return v5;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksInWindowingModes([I)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 9,2 @17 exception:10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
return,","depth : 0
public void removeRootTasksInWindowingModes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksInWindowingModes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksInWindowingModes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void removeRootTasksInWindowingModes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksInWindowingModes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksInWindowingModes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksInWindowingModes([I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void removeRootTasksInWindowingModes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksInWindowingModes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksInWindowingModes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void removeRootTasksInWindowingModes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void removeRootTasksInWindowingModes([I p1){
	this.sThreadPriorityBooster.boost();
	long v7 = Binder.clearCallingIdentity();
	int v9 = RootWindowContainer.getChildCount();
	Binder.restoreCallingIdentity(v7);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksInWindowingModes([I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void removeRootTasksInWindowingModes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksInWindowingModes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksInWindowingModes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void removeRootTasksInWindowingModes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void removeRootTasksInWindowingModes([I p1){
	this.sThreadPriorityBooster.boost();
	long v5 = Binder.clearCallingIdentity();
	int v7 = RootWindowContainer.getChildCount();
	Binder.restoreCallingIdentity(v5);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksInWindowingModes([I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void removeRootTasksInWindowingModes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksInWindowingModes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksInWindowingModes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void removeRootTasksInWindowingModes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void removeRootTasksInWindowingModes([I p1){
	long v8 = Binder.clearCallingIdentity();
	int v11 = this.mChildren.size();
	int v10 = v11;
	Binder.restoreCallingIdentity(v8);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksInWindowingModes([I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void removeRootTasksInWindowingModes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksInWindowingModes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksInWindowingModes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void removeRootTasksInWindowingModes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void removeRootTasksInWindowingModes([I p1){
	WindowManagerThreadPriorityBooster.boost();
	long v9 = Binder.clearCallingIdentity();
	int v12 = this.mChildren.size();
	int v11 = v12;
	Binder.restoreCallingIdentity(v9);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksInWindowingModes([I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void removeRootTasksInWindowingModes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksInWindowingModes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksInWindowingModes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void removeRootTasksInWindowingModes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void removeRootTasksInWindowingModes([I p1){
	long v8 = Binder.clearCallingIdentity();
	int v11 = this.mChildren.size();
	int v10 = v11;
	Binder.restoreCallingIdentity(v8);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startSystemLockTaskMode(I)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 12 @32 exception:13,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;)V > 14,3 @38 exception:15,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startLockTaskMode(Lcom/android/server/wm/Task;Z)V > 1,12,16 @42 exception:17,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @46 exception:18,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @49 exception:19,
return,","depth : 0
public void startSystemLockTaskMode(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""startSystemLockTaskMode"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	Task v5 = v4.getRootTask();
	v5.moveToFront(""startSystemLockTaskMode"");
	p0.startLockTaskMode(v4, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","public void startSystemLockTaskMode(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""startSystemLockTaskMode"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	Task v5 = v4.getRootTask();
	v5.moveToFront(""startSystemLockTaskMode"");
	p0.startLockTaskMode(v4, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startSystemLockTaskMode(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 12 @32 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTaskFragment()Lcom/android/server/wm/TaskFragment; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 3 @4 exception:4,
return 5,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;)V > 14,3 @38 exception:15,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;Lcom/android/server/wm/Task;)V > 1,2,3 @1 exception:4,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startLockTaskMode(Lcom/android/server/wm/Task;Z)V > 1,12,16 @42 exception:17,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @6 exception:7,
9 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@165 ,
arraystore 11[6] = 8,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 9,10,6,6,11 @20 exception:12,
conditional branch(eq, to iindex=-1) 2,6,
14 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 14,6,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 15 @32 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
19 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostTask()Lcom/android/server/wm/Task; > 17 @38 exception:18,
conditional branch(ne, to iindex=-1) 2,19,
27 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @44 exception:26,
29 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @48 exception:28,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = new <Primordial,[I>@545 ,
arraystore 31[6] = 32,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 30,31 @59 exception:33,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @62 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, startLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 35,2,3,27 @66 exception:36,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 29 @69 exception:44,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @46 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @49 exception:19,
return,","depth : 0
public void startSystemLockTaskMode(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""startSystemLockTaskMode"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	Task v5 = v4.getRootTask();
	v5.moveToFront(""startSystemLockTaskMode"");
	p0.startLockTaskMode(v4, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public Task getRootTask(){
	TaskFragment v1 = p0.getRootTaskFragment();
	Task v2 = v1.asTask();
	return v2;
}
-----
depth : 1
public void moveToFront(String p1){
	p0.moveToFront(p1, 0);
	return;
}
-----
depth : 1
public void startLockTaskMode(Task p1, boolean p2){
	String v1 = String.valueOf(p1);
	Object v1 = new Object(1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v1);
	Task v3 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v4 = v3.getTopMostTask();
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	[I v6 = new [I(1);
	this.mRootWindowContainer.removeRootTasksInWindowingModes(v6);
	LockTaskController v8 = p0.getLockTaskController();
	v8.startLockTaskMode(p1, p2, v5);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void startSystemLockTaskMode(int p1){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v9 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v8 = v9;
	TaskFragment v11 = TaskFragment.getRootTaskFragment();
	Task v12 = v11.asTask();
	Task v10 = v12;
	Task.moveToFront(""startSystemLockTaskMode"", 0);
	String v16 = String.valueOf(v8);
	Object v17 = new Object(1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v17);
	Task v19 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v20 = v19.getTopMostTask();
	int v21 = Binder.getCallingUid();
	long v22 = Binder.clearCallingIdentity();
	[I v23 = new [I(1);
	this.mRootWindowContainer.removeRootTasksInWindowingModes(v23);
	LockTaskController v25 = ActivityTaskManagerService.getLockTaskController();
	v25.startLockTaskMode(v8, 1, v21);
	Binder.restoreCallingIdentity(v22);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startSystemLockTaskMode(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 12 @32 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTaskFragment()Lcom/android/server/wm/TaskFragment; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 3 @4 exception:4,
return 5,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;)V > 14,3 @38 exception:15,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;Lcom/android/server/wm/Task;)V > 1,2,3 @1 exception:4,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startLockTaskMode(Lcom/android/server/wm/Task;Z)V > 1,12,16 @42 exception:17,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @6 exception:7,
9 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@165 ,
arraystore 11[6] = 8,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 9,10,6,6,11 @20 exception:12,
conditional branch(eq, to iindex=-1) 2,6,
14 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 14,6,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 15 @32 exception:16,
conditional branch(eq, to iindex=-1) 17,6,
19 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostTask()Lcom/android/server/wm/Task; > 17 @38 exception:18,
conditional branch(ne, to iindex=-1) 2,19,
27 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @44 exception:26,
29 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @48 exception:28,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = new <Primordial,[I>@545 ,
arraystore 31[6] = 32,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 30,31 @59 exception:33,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @62 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, startLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 35,2,3,27 @66 exception:36,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 29 @69 exception:44,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @46 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @49 exception:19,
return,","depth : 0
public void startSystemLockTaskMode(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""startSystemLockTaskMode"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	Task v5 = v4.getRootTask();
	v5.moveToFront(""startSystemLockTaskMode"");
	p0.startLockTaskMode(v4, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public Task getRootTask(){
	TaskFragment v1 = p0.getRootTaskFragment();
	Task v2 = v1.asTask();
	return v2;
}
-----
depth : 1
public void moveToFront(String p1){
	p0.moveToFront(p1, 0);
	return;
}
-----
depth : 1
public void startLockTaskMode(Task p1, boolean p2){
	String v1 = String.valueOf(p1);
	Object v1 = new Object(1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v1);
	Task v3 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v4 = v3.getTopMostTask();
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	[I v6 = new [I(1);
	this.mRootWindowContainer.removeRootTasksInWindowingModes(v6);
	LockTaskController v8 = p0.getLockTaskController();
	v8.startLockTaskMode(p1, p2, v5);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void startSystemLockTaskMode(int p1){
	long v3 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v7 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v6 = v7;
	TaskFragment v9 = TaskFragment.getRootTaskFragment();
	Task v10 = v9.asTask();
	Task v8 = v10;
	Task.moveToFront(""startSystemLockTaskMode"", 0);
	String v14 = String.valueOf(v6);
	Object v15 = new Object(1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v15);
	Task v17 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v18 = v17.getTopMostTask();
	int v19 = Binder.getCallingUid();
	long v20 = Binder.clearCallingIdentity();
	[I v21 = new [I(1);
	this.mRootWindowContainer.removeRootTasksInWindowingModes(v21);
	LockTaskController v23 = ActivityTaskManagerService.getLockTaskController();
	v23.startLockTaskMode(v6, 1, v19);
	Binder.restoreCallingIdentity(v20);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startSystemLockTaskMode(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 12 @32 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTaskFragment()Lcom/android/server/wm/TaskFragment; > 1 @0 exception:2,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 5),
9 = phi  1,8,
return 9,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 3 @4 exception:4,
return 2,
return 5,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;)V > 14,3 @38 exception:15,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;Lcom/android/server/wm/Task;)V > 1,2,3 @1 exception:4,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isAttached()Z > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 1 @7 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHome()Z > 1 @11 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
12 = invokevirtual < Application, Lcom/android/server/wm/Task, returnsToHomeRootTask()Z > 1 @17 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @25 exception:14,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,2 @28 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @36 exception:20,
invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, moveHomeRootTaskToFront(Ljava/lang/String;)V > 8,21 @40 exception:22,
27 = invokevirtual < Application, Lcom/android/server/wm/Task, isRootTask()Z > 1 @43 exception:26,
conditional branch(eq, to iindex=-1) 27,6,
29 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getFocusedRootTask()Lcom/android/server/wm/Task; > 8 @49 exception:28,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,6,
conditional branch(ne, to iindex=-1) 3,6,
goto (from iindex= 28 to iindex = 2),
33 = phi  1,3,
35 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 33 @59 exception:34,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, positionChildAt(ILcom/android/server/wm/WindowContainer;Z)V > 35,36,33,37 @67 exception:38,
invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, updateLastFocusedRootTask(Lcom/android/server/wm/Task;Ljava/lang/String;)V > 8,30,2 @70 exception:39,
return,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startLockTaskMode(Lcom/android/server/wm/Task;Z)V > 1,12,16 @42 exception:17,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @6 exception:7,
9 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@165 ,
arraystore 11[6] = 8,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 9,10,6,6,11 @20 exception:12,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
conditional branch(eq, to iindex=-1) 2,6,
14 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 14,6,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 15 @32 exception:16,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
conditional branch(eq, to iindex=-1) 17,6,
19 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostTask()Lcom/android/server/wm/Task; > 17 @38 exception:18,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda1>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda1, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 1,2,4 @6 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 2,19,
27 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @44 exception:26,
29 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @48 exception:28,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = new <Primordial,[I>@545 ,
arraystore 31[6] = 32,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 30,31 @59 exception:33,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @62 exception:34,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, startLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 35,2,3,27 @66 exception:36,
5 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(ne, to iindex=-1) 3,6,
putfield 2.< Application, Lcom/android/server/wm/Task, mLockTaskUid, <Primordial,I> > = 4,
conditional branch(ne, to iindex=-1) 5,8,
31 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 31,6,
32 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 32,33,6,6,6 @36 exception:34,
37 = load_metadata: <Application,Lcom/android/server/statusbar/StatusBarManagerInternal>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 37 @41 exception:38,
40 = checkcast <Application,Lcom/android/server/statusbar/StatusBarManagerInternal>39 <Application,Lcom/android/server/statusbar/StatusBarManagerInternal>,
conditional branch(eq, to iindex=-1) 40,6,
41 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 2,
invokeinterface < Application, Lcom/android/server/statusbar/StatusBarManagerInternal, showScreenPinningRequest(I)V > 40,41 @51 exception:42,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 29 @69 exception:44,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @46 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @49 exception:19,
return,","depth : 0
public void startSystemLockTaskMode(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""startSystemLockTaskMode"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	Task v5 = v4.getRootTask();
	v5.moveToFront(""startSystemLockTaskMode"");
	p0.startLockTaskMode(v4, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public Task getRootTask(){
	TaskFragment v1 = p0.getRootTaskFragment();
	Task v2 = v1.asTask();
	return v2;
}
-----
depth : 2
public TaskFragment getRootTaskFragment(){
	WindowContainer v1 = p0.getParent();
	TaskFragment v2 = v1.asTaskFragment();
	return phiInstruction;
}
-----
depth : 2
public Task asTask(){
	return 0;
}
-----
depth : 1
public void moveToFront(String p1){
	p0.moveToFront(p1, 0);
	return;
}
-----
depth : 2
public void moveToFront(String p1, Task p2){
	boolean v1 = p0.isAttached();
	TaskDisplayArea v2 = p0.getDisplayArea();
	boolean v3 = p0.isActivityTypeHome();
	boolean v4 = p0.returnsToHomeRootTask();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(p1);
	StringBuilder v7 = v4.append("" returnToHome"");
	String v8 = v4.toString();
	v2.moveHomeRootTaskToFront(v8);
	boolean v10 = p0.isRootTask();
	Task v11 = v2.getFocusedRootTask();
	WindowContainer v12 = phiInstruction.getParent();
	v12.positionChildAt(2147483647, phiInstruction, 1);
	v2.updateLastFocusedRootTask(phiInstruction, p1);
	return;
}
-----
depth : 1
public void startLockTaskMode(Task p1, boolean p2){
	String v1 = String.valueOf(p1);
	Object v1 = new Object(1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v1);
	Task v3 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v4 = v3.getTopMostTask();
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	[I v6 = new [I(1);
	this.mRootWindowContainer.removeRootTasksInWindowingModes(v6);
	LockTaskController v8 = p0.getLockTaskController();
	v8.startLockTaskMode(p1, p2, v5);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 2
public Task getTopMostTask(){
	WindowContainer$$ExternalSyntheticLambda1 v0 = new WindowContainer$$ExternalSyntheticLambda1();
	Task v2 = p0.getTask(v0, 1);
	return v2;
}
-----
depth : 2
public void removeRootTasksInWindowingModes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public void startLockTaskMode(Task p1, boolean p2, int p3){
	Task.mLockTaskUid = p3;
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1401295262, 0, 0, 0);
	Object v2 = LocalServices.getService(StatusBarManagerInterna.class);
	v2.showScreenPinningRequest(Task.mTaskId);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void startSystemLockTaskMode(int p1){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v13 = PooledLambda.__(Tas.class);
	Integer v14 = Integer.valueOf(p1);
	PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14);
	Task v16 = RootWindowContainer.getTask(v15);
	v15.recycle();
	Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0);
	Task v19 = v16.getRootTask();
	boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v10 = v16;
	Task v9 = v10;
	WindowContainer v23 = TaskFragment.getParent();
	TaskFragment v24 = v23.asTaskFragment();
	TaskFragment v22 = phiInstruction;
	Task v25 = 0;
	Task v21 = v25;
	boolean v28 = Task.isAttached();
	TaskDisplayArea v29 = Task.getDisplayArea();
	boolean v30 = Task.isActivityTypeHome();
	boolean v31 = Task.returnsToHomeRootTask();
	StringBuilder v32 = new StringBuilder();
	StringBuilder v34 = v32.append(p1);
	StringBuilder v35 = v32.append("" returnToHome"");
	String v36 = v32.toString();
	v29.moveHomeRootTaskToFront(v36);
	boolean v38 = Task.isRootTask();
	Task v39 = v29.getFocusedRootTask();
	WindowContainer v40 = phiInstruction.getParent();
	v40.positionChildAt(2147483647, phiInstruction, 1);
	v29.updateLastFocusedRootTask(phiInstruction, p1);
	String v44 = String.valueOf(v9);
	Object v45 = new Object(1);
	ProtoLogImpl v47 = ProtoLogImpl.getSingleInstance();
	v47.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v45);
	int v50 = RootWindowContainer.getChildCount();
	WindowContainer v51 = RootWindowContainer.getChildAt(phiInstruction);
	Task v52 = v51.getFocusedRootTask();
	Task v49 = v52;
	WindowContainer$$ExternalSyntheticLambda1 v54 = new WindowContainer$$ExternalSyntheticLambda1();
	Task v56 = WindowContainer.getTask(v54, 1);
	Task v53 = v56;
	int v57 = Binder.getCallingUid();
	long v58 = Binder.clearCallingIdentity();
	[I v59 = new [I(1);
	int v61 = RootWindowContainer.getChildCount();
	LockTaskController v62 = this.mLockTaskController;
	Task.mLockTaskUid = v57;
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1401295262, 0, 0, 0);
	Object v65 = LocalServices.getService(StatusBarManagerInterna.class);
	v65.showScreenPinningRequest(Task.mTaskId);
	Binder.restoreCallingIdentity(v58);
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startSystemLockTaskMode(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 12 @32 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTaskFragment()Lcom/android/server/wm/TaskFragment; > 1 @0 exception:2,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 5),
9 = phi  1,8,
return 9,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 3 @4 exception:4,
return 2,
return 5,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;)V > 14,3 @38 exception:15,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;Lcom/android/server/wm/Task;)V > 1,2,3 @1 exception:4,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isAttached()Z > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 1 @7 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHome()Z > 1 @11 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
12 = invokevirtual < Application, Lcom/android/server/wm/Task, returnsToHomeRootTask()Z > 1 @17 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @25 exception:14,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,2 @28 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @36 exception:20,
invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, moveHomeRootTaskToFront(Ljava/lang/String;)V > 8,21 @40 exception:22,
27 = invokevirtual < Application, Lcom/android/server/wm/Task, isRootTask()Z > 1 @43 exception:26,
conditional branch(eq, to iindex=-1) 27,6,
29 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getFocusedRootTask()Lcom/android/server/wm/Task; > 8 @49 exception:28,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,6,
conditional branch(ne, to iindex=-1) 3,6,
goto (from iindex= 28 to iindex = 2),
33 = phi  1,3,
35 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 33 @59 exception:34,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, positionChildAt(ILcom/android/server/wm/WindowContainer;Z)V > 35,36,33,37 @67 exception:38,
invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, updateLastFocusedRootTask(Lcom/android/server/wm/Task;Ljava/lang/String;)V > 8,30,2 @70 exception:39,
return,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startLockTaskMode(Lcom/android/server/wm/Task;Z)V > 1,12,16 @42 exception:17,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @6 exception:7,
9 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@165 ,
arraystore 11[6] = 8,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 9,10,6,6,11 @20 exception:12,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
conditional branch(eq, to iindex=-1) 2,6,
14 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 14,6,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 15 @32 exception:16,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
conditional branch(eq, to iindex=-1) 17,6,
19 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostTask()Lcom/android/server/wm/Task; > 17 @38 exception:18,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda1>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda1, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 1,2,4 @6 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 2,19,
27 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @44 exception:26,
29 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @48 exception:28,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = new <Primordial,[I>@545 ,
arraystore 31[6] = 32,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 30,31 @59 exception:33,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @62 exception:34,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, startLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 35,2,3,27 @66 exception:36,
5 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(ne, to iindex=-1) 3,6,
putfield 2.< Application, Lcom/android/server/wm/Task, mLockTaskUid, <Primordial,I> > = 4,
conditional branch(ne, to iindex=-1) 5,8,
31 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 31,6,
32 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 32,33,6,6,6 @36 exception:34,
37 = load_metadata: <Application,Lcom/android/server/statusbar/StatusBarManagerInternal>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 37 @41 exception:38,
40 = checkcast <Application,Lcom/android/server/statusbar/StatusBarManagerInternal>39 <Application,Lcom/android/server/statusbar/StatusBarManagerInternal>,
conditional branch(eq, to iindex=-1) 40,6,
41 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 2,
invokeinterface < Application, Lcom/android/server/statusbar/StatusBarManagerInternal, showScreenPinningRequest(I)V > 40,41 @51 exception:42,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 29 @69 exception:44,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @46 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @49 exception:19,
return,","depth : 0
public void startSystemLockTaskMode(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""startSystemLockTaskMode"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	Task v5 = v4.getRootTask();
	v5.moveToFront(""startSystemLockTaskMode"");
	p0.startLockTaskMode(v4, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public Task getRootTask(){
	TaskFragment v1 = p0.getRootTaskFragment();
	Task v2 = v1.asTask();
	return v2;
}
-----
depth : 2
public TaskFragment getRootTaskFragment(){
	WindowContainer v1 = p0.getParent();
	TaskFragment v2 = v1.asTaskFragment();
	return phiInstruction;
}
-----
depth : 2
public Task asTask(){
	return 0;
}
-----
depth : 1
public void moveToFront(String p1){
	p0.moveToFront(p1, 0);
	return;
}
-----
depth : 2
public void moveToFront(String p1, Task p2){
	boolean v1 = p0.isAttached();
	TaskDisplayArea v2 = p0.getDisplayArea();
	boolean v3 = p0.isActivityTypeHome();
	boolean v4 = p0.returnsToHomeRootTask();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(p1);
	StringBuilder v7 = v4.append("" returnToHome"");
	String v8 = v4.toString();
	v2.moveHomeRootTaskToFront(v8);
	boolean v10 = p0.isRootTask();
	Task v11 = v2.getFocusedRootTask();
	WindowContainer v12 = phiInstruction.getParent();
	v12.positionChildAt(2147483647, phiInstruction, 1);
	v2.updateLastFocusedRootTask(phiInstruction, p1);
	return;
}
-----
depth : 1
public void startLockTaskMode(Task p1, boolean p2){
	String v1 = String.valueOf(p1);
	Object v1 = new Object(1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v1);
	Task v3 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v4 = v3.getTopMostTask();
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	[I v6 = new [I(1);
	this.mRootWindowContainer.removeRootTasksInWindowingModes(v6);
	LockTaskController v8 = p0.getLockTaskController();
	v8.startLockTaskMode(p1, p2, v5);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 2
public Task getTopMostTask(){
	WindowContainer$$ExternalSyntheticLambda1 v0 = new WindowContainer$$ExternalSyntheticLambda1();
	Task v2 = p0.getTask(v0, 1);
	return v2;
}
-----
depth : 2
public void removeRootTasksInWindowingModes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public void startLockTaskMode(Task p1, boolean p2, int p3){
	Task.mLockTaskUid = p3;
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1401295262, 0, 0, 0);
	Object v2 = LocalServices.getService(StatusBarManagerInterna.class);
	v2.showScreenPinningRequest(Task.mTaskId);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void startSystemLockTaskMode(int p1){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	AppTransition$$ExternalSyntheticLambda2 v12 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v14 = PooledLambda.__(Tas.class);
	Integer v15 = Integer.valueOf(p1);
	PooledPredicate v16 = PooledLambda.obtainPredicate(v12, v14, v15);
	Task v17 = RootWindowContainer.getTask(v16);
	v16.recycle();
	Task v19 = RootWindowContainer.getOrCreateRootTask(0, 0, v17, 0);
	Task v20 = v17.getRootTask();
	boolean v21 = v17.reparent(v19, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v11 = v17;
	Task v10 = v11;
	WindowContainer v24 = TaskFragment.getParent();
	TaskFragment v25 = v24.asTaskFragment();
	TaskFragment v23 = phiInstruction;
	Task v26 = 0;
	Task v22 = v26;
	boolean v29 = Task.isAttached();
	TaskDisplayArea v30 = Task.getDisplayArea();
	boolean v31 = Task.isActivityTypeHome();
	boolean v32 = Task.returnsToHomeRootTask();
	StringBuilder v33 = new StringBuilder();
	StringBuilder v35 = v33.append(p1);
	StringBuilder v36 = v33.append("" returnToHome"");
	String v37 = v33.toString();
	v30.moveHomeRootTaskToFront(v37);
	boolean v39 = Task.isRootTask();
	Task v40 = v30.getFocusedRootTask();
	WindowContainer v41 = phiInstruction.getParent();
	v41.positionChildAt(2147483647, phiInstruction, 1);
	v30.updateLastFocusedRootTask(phiInstruction, p1);
	String v45 = String.valueOf(v10);
	Object v46 = new Object(1);
	ProtoLogImpl v48 = ProtoLogImpl.getSingleInstance();
	v48.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v46);
	int v51 = RootWindowContainer.getChildCount();
	WindowContainer v52 = RootWindowContainer.getChildAt(phiInstruction);
	Task v53 = v52.getFocusedRootTask();
	Task v50 = v53;
	WindowContainer$$ExternalSyntheticLambda1 v55 = new WindowContainer$$ExternalSyntheticLambda1();
	Task v57 = WindowContainer.getTask(v55, 1);
	Task v54 = v57;
	int v58 = Binder.getCallingUid();
	long v59 = Binder.clearCallingIdentity();
	[I v60 = new [I(1);
	int v62 = RootWindowContainer.getChildCount();
	LockTaskController v63 = this.mLockTaskController;
	Task.mLockTaskUid = v58;
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1401295262, 0, 0, 0);
	Object v66 = LocalServices.getService(StatusBarManagerInterna.class);
	v66.showScreenPinningRequest(Task.mTaskId);
	Binder.restoreCallingIdentity(v59);
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startSystemLockTaskMode(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 12 @32 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTaskFragment()Lcom/android/server/wm/TaskFragment; > 1 @0 exception:2,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTaskFragment()Lcom/android/server/wm/TaskFragment; > 6 @14 exception:7,
9 = phi  1,8,
return 9,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 3 @4 exception:4,
return 2,
return 5,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;)V > 14,3 @38 exception:15,
invokevirtual < Application, Lcom/android/server/wm/Task, moveToFront(Ljava/lang/String;Lcom/android/server/wm/Task;)V > 1,2,3 @1 exception:4,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isAttached()Z > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 1 @7 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHome()Z > 1 @11 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
12 = invokevirtual < Application, Lcom/android/server/wm/Task, returnsToHomeRootTask()Z > 1 @17 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @25 exception:14,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,2 @28 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,17 @33 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @36 exception:20,
invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, moveHomeRootTaskToFront(Ljava/lang/String;)V > 8,21 @40 exception:22,
27 = invokevirtual < Application, Lcom/android/server/wm/Task, isRootTask()Z > 1 @43 exception:26,
conditional branch(eq, to iindex=-1) 27,6,
29 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getFocusedRootTask()Lcom/android/server/wm/Task; > 8 @49 exception:28,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,6,
conditional branch(ne, to iindex=-1) 3,6,
goto (from iindex= 28 to iindex = 2),
33 = phi  1,3,
35 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 33 @59 exception:34,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, positionChildAt(ILcom/android/server/wm/WindowContainer;Z)V > 35,36,33,37 @67 exception:38,
invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, updateLastFocusedRootTask(Lcom/android/server/wm/Task;Ljava/lang/String;)V > 8,30,2 @70 exception:39,
return,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startLockTaskMode(Lcom/android/server/wm/Task;Z)V > 1,12,16 @42 exception:17,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @6 exception:7,
9 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@165 ,
arraystore 11[6] = 8,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 9,10,6,6,11 @20 exception:12,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
conditional branch(eq, to iindex=-1) 2,6,
14 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 14,6,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 15 @32 exception:16,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
conditional branch(eq, to iindex=-1) 17,6,
19 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostTask()Lcom/android/server/wm/Task; > 17 @38 exception:18,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda1>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda1, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 1,2,4 @6 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 2,19,
27 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @44 exception:26,
29 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @48 exception:28,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = new <Primordial,[I>@545 ,
arraystore 31[6] = 32,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksInWindowingModes([I)V > 30,31 @59 exception:33,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @62 exception:34,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, startLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 35,2,3,27 @66 exception:36,
5 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(ne, to iindex=-1) 3,6,
putfield 2.< Application, Lcom/android/server/wm/Task, mLockTaskUid, <Primordial,I> > = 4,
conditional branch(ne, to iindex=-1) 5,8,
31 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 31,6,
32 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 32,33,6,6,6 @36 exception:34,
37 = load_metadata: <Application,Lcom/android/server/statusbar/StatusBarManagerInternal>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 37 @41 exception:38,
40 = checkcast <Application,Lcom/android/server/statusbar/StatusBarManagerInternal>39 <Application,Lcom/android/server/statusbar/StatusBarManagerInternal>,
conditional branch(eq, to iindex=-1) 40,6,
41 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 2,
invokeinterface < Application, Lcom/android/server/statusbar/StatusBarManagerInternal, showScreenPinningRequest(I)V > 40,41 @51 exception:42,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 29 @69 exception:44,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @46 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @49 exception:19,
return,","depth : 0
public void startSystemLockTaskMode(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""startSystemLockTaskMode"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	Task v5 = v4.getRootTask();
	v5.moveToFront(""startSystemLockTaskMode"");
	p0.startLockTaskMode(v4, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public Task getRootTask(){
	TaskFragment v1 = p0.getRootTaskFragment();
	Task v2 = v1.asTask();
	return v2;
}
-----
depth : 2
public TaskFragment getRootTaskFragment(){
	WindowContainer v1 = p0.getParent();
	TaskFragment v2 = v1.asTaskFragment();
	TaskFragment v3 = v2.getRootTaskFragment();
	return phiInstruction;
}
-----
depth : 2
public Task asTask(){
	return 0;
}
-----
depth : 1
public void moveToFront(String p1){
	p0.moveToFront(p1, 0);
	return;
}
-----
depth : 2
public void moveToFront(String p1, Task p2){
	boolean v1 = p0.isAttached();
	TaskDisplayArea v2 = p0.getDisplayArea();
	boolean v3 = p0.isActivityTypeHome();
	boolean v4 = p0.returnsToHomeRootTask();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(p1);
	StringBuilder v7 = v4.append("" returnToHome"");
	String v8 = v4.toString();
	v2.moveHomeRootTaskToFront(v8);
	boolean v10 = p0.isRootTask();
	Task v11 = v2.getFocusedRootTask();
	WindowContainer v12 = phiInstruction.getParent();
	v12.positionChildAt(2147483647, phiInstruction, 1);
	v2.updateLastFocusedRootTask(phiInstruction, p1);
	return;
}
-----
depth : 1
public void startLockTaskMode(Task p1, boolean p2){
	String v1 = String.valueOf(p1);
	Object v1 = new Object(1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v1);
	Task v3 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v4 = v3.getTopMostTask();
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	[I v6 = new [I(1);
	this.mRootWindowContainer.removeRootTasksInWindowingModes(v6);
	LockTaskController v8 = p0.getLockTaskController();
	v8.startLockTaskMode(p1, p2, v5);
	Binder.restoreCallingIdentity(v6);
	return;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 2
public Task getTopMostTask(){
	WindowContainer$$ExternalSyntheticLambda1 v0 = new WindowContainer$$ExternalSyntheticLambda1();
	Task v2 = p0.getTask(v0, 1);
	return v2;
}
-----
depth : 2
public void removeRootTasksInWindowingModes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public void startLockTaskMode(Task p1, boolean p2, int p3){
	Task.mLockTaskUid = p3;
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1401295262, 0, 0, 0);
	Object v2 = LocalServices.getService(StatusBarManagerInterna.class);
	v2.showScreenPinningRequest(Task.mTaskId);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void startSystemLockTaskMode(int p1){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v13 = PooledLambda.__(Tas.class);
	Integer v14 = Integer.valueOf(p1);
	PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14);
	Task v16 = RootWindowContainer.getTask(v15);
	v15.recycle();
	Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0);
	Task v19 = v16.getRootTask();
	boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v10 = v16;
	Task v9 = v10;
	WindowContainer v23 = TaskFragment.getParent();
	TaskFragment v24 = v23.asTaskFragment();
	TaskFragment v25 = v24.getRootTaskFragment();
	TaskFragment v22 = phiInstruction;
	Task v26 = 0;
	Task v21 = v26;
	boolean v29 = Task.isAttached();
	TaskDisplayArea v30 = Task.getDisplayArea();
	boolean v31 = Task.isActivityTypeHome();
	boolean v32 = Task.returnsToHomeRootTask();
	StringBuilder v33 = new StringBuilder();
	StringBuilder v35 = v33.append(p1);
	StringBuilder v36 = v33.append("" returnToHome"");
	String v37 = v33.toString();
	v30.moveHomeRootTaskToFront(v37);
	boolean v39 = Task.isRootTask();
	Task v40 = v30.getFocusedRootTask();
	WindowContainer v41 = phiInstruction.getParent();
	v41.positionChildAt(2147483647, phiInstruction, 1);
	v30.updateLastFocusedRootTask(phiInstruction, p1);
	String v45 = String.valueOf(v9);
	Object v46 = new Object(1);
	ProtoLogImpl v48 = ProtoLogImpl.getSingleInstance();
	v48.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, 295861935, 0, 0, v46);
	int v51 = RootWindowContainer.getChildCount();
	WindowContainer v52 = RootWindowContainer.getChildAt(phiInstruction);
	Task v53 = v52.getFocusedRootTask();
	Task v50 = v53;
	WindowContainer$$ExternalSyntheticLambda1 v55 = new WindowContainer$$ExternalSyntheticLambda1();
	Task v57 = WindowContainer.getTask(v55, 1);
	Task v54 = v57;
	int v58 = Binder.getCallingUid();
	long v59 = Binder.clearCallingIdentity();
	[I v60 = new [I(1);
	int v62 = RootWindowContainer.getChildCount();
	LockTaskController v63 = this.mLockTaskController;
	Task.mLockTaskUid = v58;
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1401295262, 0, 0, 0);
	Object v66 = LocalServices.getService(StatusBarManagerInterna.class);
	v66.showScreenPinningRequest(Task.mTaskId);
	Binder.restoreCallingIdentity(v59);
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","cancelTaskWindowTransition(I)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
conditional branch(ne, to iindex=-1) 12,10,
17 = new <Application,Ljava/lang/StringBuilder>@26,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @28 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @36 exception:22,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,24 @41 exception:25,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:27,
30 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 16,28 @48 exception:29,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:45,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @55 exception:46,
return,","depth : 0
public void cancelTaskWindowTransition(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelTaskWindowTransition()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelTaskWindowTransition: taskId="");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" not found"");
	String v9 = v4.toString();
	int v10 = Slog.w(""ActivityTaskManager"", v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","public void cancelTaskWindowTransition(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelTaskWindowTransition()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelTaskWindowTransition(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
invokevirtual < Application, Lcom/android/server/wm/Task, cancelTaskWindowTransition()V > 12 @59 exception:13,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @63 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @66 exception:15,
return,","depth : 0
public void cancelTaskWindowTransition(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelTaskWindowTransition()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	v4.cancelTaskWindowTransition();
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public void cancelTaskWindowTransition(){
	int v1 = WindowContainer.mChildren.size();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void cancelTaskWindowTransition(int p1){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v9 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v8 = v9;
	int v11 = WindowContainer.mChildren.size();
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelTaskWindowTransition(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
17 = new <Application,Ljava/lang/StringBuilder>@26,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @28 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @36 exception:22,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,24 @41 exception:25,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:27,
30 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 16,28 @48 exception:29,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:45,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @55 exception:46,
return,","depth : 0
public void cancelTaskWindowTransition(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelTaskWindowTransition()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelTaskWindowTransition: taskId="");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" not found"");
	String v9 = v4.toString();
	int v10 = Slog.w(""ActivityTaskManager"", v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void cancelTaskWindowTransition(int p1){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v9 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v8 = v9;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelTaskWindowTransition(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
17 = new <Application,Ljava/lang/StringBuilder>@26,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @28 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @36 exception:22,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,24 @41 exception:25,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:27,
30 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 16,28 @48 exception:29,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:45,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @55 exception:46,
return,","depth : 0
public void cancelTaskWindowTransition(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelTaskWindowTransition()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelTaskWindowTransition: taskId="");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" not found"");
	String v9 = v4.toString();
	int v10 = Slog.w(""ActivityTaskManager"", v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void cancelTaskWindowTransition(int p1){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v13 = PooledLambda.__(Tas.class);
	Integer v14 = Integer.valueOf(p1);
	PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14);
	Task v16 = RootWindowContainer.getTask(v15);
	v15.recycle();
	Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0);
	Task v19 = v16.getRootTask();
	boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v10 = v16;
	Task v9 = v10;
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelTaskWindowTransition(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
17 = new <Application,Ljava/lang/StringBuilder>@26,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @28 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @36 exception:22,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,24 @41 exception:25,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:27,
30 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 16,28 @48 exception:29,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:45,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @55 exception:46,
return,","depth : 0
public void cancelTaskWindowTransition(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelTaskWindowTransition()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelTaskWindowTransition: taskId="");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" not found"");
	String v9 = v4.toString();
	int v10 = Slog.w(""ActivityTaskManager"", v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void cancelTaskWindowTransition(int p1){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	AppTransition$$ExternalSyntheticLambda2 v12 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v14 = PooledLambda.__(Tas.class);
	Integer v15 = Integer.valueOf(p1);
	PooledPredicate v16 = PooledLambda.obtainPredicate(v12, v14, v15);
	Task v17 = RootWindowContainer.getTask(v16);
	v16.recycle();
	Task v19 = RootWindowContainer.getOrCreateRootTask(0, 0, v17, 0);
	Task v20 = v17.getRootTask();
	boolean v21 = v17.reparent(v19, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v11 = v17;
	Task v10 = v11;
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelTaskWindowTransition(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 9,2,10 @18 exception:11,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 12,10,
17 = new <Application,Ljava/lang/StringBuilder>@26,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @28 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @33 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @36 exception:22,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,24 @41 exception:25,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @44 exception:27,
30 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 16,28 @48 exception:29,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:45,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @55 exception:46,
return,","depth : 0
public void cancelTaskWindowTransition(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelTaskWindowTransition()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelTaskWindowTransition: taskId="");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" not found"");
	String v9 = v4.toString();
	int v10 = Slog.w(""ActivityTaskManager"", v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void cancelTaskWindowTransition(int p1){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v13 = PooledLambda.__(Tas.class);
	Integer v14 = Integer.valueOf(p1);
	PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14);
	Task v16 = RootWindowContainer.getTask(v15);
	v15.recycle();
	Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0);
	Task v19 = v16.getRootTask();
	boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v10 = v16;
	Task v9 = v10;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setPackageAskScreenCompat(Ljava/lang/String;Z)V","0","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageAskCompatModeLocked(Ljava/lang/String;Z)V > 10,2,3 @17 exception:11,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
return,","depth : 0
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPackageAskScreenCompat(Ljava/lang/String;Z)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageAskCompatModeLocked(Ljava/lang/String;Z)V > 10,2,3 @17 exception:11,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageFlagLocked(Ljava/lang/String;IZ)V > 1,2,4,3 @1 exception:5,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void setPackageAskCompatModeLocked(String p1, boolean p2){
	p0.setPackageFlagLocked(p1, 1, p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setPackageAskScreenCompat(String p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	CompatModePackages.setPackageFlagLocked(p1, 1, p2);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPackageAskScreenCompat(Ljava/lang/String;Z)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageAskCompatModeLocked(Ljava/lang/String;Z)V > 10,2,3 @17 exception:11,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageFlagLocked(Ljava/lang/String;IZ)V > 1,2,4,3 @1 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,2 @0 exception:5,
conditional branch(eq, to iindex=-1) 4,7,
9 = bitnot 3,
10 = binaryop(and) 9 , 6,
goto (from iindex= 5 to iindex = 2),
11 = phi  10,8,
conditional branch(eq, to iindex=-1) 6,11,
conditional branch(eq, to iindex=-1) 11,7,
15 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mPackages, <Application,Ljava/util/HashMap> > 1,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 11 @16 exception:16,
19 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 15,2,17 @20 exception:18,
goto (from iindex= 13 to iindex = 6),
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, scheduleWrite()V > 1 @29 exception:24,
return,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setPackageAskCompatModeLocked(String p1, boolean p2){
	p0.setPackageFlagLocked(p1, 1, p2);
	return;
}
-----
depth : 2
public void setPackageFlagLocked(String p1, int p2, boolean p3){
	int v1 = p0.getPackageFlags(p1);
	Integer v2 = Integer.valueOf(phiInstruction);
	Object v3 = this.mPackages.put(p1, v2);
	p0.scheduleWrite();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setPackageAskScreenCompat(String p1, boolean p2){
	int v7 = CompatModePackages.getPackageFlags(p1);
	Integer v8 = Integer.valueOf(phiInstruction);
	Object v9 = this.mPackages.put(p1, v8);
	CompatModePackages.scheduleWrite();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPackageAskScreenCompat(Ljava/lang/String;Z)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageAskCompatModeLocked(Ljava/lang/String;Z)V > 10,2,3 @17 exception:11,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageFlagLocked(Ljava/lang/String;IZ)V > 1,2,4,3 @1 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,2 @0 exception:5,
conditional branch(eq, to iindex=-1) 4,7,
9 = bitnot 3,
10 = binaryop(and) 9 , 6,
goto (from iindex= 5 to iindex = 2),
11 = phi  10,8,
conditional branch(eq, to iindex=-1) 6,11,
conditional branch(eq, to iindex=-1) 11,7,
15 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mPackages, <Application,Ljava/util/HashMap> > 1,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 11 @16 exception:16,
19 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 15,2,17 @20 exception:18,
goto (from iindex= 13 to iindex = 6),
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, scheduleWrite()V > 1 @29 exception:24,
return,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void setPackageAskCompatModeLocked(String p1, boolean p2){
	p0.setPackageFlagLocked(p1, 1, p2);
	return;
}
-----
depth : 2
public void setPackageFlagLocked(String p1, int p2, boolean p3){
	int v1 = p0.getPackageFlags(p1);
	Integer v2 = Integer.valueOf(phiInstruction);
	Object v3 = this.mPackages.put(p1, v2);
	p0.scheduleWrite();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerThreadPriorityBooster.boost();
	int v8 = CompatModePackages.getPackageFlags(p1);
	Integer v9 = Integer.valueOf(phiInstruction);
	Object v10 = this.mPackages.put(p1, v9);
	CompatModePackages.scheduleWrite();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPackageAskScreenCompat(Ljava/lang/String;Z)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageAskCompatModeLocked(Ljava/lang/String;Z)V > 10,2,3 @17 exception:11,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageFlagLocked(Ljava/lang/String;IZ)V > 1,2,4,3 @1 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,2 @0 exception:5,
conditional branch(eq, to iindex=-1) 4,7,
9 = bitnot 3,
10 = binaryop(and) 9 , 6,
goto (from iindex= 5 to iindex = 2),
11 = phi  10,8,
conditional branch(eq, to iindex=-1) 6,11,
conditional branch(eq, to iindex=-1) 11,7,
15 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mPackages, <Application,Ljava/util/HashMap> > 1,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 11 @16 exception:16,
19 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 15,2,17 @20 exception:18,
goto (from iindex= 13 to iindex = 6),
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, scheduleWrite()V > 1 @29 exception:24,
return,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void setPackageAskScreenCompat(String p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageAskCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setPackageAskCompatModeLocked(String p1, boolean p2){
	p0.setPackageFlagLocked(p1, 1, p2);
	return;
}
-----
depth : 2
public void setPackageFlagLocked(String p1, int p2, boolean p3){
	int v1 = p0.getPackageFlags(p1);
	Integer v2 = Integer.valueOf(phiInstruction);
	Object v3 = this.mPackages.put(p1, v2);
	p0.scheduleWrite();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setPackageAskScreenCompat(String p1, boolean p2){
	int v7 = CompatModePackages.getPackageFlags(p1);
	Integer v8 = Integer.valueOf(phiInstruction);
	Object v9 = this.mPackages.put(p1, v8);
	CompatModePackages.scheduleWrite();
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V","0","4 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
8 = invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, reportRunning(Landroid/app/IApplicationThread;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 11,12,13 @21 exception:14,
16 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @24 exception:15,
18 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @28 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @35 exception:20,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(II)Lcom/android/server/wm/WindowProcessController; > 1,16,18 @38 exception:21,
conditional branch(eq, to iindex=-1) 22,5,
24 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, isRunningRemoteTransition()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,5,
51 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @50 exception:50,
conditional branch(ne, to iindex=-1) 51,5,
56 = new <Application,Ljava/lang/StringBuilder>@58,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 56 @60 exception:57,
60 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 56,58 @65 exception:59,
62 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 56,2 @68 exception:61,
64 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 56 @71 exception:63,
66 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 45,64 @75 exception:65,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @79 exception:76,
return,","depth : 0
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v7 = p0.getProcessController(v4, v5);
	boolean v8 = v7.isRunningRemoteTransition();
	WindowProcessController v9 = p0.getProcessController(p1);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""setRunningRemoteTransition: no process for "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.w(""ActivityTaskManager"", v13);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v7 = p0.getProcessController(v4, v5);
	boolean v8 = v7.isRunningRemoteTransition();
	WindowProcessController v9 = p0.getProcessController(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V","1","4 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
8 = invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, reportRunning(Landroid/app/IApplicationThread;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 11,12,13 @21 exception:14,
16 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @24 exception:15,
18 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @28 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(II)Lcom/android/server/wm/WindowProcessController; > 1,16,18 @38 exception:21,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 4,2 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Landroid/os/UserHandle, isApp(I)Z > 3 @10 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mUid, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 10,3,
return 6,
conditional branch(eq, to iindex=-1) 22,5,
24 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, isRunningRemoteTransition()Z > 22 @44 exception:23,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mRunningRecentsAnimation, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mRunningRemoteAnimation, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 4,3,
goto (from iindex= 4 to iindex = 3),
7 = phi  3,6,
return 7,
conditional branch(eq, to iindex=-1) 24,5,
51 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @50 exception:50,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
conditional branch(ne, to iindex=-1) 51,5,
52 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, update(Lcom/android/server/wm/WindowProcessController;ZZ)V > 52,51,53,5 @87 exception:54,
conditional branch(ne, to iindex=-1) 3,6,
39 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 39,
40 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
42 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 40 @8 exception:41,
43 = binaryop(sub) 42 , 5,
51 = phi  50,43,
conditional branch(lt, to iindex=-1) 51,6,
44 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
46 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 44,51 @18 exception:45,
47 = checkcast <Application,Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess>46 <Application,Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess>,
48 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess, mProc, <Application,Lcom/android/server/wm/WindowProcessController> > 47,
conditional branch(ne, to iindex=-1) 48,2,
54 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
56 = invokevirtual < Application, Landroid/util/ArrayMap, removeAt(I)Ljava/lang/Object; > 54,51 @30 exception:55,
goto (from iindex= 18 to iindex = 5),
57 = phi  5,6,
conditional branch(ne, to iindex=-1) 57,6,
monitorexit 39,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, setRunningRemoteAnimation(Z)V > 2,6 @43 exception:61,
return,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:55,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v7 = p0.getProcessController(v4, v5);
	boolean v8 = v7.isRunningRemoteTransition();
	WindowProcessController v9 = p0.getProcessController(p1);
	TransitionController.mRemotePlayer.update(v9, 1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(int p1, int p2){
	return v1;
}
-----
depth : 1
public boolean isRunningRemoteTransition(){
	return phiInstruction;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 1
public void update(WindowProcessController p1, boolean p2, boolean p3){
	int v1 = this.mDelegateProcesses.size();
	Object v2 = this.mDelegateProcesses.valueAt(phiInstruction);
	Object v3 = this.mDelegateProcesses.removeAt(phiInstruction);
	p1.setRunningRemoteAnimation(0);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	this.sThreadPriorityBooster.boost();
	WindowProcessController v8 = v9;
	boolean v11 = phiInstruction;
	IBinder v13 = p1.asBinder();
	ArrayMap v14 = this.mProcessNames.getMap();
	int v15 = v14.size();
	Object v16 = v14.valueAt(phiInstruction);
	int v17 = v16.size();
	Object v18 = v16.valueAt(phiInstruction);
	boolean v19 = v18.hasThread();
	IApplicationThread v20 = v18.getThread();
	IBinder v21 = v20.asBinder();
	WindowProcessController v12 = v18;
	int v23 = this.mDelegateProcesses.size();
	Object v24 = this.mDelegateProcesses.valueAt(phiInstruction);
	Object v25 = this.mDelegateProcesses.removeAt(phiInstruction);
	v12.setRunningRemoteAnimation(0);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V","1","4 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
8 = invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, reportRunning(Landroid/app/IApplicationThread;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 11,12,13 @21 exception:14,
16 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @24 exception:15,
18 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @28 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(II)Lcom/android/server/wm/WindowProcessController; > 1,16,18 @38 exception:21,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 4,2 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Landroid/os/UserHandle, isApp(I)Z > 3 @10 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mUid, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 10,3,
return 7,
conditional branch(eq, to iindex=-1) 22,5,
24 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, isRunningRemoteTransition()Z > 22 @44 exception:23,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mRunningRecentsAnimation, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mRunningRemoteAnimation, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 4,3,
goto (from iindex= 4 to iindex = 3),
7 = phi  3,6,
return 7,
conditional branch(eq, to iindex=-1) 24,5,
51 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @50 exception:50,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
conditional branch(ne, to iindex=-1) 51,5,
52 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, update(Lcom/android/server/wm/WindowProcessController;ZZ)V > 52,51,53,5 @87 exception:54,
conditional branch(ne, to iindex=-1) 3,6,
39 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 39,
40 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
42 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 40 @8 exception:41,
43 = binaryop(sub) 42 , 5,
51 = phi  50,43,
conditional branch(lt, to iindex=-1) 51,6,
44 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
46 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 44,51 @18 exception:45,
47 = checkcast <Application,Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess>46 <Application,Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess>,
48 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess, mProc, <Application,Lcom/android/server/wm/WindowProcessController> > 47,
conditional branch(ne, to iindex=-1) 48,2,
54 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
56 = invokevirtual < Application, Landroid/util/ArrayMap, removeAt(I)Ljava/lang/Object; > 54,51 @30 exception:55,
goto (from iindex= 18 to iindex = 5),
57 = phi  5,6,
conditional branch(ne, to iindex=-1) 57,6,
monitorexit 39,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, setRunningRemoteAnimation(Z)V > 2,6 @43 exception:61,
return,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:55,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v7 = p0.getProcessController(v4, v5);
	boolean v8 = v7.isRunningRemoteTransition();
	WindowProcessController v9 = p0.getProcessController(p1);
	TransitionController.mRemotePlayer.update(v9, 1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(int p1, int p2){
	return 0;
}
-----
depth : 1
public boolean isRunningRemoteTransition(){
	return phiInstruction;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 1
public void update(WindowProcessController p1, boolean p2, boolean p3){
	int v1 = this.mDelegateProcesses.size();
	Object v2 = this.mDelegateProcesses.valueAt(phiInstruction);
	Object v3 = this.mDelegateProcesses.removeAt(phiInstruction);
	p1.setRunningRemoteAnimation(0);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	this.sThreadPriorityBooster.boost();
	WindowProcessController v8 = 0;
	boolean v11 = phiInstruction;
	IBinder v13 = p1.asBinder();
	ArrayMap v14 = this.mProcessNames.getMap();
	int v15 = v14.size();
	Object v16 = v14.valueAt(phiInstruction);
	int v17 = v16.size();
	Object v18 = v16.valueAt(phiInstruction);
	boolean v19 = v18.hasThread();
	IApplicationThread v20 = v18.getThread();
	IBinder v21 = v20.asBinder();
	WindowProcessController v12 = v18;
	int v23 = this.mDelegateProcesses.size();
	Object v24 = this.mDelegateProcesses.valueAt(phiInstruction);
	Object v25 = this.mDelegateProcesses.removeAt(phiInstruction);
	v12.setRunningRemoteAnimation(0);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V","2","4 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
8 = invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, reportRunning(Landroid/app/IApplicationThread;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 11,12,13 @21 exception:14,
16 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @24 exception:15,
18 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @28 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(II)Lcom/android/server/wm/WindowProcessController; > 1,16,18 @38 exception:21,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 4,2 @2 exception:5,
3 = getfield < Application, Lcom/android/server/wm/WindowProcessControllerMap, mPidMap, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>5 <Application,Lcom/android/server/wm/WindowProcessController>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
return 7,
conditional branch(eq, to iindex=-1) 22,5,
24 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, isRunningRemoteTransition()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,5,
51 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @50 exception:50,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
2 = getfield < Application, Lcom/android/internal/app/ProcessMap, mMap, <Application,Landroid/util/ArrayMap> > 1,
return 2,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
conditional branch(ne, to iindex=-1) 51,5,
52 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, update(Lcom/android/server/wm/WindowProcessController;ZZ)V > 52,51,53,5 @87 exception:54,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, isRunningRemoteTransition()Z > 2 @50 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 2 @56 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, setRunningRemoteAnimation(Z)V > 2,5 @63 exception:11,
3 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mRunningRemoteAnimation, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,2,
putfield 1.< Application, Lcom/android/server/wm/WindowProcessController, mRunningRemoteAnimation, <Primordial,Z> > = 2,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, updateRunningRemoteOrRecentsAnimation()V > 1 @7 exception:4,
return,
12 = new <Application,Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess>@66,
invokespecial < Application, Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess, <init>(Lcom/android/server/wm/TransitionController$RemotePlayer;Lcom/android/server/wm/WindowProcessController;)V > 12,1,2 @68 exception:13,
conditional branch(eq, to iindex=-1) 4,6,
putfield 12.< Application, Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess, mNeedReport, <Primordial,Z> > = 5,
14 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mAtm, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 14,
18 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 15,12,16 @81 exception:17,
23 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 23,
24 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
26 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 2 @89 exception:25,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
28 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 26 @93 exception:27,
30 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 24,28,12 @97 exception:29,
monitorexit 23,
return,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:55,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v7 = p0.getProcessController(v4, v5);
	boolean v8 = v7.isRunningRemoteTransition();
	WindowProcessController v9 = p0.getProcessController(p1);
	TransitionController.mRemotePlayer.update(v9, 1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(int p1, int p2){
	WindowProcessController v1 = this.mProcessMap.getProcess(p1);
	return 0;
}
-----
depth : 2
public WindowProcessController getProcess(int p1){
	Object v1 = this.mPidMap.get(p1);
	return v1;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 2
public ArrayMap getMap(){
	return this.mMap;
}
-----
depth : 2
public boolean hasThread(){
	return phiInstruction;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 1
public void update(WindowProcessController p1, boolean p2, boolean p3){
	boolean v1 = p1.isRunningRemoteTransition();
	boolean v2 = p1.hasThread();
	p1.setRunningRemoteAnimation(1);
	TransitionController$RemotePlayer$DelegateProcess v3 = new TransitionController$RemotePlayer$DelegateProcess(p0,p1);
	TransitionController$RemotePlayer$DelegateProcess.mNeedReport = 1;
	boolean v5 = ActivityTaskManagerService.mH.postDelayed(v3, 100);
	IApplicationThread v6 = p1.getThread();
	IBinder v7 = v6.asBinder();
	Object v8 = this.mDelegateProcesses.put(v7, v3);
	return;
}
-----
depth : 2
public void setRunningRemoteAnimation(boolean p1){
	this.mRunningRemoteAnimation = p1;
	p0.updateRunningRemoteOrRecentsAnimation();
	return;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	Object v11 = this.mPidMap.get(p1);
	WindowProcessController v10 = v11;
	WindowProcessController v9 = 0;
	boolean v12 = v9.isRunningRemoteTransition();
	IBinder v14 = p1.asBinder();
	ArrayMap v15 = this.mMap;
	int v16 = v15.size();
	Object v17 = v15.valueAt(phiInstruction);
	int v18 = v17.size();
	Object v19 = v17.valueAt(phiInstruction);
	boolean v20 = phiInstruction;
	IApplicationThread v21 = this.mThread;
	IBinder v22 = v21.asBinder();
	WindowProcessController v13 = v19;
	boolean v24 = v13.isRunningRemoteTransition();
	boolean v25 = v13.hasThread();
	this.mRunningRemoteAnimation = 1;
	WindowProcessController.updateRunningRemoteOrRecentsAnimation();
	TransitionController$RemotePlayer$DelegateProcess v28 = new TransitionController$RemotePlayer$DelegateProcess(TransitionController$RemotePlayer,v13);
	TransitionController$RemotePlayer$DelegateProcess.mNeedReport = 1;
	boolean v30 = ActivityTaskManagerService.mH.postDelayed(v28, 100);
	IApplicationThread v31 = this.mThread;
	IBinder v32 = v31.asBinder();
	Object v33 = this.mDelegateProcesses.put(v32, v28);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V","2","4 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
8 = invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, reportRunning(Landroid/app/IApplicationThread;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 11,12,13 @21 exception:14,
16 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @24 exception:15,
18 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @28 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(II)Lcom/android/server/wm/WindowProcessController; > 1,16,18 @38 exception:21,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 4,2 @2 exception:5,
3 = getfield < Application, Lcom/android/server/wm/WindowProcessControllerMap, mPidMap, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>5 <Application,Lcom/android/server/wm/WindowProcessController>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
return 7,
conditional branch(eq, to iindex=-1) 22,5,
24 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, isRunningRemoteTransition()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,5,
51 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @50 exception:50,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
2 = getfield < Application, Lcom/android/internal/app/ProcessMap, mMap, <Application,Landroid/util/ArrayMap> > 1,
return 2,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
conditional branch(ne, to iindex=-1) 51,5,
52 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, update(Lcom/android/server/wm/WindowProcessController;ZZ)V > 52,51,53,5 @87 exception:54,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, isRunningRemoteTransition()Z > 2 @50 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 2 @56 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, setRunningRemoteAnimation(Z)V > 2,5 @63 exception:11,
3 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mRunningRemoteAnimation, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,2,
putfield 1.< Application, Lcom/android/server/wm/WindowProcessController, mRunningRemoteAnimation, <Primordial,Z> > = 2,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, updateRunningRemoteOrRecentsAnimation()V > 1 @7 exception:4,
return,
12 = new <Application,Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess>@66,
invokespecial < Application, Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess, <init>(Lcom/android/server/wm/TransitionController$RemotePlayer;Lcom/android/server/wm/WindowProcessController;)V > 12,1,2 @68 exception:13,
conditional branch(eq, to iindex=-1) 4,6,
putfield 12.< Application, Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess, mNeedReport, <Primordial,Z> > = 5,
14 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mAtm, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 14,
18 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 15,12,16 @81 exception:17,
23 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 23,
24 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
26 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 2 @89 exception:25,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
28 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 26 @93 exception:27,
30 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 24,28,12 @97 exception:29,
monitorexit 23,
return,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:55,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v7 = p0.getProcessController(v4, v5);
	boolean v8 = v7.isRunningRemoteTransition();
	WindowProcessController v9 = p0.getProcessController(p1);
	TransitionController.mRemotePlayer.update(v9, 1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(int p1, int p2){
	WindowProcessController v1 = this.mProcessMap.getProcess(p1);
	return 0;
}
-----
depth : 2
public WindowProcessController getProcess(int p1){
	Object v1 = this.mPidMap.get(p1);
	return v1;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 2
public ArrayMap getMap(){
	return this.mMap;
}
-----
depth : 2
public boolean hasThread(){
	return phiInstruction;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 1
public void update(WindowProcessController p1, boolean p2, boolean p3){
	boolean v1 = p1.isRunningRemoteTransition();
	boolean v2 = p1.hasThread();
	p1.setRunningRemoteAnimation(1);
	TransitionController$RemotePlayer$DelegateProcess v3 = new TransitionController$RemotePlayer$DelegateProcess(p0,p1);
	TransitionController$RemotePlayer$DelegateProcess.mNeedReport = 1;
	boolean v5 = ActivityTaskManagerService.mH.postDelayed(v3, 100);
	IApplicationThread v6 = p1.getThread();
	IBinder v7 = v6.asBinder();
	Object v8 = this.mDelegateProcesses.put(v7, v3);
	return;
}
-----
depth : 2
public void setRunningRemoteAnimation(boolean p1){
	this.mRunningRemoteAnimation = p1;
	p0.updateRunningRemoteOrRecentsAnimation();
	return;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerThreadPriorityBooster.boost();
	Object v12 = this.mPidMap.get(p1);
	WindowProcessController v11 = v12;
	WindowProcessController v10 = 0;
	boolean v13 = v10.isRunningRemoteTransition();
	IBinder v15 = p1.asBinder();
	ArrayMap v16 = this.mMap;
	int v17 = v16.size();
	Object v18 = v16.valueAt(phiInstruction);
	int v19 = v18.size();
	Object v20 = v18.valueAt(phiInstruction);
	boolean v21 = phiInstruction;
	IApplicationThread v22 = this.mThread;
	IBinder v23 = v22.asBinder();
	WindowProcessController v14 = v20;
	boolean v25 = v14.isRunningRemoteTransition();
	boolean v26 = v14.hasThread();
	this.mRunningRemoteAnimation = 1;
	WindowProcessController.updateRunningRemoteOrRecentsAnimation();
	TransitionController$RemotePlayer$DelegateProcess v29 = new TransitionController$RemotePlayer$DelegateProcess(TransitionController$RemotePlayer,v14);
	TransitionController$RemotePlayer$DelegateProcess.mNeedReport = 1;
	boolean v31 = ActivityTaskManagerService.mH.postDelayed(v29, 100);
	IApplicationThread v32 = this.mThread;
	IBinder v33 = v32.asBinder();
	Object v34 = this.mDelegateProcesses.put(v33, v29);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setRunningRemoteTransitionDelegate(Landroid/app/IApplicationThread;)V","2","4 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
8 = invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, reportRunning(Landroid/app/IApplicationThread;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 11,12,13 @21 exception:14,
16 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @24 exception:15,
18 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @28 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(II)Lcom/android/server/wm/WindowProcessController; > 1,16,18 @38 exception:21,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 4,2 @2 exception:5,
3 = getfield < Application, Lcom/android/server/wm/WindowProcessControllerMap, mPidMap, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>5 <Application,Lcom/android/server/wm/WindowProcessController>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
return 7,
conditional branch(eq, to iindex=-1) 22,5,
24 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, isRunningRemoteTransition()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,5,
51 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @50 exception:50,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
2 = getfield < Application, Lcom/android/internal/app/ProcessMap, mMap, <Application,Landroid/util/ArrayMap> > 1,
return 2,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
conditional branch(ne, to iindex=-1) 51,5,
52 = getfield < Application, Lcom/android/server/wm/TransitionController, mRemotePlayer, <Application,Lcom/android/server/wm/TransitionController$RemotePlayer> > 4,
invokevirtual < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, update(Lcom/android/server/wm/WindowProcessController;ZZ)V > 52,51,53,5 @87 exception:54,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, isRunningRemoteTransition()Z > 2 @50 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 2 @56 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, setRunningRemoteAnimation(Z)V > 2,5 @63 exception:11,
3 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mRunningRemoteAnimation, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,2,
putfield 1.< Application, Lcom/android/server/wm/WindowProcessController, mRunningRemoteAnimation, <Primordial,Z> > = 2,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, updateRunningRemoteOrRecentsAnimation()V > 1 @7 exception:4,
return,
12 = new <Application,Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess>@66,
invokespecial < Application, Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess, <init>(Lcom/android/server/wm/TransitionController$RemotePlayer;Lcom/android/server/wm/WindowProcessController;)V > 12,1,2 @68 exception:13,
conditional branch(eq, to iindex=-1) 4,6,
putfield 12.< Application, Lcom/android/server/wm/TransitionController$RemotePlayer$DelegateProcess, mNeedReport, <Primordial,Z> > = 5,
14 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mAtm, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 14,
18 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 15,12,16 @81 exception:17,
23 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 23,
24 = getfield < Application, Lcom/android/server/wm/TransitionController$RemotePlayer, mDelegateProcesses, <Application,Landroid/util/ArrayMap> > 1,
26 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 2 @89 exception:25,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
28 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 26 @93 exception:27,
30 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 24,28,12 @97 exception:29,
monitorexit 23,
return,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:55,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v7 = p0.getProcessController(v4, v5);
	boolean v8 = v7.isRunningRemoteTransition();
	WindowProcessController v9 = p0.getProcessController(p1);
	TransitionController.mRemotePlayer.update(v9, 1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(int p1, int p2){
	WindowProcessController v1 = this.mProcessMap.getProcess(p1);
	return 0;
}
-----
depth : 2
public WindowProcessController getProcess(int p1){
	Object v1 = this.mPidMap.get(p1);
	return v1;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 2
public ArrayMap getMap(){
	return this.mMap;
}
-----
depth : 2
public boolean hasThread(){
	return phiInstruction;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 1
public void update(WindowProcessController p1, boolean p2, boolean p3){
	boolean v1 = p1.isRunningRemoteTransition();
	boolean v2 = p1.hasThread();
	p1.setRunningRemoteAnimation(1);
	TransitionController$RemotePlayer$DelegateProcess v3 = new TransitionController$RemotePlayer$DelegateProcess(p0,p1);
	TransitionController$RemotePlayer$DelegateProcess.mNeedReport = 1;
	boolean v5 = ActivityTaskManagerService.mH.postDelayed(v3, 100);
	IApplicationThread v6 = p1.getThread();
	IBinder v7 = v6.asBinder();
	Object v8 = this.mDelegateProcesses.put(v7, v3);
	return;
}
-----
depth : 2
public void setRunningRemoteAnimation(boolean p1){
	this.mRunningRemoteAnimation = p1;
	p0.updateRunningRemoteOrRecentsAnimation();
	return;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setRunningRemoteTransitionDelegate(IApplicationThread p1){
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	Object v11 = this.mPidMap.get(p1);
	WindowProcessController v10 = v11;
	WindowProcessController v9 = 0;
	boolean v12 = v9.isRunningRemoteTransition();
	IBinder v14 = p1.asBinder();
	ArrayMap v15 = this.mMap;
	int v16 = v15.size();
	Object v17 = v15.valueAt(phiInstruction);
	int v18 = v17.size();
	Object v19 = v17.valueAt(phiInstruction);
	boolean v20 = phiInstruction;
	IApplicationThread v21 = this.mThread;
	IBinder v22 = v21.asBinder();
	WindowProcessController v13 = v19;
	boolean v24 = v13.isRunningRemoteTransition();
	boolean v25 = v13.hasThread();
	this.mRunningRemoteAnimation = 1;
	WindowProcessController.updateRunningRemoteOrRecentsAnimation();
	TransitionController$RemotePlayer$DelegateProcess v28 = new TransitionController$RemotePlayer$DelegateProcess(TransitionController$RemotePlayer,v13);
	TransitionController$RemotePlayer$DelegateProcess.mNeedReport = 1;
	boolean v30 = ActivityTaskManagerService.mH.postDelayed(v28, 100);
	IApplicationThread v31 = this.mThread;
	IBinder v32 = v31.asBinder();
	Object v33 = this.mDelegateProcesses.put(v32, v28);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setSplitScreenResizing(Z)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, setSplitScreenResizing(Z)V > 9,2 @17 exception:10,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:15,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @24 exception:20,
return,","depth : 0
public void setSplitScreenResizing(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""setSplitScreenResizing()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mTaskSupervisor.setSplitScreenResizing(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","public void setSplitScreenResizing(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""setSplitScreenResizing()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mTaskSupervisor.setSplitScreenResizing(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setSplitScreenResizing(Z)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, setSplitScreenResizing(Z)V > 9,2 @17 exception:10,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > = 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, setDockedRootTaskResizing(Z)V > 4,2 @9 exception:5,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @24 exception:20,
return,","depth : 0
public void setSplitScreenResizing(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""setSplitScreenResizing()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mTaskSupervisor.setSplitScreenResizing(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void setSplitScreenResizing(boolean p1){
	this.mDockedRootTaskResizing = p1;
	this.mWindowManager.setDockedRootTaskResizing(p1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setSplitScreenResizing(boolean p1){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	this.mDockedRootTaskResizing = p1;
	this.mWindowManager.setDockedRootTaskResizing(p1);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setSplitScreenResizing(Z)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, setSplitScreenResizing(Z)V > 9,2 @17 exception:10,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > = 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, setDockedRootTaskResizing(Z)V > 4,2 @9 exception:5,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @24 exception:20,
return,","depth : 0
public void setSplitScreenResizing(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""setSplitScreenResizing()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mTaskSupervisor.setSplitScreenResizing(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void setSplitScreenResizing(boolean p1){
	this.mDockedRootTaskResizing = p1;
	this.mWindowManager.setDockedRootTaskResizing(p1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setSplitScreenResizing(boolean p1){
	long v3 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	this.mDockedRootTaskResizing = p1;
	this.mWindowManager.setDockedRootTaskResizing(p1);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setSplitScreenResizing(Z)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, setSplitScreenResizing(Z)V > 9,2 @17 exception:10,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > = 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, setDockedRootTaskResizing(Z)V > 4,2 @9 exception:5,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent; > 1 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDockedDividerController()Lcom/android/server/wm/DockedTaskDividerController; > 4 @4 exception:5,
invokevirtual < Application, Lcom/android/server/wm/DockedTaskDividerController, setResizing(Z)V > 6,2 @8 exception:7,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, requestTraversal()V > 1 @11 exception:8,
return,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @24 exception:20,
return,","depth : 0
public void setSplitScreenResizing(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""setSplitScreenResizing()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mTaskSupervisor.setSplitScreenResizing(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setSplitScreenResizing(boolean p1){
	this.mDockedRootTaskResizing = p1;
	this.mWindowManager.setDockedRootTaskResizing(p1);
	return;
}
-----
depth : 2
public void setDockedRootTaskResizing(boolean p1){
	DisplayContent v1 = p0.getDefaultDisplayContentLocked();
	DockedTaskDividerController v2 = v1.getDockedDividerController();
	v2.setResizing(p1);
	p0.requestTraversal();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setSplitScreenResizing(boolean p1){
	long v5 = Binder.clearCallingIdentity();
	this.mDockedRootTaskResizing = p1;
	DisplayContent v11 = WindowManagerService.getDefaultDisplayContentLocked();
	DockedTaskDividerController v12 = v11.getDockedDividerController();
	v12.setResizing(p1);
	WindowManagerService.requestTraversal();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setSplitScreenResizing(Z)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, setSplitScreenResizing(Z)V > 9,2 @17 exception:10,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > = 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, setDockedRootTaskResizing(Z)V > 4,2 @9 exception:5,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent; > 1 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDockedDividerController()Lcom/android/server/wm/DockedTaskDividerController; > 4 @4 exception:5,
invokevirtual < Application, Lcom/android/server/wm/DockedTaskDividerController, setResizing(Z)V > 6,2 @8 exception:7,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, requestTraversal()V > 1 @11 exception:8,
return,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @24 exception:20,
return,","depth : 0
public void setSplitScreenResizing(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""setSplitScreenResizing()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mTaskSupervisor.setSplitScreenResizing(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void setSplitScreenResizing(boolean p1){
	this.mDockedRootTaskResizing = p1;
	this.mWindowManager.setDockedRootTaskResizing(p1);
	return;
}
-----
depth : 2
public void setDockedRootTaskResizing(boolean p1){
	DisplayContent v1 = p0.getDefaultDisplayContentLocked();
	DockedTaskDividerController v2 = v1.getDockedDividerController();
	v2.setResizing(p1);
	p0.requestTraversal();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setSplitScreenResizing(boolean p1){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	this.mDockedRootTaskResizing = p1;
	DisplayContent v12 = WindowManagerService.getDefaultDisplayContentLocked();
	DockedTaskDividerController v13 = v12.getDockedDividerController();
	v13.setResizing(p1);
	WindowManagerService.requestTraversal();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setSplitScreenResizing(Z)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, setSplitScreenResizing(Z)V > 9,2 @17 exception:10,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskSupervisor, mDockedRootTaskResizing, <Primordial,Z> > = 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, setDockedRootTaskResizing(Z)V > 4,2 @9 exception:5,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, getDefaultDisplayContentLocked()Lcom/android/server/wm/DisplayContent; > 1 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDockedDividerController()Lcom/android/server/wm/DockedTaskDividerController; > 4 @4 exception:5,
invokevirtual < Application, Lcom/android/server/wm/DockedTaskDividerController, setResizing(Z)V > 6,2 @8 exception:7,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, requestTraversal()V > 1 @11 exception:8,
return,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @24 exception:20,
return,","depth : 0
public void setSplitScreenResizing(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""setSplitScreenResizing()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mTaskSupervisor.setSplitScreenResizing(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setSplitScreenResizing(boolean p1){
	this.mDockedRootTaskResizing = p1;
	this.mWindowManager.setDockedRootTaskResizing(p1);
	return;
}
-----
depth : 2
public void setDockedRootTaskResizing(boolean p1){
	DisplayContent v1 = p0.getDefaultDisplayContentLocked();
	DockedTaskDividerController v2 = v1.getDockedDividerController();
	v2.setResizing(p1);
	p0.requestTraversal();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setSplitScreenResizing(boolean p1){
	long v5 = Binder.clearCallingIdentity();
	this.mDockedRootTaskResizing = p1;
	DisplayContent v11 = WindowManagerService.getDefaultDisplayContentLocked();
	DockedTaskDividerController v12 = v11.getDockedDividerController();
	v12.setResizing(p1);
	WindowManagerService.requestTraversal();
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V","0","7 = checkcast <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>2 <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>,
monitorenter 7,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > = 3,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, structure, <Application,Landroid/app/assist/AssistStructure> > = 4,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, content, <Application,Landroid/app/assist/AssistContent> > = 5,
conditional branch(eq, to iindex=-1) 6,8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 7,
invokevirtual < Application, Landroid/os/Bundle, putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V > 9,10,6 @15 exception:11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
15 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 13 @20 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
conditional branch(eq, to iindex=-1) 4,8,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 16 @32 exception:17,
19 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 18,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setTaskId(I)V > 4,19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
22 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mActivityComponent, <Application,Landroid/content/ComponentName> > 21,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setActivityComponent(Landroid/content/ComponentName;)V > 4,22 @45 exception:23,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, isHome, <Primordial,Z> > 7,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setHomeActivity(Z)V > 4,24 @50 exception:25,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > = 29,
invokevirtual < Application, Ljava/lang/Object, notifyAll()V > 7 @56 exception:30,
31 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, intent, <Application,Landroid/content/Intent> > 7,
conditional branch(ne, to iindex=-1) 31,8,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, receiver, <Application,Landroid/app/IAssistDataReceiver> > 7,
conditional branch(ne, to iindex=-1) 32,8,
monitorexit 7,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @74 exception:35,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,7,3 @77 exception:36,
37 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
39 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 37,7 @82 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 40,7 @88 exception:41,
conditional branch(ne, to iindex=-1) 39,8,
monitorexit 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @94 exception:122,
return,","depth : 0
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v10 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v10 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V","1","7 = checkcast <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>2 <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>,
monitorenter 7,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > = 3,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, structure, <Application,Landroid/app/assist/AssistStructure> > = 4,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, content, <Application,Landroid/app/assist/AssistContent> > = 5,
conditional branch(eq, to iindex=-1) 6,8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 7,
invokevirtual < Application, Landroid/os/Bundle, putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V > 9,10,6 @15 exception:11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
15 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 13 @20 exception:14,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 3 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(ne, to iindex=-1) 15,8,
conditional branch(eq, to iindex=-1) 4,8,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 16 @32 exception:17,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
19 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 18,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setTaskId(I)V > 4,19 @38 exception:20,
putfield 1.< Application, Landroid/app/assist/AssistStructure, mTaskId, <Primordial,I> > = 2,
return,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
22 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mActivityComponent, <Application,Landroid/content/ComponentName> > 21,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setActivityComponent(Landroid/content/ComponentName;)V > 4,22 @45 exception:23,
putfield 1.< Application, Landroid/app/assist/AssistStructure, mActivityComponent, <Application,Landroid/content/ComponentName> > = 2,
return,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, isHome, <Primordial,Z> > 7,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setHomeActivity(Z)V > 4,24 @50 exception:25,
putfield 1.< Application, Landroid/app/assist/AssistStructure, mIsHomeActivity, <Primordial,Z> > = 2,
return,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > = 29,
invokevirtual < Application, Ljava/lang/Object, notifyAll()V > 7 @56 exception:30,
31 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, intent, <Application,Landroid/content/Intent> > 7,
conditional branch(ne, to iindex=-1) 31,8,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, receiver, <Application,Landroid/app/IAssistDataReceiver> > 7,
conditional branch(ne, to iindex=-1) 32,8,
monitorexit 7,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @74 exception:35,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,7,3 @77 exception:36,
37 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
39 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 37,7 @82 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 40,7 @88 exception:41,
conditional branch(ne, to iindex=-1) 39,8,
monitorexit 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @94 exception:122,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v10 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 1
public Task getTask(){
	return this.task;
}
-----
depth : 1
public void setTaskId(int p1){
	this.mTaskId = p1;
	return;
}
-----
depth : 1
public void setActivityComponent(ComponentName p1){
	this.mActivityComponent = p1;
	return;
}
-----
depth : 1
public void setHomeActivity(boolean p1){
	this.mIsHomeActivity = p1;
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	WindowContainer v3 = WindowContainer.getParent();
	boolean v4 = v3.isAttached();
	boolean v2 = phiInstruction;
	Task v5 = this.task;
	this.mTaskId = Task.mTaskId;
	this.mActivityComponent = ActivityRecord.mActivityComponent;
	this.mIsHomeActivity = ActivityTaskManagerService$PendingAssistExtras.isHome;
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	this.sThreadPriorityBooster.boost();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v13 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	this.sThreadPriorityBooster.reset();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V","1","7 = checkcast <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>2 <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>,
monitorenter 7,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > = 3,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, structure, <Application,Landroid/app/assist/AssistStructure> > = 4,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, content, <Application,Landroid/app/assist/AssistContent> > = 5,
conditional branch(eq, to iindex=-1) 6,8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 7,
invokevirtual < Application, Landroid/os/Bundle, putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V > 9,10,6 @15 exception:11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
15 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 13 @20 exception:14,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 3 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(ne, to iindex=-1) 15,8,
monitorexit 7,
return,","depth : 0
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	return;
}
-----
depth : 1
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
","public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	WindowContainer v3 = WindowContainer.getParent();
	boolean v4 = v3.isAttached();
	boolean v2 = phiInstruction;
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V","2","7 = checkcast <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>2 <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>,
monitorenter 7,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > = 3,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, structure, <Application,Landroid/app/assist/AssistStructure> > = 4,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, content, <Application,Landroid/app/assist/AssistContent> > = 5,
conditional branch(eq, to iindex=-1) 6,8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 7,
invokevirtual < Application, Landroid/os/Bundle, putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V > 9,10,6 @15 exception:11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
15 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 13 @20 exception:14,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mParent, <Application,Lcom/android/server/wm/WindowContainer> > 1,
return 2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 3 @6 exception:5,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 3 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(eq, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(ne, to iindex=-1) 15,8,
conditional branch(eq, to iindex=-1) 4,8,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 16 @32 exception:17,
19 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 18,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setTaskId(I)V > 4,19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
22 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mActivityComponent, <Application,Landroid/content/ComponentName> > 21,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setActivityComponent(Landroid/content/ComponentName;)V > 4,22 @45 exception:23,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, isHome, <Primordial,Z> > 7,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setHomeActivity(Z)V > 4,24 @50 exception:25,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > = 29,
invokevirtual < Application, Ljava/lang/Object, notifyAll()V > 7 @56 exception:30,
31 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, intent, <Application,Landroid/content/Intent> > 7,
conditional branch(ne, to iindex=-1) 31,8,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, receiver, <Application,Landroid/app/IAssistDataReceiver> > 7,
conditional branch(ne, to iindex=-1) 32,8,
monitorexit 7,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @74 exception:35,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,7,3 @77 exception:36,
37 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
39 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 37,7 @82 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 40,7 @88 exception:41,
conditional branch(ne, to iindex=-1) 39,8,
monitorexit 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @94 exception:122,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v10 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 2
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 2
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	WindowContainer v3 = this.mParent;
	boolean v4 = v3.isAttached();
	WindowContainer v5 = WindowContainer.getParent();
	boolean v6 = v5.isAttached();
	boolean v2 = phiInstruction;
	return phiInstruction;
	Task v7 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v16 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V","2","7 = checkcast <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>2 <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>,
monitorenter 7,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > = 3,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, structure, <Application,Landroid/app/assist/AssistStructure> > = 4,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, content, <Application,Landroid/app/assist/AssistContent> > = 5,
conditional branch(eq, to iindex=-1) 6,8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 7,
invokevirtual < Application, Landroid/os/Bundle, putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V > 9,10,6 @15 exception:11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
15 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 13 @20 exception:14,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mParent, <Application,Lcom/android/server/wm/WindowContainer> > 1,
return 2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 3 @6 exception:5,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 3 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(eq, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(ne, to iindex=-1) 15,8,
conditional branch(eq, to iindex=-1) 4,8,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 16 @32 exception:17,
19 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 18,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setTaskId(I)V > 4,19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
22 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mActivityComponent, <Application,Landroid/content/ComponentName> > 21,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setActivityComponent(Landroid/content/ComponentName;)V > 4,22 @45 exception:23,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, isHome, <Primordial,Z> > 7,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setHomeActivity(Z)V > 4,24 @50 exception:25,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > = 29,
invokevirtual < Application, Ljava/lang/Object, notifyAll()V > 7 @56 exception:30,
31 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, intent, <Application,Landroid/content/Intent> > 7,
conditional branch(ne, to iindex=-1) 31,8,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, receiver, <Application,Landroid/app/IAssistDataReceiver> > 7,
conditional branch(ne, to iindex=-1) 32,8,
monitorexit 7,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @74 exception:35,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,7,3 @77 exception:36,
37 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
39 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 37,7 @82 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 40,7 @88 exception:41,
conditional branch(ne, to iindex=-1) 39,8,
monitorexit 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @94 exception:122,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v10 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 2
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 2
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	WindowContainer v3 = this.mParent;
	boolean v4 = v3.isAttached();
	WindowContainer v5 = WindowContainer.getParent();
	boolean v6 = v5.isAttached();
	boolean v2 = phiInstruction;
	return phiInstruction;
	Task v7 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerThreadPriorityBooster.boost();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v17 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","reportAssistContextExtras(Landroid/os/IBinder;Landroid/os/Bundle;Landroid/app/assist/AssistStructure;Landroid/app/assist/AssistContent;Landroid/net/Uri;)V","2","7 = checkcast <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>2 <Application,Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras>,
monitorenter 7,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > = 3,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, structure, <Application,Landroid/app/assist/AssistStructure> > = 4,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, content, <Application,Landroid/app/assist/AssistContent> > = 5,
conditional branch(eq, to iindex=-1) 6,8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 7,
invokevirtual < Application, Landroid/os/Bundle, putParcelable(Ljava/lang/String;Landroid/os/Parcelable;)V > 9,10,6 @15 exception:11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
15 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 13 @20 exception:14,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mParent, <Application,Lcom/android/server/wm/WindowContainer> > 1,
return 2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 3 @6 exception:5,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isAttached()Z > 3 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(eq, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(ne, to iindex=-1) 15,8,
conditional branch(eq, to iindex=-1) 4,8,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 16 @32 exception:17,
19 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 18,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setTaskId(I)V > 4,19 @38 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, activity, <Application,Lcom/android/server/wm/ActivityRecord> > 7,
22 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mActivityComponent, <Application,Landroid/content/ComponentName> > 21,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setActivityComponent(Landroid/content/ComponentName;)V > 4,22 @45 exception:23,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, isHome, <Primordial,Z> > 7,
invokevirtual < Application, Landroid/app/assist/AssistStructure, setHomeActivity(Z)V > 4,24 @50 exception:25,
putfield 7.< Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > = 29,
invokevirtual < Application, Ljava/lang/Object, notifyAll()V > 7 @56 exception:30,
31 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, intent, <Application,Landroid/content/Intent> > 7,
conditional branch(ne, to iindex=-1) 31,8,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, receiver, <Application,Landroid/app/IAssistDataReceiver> > 7,
conditional branch(ne, to iindex=-1) 32,8,
monitorexit 7,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @74 exception:35,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,7,3 @77 exception:36,
37 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
39 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 37,7 @82 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 40,7 @88 exception:41,
conditional branch(ne, to iindex=-1) 39,8,
monitorexit 34,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @94 exception:122,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	boolean v2 = ActivityTaskManagerService$PendingAssistExtras.activity.isAttached();
	Task v3 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v10 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 2
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 2
public boolean isAttached(){
	WindowContainer v1 = p0.getParent();
	boolean v2 = v1.isAttached();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void reportAssistContextExtras(IBinder p1, Bundle p2, AssistStructure p3, AssistContent p4, Uri p5){
	ActivityTaskManagerService$PendingAssistExtras.result = p2;
	ActivityTaskManagerService$PendingAssistExtras.structure = p3;
	ActivityTaskManagerService$PendingAssistExtras.content = p4;
	ActivityTaskManagerService$PendingAssistExtras.extras.putParcelable(""android.intent.extra.REFERRER"", p5);
	WindowContainer v3 = this.mParent;
	boolean v4 = v3.isAttached();
	WindowContainer v5 = WindowContainer.getParent();
	boolean v6 = v5.isAttached();
	boolean v2 = phiInstruction;
	return phiInstruction;
	Task v7 = ActivityTaskManagerService$PendingAssistExtras.activity.getTask();
	p3.setTaskId(Task.mTaskId);
	p3.setActivityComponent(ActivityRecord.mActivityComponent);
	p3.setHomeActivity(ActivityTaskManagerService$PendingAssistExtras.isHome);
	ActivityTaskManagerService$PendingAssistExtras.haveResult = 1;
	p1.notifyAll();
	p0.buildAssistBundleLocked(p1, p2);
	boolean v16 = this.mPendingAssistExtras.remove(p1);
	this.mUiHandler.removeCallbacks(p1);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","isTopActivityImmersive()Z","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @23 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, immersive, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,8,
13 = phi  8,8,12,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:15,
return 13,","depth : 0
public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""isTopActivityImmersive"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
","public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""isTopActivityImmersive"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","isTopActivityImmersive()Z","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @23 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, immersive, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,8,
13 = phi  8,8,12,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 13,","depth : 0
public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""isTopActivityImmersive"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean isTopActivityImmersive(){
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	ActivityRecord v9 = TaskFragment.topRunningActivity(0);
	ActivityRecord v8 = v9;
	this.sThreadPriorityBooster.reset();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","isTopActivityImmersive()Z","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @23 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
13 = phi  8,8,12,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 13,","depth : 0
public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""isTopActivityImmersive"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean isTopActivityImmersive(){
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	ActivityRecord v9 = TaskFragment.topRunningActivity(0);
	ActivityRecord v8 = v9;
	this.sThreadPriorityBooster.reset();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","isTopActivityImmersive()Z","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @23 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, immersive, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,8,
13 = phi  8,8,12,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 13,","depth : 0
public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""isTopActivityImmersive"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean isTopActivityImmersive(){
	int v9 = RootWindowContainer.getChildCount();
	WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction);
	Task v11 = v10.getFocusedRootTask();
	Task v8 = v11;
	Task v7 = v8;
	ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v13 = v14;
	ActivityRecord v12 = v13;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","isTopActivityImmersive()Z","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @23 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, immersive, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,8,
13 = phi  8,8,12,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 13,","depth : 0
public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""isTopActivityImmersive"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean isTopActivityImmersive(){
	WindowManagerThreadPriorityBooster.boost();
	int v10 = RootWindowContainer.getChildCount();
	WindowContainer v11 = RootWindowContainer.getChildAt(phiInstruction);
	Task v12 = v11.getFocusedRootTask();
	Task v9 = v12;
	Task v8 = v9;
	ActivityRecord v15 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v14 = v15;
	ActivityRecord v13 = v14;
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","isTopActivityImmersive()Z","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @23 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, immersive, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,8,
13 = phi  8,8,12,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 13,","depth : 0
public boolean isTopActivityImmersive(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""isTopActivityImmersive"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public boolean isTopActivityImmersive(){
	int v9 = RootWindowContainer.getChildCount();
	WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction);
	Task v11 = v10.getFocusedRootTask();
	Task v8 = v11;
	Task v7 = v8;
	ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v13 = v14;
	ActivityRecord v12 = v13;
	WindowManagerThreadPriorityBooster.reset();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getAssistContextExtras(I)Landroid/os/Bundle;","0","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras; > 1,2,5,5,5,5,5,6,6,4,5,7,5 @17 exception:8,
conditional branch(ne, to iindex=-1) 9,5,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > 9,
conditional branch(ne, to iindex=-1) 10,5,
monitorexit 9,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:15,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > 9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,9,16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
20 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 18,9 @48 exception:19,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 21,9 @53 exception:22,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:29,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 9,
return 30,","depth : 0
public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	ActivityTaskManagerService$PendingAssistExtras v2 = p0.enqueueAssistContext(p1, 0, 0, 0, 0, 0, 1, 1, v1, 0, 500, 0);
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v5 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
-----
","public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	ActivityTaskManagerService$PendingAssistExtras v2 = p0.enqueueAssistContext(p1, 0, 0, 0, 0, 0, 1, 1, v1, 0, 500, 0);
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v5 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAssistContextExtras(I)Landroid/os/Bundle;","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras; > 1,2,5,5,5,5,5,6,6,4,5,7,5 @17 exception:8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 14,15,16 @11 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:19,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @20 exception:20,
conditional branch(eq, to iindex=-1) 21,22,
24 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 21 @27 exception:23,
goto (from iindex= 16 to iindex = 2),
25 = phi  24,22,
conditional branch(ne, to iindex=-1) 25,22,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 25 @47 exception:28,
conditional branch(ne, to iindex=-1) 29,22,
conditional branch(eq, to iindex=-1) 8,22,
conditional branch(eq, to iindex=-1) 7,22,
63 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 7 @84 exception:62,
conditional branch(eq, to iindex=-1) 25,63,
112 = new <Application,Ljava/lang/StringBuilder>@92,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 112 @94 exception:113,
116 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,114 @99 exception:115,
118 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,63 @102 exception:117,
121 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,119 @107 exception:120,
123 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,25 @110 exception:122,
125 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 112 @113 exception:124,
127 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 34,125 @117 exception:126,
monitorexit 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @121 exception:128,
return 22,
conditional branch(ne, to iindex=-1) 9,5,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > 9,
conditional branch(ne, to iindex=-1) 10,5,
monitorexit 9,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > 9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,9,16 @43 exception:17,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 2,
invokevirtual < Application, Landroid/os/Bundle, putBundle(Ljava/lang/String;Landroid/os/Bundle;)V > 5,6,3 @6 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, hint, <Application,Ljava/lang/String> > 2,
conditional branch(eq, to iindex=-1) 9,4,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 2,
invokevirtual < Application, Landroid/os/Bundle, putBoolean(Ljava/lang/String;Z)V > 10,9,11 @16 exception:12,
return,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
20 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 18,9 @48 exception:19,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 21,9 @53 exception:22,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 9,
return 30,","depth : 0
public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	ActivityTaskManagerService$PendingAssistExtras v2 = p0.enqueueAssistContext(p1, 0, 0, 0, 0, 0, 1, 1, v1, 0, 500, 0);
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v5 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
-----
depth : 1
public ActivityTaskManagerService$PendingAssistExtras enqueueAssistContext(int p1, Intent p2, String p3, IAssistDataReceiver p4, Bundle p5, IBinder p6, boolean p7, boolean p8, int p9, Bundle p10, long p11, int p12){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.getTopNonFinishingActivity();
	boolean v5 = phiInstruction.attachedToProcess();
	ActivityRecord v6 = ActivityRecord.forTokenLocked(p6);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""enqueueAssistContext failed: caller "");
	StringBuilder v9 = v6.append(v6);
	StringBuilder v10 = v6.append("" is not current top "");
	StringBuilder v11 = v6.append(phiInstruction);
	String v12 = v6.toString();
	int v13 = Slog.w(""ActivityTaskManager"", v12);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void buildAssistBundleLocked(ActivityTaskManagerService$PendingAssistExtras p1, Bundle p2){
	ActivityTaskManagerService$PendingAssistExtras.extras.putBundle(""android.intent.extra.ASSIST_CONTEXT"", p2);
	ActivityTaskManagerService$PendingAssistExtras.extras.putBoolean(ActivityTaskManagerService$PendingAssistExtras.hint, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	WindowManagerService.boostPriorityForLockedSection();
	Task v5 = ActivityTaskManagerService.getTopDisplayFocusedRootTask();
	ActivityRecord v6 = v5.getTopNonFinishingActivity();
	boolean v7 = phiInstruction.attachedToProcess();
	ActivityRecord v8 = ActivityRecord.forTokenLocked(0);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$PendingAssistExtras v2 = 0;
	this.sThreadPriorityBooster.boost();
	ActivityTaskManagerService$PendingAssistExtras.extras.putBundle(""android.intent.extra.ASSIST_CONTEXT"", ActivityTaskManagerService$PendingAssistExtras.result);
	ActivityTaskManagerService$PendingAssistExtras.extras.putBoolean(ActivityTaskManagerService$PendingAssistExtras.hint, 1);
	boolean v23 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	this.sThreadPriorityBooster.reset();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAssistContextExtras(I)Landroid/os/Bundle;","1","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras; > 1,2,5,5,5,5,5,6,6,4,5,7,5 @17 exception:8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 14,15,16 @11 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:19,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @20 exception:20,
conditional branch(eq, to iindex=-1) 21,22,
24 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 21 @27 exception:23,
goto (from iindex= 16 to iindex = 2),
25 = phi  24,22,
conditional branch(ne, to iindex=-1) 25,22,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 25 @47 exception:28,
conditional branch(ne, to iindex=-1) 29,22,
conditional branch(eq, to iindex=-1) 8,22,
conditional branch(eq, to iindex=-1) 7,22,
63 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 7 @84 exception:62,
conditional branch(eq, to iindex=-1) 25,63,
112 = new <Application,Ljava/lang/StringBuilder>@92,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 112 @94 exception:113,
116 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,114 @99 exception:115,
118 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,63 @102 exception:117,
121 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,119 @107 exception:120,
123 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,25 @110 exception:122,
125 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 112 @113 exception:124,
127 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 34,125 @117 exception:126,
monitorexit 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @121 exception:128,
return 22,
conditional branch(ne, to iindex=-1) 9,5,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > 9,
conditional branch(ne, to iindex=-1) 10,5,
monitorexit 9,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > 9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,9,16 @43 exception:17,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 2,
invokevirtual < Application, Landroid/os/Bundle, putBundle(Ljava/lang/String;Landroid/os/Bundle;)V > 5,6,3 @6 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, hint, <Application,Ljava/lang/String> > 2,
conditional branch(eq, to iindex=-1) 9,4,
return,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
20 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 18,9 @48 exception:19,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 21,9 @53 exception:22,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 9,
return 30,","depth : 0
public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	ActivityTaskManagerService$PendingAssistExtras v2 = p0.enqueueAssistContext(p1, 0, 0, 0, 0, 0, 1, 1, v1, 0, 500, 0);
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v5 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
-----
depth : 1
public ActivityTaskManagerService$PendingAssistExtras enqueueAssistContext(int p1, Intent p2, String p3, IAssistDataReceiver p4, Bundle p5, IBinder p6, boolean p7, boolean p8, int p9, Bundle p10, long p11, int p12){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.getTopNonFinishingActivity();
	boolean v5 = phiInstruction.attachedToProcess();
	ActivityRecord v6 = ActivityRecord.forTokenLocked(p6);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""enqueueAssistContext failed: caller "");
	StringBuilder v9 = v6.append(v6);
	StringBuilder v10 = v6.append("" is not current top "");
	StringBuilder v11 = v6.append(phiInstruction);
	String v12 = v6.toString();
	int v13 = Slog.w(""ActivityTaskManager"", v12);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void buildAssistBundleLocked(ActivityTaskManagerService$PendingAssistExtras p1, Bundle p2){
	ActivityTaskManagerService$PendingAssistExtras.extras.putBundle(""android.intent.extra.ASSIST_CONTEXT"", p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	WindowManagerService.boostPriorityForLockedSection();
	Task v5 = ActivityTaskManagerService.getTopDisplayFocusedRootTask();
	ActivityRecord v6 = v5.getTopNonFinishingActivity();
	boolean v7 = phiInstruction.attachedToProcess();
	ActivityRecord v8 = ActivityRecord.forTokenLocked(0);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$PendingAssistExtras v2 = 0;
	this.sThreadPriorityBooster.boost();
	ActivityTaskManagerService$PendingAssistExtras.extras.putBundle(""android.intent.extra.ASSIST_CONTEXT"", ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v22 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	this.sThreadPriorityBooster.reset();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAssistContextExtras(I)Landroid/os/Bundle;","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras; > 1,2,5,5,5,5,5,6,6,4,5,7,5 @17 exception:8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 14,15,16 @11 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @20 exception:20,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 21,22,
24 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 21 @27 exception:23,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
goto (from iindex= 16 to iindex = 2),
25 = phi  24,22,
conditional branch(ne, to iindex=-1) 25,22,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 25 @47 exception:28,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, hasProcess()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,4,
goto (from iindex= 8 to iindex = 2),
12 = phi  11,4,
return 12,
conditional branch(ne, to iindex=-1) 29,22,
conditional branch(eq, to iindex=-1) 8,22,
conditional branch(eq, to iindex=-1) 7,22,
63 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 7 @84 exception:62,
conditional branch(ne, to iindex=-1) 1,2,
3 = checkcast <Application,Lcom/android/server/wm/ActivityRecord$Token>1 <Application,Lcom/android/server/wm/ActivityRecord$Token>,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord$Token, mActivityRef, <Application,Ljava/lang/ref/WeakReference> > 3,
19 = invokevirtual < Application, Ljava/lang/ref/WeakReference, get()Ljava/lang/Object; > 17 @8 exception:18,
20 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>19 <Application,Lcom/android/server/wm/ActivityRecord>,
conditional branch(eq, to iindex=-1) 20,2,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 20 @16 exception:21,
conditional branch(ne, to iindex=-1) 22,2,
goto (from iindex= 12 to iindex = 2),
23 = phi  2,2,20,
return 23,
conditional branch(eq, to iindex=-1) 25,63,
112 = new <Application,Ljava/lang/StringBuilder>@92,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 112 @94 exception:113,
116 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,114 @99 exception:115,
118 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,63 @102 exception:117,
121 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,119 @107 exception:120,
123 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,25 @110 exception:122,
125 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 112 @113 exception:124,
127 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 34,125 @117 exception:126,
monitorexit 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @121 exception:128,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 22,
conditional branch(ne, to iindex=-1) 9,5,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > 9,
conditional branch(ne, to iindex=-1) 10,5,
monitorexit 9,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > 9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,9,16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
20 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 18,9 @48 exception:19,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 21,9 @53 exception:22,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 9,
return 30,","depth : 0
public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	ActivityTaskManagerService$PendingAssistExtras v2 = p0.enqueueAssistContext(p1, 0, 0, 0, 0, 0, 1, 1, v1, 0, 500, 0);
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v5 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
-----
depth : 1
public ActivityTaskManagerService$PendingAssistExtras enqueueAssistContext(int p1, Intent p2, String p3, IAssistDataReceiver p4, Bundle p5, IBinder p6, boolean p7, boolean p8, int p9, Bundle p10, long p11, int p12){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.getTopNonFinishingActivity();
	boolean v5 = phiInstruction.attachedToProcess();
	ActivityRecord v6 = ActivityRecord.forTokenLocked(p6);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""enqueueAssistContext failed: caller "");
	StringBuilder v9 = v6.append(v6);
	StringBuilder v10 = v6.append("" is not current top "");
	StringBuilder v11 = v6.append(phiInstruction);
	String v12 = v6.toString();
	int v13 = Slog.w(""ActivityTaskManager"", v12);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 2
public boolean attachedToProcess(){
	boolean v1 = p0.hasProcess();
	boolean v2 = this.app.hasThread();
	return phiInstruction;
}
-----
depth : 2
public ActivityRecord forTokenLocked(IBinder p1){
	Object v1 = ActivityRecord$Token.mActivityRef.get();
	Task v2 = v1.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	ActivityRecord v9 = TaskFragment.getTopNonFinishingActivity(1);
	ActivityRecord v8 = v9;
	boolean v11 = ActivityRecord.hasProcess();
	boolean v12 = this.app.hasThread();
	boolean v10 = phiInstruction;
	Object v14 = ActivityRecord$Token.mActivityRef.get();
	Task v15 = v14.getRootTask();
	ActivityRecord v13 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$PendingAssistExtras v2 = 0;
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v30 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAssistContextExtras(I)Landroid/os/Bundle;","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras; > 1,2,5,5,5,5,5,6,6,4,5,7,5 @17 exception:8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 14,15,16 @11 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @20 exception:20,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 21,22,
24 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 21 @27 exception:23,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
goto (from iindex= 16 to iindex = 2),
25 = phi  24,22,
conditional branch(ne, to iindex=-1) 25,22,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 25 @47 exception:28,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, hasProcess()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,4,
goto (from iindex= 8 to iindex = 2),
12 = phi  11,4,
return 12,
conditional branch(ne, to iindex=-1) 29,22,
conditional branch(eq, to iindex=-1) 8,22,
conditional branch(eq, to iindex=-1) 7,22,
63 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 7 @84 exception:62,
conditional branch(ne, to iindex=-1) 1,2,
3 = checkcast <Application,Lcom/android/server/wm/ActivityRecord$Token>1 <Application,Lcom/android/server/wm/ActivityRecord$Token>,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord$Token, mActivityRef, <Application,Ljava/lang/ref/WeakReference> > 3,
19 = invokevirtual < Application, Ljava/lang/ref/WeakReference, get()Ljava/lang/Object; > 17 @8 exception:18,
20 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>19 <Application,Lcom/android/server/wm/ActivityRecord>,
conditional branch(eq, to iindex=-1) 20,2,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 20 @16 exception:21,
conditional branch(ne, to iindex=-1) 22,2,
goto (from iindex= 12 to iindex = 2),
23 = phi  2,2,20,
return 23,
conditional branch(eq, to iindex=-1) 25,63,
112 = new <Application,Ljava/lang/StringBuilder>@92,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 112 @94 exception:113,
116 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,114 @99 exception:115,
118 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,63 @102 exception:117,
121 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,119 @107 exception:120,
123 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,25 @110 exception:122,
125 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 112 @113 exception:124,
127 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 34,125 @117 exception:126,
monitorexit 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @121 exception:128,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 22,
conditional branch(ne, to iindex=-1) 9,5,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > 9,
conditional branch(ne, to iindex=-1) 10,5,
monitorexit 9,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > 9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,9,16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
20 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 18,9 @48 exception:19,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 21,9 @53 exception:22,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 9,
return 30,","depth : 0
public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	ActivityTaskManagerService$PendingAssistExtras v2 = p0.enqueueAssistContext(p1, 0, 0, 0, 0, 0, 1, 1, v1, 0, 500, 0);
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v5 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
-----
depth : 1
public ActivityTaskManagerService$PendingAssistExtras enqueueAssistContext(int p1, Intent p2, String p3, IAssistDataReceiver p4, Bundle p5, IBinder p6, boolean p7, boolean p8, int p9, Bundle p10, long p11, int p12){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.getTopNonFinishingActivity();
	boolean v5 = phiInstruction.attachedToProcess();
	ActivityRecord v6 = ActivityRecord.forTokenLocked(p6);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""enqueueAssistContext failed: caller "");
	StringBuilder v9 = v6.append(v6);
	StringBuilder v10 = v6.append("" is not current top "");
	StringBuilder v11 = v6.append(phiInstruction);
	String v12 = v6.toString();
	int v13 = Slog.w(""ActivityTaskManager"", v12);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 2
public boolean attachedToProcess(){
	boolean v1 = p0.hasProcess();
	boolean v2 = this.app.hasThread();
	return phiInstruction;
}
-----
depth : 2
public ActivityRecord forTokenLocked(IBinder p1){
	Object v1 = ActivityRecord$Token.mActivityRef.get();
	Task v2 = v1.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	ActivityRecord v9 = TaskFragment.getTopNonFinishingActivity(1);
	ActivityRecord v8 = v9;
	boolean v11 = ActivityRecord.hasProcess();
	boolean v12 = this.app.hasThread();
	boolean v10 = phiInstruction;
	Object v14 = ActivityRecord$Token.mActivityRef.get();
	Task v15 = v14.getRootTask();
	ActivityRecord v13 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$PendingAssistExtras v2 = 0;
	WindowManagerThreadPriorityBooster.boost();
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v31 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAssistContextExtras(I)Landroid/os/Bundle;","2","4 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:3,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enqueueAssistContext(ILandroid/content/Intent;Ljava/lang/String;Landroid/app/IAssistDataReceiver;Landroid/os/Bundle;Landroid/os/IBinder;ZZILandroid/os/Bundle;JI)Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras; > 1,2,5,5,5,5,5,6,6,4,5,7,5 @17 exception:8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 14,15,16 @11 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @20 exception:20,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 21,22,
24 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 21 @27 exception:23,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
goto (from iindex= 16 to iindex = 2),
25 = phi  24,22,
conditional branch(ne, to iindex=-1) 25,22,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 25 @47 exception:28,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, hasProcess()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,4,
goto (from iindex= 8 to iindex = 2),
12 = phi  11,4,
return 12,
conditional branch(ne, to iindex=-1) 29,22,
conditional branch(eq, to iindex=-1) 8,22,
conditional branch(eq, to iindex=-1) 7,22,
63 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 7 @84 exception:62,
conditional branch(ne, to iindex=-1) 1,2,
3 = checkcast <Application,Lcom/android/server/wm/ActivityRecord$Token>1 <Application,Lcom/android/server/wm/ActivityRecord$Token>,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord$Token, mActivityRef, <Application,Ljava/lang/ref/WeakReference> > 3,
19 = invokevirtual < Application, Ljava/lang/ref/WeakReference, get()Ljava/lang/Object; > 17 @8 exception:18,
20 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>19 <Application,Lcom/android/server/wm/ActivityRecord>,
conditional branch(eq, to iindex=-1) 20,2,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 20 @16 exception:21,
conditional branch(ne, to iindex=-1) 22,2,
goto (from iindex= 12 to iindex = 2),
23 = phi  2,2,20,
return 23,
conditional branch(eq, to iindex=-1) 25,63,
112 = new <Application,Ljava/lang/StringBuilder>@92,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 112 @94 exception:113,
116 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,114 @99 exception:115,
118 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,63 @102 exception:117,
121 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 112,119 @107 exception:120,
123 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 112,25 @110 exception:122,
125 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 112 @113 exception:124,
127 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 34,125 @117 exception:126,
monitorexit 18,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @121 exception:128,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 22,
conditional branch(ne, to iindex=-1) 9,5,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, haveResult, <Primordial,Z> > 9,
conditional branch(ne, to iindex=-1) 10,5,
monitorexit 9,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, result, <Application,Landroid/os/Bundle> > 9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, buildAssistBundleLocked(Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras;Landroid/os/Bundle;)V > 1,9,16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mPendingAssistExtras, <Application,Ljava/util/ArrayList> > 1,
20 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 18,9 @48 exception:19,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mUiHandler, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UiHandler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 21,9 @53 exception:22,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$PendingAssistExtras, extras, <Application,Landroid/os/Bundle> > 9,
return 30,","depth : 0
public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	ActivityTaskManagerService$PendingAssistExtras v2 = p0.enqueueAssistContext(p1, 0, 0, 0, 0, 0, 1, 1, v1, 0, 500, 0);
	WindowManagerService.boostPriorityForLockedSection();
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v5 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
-----
depth : 1
public ActivityTaskManagerService$PendingAssistExtras enqueueAssistContext(int p1, Intent p2, String p3, IAssistDataReceiver p4, Bundle p5, IBinder p6, boolean p7, boolean p8, int p9, Bundle p10, long p11, int p12){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.getTopNonFinishingActivity();
	boolean v5 = phiInstruction.attachedToProcess();
	ActivityRecord v6 = ActivityRecord.forTokenLocked(p6);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""enqueueAssistContext failed: caller "");
	StringBuilder v9 = v6.append(v6);
	StringBuilder v10 = v6.append("" is not current top "");
	StringBuilder v11 = v6.append(phiInstruction);
	String v12 = v6.toString();
	int v13 = Slog.w(""ActivityTaskManager"", v12);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 2
public boolean attachedToProcess(){
	boolean v1 = p0.hasProcess();
	boolean v2 = this.app.hasThread();
	return phiInstruction;
}
-----
depth : 2
public ActivityRecord forTokenLocked(IBinder p1){
	Object v1 = ActivityRecord$Token.mActivityRef.get();
	Task v2 = v1.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public Bundle getAssistContextExtras(int p1){
	int v1 = UserHandle.getCallingUserId();
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	ActivityRecord v9 = TaskFragment.getTopNonFinishingActivity(1);
	ActivityRecord v8 = v9;
	boolean v11 = ActivityRecord.hasProcess();
	boolean v12 = this.app.hasThread();
	boolean v10 = phiInstruction;
	Object v14 = ActivityRecord$Token.mActivityRef.get();
	Task v15 = v14.getRootTask();
	ActivityRecord v13 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$PendingAssistExtras v2 = 0;
	p0.buildAssistBundleLocked(v2, ActivityTaskManagerService$PendingAssistExtras.result);
	boolean v30 = this.mPendingAssistExtras.remove(v2);
	this.mUiHandler.removeCallbacks(v2);
	WindowManagerThreadPriorityBooster.reset();
	return ActivityTaskManagerService$PendingAssistExtras.extras;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","cancelRecentsAnimation(Z)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @5 exception:5,
7 = conversion(J) 6,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @10 exception:8,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:11,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(eq, to iindex=-1) 2,13,
goto (from iindex= 13 to iindex = 2),
15 = phi  14,13,
16 = new <Application,Ljava/lang/StringBuilder>@27,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @29 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @34 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(J)Ljava/lang/StringBuilder; > 16,7 @37 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @40 exception:23,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, cancelRecentsAnimation(ILjava/lang/String;)V > 12,15,24 @44 exception:25,
monitorexit 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @48 exception:33,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @51 exception:41,
return,","depth : 0
public void cancelRecentsAnimation(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelRecentsAnimation()"");
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelRecentsAnimation/uid="");
	StringBuilder v7 = v4.append(v2);
	String v8 = v4.toString();
	this.mWindowManager.cancelRecentsAnimation(phiInstruction, v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
","public void cancelRecentsAnimation(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelRecentsAnimation()"");
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""cancelRecentsAnimation/uid="");
	StringBuilder v8 = v5.append(v2);
	String v9 = v5.toString();
	this.mWindowManager.cancelRecentsAnimation(phiInstruction, v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelRecentsAnimation(Z)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @5 exception:5,
7 = conversion(J) 6,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @10 exception:8,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:11,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(eq, to iindex=-1) 2,13,
goto (from iindex= 13 to iindex = 2),
15 = phi  14,13,
16 = new <Application,Ljava/lang/StringBuilder>@27,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @29 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @34 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(J)Ljava/lang/StringBuilder; > 16,7 @37 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @40 exception:23,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, cancelRecentsAnimation(ILjava/lang/String;)V > 12,15,24 @44 exception:25,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRecentsAnimationController, <Application,Lcom/android/server/wm/RecentsAnimationController> > 1,
conditional branch(eq, to iindex=-1) 4,5,
invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, cancelAnimation(ILjava/lang/String;)V > 4,2,3 @4 exception:6,
return,
monitorexit 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @48 exception:33,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @51 exception:41,
return,","depth : 0
public void cancelRecentsAnimation(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelRecentsAnimation()"");
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelRecentsAnimation/uid="");
	StringBuilder v7 = v4.append(v2);
	String v8 = v4.toString();
	this.mWindowManager.cancelRecentsAnimation(phiInstruction, v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void cancelRecentsAnimation(int p1, String p2){
	this.mRecentsAnimationController.cancelAnimation(p1, p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void cancelRecentsAnimation(boolean p1){
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""cancelRecentsAnimation/uid="");
	StringBuilder v12 = v9.append(v5);
	String v13 = v9.toString();
	this.mRecentsAnimationController.cancelAnimation(phiInstruction, v13);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelRecentsAnimation(Z)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @5 exception:5,
7 = conversion(J) 6,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @10 exception:8,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:11,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(eq, to iindex=-1) 2,13,
15 = phi  14,13,
16 = new <Application,Ljava/lang/StringBuilder>@27,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @29 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @34 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(J)Ljava/lang/StringBuilder; > 16,7 @37 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @40 exception:23,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, cancelRecentsAnimation(ILjava/lang/String;)V > 12,15,24 @44 exception:25,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRecentsAnimationController, <Application,Lcom/android/server/wm/RecentsAnimationController> > 1,
conditional branch(eq, to iindex=-1) 4,5,
invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, cancelAnimation(ILjava/lang/String;)V > 4,2,3 @4 exception:6,
return,
monitorexit 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @48 exception:33,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @51 exception:41,
return,","depth : 0
public void cancelRecentsAnimation(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelRecentsAnimation()"");
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelRecentsAnimation/uid="");
	StringBuilder v7 = v4.append(v2);
	String v8 = v4.toString();
	this.mWindowManager.cancelRecentsAnimation(phiInstruction, v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void cancelRecentsAnimation(int p1, String p2){
	this.mRecentsAnimationController.cancelAnimation(p1, p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void cancelRecentsAnimation(boolean p1){
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""cancelRecentsAnimation/uid="");
	StringBuilder v12 = v9.append(v5);
	String v13 = v9.toString();
	this.mRecentsAnimationController.cancelAnimation(phiInstruction, v13);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelRecentsAnimation(Z)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @5 exception:5,
7 = conversion(J) 6,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @10 exception:8,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:11,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(eq, to iindex=-1) 2,13,
goto (from iindex= 13 to iindex = 2),
15 = phi  14,13,
16 = new <Application,Ljava/lang/StringBuilder>@27,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @29 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @34 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(J)Ljava/lang/StringBuilder; > 16,7 @37 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @40 exception:23,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, cancelRecentsAnimation(ILjava/lang/String;)V > 12,15,24 @44 exception:25,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRecentsAnimationController, <Application,Lcom/android/server/wm/RecentsAnimationController> > 1,
conditional branch(eq, to iindex=-1) 4,5,
invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, cancelAnimation(ILjava/lang/String;)V > 4,2,3 @4 exception:6,
invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, cancelAnimation(IZLjava/lang/String;)V > 1,2,4,3 @1 exception:5,
return,
return,
monitorexit 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @48 exception:33,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @51 exception:41,
return,","depth : 0
public void cancelRecentsAnimation(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelRecentsAnimation()"");
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelRecentsAnimation/uid="");
	StringBuilder v7 = v4.append(v2);
	String v8 = v4.toString();
	this.mWindowManager.cancelRecentsAnimation(phiInstruction, v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void cancelRecentsAnimation(int p1, String p2){
	this.mRecentsAnimationController.cancelAnimation(p1, p2);
	return;
}
-----
depth : 2
public void cancelAnimation(int p1, String p2){
	p0.cancelAnimation(p1, 0, p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void cancelRecentsAnimation(boolean p1){
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""cancelRecentsAnimation/uid="");
	StringBuilder v13 = v10.append(v5);
	String v14 = v10.toString();
	RecentsAnimationController.cancelAnimation(p1, 0, p2);
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelRecentsAnimation(Z)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @5 exception:5,
7 = conversion(J) 6,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @10 exception:8,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:11,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(eq, to iindex=-1) 2,13,
goto (from iindex= 13 to iindex = 2),
15 = phi  14,13,
16 = new <Application,Ljava/lang/StringBuilder>@27,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @29 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @34 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(J)Ljava/lang/StringBuilder; > 16,7 @37 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @40 exception:23,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, cancelRecentsAnimation(ILjava/lang/String;)V > 12,15,24 @44 exception:25,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRecentsAnimationController, <Application,Lcom/android/server/wm/RecentsAnimationController> > 1,
conditional branch(eq, to iindex=-1) 4,5,
invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, cancelAnimation(ILjava/lang/String;)V > 4,2,3 @4 exception:6,
invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, cancelAnimation(IZLjava/lang/String;)V > 1,2,4,3 @1 exception:5,
return,
return,
monitorexit 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @48 exception:33,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @51 exception:41,
return,","depth : 0
public void cancelRecentsAnimation(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelRecentsAnimation()"");
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelRecentsAnimation/uid="");
	StringBuilder v7 = v4.append(v2);
	String v8 = v4.toString();
	this.mWindowManager.cancelRecentsAnimation(phiInstruction, v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void cancelRecentsAnimation(int p1, String p2){
	this.mRecentsAnimationController.cancelAnimation(p1, p2);
	return;
}
-----
depth : 2
public void cancelAnimation(int p1, String p2){
	p0.cancelAnimation(p1, 0, p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void cancelRecentsAnimation(boolean p1){
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append(""cancelRecentsAnimation/uid="");
	StringBuilder v14 = v11.append(v5);
	String v15 = v11.toString();
	RecentsAnimationController.cancelAnimation(p1, 0, p2);
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","cancelRecentsAnimation(Z)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @5 exception:5,
7 = conversion(J) 6,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @10 exception:8,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:11,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(eq, to iindex=-1) 2,13,
goto (from iindex= 13 to iindex = 2),
15 = phi  14,13,
16 = new <Application,Ljava/lang/StringBuilder>@27,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @29 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @34 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(J)Ljava/lang/StringBuilder; > 16,7 @37 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @40 exception:23,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, cancelRecentsAnimation(ILjava/lang/String;)V > 12,15,24 @44 exception:25,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRecentsAnimationController, <Application,Lcom/android/server/wm/RecentsAnimationController> > 1,
conditional branch(eq, to iindex=-1) 4,5,
invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, cancelAnimation(ILjava/lang/String;)V > 4,2,3 @4 exception:6,
invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, cancelAnimation(IZLjava/lang/String;)V > 1,2,4,3 @1 exception:5,
return,
return,
monitorexit 10,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @48 exception:33,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @51 exception:41,
return,","depth : 0
public void cancelRecentsAnimation(boolean p1){
	ActivityTaskManagerService.enforceTaskPermission(""cancelRecentsAnimation()"");
	int v2 = Binder.getCallingUid();
	long v3 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cancelRecentsAnimation/uid="");
	StringBuilder v7 = v4.append(v2);
	String v8 = v4.toString();
	this.mWindowManager.cancelRecentsAnimation(phiInstruction, v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void cancelRecentsAnimation(int p1, String p2){
	this.mRecentsAnimationController.cancelAnimation(p1, p2);
	return;
}
-----
depth : 2
public void cancelAnimation(int p1, String p2){
	p0.cancelAnimation(p1, 0, p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void cancelRecentsAnimation(boolean p1){
	int v5 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""cancelRecentsAnimation/uid="");
	StringBuilder v13 = v10.append(v5);
	String v14 = v10.toString();
	RecentsAnimationController.cancelAnimation(p1, 0, p2);
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V","0","7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,9 @6 exception:10,
11 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 11,12,
13 = conversion(J) 4,
14 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
17 = new <Application,[Ljava/lang/Object>@2116 ,
19 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 13 @24 exception:18,
arraystore 17[12] = 19,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 14,15,16,12,17 @30 exception:20,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:25,
27 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 6 @39 exception:26,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, moveTaskToFrontLocked(Landroid/app/IApplicationThread;Ljava/lang/String;IILcom/android/server/wm/SafeActivityOptions;)V > 1,2,3,4,5,27 @48 exception:28,
monitorexit 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:40,
return,","depth : 0
public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, 2117696413, 1, 0, v1);
	WindowManagerService.boostPriorityForLockedSection();
	SafeActivityOptions v5 = SafeActivityOptions.fromBundle(p5);
	p0.moveTaskToFrontLocked(p1, p2, p3, p4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v2 = new Object(1);
	Long v3 = Long.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, 2117696413, 1, 0, v2);
	WindowManagerService.boostPriorityForLockedSection();
	SafeActivityOptions v6 = SafeActivityOptions.fromBundle(p5);
	p0.moveTaskToFrontLocked(p1, p2, p3, p4, v6);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V","1","7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,9 @6 exception:10,
11 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 11,12,
13 = conversion(J) 4,
14 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
17 = new <Application,[Ljava/lang/Object>@2116 ,
19 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 13 @24 exception:18,
arraystore 17[12] = 19,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 14,15,16,12,17 @30 exception:20,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
27 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 6 @39 exception:26,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, moveTaskToFrontLocked(Landroid/app/IApplicationThread;Ljava/lang/String;IILcom/android/server/wm/SafeActivityOptions;)V > 1,2,3,4,5,27 @48 exception:28,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @6 exception:7,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @16 exception:11,
13 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @19 exception:12,
conditional branch(eq, to iindex=-1) 2,14,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @26 exception:15,
goto (from iindex= 16 to iindex = 2),
17 = phi  16,14,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @33 exception:20,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 21,14,22 @39 exception:23,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, shouldAbortBackgroundActivityStart(IILjava/lang/String;IILcom/android/server/wm/WindowProcessController;Lcom/android/server/am/PendingIntentRecord;ZLandroid/content/Intent;Landroid/app/ActivityOptions;)Z > 24,10,8,3,25,25,17,14,14,14,14 @55 exception:26,
conditional branch(eq, to iindex=-1) 27,14,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isBackgroundActivityStartsEnabled()Z > 1 @61 exception:28,
conditional branch(ne, to iindex=-1) 29,14,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
35 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 33,4 @70 exception:34,
conditional branch(ne, to iindex=-1) 35,14,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @106 exception:36,
39 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, isLockTaskModeViolation(Lcom/android/server/wm/Task;)Z > 37,35 @110 exception:38,
conditional branch(eq, to iindex=-1) 39,14,
conditional branch(eq, to iindex=-1) 6,14,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOptions(Lcom/android/server/wm/ActivityTaskSupervisor;)Landroid/app/ActivityOptions; > 6,40 @136 exception:41,
goto (from iindex= 75 to iindex = 2),
44 = phi  42,14,
48 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, findTaskToMoveToFront(Lcom/android/server/wm/Task;ILandroid/app/ActivityOptions;Ljava/lang/String;Z)V > 48,35,5,44,22,14 @150 exception:49,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 13 @153 exception:50,
return,
monitorexit 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:40,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, 2117696413, 1, 0, v1);
	WindowManagerService.boostPriorityForLockedSection();
	SafeActivityOptions v5 = SafeActivityOptions.fromBundle(p5);
	p0.moveTaskToFrontLocked(p1, p2, p3, p4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 1
public void moveTaskToFrontLocked(IApplicationThread p1, String p2, int p3, int p4, SafeActivityOptions p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	p0.assertPackageMatchesCallingUid(p2);
	long v4 = Binder.clearCallingIdentity();
	WindowProcessController v5 = p0.getProcessController(p1);
	ActivityStartController v6 = p0.getActivityStartController();
	ActivityStarter v7 = v6.obtainStarter(0, ""moveTaskToFront"");
	boolean v8 = v7.shouldAbortBackgroundActivityStart(v2, v1, p2, -1, -1, phiInstruction, 0, 0, 0, 0);
	boolean v9 = p0.isBackgroundActivityStartsEnabled();
	Task v10 = this.mRootWindowContainer.anyTaskForId(p3);
	LockTaskController v11 = p0.getLockTaskController();
	boolean v12 = v11.isLockTaskModeViolation(v10);
	ActivityOptions v13 = p5.getOptions(this.mTaskSupervisor);
	this.mTaskSupervisor.findTaskToMoveToFront(v10, p4, phiInstruction, ""moveTaskToFront"", 0);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v2 = new Object(1);
	Long v3 = Long.valueOf(p3);
	ProtoLogImpl v5 = ProtoLogImpl.getSingleInstance();
	v5.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_TASKS, 2117696413, 1, 0, v2);
	this.sThreadPriorityBooster.boost();
	SafeActivityOptions v10 = new SafeActivityOptions(v11);
	ActivityOptions v11 = ActivityOptions.fromBundle(p5);
	SafeActivityOptions v9 = phiInstruction;
	int v14 = Binder.getCallingPid();
	int v15 = Binder.getCallingUid();
	ActivityTaskManagerService.assertPackageMatchesCallingUid(p2);
	long v17 = Binder.clearCallingIdentity();
	WindowProcessController v18 = ActivityTaskManagerService.getProcessController(p1);
	ActivityStartController v19 = ActivityTaskManagerService.getActivityStartController();
	ActivityStarter v20 = v19.obtainStarter(0, ""moveTaskToFront"");
	boolean v21 = v20.shouldAbortBackgroundActivityStart(v15, v14, p2, -1, -1, phiInstruction, 0, 0, 0, 0);
	boolean v22 = ActivityTaskManagerService.isBackgroundActivityStartsEnabled();
	Task v23 = this.mRootWindowContainer.anyTaskForId(p3);
	LockTaskController v24 = ActivityTaskManagerService.getLockTaskController();
	boolean v25 = v24.isLockTaskModeViolation(v23);
	ActivityOptions v26 = v9.getOptions(this.mTaskSupervisor);
	this.mTaskSupervisor.findTaskToMoveToFront(v23, p4, phiInstruction, ""moveTaskToFront"", 0);
	Binder.restoreCallingIdentity(v17);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V","1","7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,9 @6 exception:10,
11 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 11,12,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
27 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 6 @39 exception:26,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, moveTaskToFrontLocked(Landroid/app/IApplicationThread;Ljava/lang/String;IILcom/android/server/wm/SafeActivityOptions;)V > 1,2,3,4,5,27 @48 exception:28,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @6 exception:7,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @16 exception:11,
13 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @19 exception:12,
conditional branch(eq, to iindex=-1) 2,14,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @26 exception:15,
goto (from iindex= 16 to iindex = 2),
17 = phi  16,14,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @33 exception:20,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 21,14,22 @39 exception:23,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, shouldAbortBackgroundActivityStart(IILjava/lang/String;IILcom/android/server/wm/WindowProcessController;Lcom/android/server/am/PendingIntentRecord;ZLandroid/content/Intent;Landroid/app/ActivityOptions;)Z > 24,10,8,3,25,25,17,14,14,14,14 @55 exception:26,
conditional branch(eq, to iindex=-1) 27,14,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isBackgroundActivityStartsEnabled()Z > 1 @61 exception:28,
conditional branch(ne, to iindex=-1) 29,14,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
35 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 33,4 @70 exception:34,
conditional branch(ne, to iindex=-1) 35,14,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @106 exception:36,
39 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, isLockTaskModeViolation(Lcom/android/server/wm/Task;)Z > 37,35 @110 exception:38,
conditional branch(eq, to iindex=-1) 39,14,
conditional branch(eq, to iindex=-1) 6,14,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOptions(Lcom/android/server/wm/ActivityTaskSupervisor;)Landroid/app/ActivityOptions; > 6,40 @136 exception:41,
goto (from iindex= 75 to iindex = 2),
44 = phi  42,14,
48 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, findTaskToMoveToFront(Lcom/android/server/wm/Task;ILandroid/app/ActivityOptions;Ljava/lang/String;Z)V > 48,35,5,44,22,14 @150 exception:49,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 13 @153 exception:50,
return,
monitorexit 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:40,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	WindowManagerService.boostPriorityForLockedSection();
	SafeActivityOptions v3 = SafeActivityOptions.fromBundle(p5);
	p0.moveTaskToFrontLocked(p1, p2, p3, p4, v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 1
public void moveTaskToFrontLocked(IApplicationThread p1, String p2, int p3, int p4, SafeActivityOptions p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	p0.assertPackageMatchesCallingUid(p2);
	long v4 = Binder.clearCallingIdentity();
	WindowProcessController v5 = p0.getProcessController(p1);
	ActivityStartController v6 = p0.getActivityStartController();
	ActivityStarter v7 = v6.obtainStarter(0, ""moveTaskToFront"");
	boolean v8 = v7.shouldAbortBackgroundActivityStart(v2, v1, p2, -1, -1, phiInstruction, 0, 0, 0, 0);
	boolean v9 = p0.isBackgroundActivityStartsEnabled();
	Task v10 = this.mRootWindowContainer.anyTaskForId(p3);
	LockTaskController v11 = p0.getLockTaskController();
	boolean v12 = v11.isLockTaskModeViolation(v10);
	ActivityOptions v13 = p5.getOptions(this.mTaskSupervisor);
	this.mTaskSupervisor.findTaskToMoveToFront(v10, p4, phiInstruction, ""moveTaskToFront"", 0);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	this.sThreadPriorityBooster.boost();
	SafeActivityOptions v5 = new SafeActivityOptions(v6);
	ActivityOptions v6 = ActivityOptions.fromBundle(p5);
	SafeActivityOptions v4 = phiInstruction;
	int v9 = Binder.getCallingPid();
	int v10 = Binder.getCallingUid();
	ActivityTaskManagerService.assertPackageMatchesCallingUid(p2);
	long v12 = Binder.clearCallingIdentity();
	WindowProcessController v13 = ActivityTaskManagerService.getProcessController(p1);
	ActivityStartController v14 = ActivityTaskManagerService.getActivityStartController();
	ActivityStarter v15 = v14.obtainStarter(0, ""moveTaskToFront"");
	boolean v16 = v15.shouldAbortBackgroundActivityStart(v10, v9, p2, -1, -1, phiInstruction, 0, 0, 0, 0);
	boolean v17 = ActivityTaskManagerService.isBackgroundActivityStartsEnabled();
	Task v18 = this.mRootWindowContainer.anyTaskForId(p3);
	LockTaskController v19 = ActivityTaskManagerService.getLockTaskController();
	boolean v20 = v19.isLockTaskModeViolation(v18);
	ActivityOptions v21 = v4.getOptions(this.mTaskSupervisor);
	this.mTaskSupervisor.findTaskToMoveToFront(v18, p4, phiInstruction, ""moveTaskToFront"", 0);
	Binder.restoreCallingIdentity(v12);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V","2","7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,9 @6 exception:10,
11 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 11,12,
13 = conversion(J) 4,
14 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
17 = new <Application,[Ljava/lang/Object>@2116 ,
19 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 13 @24 exception:18,
arraystore 17[12] = 19,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 14,15,16,12,17 @30 exception:20,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
27 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 6 @39 exception:26,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/app/ActivityOptions>@2,
invokespecial < Application, Landroid/app/ActivityOptions, <init>(Landroid/os/Bundle;)V > 3,1 @4 exception:4,
goto (from iindex= 3 to iindex = 2),
5 = phi  3,2,
return 5,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, moveTaskToFrontLocked(Landroid/app/IApplicationThread;Ljava/lang/String;IILcom/android/server/wm/SafeActivityOptions;)V > 1,2,3,4,5,27 @48 exception:28,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @6 exception:7,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @16 exception:11,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
13 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @19 exception:12,
conditional branch(eq, to iindex=-1) 2,14,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @26 exception:15,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
goto (from iindex= 16 to iindex = 2),
17 = phi  16,14,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @33 exception:20,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 21,14,22 @39 exception:23,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
return 10,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, shouldAbortBackgroundActivityStart(IILjava/lang/String;IILcom/android/server/wm/WindowProcessController;Lcom/android/server/am/PendingIntentRecord;ZLandroid/content/Intent;Landroid/app/ActivityOptions;)Z > 24,10,8,3,25,25,17,14,14,14,14 @55 exception:26,
13 = invokestatic < Application, Landroid/os/UserHandle, getAppId(I)I > 2 @14 exception:12,
conditional branch(eq, to iindex=-1) 8,15,
conditional branch(eq, to iindex=-1) 11,15,
17 = invokevirtual < Application, Landroid/app/ActivityOptions, getIgnorePendingIntentCreatorForegroundState()Z > 11 @24 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 16 to iindex = 3),
20 = phi  15,14,
conditional branch(eq, to iindex=-1) 20,15,
conditional branch(eq, to iindex=-1) 2,15,
conditional branch(eq, to iindex=-1) 13,23,
conditional branch(ne, to iindex=-1) 13,24,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, isHomeApp(ILjava/lang/String;)Z > 1,2,4 @47 exception:25,
conditional branch(eq, to iindex=-1) 26,15,
27 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
29 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getCurrentInputMethodWindow()Lcom/android/server/wm/WindowState; > 27 @56 exception:28,
conditional branch(eq, to iindex=-1) 29,15,
30 = getfield < Application, Lcom/android/server/wm/WindowState, mOwnerUid, <Primordial,I> > 29,
conditional branch(ne, to iindex=-1) 13,30,
34 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
36 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getBalAppSwitchesState()I > 34 @69 exception:35,
37 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
38 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActiveUids, <Application,Lcom/android/server/wm/MirrorActiveUids> > 37,
40 = invokevirtual < Application, Lcom/android/server/wm/MirrorActiveUids, getUidState(I)I > 38,2 @77 exception:39,
41 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
43 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, hasActiveVisibleWindow(I)Z > 41,2 @83 exception:42,
conditional branch(ne, to iindex=-1) 43,15,
conditional branch(eq, to iindex=-1) 40,44,
conditional branch(ne, to iindex=-1) 40,45,
goto (from iindex= 53 to iindex = 3),
46 = phi  15,14,
conditional branch(gt, to iindex=-1) 40,14,
goto (from iindex= 59 to iindex = 2),
47 = phi  14,15,
conditional branch(eq, to iindex=-1) 36,44,
conditional branch(ne, to iindex=-1) 36,14,
goto (from iindex= 63 to iindex = 4),
48 = phi  15,14,
conditional branch(ne, to iindex=-1) 48,15,
49 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActiveUids, <Application,Lcom/android/server/wm/MirrorActiveUids> > 49,
52 = invokevirtual < Application, Lcom/android/server/wm/MirrorActiveUids, hasNonAppVisibleWindow(I)Z > 50,2 @120 exception:51,
conditional branch(eq, to iindex=-1) 52,15,
conditional branch(ne, to iindex=-1) 43,15,
conditional branch(eq, to iindex=-1) 47,15,
goto (from iindex= 75 to iindex = 3),
62 = phi  15,14,
conditional branch(eq, to iindex=-1) 20,15,
conditional branch(eq, to iindex=-1) 62,15,
return 15,
conditional branch(eq, to iindex=-1) 27,14,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isBackgroundActivityStartsEnabled()Z > 1 @61 exception:28,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
4 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, isBackgroundActivityStartsEnabled()Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 29,14,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
35 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 33,4 @70 exception:34,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 1,2,3 @1 exception:4,
return 5,
conditional branch(ne, to iindex=-1) 35,14,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @106 exception:36,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
39 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, isLockTaskModeViolation(Lcom/android/server/wm/Task;)Z > 37,35 @110 exception:38,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, isLockTaskModeViolation(Lcom/android/server/wm/Task;Z)Z > 1,2,3 @1 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 39,14,
conditional branch(eq, to iindex=-1) 6,14,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOptions(Lcom/android/server/wm/ActivityTaskSupervisor;)Landroid/app/ActivityOptions; > 6,40 @136 exception:41,
5 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOptions(Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Lcom/android/server/wm/WindowProcessController;Lcom/android/server/wm/ActivityTaskSupervisor;)Landroid/app/ActivityOptions; > 1,3,3,3,2 @1 exception:4,
return 5,
goto (from iindex= 75 to iindex = 2),
44 = phi  42,14,
48 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, findTaskToMoveToFront(Lcom/android/server/wm/Task;ILandroid/app/ActivityOptions;Ljava/lang/String;Z)V > 48,35,5,44,22,14 @150 exception:49,
8 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 2 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
143 = new <Application,Ljava/lang/StringBuilder>@14,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 143 @16 exception:144,
147 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 143,145 @21 exception:146,
149 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 143,2 @24 exception:148,
152 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 143,150 @29 exception:151,
154 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 143 @32 exception:153,
157 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 155,154 @38 exception:156,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 13 @153 exception:50,
return,
monitorexit 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:40,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, 2117696413, 1, 0, v1);
	WindowManagerService.boostPriorityForLockedSection();
	SafeActivityOptions v5 = SafeActivityOptions.fromBundle(p5);
	p0.moveTaskToFrontLocked(p1, p2, p3, p4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions fromBundle(Bundle p1){
	ActivityOptions v0 = new ActivityOptions(p1);
	return phiInstruction;
}
-----
depth : 1
public void moveTaskToFrontLocked(IApplicationThread p1, String p2, int p3, int p4, SafeActivityOptions p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	p0.assertPackageMatchesCallingUid(p2);
	long v4 = Binder.clearCallingIdentity();
	WindowProcessController v5 = p0.getProcessController(p1);
	ActivityStartController v6 = p0.getActivityStartController();
	ActivityStarter v7 = v6.obtainStarter(0, ""moveTaskToFront"");
	boolean v8 = v7.shouldAbortBackgroundActivityStart(v2, v1, p2, -1, -1, phiInstruction, 0, 0, 0, 0);
	boolean v9 = p0.isBackgroundActivityStartsEnabled();
	Task v10 = this.mRootWindowContainer.anyTaskForId(p3);
	LockTaskController v11 = p0.getLockTaskController();
	boolean v12 = v11.isLockTaskModeViolation(v10);
	ActivityOptions v13 = p5.getOptions(this.mTaskSupervisor);
	this.mTaskSupervisor.findTaskToMoveToFront(v10, p4, phiInstruction, ""moveTaskToFront"", 0);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 2
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 2
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 2
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 2
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 2
public boolean shouldAbortBackgroundActivityStart(int p1, int p2, String p3, int p4, int p5, WindowProcessController p6, PendingIntentRecord p7, boolean p8, Intent p9, ActivityOptions p10){
	boolean v8 = ActivityTaskManagerService.mActiveUids.hasNonAppVisibleWindow(p1);
	return 0;
}
-----
depth : 2
public boolean isBackgroundActivityStartsEnabled(){
	boolean v1 = this.mAmInternal.isBackgroundActivityStartsEnabled();
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1){
	Task v1 = p0.anyTaskForId(p1, 2);
	return v1;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public boolean isLockTaskModeViolation(Task p1){
	boolean v1 = p0.isLockTaskModeViolation(p1, 0);
	return v1;
}
-----
depth : 2
public ActivityOptions getOptions(ActivityTaskSupervisor p1){
	ActivityOptions v1 = p0.getOptions(0, 0, 0, p1);
	return v1;
}
-----
depth : 2
public void findTaskToMoveToFront(Task p1, int p2, ActivityOptions p3, String p4, boolean p5){
	Task v1 = p1.getRootTask();
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""findTaskToMoveToFront: can't move task="");
	StringBuilder v4 = v1.append(p1);
	StringBuilder v5 = v1.append("" to front. Root task is null"");
	String v6 = v1.toString();
	int v7 = Slog.e(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v2 = new Object(1);
	Long v3 = Long.valueOf(p3);
	ProtoLogImpl v6 = new ProtoLogImpl(v7,1048576,v9);
	File v7 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v9 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v6;
	ProtoLogImpl v5 = this.sServiceInstance;
	boolean v13 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v15 = p1.isLogToLogcat();
	String v16 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v16, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	SafeActivityOptions v22 = new SafeActivityOptions(v23);
	ActivityOptions v24 = new ActivityOptions(p1);
	ActivityOptions v23 = phiInstruction;
	SafeActivityOptions v21 = phiInstruction;
	int v28 = Binder.getCallingPid();
	int v29 = Binder.getCallingUid();
	long v33 = Binder.clearCallingIdentity();
	IBinder v35 = p1.asBinder();
	ArrayMap v36 = this.mProcessNames.getMap();
	int v37 = v36.size();
	Object v38 = v36.valueAt(phiInstruction);
	int v39 = v38.size();
	Object v40 = v38.valueAt(phiInstruction);
	boolean v41 = v40.hasThread();
	IApplicationThread v42 = v40.getThread();
	IBinder v43 = v42.asBinder();
	WindowProcessController v34 = v40;
	ActivityStartController v44 = this.mActivityStartController;
	ActivityStarter v46 = this.mFactory.obtain();
	ActivityStarter v47 = v46.setIntent(0);
	ActivityStarter v48 = v47.setReason(""moveTaskToFront"");
	ActivityStarter v45 = v48;
	boolean v57 = ActivityTaskManagerService.mActiveUids.hasNonAppVisibleWindow(v29);
	boolean v49 = 0;
	boolean v59 = this.mAmInternal.isBackgroundActivityStartsEnabled();
	boolean v58 = v59;
	Task v61 = RootWindowContainer.anyTaskForId(p3, 2);
	Task v60 = v61;
	LockTaskController v62 = this.mLockTaskController;
	boolean v64 = LockTaskController.isLockTaskModeViolation(v60, 0);
	boolean v63 = v64;
	ActivityOptions v66 = SafeActivityOptions.getOptions(0, 0, 0, this.mTaskSupervisor);
	ActivityOptions v65 = v66;
	Task v68 = v60.getRootTask();
	Binder.restoreCallingIdentity(v33);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V","2","7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,9 @6 exception:10,
11 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 11,12,
13 = conversion(J) 4,
14 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
17 = new <Application,[Ljava/lang/Object>@2116 ,
19 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 13 @24 exception:18,
arraystore 17[12] = 19,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 14,15,16,12,17 @30 exception:20,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
27 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 6 @39 exception:26,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/app/ActivityOptions>@2,
invokespecial < Application, Landroid/app/ActivityOptions, <init>(Landroid/os/Bundle;)V > 3,1 @4 exception:4,
goto (from iindex= 3 to iindex = 2),
5 = phi  3,2,
return 5,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, moveTaskToFrontLocked(Landroid/app/IApplicationThread;Ljava/lang/String;IILcom/android/server/wm/SafeActivityOptions;)V > 1,2,3,4,5,27 @48 exception:28,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @6 exception:7,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @16 exception:11,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
13 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @19 exception:12,
conditional branch(eq, to iindex=-1) 2,14,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @26 exception:15,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
goto (from iindex= 16 to iindex = 2),
17 = phi  16,14,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @33 exception:20,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 21,14,22 @39 exception:23,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
return 10,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, shouldAbortBackgroundActivityStart(IILjava/lang/String;IILcom/android/server/wm/WindowProcessController;Lcom/android/server/am/PendingIntentRecord;ZLandroid/content/Intent;Landroid/app/ActivityOptions;)Z > 24,10,8,3,25,25,17,14,14,14,14 @55 exception:26,
13 = invokestatic < Application, Landroid/os/UserHandle, getAppId(I)I > 2 @14 exception:12,
conditional branch(eq, to iindex=-1) 8,15,
conditional branch(eq, to iindex=-1) 11,15,
17 = invokevirtual < Application, Landroid/app/ActivityOptions, getIgnorePendingIntentCreatorForegroundState()Z > 11 @24 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 16 to iindex = 3),
20 = phi  15,14,
conditional branch(eq, to iindex=-1) 20,15,
conditional branch(eq, to iindex=-1) 2,15,
conditional branch(eq, to iindex=-1) 13,23,
conditional branch(ne, to iindex=-1) 13,24,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, isHomeApp(ILjava/lang/String;)Z > 1,2,4 @47 exception:25,
conditional branch(eq, to iindex=-1) 26,15,
27 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
29 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getCurrentInputMethodWindow()Lcom/android/server/wm/WindowState; > 27 @56 exception:28,
conditional branch(eq, to iindex=-1) 29,15,
30 = getfield < Application, Lcom/android/server/wm/WindowState, mOwnerUid, <Primordial,I> > 29,
conditional branch(ne, to iindex=-1) 13,30,
34 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
36 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getBalAppSwitchesState()I > 34 @69 exception:35,
37 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
38 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActiveUids, <Application,Lcom/android/server/wm/MirrorActiveUids> > 37,
40 = invokevirtual < Application, Lcom/android/server/wm/MirrorActiveUids, getUidState(I)I > 38,2 @77 exception:39,
41 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
43 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, hasActiveVisibleWindow(I)Z > 41,2 @83 exception:42,
conditional branch(ne, to iindex=-1) 43,15,
conditional branch(eq, to iindex=-1) 40,44,
conditional branch(ne, to iindex=-1) 40,45,
goto (from iindex= 53 to iindex = 3),
46 = phi  15,14,
conditional branch(gt, to iindex=-1) 40,14,
goto (from iindex= 59 to iindex = 2),
47 = phi  14,15,
conditional branch(eq, to iindex=-1) 36,44,
conditional branch(ne, to iindex=-1) 36,14,
goto (from iindex= 63 to iindex = 4),
48 = phi  15,14,
conditional branch(ne, to iindex=-1) 48,15,
49 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActiveUids, <Application,Lcom/android/server/wm/MirrorActiveUids> > 49,
52 = invokevirtual < Application, Lcom/android/server/wm/MirrorActiveUids, hasNonAppVisibleWindow(I)Z > 50,2 @120 exception:51,
conditional branch(eq, to iindex=-1) 52,15,
conditional branch(ne, to iindex=-1) 43,15,
conditional branch(eq, to iindex=-1) 47,15,
goto (from iindex= 75 to iindex = 3),
62 = phi  15,14,
conditional branch(eq, to iindex=-1) 20,15,
conditional branch(eq, to iindex=-1) 62,15,
return 15,
conditional branch(eq, to iindex=-1) 27,14,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isBackgroundActivityStartsEnabled()Z > 1 @61 exception:28,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
4 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, isBackgroundActivityStartsEnabled()Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 29,14,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
35 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 33,4 @70 exception:34,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 1,2,3 @1 exception:4,
return 5,
conditional branch(ne, to iindex=-1) 35,14,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @106 exception:36,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
39 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, isLockTaskModeViolation(Lcom/android/server/wm/Task;)Z > 37,35 @110 exception:38,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, isLockTaskModeViolation(Lcom/android/server/wm/Task;Z)Z > 1,2,3 @1 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 39,14,
conditional branch(eq, to iindex=-1) 6,14,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOptions(Lcom/android/server/wm/ActivityTaskSupervisor;)Landroid/app/ActivityOptions; > 6,40 @136 exception:41,
5 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOptions(Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Lcom/android/server/wm/WindowProcessController;Lcom/android/server/wm/ActivityTaskSupervisor;)Landroid/app/ActivityOptions; > 1,3,3,3,2 @1 exception:4,
return 5,
goto (from iindex= 75 to iindex = 2),
44 = phi  42,14,
48 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, findTaskToMoveToFront(Lcom/android/server/wm/Task;ILandroid/app/ActivityOptions;Ljava/lang/String;Z)V > 48,35,5,44,22,14 @150 exception:49,
8 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 2 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
143 = new <Application,Ljava/lang/StringBuilder>@14,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 143 @16 exception:144,
147 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 143,145 @21 exception:146,
149 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 143,2 @24 exception:148,
152 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 143,150 @29 exception:151,
154 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 143 @32 exception:153,
157 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 155,154 @38 exception:156,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 13 @153 exception:50,
return,
monitorexit 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:40,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, 2117696413, 1, 0, v1);
	WindowManagerService.boostPriorityForLockedSection();
	SafeActivityOptions v5 = SafeActivityOptions.fromBundle(p5);
	p0.moveTaskToFrontLocked(p1, p2, p3, p4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions fromBundle(Bundle p1){
	ActivityOptions v0 = new ActivityOptions(p1);
	return phiInstruction;
}
-----
depth : 1
public void moveTaskToFrontLocked(IApplicationThread p1, String p2, int p3, int p4, SafeActivityOptions p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	p0.assertPackageMatchesCallingUid(p2);
	long v4 = Binder.clearCallingIdentity();
	WindowProcessController v5 = p0.getProcessController(p1);
	ActivityStartController v6 = p0.getActivityStartController();
	ActivityStarter v7 = v6.obtainStarter(0, ""moveTaskToFront"");
	boolean v8 = v7.shouldAbortBackgroundActivityStart(v2, v1, p2, -1, -1, phiInstruction, 0, 0, 0, 0);
	boolean v9 = p0.isBackgroundActivityStartsEnabled();
	Task v10 = this.mRootWindowContainer.anyTaskForId(p3);
	LockTaskController v11 = p0.getLockTaskController();
	boolean v12 = v11.isLockTaskModeViolation(v10);
	ActivityOptions v13 = p5.getOptions(this.mTaskSupervisor);
	this.mTaskSupervisor.findTaskToMoveToFront(v10, p4, phiInstruction, ""moveTaskToFront"", 0);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 2
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 2
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 2
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 2
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 2
public boolean shouldAbortBackgroundActivityStart(int p1, int p2, String p3, int p4, int p5, WindowProcessController p6, PendingIntentRecord p7, boolean p8, Intent p9, ActivityOptions p10){
	boolean v8 = ActivityTaskManagerService.mActiveUids.hasNonAppVisibleWindow(p1);
	return 0;
}
-----
depth : 2
public boolean isBackgroundActivityStartsEnabled(){
	boolean v1 = this.mAmInternal.isBackgroundActivityStartsEnabled();
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1){
	Task v1 = p0.anyTaskForId(p1, 2);
	return v1;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public boolean isLockTaskModeViolation(Task p1){
	boolean v1 = p0.isLockTaskModeViolation(p1, 0);
	return v1;
}
-----
depth : 2
public ActivityOptions getOptions(ActivityTaskSupervisor p1){
	ActivityOptions v1 = p0.getOptions(0, 0, 0, p1);
	return v1;
}
-----
depth : 2
public void findTaskToMoveToFront(Task p1, int p2, ActivityOptions p3, String p4, boolean p5){
	Task v1 = p1.getRootTask();
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""findTaskToMoveToFront: can't move task="");
	StringBuilder v4 = v1.append(p1);
	StringBuilder v5 = v1.append("" to front. Root task is null"");
	String v6 = v1.toString();
	int v7 = Slog.e(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v2 = new Object(1);
	Long v3 = Long.valueOf(p3);
	ProtoLogImpl v6 = new ProtoLogImpl(v7,1048576,v9);
	File v7 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v9 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v6;
	ProtoLogImpl v5 = this.sServiceInstance;
	boolean v13 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v15 = p1.isLogToLogcat();
	String v16 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v16, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	WindowManagerThreadPriorityBooster.boost();
	SafeActivityOptions v23 = new SafeActivityOptions(v24);
	ActivityOptions v25 = new ActivityOptions(p1);
	ActivityOptions v24 = phiInstruction;
	SafeActivityOptions v22 = phiInstruction;
	int v29 = Binder.getCallingPid();
	int v30 = Binder.getCallingUid();
	long v34 = Binder.clearCallingIdentity();
	IBinder v36 = p1.asBinder();
	ArrayMap v37 = this.mProcessNames.getMap();
	int v38 = v37.size();
	Object v39 = v37.valueAt(phiInstruction);
	int v40 = v39.size();
	Object v41 = v39.valueAt(phiInstruction);
	boolean v42 = v41.hasThread();
	IApplicationThread v43 = v41.getThread();
	IBinder v44 = v43.asBinder();
	WindowProcessController v35 = v41;
	ActivityStartController v45 = this.mActivityStartController;
	ActivityStarter v47 = this.mFactory.obtain();
	ActivityStarter v48 = v47.setIntent(0);
	ActivityStarter v49 = v48.setReason(""moveTaskToFront"");
	ActivityStarter v46 = v49;
	boolean v58 = ActivityTaskManagerService.mActiveUids.hasNonAppVisibleWindow(v30);
	boolean v50 = 0;
	boolean v60 = this.mAmInternal.isBackgroundActivityStartsEnabled();
	boolean v59 = v60;
	Task v62 = RootWindowContainer.anyTaskForId(p3, 2);
	Task v61 = v62;
	LockTaskController v63 = this.mLockTaskController;
	boolean v65 = LockTaskController.isLockTaskModeViolation(v61, 0);
	boolean v64 = v65;
	ActivityOptions v67 = SafeActivityOptions.getOptions(0, 0, 0, this.mTaskSupervisor);
	ActivityOptions v66 = v67;
	Task v69 = v61.getRootTask();
	Binder.restoreCallingIdentity(v34);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToFront(Landroid/app/IApplicationThread;Ljava/lang/String;IILandroid/os/Bundle;)V","2","7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,9 @6 exception:10,
11 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 11,12,
13 = conversion(J) 4,
14 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
17 = new <Application,[Ljava/lang/Object>@2116 ,
19 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 13 @24 exception:18,
arraystore 17[12] = 19,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 14,15,16,12,17 @30 exception:20,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
27 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 6 @39 exception:26,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/app/ActivityOptions>@2,
invokespecial < Application, Landroid/app/ActivityOptions, <init>(Landroid/os/Bundle;)V > 3,1 @4 exception:4,
goto (from iindex= 3 to iindex = 2),
5 = phi  3,2,
return 5,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, moveTaskToFrontLocked(Landroid/app/IApplicationThread;Ljava/lang/String;IILcom/android/server/wm/SafeActivityOptions;)V > 1,2,3,4,5,27 @48 exception:28,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @6 exception:7,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:9,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @16 exception:11,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
13 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @19 exception:12,
conditional branch(eq, to iindex=-1) 2,14,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @26 exception:15,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
goto (from iindex= 16 to iindex = 2),
17 = phi  16,14,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @33 exception:20,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 21,14,22 @39 exception:23,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
return 10,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, shouldAbortBackgroundActivityStart(IILjava/lang/String;IILcom/android/server/wm/WindowProcessController;Lcom/android/server/am/PendingIntentRecord;ZLandroid/content/Intent;Landroid/app/ActivityOptions;)Z > 24,10,8,3,25,25,17,14,14,14,14 @55 exception:26,
13 = invokestatic < Application, Landroid/os/UserHandle, getAppId(I)I > 2 @14 exception:12,
conditional branch(eq, to iindex=-1) 8,15,
conditional branch(eq, to iindex=-1) 11,15,
17 = invokevirtual < Application, Landroid/app/ActivityOptions, getIgnorePendingIntentCreatorForegroundState()Z > 11 @24 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 16 to iindex = 3),
20 = phi  15,14,
conditional branch(eq, to iindex=-1) 20,15,
conditional branch(eq, to iindex=-1) 2,15,
conditional branch(eq, to iindex=-1) 13,23,
conditional branch(ne, to iindex=-1) 13,24,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, isHomeApp(ILjava/lang/String;)Z > 1,2,4 @47 exception:25,
conditional branch(eq, to iindex=-1) 26,15,
27 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
29 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getCurrentInputMethodWindow()Lcom/android/server/wm/WindowState; > 27 @56 exception:28,
conditional branch(eq, to iindex=-1) 29,15,
30 = getfield < Application, Lcom/android/server/wm/WindowState, mOwnerUid, <Primordial,I> > 29,
conditional branch(ne, to iindex=-1) 13,30,
34 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
36 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getBalAppSwitchesState()I > 34 @69 exception:35,
37 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
38 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActiveUids, <Application,Lcom/android/server/wm/MirrorActiveUids> > 37,
40 = invokevirtual < Application, Lcom/android/server/wm/MirrorActiveUids, getUidState(I)I > 38,2 @77 exception:39,
41 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
43 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, hasActiveVisibleWindow(I)Z > 41,2 @83 exception:42,
conditional branch(ne, to iindex=-1) 43,15,
conditional branch(eq, to iindex=-1) 40,44,
conditional branch(ne, to iindex=-1) 40,45,
goto (from iindex= 53 to iindex = 3),
46 = phi  15,14,
conditional branch(gt, to iindex=-1) 40,14,
goto (from iindex= 59 to iindex = 2),
47 = phi  14,15,
conditional branch(eq, to iindex=-1) 36,44,
conditional branch(ne, to iindex=-1) 36,14,
goto (from iindex= 63 to iindex = 4),
48 = phi  15,14,
conditional branch(ne, to iindex=-1) 48,15,
49 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActiveUids, <Application,Lcom/android/server/wm/MirrorActiveUids> > 49,
52 = invokevirtual < Application, Lcom/android/server/wm/MirrorActiveUids, hasNonAppVisibleWindow(I)Z > 50,2 @120 exception:51,
conditional branch(eq, to iindex=-1) 52,15,
conditional branch(ne, to iindex=-1) 43,15,
conditional branch(eq, to iindex=-1) 47,15,
goto (from iindex= 75 to iindex = 3),
62 = phi  15,14,
conditional branch(eq, to iindex=-1) 20,15,
conditional branch(eq, to iindex=-1) 62,15,
return 15,
conditional branch(eq, to iindex=-1) 27,14,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isBackgroundActivityStartsEnabled()Z > 1 @61 exception:28,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
4 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, isBackgroundActivityStartsEnabled()Z > 2 @2 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 29,14,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
35 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 33,4 @70 exception:34,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 1,2,3 @1 exception:4,
return 5,
conditional branch(ne, to iindex=-1) 35,14,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @106 exception:36,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
39 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, isLockTaskModeViolation(Lcom/android/server/wm/Task;)Z > 37,35 @110 exception:38,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, isLockTaskModeViolation(Lcom/android/server/wm/Task;Z)Z > 1,2,3 @1 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 39,14,
conditional branch(eq, to iindex=-1) 6,14,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOptions(Lcom/android/server/wm/ActivityTaskSupervisor;)Landroid/app/ActivityOptions; > 6,40 @136 exception:41,
5 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOptions(Landroid/content/Intent;Landroid/content/pm/ActivityInfo;Lcom/android/server/wm/WindowProcessController;Lcom/android/server/wm/ActivityTaskSupervisor;)Landroid/app/ActivityOptions; > 1,3,3,3,2 @1 exception:4,
return 5,
goto (from iindex= 75 to iindex = 2),
44 = phi  42,14,
48 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, findTaskToMoveToFront(Lcom/android/server/wm/Task;ILandroid/app/ActivityOptions;Ljava/lang/String;Z)V > 48,35,5,44,22,14 @150 exception:49,
8 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 2 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
143 = new <Application,Ljava/lang/StringBuilder>@14,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 143 @16 exception:144,
147 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 143,145 @21 exception:146,
149 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 143,2 @24 exception:148,
152 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 143,150 @29 exception:151,
154 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 143 @32 exception:153,
157 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 155,154 @38 exception:156,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 13 @153 exception:50,
return,
monitorexit 24,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:40,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, 2117696413, 1, 0, v1);
	WindowManagerService.boostPriorityForLockedSection();
	SafeActivityOptions v5 = SafeActivityOptions.fromBundle(p5);
	p0.moveTaskToFrontLocked(p1, p2, p3, p4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions fromBundle(Bundle p1){
	ActivityOptions v0 = new ActivityOptions(p1);
	return phiInstruction;
}
-----
depth : 1
public void moveTaskToFrontLocked(IApplicationThread p1, String p2, int p3, int p4, SafeActivityOptions p5){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	p0.assertPackageMatchesCallingUid(p2);
	long v4 = Binder.clearCallingIdentity();
	WindowProcessController v5 = p0.getProcessController(p1);
	ActivityStartController v6 = p0.getActivityStartController();
	ActivityStarter v7 = v6.obtainStarter(0, ""moveTaskToFront"");
	boolean v8 = v7.shouldAbortBackgroundActivityStart(v2, v1, p2, -1, -1, phiInstruction, 0, 0, 0, 0);
	boolean v9 = p0.isBackgroundActivityStartsEnabled();
	Task v10 = this.mRootWindowContainer.anyTaskForId(p3);
	LockTaskController v11 = p0.getLockTaskController();
	boolean v12 = v11.isLockTaskModeViolation(v10);
	ActivityOptions v13 = p5.getOptions(this.mTaskSupervisor);
	this.mTaskSupervisor.findTaskToMoveToFront(v10, p4, phiInstruction, ""moveTaskToFront"", 0);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 2
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 2
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 2
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 2
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 2
public boolean shouldAbortBackgroundActivityStart(int p1, int p2, String p3, int p4, int p5, WindowProcessController p6, PendingIntentRecord p7, boolean p8, Intent p9, ActivityOptions p10){
	boolean v8 = ActivityTaskManagerService.mActiveUids.hasNonAppVisibleWindow(p1);
	return 0;
}
-----
depth : 2
public boolean isBackgroundActivityStartsEnabled(){
	boolean v1 = this.mAmInternal.isBackgroundActivityStartsEnabled();
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1){
	Task v1 = p0.anyTaskForId(p1, 2);
	return v1;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public boolean isLockTaskModeViolation(Task p1){
	boolean v1 = p0.isLockTaskModeViolation(p1, 0);
	return v1;
}
-----
depth : 2
public ActivityOptions getOptions(ActivityTaskSupervisor p1){
	ActivityOptions v1 = p0.getOptions(0, 0, 0, p1);
	return v1;
}
-----
depth : 2
public void findTaskToMoveToFront(Task p1, int p2, ActivityOptions p3, String p4, boolean p5){
	Task v1 = p1.getRootTask();
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""findTaskToMoveToFront: can't move task="");
	StringBuilder v4 = v1.append(p1);
	StringBuilder v5 = v1.append("" to front. Root task is null"");
	String v6 = v1.toString();
	int v7 = Slog.e(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void moveTaskToFront(IApplicationThread p1, String p2, int p3, int p4, Bundle p5){
	Object v2 = new Object(1);
	Long v3 = Long.valueOf(p3);
	ProtoLogImpl v6 = new ProtoLogImpl(v7,1048576,v9);
	File v7 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v9 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v6;
	ProtoLogImpl v5 = this.sServiceInstance;
	boolean v13 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v15 = p1.isLogToLogcat();
	String v16 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v16, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	SafeActivityOptions v22 = new SafeActivityOptions(v23);
	ActivityOptions v24 = new ActivityOptions(p1);
	ActivityOptions v23 = phiInstruction;
	SafeActivityOptions v21 = phiInstruction;
	int v28 = Binder.getCallingPid();
	int v29 = Binder.getCallingUid();
	long v33 = Binder.clearCallingIdentity();
	IBinder v35 = p1.asBinder();
	ArrayMap v36 = this.mProcessNames.getMap();
	int v37 = v36.size();
	Object v38 = v36.valueAt(phiInstruction);
	int v39 = v38.size();
	Object v40 = v38.valueAt(phiInstruction);
	boolean v41 = v40.hasThread();
	IApplicationThread v42 = v40.getThread();
	IBinder v43 = v42.asBinder();
	WindowProcessController v34 = v40;
	ActivityStartController v44 = this.mActivityStartController;
	ActivityStarter v46 = this.mFactory.obtain();
	ActivityStarter v47 = v46.setIntent(0);
	ActivityStarter v48 = v47.setReason(""moveTaskToFront"");
	ActivityStarter v45 = v48;
	boolean v57 = ActivityTaskManagerService.mActiveUids.hasNonAppVisibleWindow(v29);
	boolean v49 = 0;
	boolean v59 = this.mAmInternal.isBackgroundActivityStartsEnabled();
	boolean v58 = v59;
	Task v61 = RootWindowContainer.anyTaskForId(p3, 2);
	Task v60 = v61;
	LockTaskController v62 = this.mLockTaskController;
	boolean v64 = LockTaskController.isLockTaskModeViolation(v60, 0);
	boolean v63 = v64;
	ActivityOptions v66 = SafeActivityOptions.getOptions(0, 0, 0, this.mTaskSupervisor);
	ActivityOptions v65 = v66;
	Task v68 = v60.getRootTask();
	Binder.restoreCallingIdentity(v33);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setVrThread(I)V","0","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @6 exception:5,
7 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 8,7 @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 11,2,7,10 @21 exception:12,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:19,
return,","depth : 0
public void setVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = Binder.getCallingPid();
	WindowProcessController v4 = this.mProcessMap.getProcess(v3);
	this.mVrController.setVrThreadLocked(p1, v3, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void setVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = Binder.getCallingPid();
	WindowProcessController v4 = this.mProcessMap.getProcess(v3);
	this.mVrController.setVrThreadLocked(p1, v3, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","setVrThread(I)V","1","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @6 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
7 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 8,7 @15 exception:9,
3 = getfield < Application, Lcom/android/server/wm/WindowProcessControllerMap, mPidMap, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>5 <Application,Lcom/android/server/wm/WindowProcessController>,
return 6,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 11,2,7,10 @21 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
30 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,28 @10 exception:29,
return,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = Binder.getCallingPid();
	WindowProcessController v4 = this.mProcessMap.getProcess(v3);
	this.mVrController.setVrThreadLocked(p1, v3, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceSystemHasVrFeature(){
	PackageManager v1 = this.mContext.getPackageManager();
	boolean v2 = v1.hasSystemFeature(""android.hardware.vr.high_performance"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public WindowProcessController getProcess(int p1){
	Object v1 = this.mPidMap.get(p1);
	return v1;
}
-----
depth : 1
public void setVrThreadLocked(int p1, int p2, WindowProcessController p3){
	boolean v1 = p0.hasPersistentVrFlagSet();
	int v2 = Slog.w(""VrController"", ""VR thread cannot be set in persistent VR mode!"");
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setVrThread(int p1){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.vr.high_performance"");
	this.sThreadPriorityBooster.boost();
	int v6 = Binder.getCallingPid();
	Object v8 = this.mPidMap.get(v6);
	WindowProcessController v7 = v8;
	boolean v10 = VrController.hasPersistentVrFlagSet();
	this.sThreadPriorityBooster.reset();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","setVrThread(I)V","2","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @6 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 8,7 @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 11,2,7,10 @21 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/wm/VrController, mVrState, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 6,8,
30 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,28 @10 exception:29,
return,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = Binder.getCallingPid();
	WindowProcessController v4 = this.mProcessMap.getProcess(v3);
	this.mVrController.setVrThreadLocked(p1, v3, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceSystemHasVrFeature(){
	PackageManager v1 = this.mContext.getPackageManager();
	boolean v2 = v1.hasSystemFeature(""android.hardware.vr.high_performance"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setVrThreadLocked(int p1, int p2, WindowProcessController p3){
	boolean v1 = p0.hasPersistentVrFlagSet();
	int v2 = Slog.w(""VrController"", ""VR thread cannot be set in persistent VR mode!"");
	return;
}
-----
depth : 2
public boolean hasPersistentVrFlagSet(){
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setVrThread(int p1){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.vr.high_performance"");
	int v7 = Binder.getCallingPid();
	WindowProcessController v8 = this.mProcessMap.getProcess(v7);
	boolean v10 = phiInstruction;
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","setVrThread(I)V","2","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @6 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
7 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 8,7 @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 11,2,7,10 @21 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/wm/VrController, mVrState, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 6,8,
30 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,28 @10 exception:29,
return,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = Binder.getCallingPid();
	WindowProcessController v4 = this.mProcessMap.getProcess(v3);
	this.mVrController.setVrThreadLocked(p1, v3, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceSystemHasVrFeature(){
	PackageManager v1 = this.mContext.getPackageManager();
	boolean v2 = v1.hasSystemFeature(""android.hardware.vr.high_performance"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void setVrThreadLocked(int p1, int p2, WindowProcessController p3){
	boolean v1 = p0.hasPersistentVrFlagSet();
	int v2 = Slog.w(""VrController"", ""VR thread cannot be set in persistent VR mode!"");
	return;
}
-----
depth : 2
public boolean hasPersistentVrFlagSet(){
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setVrThread(int p1){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.vr.high_performance"");
	WindowManagerThreadPriorityBooster.boost();
	int v8 = Binder.getCallingPid();
	WindowProcessController v9 = this.mProcessMap.getProcess(v8);
	boolean v11 = phiInstruction;
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","setVrThread(I)V","2","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @6 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 8,7 @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 11,2,7,10 @21 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/wm/VrController, mVrState, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 6,8,
30 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,28 @10 exception:29,
return,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void setVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = Binder.getCallingPid();
	WindowProcessController v4 = this.mProcessMap.getProcess(v3);
	this.mVrController.setVrThreadLocked(p1, v3, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceSystemHasVrFeature(){
	PackageManager v1 = this.mContext.getPackageManager();
	boolean v2 = v1.hasSystemFeature(""android.hardware.vr.high_performance"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setVrThreadLocked(int p1, int p2, WindowProcessController p3){
	boolean v1 = p0.hasPersistentVrFlagSet();
	int v2 = Slog.w(""VrController"", ""VR thread cannot be set in persistent VR mode!"");
	return;
}
-----
depth : 2
public boolean hasPersistentVrFlagSet(){
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setVrThread(int p1){
	PackageManager v2 = this.mContext.getPackageManager();
	boolean v3 = v2.hasSystemFeature(""android.hardware.vr.high_performance"");
	int v7 = Binder.getCallingPid();
	WindowProcessController v8 = this.mProcessMap.getProcess(v7);
	boolean v10 = phiInstruction;
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskFeatures(II)V","0","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/lang/Integer, toHexString(I)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskFeatures(II)V > 35,2,3 @64 exception:36,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
return,","depth : 0
public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Integer.toHexString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, -168799453, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskFeatures(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Integer.toHexString(p2);
	String v5 = String.valueOf(v4);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, -168799453, 1, 0, v6);
	LockTaskController v9 = p0.getLockTaskController();
	v9.updateLockTaskFeatures(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskFeatures(II)V","1","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/lang/Integer, toHexString(I)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskFeatures(II)V > 35,2,3 @64 exception:36,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskFeaturesForUser(I)I > 1,2 @0 exception:4,
conditional branch(ne, to iindex=-1) 3,5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskFeatures, <Application,Landroid/util/SparseIntArray> > 1,
invokevirtual < Application, Landroid/util/SparseIntArray, put(II)V > 6,2,3 @9 exception:7,
8 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
14 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 12,11 @23 exception:13,
15 = checkcast <Application,Lcom/android/server/wm/Task>14 <Application,Lcom/android/server/wm/Task>,
16 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 15,
conditional branch(ne, to iindex=-1) 2,16,
17 = getfield < Application, Lcom/android/server/wm/LockTaskController, mHandler, <Application,Landroid/os/Handler> > 1,
18 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1>@35,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/LockTaskController;I)V > 18,1,2 @37 exception:19,
21 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 17,18 @40 exception:20,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Integer.toHexString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, -168799453, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskFeatures(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 1
public void updateLockTaskFeatures(int p1, int p2){
	int v1 = p0.getLockTaskFeaturesForUser(p1);
	this.mLockTaskFeatures.put(p1, p2);
	boolean v3 = this.mLockTaskModeTasks.isEmpty();
	Object v4 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v4 = new LockTaskController$$ExternalSyntheticLambda1(p0,p1);
	boolean v6 = this.mHandler.post(v4);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void updateLockTaskFeatures(int p1, int p2){
	this.sThreadPriorityBooster.boost();
	String v5 = Integer.toHexString(p2);
	String v6 = String.valueOf(v5);
	Object v7 = new Object(2);
	Long v8 = Long.valueOf(p1);
	ProtoLogImpl v10 = ProtoLogImpl.getSingleInstance();
	v10.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, -168799453, 1, 0, v7);
	LockTaskController v12 = this.mLockTaskController;
	int v14 = LockTaskController.getLockTaskFeaturesForUser(p1);
	this.mLockTaskFeatures.put(p1, p2);
	boolean v16 = this.mLockTaskModeTasks.isEmpty();
	Object v17 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v18 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
	boolean v20 = this.mHandler.post(v18);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskFeatures(II)V","1","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/lang/Integer, toHexString(I)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskFeatures(II)V > 35,2,3 @64 exception:36,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskFeaturesForUser(I)I > 1,2 @0 exception:4,
conditional branch(ne, to iindex=-1) 3,5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskFeatures, <Application,Landroid/util/SparseIntArray> > 1,
invokevirtual < Application, Landroid/util/SparseIntArray, put(II)V > 6,2,3 @9 exception:7,
8 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
14 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 12,11 @23 exception:13,
15 = checkcast <Application,Lcom/android/server/wm/Task>14 <Application,Lcom/android/server/wm/Task>,
16 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 15,
conditional branch(ne, to iindex=-1) 2,16,
17 = getfield < Application, Lcom/android/server/wm/LockTaskController, mHandler, <Application,Landroid/os/Handler> > 1,
18 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1>@35,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/LockTaskController;I)V > 18,1,2 @37 exception:19,
21 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 17,18 @40 exception:20,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v3 = Integer.toHexString(p2);
	String v4 = String.valueOf(v3);
	Object v4 = new Object(2);
	Long v5 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, -168799453, 1, 0, v4);
	LockTaskController v7 = p0.getLockTaskController();
	v7.updateLockTaskFeatures(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 1
public void updateLockTaskFeatures(int p1, int p2){
	int v1 = p0.getLockTaskFeaturesForUser(p1);
	this.mLockTaskFeatures.put(p1, p2);
	boolean v3 = this.mLockTaskModeTasks.isEmpty();
	Object v4 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v4 = new LockTaskController$$ExternalSyntheticLambda1(p0,p1);
	boolean v6 = this.mHandler.post(v4);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void updateLockTaskFeatures(int p1, int p2){
	this.sThreadPriorityBooster.boost();
	String v4 = Integer.toHexString(p2);
	String v5 = String.valueOf(v4);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p1);
	ProtoLogImpl v9 = ProtoLogImpl.getSingleInstance();
	v9.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, -168799453, 1, 0, v6);
	LockTaskController v11 = this.mLockTaskController;
	int v13 = LockTaskController.getLockTaskFeaturesForUser(p1);
	this.mLockTaskFeatures.put(p1, p2);
	boolean v15 = this.mLockTaskModeTasks.isEmpty();
	Object v16 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v17 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
	boolean v19 = this.mHandler.post(v17);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskFeatures(II)V","2","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/lang/Integer, toHexString(I)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskFeatures(II)V > 35,2,3 @64 exception:36,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskFeaturesForUser(I)I > 1,2 @0 exception:4,
3 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskFeatures, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, get(II)I > 3,2,4 @3 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 3,5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskFeatures, <Application,Landroid/util/SparseIntArray> > 1,
invokevirtual < Application, Landroid/util/SparseIntArray, put(II)V > 6,2,3 @9 exception:7,
8 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
14 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 12,11 @23 exception:13,
15 = checkcast <Application,Lcom/android/server/wm/Task>14 <Application,Lcom/android/server/wm/Task>,
16 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 15,
conditional branch(ne, to iindex=-1) 2,16,
17 = getfield < Application, Lcom/android/server/wm/LockTaskController, mHandler, <Application,Landroid/os/Handler> > 1,
18 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1>@35,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/LockTaskController;I)V > 18,1,2 @37 exception:19,
21 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 17,18 @40 exception:20,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Integer.toHexString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, -168799453, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskFeatures(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void updateLockTaskFeatures(int p1, int p2){
	int v1 = p0.getLockTaskFeaturesForUser(p1);
	this.mLockTaskFeatures.put(p1, p2);
	boolean v3 = this.mLockTaskModeTasks.isEmpty();
	Object v4 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v4 = new LockTaskController$$ExternalSyntheticLambda1(p0,p1);
	boolean v6 = this.mHandler.post(v4);
	return;
}
-----
depth : 2
public int getLockTaskFeaturesForUser(int p1){
	int v1 = this.mLockTaskFeatures.get(p1, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void updateLockTaskFeatures(int p1, int p2){
	String v6 = Integer.toHexString(p2);
	String v7 = String.valueOf(v6);
	Object v8 = new Object(2);
	Long v9 = Long.valueOf(p1);
	ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
	File v13 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v12;
	ProtoLogImpl v11 = this.sServiceInstance;
	boolean v19 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v21 = p1.isLogToLogcat();
	String v22 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v24 = p0.getLockTaskController();
	int v27 = this.mLockTaskFeatures.get(p1, 0);
	int v26 = v27;
	this.mLockTaskFeatures.put(p1, p2);
	boolean v29 = this.mLockTaskModeTasks.isEmpty();
	Object v30 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v31 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
	boolean v33 = this.mHandler.post(v31);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskFeatures(II)V","2","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/lang/Integer, toHexString(I)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskFeatures(II)V > 35,2,3 @64 exception:36,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskFeaturesForUser(I)I > 1,2 @0 exception:4,
3 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskFeatures, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, get(II)I > 3,2,4 @3 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 3,5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskFeatures, <Application,Landroid/util/SparseIntArray> > 1,
invokevirtual < Application, Landroid/util/SparseIntArray, put(II)V > 6,2,3 @9 exception:7,
8 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
14 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 12,11 @23 exception:13,
15 = checkcast <Application,Lcom/android/server/wm/Task>14 <Application,Lcom/android/server/wm/Task>,
16 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 15,
conditional branch(ne, to iindex=-1) 2,16,
17 = getfield < Application, Lcom/android/server/wm/LockTaskController, mHandler, <Application,Landroid/os/Handler> > 1,
18 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1>@35,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/LockTaskController;I)V > 18,1,2 @37 exception:19,
21 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 17,18 @40 exception:20,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Integer.toHexString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, -168799453, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskFeatures(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void updateLockTaskFeatures(int p1, int p2){
	int v1 = p0.getLockTaskFeaturesForUser(p1);
	this.mLockTaskFeatures.put(p1, p2);
	boolean v3 = this.mLockTaskModeTasks.isEmpty();
	Object v4 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v4 = new LockTaskController$$ExternalSyntheticLambda1(p0,p1);
	boolean v6 = this.mHandler.post(v4);
	return;
}
-----
depth : 2
public int getLockTaskFeaturesForUser(int p1){
	int v1 = this.mLockTaskFeatures.get(p1, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerThreadPriorityBooster.boost();
	String v7 = Integer.toHexString(p2);
	String v8 = String.valueOf(v7);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p1);
	ProtoLogImpl v13 = new ProtoLogImpl(v14,1048576,v16);
	File v14 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v16 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v13;
	ProtoLogImpl v12 = this.sServiceInstance;
	boolean v20 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v22 = p1.isLogToLogcat();
	String v23 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v23, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v25 = p0.getLockTaskController();
	int v28 = this.mLockTaskFeatures.get(p1, 0);
	int v27 = v28;
	this.mLockTaskFeatures.put(p1, p2);
	boolean v30 = this.mLockTaskModeTasks.isEmpty();
	Object v31 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v32 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
	boolean v34 = this.mHandler.post(v32);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskFeatures(II)V","2","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/lang/Integer, toHexString(I)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskFeatures(II)V > 35,2,3 @64 exception:36,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskFeaturesForUser(I)I > 1,2 @0 exception:4,
3 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskFeatures, <Application,Landroid/util/SparseIntArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, get(II)I > 3,2,4 @3 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 3,5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskFeatures, <Application,Landroid/util/SparseIntArray> > 1,
invokevirtual < Application, Landroid/util/SparseIntArray, put(II)V > 6,2,3 @9 exception:7,
8 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
14 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 12,11 @23 exception:13,
15 = checkcast <Application,Lcom/android/server/wm/Task>14 <Application,Lcom/android/server/wm/Task>,
16 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 15,
conditional branch(ne, to iindex=-1) 2,16,
17 = getfield < Application, Lcom/android/server/wm/LockTaskController, mHandler, <Application,Landroid/os/Handler> > 1,
18 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1>@35,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/LockTaskController;I)V > 18,1,2 @37 exception:19,
21 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 17,18 @40 exception:20,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void updateLockTaskFeatures(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Integer.toHexString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, -168799453, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskFeatures(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void updateLockTaskFeatures(int p1, int p2){
	int v1 = p0.getLockTaskFeaturesForUser(p1);
	this.mLockTaskFeatures.put(p1, p2);
	boolean v3 = this.mLockTaskModeTasks.isEmpty();
	Object v4 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v4 = new LockTaskController$$ExternalSyntheticLambda1(p0,p1);
	boolean v6 = this.mHandler.post(v4);
	return;
}
-----
depth : 2
public int getLockTaskFeaturesForUser(int p1){
	int v1 = this.mLockTaskFeatures.get(p1, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void updateLockTaskFeatures(int p1, int p2){
	String v6 = Integer.toHexString(p2);
	String v7 = String.valueOf(v6);
	Object v8 = new Object(2);
	Long v9 = Long.valueOf(p1);
	ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
	File v13 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v12;
	ProtoLogImpl v11 = this.sServiceInstance;
	boolean v19 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v21 = p1.isLogToLogcat();
	String v22 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v24 = p0.getLockTaskController();
	int v27 = this.mLockTaskFeatures.get(p1, 0);
	int v26 = v27;
	this.mLockTaskFeatures.put(p1, p2);
	boolean v29 = this.mLockTaskModeTasks.isEmpty();
	Object v30 = this.mLockTaskModeTasks.get(0);
	LockTaskController$$ExternalSyntheticLambda1 v31 = new LockTaskController$$ExternalSyntheticLambda1(LockTaskController,p1);
	boolean v33 = this.mHandler.post(v31);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"


"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfos()Ljava/util/List;","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 8,9 @18 exception:10,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @26 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfos(){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfos()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(-1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
","public List getAllRootTaskInfos(){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfos()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(-1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfos()Ljava/util/List;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 8,9 @18 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
return 3,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @26 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfos(){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfos()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(-1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public List getAllRootTaskInfos(){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	ArrayList v9 = new ArrayList();
	DisplayContent v11 = RootWindowContainer.getDisplayContent(-1);
	RootWindowContainer$$ExternalSyntheticLambda12 v12 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v9);
	v11.forAllRootTasks(v12);
	ArrayList v8 = v9;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfos()Ljava/util/List;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 8,9 @18 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
return 3,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @26 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfos(){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfos()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(-1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public List getAllRootTaskInfos(){
	long v3 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	ArrayList v7 = new ArrayList();
	DisplayContent v9 = RootWindowContainer.getDisplayContent(-1);
	RootWindowContainer$$ExternalSyntheticLambda12 v10 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v7);
	v9.forAllRootTasks(v10);
	ArrayList v6 = v7;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfos()Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 8,9 @18 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;Z)V > 1,2,3 @1 exception:4,
return,
return 3,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @26 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfos(){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfos()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(-1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 2
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public void forAllRootTasks(Consumer p1){
	p0.forAllRootTasks(p1, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public List getAllRootTaskInfos(){
	long v5 = Binder.clearCallingIdentity();
	ArrayList v10 = new ArrayList();
	int v13 = RootWindowContainer.getChildCount();
	DisplayContent v12 = 0;
	RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10);
	WindowContainer.forAllRootTasks(v14, 1);
	ArrayList v9 = v10;
	Binder.restoreCallingIdentity(v5);
	return v9;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfos()Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 8,9 @18 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;Z)V > 1,2,3 @1 exception:4,
return,
return 3,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @26 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfos(){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfos()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(-1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 2
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public void forAllRootTasks(Consumer p1){
	p0.forAllRootTasks(p1, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public List getAllRootTaskInfos(){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	ArrayList v11 = new ArrayList();
	int v14 = RootWindowContainer.getChildCount();
	DisplayContent v13 = 0;
	RootWindowContainer$$ExternalSyntheticLambda12 v15 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v11);
	WindowContainer.forAllRootTasks(v15, 1);
	ArrayList v10 = v11;
	Binder.restoreCallingIdentity(v5);
	return v10;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfos()Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 8,9 @18 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;Z)V > 1,2,3 @1 exception:4,
return,
return 3,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @26 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfos(){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfos()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(-1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 2
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public void forAllRootTasks(Consumer p1){
	p0.forAllRootTasks(p1, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public List getAllRootTaskInfos(){
	long v5 = Binder.clearCallingIdentity();
	ArrayList v10 = new ArrayList();
	int v13 = RootWindowContainer.getChildCount();
	DisplayContent v12 = 0;
	RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10);
	WindowContainer.forAllRootTasks(v14, 1);
	ArrayList v9 = v10;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v9;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V","0","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 10,2,11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopWaitSplashScreenActivity()Lcom/android/server/wm/ActivityRecord; > 13 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,11,
invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, onCopySplashScreenFinish(Landroid/window/SplashScreenView$SplashScreenViewParcelable;)V > 15,3 @30 exception:16,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:26,
return,","depth : 0
public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v4 = v3.getTopWaitSplashScreenActivity();
	v4.onCopySplashScreenFinish(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v4 = v3.getTopWaitSplashScreenActivity();
	v4.onCopySplashScreenFinish(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 10,2,11 @18 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopWaitSplashScreenActivity()Lcom/android/server/wm/ActivityRecord; > 13 @24 exception:14,
2 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda8>@0,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda8, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,2 @5 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 15,11,
invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, onCopySplashScreenFinish(Landroid/window/SplashScreenView$SplashScreenViewParcelable;)V > 15,3 @30 exception:16,
invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, removeTransferSplashScreenTimeout()V > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mStartingWindow, <Application,Lcom/android/server/wm/WindowState> > 1,
conditional branch(eq, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowState, mRemoved, <Primordial,Z> > 8,
conditional branch(ne, to iindex=-1) 9,5,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, finishing, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 10,5,
12 = invokestatic < Application, Lcom/android/server/wm/TaskOrganizerController, applyStartingWindowAnimation(Lcom/android/server/wm/WindowState;)Landroid/view/SurfaceControl; > 8 @24 exception:11,
putfield 1.< Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > = 13,
14 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLifecycleManager()Lcom/android/server/wm/ClientLifecycleManager; > 14 @33 exception:15,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
30 = new <Application,Ljava/lang/StringBuilder>@56,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @58 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @63 exception:33,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 30,1 @66 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @69 exception:37,
41 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 39,38 @75 exception:40,
42 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mStartingWindow, <Application,Lcom/android/server/wm/WindowState> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, cancelAnimation()V > 42 @80 exception:43,
invokevirtual < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, clearIfNeeded()V > 2 @83 exception:44,
putfield 1.< Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > = 4,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:26,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v4 = v3.getTopWaitSplashScreenActivity();
	v4.onCopySplashScreenFinish(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public ActivityRecord getTopWaitSplashScreenActivity(){
	Task$$ExternalSyntheticLambda8 v0 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v2 = p0.getActivity(v0);
	return v2;
}
-----
depth : 1
public void onCopySplashScreenFinish(SplashScreenView$SplashScreenViewParcelable p1){
	p0.removeTransferSplashScreenTimeout();
	SurfaceControl v2 = TaskOrganizerController.applyStartingWindowAnimation(this.mStartingWindow);
	this.mTransferringSplashScreenState = 2;
	ClientLifecycleManager v3 = this.mAtmService.getLifecycleManager();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""onCopySplashScreenComplete fail: "");
	StringBuilder v6 = v3.append(p0);
	String v7 = v3.toString();
	int v8 = Slog.w(""ActivityTaskManager"", v7);
	this.mStartingWindow.cancelAnimation();
	p1.clearIfNeeded();
	this.mTransferringSplashScreenState = 3;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	this.sThreadPriorityBooster.boost();
	Task v5 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v4 = v5;
	Task$$ExternalSyntheticLambda8 v7 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v9 = Task.getActivity(v7);
	ActivityRecord v6 = v9;
	ActivityRecord.removeTransferSplashScreenTimeout();
	SurfaceControl v12 = TaskOrganizerController.applyStartingWindowAnimation(this.mStartingWindow);
	this.mTransferringSplashScreenState = 2;
	ClientLifecycleManager v13 = this.mAtmService.getLifecycleManager();
	this.mStartingWindow.cancelAnimation();
	p2.clearIfNeeded();
	this.mTransferringSplashScreenState = 3;
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 10,2,11 @18 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopWaitSplashScreenActivity()Lcom/android/server/wm/ActivityRecord; > 13 @24 exception:14,
2 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda8>@0,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda8, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,2 @5 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 15,11,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:26,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v4 = v3.getTopWaitSplashScreenActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public ActivityRecord getTopWaitSplashScreenActivity(){
	Task$$ExternalSyntheticLambda8 v0 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v2 = p0.getActivity(v0);
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	this.sThreadPriorityBooster.boost();
	Task v5 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v4 = v5;
	Task$$ExternalSyntheticLambda8 v7 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v9 = Task.getActivity(v7);
	ActivityRecord v6 = v9;
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 10,2,11 @18 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(eq, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopWaitSplashScreenActivity()Lcom/android/server/wm/ActivityRecord; > 13 @24 exception:14,
2 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda8>@0,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda8, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,2 @5 exception:4,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 5,
conditional branch(eq, to iindex=-1) 15,11,
invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, onCopySplashScreenFinish(Landroid/window/SplashScreenView$SplashScreenViewParcelable;)V > 15,3 @30 exception:16,
invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, removeTransferSplashScreenTimeout()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mTransferSplashScreenTimeoutRunnable, <Application,Ljava/lang/Runnable> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 3,4 @6 exception:5,
return,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mStartingWindow, <Application,Lcom/android/server/wm/WindowState> > 1,
conditional branch(eq, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowState, mRemoved, <Primordial,Z> > 8,
conditional branch(ne, to iindex=-1) 9,5,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, finishing, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 10,5,
12 = invokestatic < Application, Lcom/android/server/wm/TaskOrganizerController, applyStartingWindowAnimation(Lcom/android/server/wm/WindowState;)Landroid/view/SurfaceControl; > 8 @24 exception:11,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getPendingTransaction()Landroid/view/SurfaceControl$Transaction; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getRelativeFrame()Landroid/graphics/Rect; > 1 @4 exception:4,
6 = new <Application,Lcom/android/server/wm/TaskOrganizerController$StartingWindowAnimationAdaptor>@8,
invokespecial < Application, Lcom/android/server/wm/TaskOrganizerController$StartingWindowAnimationAdaptor, <init>()V > 6 @10 exception:7,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, startAnimation(Landroid/view/SurfaceControl$Transaction;Lcom/android/server/wm/AnimationAdapter;ZI)V > 1,3,6,8,9 @16 exception:10,
11 = getfield < Application, Lcom/android/server/wm/TaskOrganizerController$StartingWindowAnimationAdaptor, mAnimationLeash, <Application,Landroid/view/SurfaceControl> > 6,
conditional branch(ne, to iindex=-1) 11,8,
19 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 19 @25 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,21 @30 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 19,1 @33 exception:24,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,26 @38 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 19 @41 exception:29,
33 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 31,30 @47 exception:32,
return 8,
putfield 1.< Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > = 13,
14 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLifecycleManager()Lcom/android/server/wm/ClientLifecycleManager; > 14 @33 exception:15,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLifecycleManager, <Application,Lcom/android/server/wm/ClientLifecycleManager> > 1,
return 2,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
30 = new <Application,Ljava/lang/StringBuilder>@56,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @58 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @63 exception:33,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 30,1 @66 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @69 exception:37,
41 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 39,38 @75 exception:40,
42 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mStartingWindow, <Application,Lcom/android/server/wm/WindowState> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, cancelAnimation()V > 42 @80 exception:43,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceAnimator, <Application,Lcom/android/server/wm/SurfaceAnimator> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/SurfaceAnimator, getAnimationType()I > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceAnimator, <Application,Lcom/android/server/wm/SurfaceAnimator> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/SurfaceAnimator, getAnimation()Lcom/android/server/wm/AnimationAdapter; > 5 @8 exception:6,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, doAnimationFinished(ILcom/android/server/wm/AnimationAdapter;)V > 1,4,7 @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceAnimator, <Application,Lcom/android/server/wm/SurfaceAnimator> > 1,
invokevirtual < Application, Lcom/android/server/wm/SurfaceAnimator, cancelAnimation()V > 9 @17 exception:10,
11 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceFreezer, <Application,Lcom/android/server/wm/SurfaceFreezer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getSyncTransaction()Landroid/view/SurfaceControl$Transaction; > 1 @22 exception:12,
invokevirtual < Application, Lcom/android/server/wm/SurfaceFreezer, unfreeze(Landroid/view/SurfaceControl$Transaction;)V > 11,13 @26 exception:14,
return,
invokevirtual < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, clearIfNeeded()V > 2 @83 exception:44,
2 = getfield < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mIconBitmap, <Application,Landroid/graphics/Bitmap> > 1,
conditional branch(eq, to iindex=-1) 2,3,
invokevirtual < Application, Landroid/graphics/Bitmap, recycle()V > 2 @5 exception:4,
putfield 1.< Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mIconBitmap, <Application,Landroid/graphics/Bitmap> > = 3,
5 = getfield < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mBrandingBitmap, <Application,Landroid/graphics/Bitmap> > 1,
conditional branch(eq, to iindex=-1) 5,3,
invokevirtual < Application, Landroid/graphics/Bitmap, recycle()V > 5 @14 exception:6,
putfield 1.< Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mBrandingBitmap, <Application,Landroid/graphics/Bitmap> > = 3,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > = 4,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:26,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v4 = v3.getTopWaitSplashScreenActivity();
	v4.onCopySplashScreenFinish(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public ActivityRecord getTopWaitSplashScreenActivity(){
	Task$$ExternalSyntheticLambda8 v0 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v2 = p0.getActivity(v0);
	return v2;
}
-----
depth : 2
public ActivityRecord getActivity(Predicate p1){
	ActivityRecord v1 = p0.getActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void onCopySplashScreenFinish(SplashScreenView$SplashScreenViewParcelable p1){
	p0.removeTransferSplashScreenTimeout();
	SurfaceControl v2 = TaskOrganizerController.applyStartingWindowAnimation(this.mStartingWindow);
	this.mTransferringSplashScreenState = 2;
	ClientLifecycleManager v3 = this.mAtmService.getLifecycleManager();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""onCopySplashScreenComplete fail: "");
	StringBuilder v6 = v3.append(p0);
	String v7 = v3.toString();
	int v8 = Slog.w(""ActivityTaskManager"", v7);
	this.mStartingWindow.cancelAnimation();
	p1.clearIfNeeded();
	this.mTransferringSplashScreenState = 3;
	return;
}
-----
depth : 2
public void removeTransferSplashScreenTimeout(){
	ActivityTaskManagerService.mH.removeCallbacks(this.mTransferSplashScreenTimeoutRunnable);
	return;
}
-----
depth : 2
public SurfaceControl applyStartingWindowAnimation(WindowState p1){
	SurfaceControl$Transaction v1 = p1.getPendingTransaction();
	Rect v2 = p1.getRelativeFrame();
	TaskOrganizerController$StartingWindowAnimationAdaptor v2 = new TaskOrganizerController$StartingWindowAnimationAdaptor();
	p1.startAnimation(v1, v2, 0, 128);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Cannot start starting window animation, the window "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" was removed"");
	String v9 = v4.toString();
	int v10 = Slog.e(""TaskOrganizerController"", v9);
	return 0;
}
-----
depth : 2
public ClientLifecycleManager getLifecycleManager(){
	return this.mLifecycleManager;
}
-----
depth : 2
public void cancelAnimation(){
	int v1 = this.mSurfaceAnimator.getAnimationType();
	AnimationAdapter v2 = this.mSurfaceAnimator.getAnimation();
	p0.doAnimationFinished(v1, v2);
	this.mSurfaceAnimator.cancelAnimation();
	SurfaceControl$Transaction v5 = p0.getSyncTransaction();
	this.mSurfaceFreezer.unfreeze(v5);
	return;
}
-----
depth : 2
public void clearIfNeeded(){
	this.mIconBitmap.recycle();
	this.mIconBitmap = 0;
	this.mBrandingBitmap.recycle();
	this.mBrandingBitmap = 0;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v9 = PooledLambda.__(Tas.class);
	Integer v10 = Integer.valueOf(p1);
	PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10);
	Task v12 = RootWindowContainer.getTask(v11);
	v11.recycle();
	Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0);
	Task v15 = v12.getRootTask();
	boolean v16 = v12.reparent(v14, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v6 = v12;
	Task v5 = v6;
	Task$$ExternalSyntheticLambda8 v18 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v21 = WindowContainer.getActivity(v18, 1);
	ActivityRecord v20 = v21;
	ActivityRecord v17 = v20;
	ActivityTaskManagerService.mH.removeCallbacks(this.mTransferSplashScreenTimeoutRunnable);
	SurfaceControl$Transaction v26 = this.mStartingWindow.getPendingTransaction();
	Rect v27 = this.mStartingWindow.getRelativeFrame();
	TaskOrganizerController$StartingWindowAnimationAdaptor v28 = new TaskOrganizerController$StartingWindowAnimationAdaptor();
	this.mStartingWindow.startAnimation(v26, v28, 0, 128);
	SurfaceControl v25 = 0;
	this.mTransferringSplashScreenState = 2;
	ClientLifecycleManager v38 = this.mLifecycleManager;
	int v46 = this.mSurfaceAnimator.getAnimationType();
	AnimationAdapter v47 = this.mSurfaceAnimator.getAnimation();
	WindowContainer.doAnimationFinished(v46, v47);
	this.mSurfaceAnimator.cancelAnimation();
	SurfaceControl$Transaction v50 = WindowContainer.getSyncTransaction();
	this.mSurfaceFreezer.unfreeze(v50);
	this.mIconBitmap.recycle();
	this.mIconBitmap = 0;
	this.mBrandingBitmap.recycle();
	this.mBrandingBitmap = 0;
	this.mTransferringSplashScreenState = 3;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 10,2,11 @18 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(eq, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopWaitSplashScreenActivity()Lcom/android/server/wm/ActivityRecord; > 13 @24 exception:14,
2 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda8>@0,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda8, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,2 @5 exception:4,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 5,
conditional branch(eq, to iindex=-1) 15,11,
invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, onCopySplashScreenFinish(Landroid/window/SplashScreenView$SplashScreenViewParcelable;)V > 15,3 @30 exception:16,
invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, removeTransferSplashScreenTimeout()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mTransferSplashScreenTimeoutRunnable, <Application,Ljava/lang/Runnable> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 3,4 @6 exception:5,
return,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mStartingWindow, <Application,Lcom/android/server/wm/WindowState> > 1,
conditional branch(eq, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowState, mRemoved, <Primordial,Z> > 8,
conditional branch(ne, to iindex=-1) 9,5,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, finishing, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 10,5,
12 = invokestatic < Application, Lcom/android/server/wm/TaskOrganizerController, applyStartingWindowAnimation(Lcom/android/server/wm/WindowState;)Landroid/view/SurfaceControl; > 8 @24 exception:11,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getPendingTransaction()Landroid/view/SurfaceControl$Transaction; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getRelativeFrame()Landroid/graphics/Rect; > 1 @4 exception:4,
6 = new <Application,Lcom/android/server/wm/TaskOrganizerController$StartingWindowAnimationAdaptor>@8,
invokespecial < Application, Lcom/android/server/wm/TaskOrganizerController$StartingWindowAnimationAdaptor, <init>()V > 6 @10 exception:7,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, startAnimation(Landroid/view/SurfaceControl$Transaction;Lcom/android/server/wm/AnimationAdapter;ZI)V > 1,3,6,8,9 @16 exception:10,
11 = getfield < Application, Lcom/android/server/wm/TaskOrganizerController$StartingWindowAnimationAdaptor, mAnimationLeash, <Application,Landroid/view/SurfaceControl> > 6,
conditional branch(ne, to iindex=-1) 11,8,
19 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 19 @25 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,21 @30 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 19,1 @33 exception:24,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,26 @38 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 19 @41 exception:29,
33 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 31,30 @47 exception:32,
return 8,
putfield 1.< Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > = 13,
14 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLifecycleManager()Lcom/android/server/wm/ClientLifecycleManager; > 14 @33 exception:15,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLifecycleManager, <Application,Lcom/android/server/wm/ClientLifecycleManager> > 1,
return 2,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
30 = new <Application,Ljava/lang/StringBuilder>@56,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @58 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @63 exception:33,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 30,1 @66 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @69 exception:37,
41 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 39,38 @75 exception:40,
42 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mStartingWindow, <Application,Lcom/android/server/wm/WindowState> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, cancelAnimation()V > 42 @80 exception:43,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceAnimator, <Application,Lcom/android/server/wm/SurfaceAnimator> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/SurfaceAnimator, getAnimationType()I > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceAnimator, <Application,Lcom/android/server/wm/SurfaceAnimator> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/SurfaceAnimator, getAnimation()Lcom/android/server/wm/AnimationAdapter; > 5 @8 exception:6,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, doAnimationFinished(ILcom/android/server/wm/AnimationAdapter;)V > 1,4,7 @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceAnimator, <Application,Lcom/android/server/wm/SurfaceAnimator> > 1,
invokevirtual < Application, Lcom/android/server/wm/SurfaceAnimator, cancelAnimation()V > 9 @17 exception:10,
11 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceFreezer, <Application,Lcom/android/server/wm/SurfaceFreezer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getSyncTransaction()Landroid/view/SurfaceControl$Transaction; > 1 @22 exception:12,
invokevirtual < Application, Lcom/android/server/wm/SurfaceFreezer, unfreeze(Landroid/view/SurfaceControl$Transaction;)V > 11,13 @26 exception:14,
return,
invokevirtual < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, clearIfNeeded()V > 2 @83 exception:44,
2 = getfield < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mIconBitmap, <Application,Landroid/graphics/Bitmap> > 1,
conditional branch(eq, to iindex=-1) 2,3,
invokevirtual < Application, Landroid/graphics/Bitmap, recycle()V > 2 @5 exception:4,
putfield 1.< Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mIconBitmap, <Application,Landroid/graphics/Bitmap> > = 3,
5 = getfield < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mBrandingBitmap, <Application,Landroid/graphics/Bitmap> > 1,
conditional branch(eq, to iindex=-1) 5,3,
invokevirtual < Application, Landroid/graphics/Bitmap, recycle()V > 5 @14 exception:6,
putfield 1.< Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mBrandingBitmap, <Application,Landroid/graphics/Bitmap> > = 3,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > = 4,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:26,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v4 = v3.getTopWaitSplashScreenActivity();
	v4.onCopySplashScreenFinish(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public ActivityRecord getTopWaitSplashScreenActivity(){
	Task$$ExternalSyntheticLambda8 v0 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v2 = p0.getActivity(v0);
	return v2;
}
-----
depth : 2
public ActivityRecord getActivity(Predicate p1){
	ActivityRecord v1 = p0.getActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void onCopySplashScreenFinish(SplashScreenView$SplashScreenViewParcelable p1){
	p0.removeTransferSplashScreenTimeout();
	SurfaceControl v2 = TaskOrganizerController.applyStartingWindowAnimation(this.mStartingWindow);
	this.mTransferringSplashScreenState = 2;
	ClientLifecycleManager v3 = this.mAtmService.getLifecycleManager();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""onCopySplashScreenComplete fail: "");
	StringBuilder v6 = v3.append(p0);
	String v7 = v3.toString();
	int v8 = Slog.w(""ActivityTaskManager"", v7);
	this.mStartingWindow.cancelAnimation();
	p1.clearIfNeeded();
	this.mTransferringSplashScreenState = 3;
	return;
}
-----
depth : 2
public void removeTransferSplashScreenTimeout(){
	ActivityTaskManagerService.mH.removeCallbacks(this.mTransferSplashScreenTimeoutRunnable);
	return;
}
-----
depth : 2
public SurfaceControl applyStartingWindowAnimation(WindowState p1){
	SurfaceControl$Transaction v1 = p1.getPendingTransaction();
	Rect v2 = p1.getRelativeFrame();
	TaskOrganizerController$StartingWindowAnimationAdaptor v2 = new TaskOrganizerController$StartingWindowAnimationAdaptor();
	p1.startAnimation(v1, v2, 0, 128);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Cannot start starting window animation, the window "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" was removed"");
	String v9 = v4.toString();
	int v10 = Slog.e(""TaskOrganizerController"", v9);
	return 0;
}
-----
depth : 2
public ClientLifecycleManager getLifecycleManager(){
	return this.mLifecycleManager;
}
-----
depth : 2
public void cancelAnimation(){
	int v1 = this.mSurfaceAnimator.getAnimationType();
	AnimationAdapter v2 = this.mSurfaceAnimator.getAnimation();
	p0.doAnimationFinished(v1, v2);
	this.mSurfaceAnimator.cancelAnimation();
	SurfaceControl$Transaction v5 = p0.getSyncTransaction();
	this.mSurfaceFreezer.unfreeze(v5);
	return;
}
-----
depth : 2
public void clearIfNeeded(){
	this.mIconBitmap.recycle();
	this.mIconBitmap = 0;
	this.mBrandingBitmap.recycle();
	this.mBrandingBitmap = 0;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	WindowManagerThreadPriorityBooster.boost();
	AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	Integer v11 = Integer.valueOf(p1);
	PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
	Task v13 = RootWindowContainer.getTask(v12);
	v12.recycle();
	Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
	Task v16 = v13.getRootTask();
	boolean v17 = v13.reparent(v15, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v7 = v13;
	Task v6 = v7;
	Task$$ExternalSyntheticLambda8 v19 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v22 = WindowContainer.getActivity(v19, 1);
	ActivityRecord v21 = v22;
	ActivityRecord v18 = v21;
	ActivityTaskManagerService.mH.removeCallbacks(this.mTransferSplashScreenTimeoutRunnable);
	SurfaceControl$Transaction v27 = this.mStartingWindow.getPendingTransaction();
	Rect v28 = this.mStartingWindow.getRelativeFrame();
	TaskOrganizerController$StartingWindowAnimationAdaptor v29 = new TaskOrganizerController$StartingWindowAnimationAdaptor();
	this.mStartingWindow.startAnimation(v27, v29, 0, 128);
	SurfaceControl v26 = 0;
	this.mTransferringSplashScreenState = 2;
	ClientLifecycleManager v39 = this.mLifecycleManager;
	int v47 = this.mSurfaceAnimator.getAnimationType();
	AnimationAdapter v48 = this.mSurfaceAnimator.getAnimation();
	WindowContainer.doAnimationFinished(v47, v48);
	this.mSurfaceAnimator.cancelAnimation();
	SurfaceControl$Transaction v51 = WindowContainer.getSyncTransaction();
	this.mSurfaceFreezer.unfreeze(v51);
	this.mIconBitmap.recycle();
	this.mIconBitmap = 0;
	this.mBrandingBitmap.recycle();
	this.mBrandingBitmap = 0;
	this.mTransferringSplashScreenState = 3;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onSplashScreenViewCopyFinished(ILandroid/window/SplashScreenView$SplashScreenViewParcelable;)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 10,2,11 @18 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(eq, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopWaitSplashScreenActivity()Lcom/android/server/wm/ActivityRecord; > 13 @24 exception:14,
2 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda8>@0,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda8, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,2 @5 exception:4,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 5,
conditional branch(eq, to iindex=-1) 15,11,
invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, onCopySplashScreenFinish(Landroid/window/SplashScreenView$SplashScreenViewParcelable;)V > 15,3 @30 exception:16,
invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, removeTransferSplashScreenTimeout()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mTransferSplashScreenTimeoutRunnable, <Application,Ljava/lang/Runnable> > 1,
invokevirtual < Application, Landroid/os/Handler, removeCallbacks(Ljava/lang/Runnable;)V > 3,4 @6 exception:5,
return,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mStartingWindow, <Application,Lcom/android/server/wm/WindowState> > 1,
conditional branch(eq, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowState, mRemoved, <Primordial,Z> > 8,
conditional branch(ne, to iindex=-1) 9,5,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, finishing, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 10,5,
12 = invokestatic < Application, Lcom/android/server/wm/TaskOrganizerController, applyStartingWindowAnimation(Lcom/android/server/wm/WindowState;)Landroid/view/SurfaceControl; > 8 @24 exception:11,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getPendingTransaction()Landroid/view/SurfaceControl$Transaction; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getRelativeFrame()Landroid/graphics/Rect; > 1 @4 exception:4,
6 = new <Application,Lcom/android/server/wm/TaskOrganizerController$StartingWindowAnimationAdaptor>@8,
invokespecial < Application, Lcom/android/server/wm/TaskOrganizerController$StartingWindowAnimationAdaptor, <init>()V > 6 @10 exception:7,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, startAnimation(Landroid/view/SurfaceControl$Transaction;Lcom/android/server/wm/AnimationAdapter;ZI)V > 1,3,6,8,9 @16 exception:10,
11 = getfield < Application, Lcom/android/server/wm/TaskOrganizerController$StartingWindowAnimationAdaptor, mAnimationLeash, <Application,Landroid/view/SurfaceControl> > 6,
conditional branch(ne, to iindex=-1) 11,8,
19 = new <Application,Ljava/lang/StringBuilder>@23,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 19 @25 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,21 @30 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 19,1 @33 exception:24,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,26 @38 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 19 @41 exception:29,
33 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 31,30 @47 exception:32,
return 8,
putfield 1.< Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > = 13,
14 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLifecycleManager()Lcom/android/server/wm/ClientLifecycleManager; > 14 @33 exception:15,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLifecycleManager, <Application,Lcom/android/server/wm/ClientLifecycleManager> > 1,
return 2,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
30 = new <Application,Ljava/lang/StringBuilder>@56,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 30 @58 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 30,32 @63 exception:33,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 30,1 @66 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 30 @69 exception:37,
41 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 39,38 @75 exception:40,
42 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mStartingWindow, <Application,Lcom/android/server/wm/WindowState> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, cancelAnimation()V > 42 @80 exception:43,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceAnimator, <Application,Lcom/android/server/wm/SurfaceAnimator> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/SurfaceAnimator, getAnimationType()I > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceAnimator, <Application,Lcom/android/server/wm/SurfaceAnimator> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/SurfaceAnimator, getAnimation()Lcom/android/server/wm/AnimationAdapter; > 5 @8 exception:6,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, doAnimationFinished(ILcom/android/server/wm/AnimationAdapter;)V > 1,4,7 @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceAnimator, <Application,Lcom/android/server/wm/SurfaceAnimator> > 1,
invokevirtual < Application, Lcom/android/server/wm/SurfaceAnimator, cancelAnimation()V > 9 @17 exception:10,
11 = getfield < Application, Lcom/android/server/wm/WindowContainer, mSurfaceFreezer, <Application,Lcom/android/server/wm/SurfaceFreezer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getSyncTransaction()Landroid/view/SurfaceControl$Transaction; > 1 @22 exception:12,
invokevirtual < Application, Lcom/android/server/wm/SurfaceFreezer, unfreeze(Landroid/view/SurfaceControl$Transaction;)V > 11,13 @26 exception:14,
return,
invokevirtual < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, clearIfNeeded()V > 2 @83 exception:44,
2 = getfield < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mIconBitmap, <Application,Landroid/graphics/Bitmap> > 1,
conditional branch(eq, to iindex=-1) 2,3,
invokevirtual < Application, Landroid/graphics/Bitmap, recycle()V > 2 @5 exception:4,
putfield 1.< Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mIconBitmap, <Application,Landroid/graphics/Bitmap> > = 3,
5 = getfield < Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mBrandingBitmap, <Application,Landroid/graphics/Bitmap> > 1,
conditional branch(eq, to iindex=-1) 5,3,
invokevirtual < Application, Landroid/graphics/Bitmap, recycle()V > 5 @14 exception:6,
putfield 1.< Application, Landroid/window/SplashScreenView$SplashScreenViewParcelable, mBrandingBitmap, <Application,Landroid/graphics/Bitmap> > = 3,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityRecord, mTransferringSplashScreenState, <Primordial,I> > = 4,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:26,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v4 = v3.getTopWaitSplashScreenActivity();
	v4.onCopySplashScreenFinish(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public ActivityRecord getTopWaitSplashScreenActivity(){
	Task$$ExternalSyntheticLambda8 v0 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v2 = p0.getActivity(v0);
	return v2;
}
-----
depth : 2
public ActivityRecord getActivity(Predicate p1){
	ActivityRecord v1 = p0.getActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void onCopySplashScreenFinish(SplashScreenView$SplashScreenViewParcelable p1){
	p0.removeTransferSplashScreenTimeout();
	SurfaceControl v2 = TaskOrganizerController.applyStartingWindowAnimation(this.mStartingWindow);
	this.mTransferringSplashScreenState = 2;
	ClientLifecycleManager v3 = this.mAtmService.getLifecycleManager();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""onCopySplashScreenComplete fail: "");
	StringBuilder v6 = v3.append(p0);
	String v7 = v3.toString();
	int v8 = Slog.w(""ActivityTaskManager"", v7);
	this.mStartingWindow.cancelAnimation();
	p1.clearIfNeeded();
	this.mTransferringSplashScreenState = 3;
	return;
}
-----
depth : 2
public void removeTransferSplashScreenTimeout(){
	ActivityTaskManagerService.mH.removeCallbacks(this.mTransferSplashScreenTimeoutRunnable);
	return;
}
-----
depth : 2
public SurfaceControl applyStartingWindowAnimation(WindowState p1){
	SurfaceControl$Transaction v1 = p1.getPendingTransaction();
	Rect v2 = p1.getRelativeFrame();
	TaskOrganizerController$StartingWindowAnimationAdaptor v2 = new TaskOrganizerController$StartingWindowAnimationAdaptor();
	p1.startAnimation(v1, v2, 0, 128);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Cannot start starting window animation, the window "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" was removed"");
	String v9 = v4.toString();
	int v10 = Slog.e(""TaskOrganizerController"", v9);
	return 0;
}
-----
depth : 2
public ClientLifecycleManager getLifecycleManager(){
	return this.mLifecycleManager;
}
-----
depth : 2
public void cancelAnimation(){
	int v1 = this.mSurfaceAnimator.getAnimationType();
	AnimationAdapter v2 = this.mSurfaceAnimator.getAnimation();
	p0.doAnimationFinished(v1, v2);
	this.mSurfaceAnimator.cancelAnimation();
	SurfaceControl$Transaction v5 = p0.getSyncTransaction();
	this.mSurfaceFreezer.unfreeze(v5);
	return;
}
-----
depth : 2
public void clearIfNeeded(){
	this.mIconBitmap.recycle();
	this.mIconBitmap = 0;
	this.mBrandingBitmap.recycle();
	this.mBrandingBitmap = 0;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void onSplashScreenViewCopyFinished(int p1, SplashScreenView$SplashScreenViewParcelable p2){
	AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v9 = PooledLambda.__(Tas.class);
	Integer v10 = Integer.valueOf(p1);
	PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10);
	Task v12 = RootWindowContainer.getTask(v11);
	v11.recycle();
	Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0);
	Task v15 = v12.getRootTask();
	boolean v16 = v12.reparent(v14, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v6 = v12;
	Task v5 = v6;
	Task$$ExternalSyntheticLambda8 v18 = new Task$$ExternalSyntheticLambda8();
	ActivityRecord v21 = WindowContainer.getActivity(v18, 1);
	ActivityRecord v20 = v21;
	ActivityRecord v17 = v20;
	ActivityTaskManagerService.mH.removeCallbacks(this.mTransferSplashScreenTimeoutRunnable);
	SurfaceControl$Transaction v26 = this.mStartingWindow.getPendingTransaction();
	Rect v27 = this.mStartingWindow.getRelativeFrame();
	TaskOrganizerController$StartingWindowAnimationAdaptor v28 = new TaskOrganizerController$StartingWindowAnimationAdaptor();
	this.mStartingWindow.startAnimation(v26, v28, 0, 128);
	SurfaceControl v25 = 0;
	this.mTransferringSplashScreenState = 2;
	ClientLifecycleManager v38 = this.mLifecycleManager;
	int v46 = this.mSurfaceAnimator.getAnimationType();
	AnimationAdapter v47 = this.mSurfaceAnimator.getAnimation();
	WindowContainer.doAnimationFinished(v46, v47);
	this.mSurfaceAnimator.cancelAnimation();
	SurfaceControl$Transaction v50 = WindowContainer.getSyncTransaction();
	this.mSurfaceFreezer.unfreeze(v50);
	this.mIconBitmap.recycle();
	this.mIconBitmap = 0;
	this.mBrandingBitmap.recycle();
	this.mBrandingBitmap = 0;
	this.mTransferringSplashScreenState = 3;
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","clearLaunchParamsForPackages(Ljava/util/List;)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
18 = phi  17,7,
9 = invokeinterface < Application, Ljava/util/List, size()I > 2 @12 exception:8,
conditional branch(ge, to iindex=-1) 18,9,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:20,
return,","depth : 0
public void clearLaunchParamsForPackages(List p1){
	ActivityTaskManagerService.enforceTaskPermission(""clearLaunchParamsForPackages"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p1.size();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void clearLaunchParamsForPackages(List p1){
	ActivityTaskManagerService.enforceTaskPermission(""clearLaunchParamsForPackages"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p1.size();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","clearLaunchParamsForPackages(Ljava/util/List;)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
18 = phi  17,7,
9 = invokeinterface < Application, Ljava/util/List, size()I > 2 @12 exception:8,
conditional branch(ge, to iindex=-1) 18,9,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void clearLaunchParamsForPackages(List p1){
	ActivityTaskManagerService.enforceTaskPermission(""clearLaunchParamsForPackages"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p1.size();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void clearLaunchParamsForPackages(List p1){
	this.sThreadPriorityBooster.boost();
	int v7 = p1.size();
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","clearLaunchParamsForPackages(Ljava/util/List;)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
18 = phi  17,7,
9 = invokeinterface < Application, Ljava/util/List, size()I > 2 @12 exception:8,
conditional branch(ge, to iindex=-1) 18,9,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void clearLaunchParamsForPackages(List p1){
	ActivityTaskManagerService.enforceTaskPermission(""clearLaunchParamsForPackages"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p1.size();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void clearLaunchParamsForPackages(List p1){
	this.sThreadPriorityBooster.boost();
	int v5 = p1.size();
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","clearLaunchParamsForPackages(Ljava/util/List;)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
18 = phi  17,7,
9 = invokeinterface < Application, Ljava/util/List, size()I > 2 @12 exception:8,
conditional branch(ge, to iindex=-1) 18,9,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void clearLaunchParamsForPackages(List p1){
	ActivityTaskManagerService.enforceTaskPermission(""clearLaunchParamsForPackages"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p1.size();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void clearLaunchParamsForPackages(List p1){
	int v8 = p1.size();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","clearLaunchParamsForPackages(Ljava/util/List;)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
18 = phi  17,7,
9 = invokeinterface < Application, Ljava/util/List, size()I > 2 @12 exception:8,
conditional branch(ge, to iindex=-1) 18,9,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void clearLaunchParamsForPackages(List p1){
	ActivityTaskManagerService.enforceTaskPermission(""clearLaunchParamsForPackages"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p1.size();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void clearLaunchParamsForPackages(List p1){
	WindowManagerThreadPriorityBooster.boost();
	int v9 = p1.size();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","clearLaunchParamsForPackages(Ljava/util/List;)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
18 = phi  17,7,
9 = invokeinterface < Application, Ljava/util/List, size()I > 2 @12 exception:8,
conditional branch(ge, to iindex=-1) 18,9,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @35 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void clearLaunchParamsForPackages(List p1){
	ActivityTaskManagerService.enforceTaskPermission(""clearLaunchParamsForPackages"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = p1.size();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void clearLaunchParamsForPackages(List p1){
	int v8 = p1.size();
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I","0","12 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 10 @2 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @8 exception:42,
44 = invokestatic < Application, Landroid/app/ActivityOptions, makeBasic()Landroid/app/ActivityOptions; > @11 exception:43,
invokevirtual < Application, Landroid/app/ActivityOptions, setLaunchTaskId(I)V > 44,8 @15 exception:45,
48 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,5,6,9,46 @20 exception:47,
50 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @24 exception:49,
52 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @28 exception:51,
54 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 52,7,46 @32 exception:53,
56 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/wm/ActivityStarter; > 54,2 @36 exception:55,
58 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 56,6 @40 exception:57,
60 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPid(I)Lcom/android/server/wm/ActivityStarter; > 58,5 @44 exception:59,
62 = invokevirtual < Application, Landroid/content/Intent, getPackage()Ljava/lang/String; > 7 @48 exception:61,
64 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 60,62 @52 exception:63,
66 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 64,4 @56 exception:65,
68 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 66,48 @60 exception:67,
70 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 44 @64 exception:69,
72 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 68,70 @68 exception:71,
74 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @72 exception:73,
76 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setRealCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 72,74 @76 exception:75,
78 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 76 @80 exception:77,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 50 @84 exception:85,
return 78,","depth : 0
public int startActivityFromGameSession(IApplicationThread p1, String p2, String p3, int p4, int p5, Intent p6, int p7, int p8){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityOptions v3 = ActivityOptions.makeBasic();
	v3.setLaunchTaskId(p7);
	int v5 = p0.handleIncomingUser(p4, p5, p8, ""startActivityFromGameSession"");
	long v6 = Binder.clearCallingIdentity();
	ActivityStartController v7 = p0.getActivityStartController();
	ActivityStarter v8 = v7.obtainStarter(p6, ""startActivityFromGameSession"");
	ActivityStarter v9 = v8.setCaller(p1);
	ActivityStarter v10 = v9.setCallingUid(p5);
	ActivityStarter v11 = v10.setCallingPid(p4);
	String v12 = p6.getPackage();
	ActivityStarter v13 = v11.setCallingPackage(v12);
	ActivityStarter v14 = v13.setCallingFeatureId(p3);
	ActivityStarter v15 = v14.setUserId(v5);
	Bundle v16 = v3.toBundle();
	ActivityStarter v17 = v15.setActivityOptions(v16);
	int v18 = Binder.getCallingUid();
	ActivityStarter v19 = v17.setRealCallingUid(v18);
	int v20 = v19.execute();
	Binder.restoreCallingIdentity(v6);
	return v20;
}
-----
","public int startActivityFromGameSession(IApplicationThread p1, String p2, String p3, int p4, int p5, Intent p6, int p7, int p8){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityOptions v3 = ActivityOptions.makeBasic();
	v3.setLaunchTaskId(p7);
	int v5 = p0.handleIncomingUser(p4, p5, p8, ""startActivityFromGameSession"");
	long v6 = Binder.clearCallingIdentity();
	ActivityStartController v7 = p0.getActivityStartController();
	ActivityStarter v8 = v7.obtainStarter(p6, ""startActivityFromGameSession"");
	ActivityStarter v9 = v8.setCaller(p1);
	ActivityStarter v10 = v9.setCallingUid(p5);
	ActivityStarter v11 = v10.setCallingPid(p4);
	String v12 = p6.getPackage();
	ActivityStarter v13 = v11.setCallingPackage(v12);
	ActivityStarter v14 = v13.setCallingFeatureId(p3);
	ActivityStarter v15 = v14.setUserId(v5);
	Bundle v16 = v3.toBundle();
	ActivityStarter v17 = v15.setActivityOptions(v16);
	int v18 = Binder.getCallingUid();
	ActivityStarter v19 = v17.setRealCallingUid(v18);
	int v20 = v19.execute();
	Binder.restoreCallingIdentity(v6);
	return v20;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I","1","12 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 10 @2 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @8 exception:42,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
44 = invokestatic < Application, Landroid/app/ActivityOptions, makeBasic()Landroid/app/ActivityOptions; > @11 exception:43,
1 = new <Application,Landroid/app/ActivityOptions>@0,
invokespecial < Application, Landroid/app/ActivityOptions, <init>()V > 1 @2 exception:2,
return 1,
invokevirtual < Application, Landroid/app/ActivityOptions, setLaunchTaskId(I)V > 44,8 @15 exception:45,
putfield 1.< Application, Landroid/app/ActivityOptions, mLaunchTaskId, <Primordial,I> > = 2,
return,
48 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,5,6,9,46 @20 exception:47,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
50 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @24 exception:49,
52 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @28 exception:51,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
54 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 52,7,46 @32 exception:53,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
return 10,
56 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/wm/ActivityStarter; > 54,2 @36 exception:55,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, caller, <Application,Landroid/app/IApplicationThread> > = 2,
return 1,
58 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 56,6 @40 exception:57,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingUid, <Primordial,I> > = 2,
return 1,
60 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPid(I)Lcom/android/server/wm/ActivityStarter; > 58,5 @44 exception:59,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingPid, <Primordial,I> > = 2,
return 1,
62 = invokevirtual < Application, Landroid/content/Intent, getPackage()Ljava/lang/String; > 7 @48 exception:61,
64 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 60,62 @52 exception:63,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingPackage, <Application,Ljava/lang/String> > = 2,
return 1,
66 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 64,4 @56 exception:65,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingFeatureId, <Application,Ljava/lang/String> > = 2,
return 1,
68 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 66,48 @60 exception:67,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, userId, <Primordial,I> > = 2,
return 1,
70 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 44 @64 exception:69,
72 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 68,70 @68 exception:71,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
return 6,
74 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @72 exception:73,
76 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setRealCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 72,74 @76 exception:75,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, realCallingUid, <Primordial,I> > = 2,
return 1,
78 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 76 @80 exception:77,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 50 @84 exception:85,
return 78,","depth : 0
public int startActivityFromGameSession(IApplicationThread p1, String p2, String p3, int p4, int p5, Intent p6, int p7, int p8){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityOptions v3 = ActivityOptions.makeBasic();
	v3.setLaunchTaskId(p7);
	int v5 = p0.handleIncomingUser(p4, p5, p8, ""startActivityFromGameSession"");
	long v6 = Binder.clearCallingIdentity();
	ActivityStartController v7 = p0.getActivityStartController();
	ActivityStarter v8 = v7.obtainStarter(p6, ""startActivityFromGameSession"");
	ActivityStarter v9 = v8.setCaller(p1);
	ActivityStarter v10 = v9.setCallingUid(p5);
	ActivityStarter v11 = v10.setCallingPid(p4);
	String v12 = p6.getPackage();
	ActivityStarter v13 = v11.setCallingPackage(v12);
	ActivityStarter v14 = v13.setCallingFeatureId(p3);
	ActivityStarter v15 = v14.setUserId(v5);
	Bundle v16 = v3.toBundle();
	ActivityStarter v17 = v15.setActivityOptions(v16);
	int v18 = Binder.getCallingUid();
	ActivityStarter v19 = v17.setRealCallingUid(v18);
	int v20 = v19.execute();
	Binder.restoreCallingIdentity(v6);
	return v20;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public ActivityOptions makeBasic(){
	ActivityOptions v0 = new ActivityOptions();
	return v0;
}
-----
depth : 1
public void setLaunchTaskId(int p1){
	this.mLaunchTaskId = p1;
	return;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 1
public ActivityStarter setCaller(IApplicationThread p1){
	ActivityStarter$Request.caller = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingUid(int p1){
	ActivityStarter$Request.callingUid = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingPid(int p1){
	ActivityStarter$Request.callingPid = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingPackage(String p1){
	ActivityStarter$Request.callingPackage = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingFeatureId(String p1){
	ActivityStarter$Request.callingFeatureId = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setUserId(int p1){
	ActivityStarter$Request.userId = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 1
public ActivityStarter setRealCallingUid(int p1){
	ActivityStarter$Request.realCallingUid = p1;
	return p0;
}
-----
","public int startActivityFromGameSession(IApplicationThread p1, String p2, String p3, int p4, int p5, Intent p6, int p7, int p8){
	ActivityOptions v6 = new ActivityOptions();
	ActivityOptions v5 = v6;
	this.mLaunchTaskId = p7;
	int v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, ""startActivityFromGameSession"", 0);
	int v9 = v10;
	long v11 = Binder.clearCallingIdentity();
	ActivityStartController v12 = this.mActivityStartController;
	ActivityStarter v14 = this.mFactory.obtain();
	ActivityStarter v15 = v14.setIntent(p6);
	ActivityStarter v16 = v15.setReason(""startActivityFromGameSession"");
	ActivityStarter v13 = v16;
	ActivityStarter$Request.caller = p1;
	ActivityStarter v17 = ActivityStarter;
	ActivityStarter$Request.callingUid = p5;
	ActivityStarter v18 = ActivityStarter;
	ActivityStarter$Request.callingPid = p4;
	ActivityStarter v19 = ActivityStarter;
	String v20 = p6.getPackage();
	ActivityStarter$Request.callingPackage = v20;
	ActivityStarter v21 = ActivityStarter;
	ActivityStarter$Request.callingFeatureId = p3;
	ActivityStarter v22 = ActivityStarter;
	ActivityStarter$Request.userId = v9;
	ActivityStarter v23 = ActivityStarter;
	Bundle v24 = v5.toBundle();
	SafeActivityOptions v26 = SafeActivityOptions.fromBundle(v24);
	ActivityStarter v27 = ActivityStarter.setActivityOptions(v26);
	ActivityStarter v25 = v27;
	int v28 = Binder.getCallingUid();
	ActivityStarter$Request.realCallingUid = v28;
	ActivityStarter v29 = ActivityStarter;
	int v30 = v29.execute();
	Binder.restoreCallingIdentity(v11);
	return v30;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityFromGameSession(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;II)I","2","12 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 10 @2 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @8 exception:42,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
44 = invokestatic < Application, Landroid/app/ActivityOptions, makeBasic()Landroid/app/ActivityOptions; > @11 exception:43,
1 = new <Application,Landroid/app/ActivityOptions>@0,
invokespecial < Application, Landroid/app/ActivityOptions, <init>()V > 1 @2 exception:2,
return 1,
invokevirtual < Application, Landroid/app/ActivityOptions, setLaunchTaskId(I)V > 44,8 @15 exception:45,
putfield 1.< Application, Landroid/app/ActivityOptions, mLaunchTaskId, <Primordial,I> > = 2,
return,
48 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,5,6,9,46 @20 exception:47,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
50 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @24 exception:49,
52 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @28 exception:51,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
54 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 52,7,46 @32 exception:53,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, intent, <Application,Landroid/content/Intent> > = 2,
return 1,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, reason, <Application,Ljava/lang/String> > = 2,
return 1,
return 10,
56 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/wm/ActivityStarter; > 54,2 @36 exception:55,
58 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 56,6 @40 exception:57,
60 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPid(I)Lcom/android/server/wm/ActivityStarter; > 58,5 @44 exception:59,
62 = invokevirtual < Application, Landroid/content/Intent, getPackage()Ljava/lang/String; > 7 @48 exception:61,
64 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 60,62 @52 exception:63,
66 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 64,4 @56 exception:65,
68 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 66,48 @60 exception:67,
70 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 44 @64 exception:69,
72 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 68,70 @68 exception:71,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, activityOptions, <Application,Lcom/android/server/wm/SafeActivityOptions> > = 2,
return 1,
return 6,
74 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @72 exception:73,
76 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setRealCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 72,74 @76 exception:75,
78 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 76 @80 exception:77,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 50 @84 exception:85,
return 78,","depth : 0
public int startActivityFromGameSession(IApplicationThread p1, String p2, String p3, int p4, int p5, Intent p6, int p7, int p8){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityOptions v3 = ActivityOptions.makeBasic();
	v3.setLaunchTaskId(p7);
	int v5 = p0.handleIncomingUser(p4, p5, p8, ""startActivityFromGameSession"");
	long v6 = Binder.clearCallingIdentity();
	ActivityStartController v7 = p0.getActivityStartController();
	ActivityStarter v8 = v7.obtainStarter(p6, ""startActivityFromGameSession"");
	ActivityStarter v9 = v8.setCaller(p1);
	ActivityStarter v10 = v9.setCallingUid(p5);
	ActivityStarter v11 = v10.setCallingPid(p4);
	String v12 = p6.getPackage();
	ActivityStarter v13 = v11.setCallingPackage(v12);
	ActivityStarter v14 = v13.setCallingFeatureId(p3);
	ActivityStarter v15 = v14.setUserId(v5);
	Bundle v16 = v3.toBundle();
	ActivityStarter v17 = v15.setActivityOptions(v16);
	int v18 = Binder.getCallingUid();
	ActivityStarter v19 = v17.setRealCallingUid(v18);
	int v20 = v19.execute();
	Binder.restoreCallingIdentity(v6);
	return v20;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public ActivityOptions makeBasic(){
	ActivityOptions v0 = new ActivityOptions();
	return v0;
}
-----
depth : 1
public void setLaunchTaskId(int p1){
	this.mLaunchTaskId = p1;
	return;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 2
public ActivityStarter setIntent(Intent p1){
	ActivityStarter$Request.intent = p1;
	return p0;
}
-----
depth : 2
public ActivityStarter setReason(String p1){
	ActivityStarter$Request.reason = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 2
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityStarter setActivityOptions(SafeActivityOptions p1){
	ActivityStarter$Request.activityOptions = p1;
	return p0;
}
-----
","public int startActivityFromGameSession(IApplicationThread p1, String p2, String p3, int p4, int p5, Intent p6, int p7, int p8){
	ActivityOptions v6 = new ActivityOptions();
	ActivityOptions v5 = v6;
	this.mLaunchTaskId = p7;
	int v10 = this.mAmInternal.handleIncomingUser(p4, p5, p8, 0, 0, ""startActivityFromGameSession"", 0);
	int v9 = v10;
	long v11 = Binder.clearCallingIdentity();
	ActivityStartController v12 = this.mActivityStartController;
	ActivityStarter v14 = this.mFactory.obtain();
	ActivityStarter$Request.intent = p1;
	ActivityStarter v15 = ActivityStarter;
	ActivityStarter$Request.reason = p2;
	ActivityStarter v16 = ActivityStarter;
	ActivityStarter v13 = v16;
	ActivityStarter v17 = v13.setCaller(p1);
	ActivityStarter v18 = v17.setCallingUid(p5);
	ActivityStarter v19 = v18.setCallingPid(p4);
	String v20 = p6.getPackage();
	ActivityStarter v21 = v19.setCallingPackage(v20);
	ActivityStarter v22 = v21.setCallingFeatureId(p3);
	ActivityStarter v23 = v22.setUserId(v9);
	Bundle v24 = v5.toBundle();
	SafeActivityOptions v27 = new SafeActivityOptions(v28);
	ActivityOptions v28 = ActivityOptions.fromBundle(p1);
	SafeActivityOptions v26 = phiInstruction;
	ActivityStarter$Request.activityOptions = v26;
	ActivityStarter v30 = ActivityStarter;
	ActivityStarter v25 = v30;
	int v31 = Binder.getCallingUid();
	ActivityStarter v32 = v25.setRealCallingUid(v31);
	int v33 = v32.execute();
	Binder.restoreCallingIdentity(v11);
	return v33;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","removeAllVisibleRecentTasks()V","0","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 1 @19 exception:10,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
14 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getCurrentUserId()I > 12 @25 exception:13,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, removeAllVisibleTasks(I)V > 11,14 @29 exception:15,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @32 exception:21,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @36 exception:29,
return,","depth : 0
public void removeAllVisibleRecentTasks(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	RecentTasks v4 = p0.getRecentTasks();
	int v5 = this.mAmInternal.getCurrentUserId();
	v4.removeAllVisibleTasks(v5);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void removeAllVisibleRecentTasks(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	RecentTasks v4 = p0.getRecentTasks();
	int v5 = this.mAmInternal.getCurrentUserId();
	v4.removeAllVisibleTasks(v5);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeAllVisibleRecentTasks()V","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 1 @19 exception:10,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
return 2,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
14 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getCurrentUserId()I > 12 @25 exception:13,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, removeAllVisibleTasks(I)V > 11,14 @29 exception:15,
4 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getProfileIds(I)Ljava/util/Set; > 1,2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTasks, <Application,Ljava/util/ArrayList> > 1,
7 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 5 @6 exception:6,
9 = binaryop(sub) 7 , 8,
31 = phi  30,9,
conditional branch(lt, to iindex=-1) 31,10,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @32 exception:21,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @36 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void removeAllVisibleRecentTasks(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	RecentTasks v4 = p0.getRecentTasks();
	int v5 = this.mAmInternal.getCurrentUserId();
	v4.removeAllVisibleTasks(v5);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public RecentTasks getRecentTasks(){
	return this.mRecentTasks;
}
-----
depth : 1
public void removeAllVisibleTasks(int p1){
	Set v1 = p0.getProfileIds(p1);
	int v2 = this.mTasks.size();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void removeAllVisibleRecentTasks(){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	RecentTasks v5 = this.mRecentTasks;
	int v6 = this.mAmInternal.getCurrentUserId();
	Set v8 = RecentTasks.getProfileIds(v6);
	int v9 = this.mTasks.size();
	Binder.restoreCallingIdentity(v4);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeAllVisibleRecentTasks()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 1 @19 exception:10,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
14 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getCurrentUserId()I > 12 @25 exception:13,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, removeAllVisibleTasks(I)V > 11,14 @29 exception:15,
4 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getProfileIds(I)Ljava/util/Set; > 1,2 @0 exception:3,
3 = new <Application,Landroid/util/ArraySet>@0,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/RecentTasks, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getUserManager()Lcom/android/server/pm/UserManagerService; > 5 @7 exception:6,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(IZ)[I > 7,2,8 @12 exception:9,
19 = phi  18,8,
11 = arraylength 10,
conditional branch(ge, to iindex=-1) 19,11,
return 3,
5 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTasks, <Application,Ljava/util/ArrayList> > 1,
7 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 5 @6 exception:6,
9 = binaryop(sub) 7 , 8,
31 = phi  30,9,
conditional branch(lt, to iindex=-1) 31,10,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @32 exception:21,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @36 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void removeAllVisibleRecentTasks(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	RecentTasks v4 = p0.getRecentTasks();
	int v5 = this.mAmInternal.getCurrentUserId();
	v4.removeAllVisibleTasks(v5);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void removeAllVisibleTasks(int p1){
	Set v1 = p0.getProfileIds(p1);
	int v2 = this.mTasks.size();
	return;
}
-----
depth : 2
public Set getProfileIds(int p1){
	ArraySet v0 = new ArraySet();
	UserManagerService v2 = this.mService.getUserManager();
	[I v3 = v2.getProfileIds(p1, 0);
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void removeAllVisibleRecentTasks(){
	long v5 = Binder.clearCallingIdentity();
	RecentTasks v6 = p0.getRecentTasks();
	int v7 = this.mAmInternal.getCurrentUserId();
	ArraySet v10 = new ArraySet();
	UserManagerService v12 = this.mService.getUserManager();
	[I v13 = v12.getProfileIds(p1, 0);
	Set v9 = v10;
	int v14 = this.mTasks.size();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeAllVisibleRecentTasks()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 1 @19 exception:10,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
14 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getCurrentUserId()I > 12 @25 exception:13,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, removeAllVisibleTasks(I)V > 11,14 @29 exception:15,
4 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getProfileIds(I)Ljava/util/Set; > 1,2 @0 exception:3,
3 = new <Application,Landroid/util/ArraySet>@0,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/RecentTasks, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getUserManager()Lcom/android/server/pm/UserManagerService; > 5 @7 exception:6,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(IZ)[I > 7,2,8 @12 exception:9,
19 = phi  18,8,
11 = arraylength 10,
conditional branch(ge, to iindex=-1) 19,11,
return 3,
5 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTasks, <Application,Ljava/util/ArrayList> > 1,
7 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 5 @6 exception:6,
9 = binaryop(sub) 7 , 8,
31 = phi  30,9,
conditional branch(lt, to iindex=-1) 31,10,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @32 exception:21,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @36 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void removeAllVisibleRecentTasks(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	RecentTasks v4 = p0.getRecentTasks();
	int v5 = this.mAmInternal.getCurrentUserId();
	v4.removeAllVisibleTasks(v5);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void removeAllVisibleTasks(int p1){
	Set v1 = p0.getProfileIds(p1);
	int v2 = this.mTasks.size();
	return;
}
-----
depth : 2
public Set getProfileIds(int p1){
	ArraySet v0 = new ArraySet();
	UserManagerService v2 = this.mService.getUserManager();
	[I v3 = v2.getProfileIds(p1, 0);
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void removeAllVisibleRecentTasks(){
	WindowManagerThreadPriorityBooster.boost();
	long v6 = Binder.clearCallingIdentity();
	RecentTasks v7 = p0.getRecentTasks();
	int v8 = this.mAmInternal.getCurrentUserId();
	ArraySet v11 = new ArraySet();
	UserManagerService v13 = this.mService.getUserManager();
	[I v14 = v13.getProfileIds(p1, 0);
	Set v10 = v11;
	int v15 = this.mTasks.size();
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeAllVisibleRecentTasks()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 1 @19 exception:10,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
14 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getCurrentUserId()I > 12 @25 exception:13,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, removeAllVisibleTasks(I)V > 11,14 @29 exception:15,
4 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getProfileIds(I)Ljava/util/Set; > 1,2 @0 exception:3,
3 = new <Application,Landroid/util/ArraySet>@0,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/RecentTasks, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getUserManager()Lcom/android/server/pm/UserManagerService; > 5 @7 exception:6,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(IZ)[I > 7,2,8 @12 exception:9,
19 = phi  18,8,
11 = arraylength 10,
conditional branch(ge, to iindex=-1) 19,11,
return 3,
5 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTasks, <Application,Ljava/util/ArrayList> > 1,
7 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 5 @6 exception:6,
9 = binaryop(sub) 7 , 8,
31 = phi  30,9,
conditional branch(lt, to iindex=-1) 31,10,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @32 exception:21,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @36 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void removeAllVisibleRecentTasks(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	RecentTasks v4 = p0.getRecentTasks();
	int v5 = this.mAmInternal.getCurrentUserId();
	v4.removeAllVisibleTasks(v5);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void removeAllVisibleTasks(int p1){
	Set v1 = p0.getProfileIds(p1);
	int v2 = this.mTasks.size();
	return;
}
-----
depth : 2
public Set getProfileIds(int p1){
	ArraySet v0 = new ArraySet();
	UserManagerService v2 = this.mService.getUserManager();
	[I v3 = v2.getProfileIds(p1, 0);
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void removeAllVisibleRecentTasks(){
	long v5 = Binder.clearCallingIdentity();
	RecentTasks v6 = p0.getRecentTasks();
	int v7 = this.mAmInternal.getCurrentUserId();
	ArraySet v10 = new ArraySet();
	UserManagerService v12 = this.mService.getUserManager();
	[I v13 = v12.getProfileIds(p1, 0);
	Set v9 = v10;
	int v14 = this.mTasks.size();
	Binder.restoreCallingIdentity(v5);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;","0","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @2 exception:14,
15 = new <Application,Landroid/app/WaitResult>@5,
invokespecial < Application, Landroid/app/WaitResult, <init>()V > 15 @7 exception:16,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 17 @12 exception:18,
20 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @15 exception:19,
22 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @19 exception:21,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,20,22,13,17 @25 exception:23,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @29 exception:25,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 26,5,17 @34 exception:27,
30 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/wm/ActivityStarter; > 28,2 @39 exception:29,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 30,3 @43 exception:31,
34 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 32,4 @48 exception:33,
36 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 34,6 @53 exception:35,
38 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultTo(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityStarter; > 36,7 @58 exception:37,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultWho(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 38,8 @63 exception:39,
42 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setRequestCode(I)Lcom/android/server/wm/ActivityStarter; > 40,9 @68 exception:41,
44 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setStartFlags(I)Lcom/android/server/wm/ActivityStarter; > 42,10 @74 exception:43,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 44,12 @80 exception:45,
48 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 46,24 @84 exception:47,
50 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setProfilerInfo(Landroid/app/ProfilerInfo;)Lcom/android/server/wm/ActivityStarter; > 48,11 @90 exception:49,
52 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setWaitResult(Landroid/app/WaitResult;)Lcom/android/server/wm/ActivityStarter; > 50,15 @94 exception:51,
54 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 52 @98 exception:53,
return 15,","depth : 0
public WaitResult startActivityAndWait(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	p0.assertPackageMatchesCallingUid(p2);
	WaitResult v1 = new WaitResult();
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityAndWait"");
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = p0.handleIncomingUser(v4, v5, p12, ""startActivityAndWait"");
	ActivityStartController v7 = p0.getActivityStartController();
	ActivityStarter v8 = v7.obtainStarter(p4, ""startActivityAndWait"");
	ActivityStarter v9 = v8.setCaller(p1);
	ActivityStarter v10 = v9.setCallingPackage(p2);
	ActivityStarter v11 = v10.setCallingFeatureId(p3);
	ActivityStarter v12 = v11.setResolvedType(p5);
	ActivityStarter v13 = v12.setResultTo(p6);
	ActivityStarter v14 = v13.setResultWho(p7);
	ActivityStarter v15 = v14.setRequestCode(p8);
	ActivityStarter v16 = v15.setStartFlags(p9);
	ActivityStarter v17 = v16.setActivityOptions(p11);
	ActivityStarter v18 = v17.setUserId(v6);
	ActivityStarter v19 = v18.setProfilerInfo(p10);
	ActivityStarter v20 = v19.setWaitResult(v1);
	int v21 = v20.execute();
	return v1;
}
-----
","public WaitResult startActivityAndWait(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	p0.assertPackageMatchesCallingUid(p2);
	WaitResult v2 = new WaitResult();
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityAndWait"");
	int v5 = Binder.getCallingPid();
	int v6 = Binder.getCallingUid();
	int v7 = p0.handleIncomingUser(v5, v6, p12, ""startActivityAndWait"");
	ActivityStartController v8 = p0.getActivityStartController();
	ActivityStarter v9 = v8.obtainStarter(p4, ""startActivityAndWait"");
	ActivityStarter v10 = v9.setCaller(p1);
	ActivityStarter v11 = v10.setCallingPackage(p2);
	ActivityStarter v12 = v11.setCallingFeatureId(p3);
	ActivityStarter v13 = v12.setResolvedType(p5);
	ActivityStarter v14 = v13.setResultTo(p6);
	ActivityStarter v15 = v14.setResultWho(p7);
	ActivityStarter v16 = v15.setRequestCode(p8);
	ActivityStarter v17 = v16.setStartFlags(p9);
	ActivityStarter v18 = v17.setActivityOptions(p11);
	ActivityStarter v19 = v18.setUserId(v7);
	ActivityStarter v20 = v19.setProfilerInfo(p10);
	ActivityStarter v21 = v20.setWaitResult(v2);
	int v22 = v21.execute();
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;","1","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @2 exception:14,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
15 = new <Application,Landroid/app/WaitResult>@5,
invokespecial < Application, Landroid/app/WaitResult, <init>()V > 15 @7 exception:16,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 17 @12 exception:18,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
20 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @15 exception:19,
22 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @19 exception:21,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,20,22,13,17 @25 exception:23,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @29 exception:25,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 26,5,17 @34 exception:27,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
return 10,
30 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/wm/ActivityStarter; > 28,2 @39 exception:29,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, caller, <Application,Landroid/app/IApplicationThread> > = 2,
return 1,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 30,3 @43 exception:31,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingPackage, <Application,Ljava/lang/String> > = 2,
return 1,
34 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 32,4 @48 exception:33,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingFeatureId, <Application,Ljava/lang/String> > = 2,
return 1,
36 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 34,6 @53 exception:35,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, resolvedType, <Application,Ljava/lang/String> > = 2,
return 1,
38 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultTo(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityStarter; > 36,7 @58 exception:37,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, resultTo, <Application,Landroid/os/IBinder> > = 2,
return 1,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultWho(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 38,8 @63 exception:39,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, resultWho, <Application,Ljava/lang/String> > = 2,
return 1,
42 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setRequestCode(I)Lcom/android/server/wm/ActivityStarter; > 40,9 @68 exception:41,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, requestCode, <Primordial,I> > = 2,
return 1,
44 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setStartFlags(I)Lcom/android/server/wm/ActivityStarter; > 42,10 @74 exception:43,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, startFlags, <Primordial,I> > = 2,
return 1,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 44,12 @80 exception:45,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
return 6,
48 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 46,24 @84 exception:47,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, userId, <Primordial,I> > = 2,
return 1,
50 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setProfilerInfo(Landroid/app/ProfilerInfo;)Lcom/android/server/wm/ActivityStarter; > 48,11 @90 exception:49,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, profilerInfo, <Application,Landroid/app/ProfilerInfo> > = 2,
return 1,
52 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setWaitResult(Landroid/app/WaitResult;)Lcom/android/server/wm/ActivityStarter; > 50,15 @94 exception:51,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, waitResult, <Application,Landroid/app/WaitResult> > = 2,
return 1,
54 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 52 @98 exception:53,
return 15,","depth : 0
public WaitResult startActivityAndWait(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	p0.assertPackageMatchesCallingUid(p2);
	WaitResult v1 = new WaitResult();
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityAndWait"");
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = p0.handleIncomingUser(v4, v5, p12, ""startActivityAndWait"");
	ActivityStartController v7 = p0.getActivityStartController();
	ActivityStarter v8 = v7.obtainStarter(p4, ""startActivityAndWait"");
	ActivityStarter v9 = v8.setCaller(p1);
	ActivityStarter v10 = v9.setCallingPackage(p2);
	ActivityStarter v11 = v10.setCallingFeatureId(p3);
	ActivityStarter v12 = v11.setResolvedType(p5);
	ActivityStarter v13 = v12.setResultTo(p6);
	ActivityStarter v14 = v13.setResultWho(p7);
	ActivityStarter v15 = v14.setRequestCode(p8);
	ActivityStarter v16 = v15.setStartFlags(p9);
	ActivityStarter v17 = v16.setActivityOptions(p11);
	ActivityStarter v18 = v17.setUserId(v6);
	ActivityStarter v19 = v18.setProfilerInfo(p10);
	ActivityStarter v20 = v19.setWaitResult(v1);
	int v21 = v20.execute();
	return v1;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 1
public ActivityStarter setCaller(IApplicationThread p1){
	ActivityStarter$Request.caller = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingPackage(String p1){
	ActivityStarter$Request.callingPackage = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingFeatureId(String p1){
	ActivityStarter$Request.callingFeatureId = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setResolvedType(String p1){
	ActivityStarter$Request.resolvedType = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setResultTo(IBinder p1){
	ActivityStarter$Request.resultTo = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setResultWho(String p1){
	ActivityStarter$Request.resultWho = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setRequestCode(int p1){
	ActivityStarter$Request.requestCode = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setStartFlags(int p1){
	ActivityStarter$Request.startFlags = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 1
public ActivityStarter setUserId(int p1){
	ActivityStarter$Request.userId = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setProfilerInfo(ProfilerInfo p1){
	ActivityStarter$Request.profilerInfo = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setWaitResult(WaitResult p1){
	ActivityStarter$Request.waitResult = p1;
	return p0;
}
-----
","public WaitResult startActivityAndWait(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	WaitResult v4 = new WaitResult();
	int v9 = Binder.getCallingPid();
	int v10 = Binder.getCallingUid();
	int v12 = this.mAmInternal.handleIncomingUser(v9, v10, p12, 0, 0, ""startActivityAndWait"", 0);
	int v11 = v12;
	ActivityStartController v13 = this.mActivityStartController;
	ActivityStarter v15 = this.mFactory.obtain();
	ActivityStarter v16 = v15.setIntent(p4);
	ActivityStarter v17 = v16.setReason(""startActivityAndWait"");
	ActivityStarter v14 = v17;
	ActivityStarter$Request.caller = p1;
	ActivityStarter v18 = ActivityStarter;
	ActivityStarter$Request.callingPackage = p2;
	ActivityStarter v19 = ActivityStarter;
	ActivityStarter$Request.callingFeatureId = p3;
	ActivityStarter v20 = ActivityStarter;
	ActivityStarter$Request.resolvedType = p5;
	ActivityStarter v21 = ActivityStarter;
	ActivityStarter$Request.resultTo = p6;
	ActivityStarter v22 = ActivityStarter;
	ActivityStarter$Request.resultWho = p7;
	ActivityStarter v23 = ActivityStarter;
	ActivityStarter$Request.requestCode = p8;
	ActivityStarter v24 = ActivityStarter;
	ActivityStarter$Request.startFlags = p9;
	ActivityStarter v25 = ActivityStarter;
	SafeActivityOptions v27 = SafeActivityOptions.fromBundle(p11);
	ActivityStarter v28 = ActivityStarter.setActivityOptions(v27);
	ActivityStarter v26 = v28;
	ActivityStarter$Request.userId = v11;
	ActivityStarter v29 = ActivityStarter;
	ActivityStarter$Request.profilerInfo = p10;
	ActivityStarter v30 = ActivityStarter;
	ActivityStarter$Request.waitResult = v4;
	ActivityStarter v31 = ActivityStarter;
	int v32 = v31.execute();
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityAndWait(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)Landroid/app/WaitResult;","2","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @2 exception:14,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
15 = new <Application,Landroid/app/WaitResult>@5,
invokespecial < Application, Landroid/app/WaitResult, <init>()V > 15 @7 exception:16,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 17 @12 exception:18,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
20 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @15 exception:19,
22 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @19 exception:21,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,20,22,13,17 @25 exception:23,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @29 exception:25,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 26,5,17 @34 exception:27,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, intent, <Application,Landroid/content/Intent> > = 2,
return 1,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, reason, <Application,Ljava/lang/String> > = 2,
return 1,
return 10,
30 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/wm/ActivityStarter; > 28,2 @39 exception:29,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 30,3 @43 exception:31,
34 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 32,4 @48 exception:33,
36 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 34,6 @53 exception:35,
38 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultTo(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityStarter; > 36,7 @58 exception:37,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultWho(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 38,8 @63 exception:39,
42 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setRequestCode(I)Lcom/android/server/wm/ActivityStarter; > 40,9 @68 exception:41,
44 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setStartFlags(I)Lcom/android/server/wm/ActivityStarter; > 42,10 @74 exception:43,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 44,12 @80 exception:45,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, activityOptions, <Application,Lcom/android/server/wm/SafeActivityOptions> > = 2,
return 1,
return 6,
48 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 46,24 @84 exception:47,
50 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setProfilerInfo(Landroid/app/ProfilerInfo;)Lcom/android/server/wm/ActivityStarter; > 48,11 @90 exception:49,
52 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setWaitResult(Landroid/app/WaitResult;)Lcom/android/server/wm/ActivityStarter; > 50,15 @94 exception:51,
54 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 52 @98 exception:53,
return 15,","depth : 0
public WaitResult startActivityAndWait(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	p0.assertPackageMatchesCallingUid(p2);
	WaitResult v1 = new WaitResult();
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityAndWait"");
	int v4 = Binder.getCallingPid();
	int v5 = Binder.getCallingUid();
	int v6 = p0.handleIncomingUser(v4, v5, p12, ""startActivityAndWait"");
	ActivityStartController v7 = p0.getActivityStartController();
	ActivityStarter v8 = v7.obtainStarter(p4, ""startActivityAndWait"");
	ActivityStarter v9 = v8.setCaller(p1);
	ActivityStarter v10 = v9.setCallingPackage(p2);
	ActivityStarter v11 = v10.setCallingFeatureId(p3);
	ActivityStarter v12 = v11.setResolvedType(p5);
	ActivityStarter v13 = v12.setResultTo(p6);
	ActivityStarter v14 = v13.setResultWho(p7);
	ActivityStarter v15 = v14.setRequestCode(p8);
	ActivityStarter v16 = v15.setStartFlags(p9);
	ActivityStarter v17 = v16.setActivityOptions(p11);
	ActivityStarter v18 = v17.setUserId(v6);
	ActivityStarter v19 = v18.setProfilerInfo(p10);
	ActivityStarter v20 = v19.setWaitResult(v1);
	int v21 = v20.execute();
	return v1;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 2
public ActivityStarter setIntent(Intent p1){
	ActivityStarter$Request.intent = p1;
	return p0;
}
-----
depth : 2
public ActivityStarter setReason(String p1){
	ActivityStarter$Request.reason = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 2
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityStarter setActivityOptions(SafeActivityOptions p1){
	ActivityStarter$Request.activityOptions = p1;
	return p0;
}
-----
","public WaitResult startActivityAndWait(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	WaitResult v4 = new WaitResult();
	int v9 = Binder.getCallingPid();
	int v10 = Binder.getCallingUid();
	int v12 = this.mAmInternal.handleIncomingUser(v9, v10, p12, 0, 0, ""startActivityAndWait"", 0);
	int v11 = v12;
	ActivityStartController v13 = this.mActivityStartController;
	ActivityStarter v15 = this.mFactory.obtain();
	ActivityStarter$Request.intent = p1;
	ActivityStarter v16 = ActivityStarter;
	ActivityStarter$Request.reason = p2;
	ActivityStarter v17 = ActivityStarter;
	ActivityStarter v14 = v17;
	ActivityStarter v18 = v14.setCaller(p1);
	ActivityStarter v19 = v18.setCallingPackage(p2);
	ActivityStarter v20 = v19.setCallingFeatureId(p3);
	ActivityStarter v21 = v20.setResolvedType(p5);
	ActivityStarter v22 = v21.setResultTo(p6);
	ActivityStarter v23 = v22.setResultWho(p7);
	ActivityStarter v24 = v23.setRequestCode(p8);
	ActivityStarter v25 = v24.setStartFlags(p9);
	SafeActivityOptions v28 = new SafeActivityOptions(v29);
	ActivityOptions v29 = ActivityOptions.fromBundle(p1);
	SafeActivityOptions v27 = phiInstruction;
	ActivityStarter$Request.activityOptions = v27;
	ActivityStarter v31 = ActivityStarter;
	ActivityStarter v26 = v31;
	ActivityStarter v32 = v26.setUserId(v11);
	ActivityStarter v33 = v32.setProfilerInfo(p10);
	ActivityStarter v34 = v33.setWaitResult(v4);
	int v35 = v34.execute();
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfosOnDisplay(I)Ljava/util/List;","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 9,2 @17 exception:10,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @25 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfosOnDisplay(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfosOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
","public List getAllRootTaskInfosOnDisplay(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfosOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfosOnDisplay(I)Ljava/util/List;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 9,2 @17 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
return 3,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @25 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfosOnDisplay(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfosOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public List getAllRootTaskInfosOnDisplay(int p1){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	ArrayList v9 = new ArrayList();
	DisplayContent v11 = RootWindowContainer.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v12 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v9);
	v11.forAllRootTasks(v12);
	ArrayList v8 = v9;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfosOnDisplay(I)Ljava/util/List;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 9,2 @17 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
return 3,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @25 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfosOnDisplay(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfosOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public List getAllRootTaskInfosOnDisplay(int p1){
	long v3 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	ArrayList v7 = new ArrayList();
	DisplayContent v9 = RootWindowContainer.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v10 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v7);
	v9.forAllRootTasks(v10);
	ArrayList v6 = v7;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfosOnDisplay(I)Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 9,2 @17 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;Z)V > 1,2,3 @1 exception:4,
return,
return 3,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @25 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfosOnDisplay(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfosOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 2
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public void forAllRootTasks(Consumer p1){
	p0.forAllRootTasks(p1, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public List getAllRootTaskInfosOnDisplay(int p1){
	long v5 = Binder.clearCallingIdentity();
	ArrayList v10 = new ArrayList();
	int v13 = RootWindowContainer.getChildCount();
	DisplayContent v12 = 0;
	RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10);
	WindowContainer.forAllRootTasks(v14, 1);
	ArrayList v9 = v10;
	Binder.restoreCallingIdentity(v5);
	return v9;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfosOnDisplay(I)Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 9,2 @17 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;Z)V > 1,2,3 @1 exception:4,
return,
return 3,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @25 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfosOnDisplay(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfosOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 2
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public void forAllRootTasks(Consumer p1){
	p0.forAllRootTasks(p1, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public List getAllRootTaskInfosOnDisplay(int p1){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	ArrayList v11 = new ArrayList();
	int v14 = RootWindowContainer.getChildCount();
	DisplayContent v13 = 0;
	RootWindowContainer$$ExternalSyntheticLambda12 v15 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v11);
	WindowContainer.forAllRootTasks(v15, 1);
	ArrayList v10 = v11;
	Binder.restoreCallingIdentity(v5);
	return v10;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAllRootTaskInfosOnDisplay(I)Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getAllRootTaskInfos(I)Ljava/util/ArrayList; > 9,2 @17 exception:10,
3 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @17 exception:6,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/RootWindowContainer;Ljava/util/ArrayList;)V > 9,1,3 @26 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 7,9 @29 exception:11,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;Z)V > 1,2,3 @1 exception:4,
return,
return 3,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @25 exception:23,
return 11,","depth : 0
public List getAllRootTaskInfosOnDisplay(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getAllRootTaskInfosOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v4 = this.mRootWindowContainer.getAllRootTaskInfos(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ArrayList getAllRootTaskInfos(int p1){
	ArrayList v0 = new ArrayList();
	DisplayContent v2 = p0.getDisplayContent(p1);
	RootWindowContainer$$ExternalSyntheticLambda12 v2 = new RootWindowContainer$$ExternalSyntheticLambda12(p0,v0);
	v2.forAllRootTasks(v2);
	return v0;
}
-----
depth : 2
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public void forAllRootTasks(Consumer p1){
	p0.forAllRootTasks(p1, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public List getAllRootTaskInfosOnDisplay(int p1){
	long v5 = Binder.clearCallingIdentity();
	ArrayList v10 = new ArrayList();
	int v13 = RootWindowContainer.getChildCount();
	DisplayContent v12 = 0;
	RootWindowContainer$$ExternalSyntheticLambda12 v14 = new RootWindowContainer$$ExternalSyntheticLambda12(RootWindowContainer,v10);
	WindowContainer.forAllRootTasks(v14, 1);
	ArrayList v9 = v10;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v9;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo; > 10,2,3 @17 exception:11,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:23,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @25 exception:24,
return 12,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @2 exception:5,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo; > 10,2,3 @17 exception:11,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(II)Lcom/android/server/wm/Task; > 1,2,3 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,5 @6 exception:7,
goto (from iindex= 5 to iindex = 2),
9 = phi  8,6,
return 9,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @25 exception:24,
return 12,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	Task v1 = p0.getRootTask(p1, p2);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v9 = RootWindowContainer.getRootTask(p1, p2);
	ActivityTaskManager$RootTaskInfo v10 = RootWindowContainer.getRootTaskInfo(v9);
	ActivityTaskManager$RootTaskInfo v8 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @2 exception:5,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo; > 10,2,3 @17 exception:11,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(II)Lcom/android/server/wm/Task; > 1,2,3 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,5 @6 exception:7,
goto (from iindex= 5 to iindex = 2),
9 = phi  8,6,
return 9,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @25 exception:24,
return 12,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	Task v1 = p0.getRootTask(p1, p2);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v3 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v7 = RootWindowContainer.getRootTask(p1, p2);
	ActivityTaskManager$RootTaskInfo v8 = RootWindowContainer.getRootTaskInfo(v7);
	ActivityTaskManager$RootTaskInfo v6 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @2 exception:5,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo; > 10,2,3 @17 exception:11,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(II)Lcom/android/server/wm/Task; > 1,2,3 @0 exception:4,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:4,
7 = binaryop(add) 5 , 6,
15 = phi  14,7,
conditional branch(lt, to iindex=-1) 15,8,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,15 @8 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/DisplayContent>10 <Application,Lcom/android/server/wm/DisplayContent>,
13 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(II)Lcom/android/server/wm/Task; > 11,2,3 @14 exception:12,
conditional branch(eq, to iindex=-1) 13,8,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,5 @6 exception:7,
3 = new <Application,Landroid/app/ActivityTaskManager$RootTaskInfo>@0,
invokespecial < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, <init>()V > 3 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/Task, fillTaskInfo(Landroid/app/TaskInfo;)V > 2,3 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,10,
11 = new <Primordial,[I>@209 ,
12 = new <Primordial,[Z>@229 ,
13 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21, <init>(Lcom/android/server/wm/Task;[Z[I)V > 13,2,12,11 @26 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Predicate;Z)Z > 7,13,10 @29 exception:15,
17 = arrayload 12[10],
conditional branch(eq, to iindex=-1) 17,10,
18 = arrayload 11[10],
19 = phi  8,18,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, position, <Primordial,I> > = 19,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z > 2,10 @41 exception:24,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, visible, <Primordial,Z> > = 25,
26 = getfield < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, bounds, <Application,Landroid/graphics/Rect> > 3,
invokevirtual < Application, Lcom/android/server/wm/Task, getBounds(Landroid/graphics/Rect;)V > 2,26 @49 exception:27,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getDescendantTaskCount()I > 2 @52 exception:28,
30 = new <Primordial,[I>@5629 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskIds, <Primordial,[I> > = 30,
31 = new <Application,[Ljava/lang/String>@6029 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskNames, <Application,[Ljava/lang/String> > = 31,
32 = new <Application,[Landroid/graphics/Rect>@6429 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskBounds, <Application,[Landroid/graphics/Rect> > = 32,
33 = new <Primordial,[I>@6829 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskUserIds, <Primordial,[I> > = 33,
34 = new <Primordial,[I>@729 ,
arraystore 34[10] = 10,
35 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22>@76,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22, <init>()V > 35 @78 exception:36,
37 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 37 @83 exception:38,
41 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Lcom/android/internal/util/function/TriConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 35,39,3,34 @87 exception:40,
invokevirtual < Application, Lcom/android/server/wm/Task, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 2,41,10 @91 exception:42,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 41 @94 exception:43,
45 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 2 @97 exception:44,
conditional branch(eq, to iindex=-1) 45,10,
46 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 45,
48 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 46 @105 exception:47,
49 = phi  10,48,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, topActivity, <Application,Landroid/content/ComponentName> > = 49,
return 3,
goto (from iindex= 5 to iindex = 2),
9 = phi  8,6,
return 9,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @25 exception:24,
return 12,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	Task v1 = p0.getRootTask(p1, p2);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(int p1, int p2){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1, p2);
	return v3;
}
-----
depth : 2
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(Task p1){
	ActivityTaskManager$RootTaskInfo v0 = new ActivityTaskManager$RootTaskInfo();
	p1.fillTaskInfo(v0);
	DisplayContent v3 = p1.getDisplayContent();
	[I v3 = new [I(1);
	[Z v3 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v3 = new RootWindowContainer$$ExternalSyntheticLambda21(p1,v3,v3);
	boolean v5 = v3.forAllRootTasks(v3, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v6 = p1.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v6;
	p1.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v8 = p1.getDescendantTaskCount();
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v8;
	String v8 = new String(v8);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v8;
	Rect v8 = new Rect(v8);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v8;
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v8;
	[I v8 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v8 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	PooledConsumer v11 = PooledLambda.obtainConsumer(v8, v10, v0, v8);
	p1.forAllLeafTasks(v11, 0);
	v11.recycle();
	ActivityRecord v14 = p1.topRunningActivity();
	ComponentName v15 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	int v11 = RootWindowContainer.getChildCount();
	WindowContainer v12 = RootWindowContainer.getChildAt(phiInstruction);
	Task v13 = v12.getRootTask(p1, p2);
	Task v10 = v13;
	ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo();
	v10.fillTaskInfo(v15);
	DisplayContent v18 = v10.getDisplayContent();
	[I v19 = new [I(1);
	[Z v20 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v21 = new RootWindowContainer$$ExternalSyntheticLambda21(v10,v20,v19);
	boolean v23 = v18.forAllRootTasks(v21, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v24 = v10.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v24;
	v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v26 = v10.getDescendantTaskCount();
	[I v27 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v27;
	String v28 = new String(v26);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v28;
	Rect v29 = new Rect(v26);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v29;
	[I v30 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v30;
	[I v31 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v32 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v34 = PooledLambda.__(Tas.class);
	PooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31);
	v10.forAllLeafTasks(v35, 0);
	v35.recycle();
	ActivityRecord v38 = v10.topRunningActivity();
	ComponentName v39 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v14 = v15;
	ActivityTaskManager$RootTaskInfo v9 = phiInstruction;
	Binder.restoreCallingIdentity(v5);
	return v9;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @2 exception:5,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo; > 10,2,3 @17 exception:11,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(II)Lcom/android/server/wm/Task; > 1,2,3 @0 exception:4,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:4,
7 = binaryop(add) 5 , 6,
15 = phi  14,7,
conditional branch(lt, to iindex=-1) 15,8,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,15 @8 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/DisplayContent>10 <Application,Lcom/android/server/wm/DisplayContent>,
13 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(II)Lcom/android/server/wm/Task; > 11,2,3 @14 exception:12,
conditional branch(eq, to iindex=-1) 13,8,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,5 @6 exception:7,
3 = new <Application,Landroid/app/ActivityTaskManager$RootTaskInfo>@0,
invokespecial < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, <init>()V > 3 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/Task, fillTaskInfo(Landroid/app/TaskInfo;)V > 2,3 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,10,
11 = new <Primordial,[I>@209 ,
12 = new <Primordial,[Z>@229 ,
13 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21, <init>(Lcom/android/server/wm/Task;[Z[I)V > 13,2,12,11 @26 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Predicate;Z)Z > 7,13,10 @29 exception:15,
17 = arrayload 12[10],
conditional branch(eq, to iindex=-1) 17,10,
18 = arrayload 11[10],
19 = phi  8,18,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, position, <Primordial,I> > = 19,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z > 2,10 @41 exception:24,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, visible, <Primordial,Z> > = 25,
26 = getfield < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, bounds, <Application,Landroid/graphics/Rect> > 3,
invokevirtual < Application, Lcom/android/server/wm/Task, getBounds(Landroid/graphics/Rect;)V > 2,26 @49 exception:27,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getDescendantTaskCount()I > 2 @52 exception:28,
30 = new <Primordial,[I>@5629 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskIds, <Primordial,[I> > = 30,
31 = new <Application,[Ljava/lang/String>@6029 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskNames, <Application,[Ljava/lang/String> > = 31,
32 = new <Application,[Landroid/graphics/Rect>@6429 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskBounds, <Application,[Landroid/graphics/Rect> > = 32,
33 = new <Primordial,[I>@6829 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskUserIds, <Primordial,[I> > = 33,
34 = new <Primordial,[I>@729 ,
arraystore 34[10] = 10,
35 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22>@76,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22, <init>()V > 35 @78 exception:36,
37 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 37 @83 exception:38,
41 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Lcom/android/internal/util/function/TriConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 35,39,3,34 @87 exception:40,
invokevirtual < Application, Lcom/android/server/wm/Task, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 2,41,10 @91 exception:42,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 41 @94 exception:43,
45 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 2 @97 exception:44,
conditional branch(eq, to iindex=-1) 45,10,
46 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 45,
48 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 46 @105 exception:47,
49 = phi  10,48,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, topActivity, <Application,Landroid/content/ComponentName> > = 49,
return 3,
goto (from iindex= 5 to iindex = 2),
9 = phi  8,6,
return 9,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @25 exception:24,
return 12,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	Task v1 = p0.getRootTask(p1, p2);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(int p1, int p2){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1, p2);
	return v3;
}
-----
depth : 2
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(Task p1){
	ActivityTaskManager$RootTaskInfo v0 = new ActivityTaskManager$RootTaskInfo();
	p1.fillTaskInfo(v0);
	DisplayContent v3 = p1.getDisplayContent();
	[I v3 = new [I(1);
	[Z v3 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v3 = new RootWindowContainer$$ExternalSyntheticLambda21(p1,v3,v3);
	boolean v5 = v3.forAllRootTasks(v3, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v6 = p1.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v6;
	p1.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v8 = p1.getDescendantTaskCount();
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v8;
	String v8 = new String(v8);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v8;
	Rect v8 = new Rect(v8);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v8;
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v8;
	[I v8 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v8 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	PooledConsumer v11 = PooledLambda.obtainConsumer(v8, v10, v0, v8);
	p1.forAllLeafTasks(v11, 0);
	v11.recycle();
	ActivityRecord v14 = p1.topRunningActivity();
	ComponentName v15 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	int v12 = RootWindowContainer.getChildCount();
	WindowContainer v13 = RootWindowContainer.getChildAt(phiInstruction);
	Task v14 = v13.getRootTask(p1, p2);
	Task v11 = v14;
	ActivityTaskManager$RootTaskInfo v16 = new ActivityTaskManager$RootTaskInfo();
	v11.fillTaskInfo(v16);
	DisplayContent v19 = v11.getDisplayContent();
	[I v20 = new [I(1);
	[Z v21 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v22 = new RootWindowContainer$$ExternalSyntheticLambda21(v11,v21,v20);
	boolean v24 = v19.forAllRootTasks(v22, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v25 = v11.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v25;
	v11.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v27 = v11.getDescendantTaskCount();
	[I v28 = new [I(v27);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v28;
	String v29 = new String(v27);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v29;
	Rect v30 = new Rect(v27);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v30;
	[I v31 = new [I(v27);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v31;
	[I v32 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v33 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v35 = PooledLambda.__(Tas.class);
	PooledConsumer v36 = PooledLambda.obtainConsumer(v33, v35, v16, v32);
	v11.forAllLeafTasks(v36, 0);
	v36.recycle();
	ActivityRecord v39 = v11.topRunningActivity();
	ComponentName v40 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v15 = v16;
	ActivityTaskManager$RootTaskInfo v10 = phiInstruction;
	Binder.restoreCallingIdentity(v5);
	return v10;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @2 exception:5,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(II)Landroid/app/ActivityTaskManager$RootTaskInfo; > 10,2,3 @17 exception:11,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(II)Lcom/android/server/wm/Task; > 1,2,3 @0 exception:4,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:4,
7 = binaryop(add) 5 , 6,
15 = phi  14,7,
conditional branch(lt, to iindex=-1) 15,8,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,15 @8 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/DisplayContent>10 <Application,Lcom/android/server/wm/DisplayContent>,
13 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(II)Lcom/android/server/wm/Task; > 11,2,3 @14 exception:12,
conditional branch(eq, to iindex=-1) 13,8,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,5 @6 exception:7,
3 = new <Application,Landroid/app/ActivityTaskManager$RootTaskInfo>@0,
invokespecial < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, <init>()V > 3 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/Task, fillTaskInfo(Landroid/app/TaskInfo;)V > 2,3 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,10,
11 = new <Primordial,[I>@209 ,
12 = new <Primordial,[Z>@229 ,
13 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21, <init>(Lcom/android/server/wm/Task;[Z[I)V > 13,2,12,11 @26 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Predicate;Z)Z > 7,13,10 @29 exception:15,
17 = arrayload 12[10],
conditional branch(eq, to iindex=-1) 17,10,
18 = arrayload 11[10],
19 = phi  8,18,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, position, <Primordial,I> > = 19,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z > 2,10 @41 exception:24,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, visible, <Primordial,Z> > = 25,
26 = getfield < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, bounds, <Application,Landroid/graphics/Rect> > 3,
invokevirtual < Application, Lcom/android/server/wm/Task, getBounds(Landroid/graphics/Rect;)V > 2,26 @49 exception:27,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getDescendantTaskCount()I > 2 @52 exception:28,
30 = new <Primordial,[I>@5629 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskIds, <Primordial,[I> > = 30,
31 = new <Application,[Ljava/lang/String>@6029 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskNames, <Application,[Ljava/lang/String> > = 31,
32 = new <Application,[Landroid/graphics/Rect>@6429 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskBounds, <Application,[Landroid/graphics/Rect> > = 32,
33 = new <Primordial,[I>@6829 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskUserIds, <Primordial,[I> > = 33,
34 = new <Primordial,[I>@729 ,
arraystore 34[10] = 10,
35 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22>@76,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22, <init>()V > 35 @78 exception:36,
37 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 37 @83 exception:38,
41 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Lcom/android/internal/util/function/TriConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 35,39,3,34 @87 exception:40,
invokevirtual < Application, Lcom/android/server/wm/Task, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 2,41,10 @91 exception:42,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 41 @94 exception:43,
45 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 2 @97 exception:44,
conditional branch(eq, to iindex=-1) 45,10,
46 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 45,
48 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 46 @105 exception:47,
49 = phi  10,48,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, topActivity, <Application,Landroid/content/ComponentName> > = 49,
return 3,
goto (from iindex= 5 to iindex = 2),
9 = phi  8,6,
return 9,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @25 exception:24,
return 12,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	Task v1 = p0.getRootTask(p1, p2);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(int p1, int p2){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1, p2);
	return v3;
}
-----
depth : 2
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(Task p1){
	ActivityTaskManager$RootTaskInfo v0 = new ActivityTaskManager$RootTaskInfo();
	p1.fillTaskInfo(v0);
	DisplayContent v3 = p1.getDisplayContent();
	[I v3 = new [I(1);
	[Z v3 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v3 = new RootWindowContainer$$ExternalSyntheticLambda21(p1,v3,v3);
	boolean v5 = v3.forAllRootTasks(v3, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v6 = p1.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v6;
	p1.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v8 = p1.getDescendantTaskCount();
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v8;
	String v8 = new String(v8);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v8;
	Rect v8 = new Rect(v8);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v8;
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v8;
	[I v8 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v8 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	PooledConsumer v11 = PooledLambda.obtainConsumer(v8, v10, v0, v8);
	p1.forAllLeafTasks(v11, 0);
	v11.recycle();
	ActivityRecord v14 = p1.topRunningActivity();
	ComponentName v15 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	int v11 = RootWindowContainer.getChildCount();
	WindowContainer v12 = RootWindowContainer.getChildAt(phiInstruction);
	Task v13 = v12.getRootTask(p1, p2);
	Task v10 = v13;
	ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo();
	v10.fillTaskInfo(v15);
	DisplayContent v18 = v10.getDisplayContent();
	[I v19 = new [I(1);
	[Z v20 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v21 = new RootWindowContainer$$ExternalSyntheticLambda21(v10,v20,v19);
	boolean v23 = v18.forAllRootTasks(v21, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v24 = v10.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v24;
	v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v26 = v10.getDescendantTaskCount();
	[I v27 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v27;
	String v28 = new String(v26);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v28;
	Rect v29 = new Rect(v26);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v29;
	[I v30 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v30;
	[I v31 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v32 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v34 = PooledLambda.__(Tas.class);
	PooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31);
	v10.forAllLeafTasks(v35, 0);
	v35.recycle();
	ActivityRecord v38 = v10.topRunningActivity();
	ComponentName v39 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v14 = v15;
	ActivityTaskManager$RootTaskInfo v9 = phiInstruction;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v9;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setLockScreenShown(ZZ)V","0","6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:12,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @14 exception:13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > = 2,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10>@24,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10, <init>()V > 16 @26 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 2 @31 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @35 exception:21,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
25 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 23,22 @41 exception:24,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
31 = binaryop(and) 29 , 30,
conditional branch(eq, to iindex=-1) 31,7,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
34 = binaryop(and) 32 , 33,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > = 34,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
conditional branch(eq, to iindex=-1) 35,7,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, scheduleUpdateOomAdj()V > 36 @62 exception:37,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 40,41 @69 exception:42,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
44 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11>@74,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11, <init>(Lcom/android/server/wm/ActivityTaskManagerService;ZZ)V > 44,1,2,3 @76 exception:45,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 43,44 @79 exception:46,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 40 @82 exception:52,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @85 exception:53,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @89 exception:62,
63 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
64 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12>@94,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/ActivityTaskManagerService;Z)V > 64,1,2 @96 exception:65,
67 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 63,64 @99 exception:66,
return,","depth : 0
public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v5 = Boolean.valueOf(p1);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v9 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v9);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v14 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v16 = this.mH.post(v14);
	return;
}
-----
","public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v4 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v6 = Boolean.valueOf(p1);
	Message v7 = PooledLambda.obtainMessage(v4, this.mAmInternal, v6);
	boolean v8 = this.mH.sendMessage(v7);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v11 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v11);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v17 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v19 = this.mH.post(v17);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setLockScreenShown(ZZ)V","1","6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @14 exception:13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > = 2,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10>@24,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10, <init>()V > 16 @26 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 2 @31 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @35 exception:21,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
25 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 23,22 @41 exception:24,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
31 = binaryop(and) 29 , 30,
conditional branch(eq, to iindex=-1) 31,7,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
34 = binaryop(and) 32 , 33,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > = 34,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
conditional branch(eq, to iindex=-1) 35,7,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, scheduleUpdateOomAdj()V > 36 @62 exception:37,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mAtm, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 2,
4 = new <Application,Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda1>@4,
invokespecial < Application, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda1, <init>()V > 4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mListener, <Application,Lcom/android/server/wm/WindowProcessListener> > 1,
7 = getstatic < Application, Ljava/lang/Boolean, FALSE, <Application,Ljava/lang/Boolean> >,
8 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
10 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Lcom/android/internal/util/function/QuadConsumer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 4,6,7,7,8 @15 exception:9,
12 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 3,10 @19 exception:11,
return,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 40,41 @69 exception:42,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
44 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11>@74,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11, <init>(Lcom/android/server/wm/ActivityTaskManagerService;ZZ)V > 44,1,2,3 @76 exception:45,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 43,44 @79 exception:46,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 40 @82 exception:52,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @85 exception:53,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @89 exception:62,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
63 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
64 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12>@94,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/ActivityTaskManagerService;Z)V > 64,1,2 @96 exception:65,
67 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 63,64 @99 exception:66,
return,","depth : 0
public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v5 = Boolean.valueOf(p1);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v9 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v9);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v14 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v16 = this.mH.post(v14);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void scheduleUpdateOomAdj(){
	WindowProcessController$$ExternalSyntheticLambda1 v0 = new WindowProcessController$$ExternalSyntheticLambda1();
	Message v2 = PooledLambda.obtainMessage(v0, this.mListener, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE);
	boolean v3 = ActivityTaskManagerService.mH.sendMessage(v2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setLockScreenShown(boolean p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v5 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v7 = Boolean.valueOf(p1);
	Message v8 = PooledLambda.obtainMessage(v5, this.mAmInternal, v7);
	boolean v9 = this.mH.sendMessage(v8);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	WindowProcessController$$ExternalSyntheticLambda1 v11 = new WindowProcessController$$ExternalSyntheticLambda1();
	Message v13 = PooledLambda.obtainMessage(v11, this.mListener, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE);
	boolean v14 = ActivityTaskManagerService.mH.sendMessage(v13);
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v16 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v16);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v4);
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v23 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v25 = this.mH.post(v23);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setLockScreenShown(ZZ)V","1","6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @14 exception:13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,2,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
31 = binaryop(and) 29 , 30,
conditional branch(eq, to iindex=-1) 31,7,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
34 = binaryop(and) 32 , 33,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > = 34,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
conditional branch(eq, to iindex=-1) 35,7,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, scheduleUpdateOomAdj()V > 36 @62 exception:37,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mAtm, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 2,
4 = new <Application,Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda1>@4,
invokespecial < Application, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda1, <init>()V > 4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mListener, <Application,Lcom/android/server/wm/WindowProcessListener> > 1,
7 = getstatic < Application, Ljava/lang/Boolean, FALSE, <Application,Ljava/lang/Boolean> >,
8 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
10 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Lcom/android/internal/util/function/QuadConsumer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 4,6,7,7,8 @15 exception:9,
12 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 3,10 @19 exception:11,
return,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 40,41 @69 exception:42,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
44 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11>@74,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11, <init>(Lcom/android/server/wm/ActivityTaskManagerService;ZZ)V > 44,1,2,3 @76 exception:45,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 43,44 @79 exception:46,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 40 @82 exception:52,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @85 exception:53,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @89 exception:62,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
63 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
64 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12>@94,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/ActivityTaskManagerService;Z)V > 64,1,2 @96 exception:65,
67 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 63,64 @99 exception:66,
return,","depth : 0
public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v5 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v5);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v10 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v12 = this.mH.post(v10);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void scheduleUpdateOomAdj(){
	WindowProcessController$$ExternalSyntheticLambda1 v0 = new WindowProcessController$$ExternalSyntheticLambda1();
	Message v2 = PooledLambda.obtainMessage(v0, this.mListener, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE);
	boolean v3 = ActivityTaskManagerService.mH.sendMessage(v2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setLockScreenShown(boolean p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	WindowProcessController$$ExternalSyntheticLambda1 v6 = new WindowProcessController$$ExternalSyntheticLambda1();
	Message v8 = PooledLambda.obtainMessage(v6, this.mListener, Boolean.FALSE, Boolean.FALSE, Boolean.TRUE);
	boolean v9 = ActivityTaskManagerService.mH.sendMessage(v8);
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v11 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v11);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v4);
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v18 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v20 = this.mH.post(v18);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setLockScreenShown(ZZ)V","2","6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @14 exception:13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > = 2,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10>@24,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10, <init>()V > 16 @26 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 2 @31 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @35 exception:21,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
25 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 23,22 @41 exception:24,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
31 = binaryop(and) 29 , 30,
conditional branch(eq, to iindex=-1) 31,7,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
34 = binaryop(and) 32 , 33,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > = 34,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
conditional branch(eq, to iindex=-1) 35,7,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, scheduleUpdateOomAdj()V > 36 @62 exception:37,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 40,41 @69 exception:42,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
44 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11>@74,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11, <init>(Lcom/android/server/wm/ActivityTaskManagerService;ZZ)V > 44,1,2,3 @76 exception:45,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 43,44 @79 exception:46,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 40 @82 exception:52,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @85 exception:53,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @89 exception:62,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
63 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
64 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12>@94,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/ActivityTaskManagerService;Z)V > 64,1,2 @96 exception:65,
67 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 63,64 @99 exception:66,
return,","depth : 0
public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v5 = Boolean.valueOf(p1);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v9 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v9);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v14 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v16 = this.mH.post(v14);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setLockScreenShown(boolean p1, boolean p2){
	long v5 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v6 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v8 = Boolean.valueOf(p1);
	Message v9 = PooledLambda.obtainMessage(v6, this.mAmInternal, v8);
	boolean v10 = this.mH.sendMessage(v9);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v13 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v13);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v5);
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v21 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v23 = this.mH.post(v21);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setLockScreenShown(ZZ)V","2","6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @14 exception:13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > = 2,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10>@24,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10, <init>()V > 16 @26 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 2 @31 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @35 exception:21,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
25 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 23,22 @41 exception:24,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
31 = binaryop(and) 29 , 30,
conditional branch(eq, to iindex=-1) 31,7,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
34 = binaryop(and) 32 , 33,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > = 34,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
conditional branch(eq, to iindex=-1) 35,7,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, scheduleUpdateOomAdj()V > 36 @62 exception:37,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 40,41 @69 exception:42,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
44 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11>@74,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11, <init>(Lcom/android/server/wm/ActivityTaskManagerService;ZZ)V > 44,1,2,3 @76 exception:45,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 43,44 @79 exception:46,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 40 @82 exception:52,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @85 exception:53,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @89 exception:62,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
63 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
64 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12>@94,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/ActivityTaskManagerService;Z)V > 64,1,2 @96 exception:65,
67 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 63,64 @99 exception:66,
return,","depth : 0
public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v5 = Boolean.valueOf(p1);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v9 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v9);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v14 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v16 = this.mH.post(v14);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerThreadPriorityBooster.boost();
	long v6 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v7 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v9 = Boolean.valueOf(p1);
	Message v10 = PooledLambda.obtainMessage(v7, this.mAmInternal, v9);
	boolean v11 = this.mH.sendMessage(v10);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v14 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v14);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v6);
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v22 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v24 = this.mH.post(v22);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setLockScreenShown(ZZ)V","2","6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
14 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @14 exception:13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > = 2,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10>@24,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda10, <init>()V > 16 @26 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 2 @31 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @35 exception:21,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
25 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 23,22 @41 exception:24,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
31 = binaryop(and) 29 , 30,
conditional branch(eq, to iindex=-1) 31,7,
32 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
34 = binaryop(and) 32 , 33,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > = 34,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
conditional branch(eq, to iindex=-1) 35,7,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTopApp, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, scheduleUpdateOomAdj()V > 36 @62 exception:37,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 40,41 @69 exception:42,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
44 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11>@74,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda11, <init>(Lcom/android/server/wm/ActivityTaskManagerService;ZZ)V > 44,1,2,3 @76 exception:45,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 43,44 @79 exception:46,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 40 @82 exception:52,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 14 @85 exception:53,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @89 exception:62,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
63 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
64 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12>@94,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda12, <init>(Lcom/android/server/wm/ActivityTaskManagerService;Z)V > 64,1,2 @96 exception:65,
67 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 63,64 @99 exception:66,
return,","depth : 0
public void setLockScreenShown(boolean p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v5 = Boolean.valueOf(p1);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v9 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v9);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v14 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v16 = this.mH.post(v14);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setLockScreenShown(boolean p1, boolean p2){
	long v5 = Binder.clearCallingIdentity();
	this.mKeyguardShown = p1;
	ActivityTaskManagerService$$ExternalSyntheticLambda10 v6 = new ActivityTaskManagerService$$ExternalSyntheticLambda10();
	Boolean v8 = Boolean.valueOf(p1);
	Message v9 = PooledLambda.obtainMessage(v6, this.mAmInternal, v8);
	boolean v10 = this.mH.sendMessage(v9);
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons & -2);
	this.mTopApp.scheduleUpdateOomAdj();
	Trace.traceBegin(32, ""setLockScreenShown"");
	ActivityTaskManagerService$$ExternalSyntheticLambda11 v13 = new ActivityTaskManagerService$$ExternalSyntheticLambda11(p0,p1,p2);
	this.mRootWindowContainer.forAllDisplays(v13);
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v5);
	WindowManagerThreadPriorityBooster.reset();
	ActivityTaskManagerService$$ExternalSyntheticLambda12 v22 = new ActivityTaskManagerService$$ExternalSyntheticLambda12(p0,p1);
	boolean v24 = this.mH.post(v22);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V","0","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:10,
invokevirtual < Application, Landroid/view/RemoteAnimationDefinition, setCallingPidUid(II)V > 3,9,11 @17 exception:12,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @23 exception:14,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 15,2 @28 exception:16,
conditional branch(ne, to iindex=-1) 17,18,
27 = new <Application,Ljava/lang/StringBuilder>@36,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @38 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @43 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 27,2 @46 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @49 exception:34,
37 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,35 @53 exception:36,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:47,
return,","depth : 0
public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	p2.setCallingPidUid(v2, v3);
	WindowManagerService.boostPriorityForLockedSection();
	DisplayContent v6 = this.mRootWindowContainer.getDisplayContent(p1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Couldn't find display with id: "");
	StringBuilder v9 = v6.append(p1);
	String v10 = v6.toString();
	int v11 = Slog.e(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	p2.setCallingPidUid(v2, v3);
	WindowManagerService.boostPriorityForLockedSection();
	DisplayContent v6 = this.mRootWindowContainer.getDisplayContent(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:10,
invokevirtual < Application, Landroid/view/RemoteAnimationDefinition, setCallingPidUid(II)V > 3,9,11 @17 exception:12,
4 = getfield < Application, Landroid/view/RemoteAnimationDefinition, mTransitionAnimationMap, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @2 exception:5,
8 = binaryop(add) 6 , 7,
17 = phi  16,8,
conditional branch(lt, to iindex=-1) 17,9,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @23 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 15,2 @28 exception:16,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 17,18,
20 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @61 exception:19,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, registerRemoteAnimations(Landroid/view/RemoteAnimationDefinition;)V > 17,3 @65 exception:21,
3 = getfield < Application, Lcom/android/server/wm/DisplayContent, mAppTransitionController, <Application,Lcom/android/server/wm/AppTransitionController> > 1,
invokevirtual < Application, Lcom/android/server/wm/AppTransitionController, registerRemoteAnimations(Landroid/view/RemoteAnimationDefinition;)V > 3,2 @2 exception:4,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 20 @68 exception:24,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @72 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	p2.setCallingPidUid(v2, v3);
	WindowManagerService.boostPriorityForLockedSection();
	DisplayContent v6 = this.mRootWindowContainer.getDisplayContent(p1);
	long v7 = Binder.clearCallingIdentity();
	v6.registerRemoteAnimations(p2);
	Binder.restoreCallingIdentity(v7);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void setCallingPidUid(int p1, int p2){
	int v1 = this.mTransitionAnimationMap.size();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 1
public void registerRemoteAnimations(RemoteAnimationDefinition p1){
	this.mAppTransitionController.registerRemoteAnimations(p1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v5 = this.mTransitionAnimationMap.size();
	this.sThreadPriorityBooster.boost();
	int v9 = RootWindowContainer.getChildCount();
	DisplayContent v8 = 0;
	long v10 = Binder.clearCallingIdentity();
	this.mAppTransitionController.registerRemoteAnimations(p2);
	Binder.restoreCallingIdentity(v10);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:10,
invokevirtual < Application, Landroid/view/RemoteAnimationDefinition, setCallingPidUid(II)V > 3,9,11 @17 exception:12,
4 = getfield < Application, Landroid/view/RemoteAnimationDefinition, mTransitionAnimationMap, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @2 exception:5,
8 = binaryop(add) 6 , 7,
17 = phi  16,8,
conditional branch(lt, to iindex=-1) 17,9,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @23 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 15,2 @28 exception:16,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 17,18,
27 = new <Application,Ljava/lang/StringBuilder>@36,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @38 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @43 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 27,2 @46 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @49 exception:34,
37 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 26,35 @53 exception:36,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:47,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	p2.setCallingPidUid(v2, v3);
	WindowManagerService.boostPriorityForLockedSection();
	DisplayContent v6 = this.mRootWindowContainer.getDisplayContent(p1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Couldn't find display with id: "");
	StringBuilder v9 = v6.append(p1);
	String v10 = v6.toString();
	int v11 = Slog.e(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void setCallingPidUid(int p1, int p2){
	int v1 = this.mTransitionAnimationMap.size();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v5 = this.mTransitionAnimationMap.size();
	this.sThreadPriorityBooster.boost();
	int v9 = RootWindowContainer.getChildCount();
	DisplayContent v8 = 0;
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:10,
invokevirtual < Application, Landroid/view/RemoteAnimationDefinition, setCallingPidUid(II)V > 3,9,11 @17 exception:12,
4 = getfield < Application, Landroid/view/RemoteAnimationDefinition, mTransitionAnimationMap, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @2 exception:5,
8 = binaryop(add) 6 , 7,
17 = phi  16,8,
conditional branch(lt, to iindex=-1) 17,9,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @23 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 15,2 @28 exception:16,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 17,18,
20 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @61 exception:19,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, registerRemoteAnimations(Landroid/view/RemoteAnimationDefinition;)V > 17,3 @65 exception:21,
3 = getfield < Application, Lcom/android/server/wm/DisplayContent, mAppTransitionController, <Application,Lcom/android/server/wm/AppTransitionController> > 1,
invokevirtual < Application, Lcom/android/server/wm/AppTransitionController, registerRemoteAnimations(Landroid/view/RemoteAnimationDefinition;)V > 3,2 @2 exception:4,
putfield 1.< Application, Lcom/android/server/wm/AppTransitionController, mRemoteAnimationDefinition, <Application,Landroid/view/RemoteAnimationDefinition> > = 2,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 20 @68 exception:24,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @72 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	p2.setCallingPidUid(v2, v3);
	WindowManagerService.boostPriorityForLockedSection();
	DisplayContent v6 = this.mRootWindowContainer.getDisplayContent(p1);
	long v7 = Binder.clearCallingIdentity();
	v6.registerRemoteAnimations(p2);
	Binder.restoreCallingIdentity(v7);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void setCallingPidUid(int p1, int p2){
	int v1 = this.mTransitionAnimationMap.size();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 1
public void registerRemoteAnimations(RemoteAnimationDefinition p1){
	this.mAppTransitionController.registerRemoteAnimations(p1);
	return;
}
-----
depth : 2
public void registerRemoteAnimations(RemoteAnimationDefinition p1){
	this.mRemoteAnimationDefinition = p1;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v5 = this.mTransitionAnimationMap.size();
	int v11 = this.mChildren.size();
	int v10 = v11;
	DisplayContent v9 = 0;
	long v12 = Binder.clearCallingIdentity();
	this.mRemoteAnimationDefinition = p1;
	Binder.restoreCallingIdentity(v12);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:10,
invokevirtual < Application, Landroid/view/RemoteAnimationDefinition, setCallingPidUid(II)V > 3,9,11 @17 exception:12,
4 = getfield < Application, Landroid/view/RemoteAnimationDefinition, mTransitionAnimationMap, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @2 exception:5,
8 = binaryop(add) 6 , 7,
17 = phi  16,8,
conditional branch(lt, to iindex=-1) 17,9,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @23 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 15,2 @28 exception:16,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 17,18,
20 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @61 exception:19,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, registerRemoteAnimations(Landroid/view/RemoteAnimationDefinition;)V > 17,3 @65 exception:21,
3 = getfield < Application, Lcom/android/server/wm/DisplayContent, mAppTransitionController, <Application,Lcom/android/server/wm/AppTransitionController> > 1,
invokevirtual < Application, Lcom/android/server/wm/AppTransitionController, registerRemoteAnimations(Landroid/view/RemoteAnimationDefinition;)V > 3,2 @2 exception:4,
putfield 1.< Application, Lcom/android/server/wm/AppTransitionController, mRemoteAnimationDefinition, <Application,Landroid/view/RemoteAnimationDefinition> > = 2,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 20 @68 exception:24,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @72 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	p2.setCallingPidUid(v2, v3);
	WindowManagerService.boostPriorityForLockedSection();
	DisplayContent v6 = this.mRootWindowContainer.getDisplayContent(p1);
	long v7 = Binder.clearCallingIdentity();
	v6.registerRemoteAnimations(p2);
	Binder.restoreCallingIdentity(v7);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void setCallingPidUid(int p1, int p2){
	int v1 = this.mTransitionAnimationMap.size();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 1
public void registerRemoteAnimations(RemoteAnimationDefinition p1){
	this.mAppTransitionController.registerRemoteAnimations(p1);
	return;
}
-----
depth : 2
public void registerRemoteAnimations(RemoteAnimationDefinition p1){
	this.mRemoteAnimationDefinition = p1;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v5 = this.mTransitionAnimationMap.size();
	WindowManagerThreadPriorityBooster.boost();
	int v12 = this.mChildren.size();
	int v11 = v12;
	DisplayContent v10 = 0;
	long v13 = Binder.clearCallingIdentity();
	this.mRemoteAnimationDefinition = p1;
	Binder.restoreCallingIdentity(v13);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","registerRemoteAnimationsForDisplay(ILandroid/view/RemoteAnimationDefinition;)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:10,
invokevirtual < Application, Landroid/view/RemoteAnimationDefinition, setCallingPidUid(II)V > 3,9,11 @17 exception:12,
4 = getfield < Application, Landroid/view/RemoteAnimationDefinition, mTransitionAnimationMap, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @2 exception:5,
8 = binaryop(add) 6 , 7,
17 = phi  16,8,
conditional branch(lt, to iindex=-1) 17,9,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @23 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
17 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 15,2 @28 exception:16,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 17,18,
20 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @61 exception:19,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, registerRemoteAnimations(Landroid/view/RemoteAnimationDefinition;)V > 17,3 @65 exception:21,
3 = getfield < Application, Lcom/android/server/wm/DisplayContent, mAppTransitionController, <Application,Lcom/android/server/wm/AppTransitionController> > 1,
invokevirtual < Application, Lcom/android/server/wm/AppTransitionController, registerRemoteAnimations(Landroid/view/RemoteAnimationDefinition;)V > 3,2 @2 exception:4,
putfield 1.< Application, Lcom/android/server/wm/AppTransitionController, mRemoteAnimationDefinition, <Application,Landroid/view/RemoteAnimationDefinition> > = 2,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 20 @68 exception:24,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @72 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	p2.setCallingPidUid(v2, v3);
	WindowManagerService.boostPriorityForLockedSection();
	DisplayContent v6 = this.mRootWindowContainer.getDisplayContent(p1);
	long v7 = Binder.clearCallingIdentity();
	v6.registerRemoteAnimations(p2);
	Binder.restoreCallingIdentity(v7);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void setCallingPidUid(int p1, int p2){
	int v1 = this.mTransitionAnimationMap.size();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 1
public void registerRemoteAnimations(RemoteAnimationDefinition p1){
	this.mAppTransitionController.registerRemoteAnimations(p1);
	return;
}
-----
depth : 2
public void registerRemoteAnimations(RemoteAnimationDefinition p1){
	this.mRemoteAnimationDefinition = p1;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void registerRemoteAnimationsForDisplay(int p1, RemoteAnimationDefinition p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	int v5 = this.mTransitionAnimationMap.size();
	int v11 = this.mChildren.size();
	int v10 = v11;
	DisplayContent v9 = 0;
	long v12 = Binder.clearCallingIdentity();
	this.mRemoteAnimationDefinition = p1;
	Binder.restoreCallingIdentity(v12);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskPackages(I[Ljava/lang/String;)V","0","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/util/Arrays, toString([Ljava/lang/Object;)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskPackages(I[Ljava/lang/String;)V > 35,2,3 @64 exception:36,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
return,","depth : 0
public void updateLockTaskPackages(int p1, String p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Arrays.toString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskPackages(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void updateLockTaskPackages(int p1, String p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Arrays.toString(p2);
	String v5 = String.valueOf(v4);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v6);
	LockTaskController v9 = p0.getLockTaskController();
	v9.updateLockTaskPackages(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskPackages(I[Ljava/lang/String;)V","1","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/util/Arrays, toString([Ljava/lang/Object;)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskPackages(I[Ljava/lang/String;)V > 35,2,3 @64 exception:36,
4 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskPackages, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 4,2,3 @2 exception:5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 6 @7 exception:7,
10 = binaryop(sub) 8 , 9,
54 = phi  45,11,
55 = phi  53,10,
conditional branch(lt, to iindex=-1) 55,11,
58 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
59 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 58,
60 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0>@108,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0, <init>()V > 60 @110 exception:61,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllTasks(Ljava/util/function/Consumer;)V > 59,60 @113 exception:62,
63 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
64 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 63,
66 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 64 @120 exception:65,
conditional branch(eq, to iindex=-1) 66,11,
68 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 66 @126 exception:67,
goto (from iindex= 70 to iindex = 2),
69 = phi  68,11,
72 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
74 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 72 @134 exception:73,
conditional branch(eq, to iindex=-1) 74,11,
conditional branch(eq, to iindex=-1) 69,11,
75 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 69,
conditional branch(ne, to iindex=-1) 75,12,
77 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 77,11,
79 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 69 @150 exception:78,
80 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
82 = new <Application,[Ljava/lang/Object>@1599 ,
arraystore 82[11] = 79,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 80,81,11,11,82 @163 exception:83,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, setLockTaskMode(Lcom/android/server/wm/Task;ILjava/lang/String;Z)V > 1,69,9,90,11 @168 exception:91,
goto (from iindex= 90 to iindex = 2),
92 = phi  9,54,
conditional branch(eq, to iindex=-1) 92,11,
99 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
100 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 99,
102 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 100 @179 exception:101,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void updateLockTaskPackages(int p1, String p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Arrays.toString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskPackages(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 1
public void updateLockTaskPackages(int p1, String p2){
	this.mLockTaskPackages.put(p1, p2);
	int v2 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v2 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v2);
	ActivityRecord v5 = ActivityTaskSupervisor.mRootWindowContainer.topRunningActivity();
	Task v6 = v5.getTask();
	boolean v7 = this.mLockTaskModeTasks.isEmpty();
	String v8 = String.valueOf(phiInstruction);
	Object v8 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v8);
	p0.setLockTaskMode(phiInstruction, 1, ""package updated"", 0);
	boolean v11 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void updateLockTaskPackages(int p1, String p2){
	this.sThreadPriorityBooster.boost();
	String v5 = Arrays.toString(p2);
	String v6 = String.valueOf(v5);
	Object v7 = new Object(2);
	Long v8 = Long.valueOf(p1);
	ProtoLogImpl v10 = ProtoLogImpl.getSingleInstance();
	v10.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v7);
	LockTaskController v12 = this.mLockTaskController;
	this.mLockTaskPackages.put(p1, p2);
	int v15 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v16 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v16);
	ActivityRecord v19 = ActivityTaskSupervisor.mRootWindowContainer.topRunningActivity();
	Task v20 = v19.getTask();
	boolean v21 = this.mLockTaskModeTasks.isEmpty();
	String v22 = String.valueOf(phiInstruction);
	Object v23 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v23);
	LockTaskController.setLockTaskMode(phiInstruction, 1, ""package updated"", 0);
	boolean v26 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskPackages(I[Ljava/lang/String;)V","1","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/util/Arrays, toString([Ljava/lang/Object;)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskPackages(I[Ljava/lang/String;)V > 35,2,3 @64 exception:36,
4 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskPackages, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 4,2,3 @2 exception:5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 6 @7 exception:7,
10 = binaryop(sub) 8 , 9,
54 = phi  45,11,
55 = phi  53,10,
conditional branch(lt, to iindex=-1) 55,11,
58 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
59 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 58,
60 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0>@108,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0, <init>()V > 60 @110 exception:61,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllTasks(Ljava/util/function/Consumer;)V > 59,60 @113 exception:62,
63 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
64 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 63,
66 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 64 @120 exception:65,
conditional branch(eq, to iindex=-1) 66,11,
68 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 66 @126 exception:67,
goto (from iindex= 70 to iindex = 2),
69 = phi  68,11,
72 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
74 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 72 @134 exception:73,
conditional branch(eq, to iindex=-1) 74,11,
conditional branch(eq, to iindex=-1) 69,11,
75 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 69,
conditional branch(ne, to iindex=-1) 75,12,
77 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 77,11,
79 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 69 @150 exception:78,
80 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
82 = new <Application,[Ljava/lang/Object>@1599 ,
arraystore 82[11] = 79,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 80,81,11,11,82 @163 exception:83,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, setLockTaskMode(Lcom/android/server/wm/Task;ILjava/lang/String;Z)V > 1,69,9,90,11 @168 exception:91,
goto (from iindex= 90 to iindex = 2),
92 = phi  9,54,
conditional branch(eq, to iindex=-1) 92,11,
99 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
100 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 99,
102 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 100 @179 exception:101,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void updateLockTaskPackages(int p1, String p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v3 = Arrays.toString(p2);
	String v4 = String.valueOf(v3);
	Object v4 = new Object(2);
	Long v5 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v4);
	LockTaskController v7 = p0.getLockTaskController();
	v7.updateLockTaskPackages(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 1
public void updateLockTaskPackages(int p1, String p2){
	this.mLockTaskPackages.put(p1, p2);
	int v2 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v2 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v2);
	ActivityRecord v5 = ActivityTaskSupervisor.mRootWindowContainer.topRunningActivity();
	Task v6 = v5.getTask();
	boolean v7 = this.mLockTaskModeTasks.isEmpty();
	String v8 = String.valueOf(phiInstruction);
	Object v8 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v8);
	p0.setLockTaskMode(phiInstruction, 1, ""package updated"", 0);
	boolean v11 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void updateLockTaskPackages(int p1, String p2){
	this.sThreadPriorityBooster.boost();
	String v4 = Arrays.toString(p2);
	String v5 = String.valueOf(v4);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p1);
	ProtoLogImpl v9 = ProtoLogImpl.getSingleInstance();
	v9.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v6);
	LockTaskController v11 = this.mLockTaskController;
	this.mLockTaskPackages.put(p1, p2);
	int v14 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v15 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v15);
	ActivityRecord v18 = ActivityTaskSupervisor.mRootWindowContainer.topRunningActivity();
	Task v19 = v18.getTask();
	boolean v20 = this.mLockTaskModeTasks.isEmpty();
	String v21 = String.valueOf(phiInstruction);
	Object v22 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v22);
	LockTaskController.setLockTaskMode(phiInstruction, 1, ""package updated"", 0);
	boolean v25 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskPackages(I[Ljava/lang/String;)V","2","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/util/Arrays, toString([Ljava/lang/Object;)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskPackages(I[Ljava/lang/String;)V > 35,2,3 @64 exception:36,
4 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskPackages, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 4,2,3 @2 exception:5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 6 @7 exception:7,
10 = binaryop(sub) 8 , 9,
54 = phi  45,11,
55 = phi  53,10,
conditional branch(lt, to iindex=-1) 55,11,
58 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
59 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 58,
60 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0>@108,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0, <init>()V > 60 @110 exception:61,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllTasks(Ljava/util/function/Consumer;)V > 59,60 @113 exception:62,
63 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
64 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 63,
66 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 64 @120 exception:65,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
conditional branch(eq, to iindex=-1) 66,11,
68 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 66 @126 exception:67,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
goto (from iindex= 70 to iindex = 2),
69 = phi  68,11,
72 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
74 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 72 @134 exception:73,
conditional branch(eq, to iindex=-1) 74,11,
conditional branch(eq, to iindex=-1) 69,11,
75 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 69,
conditional branch(ne, to iindex=-1) 75,12,
77 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 77,11,
79 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 69 @150 exception:78,
80 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
82 = new <Application,[Ljava/lang/Object>@1599 ,
arraystore 82[11] = 79,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 80,81,11,11,82 @163 exception:83,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, setLockTaskMode(Lcom/android/server/wm/Task;ILjava/lang/String;Z)V > 1,69,9,90,11 @168 exception:91,
6 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 6,7,
89 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 89,7,
90 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 90,91,7,7,7 @15 exception:92,
return,
goto (from iindex= 90 to iindex = 2),
92 = phi  9,54,
conditional branch(eq, to iindex=-1) 92,11,
99 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
100 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 99,
102 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 100 @179 exception:101,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void updateLockTaskPackages(int p1, String p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Arrays.toString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskPackages(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void updateLockTaskPackages(int p1, String p2){
	this.mLockTaskPackages.put(p1, p2);
	int v2 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v2 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v2);
	ActivityRecord v5 = ActivityTaskSupervisor.mRootWindowContainer.topRunningActivity();
	Task v6 = v5.getTask();
	boolean v7 = this.mLockTaskModeTasks.isEmpty();
	String v8 = String.valueOf(phiInstruction);
	Object v8 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v8);
	p0.setLockTaskMode(phiInstruction, 1, ""package updated"", 0);
	boolean v11 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	return;
}
-----
depth : 2
public ActivityRecord topRunningActivity(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	ActivityRecord v3 = v2.topRunningActivity();
	return v3;
}
-----
depth : 2
public Task getTask(){
	return this.task;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void setLockTaskMode(Task p1, int p2, String p3, boolean p4){
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 950074526, 0, 0, 0);
	return;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void updateLockTaskPackages(int p1, String p2){
	String v6 = Arrays.toString(p2);
	String v7 = String.valueOf(v6);
	Object v8 = new Object(2);
	Long v9 = Long.valueOf(p1);
	ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
	File v13 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v12;
	ProtoLogImpl v11 = this.sServiceInstance;
	boolean v19 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v21 = p1.isLogToLogcat();
	String v22 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v24 = p0.getLockTaskController();
	this.mLockTaskPackages.put(p1, p2);
	int v27 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v28 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v28);
	int v32 = RootWindowContainer.getChildCount();
	WindowContainer v33 = RootWindowContainer.getChildAt(phiInstruction);
	ActivityRecord v34 = v33.topRunningActivity();
	ActivityRecord v31 = v34;
	Task v35 = this.task;
	boolean v36 = this.mLockTaskModeTasks.isEmpty();
	String v37 = String.valueOf(phiInstruction);
	Object v38 = new Object(1);
	ProtoLogImpl v40 = ProtoLogImpl.getSingleInstance();
	v40.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v38);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 950074526, 0, 0, 0);
	boolean v45 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v44 = v45;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskPackages(I[Ljava/lang/String;)V","2","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/util/Arrays, toString([Ljava/lang/Object;)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskPackages(I[Ljava/lang/String;)V > 35,2,3 @64 exception:36,
4 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskPackages, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 4,2,3 @2 exception:5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 6 @7 exception:7,
10 = binaryop(sub) 8 , 9,
54 = phi  45,11,
55 = phi  53,10,
conditional branch(lt, to iindex=-1) 55,11,
58 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
59 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 58,
60 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0>@108,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0, <init>()V > 60 @110 exception:61,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllTasks(Ljava/util/function/Consumer;)V > 59,60 @113 exception:62,
63 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
64 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 63,
66 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 64 @120 exception:65,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
conditional branch(eq, to iindex=-1) 66,11,
68 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 66 @126 exception:67,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
goto (from iindex= 70 to iindex = 2),
69 = phi  68,11,
72 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
74 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 72 @134 exception:73,
conditional branch(eq, to iindex=-1) 74,11,
conditional branch(eq, to iindex=-1) 69,11,
75 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 69,
conditional branch(ne, to iindex=-1) 75,12,
77 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 77,11,
79 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 69 @150 exception:78,
80 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
82 = new <Application,[Ljava/lang/Object>@1599 ,
arraystore 82[11] = 79,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 80,81,11,11,82 @163 exception:83,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, setLockTaskMode(Lcom/android/server/wm/Task;ILjava/lang/String;Z)V > 1,69,9,90,11 @168 exception:91,
6 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 6,7,
89 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 89,7,
90 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 90,91,7,7,7 @15 exception:92,
return,
goto (from iindex= 90 to iindex = 2),
92 = phi  9,54,
conditional branch(eq, to iindex=-1) 92,11,
99 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
100 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 99,
102 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 100 @179 exception:101,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void updateLockTaskPackages(int p1, String p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Arrays.toString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskPackages(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void updateLockTaskPackages(int p1, String p2){
	this.mLockTaskPackages.put(p1, p2);
	int v2 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v2 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v2);
	ActivityRecord v5 = ActivityTaskSupervisor.mRootWindowContainer.topRunningActivity();
	Task v6 = v5.getTask();
	boolean v7 = this.mLockTaskModeTasks.isEmpty();
	String v8 = String.valueOf(phiInstruction);
	Object v8 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v8);
	p0.setLockTaskMode(phiInstruction, 1, ""package updated"", 0);
	boolean v11 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	return;
}
-----
depth : 2
public ActivityRecord topRunningActivity(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	ActivityRecord v3 = v2.topRunningActivity();
	return v3;
}
-----
depth : 2
public Task getTask(){
	return this.task;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void setLockTaskMode(Task p1, int p2, String p3, boolean p4){
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 950074526, 0, 0, 0);
	return;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void updateLockTaskPackages(int p1, String p2){
	WindowManagerThreadPriorityBooster.boost();
	String v7 = Arrays.toString(p2);
	String v8 = String.valueOf(v7);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p1);
	ProtoLogImpl v13 = new ProtoLogImpl(v14,1048576,v16);
	File v14 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v16 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v13;
	ProtoLogImpl v12 = this.sServiceInstance;
	boolean v20 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v22 = p1.isLogToLogcat();
	String v23 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v23, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v25 = p0.getLockTaskController();
	this.mLockTaskPackages.put(p1, p2);
	int v28 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v29 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v29);
	int v33 = RootWindowContainer.getChildCount();
	WindowContainer v34 = RootWindowContainer.getChildAt(phiInstruction);
	ActivityRecord v35 = v34.topRunningActivity();
	ActivityRecord v32 = v35;
	Task v36 = this.task;
	boolean v37 = this.mLockTaskModeTasks.isEmpty();
	String v38 = String.valueOf(phiInstruction);
	Object v39 = new Object(1);
	ProtoLogImpl v41 = ProtoLogImpl.getSingleInstance();
	v41.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v39);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 950074526, 0, 0, 0);
	boolean v46 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v45 = v46;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateLockTaskPackages(I[Ljava/lang/String;)V","2","5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 8,9,10 @16 exception:11,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @22 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
17 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 17,6,
18 = conversion(J) 2,
20 = invokestatic < Application, Ljava/util/Arrays, toString([Ljava/lang/Object;)Ljava/lang/String; > 3 @30 exception:19,
22 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 20 @34 exception:21,
23 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
26 = new <Application,[Ljava/lang/Object>@4525 ,
28 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 18 @48 exception:27,
arraystore 26[6] = 28,
arraystore 26[29] = 22,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 23,24,29,6,26 @57 exception:30,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @60 exception:34,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, updateLockTaskPackages(I[Ljava/lang/String;)V > 35,2,3 @64 exception:36,
4 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskPackages, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 4,2,3 @2 exception:5,
6 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 6 @7 exception:7,
10 = binaryop(sub) 8 , 9,
54 = phi  45,11,
55 = phi  53,10,
conditional branch(lt, to iindex=-1) 55,11,
58 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
59 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 58,
60 = new <Application,Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0>@108,
invokespecial < Application, Lcom/android/server/wm/LockTaskController$$ExternalSyntheticLambda0, <init>()V > 60 @110 exception:61,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllTasks(Ljava/util/function/Consumer;)V > 59,60 @113 exception:62,
63 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
64 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 63,
66 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 64 @120 exception:65,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
conditional branch(eq, to iindex=-1) 66,11,
68 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 66 @126 exception:67,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
goto (from iindex= 70 to iindex = 2),
69 = phi  68,11,
72 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
74 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 72 @134 exception:73,
conditional branch(eq, to iindex=-1) 74,11,
conditional branch(eq, to iindex=-1) 69,11,
75 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 69,
conditional branch(ne, to iindex=-1) 75,12,
77 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 77,11,
79 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 69 @150 exception:78,
80 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
82 = new <Application,[Ljava/lang/Object>@1599 ,
arraystore 82[11] = 79,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 80,81,11,11,82 @163 exception:83,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, setLockTaskMode(Lcom/android/server/wm/Task;ILjava/lang/String;Z)V > 1,69,9,90,11 @168 exception:91,
6 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskAuth, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 6,7,
89 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_LOCKTASK_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 89,7,
90 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_LOCKTASK, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 90,91,7,7,7 @15 exception:92,
return,
goto (from iindex= 90 to iindex = 2),
92 = phi  9,54,
conditional branch(eq, to iindex=-1) 92,11,
99 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
100 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 99,
102 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 100 @179 exception:101,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
return,
monitorexit 15,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:44,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void updateLockTaskPackages(int p1, String p2){
	WindowManagerService.boostPriorityForLockedSection();
	String v4 = Arrays.toString(p2);
	String v5 = String.valueOf(v4);
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 715749922, 1, 0, v5);
	LockTaskController v8 = p0.getLockTaskController();
	v8.updateLockTaskPackages(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void updateLockTaskPackages(int p1, String p2){
	this.mLockTaskPackages.put(p1, p2);
	int v2 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v2 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v2);
	ActivityRecord v5 = ActivityTaskSupervisor.mRootWindowContainer.topRunningActivity();
	Task v6 = v5.getTask();
	boolean v7 = this.mLockTaskModeTasks.isEmpty();
	String v8 = String.valueOf(phiInstruction);
	Object v8 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v8);
	p0.setLockTaskMode(phiInstruction, 1, ""package updated"", 0);
	boolean v11 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	return;
}
-----
depth : 2
public ActivityRecord topRunningActivity(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	ActivityRecord v3 = v2.topRunningActivity();
	return v3;
}
-----
depth : 2
public Task getTask(){
	return this.task;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void setLockTaskMode(Task p1, int p2, String p3, boolean p4){
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 950074526, 0, 0, 0);
	return;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void updateLockTaskPackages(int p1, String p2){
	String v6 = Arrays.toString(p2);
	String v7 = String.valueOf(v6);
	Object v8 = new Object(2);
	Long v9 = Long.valueOf(p1);
	ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
	File v13 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v12;
	ProtoLogImpl v11 = this.sServiceInstance;
	boolean v19 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v21 = p1.isLogToLogcat();
	String v22 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.WARN, p2, p4, p5);
	LockTaskController v24 = p0.getLockTaskController();
	this.mLockTaskPackages.put(p1, p2);
	int v27 = this.mLockTaskModeTasks.size();
	LockTaskController$$ExternalSyntheticLambda0 v28 = new LockTaskController$$ExternalSyntheticLambda0();
	ActivityTaskSupervisor.mRootWindowContainer.forAllTasks(v28);
	int v32 = RootWindowContainer.getChildCount();
	WindowContainer v33 = RootWindowContainer.getChildAt(phiInstruction);
	ActivityRecord v34 = v33.topRunningActivity();
	ActivityRecord v31 = v34;
	Task v35 = this.task;
	boolean v36 = this.mLockTaskModeTasks.isEmpty();
	String v37 = String.valueOf(phiInstruction);
	Object v38 = new Object(1);
	ProtoLogImpl v40 = ProtoLogImpl.getSingleInstance();
	v40.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_LOCKTASK, 1088929964, 0, 0, v38);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_LOCKTASK, 950074526, 0, 0, 0);
	boolean v45 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v44 = v45;
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setPackageScreenCompatMode(Ljava/lang/String;I)V","0","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Ljava/lang/String;I)V > 10,2,3 @17 exception:11,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
return,","depth : 0
public void setPackageScreenCompatMode(String p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void setPackageScreenCompatMode(String p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPackageScreenCompatMode(Ljava/lang/String;I)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Ljava/lang/String;I)V > 10,2,3 @17 exception:11,
5 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:4,
9 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 5,2,6,7 @7 exception:8,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
conditional branch(ne, to iindex=-1) 10,7,
12 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 12 @17 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,14 @22 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,2 @25 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 12 @28 exception:19,
23 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 21,20 @34 exception:22,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setPackageScreenCompatMode(String p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(String p1, int p2){
	IPackageManager v1 = AppGlobals.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 0, 0);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""setPackageScreenCompatMode failed: unknown package "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setPackageScreenCompatMode(String p1, int p2){
	this.sThreadPriorityBooster.boost();
	IPackageManager v5 = AppGlobals.getPackageManager();
	ApplicationInfo v6 = v5.getApplicationInfo(p1, 0, 0);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPackageScreenCompatMode(Ljava/lang/String;I)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Ljava/lang/String;I)V > 10,2,3 @17 exception:11,
5 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:4,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
9 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 5,2,6,7 @7 exception:8,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
conditional branch(ne, to iindex=-1) 10,7,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Landroid/content/pm/ApplicationInfo;I)V > 1,10,3 @38 exception:11,
4 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,10,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(eq, to iindex=-1) 3,8,
139 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 139 @19 exception:140,
143 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,141 @24 exception:142,
145 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 139,3 @27 exception:144,
148 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,146 @32 exception:147,
150 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 139 @35 exception:149,
152 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,150 @39 exception:151,
return,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setPackageScreenCompatMode(String p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(String p1, int p2){
	IPackageManager v1 = AppGlobals.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 0, 0);
	p0.setPackageScreenCompatModeLocked(phiInstruction, p2);
	return;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Unknown screen compat mode req #"");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append(""; ignoring"");
	String v6 = v1.toString();
	int v7 = Slog.w(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setPackageScreenCompatMode(String p1, int p2){
	IPackageManager v7 = ActivityThread.getPackageManager();
	IPackageManager v6 = v7;
	ApplicationInfo v8 = v6.getApplicationInfo(p1, 0, 0);
	int v10 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPackageScreenCompatMode(Ljava/lang/String;I)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Ljava/lang/String;I)V > 10,2,3 @17 exception:11,
5 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:4,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
9 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 5,2,6,7 @7 exception:8,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
conditional branch(ne, to iindex=-1) 10,7,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Landroid/content/pm/ApplicationInfo;I)V > 1,10,3 @38 exception:11,
4 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,10,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(eq, to iindex=-1) 3,8,
139 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 139 @19 exception:140,
143 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,141 @24 exception:142,
145 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 139,3 @27 exception:144,
148 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,146 @32 exception:147,
150 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 139 @35 exception:149,
152 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,150 @39 exception:151,
return,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setPackageScreenCompatMode(String p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(String p1, int p2){
	IPackageManager v1 = AppGlobals.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 0, 0);
	p0.setPackageScreenCompatModeLocked(phiInstruction, p2);
	return;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Unknown screen compat mode req #"");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append(""; ignoring"");
	String v6 = v1.toString();
	int v7 = Slog.w(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setPackageScreenCompatMode(String p1, int p2){
	WindowManagerThreadPriorityBooster.boost();
	IPackageManager v8 = ActivityThread.getPackageManager();
	IPackageManager v7 = v8;
	ApplicationInfo v9 = v7.getApplicationInfo(p1, 0, 0);
	int v11 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPackageScreenCompatMode(Ljava/lang/String;I)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Ljava/lang/String;I)V > 10,2,3 @17 exception:11,
5 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:4,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
9 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 5,2,6,7 @7 exception:8,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,7,
conditional branch(ne, to iindex=-1) 10,7,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Landroid/content/pm/ApplicationInfo;I)V > 1,10,3 @38 exception:11,
4 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,10,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(eq, to iindex=-1) 3,8,
139 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 139 @19 exception:140,
143 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,141 @24 exception:142,
145 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 139,3 @27 exception:144,
148 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,146 @32 exception:147,
150 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 139 @35 exception:149,
152 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,150 @39 exception:151,
return,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @21 exception:16,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void setPackageScreenCompatMode(String p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(p1, p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(String p1, int p2){
	IPackageManager v1 = AppGlobals.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 0, 0);
	p0.setPackageScreenCompatModeLocked(phiInstruction, p2);
	return;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Unknown screen compat mode req #"");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append(""; ignoring"");
	String v6 = v1.toString();
	int v7 = Slog.w(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setPackageScreenCompatMode(String p1, int p2){
	IPackageManager v7 = ActivityThread.getPackageManager();
	IPackageManager v6 = v7;
	ApplicationInfo v8 = v6.getApplicationInfo(p1, 0, 0);
	int v10 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setFrontActivityScreenCompatMode(I)V","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 10 @21 exception:12,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,11,
conditional branch(ne, to iindex=-1) 14,11,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 14,
18 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Landroid/content/pm/ApplicationInfo;I)V > 19,18,2 @47 exception:20,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:21,
return,","depth : 0
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFrontActivityScreenCompatMode(I)V","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:9,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 10 @21 exception:12,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,11,
conditional branch(ne, to iindex=-1) 14,11,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 14,
18 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Landroid/content/pm/ApplicationInfo;I)V > 19,18,2 @47 exception:20,
4 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,10,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(eq, to iindex=-1) 3,8,
139 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 139 @19 exception:140,
143 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,141 @24 exception:142,
145 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 139,3 @27 exception:144,
148 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,146 @32 exception:147,
150 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 139 @35 exception:149,
152 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,150 @39 exception:151,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Unknown screen compat mode req #"");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append(""; ignoring"");
	String v6 = v1.toString();
	int v7 = Slog.w(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setFrontActivityScreenCompatMode(int p1){
	this.sThreadPriorityBooster.boost();
	Task v5 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v4 = v5;
	ActivityRecord v7 = TaskFragment.topRunningActivity(0);
	ActivityRecord v6 = v7;
	int v9 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFrontActivityScreenCompatMode(I)V","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:9,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,11,
14 = phi  13,11,
conditional branch(ne, to iindex=-1) 14,11,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 14,
18 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Landroid/content/pm/ApplicationInfo;I)V > 19,18,2 @47 exception:20,
4 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,10,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(eq, to iindex=-1) 3,8,
139 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 139 @19 exception:140,
143 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,141 @24 exception:142,
145 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 139,3 @27 exception:144,
148 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,146 @32 exception:147,
150 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 139 @35 exception:149,
152 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,150 @39 exception:151,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Unknown screen compat mode req #"");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append(""; ignoring"");
	String v6 = v1.toString();
	int v7 = Slog.w(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setFrontActivityScreenCompatMode(int p1){
	this.sThreadPriorityBooster.boost();
	Task v5 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v4 = v5;
	int v7 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFrontActivityScreenCompatMode(I)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:9,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 10 @21 exception:12,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,11,
conditional branch(ne, to iindex=-1) 14,11,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 14,
18 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Landroid/content/pm/ApplicationInfo;I)V > 19,18,2 @47 exception:20,
4 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,4 @2 exception:5,
3 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mPackages, <Application,Ljava/util/HashMap> > 1,
5 = invokevirtual < Application, Ljava/util/HashMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Ljava/lang/Integer>5 <Application,Ljava/lang/Integer>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 6 @10 exception:8,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
return 10,
conditional branch(eq, to iindex=-1) 3,10,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(eq, to iindex=-1) 3,8,
139 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 139 @19 exception:140,
143 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,141 @24 exception:142,
145 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 139,3 @27 exception:144,
148 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,146 @32 exception:147,
150 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 139 @35 exception:149,
152 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,150 @39 exception:151,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Unknown screen compat mode req #"");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append(""; ignoring"");
	String v6 = v1.toString();
	int v7 = Slog.w(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 2
public int getPackageFlags(String p1){
	Object v1 = this.mPackages.get(p1);
	int v2 = v1.intValue();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setFrontActivityScreenCompatMode(int p1){
	int v7 = RootWindowContainer.getChildCount();
	WindowContainer v8 = RootWindowContainer.getChildAt(phiInstruction);
	Task v9 = v8.getFocusedRootTask();
	Task v6 = v9;
	Task v5 = v6;
	ActivityRecord v12 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v11 = v12;
	ActivityRecord v10 = v11;
	Object v15 = this.mPackages.get(ApplicationInfo.packageName);
	int v16 = v15.intValue();
	int v14 = phiInstruction;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFrontActivityScreenCompatMode(I)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:9,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 10 @21 exception:12,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,11,
conditional branch(ne, to iindex=-1) 14,11,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 14,
18 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Landroid/content/pm/ApplicationInfo;I)V > 19,18,2 @47 exception:20,
4 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,4 @2 exception:5,
3 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mPackages, <Application,Ljava/util/HashMap> > 1,
5 = invokevirtual < Application, Ljava/util/HashMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Ljava/lang/Integer>5 <Application,Ljava/lang/Integer>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 6 @10 exception:8,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
return 10,
conditional branch(eq, to iindex=-1) 3,10,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(eq, to iindex=-1) 3,8,
139 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 139 @19 exception:140,
143 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,141 @24 exception:142,
145 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 139,3 @27 exception:144,
148 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,146 @32 exception:147,
150 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 139 @35 exception:149,
152 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,150 @39 exception:151,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Unknown screen compat mode req #"");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append(""; ignoring"");
	String v6 = v1.toString();
	int v7 = Slog.w(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 2
public int getPackageFlags(String p1){
	Object v1 = this.mPackages.get(p1);
	int v2 = v1.intValue();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerThreadPriorityBooster.boost();
	int v8 = RootWindowContainer.getChildCount();
	WindowContainer v9 = RootWindowContainer.getChildAt(phiInstruction);
	Task v10 = v9.getFocusedRootTask();
	Task v7 = v10;
	Task v6 = v7;
	ActivityRecord v13 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v12 = v13;
	ActivityRecord v11 = v12;
	Object v16 = this.mPackages.get(ApplicationInfo.packageName);
	int v17 = v16.intValue();
	int v15 = phiInstruction;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFrontActivityScreenCompatMode(I)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:9,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 10 @21 exception:12,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,11,
conditional branch(ne, to iindex=-1) 14,11,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 14,
18 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, setPackageScreenCompatModeLocked(Landroid/content/pm/ApplicationInfo;I)V > 19,18,2 @47 exception:20,
4 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,4 @2 exception:5,
3 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mPackages, <Application,Ljava/util/HashMap> > 1,
5 = invokevirtual < Application, Ljava/util/HashMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Ljava/lang/Integer>5 <Application,Ljava/lang/Integer>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 6 @10 exception:8,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
return 10,
conditional branch(eq, to iindex=-1) 3,10,
conditional branch(eq, to iindex=-1) 3,9,
conditional branch(eq, to iindex=-1) 3,8,
139 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 139 @19 exception:140,
143 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,141 @24 exception:142,
145 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 139,3 @27 exception:144,
148 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 139,146 @32 exception:147,
150 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 139 @35 exception:149,
152 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 7,150 @39 exception:151,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void setFrontActivityScreenCompatMode(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	this.mCompatModePackages.setPackageScreenCompatModeLocked(ActivityInfo.applicationInfo, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void setPackageScreenCompatModeLocked(ApplicationInfo p1, int p2){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Unknown screen compat mode req #"");
	StringBuilder v4 = v1.append(p2);
	StringBuilder v5 = v1.append(""; ignoring"");
	String v6 = v1.toString();
	int v7 = Slog.w(""ActivityTaskManager"", v6);
	return;
}
-----
depth : 2
public int getPackageFlags(String p1){
	Object v1 = this.mPackages.get(p1);
	int v2 = v1.intValue();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setFrontActivityScreenCompatMode(int p1){
	int v7 = RootWindowContainer.getChildCount();
	WindowContainer v8 = RootWindowContainer.getChildAt(phiInstruction);
	Task v9 = v8.getFocusedRootTask();
	Task v6 = v9;
	Task v5 = v6;
	ActivityRecord v12 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v11 = v12;
	ActivityRecord v10 = v11;
	Object v15 = this.mPackages.get(ApplicationInfo.packageName);
	int v16 = v15.intValue();
	int v14 = phiInstruction;
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","suppressResizeConfigChanges(Z)V","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mSuppressResizeConfigChanges, <Primordial,Z> > = 2,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:12,
return,","depth : 0
public void suppressResizeConfigChanges(boolean p1){
	WindowManagerService.boostPriorityForLockedSection();
	this.mSuppressResizeConfigChanges = p1;
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void suppressResizeConfigChanges(boolean p1){
	WindowManagerService.boostPriorityForLockedSection();
	this.mSuppressResizeConfigChanges = p1;
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","suppressResizeConfigChanges(Z)V","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mSuppressResizeConfigChanges, <Primordial,Z> > = 2,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void suppressResizeConfigChanges(boolean p1){
	WindowManagerService.boostPriorityForLockedSection();
	this.mSuppressResizeConfigChanges = p1;
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void suppressResizeConfigChanges(boolean p1){
	this.sThreadPriorityBooster.boost();
	this.mSuppressResizeConfigChanges = p1;
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","suppressResizeConfigChanges(Z)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mSuppressResizeConfigChanges, <Primordial,Z> > = 2,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void suppressResizeConfigChanges(boolean p1){
	WindowManagerService.boostPriorityForLockedSection();
	this.mSuppressResizeConfigChanges = p1;
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void suppressResizeConfigChanges(boolean p1){
	this.mSuppressResizeConfigChanges = p1;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","suppressResizeConfigChanges(Z)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mSuppressResizeConfigChanges, <Primordial,Z> > = 2,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void suppressResizeConfigChanges(boolean p1){
	WindowManagerService.boostPriorityForLockedSection();
	this.mSuppressResizeConfigChanges = p1;
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void suppressResizeConfigChanges(boolean p1){
	WindowManagerThreadPriorityBooster.boost();
	this.mSuppressResizeConfigChanges = p1;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","suppressResizeConfigChanges(Z)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mSuppressResizeConfigChanges, <Primordial,Z> > = 2,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void suppressResizeConfigChanges(boolean p1){
	WindowManagerService.boostPriorityForLockedSection();
	this.mSuppressResizeConfigChanges = p1;
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void suppressResizeConfigChanges(boolean p1){
	this.mSuppressResizeConfigChanges = p1;
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getVoiceInteractorPackageName(Landroid/os/IBinder;)Ljava/lang/String;","0","3 = load_metadata: <Application,Landroid/service/voice/VoiceInteractionManagerInternal>, <Primordial,Ljava/lang/Class>,
5 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 3 @2 exception:4,
6 = checkcast <Application,Landroid/service/voice/VoiceInteractionManagerInternal>5 <Application,Landroid/service/voice/VoiceInteractionManagerInternal>,
8 = invokevirtual < Application, Landroid/service/voice/VoiceInteractionManagerInternal, getVoiceInteractorPackageName(Landroid/os/IBinder;)Ljava/lang/String; > 6,2 @8 exception:7,
return 8,","depth : 0
public String getVoiceInteractorPackageName(IBinder p1){
	Object v1 = LocalServices.getService(VoiceInteractionManagerInterna.class);
	String v2 = v1.getVoiceInteractorPackageName(p1);
	return v2;
}
-----
","public String getVoiceInteractorPackageName(IBinder p1){
	Object v1 = LocalServices.getService(VoiceInteractionManagerInterna.class);
	String v2 = v1.getVoiceInteractorPackageName(p1);
	return v2;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","getVoiceInteractorPackageName(Landroid/os/IBinder;)Ljava/lang/String;","1","3 = load_metadata: <Application,Landroid/service/voice/VoiceInteractionManagerInternal>, <Primordial,Ljava/lang/Class>,
5 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 3 @2 exception:4,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
6 = checkcast <Application,Landroid/service/voice/VoiceInteractionManagerInternal>5 <Application,Landroid/service/voice/VoiceInteractionManagerInternal>,
8 = invokevirtual < Application, Landroid/service/voice/VoiceInteractionManagerInternal, getVoiceInteractorPackageName(Landroid/os/IBinder;)Ljava/lang/String; > 6,2 @8 exception:7,
return 8,","depth : 0
public String getVoiceInteractorPackageName(IBinder p1){
	Object v1 = LocalServices.getService(VoiceInteractionManagerInterna.class);
	String v2 = v1.getVoiceInteractorPackageName(p1);
	return v2;
}
-----
depth : 1
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public String getVoiceInteractorPackageName(IBinder p1){
	Object v2 = this.sLocalServiceObjects.get(VoiceInteractionManagerInterna.class);
	Object v1 = v2;
	String v3 = v1.getVoiceInteractorPackageName(p1);
	return v3;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","setActivityController(Landroid/app/IActivityController;Z)V","0","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mController, <Application,Landroid/app/IActivityController> > = 2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mControllerIsAMonkey, <Primordial,Z> > = 3,
11 = invokestatic < Application, Lcom/android/server/Watchdog, getInstance()Lcom/android/server/Watchdog; > @19 exception:10,
invokevirtual < Application, Lcom/android/server/Watchdog, setActivityController(Landroid/app/IActivityController;)V > 11,2 @23 exception:12,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:17,
return,","depth : 0
public void setActivityController(IActivityController p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v3 = Watchdog.getInstance();
	v3.setActivityController(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void setActivityController(IActivityController p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v3 = Watchdog.getInstance();
	v3.setActivityController(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setActivityController(Landroid/app/IActivityController;Z)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mController, <Application,Landroid/app/IActivityController> > = 2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mControllerIsAMonkey, <Primordial,Z> > = 3,
11 = invokestatic < Application, Lcom/android/server/Watchdog, getInstance()Lcom/android/server/Watchdog; > @19 exception:10,
1 = getstatic < Application, Lcom/android/server/Watchdog, sWatchdog, <Application,Lcom/android/server/Watchdog> >,
conditional branch(ne, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/Watchdog>@4,
invokespecial < Application, Lcom/android/server/Watchdog, <init>()V > 3 @6 exception:4,
putstatic < Application, Lcom/android/server/Watchdog, sWatchdog, <Application,Lcom/android/server/Watchdog> > = 3,
6 = getstatic < Application, Lcom/android/server/Watchdog, sWatchdog, <Application,Lcom/android/server/Watchdog> >,
return 6,
invokevirtual < Application, Lcom/android/server/Watchdog, setActivityController(Landroid/app/IActivityController;)V > 11,2 @23 exception:12,
3 = getfield < Application, Lcom/android/server/Watchdog, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
putfield 1.< Application, Lcom/android/server/Watchdog, mController, <Application,Landroid/app/IActivityController> > = 2,
monitorexit 3,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setActivityController(IActivityController p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v3 = Watchdog.getInstance();
	v3.setActivityController(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Watchdog getInstance(){
	Watchdog v0 = new Watchdog();
	this.sWatchdog = v0;
	return this.sWatchdog;
}
-----
depth : 1
public void setActivityController(IActivityController p1){
	this.mController = p1;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setActivityController(IActivityController p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v5 = new Watchdog();
	this.sWatchdog = v5;
	Watchdog v4 = this.sWatchdog;
	this.mController = p1;
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setActivityController(Landroid/app/IActivityController;Z)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mController, <Application,Landroid/app/IActivityController> > = 2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mControllerIsAMonkey, <Primordial,Z> > = 3,
11 = invokestatic < Application, Lcom/android/server/Watchdog, getInstance()Lcom/android/server/Watchdog; > @19 exception:10,
1 = getstatic < Application, Lcom/android/server/Watchdog, sWatchdog, <Application,Lcom/android/server/Watchdog> >,
conditional branch(ne, to iindex=-1) 1,2,
6 = getstatic < Application, Lcom/android/server/Watchdog, sWatchdog, <Application,Lcom/android/server/Watchdog> >,
return 6,
invokevirtual < Application, Lcom/android/server/Watchdog, setActivityController(Landroid/app/IActivityController;)V > 11,2 @23 exception:12,
3 = getfield < Application, Lcom/android/server/Watchdog, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
putfield 1.< Application, Lcom/android/server/Watchdog, mController, <Application,Landroid/app/IActivityController> > = 2,
monitorexit 3,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setActivityController(IActivityController p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v3 = Watchdog.getInstance();
	v3.setActivityController(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Watchdog getInstance(){
	return this.sWatchdog;
}
-----
depth : 1
public void setActivityController(IActivityController p1){
	this.mController = p1;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setActivityController(IActivityController p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v4 = this.sWatchdog;
	this.mController = p1;
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setActivityController(Landroid/app/IActivityController;Z)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mController, <Application,Landroid/app/IActivityController> > = 2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mControllerIsAMonkey, <Primordial,Z> > = 3,
11 = invokestatic < Application, Lcom/android/server/Watchdog, getInstance()Lcom/android/server/Watchdog; > @19 exception:10,
invokevirtual < Application, Lcom/android/server/Watchdog, setActivityController(Landroid/app/IActivityController;)V > 11,2 @23 exception:12,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setActivityController(IActivityController p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v3 = Watchdog.getInstance();
	v3.setActivityController(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setActivityController(IActivityController p1, boolean p2){
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v5 = Watchdog.getInstance();
	v5.setActivityController(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setActivityController(Landroid/app/IActivityController;Z)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mController, <Application,Landroid/app/IActivityController> > = 2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mControllerIsAMonkey, <Primordial,Z> > = 3,
11 = invokestatic < Application, Lcom/android/server/Watchdog, getInstance()Lcom/android/server/Watchdog; > @19 exception:10,
invokevirtual < Application, Lcom/android/server/Watchdog, setActivityController(Landroid/app/IActivityController;)V > 11,2 @23 exception:12,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setActivityController(IActivityController p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v3 = Watchdog.getInstance();
	v3.setActivityController(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setActivityController(IActivityController p1, boolean p2){
	WindowManagerThreadPriorityBooster.boost();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v6 = Watchdog.getInstance();
	v6.setActivityController(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setActivityController(Landroid/app/IActivityController;Z)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mController, <Application,Landroid/app/IActivityController> > = 2,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mControllerIsAMonkey, <Primordial,Z> > = 3,
11 = invokestatic < Application, Lcom/android/server/Watchdog, getInstance()Lcom/android/server/Watchdog; > @19 exception:10,
invokevirtual < Application, Lcom/android/server/Watchdog, setActivityController(Landroid/app/IActivityController;)V > 11,2 @23 exception:12,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void setActivityController(IActivityController p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v3 = Watchdog.getInstance();
	v3.setActivityController(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setActivityController(IActivityController p1, boolean p2){
	this.mController = p1;
	this.mControllerIsAMonkey = p2;
	Watchdog v5 = Watchdog.getInstance();
	v5.setActivityController(p1);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z","0","conditional branch(eq, to iindex=-1) 3,5,
7 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 3 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 4 to iindex = 9),
12 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 4 @17 exception:11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @24 exception:14,
16 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, isInRootTaskLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @27 exception:15,
conditional branch(ne, to iindex=-1) 16,5,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 16 @42 exception:17,
conditional branch(ne, to iindex=-1) 18,5,
19 = new <Application,Landroid/content/Intent>@56,
invokespecial < Application, Landroid/content/Intent, <init>(Landroid/content/Intent;)V > 19,3 @58 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
23 = invokevirtual < Application, Landroid/content/Intent, getData()Landroid/net/Uri; > 21 @63 exception:22,
24 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
26 = invokevirtual < Application, Landroid/content/Intent, getType()Ljava/lang/String; > 24 @69 exception:25,
28 = invokevirtual < Application, Landroid/content/Intent, setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent; > 19,23,26 @73 exception:27,
30 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 19,5 @77 exception:29,
32 = invokevirtual < Application, Landroid/content/Intent, getFlags()I > 19 @80 exception:31,
34 = binaryop(and) 32 , 33,
conditional branch(eq, to iindex=-1) 34,5,
goto (from iindex= 46 to iindex = 2),
36 = phi  35,5,
38 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @92 exception:37,
39 = getfield < Application, Lcom/android/server/wm/ActivityRecord, resolvedType, <Application,Ljava/lang/String> > 16,
42 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @101 exception:41,
140 = phi  89,89,89,89,5,
conditional branch(ne, to iindex=-1) 140,5,
invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, abort(Lcom/android/server/wm/SafeActivityOptions;)V > 12 @267 exception:216,
conditional branch(eq, to iindex=-1) 36,5,
219 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 92,217 @276 exception:218,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @280 exception:224,
return 5,","depth : 0
public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v2 = SafeActivityOptions.fromBundle(p3);
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.isInRootTaskLocked(p1);
	boolean v5 = v4.attachedToProcess();
	Intent v5 = new Intent(p2);
	Uri v7 = ActivityRecord.intent.getData();
	String v8 = ActivityRecord.intent.getType();
	Intent v9 = v5.setDataAndType(v7, v8);
	Intent v10 = v5.setComponent(0);
	int v11 = v5.getFlags();
	IPackageManager v12 = AppGlobals.getPackageManager();
	int v13 = UserHandle.getCallingUserId();
	SafeActivityOptions.abort(v2);
	int v15 = Slog.d(""ActivityTaskManager"", ""Next matching activity: nothing found"");
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
","public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v2 = SafeActivityOptions.fromBundle(p3);
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.isInRootTaskLocked(p1);
	boolean v5 = v4.attachedToProcess();
	Intent v6 = new Intent(p2);
	Uri v8 = ActivityRecord.intent.getData();
	String v9 = ActivityRecord.intent.getType();
	Intent v10 = v6.setDataAndType(v8, v9);
	Intent v11 = v6.setComponent(0);
	int v12 = v6.getFlags();
	IPackageManager v13 = AppGlobals.getPackageManager();
	int v14 = UserHandle.getCallingUserId();
	SafeActivityOptions.abort(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z","1","conditional branch(eq, to iindex=-1) 3,5,
7 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 3 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 4 to iindex = 9),
12 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 4 @17 exception:11,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @24 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
16 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, isInRootTaskLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @27 exception:15,
3 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 3 @6 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/Task, isInTask(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 6,3 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
conditional branch(ne, to iindex=-1) 16,5,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 16 @42 exception:17,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, hasProcess()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,4,
goto (from iindex= 8 to iindex = 2),
12 = phi  11,4,
return 12,
conditional branch(ne, to iindex=-1) 18,5,
19 = new <Application,Landroid/content/Intent>@56,
invokespecial < Application, Landroid/content/Intent, <init>(Landroid/content/Intent;)V > 19,3 @58 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
23 = invokevirtual < Application, Landroid/content/Intent, getData()Landroid/net/Uri; > 21 @63 exception:22,
24 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
26 = invokevirtual < Application, Landroid/content/Intent, getType()Ljava/lang/String; > 24 @69 exception:25,
28 = invokevirtual < Application, Landroid/content/Intent, setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent; > 19,23,26 @73 exception:27,
30 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 19,5 @77 exception:29,
32 = invokevirtual < Application, Landroid/content/Intent, getFlags()I > 19 @80 exception:31,
34 = binaryop(and) 32 , 33,
conditional branch(eq, to iindex=-1) 34,5,
goto (from iindex= 46 to iindex = 2),
36 = phi  35,5,
38 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @92 exception:37,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
39 = getfield < Application, Lcom/android/server/wm/ActivityRecord, resolvedType, <Application,Ljava/lang/String> > 16,
42 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @101 exception:41,
140 = phi  89,89,89,89,5,
conditional branch(ne, to iindex=-1) 140,5,
invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, abort(Lcom/android/server/wm/SafeActivityOptions;)V > 12 @267 exception:216,
conditional branch(eq, to iindex=-1) 1,2,
invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, abort()V > 1 @2 exception:3,
return,
conditional branch(eq, to iindex=-1) 36,5,
219 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 92,217 @276 exception:218,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @280 exception:224,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 5,","depth : 0
public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v2 = SafeActivityOptions.fromBundle(p3);
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.isInRootTaskLocked(p1);
	boolean v5 = v4.attachedToProcess();
	Intent v5 = new Intent(p2);
	Uri v7 = ActivityRecord.intent.getData();
	String v8 = ActivityRecord.intent.getType();
	Intent v9 = v5.setDataAndType(v7, v8);
	Intent v10 = v5.setComponent(0);
	int v11 = v5.getFlags();
	IPackageManager v12 = AppGlobals.getPackageManager();
	int v13 = UserHandle.getCallingUserId();
	SafeActivityOptions.abort(v2);
	int v15 = Slog.d(""ActivityTaskManager"", ""Next matching activity: nothing found"");
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ActivityRecord isInRootTaskLocked(IBinder p1){
	ActivityRecord v1 = ActivityRecord.forTokenLocked(p1);
	Task v2 = v1.getRootTask();
	ActivityRecord v3 = v2.isInTask(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean attachedToProcess(){
	boolean v1 = p0.hasProcess();
	boolean v2 = this.app.hasThread();
	return phiInstruction;
}
-----
depth : 1
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 1
public void abort(SafeActivityOptions p1){
	p1.abort();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v3 = new SafeActivityOptions(v4);
	ActivityOptions v4 = ActivityOptions.fromBundle(p3);
	SafeActivityOptions v2 = phiInstruction;
	this.sThreadPriorityBooster.boost();
	ActivityRecord v9 = ActivityRecord.forTokenLocked(p1);
	Task v10 = v9.getRootTask();
	ActivityRecord v11 = v10.isInTask(v9);
	ActivityRecord v8 = phiInstruction;
	boolean v13 = ActivityRecord.hasProcess();
	boolean v14 = this.app.hasThread();
	boolean v12 = phiInstruction;
	Intent v15 = new Intent(p2);
	Uri v17 = ActivityRecord.intent.getData();
	String v18 = ActivityRecord.intent.getType();
	Intent v19 = v15.setDataAndType(v17, v18);
	Intent v20 = v15.setComponent(0);
	int v21 = v15.getFlags();
	IPackageManager v23 = ActivityThread.getPackageManager();
	IPackageManager v22 = v23;
	int v24 = UserHandle.getCallingUserId();
	v2.abort();
	this.sThreadPriorityBooster.reset();
	return 0;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z","1","conditional branch(eq, to iindex=-1) 3,5,
7 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 3 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 4 to iindex = 9),
12 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 4 @17 exception:11,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @24 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
16 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, isInRootTaskLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @27 exception:15,
3 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 3 @6 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/Task, isInTask(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 6,3 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
conditional branch(ne, to iindex=-1) 16,5,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 16 @42 exception:17,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, hasProcess()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,4,
12 = phi  11,4,
return 12,
conditional branch(ne, to iindex=-1) 18,5,
19 = new <Application,Landroid/content/Intent>@56,
invokespecial < Application, Landroid/content/Intent, <init>(Landroid/content/Intent;)V > 19,3 @58 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
23 = invokevirtual < Application, Landroid/content/Intent, getData()Landroid/net/Uri; > 21 @63 exception:22,
24 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
26 = invokevirtual < Application, Landroid/content/Intent, getType()Ljava/lang/String; > 24 @69 exception:25,
28 = invokevirtual < Application, Landroid/content/Intent, setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent; > 19,23,26 @73 exception:27,
30 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 19,5 @77 exception:29,
32 = invokevirtual < Application, Landroid/content/Intent, getFlags()I > 19 @80 exception:31,
34 = binaryop(and) 32 , 33,
conditional branch(eq, to iindex=-1) 34,5,
goto (from iindex= 46 to iindex = 2),
36 = phi  35,5,
38 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @92 exception:37,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
39 = getfield < Application, Lcom/android/server/wm/ActivityRecord, resolvedType, <Application,Ljava/lang/String> > 16,
42 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @101 exception:41,
140 = phi  89,89,89,89,5,
conditional branch(ne, to iindex=-1) 140,5,
invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, abort(Lcom/android/server/wm/SafeActivityOptions;)V > 12 @267 exception:216,
conditional branch(eq, to iindex=-1) 1,2,
invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, abort()V > 1 @2 exception:3,
return,
conditional branch(eq, to iindex=-1) 36,5,
219 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 92,217 @276 exception:218,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @280 exception:224,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 5,","depth : 0
public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v2 = SafeActivityOptions.fromBundle(p3);
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.isInRootTaskLocked(p1);
	boolean v5 = v4.attachedToProcess();
	Intent v5 = new Intent(p2);
	Uri v7 = ActivityRecord.intent.getData();
	String v8 = ActivityRecord.intent.getType();
	Intent v9 = v5.setDataAndType(v7, v8);
	Intent v10 = v5.setComponent(0);
	int v11 = v5.getFlags();
	IPackageManager v12 = AppGlobals.getPackageManager();
	int v13 = UserHandle.getCallingUserId();
	SafeActivityOptions.abort(v2);
	int v15 = Slog.d(""ActivityTaskManager"", ""Next matching activity: nothing found"");
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ActivityRecord isInRootTaskLocked(IBinder p1){
	ActivityRecord v1 = ActivityRecord.forTokenLocked(p1);
	Task v2 = v1.getRootTask();
	ActivityRecord v3 = v2.isInTask(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean attachedToProcess(){
	boolean v1 = p0.hasProcess();
	boolean v2 = this.app.hasThread();
	return phiInstruction;
}
-----
depth : 1
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 1
public void abort(SafeActivityOptions p1){
	p1.abort();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v3 = new SafeActivityOptions(v4);
	ActivityOptions v4 = ActivityOptions.fromBundle(p3);
	SafeActivityOptions v2 = phiInstruction;
	this.sThreadPriorityBooster.boost();
	ActivityRecord v9 = ActivityRecord.forTokenLocked(p1);
	Task v10 = v9.getRootTask();
	ActivityRecord v11 = v10.isInTask(v9);
	ActivityRecord v8 = phiInstruction;
	boolean v13 = ActivityRecord.hasProcess();
	boolean v14 = this.app.hasThread();
	boolean v12 = phiInstruction;
	Intent v15 = new Intent(p2);
	Uri v17 = ActivityRecord.intent.getData();
	String v18 = ActivityRecord.intent.getType();
	Intent v19 = v15.setDataAndType(v17, v18);
	Intent v20 = v15.setComponent(0);
	int v21 = v15.getFlags();
	IPackageManager v23 = ActivityThread.getPackageManager();
	IPackageManager v22 = v23;
	int v24 = UserHandle.getCallingUserId();
	v2.abort();
	this.sThreadPriorityBooster.reset();
	return 0;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z","2","conditional branch(eq, to iindex=-1) 3,5,
7 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 3 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 4 to iindex = 9),
12 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 4 @17 exception:11,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/app/ActivityOptions>@2,
invokespecial < Application, Landroid/app/ActivityOptions, <init>(Landroid/os/Bundle;)V > 3,1 @4 exception:4,
goto (from iindex= 3 to iindex = 2),
5 = phi  3,2,
return 5,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @24 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
16 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, isInRootTaskLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @27 exception:15,
3 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 1,2,
3 = checkcast <Application,Lcom/android/server/wm/ActivityRecord$Token>1 <Application,Lcom/android/server/wm/ActivityRecord$Token>,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord$Token, mActivityRef, <Application,Ljava/lang/ref/WeakReference> > 3,
19 = invokevirtual < Application, Ljava/lang/ref/WeakReference, get()Ljava/lang/Object; > 17 @8 exception:18,
20 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>19 <Application,Lcom/android/server/wm/ActivityRecord>,
conditional branch(eq, to iindex=-1) 20,2,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 20 @16 exception:21,
conditional branch(ne, to iindex=-1) 22,2,
goto (from iindex= 12 to iindex = 2),
23 = phi  2,2,20,
return 23,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 3 @6 exception:5,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 2 @4 exception:4,
goto (from iindex= 4 to iindex = 2),
6 = phi  5,3,
return 6,
8 = invokevirtual < Application, Lcom/android/server/wm/Task, isInTask(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 6,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z > 2,1 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
return 2,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
conditional branch(ne, to iindex=-1) 16,5,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 16 @42 exception:17,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, hasProcess()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 5 @8 exception:6,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 7,4,
goto (from iindex= 8 to iindex = 2),
12 = phi  11,4,
return 12,
conditional branch(ne, to iindex=-1) 18,5,
19 = new <Application,Landroid/content/Intent>@56,
invokespecial < Application, Landroid/content/Intent, <init>(Landroid/content/Intent;)V > 19,3 @58 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
23 = invokevirtual < Application, Landroid/content/Intent, getData()Landroid/net/Uri; > 21 @63 exception:22,
24 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
26 = invokevirtual < Application, Landroid/content/Intent, getType()Ljava/lang/String; > 24 @69 exception:25,
28 = invokevirtual < Application, Landroid/content/Intent, setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent; > 19,23,26 @73 exception:27,
30 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 19,5 @77 exception:29,
32 = invokevirtual < Application, Landroid/content/Intent, getFlags()I > 19 @80 exception:31,
34 = binaryop(and) 32 , 33,
conditional branch(eq, to iindex=-1) 34,5,
goto (from iindex= 46 to iindex = 2),
36 = phi  35,5,
38 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @92 exception:37,
39 = getfield < Application, Lcom/android/server/wm/ActivityRecord, resolvedType, <Application,Ljava/lang/String> > 16,
42 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @101 exception:41,
140 = phi  89,89,89,89,5,
conditional branch(ne, to iindex=-1) 140,5,
invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, abort(Lcom/android/server/wm/SafeActivityOptions;)V > 12 @267 exception:216,
conditional branch(eq, to iindex=-1) 1,2,
invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, abort()V > 1 @2 exception:3,
2 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mOriginalOptions, <Application,Landroid/app/ActivityOptions> > 1,
conditional branch(eq, to iindex=-1) 2,3,
invokestatic < Application, Landroid/app/ActivityOptions, abort(Landroid/app/ActivityOptions;)V > 2 @4 exception:4,
5 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mCallerOptions, <Application,Landroid/app/ActivityOptions> > 1,
conditional branch(eq, to iindex=-1) 5,3,
invokestatic < Application, Landroid/app/ActivityOptions, abort(Landroid/app/ActivityOptions;)V > 5 @11 exception:6,
return,
return,
conditional branch(eq, to iindex=-1) 36,5,
219 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 92,217 @276 exception:218,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @280 exception:224,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 5,","depth : 0
public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v2 = SafeActivityOptions.fromBundle(p3);
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.isInRootTaskLocked(p1);
	boolean v5 = v4.attachedToProcess();
	Intent v5 = new Intent(p2);
	Uri v7 = ActivityRecord.intent.getData();
	String v8 = ActivityRecord.intent.getType();
	Intent v9 = v5.setDataAndType(v7, v8);
	Intent v10 = v5.setComponent(0);
	int v11 = v5.getFlags();
	IPackageManager v12 = AppGlobals.getPackageManager();
	int v13 = UserHandle.getCallingUserId();
	SafeActivityOptions.abort(v2);
	int v15 = Slog.d(""ActivityTaskManager"", ""Next matching activity: nothing found"");
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions fromBundle(Bundle p1){
	ActivityOptions v0 = new ActivityOptions(p1);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ActivityRecord isInRootTaskLocked(IBinder p1){
	ActivityRecord v1 = ActivityRecord.forTokenLocked(p1);
	Task v2 = v1.getRootTask();
	ActivityRecord v3 = v2.isInTask(v1);
	return phiInstruction;
}
-----
depth : 2
public ActivityRecord forTokenLocked(IBinder p1){
	Object v1 = ActivityRecord$Token.mActivityRef.get();
	Task v2 = v1.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(){
	Task v1 = this.task.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public ActivityRecord isInTask(ActivityRecord p1){
	boolean v1 = p1.isDescendantOf(p0);
	return p1;
}
-----
depth : 1
public boolean attachedToProcess(){
	boolean v1 = p0.hasProcess();
	boolean v2 = this.app.hasThread();
	return phiInstruction;
}
-----
depth : 2
public boolean hasThread(){
	return phiInstruction;
}
-----
depth : 1
public void abort(SafeActivityOptions p1){
	p1.abort();
	return;
}
-----
depth : 2
public void abort(){
	ActivityOptions.abort(this.mOriginalOptions);
	ActivityOptions.abort(this.mCallerOptions);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v3 = new SafeActivityOptions(v4);
	ActivityOptions v5 = new ActivityOptions(p1);
	ActivityOptions v4 = phiInstruction;
	SafeActivityOptions v2 = phiInstruction;
	Object v13 = ActivityRecord$Token.mActivityRef.get();
	Task v14 = v13.getRootTask();
	ActivityRecord v12 = phiInstruction;
	Task v16 = this.task.getRootTask();
	Task v15 = phiInstruction;
	boolean v18 = v12.isDescendantOf(Task);
	ActivityRecord v17 = v12;
	ActivityRecord v11 = phiInstruction;
	boolean v20 = ActivityRecord.hasProcess();
	boolean v21 = phiInstruction;
	boolean v19 = phiInstruction;
	Intent v22 = new Intent(p2);
	Uri v24 = ActivityRecord.intent.getData();
	String v25 = ActivityRecord.intent.getType();
	Intent v26 = v22.setDataAndType(v24, v25);
	Intent v27 = v22.setComponent(0);
	int v28 = v22.getFlags();
	IPackageManager v29 = AppGlobals.getPackageManager();
	int v30 = UserHandle.getCallingUserId();
	ActivityOptions.abort(this.mOriginalOptions);
	ActivityOptions.abort(this.mCallerOptions);
	return 0;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z","2","conditional branch(eq, to iindex=-1) 3,5,
7 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 3 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 4 to iindex = 9),
12 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 4 @17 exception:11,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/app/ActivityOptions>@2,
invokespecial < Application, Landroid/app/ActivityOptions, <init>(Landroid/os/Bundle;)V > 3,1 @4 exception:4,
goto (from iindex= 3 to iindex = 2),
5 = phi  3,2,
return 5,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @24 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
16 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, isInRootTaskLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @27 exception:15,
3 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 1,2,
3 = checkcast <Application,Lcom/android/server/wm/ActivityRecord$Token>1 <Application,Lcom/android/server/wm/ActivityRecord$Token>,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord$Token, mActivityRef, <Application,Ljava/lang/ref/WeakReference> > 3,
19 = invokevirtual < Application, Ljava/lang/ref/WeakReference, get()Ljava/lang/Object; > 17 @8 exception:18,
20 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>19 <Application,Lcom/android/server/wm/ActivityRecord>,
conditional branch(eq, to iindex=-1) 20,2,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 20 @16 exception:21,
conditional branch(ne, to iindex=-1) 22,2,
goto (from iindex= 12 to iindex = 2),
23 = phi  2,2,20,
return 23,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 3 @6 exception:5,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 2 @4 exception:4,
goto (from iindex= 4 to iindex = 2),
6 = phi  5,3,
return 6,
8 = invokevirtual < Application, Lcom/android/server/wm/Task, isInTask(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 6,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z > 2,1 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
return 2,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
conditional branch(ne, to iindex=-1) 16,5,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 16 @42 exception:17,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, hasProcess()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 5 @8 exception:6,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 7,4,
goto (from iindex= 8 to iindex = 2),
12 = phi  11,4,
return 12,
conditional branch(ne, to iindex=-1) 18,5,
19 = new <Application,Landroid/content/Intent>@56,
invokespecial < Application, Landroid/content/Intent, <init>(Landroid/content/Intent;)V > 19,3 @58 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
23 = invokevirtual < Application, Landroid/content/Intent, getData()Landroid/net/Uri; > 21 @63 exception:22,
24 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
26 = invokevirtual < Application, Landroid/content/Intent, getType()Ljava/lang/String; > 24 @69 exception:25,
28 = invokevirtual < Application, Landroid/content/Intent, setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent; > 19,23,26 @73 exception:27,
30 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 19,5 @77 exception:29,
32 = invokevirtual < Application, Landroid/content/Intent, getFlags()I > 19 @80 exception:31,
34 = binaryop(and) 32 , 33,
conditional branch(eq, to iindex=-1) 34,5,
goto (from iindex= 46 to iindex = 2),
36 = phi  35,5,
38 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @92 exception:37,
39 = getfield < Application, Lcom/android/server/wm/ActivityRecord, resolvedType, <Application,Ljava/lang/String> > 16,
42 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @101 exception:41,
140 = phi  89,89,89,89,5,
conditional branch(ne, to iindex=-1) 140,5,
invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, abort(Lcom/android/server/wm/SafeActivityOptions;)V > 12 @267 exception:216,
conditional branch(eq, to iindex=-1) 1,2,
invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, abort()V > 1 @2 exception:3,
2 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mOriginalOptions, <Application,Landroid/app/ActivityOptions> > 1,
conditional branch(eq, to iindex=-1) 2,3,
invokestatic < Application, Landroid/app/ActivityOptions, abort(Landroid/app/ActivityOptions;)V > 2 @4 exception:4,
5 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mCallerOptions, <Application,Landroid/app/ActivityOptions> > 1,
conditional branch(eq, to iindex=-1) 5,3,
invokestatic < Application, Landroid/app/ActivityOptions, abort(Landroid/app/ActivityOptions;)V > 5 @11 exception:6,
return,
return,
conditional branch(eq, to iindex=-1) 36,5,
219 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 92,217 @276 exception:218,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @280 exception:224,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 5,","depth : 0
public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v2 = SafeActivityOptions.fromBundle(p3);
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.isInRootTaskLocked(p1);
	boolean v5 = v4.attachedToProcess();
	Intent v5 = new Intent(p2);
	Uri v7 = ActivityRecord.intent.getData();
	String v8 = ActivityRecord.intent.getType();
	Intent v9 = v5.setDataAndType(v7, v8);
	Intent v10 = v5.setComponent(0);
	int v11 = v5.getFlags();
	IPackageManager v12 = AppGlobals.getPackageManager();
	int v13 = UserHandle.getCallingUserId();
	SafeActivityOptions.abort(v2);
	int v15 = Slog.d(""ActivityTaskManager"", ""Next matching activity: nothing found"");
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions fromBundle(Bundle p1){
	ActivityOptions v0 = new ActivityOptions(p1);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public ActivityRecord isInRootTaskLocked(IBinder p1){
	ActivityRecord v1 = ActivityRecord.forTokenLocked(p1);
	Task v2 = v1.getRootTask();
	ActivityRecord v3 = v2.isInTask(v1);
	return phiInstruction;
}
-----
depth : 2
public ActivityRecord forTokenLocked(IBinder p1){
	Object v1 = ActivityRecord$Token.mActivityRef.get();
	Task v2 = v1.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(){
	Task v1 = this.task.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public ActivityRecord isInTask(ActivityRecord p1){
	boolean v1 = p1.isDescendantOf(p0);
	return p1;
}
-----
depth : 1
public boolean attachedToProcess(){
	boolean v1 = p0.hasProcess();
	boolean v2 = this.app.hasThread();
	return phiInstruction;
}
-----
depth : 2
public boolean hasThread(){
	return phiInstruction;
}
-----
depth : 1
public void abort(SafeActivityOptions p1){
	p1.abort();
	return;
}
-----
depth : 2
public void abort(){
	ActivityOptions.abort(this.mOriginalOptions);
	ActivityOptions.abort(this.mCallerOptions);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v3 = new SafeActivityOptions(v4);
	ActivityOptions v5 = new ActivityOptions(p1);
	ActivityOptions v4 = phiInstruction;
	SafeActivityOptions v2 = phiInstruction;
	WindowManagerThreadPriorityBooster.boost();
	Object v14 = ActivityRecord$Token.mActivityRef.get();
	Task v15 = v14.getRootTask();
	ActivityRecord v13 = phiInstruction;
	Task v17 = this.task.getRootTask();
	Task v16 = phiInstruction;
	boolean v19 = v13.isDescendantOf(Task);
	ActivityRecord v18 = v13;
	ActivityRecord v12 = phiInstruction;
	boolean v21 = ActivityRecord.hasProcess();
	boolean v22 = phiInstruction;
	boolean v20 = phiInstruction;
	Intent v23 = new Intent(p2);
	Uri v25 = ActivityRecord.intent.getData();
	String v26 = ActivityRecord.intent.getType();
	Intent v27 = v23.setDataAndType(v25, v26);
	Intent v28 = v23.setComponent(0);
	int v29 = v23.getFlags();
	IPackageManager v30 = AppGlobals.getPackageManager();
	int v31 = UserHandle.getCallingUserId();
	ActivityOptions.abort(this.mOriginalOptions);
	ActivityOptions.abort(this.mCallerOptions);
	return 0;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","startNextMatchingActivity(Landroid/os/IBinder;Landroid/content/Intent;Landroid/os/Bundle;)Z","2","conditional branch(eq, to iindex=-1) 3,5,
7 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 3 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 4 to iindex = 9),
12 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 4 @17 exception:11,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/app/ActivityOptions>@2,
invokespecial < Application, Landroid/app/ActivityOptions, <init>(Landroid/os/Bundle;)V > 3,1 @4 exception:4,
goto (from iindex= 3 to iindex = 2),
5 = phi  3,2,
return 5,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @24 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
16 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, isInRootTaskLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @27 exception:15,
3 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 1,2,
3 = checkcast <Application,Lcom/android/server/wm/ActivityRecord$Token>1 <Application,Lcom/android/server/wm/ActivityRecord$Token>,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord$Token, mActivityRef, <Application,Ljava/lang/ref/WeakReference> > 3,
19 = invokevirtual < Application, Ljava/lang/ref/WeakReference, get()Ljava/lang/Object; > 17 @8 exception:18,
20 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>19 <Application,Lcom/android/server/wm/ActivityRecord>,
conditional branch(eq, to iindex=-1) 20,2,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 20 @16 exception:21,
conditional branch(ne, to iindex=-1) 22,2,
goto (from iindex= 12 to iindex = 2),
23 = phi  2,2,20,
return 23,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 3 @6 exception:5,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 2 @4 exception:4,
goto (from iindex= 4 to iindex = 2),
6 = phi  5,3,
return 6,
8 = invokevirtual < Application, Lcom/android/server/wm/Task, isInTask(Lcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 6,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isDescendantOf(Lcom/android/server/wm/WindowContainer;)Z > 2,1 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
return 3,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
conditional branch(ne, to iindex=-1) 16,5,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 16 @42 exception:17,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, hasProcess()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 5 @8 exception:6,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 7,4,
goto (from iindex= 8 to iindex = 2),
12 = phi  11,4,
return 12,
conditional branch(ne, to iindex=-1) 18,5,
19 = new <Application,Landroid/content/Intent>@56,
invokespecial < Application, Landroid/content/Intent, <init>(Landroid/content/Intent;)V > 19,3 @58 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
23 = invokevirtual < Application, Landroid/content/Intent, getData()Landroid/net/Uri; > 21 @63 exception:22,
24 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 16,
26 = invokevirtual < Application, Landroid/content/Intent, getType()Ljava/lang/String; > 24 @69 exception:25,
28 = invokevirtual < Application, Landroid/content/Intent, setDataAndType(Landroid/net/Uri;Ljava/lang/String;)Landroid/content/Intent; > 19,23,26 @73 exception:27,
30 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 19,5 @77 exception:29,
32 = invokevirtual < Application, Landroid/content/Intent, getFlags()I > 19 @80 exception:31,
34 = binaryop(and) 32 , 33,
conditional branch(eq, to iindex=-1) 34,5,
goto (from iindex= 46 to iindex = 2),
36 = phi  35,5,
38 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @92 exception:37,
39 = getfield < Application, Lcom/android/server/wm/ActivityRecord, resolvedType, <Application,Ljava/lang/String> > 16,
42 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @101 exception:41,
140 = phi  89,89,89,89,5,
conditional branch(ne, to iindex=-1) 140,5,
invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, abort(Lcom/android/server/wm/SafeActivityOptions;)V > 12 @267 exception:216,
conditional branch(eq, to iindex=-1) 1,2,
invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, abort()V > 1 @2 exception:3,
2 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mOriginalOptions, <Application,Landroid/app/ActivityOptions> > 1,
conditional branch(eq, to iindex=-1) 2,3,
invokestatic < Application, Landroid/app/ActivityOptions, abort(Landroid/app/ActivityOptions;)V > 2 @4 exception:4,
5 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mCallerOptions, <Application,Landroid/app/ActivityOptions> > 1,
conditional branch(eq, to iindex=-1) 5,3,
invokestatic < Application, Landroid/app/ActivityOptions, abort(Landroid/app/ActivityOptions;)V > 5 @11 exception:6,
return,
return,
conditional branch(eq, to iindex=-1) 36,5,
219 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 92,217 @276 exception:218,
monitorexit 13,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @280 exception:224,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 5,","depth : 0
public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v2 = SafeActivityOptions.fromBundle(p3);
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.isInRootTaskLocked(p1);
	boolean v5 = v4.attachedToProcess();
	Intent v5 = new Intent(p2);
	Uri v7 = ActivityRecord.intent.getData();
	String v8 = ActivityRecord.intent.getType();
	Intent v9 = v5.setDataAndType(v7, v8);
	Intent v10 = v5.setComponent(0);
	int v11 = v5.getFlags();
	IPackageManager v12 = AppGlobals.getPackageManager();
	int v13 = UserHandle.getCallingUserId();
	SafeActivityOptions.abort(v2);
	int v15 = Slog.d(""ActivityTaskManager"", ""Next matching activity: nothing found"");
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions fromBundle(Bundle p1){
	ActivityOptions v0 = new ActivityOptions(p1);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ActivityRecord isInRootTaskLocked(IBinder p1){
	ActivityRecord v1 = ActivityRecord.forTokenLocked(p1);
	Task v2 = v1.getRootTask();
	ActivityRecord v3 = v2.isInTask(v1);
	return phiInstruction;
}
-----
depth : 2
public ActivityRecord forTokenLocked(IBinder p1){
	Object v1 = ActivityRecord$Token.mActivityRef.get();
	Task v2 = v1.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(){
	Task v1 = this.task.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public ActivityRecord isInTask(ActivityRecord p1){
	boolean v1 = p1.isDescendantOf(p0);
	return 0;
}
-----
depth : 1
public boolean attachedToProcess(){
	boolean v1 = p0.hasProcess();
	boolean v2 = this.app.hasThread();
	return phiInstruction;
}
-----
depth : 2
public boolean hasThread(){
	return phiInstruction;
}
-----
depth : 1
public void abort(SafeActivityOptions p1){
	p1.abort();
	return;
}
-----
depth : 2
public void abort(){
	ActivityOptions.abort(this.mOriginalOptions);
	ActivityOptions.abort(this.mCallerOptions);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean startNextMatchingActivity(IBinder p1, Intent p2, Bundle p3){
	boolean v1 = p2.hasFileDescriptors();
	SafeActivityOptions v3 = new SafeActivityOptions(v4);
	ActivityOptions v5 = new ActivityOptions(p1);
	ActivityOptions v4 = phiInstruction;
	SafeActivityOptions v2 = phiInstruction;
	Object v13 = ActivityRecord$Token.mActivityRef.get();
	Task v14 = v13.getRootTask();
	ActivityRecord v12 = phiInstruction;
	Task v16 = this.task.getRootTask();
	Task v15 = phiInstruction;
	boolean v18 = v12.isDescendantOf(Task);
	ActivityRecord v17 = 0;
	ActivityRecord v11 = phiInstruction;
	boolean v20 = ActivityRecord.hasProcess();
	boolean v21 = phiInstruction;
	boolean v19 = phiInstruction;
	Intent v22 = new Intent(p2);
	Uri v24 = ActivityRecord.intent.getData();
	String v25 = ActivityRecord.intent.getType();
	Intent v26 = v22.setDataAndType(v24, v25);
	Intent v27 = v22.setComponent(0);
	int v28 = v22.getFlags();
	IPackageManager v29 = AppGlobals.getPackageManager();
	int v30 = UserHandle.getCallingUserId();
	ActivityOptions.abort(this.mOriginalOptions);
	ActivityOptions.abort(this.mCallerOptions);
	return 0;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedTask(I)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, setFocusedTask(ILcom/android/server/wm/ActivityRecord;)V > 1,2,9 @16 exception:10,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @20 exception:15,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @23 exception:20,
return,","depth : 0
public void setFocusedTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	p0.setFocusedTask(p1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","public void setFocusedTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	p0.setFocusedTask(p1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedTask(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, setFocusedTask(ILcom/android/server/wm/ActivityRecord;)V > 1,2,9 @16 exception:10,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
7 = conversion(J) 2,
9 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 3 @7 exception:8,
10 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
13 = new <Application,[Ljava/lang/Object>@1812 ,
15 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:14,
arraystore 13[6] = 15,
arraystore 13[5] = 9,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 10,11,5,6,13 @28 exception:16,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 18,2,6 @33 exception:19,
conditional branch(ne, to iindex=-1) 20,6,
22 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 20 @40 exception:21,
conditional branch(ne, to iindex=-1) 22,6,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 22,23 @49 exception:24,
conditional branch(eq, to iindex=-1) 25,6,
conditional branch(eq, to iindex=-1) 3,6,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 3 @63 exception:26,
conditional branch(eq, to iindex=-1) 27,6,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @69 exception:28,
conditional branch(eq, to iindex=-1) 29,6,
31 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isEmbedded()Z > 29 @75 exception:30,
conditional branch(eq, to iindex=-1) 31,6,
33 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 3 @81 exception:32,
35 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 33,3 @85 exception:34,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
38 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 36,6,5 @90 exception:37,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @20 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @23 exception:20,
return,","depth : 0
public void setFocusedTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	p0.setFocusedTask(p1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void setFocusedTask(int p1, ActivityRecord p2){
	String v1 = String.valueOf(p2);
	Object v1 = new Object(2);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v1);
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v5 = v4.topRunningActivityLocked();
	boolean v6 = v5.moveFocusableActivityToTop(""setFocusedTask"");
	boolean v7 = p2.isFocusable();
	TaskFragment v8 = p2.getTaskFragment();
	boolean v9 = v8.isEmbedded();
	DisplayContent v10 = p2.getDisplayContent();
	boolean v11 = v10.setFocusedApp(p2);
	boolean v12 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setFocusedTask(int p1){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	String v9 = String.valueOf(0);
	Object v10 = new Object(2);
	Long v11 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v10);
	Task v13 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v14 = v13.topRunningActivityLocked();
	boolean v15 = v14.moveFocusableActivityToTop(""setFocusedTask"");
	boolean v16 = 0.isFocusable();
	TaskFragment v17 = 0.getTaskFragment();
	boolean v18 = v17.isEmbedded();
	DisplayContent v19 = 0.getDisplayContent();
	boolean v20 = v19.setFocusedApp(0);
	boolean v21 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedTask(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, setFocusedTask(ILcom/android/server/wm/ActivityRecord;)V > 1,2,9 @16 exception:10,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
7 = conversion(J) 2,
9 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 3 @7 exception:8,
10 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
13 = new <Application,[Ljava/lang/Object>@1812 ,
15 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:14,
arraystore 13[6] = 15,
arraystore 13[5] = 9,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 10,11,5,6,13 @28 exception:16,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 18,2,6 @33 exception:19,
conditional branch(ne, to iindex=-1) 20,6,
22 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 20 @40 exception:21,
conditional branch(ne, to iindex=-1) 22,6,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 22,23 @49 exception:24,
conditional branch(eq, to iindex=-1) 25,6,
conditional branch(eq, to iindex=-1) 3,6,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 3 @63 exception:26,
conditional branch(eq, to iindex=-1) 27,6,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @69 exception:28,
conditional branch(eq, to iindex=-1) 29,6,
31 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isEmbedded()Z > 29 @75 exception:30,
conditional branch(eq, to iindex=-1) 31,6,
33 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 3 @81 exception:32,
35 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 33,3 @85 exception:34,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
38 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 36,6,5 @90 exception:37,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @20 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @23 exception:20,
return,","depth : 0
public void setFocusedTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	p0.setFocusedTask(p1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void setFocusedTask(int p1, ActivityRecord p2){
	String v1 = String.valueOf(p2);
	Object v1 = new Object(2);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v1);
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v5 = v4.topRunningActivityLocked();
	boolean v6 = v5.moveFocusableActivityToTop(""setFocusedTask"");
	boolean v7 = p2.isFocusable();
	TaskFragment v8 = p2.getTaskFragment();
	boolean v9 = v8.isEmbedded();
	DisplayContent v10 = p2.getDisplayContent();
	boolean v11 = v10.setFocusedApp(p2);
	boolean v12 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setFocusedTask(int p1){
	long v3 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	String v7 = String.valueOf(0);
	Object v8 = new Object(2);
	Long v9 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v8);
	Task v11 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v12 = v11.topRunningActivityLocked();
	boolean v13 = v12.moveFocusableActivityToTop(""setFocusedTask"");
	boolean v14 = 0.isFocusable();
	TaskFragment v15 = 0.getTaskFragment();
	boolean v16 = v15.isEmbedded();
	DisplayContent v17 = 0.getDisplayContent();
	boolean v18 = v17.setFocusedApp(0);
	boolean v19 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedTask(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, setFocusedTask(ILcom/android/server/wm/ActivityRecord;)V > 1,2,9 @16 exception:10,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
7 = conversion(J) 2,
9 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 3 @7 exception:8,
10 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
13 = new <Application,[Ljava/lang/Object>@1812 ,
15 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:14,
arraystore 13[6] = 15,
arraystore 13[5] = 9,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 10,11,5,6,13 @28 exception:16,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 18,2,6 @33 exception:19,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 20,6,
22 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 20 @40 exception:21,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda6>@8,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6, <init>()V > 5 @10 exception:6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,5 @13 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 22,6,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 22,23 @49 exception:24,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 1 @30 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
10 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 9,
conditional branch(eq, to iindex=-1) 10,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 10,
12 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 11,12,
13 = new <Application,Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4>@81,
invokespecial < Application, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4, <init>()V > 13 @83 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 9,13,6 @86 exception:15,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 17,16,
conditional branch(ne, to iindex=-1) 10,1,
44 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 44,5,
46 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @121 exception:45,
47 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
49 = new <Application,[Ljava/lang/Object>@1306 ,
arraystore 49[5] = 46,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 47,48,5,5,49 @134 exception:50,
57 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
59 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 57,1 @139 exception:58,
60 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
61 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 60,
63 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 61,5,6 @146 exception:62,
77 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, RESUMED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
79 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;)Z > 1,77 @151 exception:78,
80 = binaryop(xor) 79 , 6,
return 80,
conditional branch(eq, to iindex=-1) 25,6,
conditional branch(eq, to iindex=-1) 3,6,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 3 @63 exception:26,
3 = invokespecial < Application, Lcom/android/server/wm/WindowContainer, isFocusable()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, canReceiveKeys()Z > 1 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isAlwaysFocusable()Z > 1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 2),
18 = phi  16,4,
return 18,
conditional branch(eq, to iindex=-1) 27,6,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @69 exception:28,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @6 exception:5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,4,
return 7,
conditional branch(eq, to iindex=-1) 29,6,
31 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isEmbedded()Z > 29 @75 exception:30,
2 = getfield < Application, Lcom/android/server/wm/TaskFragment, mIsEmbedded, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 2,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 6 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isEmbedded()Z > 8 @19 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
goto (from iindex= 14 to iindex = 2),
14 = phi  3,4,
return 14,
conditional branch(eq, to iindex=-1) 31,6,
33 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 3 @81 exception:32,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
return 2,
35 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 33,3 @85 exception:34,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,1,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @55 exception:6,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, onLastFocusedTaskDisplayAreaChanged(Lcom/android/server/wm/TaskDisplayArea;)V > 1,7 @59 exception:8,
9 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 9,2,
10 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_LIGHT_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 10,3,
13 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @74 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayId()I > 1 @78 exception:14,
16 = conversion(J) 15,
19 = invokestatic < Application, Landroid/os/Debug, getCallers(I)Ljava/lang/String; > 17 @84 exception:18,
21 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 19 @88 exception:20,
22 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS_LIGHT, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
25 = new <Application,[Ljava/lang/Object>@9824 ,
arraystore 25[3] = 13,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @102 exception:26,
arraystore 25[11] = 27,
arraystore 25[28] = 21,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 22,23,17,3,25 @111 exception:29,
33 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(eq, to iindex=-1) 33,3,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 33 @118 exception:34,
goto (from iindex= 61 to iindex = 2),
36 = phi  35,3,
conditional branch(eq, to iindex=-1) 2,3,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 2 @126 exception:39,
41 = phi  3,40,
putfield 1.< Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > = 2,
conditional branch(eq, to iindex=-1) 36,41,
conditional branch(eq, to iindex=-1) 36,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 36,3 @136 exception:44,
conditional branch(eq, to iindex=-1) 41,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 41,11 @141 exception:46,
49 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getInputMonitor()Lcom/android/server/wm/InputMonitor; > 1 @144 exception:48,
invokevirtual < Application, Lcom/android/server/wm/InputMonitor, setFocusedAppLw(Lcom/android/server/wm/ActivityRecord;)V > 49,2 @148 exception:50,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, updateTouchExcludeRegion()V > 1 @151 exception:51,
return 11,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
38 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 36,6,5 @90 exception:37,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @4 exception:6,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, updateFocusedWindowLocked(IZ)Z > 7,2,3 @9 exception:8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @13 exception:10,
return 9,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @20 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @23 exception:20,
return,","depth : 0
public void setFocusedTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	p0.setFocusedTask(p1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setFocusedTask(int p1, ActivityRecord p2){
	String v1 = String.valueOf(p2);
	Object v1 = new Object(2);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v1);
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v5 = v4.topRunningActivityLocked();
	boolean v6 = v5.moveFocusableActivityToTop(""setFocusedTask"");
	boolean v7 = p2.isFocusable();
	TaskFragment v8 = p2.getTaskFragment();
	boolean v9 = v8.isEmbedded();
	DisplayContent v10 = p2.getDisplayContent();
	boolean v11 = v10.setFocusedApp(p2);
	boolean v12 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
	return;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivityLocked(){
	WindowContainer v1 = p0.getParent();
	Task$$ExternalSyntheticLambda6 v1 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v3 = p0.getActivity(v1);
	return v3;
}
-----
depth : 2
public boolean moveFocusableActivityToTop(String p1){
	boolean v1 = p0.isFocusable();
	Task v2 = p0.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v2 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v4 = WindowContainer.mDisplayContent.getTask(v2, 1);
	String v5 = String.valueOf(p0);
	Object v5 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v5);
	boolean v7 = WindowContainer.mDisplayContent.setFocusedApp(p0);
	boolean v8 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v9 = p0.isState(ActivityRecord$State.RESUMED);
	return (v9 ^ 1);
}
-----
depth : 2
public boolean isFocusable(){
	boolean v1 = p0.isFocusable();
	boolean v2 = p0.canReceiveKeys();
	boolean v3 = p0.isAlwaysFocusable();
	return phiInstruction;
}
-----
depth : 2
public TaskFragment getTaskFragment(){
	WindowContainer v1 = p0.getParent();
	TaskFragment v2 = v1.asTaskFragment();
	return phiInstruction;
}
-----
depth : 2
public boolean isEmbedded(){
	WindowContainer v1 = p0.getParent();
	TaskFragment v2 = v1.asTaskFragment();
	boolean v3 = v2.isEmbedded();
	return phiInstruction;
}
-----
depth : 2
public DisplayContent getDisplayContent(){
	return this.mDisplayContent;
}
-----
depth : 2
public boolean setFocusedApp(ActivityRecord p1){
	DisplayContent v1 = p1.getDisplayContent();
	TaskDisplayArea v2 = p1.getDisplayArea();
	p0.onLastFocusedTaskDisplayAreaChanged(v2);
	String v4 = String.valueOf(p1);
	int v5 = p0.getDisplayId();
	String v6 = Debug.getCallers(4);
	String v7 = String.valueOf(v6);
	Object v7 = new Object(3);
	Long v8 = Long.valueOf(v5);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v7);
	Task v10 = this.mFocusedApp.getTask();
	Task v11 = p1.getTask();
	this.mFocusedApp = p1;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v14 = p0.getInputMonitor();
	v14.setFocusedAppLw(p1);
	p0.updateTouchExcludeRegion();
	return 1;
}
-----
depth : 2
public boolean updateFocusedWindowLocked(int p1, boolean p2){
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v2 = this.mRoot.updateFocusedWindowLocked(p1, p2);
	Trace.traceEnd(32);
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setFocusedTask(int p1){
	long v5 = Binder.clearCallingIdentity();
	String v10 = String.valueOf(0);
	Object v11 = new Object(2);
	Long v12 = Long.valueOf(p1);
	ProtoLogImpl v14 = ProtoLogImpl.getSingleInstance();
	v14.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v11);
	Task v17 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v16 = v17;
	WindowContainer v19 = Task.getParent();
	Task$$ExternalSyntheticLambda6 v20 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v22 = Task.getActivity(v20);
	ActivityRecord v18 = v22;
	boolean v24 = ActivityRecord.isFocusable();
	Task v25 = ActivityRecord.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v26 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v28 = WindowContainer.mDisplayContent.getTask(v26, 1);
	String v29 = String.valueOf(ActivityRecord);
	Object v30 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v30);
	boolean v32 = WindowContainer.mDisplayContent.setFocusedApp(ActivityRecord);
	boolean v33 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v34 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v23 = (v34 ^ 1);
	boolean v36 = ActivityRecord.isFocusable();
	boolean v37 = ActivityRecord.canReceiveKeys();
	boolean v38 = ActivityRecord.isAlwaysFocusable();
	boolean v35 = phiInstruction;
	WindowContainer v40 = ActivityRecord.getParent();
	TaskFragment v41 = v40.asTaskFragment();
	TaskFragment v39 = phiInstruction;
	WindowContainer v43 = TaskFragment.getParent();
	TaskFragment v44 = v43.asTaskFragment();
	boolean v45 = v44.isEmbedded();
	boolean v42 = phiInstruction;
	DisplayContent v46 = this.mDisplayContent;
	DisplayContent v48 = p2.getDisplayContent();
	TaskDisplayArea v49 = p2.getDisplayArea();
	DisplayContent.onLastFocusedTaskDisplayAreaChanged(v49);
	String v51 = String.valueOf(p2);
	int v52 = DisplayContent.getDisplayId();
	String v53 = Debug.getCallers(4);
	String v54 = String.valueOf(v53);
	Object v55 = new Object(3);
	Long v56 = Long.valueOf(v52);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v55);
	Task v58 = this.mFocusedApp.getTask();
	Task v59 = p2.getTask();
	this.mFocusedApp = p2;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v62 = DisplayContent.getInputMonitor();
	v62.setFocusedAppLw(p2);
	DisplayContent.updateTouchExcludeRegion();
	boolean v47 = 1;
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v67 = this.mRoot.updateFocusedWindowLocked(0, 1);
	Trace.traceEnd(32);
	boolean v65 = v67;
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedTask(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, setFocusedTask(ILcom/android/server/wm/ActivityRecord;)V > 1,2,9 @16 exception:10,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
7 = conversion(J) 2,
9 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 3 @7 exception:8,
10 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
13 = new <Application,[Ljava/lang/Object>@1812 ,
15 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:14,
arraystore 13[6] = 15,
arraystore 13[5] = 9,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 10,11,5,6,13 @28 exception:16,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 18,2,6 @33 exception:19,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 20,6,
22 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 20 @40 exception:21,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda6>@8,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6, <init>()V > 5 @10 exception:6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,5 @13 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 22,6,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 22,23 @49 exception:24,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 1 @30 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
10 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 9,
conditional branch(eq, to iindex=-1) 10,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 10,
12 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 11,12,
13 = new <Application,Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4>@81,
invokespecial < Application, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4, <init>()V > 13 @83 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 9,13,6 @86 exception:15,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 17,16,
conditional branch(ne, to iindex=-1) 10,1,
44 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 44,5,
46 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @121 exception:45,
47 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
49 = new <Application,[Ljava/lang/Object>@1306 ,
arraystore 49[5] = 46,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 47,48,5,5,49 @134 exception:50,
57 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
59 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 57,1 @139 exception:58,
60 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
61 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 60,
63 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 61,5,6 @146 exception:62,
77 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, RESUMED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
79 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;)Z > 1,77 @151 exception:78,
80 = binaryop(xor) 79 , 6,
return 80,
conditional branch(eq, to iindex=-1) 25,6,
conditional branch(eq, to iindex=-1) 3,6,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 3 @63 exception:26,
3 = invokespecial < Application, Lcom/android/server/wm/WindowContainer, isFocusable()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, canReceiveKeys()Z > 1 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isAlwaysFocusable()Z > 1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 2),
18 = phi  16,4,
return 18,
conditional branch(eq, to iindex=-1) 27,6,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @69 exception:28,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @6 exception:5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,4,
return 7,
conditional branch(eq, to iindex=-1) 29,6,
31 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isEmbedded()Z > 29 @75 exception:30,
2 = getfield < Application, Lcom/android/server/wm/TaskFragment, mIsEmbedded, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 2,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 6 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isEmbedded()Z > 8 @19 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
goto (from iindex= 14 to iindex = 2),
14 = phi  3,4,
return 14,
conditional branch(eq, to iindex=-1) 31,6,
33 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 3 @81 exception:32,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
return 2,
35 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 33,3 @85 exception:34,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,1,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @55 exception:6,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, onLastFocusedTaskDisplayAreaChanged(Lcom/android/server/wm/TaskDisplayArea;)V > 1,7 @59 exception:8,
9 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 9,2,
10 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_LIGHT_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 10,3,
13 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @74 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayId()I > 1 @78 exception:14,
16 = conversion(J) 15,
19 = invokestatic < Application, Landroid/os/Debug, getCallers(I)Ljava/lang/String; > 17 @84 exception:18,
21 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 19 @88 exception:20,
22 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS_LIGHT, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
25 = new <Application,[Ljava/lang/Object>@9824 ,
arraystore 25[3] = 13,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @102 exception:26,
arraystore 25[11] = 27,
arraystore 25[28] = 21,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 22,23,17,3,25 @111 exception:29,
33 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(eq, to iindex=-1) 33,3,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 33 @118 exception:34,
goto (from iindex= 61 to iindex = 2),
36 = phi  35,3,
conditional branch(eq, to iindex=-1) 2,3,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 2 @126 exception:39,
41 = phi  3,40,
putfield 1.< Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > = 2,
conditional branch(eq, to iindex=-1) 36,41,
conditional branch(eq, to iindex=-1) 36,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 36,3 @136 exception:44,
conditional branch(eq, to iindex=-1) 41,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 41,11 @141 exception:46,
49 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getInputMonitor()Lcom/android/server/wm/InputMonitor; > 1 @144 exception:48,
invokevirtual < Application, Lcom/android/server/wm/InputMonitor, setFocusedAppLw(Lcom/android/server/wm/ActivityRecord;)V > 49,2 @148 exception:50,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, updateTouchExcludeRegion()V > 1 @151 exception:51,
return 11,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
38 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 36,6,5 @90 exception:37,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @4 exception:6,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, updateFocusedWindowLocked(IZ)Z > 7,2,3 @9 exception:8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @13 exception:10,
return 9,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @20 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @23 exception:20,
return,","depth : 0
public void setFocusedTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	p0.setFocusedTask(p1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void setFocusedTask(int p1, ActivityRecord p2){
	String v1 = String.valueOf(p2);
	Object v1 = new Object(2);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v1);
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v5 = v4.topRunningActivityLocked();
	boolean v6 = v5.moveFocusableActivityToTop(""setFocusedTask"");
	boolean v7 = p2.isFocusable();
	TaskFragment v8 = p2.getTaskFragment();
	boolean v9 = v8.isEmbedded();
	DisplayContent v10 = p2.getDisplayContent();
	boolean v11 = v10.setFocusedApp(p2);
	boolean v12 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
	return;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivityLocked(){
	WindowContainer v1 = p0.getParent();
	Task$$ExternalSyntheticLambda6 v1 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v3 = p0.getActivity(v1);
	return v3;
}
-----
depth : 2
public boolean moveFocusableActivityToTop(String p1){
	boolean v1 = p0.isFocusable();
	Task v2 = p0.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v2 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v4 = WindowContainer.mDisplayContent.getTask(v2, 1);
	String v5 = String.valueOf(p0);
	Object v5 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v5);
	boolean v7 = WindowContainer.mDisplayContent.setFocusedApp(p0);
	boolean v8 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v9 = p0.isState(ActivityRecord$State.RESUMED);
	return (v9 ^ 1);
}
-----
depth : 2
public boolean isFocusable(){
	boolean v1 = p0.isFocusable();
	boolean v2 = p0.canReceiveKeys();
	boolean v3 = p0.isAlwaysFocusable();
	return phiInstruction;
}
-----
depth : 2
public TaskFragment getTaskFragment(){
	WindowContainer v1 = p0.getParent();
	TaskFragment v2 = v1.asTaskFragment();
	return phiInstruction;
}
-----
depth : 2
public boolean isEmbedded(){
	WindowContainer v1 = p0.getParent();
	TaskFragment v2 = v1.asTaskFragment();
	boolean v3 = v2.isEmbedded();
	return phiInstruction;
}
-----
depth : 2
public DisplayContent getDisplayContent(){
	return this.mDisplayContent;
}
-----
depth : 2
public boolean setFocusedApp(ActivityRecord p1){
	DisplayContent v1 = p1.getDisplayContent();
	TaskDisplayArea v2 = p1.getDisplayArea();
	p0.onLastFocusedTaskDisplayAreaChanged(v2);
	String v4 = String.valueOf(p1);
	int v5 = p0.getDisplayId();
	String v6 = Debug.getCallers(4);
	String v7 = String.valueOf(v6);
	Object v7 = new Object(3);
	Long v8 = Long.valueOf(v5);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v7);
	Task v10 = this.mFocusedApp.getTask();
	Task v11 = p1.getTask();
	this.mFocusedApp = p1;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v14 = p0.getInputMonitor();
	v14.setFocusedAppLw(p1);
	p0.updateTouchExcludeRegion();
	return 1;
}
-----
depth : 2
public boolean updateFocusedWindowLocked(int p1, boolean p2){
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v2 = this.mRoot.updateFocusedWindowLocked(p1, p2);
	Trace.traceEnd(32);
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setFocusedTask(int p1){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	String v11 = String.valueOf(0);
	Object v12 = new Object(2);
	Long v13 = Long.valueOf(p1);
	ProtoLogImpl v15 = ProtoLogImpl.getSingleInstance();
	v15.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v12);
	Task v18 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v17 = v18;
	WindowContainer v20 = Task.getParent();
	Task$$ExternalSyntheticLambda6 v21 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v23 = Task.getActivity(v21);
	ActivityRecord v19 = v23;
	boolean v25 = ActivityRecord.isFocusable();
	Task v26 = ActivityRecord.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v27 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v29 = WindowContainer.mDisplayContent.getTask(v27, 1);
	String v30 = String.valueOf(ActivityRecord);
	Object v31 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v31);
	boolean v33 = WindowContainer.mDisplayContent.setFocusedApp(ActivityRecord);
	boolean v34 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v35 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v24 = (v35 ^ 1);
	boolean v37 = ActivityRecord.isFocusable();
	boolean v38 = ActivityRecord.canReceiveKeys();
	boolean v39 = ActivityRecord.isAlwaysFocusable();
	boolean v36 = phiInstruction;
	WindowContainer v41 = ActivityRecord.getParent();
	TaskFragment v42 = v41.asTaskFragment();
	TaskFragment v40 = phiInstruction;
	WindowContainer v44 = TaskFragment.getParent();
	TaskFragment v45 = v44.asTaskFragment();
	boolean v46 = v45.isEmbedded();
	boolean v43 = phiInstruction;
	DisplayContent v47 = this.mDisplayContent;
	DisplayContent v49 = p2.getDisplayContent();
	TaskDisplayArea v50 = p2.getDisplayArea();
	DisplayContent.onLastFocusedTaskDisplayAreaChanged(v50);
	String v52 = String.valueOf(p2);
	int v53 = DisplayContent.getDisplayId();
	String v54 = Debug.getCallers(4);
	String v55 = String.valueOf(v54);
	Object v56 = new Object(3);
	Long v57 = Long.valueOf(v53);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v56);
	Task v59 = this.mFocusedApp.getTask();
	Task v60 = p2.getTask();
	this.mFocusedApp = p2;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v63 = DisplayContent.getInputMonitor();
	v63.setFocusedAppLw(p2);
	DisplayContent.updateTouchExcludeRegion();
	boolean v48 = 1;
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v68 = this.mRoot.updateFocusedWindowLocked(0, 1);
	Trace.traceEnd(32);
	boolean v66 = v68;
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedTask(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, setFocusedTask(ILcom/android/server/wm/ActivityRecord;)V > 1,2,9 @16 exception:10,
4 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,6,
7 = conversion(J) 2,
9 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 3 @7 exception:8,
10 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
13 = new <Application,[Ljava/lang/Object>@1812 ,
15 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:14,
arraystore 13[6] = 15,
arraystore 13[5] = 9,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 10,11,5,6,13 @28 exception:16,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 18,2,6 @33 exception:19,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 20,6,
22 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 20 @40 exception:21,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda6>@8,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6, <init>()V > 5 @10 exception:6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,5 @13 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 22,6,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 22,23 @49 exception:24,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 1 @30 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
10 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 9,
conditional branch(eq, to iindex=-1) 10,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 10,
12 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 11,12,
13 = new <Application,Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4>@81,
invokespecial < Application, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4, <init>()V > 13 @83 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 9,13,6 @86 exception:15,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 17,16,
conditional branch(ne, to iindex=-1) 10,1,
44 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 44,5,
46 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @121 exception:45,
47 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
49 = new <Application,[Ljava/lang/Object>@1306 ,
arraystore 49[5] = 46,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 47,48,5,5,49 @134 exception:50,
57 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
59 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 57,1 @139 exception:58,
60 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
61 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 60,
63 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 61,5,6 @146 exception:62,
77 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, RESUMED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
79 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;)Z > 1,77 @151 exception:78,
80 = binaryop(xor) 79 , 6,
return 80,
conditional branch(eq, to iindex=-1) 25,6,
conditional branch(eq, to iindex=-1) 3,6,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 3 @63 exception:26,
3 = invokespecial < Application, Lcom/android/server/wm/WindowContainer, isFocusable()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, canReceiveKeys()Z > 1 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isAlwaysFocusable()Z > 1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 2),
18 = phi  16,4,
return 18,
conditional branch(eq, to iindex=-1) 27,6,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @69 exception:28,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 3 @6 exception:5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,4,
return 7,
conditional branch(eq, to iindex=-1) 29,6,
31 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isEmbedded()Z > 29 @75 exception:30,
2 = getfield < Application, Lcom/android/server/wm/TaskFragment, mIsEmbedded, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 2,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 6 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, isEmbedded()Z > 8 @19 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
goto (from iindex= 14 to iindex = 2),
14 = phi  3,4,
return 14,
conditional branch(eq, to iindex=-1) 31,6,
33 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 3 @81 exception:32,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
return 2,
35 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 33,3 @85 exception:34,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,1,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @55 exception:6,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, onLastFocusedTaskDisplayAreaChanged(Lcom/android/server/wm/TaskDisplayArea;)V > 1,7 @59 exception:8,
9 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 9,2,
10 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_LIGHT_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 10,3,
13 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @74 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayId()I > 1 @78 exception:14,
16 = conversion(J) 15,
19 = invokestatic < Application, Landroid/os/Debug, getCallers(I)Ljava/lang/String; > 17 @84 exception:18,
21 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 19 @88 exception:20,
22 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS_LIGHT, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
25 = new <Application,[Ljava/lang/Object>@9824 ,
arraystore 25[3] = 13,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @102 exception:26,
arraystore 25[11] = 27,
arraystore 25[28] = 21,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 22,23,17,3,25 @111 exception:29,
33 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(eq, to iindex=-1) 33,3,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 33 @118 exception:34,
goto (from iindex= 61 to iindex = 2),
36 = phi  35,3,
conditional branch(eq, to iindex=-1) 2,3,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 2 @126 exception:39,
41 = phi  3,40,
putfield 1.< Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > = 2,
conditional branch(eq, to iindex=-1) 36,41,
conditional branch(eq, to iindex=-1) 36,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 36,3 @136 exception:44,
conditional branch(eq, to iindex=-1) 41,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 41,11 @141 exception:46,
49 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getInputMonitor()Lcom/android/server/wm/InputMonitor; > 1 @144 exception:48,
invokevirtual < Application, Lcom/android/server/wm/InputMonitor, setFocusedAppLw(Lcom/android/server/wm/ActivityRecord;)V > 49,2 @148 exception:50,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, updateTouchExcludeRegion()V > 1 @151 exception:51,
return 11,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
38 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 36,6,5 @90 exception:37,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @4 exception:6,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, updateFocusedWindowLocked(IZ)Z > 7,2,3 @9 exception:8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @13 exception:10,
return 9,
return,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @20 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @23 exception:20,
return,","depth : 0
public void setFocusedTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	p0.setFocusedTask(p1, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setFocusedTask(int p1, ActivityRecord p2){
	String v1 = String.valueOf(p2);
	Object v1 = new Object(2);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v1);
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	ActivityRecord v5 = v4.topRunningActivityLocked();
	boolean v6 = v5.moveFocusableActivityToTop(""setFocusedTask"");
	boolean v7 = p2.isFocusable();
	TaskFragment v8 = p2.getTaskFragment();
	boolean v9 = v8.isEmbedded();
	DisplayContent v10 = p2.getDisplayContent();
	boolean v11 = v10.setFocusedApp(p2);
	boolean v12 = this.mWindowManager.updateFocusedWindowLocked(0, 1);
	return;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivityLocked(){
	WindowContainer v1 = p0.getParent();
	Task$$ExternalSyntheticLambda6 v1 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v3 = p0.getActivity(v1);
	return v3;
}
-----
depth : 2
public boolean moveFocusableActivityToTop(String p1){
	boolean v1 = p0.isFocusable();
	Task v2 = p0.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v2 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v4 = WindowContainer.mDisplayContent.getTask(v2, 1);
	String v5 = String.valueOf(p0);
	Object v5 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v5);
	boolean v7 = WindowContainer.mDisplayContent.setFocusedApp(p0);
	boolean v8 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v9 = p0.isState(ActivityRecord$State.RESUMED);
	return (v9 ^ 1);
}
-----
depth : 2
public boolean isFocusable(){
	boolean v1 = p0.isFocusable();
	boolean v2 = p0.canReceiveKeys();
	boolean v3 = p0.isAlwaysFocusable();
	return phiInstruction;
}
-----
depth : 2
public TaskFragment getTaskFragment(){
	WindowContainer v1 = p0.getParent();
	TaskFragment v2 = v1.asTaskFragment();
	return phiInstruction;
}
-----
depth : 2
public boolean isEmbedded(){
	WindowContainer v1 = p0.getParent();
	TaskFragment v2 = v1.asTaskFragment();
	boolean v3 = v2.isEmbedded();
	return phiInstruction;
}
-----
depth : 2
public DisplayContent getDisplayContent(){
	return this.mDisplayContent;
}
-----
depth : 2
public boolean setFocusedApp(ActivityRecord p1){
	DisplayContent v1 = p1.getDisplayContent();
	TaskDisplayArea v2 = p1.getDisplayArea();
	p0.onLastFocusedTaskDisplayAreaChanged(v2);
	String v4 = String.valueOf(p1);
	int v5 = p0.getDisplayId();
	String v6 = Debug.getCallers(4);
	String v7 = String.valueOf(v6);
	Object v7 = new Object(3);
	Long v8 = Long.valueOf(v5);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v7);
	Task v10 = this.mFocusedApp.getTask();
	Task v11 = p1.getTask();
	this.mFocusedApp = p1;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v14 = p0.getInputMonitor();
	v14.setFocusedAppLw(p1);
	p0.updateTouchExcludeRegion();
	return 1;
}
-----
depth : 2
public boolean updateFocusedWindowLocked(int p1, boolean p2){
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v2 = this.mRoot.updateFocusedWindowLocked(p1, p2);
	Trace.traceEnd(32);
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setFocusedTask(int p1){
	long v5 = Binder.clearCallingIdentity();
	String v10 = String.valueOf(0);
	Object v11 = new Object(2);
	Long v12 = Long.valueOf(p1);
	ProtoLogImpl v14 = ProtoLogImpl.getSingleInstance();
	v14.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, -55185509, 1, 0, v11);
	Task v17 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v16 = v17;
	WindowContainer v19 = Task.getParent();
	Task$$ExternalSyntheticLambda6 v20 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v22 = Task.getActivity(v20);
	ActivityRecord v18 = v22;
	boolean v24 = ActivityRecord.isFocusable();
	Task v25 = ActivityRecord.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v26 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v28 = WindowContainer.mDisplayContent.getTask(v26, 1);
	String v29 = String.valueOf(ActivityRecord);
	Object v30 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v30);
	boolean v32 = WindowContainer.mDisplayContent.setFocusedApp(ActivityRecord);
	boolean v33 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v34 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v23 = (v34 ^ 1);
	boolean v36 = ActivityRecord.isFocusable();
	boolean v37 = ActivityRecord.canReceiveKeys();
	boolean v38 = ActivityRecord.isAlwaysFocusable();
	boolean v35 = phiInstruction;
	WindowContainer v40 = ActivityRecord.getParent();
	TaskFragment v41 = v40.asTaskFragment();
	TaskFragment v39 = phiInstruction;
	WindowContainer v43 = TaskFragment.getParent();
	TaskFragment v44 = v43.asTaskFragment();
	boolean v45 = v44.isEmbedded();
	boolean v42 = phiInstruction;
	DisplayContent v46 = this.mDisplayContent;
	DisplayContent v48 = p2.getDisplayContent();
	TaskDisplayArea v49 = p2.getDisplayArea();
	DisplayContent.onLastFocusedTaskDisplayAreaChanged(v49);
	String v51 = String.valueOf(p2);
	int v52 = DisplayContent.getDisplayId();
	String v53 = Debug.getCallers(4);
	String v54 = String.valueOf(v53);
	Object v55 = new Object(3);
	Long v56 = Long.valueOf(v52);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v55);
	Task v58 = this.mFocusedApp.getTask();
	Task v59 = p2.getTask();
	this.mFocusedApp = p2;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v62 = DisplayContent.getInputMonitor();
	v62.setFocusedAppLw(p2);
	DisplayContent.updateTouchExcludeRegion();
	boolean v47 = 1;
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v67 = this.mRoot.updateFocusedWindowLocked(0, 1);
	Trace.traceEnd(32);
	boolean v65 = v67;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedRootTask(I)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 5,6,
7 = conversion(J) 2,
8 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@1710 ,
13 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:12,
arraystore 11[6] = 13,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 8,9,10,6,11 @26 exception:14,
18 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:20,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
23 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 21,2 @41 exception:22,
conditional branch(ne, to iindex=-1) 23,6,
40 = new <Application,Ljava/lang/StringBuilder>@49,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 40 @51 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 40,42 @56 exception:43,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 40,2 @59 exception:45,
48 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 40 @62 exception:47,
50 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 39,48 @66 exception:49,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @70 exception:67,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 18 @73 exception:68,
return,","depth : 0
public void setFocusedRootTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedRootTask()"");
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 255339989, 1, 0, v1);
	long v4 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v6 = this.mRootWindowContainer.getRootTask(p1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""setFocusedRootTask: No task with id="");
	StringBuilder v9 = v6.append(p1);
	String v10 = v6.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
","public void setFocusedRootTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedRootTask()"");
	Object v2 = new Object(1);
	Long v3 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 255339989, 1, 0, v2);
	long v5 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v7 = this.mRootWindowContainer.getRootTask(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedRootTask(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 5,6,
7 = conversion(J) 2,
8 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@1710 ,
13 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:12,
arraystore 11[6] = 13,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 8,9,10,6,11 @26 exception:14,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
18 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
23 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 21,2 @41 exception:22,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(ne, to iindex=-1) 23,6,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 23 @77 exception:24,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 25,6,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 25,26 @85 exception:27,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 1 @30 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
10 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 9,
conditional branch(eq, to iindex=-1) 10,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 10,
12 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 11,12,
13 = new <Application,Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4>@81,
invokespecial < Application, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4, <init>()V > 13 @83 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 9,13,6 @86 exception:15,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 17,16,
conditional branch(ne, to iindex=-1) 10,1,
44 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 44,5,
46 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @121 exception:45,
47 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
49 = new <Application,[Ljava/lang/Object>@1306 ,
arraystore 49[5] = 46,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 47,48,5,5,49 @134 exception:50,
57 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
59 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 57,1 @139 exception:58,
60 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
61 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 60,
63 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 61,5,6 @146 exception:62,
77 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, RESUMED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
79 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;)Z > 1,77 @151 exception:78,
80 = binaryop(xor) 79 , 6,
return 80,
conditional branch(eq, to iindex=-1) 28,6,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 29 @93 exception:30,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @97 exception:37,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 18 @100 exception:38,
return,","depth : 0
public void setFocusedRootTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedRootTask()"");
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 255339989, 1, 0, v1);
	long v4 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v6 = this.mRootWindowContainer.getRootTask(p1);
	ActivityRecord v7 = v6.topRunningActivity();
	boolean v8 = v7.moveFocusableActivityToTop(""setFocusedRootTask"");
	boolean v9 = this.mRootWindowContainer.resumeFocusedTasksTopActivities();
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 1
public boolean moveFocusableActivityToTop(String p1){
	boolean v1 = p0.isFocusable();
	Task v2 = p0.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v2 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v4 = WindowContainer.mDisplayContent.getTask(v2, 1);
	String v5 = String.valueOf(p0);
	Object v5 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v5);
	boolean v7 = WindowContainer.mDisplayContent.setFocusedApp(p0);
	boolean v8 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v9 = p0.isState(ActivityRecord$State.RESUMED);
	return (v9 ^ 1);
}
-----
depth : 1
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setFocusedRootTask(int p1){
	Object v5 = new Object(1);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl v8 = ProtoLogImpl.getSingleInstance();
	v8.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, 255339989, 1, 0, v5);
	long v10 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	int v14 = RootWindowContainer.getChildCount();
	WindowContainer v15 = RootWindowContainer.getChildAt(phiInstruction);
	Task v16 = v15.getRootTask(p1);
	Task v13 = v16;
	ActivityRecord v18 = TaskFragment.topRunningActivity(0);
	ActivityRecord v17 = v18;
	boolean v20 = ActivityRecord.isFocusable();
	Task v21 = ActivityRecord.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v22 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v24 = WindowContainer.mDisplayContent.getTask(v22, 1);
	String v25 = String.valueOf(ActivityRecord);
	Object v26 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v26);
	boolean v28 = WindowContainer.mDisplayContent.setFocusedApp(ActivityRecord);
	boolean v29 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v30 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v19 = (v30 ^ 1);
	boolean v32 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v31 = v32;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v10);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedRootTask(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
5 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 5,6,
7 = conversion(J) 2,
8 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@1710 ,
13 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:12,
arraystore 11[6] = 13,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 8,9,10,6,11 @26 exception:14,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
18 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
23 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 21,2 @41 exception:22,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(ne, to iindex=-1) 23,6,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 23 @77 exception:24,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 25,6,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 25,26 @85 exception:27,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 1 @30 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
10 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 9,
conditional branch(eq, to iindex=-1) 10,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 10,
12 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 11,12,
13 = new <Application,Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4>@81,
invokespecial < Application, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4, <init>()V > 13 @83 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 9,13,6 @86 exception:15,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 17,16,
conditional branch(ne, to iindex=-1) 10,1,
44 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 44,5,
46 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @121 exception:45,
47 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
49 = new <Application,[Ljava/lang/Object>@1306 ,
arraystore 49[5] = 46,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 47,48,5,5,49 @134 exception:50,
57 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
59 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 57,1 @139 exception:58,
60 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
61 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 60,
63 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 61,5,6 @146 exception:62,
77 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, RESUMED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
79 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;)Z > 1,77 @151 exception:78,
80 = binaryop(xor) 79 , 6,
return 80,
conditional branch(eq, to iindex=-1) 28,6,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 29 @93 exception:30,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @97 exception:37,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 18 @100 exception:38,
return,","depth : 0
public void setFocusedRootTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedRootTask()"");
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 255339989, 1, 0, v1);
	long v4 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v6 = this.mRootWindowContainer.getRootTask(p1);
	ActivityRecord v7 = v6.topRunningActivity();
	boolean v8 = v7.moveFocusableActivityToTop(""setFocusedRootTask"");
	boolean v9 = this.mRootWindowContainer.resumeFocusedTasksTopActivities();
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 1
public boolean moveFocusableActivityToTop(String p1){
	boolean v1 = p0.isFocusable();
	Task v2 = p0.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v2 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v4 = WindowContainer.mDisplayContent.getTask(v2, 1);
	String v5 = String.valueOf(p0);
	Object v5 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v5);
	boolean v7 = WindowContainer.mDisplayContent.setFocusedApp(p0);
	boolean v8 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v9 = p0.isState(ActivityRecord$State.RESUMED);
	return (v9 ^ 1);
}
-----
depth : 1
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setFocusedRootTask(int p1){
	Object v3 = new Object(1);
	Long v4 = Long.valueOf(p1);
	ProtoLogImpl v6 = ProtoLogImpl.getSingleInstance();
	v6.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, 255339989, 1, 0, v3);
	long v8 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	int v12 = RootWindowContainer.getChildCount();
	WindowContainer v13 = RootWindowContainer.getChildAt(phiInstruction);
	Task v14 = v13.getRootTask(p1);
	Task v11 = v14;
	ActivityRecord v16 = TaskFragment.topRunningActivity(0);
	ActivityRecord v15 = v16;
	boolean v18 = ActivityRecord.isFocusable();
	Task v19 = ActivityRecord.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v20 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v22 = WindowContainer.mDisplayContent.getTask(v20, 1);
	String v23 = String.valueOf(ActivityRecord);
	Object v24 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v24);
	boolean v26 = WindowContainer.mDisplayContent.setFocusedApp(ActivityRecord);
	boolean v27 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v28 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v17 = (v28 ^ 1);
	boolean v30 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v29 = v30;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v8);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedRootTask(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 5,6,
7 = conversion(J) 2,
8 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@1710 ,
13 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:12,
arraystore 11[6] = 13,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 8,9,10,6,11 @26 exception:14,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
18 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
23 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 21,2 @41 exception:22,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
3 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
5 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowContainer>5 <Application,Lcom/android/server/wm/WindowContainer>,
return 6,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
3 = new <Application,Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6>@0,
invokespecial < Application, Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6, <init>(I)V > 3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getRootTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,3 @5 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(ne, to iindex=-1) 23,6,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 23 @77 exception:24,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
conditional branch(eq, to iindex=-1) 25,6,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 25,26 @85 exception:27,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 1 @0 exception:3,
3 = invokespecial < Application, Lcom/android/server/wm/WindowContainer, isFocusable()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, canReceiveKeys()Z > 1 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isAlwaysFocusable()Z > 1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 2),
18 = phi  16,4,
return 18,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 1 @30 exception:7,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 2 @4 exception:4,
goto (from iindex= 4 to iindex = 2),
6 = phi  5,3,
return 6,
conditional branch(ne, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
10 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 9,
conditional branch(eq, to iindex=-1) 10,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 10,
12 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 11,12,
13 = new <Application,Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4>@81,
invokespecial < Application, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4, <init>()V > 13 @83 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 9,13,6 @86 exception:15,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 17,16,
conditional branch(ne, to iindex=-1) 10,1,
44 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 44,5,
46 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @121 exception:45,
47 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
49 = new <Application,[Ljava/lang/Object>@1306 ,
arraystore 49[5] = 46,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 47,48,5,5,49 @134 exception:50,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
57 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
59 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 57,1 @139 exception:58,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,1,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @55 exception:6,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, onLastFocusedTaskDisplayAreaChanged(Lcom/android/server/wm/TaskDisplayArea;)V > 1,7 @59 exception:8,
9 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 9,2,
10 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_LIGHT_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 10,3,
13 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @74 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayId()I > 1 @78 exception:14,
16 = conversion(J) 15,
19 = invokestatic < Application, Landroid/os/Debug, getCallers(I)Ljava/lang/String; > 17 @84 exception:18,
21 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 19 @88 exception:20,
22 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS_LIGHT, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
25 = new <Application,[Ljava/lang/Object>@9824 ,
arraystore 25[3] = 13,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @102 exception:26,
arraystore 25[11] = 27,
arraystore 25[28] = 21,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 22,23,17,3,25 @111 exception:29,
33 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(eq, to iindex=-1) 33,3,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 33 @118 exception:34,
goto (from iindex= 61 to iindex = 2),
36 = phi  35,3,
conditional branch(eq, to iindex=-1) 2,3,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 2 @126 exception:39,
41 = phi  3,40,
putfield 1.< Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > = 2,
conditional branch(eq, to iindex=-1) 36,41,
conditional branch(eq, to iindex=-1) 36,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 36,3 @136 exception:44,
conditional branch(eq, to iindex=-1) 41,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 41,11 @141 exception:46,
49 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getInputMonitor()Lcom/android/server/wm/InputMonitor; > 1 @144 exception:48,
invokevirtual < Application, Lcom/android/server/wm/InputMonitor, setFocusedAppLw(Lcom/android/server/wm/ActivityRecord;)V > 49,2 @148 exception:50,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, updateTouchExcludeRegion()V > 1 @151 exception:51,
return 11,
60 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
61 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 60,
63 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 61,5,6 @146 exception:62,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @4 exception:6,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, updateFocusedWindowLocked(IZ)Z > 7,2,3 @9 exception:8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @13 exception:10,
return 9,
77 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, RESUMED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
79 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;)Z > 1,77 @151 exception:78,
80 = binaryop(xor) 79 , 6,
return 80,
conditional branch(eq, to iindex=-1) 28,6,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 29 @93 exception:30,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Z)Z > 1,2,3,4,5 @1 exception:6,
return 7,
return 4,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @97 exception:37,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 18 @100 exception:38,
return,","depth : 0
public void setFocusedRootTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedRootTask()"");
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 255339989, 1, 0, v1);
	long v4 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v6 = this.mRootWindowContainer.getRootTask(p1);
	ActivityRecord v7 = v6.topRunningActivity();
	boolean v8 = v7.moveFocusableActivityToTop(""setFocusedRootTask"");
	boolean v9 = this.mRootWindowContainer.resumeFocusedTasksTopActivities();
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 2
public WindowContainer getChildAt(int p1){
	Object v1 = this.mChildren.get(p1);
	return v1;
}
-----
depth : 2
public Task getRootTask(int p1){
	DisplayContent$$ExternalSyntheticLambda6 v0 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v2 = p0.getRootTask(v0);
	return v2;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public boolean moveFocusableActivityToTop(String p1){
	boolean v1 = p0.isFocusable();
	Task v2 = p0.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v2 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v4 = WindowContainer.mDisplayContent.getTask(v2, 1);
	String v5 = String.valueOf(p0);
	Object v5 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v5);
	boolean v7 = WindowContainer.mDisplayContent.setFocusedApp(p0);
	boolean v8 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v9 = p0.isState(ActivityRecord$State.RESUMED);
	return (v9 ^ 1);
}
-----
depth : 2
public boolean isFocusable(){
	boolean v1 = p0.isFocusable();
	boolean v2 = p0.canReceiveKeys();
	boolean v3 = p0.isAlwaysFocusable();
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(){
	Task v1 = this.task.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public boolean setFocusedApp(ActivityRecord p1){
	DisplayContent v1 = p1.getDisplayContent();
	TaskDisplayArea v2 = p1.getDisplayArea();
	p0.onLastFocusedTaskDisplayAreaChanged(v2);
	String v4 = String.valueOf(p1);
	int v5 = p0.getDisplayId();
	String v6 = Debug.getCallers(4);
	String v7 = String.valueOf(v6);
	Object v7 = new Object(3);
	Long v8 = Long.valueOf(v5);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v7);
	Task v10 = this.mFocusedApp.getTask();
	Task v11 = p1.getTask();
	this.mFocusedApp = p1;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v14 = p0.getInputMonitor();
	v14.setFocusedAppLw(p1);
	p0.updateTouchExcludeRegion();
	return 1;
}
-----
depth : 2
public boolean updateFocusedWindowLocked(int p1, boolean p2){
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v2 = this.mRoot.updateFocusedWindowLocked(p1, p2);
	Trace.traceEnd(32);
	return v2;
}
-----
depth : 1
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(Task p1, ActivityRecord p2, ActivityOptions p3){
	boolean v1 = p0.resumeFocusedTasksTopActivities(p1, p2, p3, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setFocusedRootTask(int p1){
	Object v5 = new Object(1);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl v9 = new ProtoLogImpl(v10,1048576,v12);
	File v10 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v12 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v9;
	ProtoLogImpl v8 = this.sServiceInstance;
	boolean v16 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v18 = p1.isLogToLogcat();
	String v19 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v19, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	long v21 = Binder.clearCallingIdentity();
	int v27 = this.mChildren.size();
	int v26 = v27;
	Object v29 = this.mChildren.get(phiInstruction);
	WindowContainer v28 = v29;
	DisplayContent$$ExternalSyntheticLambda6 v31 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v33 = DisplayContent.getRootTask(v31);
	Task v30 = v33;
	Task v25 = v30;
	ActivityRecord v36 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v35 = v36;
	ActivityRecord v34 = v35;
	boolean v39 = ActivityRecord.isFocusable();
	boolean v40 = ActivityRecord.canReceiveKeys();
	boolean v41 = ActivityRecord.isAlwaysFocusable();
	boolean v38 = phiInstruction;
	Task v43 = this.task.getRootTask();
	Task v42 = phiInstruction;
	ActivityRecord$$ExternalSyntheticLambda4 v44 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v46 = WindowContainer.mDisplayContent.getTask(v44, 1);
	String v47 = String.valueOf(ActivityRecord);
	Object v48 = new Object(1);
	ProtoLogImpl v50 = ProtoLogImpl.getSingleInstance();
	v50.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v48);
	DisplayContent v53 = p0.getDisplayContent();
	TaskDisplayArea v54 = p0.getDisplayArea();
	DisplayContent.onLastFocusedTaskDisplayAreaChanged(v54);
	String v56 = String.valueOf(p0);
	int v57 = DisplayContent.getDisplayId();
	String v58 = Debug.getCallers(4);
	String v59 = String.valueOf(v58);
	Object v60 = new Object(3);
	Long v61 = Long.valueOf(v57);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v60);
	Task v63 = this.mFocusedApp.getTask();
	Task v64 = p0.getTask();
	this.mFocusedApp = p0;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v67 = DisplayContent.getInputMonitor();
	v67.setFocusedAppLw(p0);
	DisplayContent.updateTouchExcludeRegion();
	boolean v52 = 1;
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v72 = this.mRoot.updateFocusedWindowLocked(0, 1);
	Trace.traceEnd(32);
	boolean v70 = v72;
	boolean v74 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v37 = (v74 ^ 1);
	boolean v77 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0, 0);
	boolean v76 = v77;
	boolean v75 = v76;
	Binder.restoreCallingIdentity(v21);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedRootTask(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 5,6,
7 = conversion(J) 2,
8 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@1710 ,
13 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:12,
arraystore 11[6] = 13,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 8,9,10,6,11 @26 exception:14,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
18 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
23 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 21,2 @41 exception:22,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
3 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
5 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowContainer>5 <Application,Lcom/android/server/wm/WindowContainer>,
return 6,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
3 = new <Application,Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6>@0,
invokespecial < Application, Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6, <init>(I)V > 3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getRootTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,3 @5 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(ne, to iindex=-1) 23,6,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 23 @77 exception:24,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
conditional branch(eq, to iindex=-1) 25,6,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 25,26 @85 exception:27,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 1 @0 exception:3,
3 = invokespecial < Application, Lcom/android/server/wm/WindowContainer, isFocusable()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, canReceiveKeys()Z > 1 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isAlwaysFocusable()Z > 1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 2),
18 = phi  16,4,
return 18,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 1 @30 exception:7,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 2 @4 exception:4,
goto (from iindex= 4 to iindex = 2),
6 = phi  5,3,
return 6,
conditional branch(ne, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
10 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 9,
conditional branch(eq, to iindex=-1) 10,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 10,
12 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 11,12,
13 = new <Application,Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4>@81,
invokespecial < Application, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4, <init>()V > 13 @83 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 9,13,6 @86 exception:15,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 17,16,
conditional branch(ne, to iindex=-1) 10,1,
44 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 44,5,
46 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @121 exception:45,
47 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
49 = new <Application,[Ljava/lang/Object>@1306 ,
arraystore 49[5] = 46,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 47,48,5,5,49 @134 exception:50,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
57 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
59 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 57,1 @139 exception:58,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,1,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @55 exception:6,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, onLastFocusedTaskDisplayAreaChanged(Lcom/android/server/wm/TaskDisplayArea;)V > 1,7 @59 exception:8,
9 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 9,2,
10 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_LIGHT_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 10,3,
13 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @74 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayId()I > 1 @78 exception:14,
16 = conversion(J) 15,
19 = invokestatic < Application, Landroid/os/Debug, getCallers(I)Ljava/lang/String; > 17 @84 exception:18,
21 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 19 @88 exception:20,
22 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS_LIGHT, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
25 = new <Application,[Ljava/lang/Object>@9824 ,
arraystore 25[3] = 13,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @102 exception:26,
arraystore 25[11] = 27,
arraystore 25[28] = 21,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 22,23,17,3,25 @111 exception:29,
33 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(eq, to iindex=-1) 33,3,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 33 @118 exception:34,
goto (from iindex= 61 to iindex = 2),
36 = phi  35,3,
conditional branch(eq, to iindex=-1) 2,3,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 2 @126 exception:39,
41 = phi  3,40,
putfield 1.< Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > = 2,
conditional branch(eq, to iindex=-1) 36,41,
conditional branch(eq, to iindex=-1) 36,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 36,3 @136 exception:44,
conditional branch(eq, to iindex=-1) 41,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 41,11 @141 exception:46,
49 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getInputMonitor()Lcom/android/server/wm/InputMonitor; > 1 @144 exception:48,
invokevirtual < Application, Lcom/android/server/wm/InputMonitor, setFocusedAppLw(Lcom/android/server/wm/ActivityRecord;)V > 49,2 @148 exception:50,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, updateTouchExcludeRegion()V > 1 @151 exception:51,
return 11,
60 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
61 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 60,
63 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 61,5,6 @146 exception:62,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @4 exception:6,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, updateFocusedWindowLocked(IZ)Z > 7,2,3 @9 exception:8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @13 exception:10,
return 9,
77 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, RESUMED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
79 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;)Z > 1,77 @151 exception:78,
80 = binaryop(xor) 79 , 6,
return 80,
conditional branch(eq, to iindex=-1) 28,6,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 29 @93 exception:30,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Z)Z > 1,2,3,4,5 @1 exception:6,
return 7,
return 4,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @97 exception:37,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 18 @100 exception:38,
return,","depth : 0
public void setFocusedRootTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedRootTask()"");
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 255339989, 1, 0, v1);
	long v4 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v6 = this.mRootWindowContainer.getRootTask(p1);
	ActivityRecord v7 = v6.topRunningActivity();
	boolean v8 = v7.moveFocusableActivityToTop(""setFocusedRootTask"");
	boolean v9 = this.mRootWindowContainer.resumeFocusedTasksTopActivities();
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 2
public WindowContainer getChildAt(int p1){
	Object v1 = this.mChildren.get(p1);
	return v1;
}
-----
depth : 2
public Task getRootTask(int p1){
	DisplayContent$$ExternalSyntheticLambda6 v0 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v2 = p0.getRootTask(v0);
	return v2;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public boolean moveFocusableActivityToTop(String p1){
	boolean v1 = p0.isFocusable();
	Task v2 = p0.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v2 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v4 = WindowContainer.mDisplayContent.getTask(v2, 1);
	String v5 = String.valueOf(p0);
	Object v5 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v5);
	boolean v7 = WindowContainer.mDisplayContent.setFocusedApp(p0);
	boolean v8 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v9 = p0.isState(ActivityRecord$State.RESUMED);
	return (v9 ^ 1);
}
-----
depth : 2
public boolean isFocusable(){
	boolean v1 = p0.isFocusable();
	boolean v2 = p0.canReceiveKeys();
	boolean v3 = p0.isAlwaysFocusable();
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(){
	Task v1 = this.task.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public boolean setFocusedApp(ActivityRecord p1){
	DisplayContent v1 = p1.getDisplayContent();
	TaskDisplayArea v2 = p1.getDisplayArea();
	p0.onLastFocusedTaskDisplayAreaChanged(v2);
	String v4 = String.valueOf(p1);
	int v5 = p0.getDisplayId();
	String v6 = Debug.getCallers(4);
	String v7 = String.valueOf(v6);
	Object v7 = new Object(3);
	Long v8 = Long.valueOf(v5);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v7);
	Task v10 = this.mFocusedApp.getTask();
	Task v11 = p1.getTask();
	this.mFocusedApp = p1;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v14 = p0.getInputMonitor();
	v14.setFocusedAppLw(p1);
	p0.updateTouchExcludeRegion();
	return 1;
}
-----
depth : 2
public boolean updateFocusedWindowLocked(int p1, boolean p2){
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v2 = this.mRoot.updateFocusedWindowLocked(p1, p2);
	Trace.traceEnd(32);
	return v2;
}
-----
depth : 1
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(Task p1, ActivityRecord p2, ActivityOptions p3){
	boolean v1 = p0.resumeFocusedTasksTopActivities(p1, p2, p3, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setFocusedRootTask(int p1){
	Object v5 = new Object(1);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl v9 = new ProtoLogImpl(v10,1048576,v12);
	File v10 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v12 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v9;
	ProtoLogImpl v8 = this.sServiceInstance;
	boolean v16 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v18 = p1.isLogToLogcat();
	String v19 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v19, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	long v21 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	int v28 = this.mChildren.size();
	int v27 = v28;
	Object v30 = this.mChildren.get(phiInstruction);
	WindowContainer v29 = v30;
	DisplayContent$$ExternalSyntheticLambda6 v32 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v34 = DisplayContent.getRootTask(v32);
	Task v31 = v34;
	Task v26 = v31;
	ActivityRecord v37 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v36 = v37;
	ActivityRecord v35 = v36;
	boolean v40 = ActivityRecord.isFocusable();
	boolean v41 = ActivityRecord.canReceiveKeys();
	boolean v42 = ActivityRecord.isAlwaysFocusable();
	boolean v39 = phiInstruction;
	Task v44 = this.task.getRootTask();
	Task v43 = phiInstruction;
	ActivityRecord$$ExternalSyntheticLambda4 v45 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v47 = WindowContainer.mDisplayContent.getTask(v45, 1);
	String v48 = String.valueOf(ActivityRecord);
	Object v49 = new Object(1);
	ProtoLogImpl v51 = ProtoLogImpl.getSingleInstance();
	v51.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v49);
	DisplayContent v54 = p0.getDisplayContent();
	TaskDisplayArea v55 = p0.getDisplayArea();
	DisplayContent.onLastFocusedTaskDisplayAreaChanged(v55);
	String v57 = String.valueOf(p0);
	int v58 = DisplayContent.getDisplayId();
	String v59 = Debug.getCallers(4);
	String v60 = String.valueOf(v59);
	Object v61 = new Object(3);
	Long v62 = Long.valueOf(v58);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v61);
	Task v64 = this.mFocusedApp.getTask();
	Task v65 = p0.getTask();
	this.mFocusedApp = p0;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v68 = DisplayContent.getInputMonitor();
	v68.setFocusedAppLw(p0);
	DisplayContent.updateTouchExcludeRegion();
	boolean v53 = 1;
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v73 = this.mRoot.updateFocusedWindowLocked(0, 1);
	Trace.traceEnd(32);
	boolean v71 = v73;
	boolean v75 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v38 = (v75 ^ 1);
	boolean v78 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0, 0);
	boolean v77 = v78;
	boolean v76 = v77;
	Binder.restoreCallingIdentity(v21);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setFocusedRootTask(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 5,6,
7 = conversion(J) 2,
8 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
11 = new <Application,[Ljava/lang/Object>@1710 ,
13 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @20 exception:12,
arraystore 11[6] = 13,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 8,9,10,6,11 @26 exception:14,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
18 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:17,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:20,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
21 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
23 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 21,2 @41 exception:22,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
3 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
5 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowContainer>5 <Application,Lcom/android/server/wm/WindowContainer>,
return 6,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
3 = new <Application,Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6>@0,
invokespecial < Application, Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6, <init>(I)V > 3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getRootTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,3 @5 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(ne, to iindex=-1) 23,6,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 23 @77 exception:24,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
conditional branch(eq, to iindex=-1) 25,6,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, moveFocusableActivityToTop(Ljava/lang/String;)Z > 25,26 @85 exception:27,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isFocusable()Z > 1 @0 exception:3,
3 = invokespecial < Application, Lcom/android/server/wm/WindowContainer, isFocusable()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, canReceiveKeys()Z > 1 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isAlwaysFocusable()Z > 1 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 2),
18 = phi  16,4,
return 18,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 1 @30 exception:7,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 2 @4 exception:4,
goto (from iindex= 4 to iindex = 2),
6 = phi  5,3,
return 6,
conditional branch(ne, to iindex=-1) 8,5,
9 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
10 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 9,
conditional branch(eq, to iindex=-1) 10,5,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 10,
12 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 11,12,
13 = new <Application,Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4>@81,
invokespecial < Application, Lcom/android/server/wm/ActivityRecord$$ExternalSyntheticLambda4, <init>()V > 13 @83 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/Task; > 9,13,6 @86 exception:15,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
conditional branch(ne, to iindex=-1) 17,16,
conditional branch(ne, to iindex=-1) 10,1,
44 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 44,5,
46 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @121 exception:45,
47 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
49 = new <Application,[Ljava/lang/Object>@1306 ,
arraystore 49[5] = 46,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 47,48,5,5,49 @134 exception:50,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
57 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 1,
59 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, setFocusedApp(Lcom/android/server/wm/ActivityRecord;)Z > 57,1 @139 exception:58,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,1,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @55 exception:6,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, onLastFocusedTaskDisplayAreaChanged(Lcom/android/server/wm/TaskDisplayArea;)V > 1,7 @59 exception:8,
9 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(ne, to iindex=-1) 9,2,
10 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_FOCUS_LIGHT_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 10,3,
13 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @74 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayId()I > 1 @78 exception:14,
16 = conversion(J) 15,
19 = invokestatic < Application, Landroid/os/Debug, getCallers(I)Ljava/lang/String; > 17 @84 exception:18,
21 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 19 @88 exception:20,
22 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_FOCUS_LIGHT, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
25 = new <Application,[Ljava/lang/Object>@9824 ,
arraystore 25[3] = 13,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @102 exception:26,
arraystore 25[11] = 27,
arraystore 25[28] = 21,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, i(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 22,23,17,3,25 @111 exception:29,
33 = getfield < Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
conditional branch(eq, to iindex=-1) 33,3,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 33 @118 exception:34,
goto (from iindex= 61 to iindex = 2),
36 = phi  35,3,
conditional branch(eq, to iindex=-1) 2,3,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 2 @126 exception:39,
41 = phi  3,40,
putfield 1.< Application, Lcom/android/server/wm/DisplayContent, mFocusedApp, <Application,Lcom/android/server/wm/ActivityRecord> > = 2,
conditional branch(eq, to iindex=-1) 36,41,
conditional branch(eq, to iindex=-1) 36,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 36,3 @136 exception:44,
conditional branch(eq, to iindex=-1) 41,3,
invokevirtual < Application, Lcom/android/server/wm/Task, onAppFocusChanged(Z)V > 41,11 @141 exception:46,
49 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getInputMonitor()Lcom/android/server/wm/InputMonitor; > 1 @144 exception:48,
invokevirtual < Application, Lcom/android/server/wm/InputMonitor, setFocusedAppLw(Lcom/android/server/wm/ActivityRecord;)V > 49,2 @148 exception:50,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, updateTouchExcludeRegion()V > 1 @151 exception:51,
return 11,
60 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
61 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 60,
63 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, updateFocusedWindowLocked(IZ)Z > 61,5,6 @146 exception:62,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @4 exception:6,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, updateFocusedWindowLocked(IZ)Z > 7,2,3 @9 exception:8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @13 exception:10,
return 9,
77 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, RESUMED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
79 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;)Z > 1,77 @151 exception:78,
80 = binaryop(xor) 79 , 6,
return 80,
conditional branch(eq, to iindex=-1) 28,6,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
31 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 29 @93 exception:30,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Z)Z > 1,2,3,4,5 @1 exception:6,
return 7,
return 4,
monitorexit 19,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @97 exception:37,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 18 @100 exception:38,
return,","depth : 0
public void setFocusedRootTask(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""setFocusedRootTask()"");
	Object v1 = new Object(1);
	Long v2 = Long.valueOf(p1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 255339989, 1, 0, v1);
	long v4 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v6 = this.mRootWindowContainer.getRootTask(p1);
	ActivityRecord v7 = v6.topRunningActivity();
	boolean v8 = v7.moveFocusableActivityToTop(""setFocusedRootTask"");
	boolean v9 = this.mRootWindowContainer.resumeFocusedTasksTopActivities();
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 2
public WindowContainer getChildAt(int p1){
	Object v1 = this.mChildren.get(p1);
	return v1;
}
-----
depth : 2
public Task getRootTask(int p1){
	DisplayContent$$ExternalSyntheticLambda6 v0 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v2 = p0.getRootTask(v0);
	return v2;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public boolean moveFocusableActivityToTop(String p1){
	boolean v1 = p0.isFocusable();
	Task v2 = p0.getRootTask();
	ActivityRecord$$ExternalSyntheticLambda4 v2 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v4 = WindowContainer.mDisplayContent.getTask(v2, 1);
	String v5 = String.valueOf(p0);
	Object v5 = new Object(1);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v5);
	boolean v7 = WindowContainer.mDisplayContent.setFocusedApp(p0);
	boolean v8 = ActivityTaskManagerService.mWindowManager.updateFocusedWindowLocked(0, 1);
	boolean v9 = p0.isState(ActivityRecord$State.RESUMED);
	return (v9 ^ 1);
}
-----
depth : 2
public boolean isFocusable(){
	boolean v1 = p0.isFocusable();
	boolean v2 = p0.canReceiveKeys();
	boolean v3 = p0.isAlwaysFocusable();
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(){
	Task v1 = this.task.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public boolean setFocusedApp(ActivityRecord p1){
	DisplayContent v1 = p1.getDisplayContent();
	TaskDisplayArea v2 = p1.getDisplayArea();
	p0.onLastFocusedTaskDisplayAreaChanged(v2);
	String v4 = String.valueOf(p1);
	int v5 = p0.getDisplayId();
	String v6 = Debug.getCallers(4);
	String v7 = String.valueOf(v6);
	Object v7 = new Object(3);
	Long v8 = Long.valueOf(v5);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v7);
	Task v10 = this.mFocusedApp.getTask();
	Task v11 = p1.getTask();
	this.mFocusedApp = p1;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v14 = p0.getInputMonitor();
	v14.setFocusedAppLw(p1);
	p0.updateTouchExcludeRegion();
	return 1;
}
-----
depth : 2
public boolean updateFocusedWindowLocked(int p1, boolean p2){
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v2 = this.mRoot.updateFocusedWindowLocked(p1, p2);
	Trace.traceEnd(32);
	return v2;
}
-----
depth : 1
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(Task p1, ActivityRecord p2, ActivityOptions p3){
	boolean v1 = p0.resumeFocusedTasksTopActivities(p1, p2, p3, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setFocusedRootTask(int p1){
	Object v5 = new Object(1);
	Long v6 = Long.valueOf(p1);
	ProtoLogImpl v9 = new ProtoLogImpl(v10,1048576,v12);
	File v10 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v12 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v9;
	ProtoLogImpl v8 = this.sServiceInstance;
	boolean v16 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v18 = p1.isLogToLogcat();
	String v19 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v19, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	long v21 = Binder.clearCallingIdentity();
	int v27 = this.mChildren.size();
	int v26 = v27;
	Object v29 = this.mChildren.get(phiInstruction);
	WindowContainer v28 = v29;
	DisplayContent$$ExternalSyntheticLambda6 v31 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v33 = DisplayContent.getRootTask(v31);
	Task v30 = v33;
	Task v25 = v30;
	ActivityRecord v36 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v35 = v36;
	ActivityRecord v34 = v35;
	boolean v39 = ActivityRecord.isFocusable();
	boolean v40 = ActivityRecord.canReceiveKeys();
	boolean v41 = ActivityRecord.isAlwaysFocusable();
	boolean v38 = phiInstruction;
	Task v43 = this.task.getRootTask();
	Task v42 = phiInstruction;
	ActivityRecord$$ExternalSyntheticLambda4 v44 = new ActivityRecord$$ExternalSyntheticLambda4();
	Task v46 = WindowContainer.mDisplayContent.getTask(v44, 1);
	String v47 = String.valueOf(ActivityRecord);
	Object v48 = new Object(1);
	ProtoLogImpl v50 = ProtoLogImpl.getSingleInstance();
	v50.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_FOCUS, 1239439010, 0, 0, v48);
	DisplayContent v53 = p0.getDisplayContent();
	TaskDisplayArea v54 = p0.getDisplayArea();
	DisplayContent.onLastFocusedTaskDisplayAreaChanged(v54);
	String v56 = String.valueOf(p0);
	int v57 = DisplayContent.getDisplayId();
	String v58 = Debug.getCallers(4);
	String v59 = String.valueOf(v58);
	Object v60 = new Object(3);
	Long v61 = Long.valueOf(v57);
	ProtoLogImpl.i(ProtoLogGroup.WM_DEBUG_FOCUS_LIGHT, -639217716, 4, 0, v60);
	Task v63 = this.mFocusedApp.getTask();
	Task v64 = p0.getTask();
	this.mFocusedApp = p0;
	phiInstruction.onAppFocusChanged(0);
	phiInstruction.onAppFocusChanged(1);
	InputMonitor v67 = DisplayContent.getInputMonitor();
	v67.setFocusedAppLw(p0);
	DisplayContent.updateTouchExcludeRegion();
	boolean v52 = 1;
	Trace.traceBegin(32, ""wmUpdateFocus"");
	boolean v72 = this.mRoot.updateFocusedWindowLocked(0, 1);
	Trace.traceEnd(32);
	boolean v70 = v72;
	boolean v74 = ActivityRecord.isState(ActivityRecord$State.RESUMED);
	boolean v37 = (v74 ^ 1);
	boolean v77 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0, 0);
	boolean v76 = v77;
	boolean v75 = v76;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v21);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","takeTaskSnapshot(I)Landroid/window/TaskSnapshot;","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 17 to iindex = 18),
26 = new <Application,Ljava/lang/StringBuilder>@54,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @56 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @61 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 26,2 @64 exception:31,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,33 @69 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @72 exception:36,
39 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 25,37 @76 exception:38,
monitorexit 9,
goto (from iindex= 40 to iindex = -36),
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,","depth : 0
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""takeTaskSnapshot: taskId="");
	StringBuilder v8 = v5.append(p1);
	StringBuilder v9 = v5.append("" not found or not visible"");
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
","public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","takeTaskSnapshot(I)Landroid/window/TaskSnapshot;","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(ne, to iindex=-1) 17,15,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
19 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 18,
21 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, captureTaskSnapshot(Lcom/android/server/wm/Task;Z)Landroid/window/TaskSnapshot; > 19,14,15 @40 exception:20,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshotMode(Lcom/android/server/wm/Task;)I > 1,2 @8 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 6,12,
goto (from iindex= 12 to iindex = 11),
15 = phi  14,4,11,8,
return 15,
monitorexit 9,
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,","depth : 0
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.captureTaskSnapshot(v4, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 1
public TaskSnapshot captureTaskSnapshot(Task p1, boolean p2){
	int v1 = p0.getSnapshotMode(p1);
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v6 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v5 = v6;
	int v8 = this.mChildren.size();
	Object v9 = this.mChildren.get(phiInstruction);
	boolean v10 = v9.isVisible();
	boolean v7 = 1;
	int v12 = TaskSnapshotController.getSnapshotMode(v5);
	TaskSnapshot v11 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","takeTaskSnapshot(I)Landroid/window/TaskSnapshot;","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 17 to iindex = 18),
26 = new <Application,Ljava/lang/StringBuilder>@54,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @56 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @61 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 26,2 @64 exception:31,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,33 @69 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @72 exception:36,
39 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 25,37 @76 exception:38,
monitorexit 9,
goto (from iindex= 40 to iindex = -36),
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,","depth : 0
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""takeTaskSnapshot: taskId="");
	StringBuilder v8 = v5.append(p1);
	StringBuilder v9 = v5.append("" not found or not visible"");
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v6 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v5 = v6;
	int v8 = this.mChildren.size();
	Object v9 = this.mChildren.get(phiInstruction);
	boolean v10 = v9.isVisible();
	boolean v7 = 1;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","takeTaskSnapshot(I)Landroid/window/TaskSnapshot;","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(ne, to iindex=-1) 17,15,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
19 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 18,
21 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, captureTaskSnapshot(Lcom/android/server/wm/Task;Z)Landroid/window/TaskSnapshot; > 19,14,15 @40 exception:20,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshotMode(Lcom/android/server/wm/Task;)I > 1,2 @8 exception:5,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeStandardOrUndefined()Z > 2 @4 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeAssistant()Z > 2 @10 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
conditional branch(eq, to iindex=-1) 4,7,
14 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, shouldUseAppThemeSnapshot()Z > 4 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,7,
return 18,
conditional branch(eq, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 6,9,
11 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, drawAppThemeSnapshot(Lcom/android/server/wm/Task;)Landroid/window/TaskSnapshot; > 1,2 @22 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, findMainWindow()Lcom/android/server/wm/WindowState; > 4 @10 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 2 @17 exception:8,
11 = invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, getBackgroundColor()I > 9 @21 exception:10,
14 = invokestatic < Application, Lcom/android/internal/graphics/ColorUtils, setAlphaComponent(II)I > 11,12 @27 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getAttrs()Landroid/view/WindowManager$LayoutParams; > 7 @31 exception:15,
18 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getBounds()Landroid/graphics/Rect; > 2 @35 exception:17,
20 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getInsetsStateWithVisibilityOverride()Landroid/view/InsetsState; > 7 @39 exception:19,
22 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getFrame()Landroid/graphics/Rect; > 7 @43 exception:21,
24 = invokestatic < Application, Lcom/android/server/wm/TaskSnapshotController, getSystemBarInsets(Landroid/graphics/Rect;Landroid/view/InsetsState;)Landroid/graphics/Rect; > 22,20 @47 exception:23,
25 = new <Application,Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter>@51,
26 = getfield < Application, Landroid/view/WindowManager$LayoutParams, flags, <Primordial,I> > 16,
27 = getfield < Application, Landroid/view/WindowManager$LayoutParams, privateFlags, <Primordial,I> > 16,
28 = getfield < Application, Landroid/view/WindowManager$LayoutParams, insetsFlags, <Application,Landroid/view/InsetsFlags> > 16,
29 = getfield < Application, Landroid/view/InsetsFlags, appearance, <Primordial,I> > 28,
31 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 2 @61 exception:30,
32 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mHighResTaskSnapshotScale, <Primordial,F> > 1,
invokespecial < Application, Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter, <init>(IIILandroid/app/ActivityManager$TaskDescription;FLandroid/view/InsetsState;)V > 25,26,27,29,31,32,20 @68 exception:33,
35 = invokevirtual < Application, Landroid/graphics/Rect, width()I > 18 @71 exception:34,
37 = invokevirtual < Application, Landroid/graphics/Rect, height()I > 18 @75 exception:36,
38 = conversion(F) 35,
39 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mHighResTaskSnapshotScale, <Primordial,F> > 1,
40 = binaryop(mul) 38 , 39,
41 = conversion(I) 40,
42 = conversion(F) 37,
43 = binaryop(mul) 42 , 39,
44 = conversion(I) 43,
47 = invokestatic < Application, Landroid/graphics/RenderNode, create(Ljava/lang/String;Landroid/graphics/RenderNode$AnimationHost;)Landroid/graphics/RenderNode; > 45,5 @89 exception:46,
49 = invokevirtual < Application, Landroid/graphics/RenderNode, setLeftTopRightBottom(IIII)Z > 47,5,5,41,44 @94 exception:48,
51 = invokevirtual < Application, Landroid/graphics/RenderNode, setClipToBounds(Z)Z > 47,5 @97 exception:50,
53 = invokevirtual < Application, Landroid/graphics/RenderNode, start(II)Landroid/graphics/RecordingCanvas; > 47,41,44 @100 exception:52,
invokevirtual < Application, Landroid/graphics/RecordingCanvas, drawColor(I)V > 53,14 @104 exception:54,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter, setInsets(Landroid/graphics/Rect;)V > 25,24 @107 exception:55,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter, drawDecors(Landroid/graphics/Canvas;)V > 25,53 @110 exception:56,
invokevirtual < Application, Landroid/graphics/RenderNode, end(Landroid/graphics/RecordingCanvas;)V > 47,53 @113 exception:57,
59 = invokestatic < Application, Landroid/view/ThreadedRenderer, createHardwareBitmap(Landroid/graphics/RenderNode;II)Landroid/graphics/Bitmap; > 47,41,44 @116 exception:58,
conditional branch(ne, to iindex=-1) 59,5,
return 5,
goto (from iindex= 16 to iindex = 5),
15 = phi  14,4,11,8,
return 15,
monitorexit 9,
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,","depth : 0
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.captureTaskSnapshot(v4, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 2
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 1
public TaskSnapshot captureTaskSnapshot(Task p1, boolean p2){
	int v1 = p0.getSnapshotMode(p1);
	TaskSnapshot v2 = p0.drawAppThemeSnapshot(p1);
	return phiInstruction;
}
-----
depth : 2
public int getSnapshotMode(Task p1){
	ActivityRecord v1 = p1.getTopMostActivity();
	boolean v2 = p1.isActivityTypeStandardOrUndefined();
	boolean v3 = p1.isActivityTypeAssistant();
	boolean v4 = v1.shouldUseAppThemeSnapshot();
	return 1;
}
-----
depth : 2
public TaskSnapshot drawAppThemeSnapshot(Task p1){
	ActivityRecord v1 = p1.getTopMostActivity();
	WindowState v2 = v1.findMainWindow();
	ActivityManager$TaskDescription v3 = p1.getTaskDescription();
	int v4 = v3.getBackgroundColor();
	int v5 = ColorUtils.setAlphaComponent(v4, 255);
	WindowManager$LayoutParams v6 = v2.getAttrs();
	Rect v7 = p1.getBounds();
	InsetsState v8 = v2.getInsetsStateWithVisibilityOverride();
	Rect v9 = v2.getFrame();
	Rect v10 = TaskSnapshotController.getSystemBarInsets(v9, v8);
	TaskSnapshotController$SystemBarBackgroundPainter v10 = new TaskSnapshotController$SystemBarBackgroundPainter(WindowManager$LayoutParams.flags,WindowManager$LayoutParams.privateFlags,InsetsFlags.appearance,v11,this.mHighResTaskSnapshotScale,v8);
	ActivityManager$TaskDescription v11 = p1.getTaskDescription();
	int v13 = v7.width();
	int v14 = v7.height();
	RenderNode v15 = RenderNode.create(""TaskSnapshotController"", 0);
	boolean v16 = v15.setLeftTopRightBottom(0, 0, (v13 * this.mHighResTaskSnapshotScale), (v14 * this.mHighResTaskSnapshotScale));
	boolean v17 = v15.setClipToBounds(0);
	RecordingCanvas v18 = v15.start((v13 * this.mHighResTaskSnapshotScale), (v14 * this.mHighResTaskSnapshotScale));
	v18.drawColor(v5);
	v10.setInsets(v10);
	v10.drawDecors(v18);
	v15.end(v18);
	Bitmap v23 = ThreadedRenderer.createHardwareBitmap(v15, (v13 * this.mHighResTaskSnapshotScale), (v14 * this.mHighResTaskSnapshotScale));
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	Integer v11 = Integer.valueOf(p1);
	PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
	Task v13 = RootWindowContainer.getTask(v12);
	v12.recycle();
	Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
	Task v16 = v13.getRootTask();
	boolean v17 = v13.reparent(v15, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v7 = v13;
	Task v6 = v7;
	int v19 = this.mChildren.size();
	Object v20 = this.mChildren.get(phiInstruction);
	boolean v21 = v20.isVisible();
	int v22 = this.mChildren.size();
	Object v23 = this.mChildren.get(phiInstruction);
	boolean v24 = v23.isVisible();
	boolean v18 = 1;
	return 1;
	ActivityRecord v27 = p1.getTopMostActivity();
	boolean v28 = p1.isActivityTypeStandardOrUndefined();
	boolean v29 = p1.isActivityTypeAssistant();
	boolean v30 = v27.shouldUseAppThemeSnapshot();
	int v26 = 1;
	ActivityRecord v32 = p1.getTopMostActivity();
	WindowState v33 = v32.findMainWindow();
	ActivityManager$TaskDescription v34 = p1.getTaskDescription();
	int v35 = v34.getBackgroundColor();
	int v36 = ColorUtils.setAlphaComponent(v35, 255);
	WindowManager$LayoutParams v37 = v33.getAttrs();
	Rect v38 = p1.getBounds();
	InsetsState v39 = v33.getInsetsStateWithVisibilityOverride();
	Rect v40 = v33.getFrame();
	Rect v41 = TaskSnapshotController.getSystemBarInsets(v40, v39);
	TaskSnapshotController$SystemBarBackgroundPainter v42 = new TaskSnapshotController$SystemBarBackgroundPainter(WindowManager$LayoutParams.flags,WindowManager$LayoutParams.privateFlags,InsetsFlags.appearance,v43,this.mHighResTaskSnapshotScale,v39);
	ActivityManager$TaskDescription v43 = p1.getTaskDescription();
	int v45 = v38.width();
	int v46 = v38.height();
	RenderNode v47 = RenderNode.create(""TaskSnapshotController"", 0);
	boolean v48 = v47.setLeftTopRightBottom(0, 0, (v45 * this.mHighResTaskSnapshotScale), (v46 * this.mHighResTaskSnapshotScale));
	boolean v49 = v47.setClipToBounds(0);
	RecordingCanvas v50 = v47.start((v45 * this.mHighResTaskSnapshotScale), (v46 * this.mHighResTaskSnapshotScale));
	v50.drawColor(v36);
	v42.setInsets(v41);
	v42.drawDecors(v50);
	v47.end(v50);
	Bitmap v55 = ThreadedRenderer.createHardwareBitmap(v47, (v45 * this.mHighResTaskSnapshotScale), (v46 * this.mHighResTaskSnapshotScale));
	TaskSnapshot v31 = 0;
	TaskSnapshot v25 = phiInstruction;
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","takeTaskSnapshot(I)Landroid/window/TaskSnapshot;","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(ne, to iindex=-1) 17,15,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
19 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 18,
21 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, captureTaskSnapshot(Lcom/android/server/wm/Task;Z)Landroid/window/TaskSnapshot; > 19,14,15 @40 exception:20,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshotMode(Lcom/android/server/wm/Task;)I > 1,2 @8 exception:5,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeStandardOrUndefined()Z > 2 @4 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeAssistant()Z > 2 @10 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
conditional branch(eq, to iindex=-1) 4,7,
14 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, shouldUseAppThemeSnapshot()Z > 4 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,7,
return 18,
conditional branch(eq, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 6,9,
11 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, drawAppThemeSnapshot(Lcom/android/server/wm/Task;)Landroid/window/TaskSnapshot; > 1,2 @22 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, findMainWindow()Lcom/android/server/wm/WindowState; > 4 @10 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 2 @17 exception:8,
11 = invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, getBackgroundColor()I > 9 @21 exception:10,
14 = invokestatic < Application, Lcom/android/internal/graphics/ColorUtils, setAlphaComponent(II)I > 11,12 @27 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getAttrs()Landroid/view/WindowManager$LayoutParams; > 7 @31 exception:15,
18 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getBounds()Landroid/graphics/Rect; > 2 @35 exception:17,
20 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getInsetsStateWithVisibilityOverride()Landroid/view/InsetsState; > 7 @39 exception:19,
22 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getFrame()Landroid/graphics/Rect; > 7 @43 exception:21,
24 = invokestatic < Application, Lcom/android/server/wm/TaskSnapshotController, getSystemBarInsets(Landroid/graphics/Rect;Landroid/view/InsetsState;)Landroid/graphics/Rect; > 22,20 @47 exception:23,
25 = new <Application,Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter>@51,
26 = getfield < Application, Landroid/view/WindowManager$LayoutParams, flags, <Primordial,I> > 16,
27 = getfield < Application, Landroid/view/WindowManager$LayoutParams, privateFlags, <Primordial,I> > 16,
28 = getfield < Application, Landroid/view/WindowManager$LayoutParams, insetsFlags, <Application,Landroid/view/InsetsFlags> > 16,
29 = getfield < Application, Landroid/view/InsetsFlags, appearance, <Primordial,I> > 28,
31 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 2 @61 exception:30,
32 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mHighResTaskSnapshotScale, <Primordial,F> > 1,
invokespecial < Application, Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter, <init>(IIILandroid/app/ActivityManager$TaskDescription;FLandroid/view/InsetsState;)V > 25,26,27,29,31,32,20 @68 exception:33,
35 = invokevirtual < Application, Landroid/graphics/Rect, width()I > 18 @71 exception:34,
37 = invokevirtual < Application, Landroid/graphics/Rect, height()I > 18 @75 exception:36,
38 = conversion(F) 35,
39 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mHighResTaskSnapshotScale, <Primordial,F> > 1,
40 = binaryop(mul) 38 , 39,
41 = conversion(I) 40,
42 = conversion(F) 37,
43 = binaryop(mul) 42 , 39,
44 = conversion(I) 43,
47 = invokestatic < Application, Landroid/graphics/RenderNode, create(Ljava/lang/String;Landroid/graphics/RenderNode$AnimationHost;)Landroid/graphics/RenderNode; > 45,5 @89 exception:46,
49 = invokevirtual < Application, Landroid/graphics/RenderNode, setLeftTopRightBottom(IIII)Z > 47,5,5,41,44 @94 exception:48,
51 = invokevirtual < Application, Landroid/graphics/RenderNode, setClipToBounds(Z)Z > 47,5 @97 exception:50,
53 = invokevirtual < Application, Landroid/graphics/RenderNode, start(II)Landroid/graphics/RecordingCanvas; > 47,41,44 @100 exception:52,
invokevirtual < Application, Landroid/graphics/RecordingCanvas, drawColor(I)V > 53,14 @104 exception:54,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter, setInsets(Landroid/graphics/Rect;)V > 25,24 @107 exception:55,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter, drawDecors(Landroid/graphics/Canvas;)V > 25,53 @110 exception:56,
invokevirtual < Application, Landroid/graphics/RenderNode, end(Landroid/graphics/RecordingCanvas;)V > 47,53 @113 exception:57,
59 = invokestatic < Application, Landroid/view/ThreadedRenderer, createHardwareBitmap(Landroid/graphics/RenderNode;II)Landroid/graphics/Bitmap; > 47,41,44 @116 exception:58,
conditional branch(ne, to iindex=-1) 59,5,
return 5,
goto (from iindex= 16 to iindex = 5),
15 = phi  14,4,11,8,
return 15,
monitorexit 9,
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,","depth : 0
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.captureTaskSnapshot(v4, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 2
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 1
public TaskSnapshot captureTaskSnapshot(Task p1, boolean p2){
	int v1 = p0.getSnapshotMode(p1);
	TaskSnapshot v2 = p0.drawAppThemeSnapshot(p1);
	return phiInstruction;
}
-----
depth : 2
public int getSnapshotMode(Task p1){
	ActivityRecord v1 = p1.getTopMostActivity();
	boolean v2 = p1.isActivityTypeStandardOrUndefined();
	boolean v3 = p1.isActivityTypeAssistant();
	boolean v4 = v1.shouldUseAppThemeSnapshot();
	return 1;
}
-----
depth : 2
public TaskSnapshot drawAppThemeSnapshot(Task p1){
	ActivityRecord v1 = p1.getTopMostActivity();
	WindowState v2 = v1.findMainWindow();
	ActivityManager$TaskDescription v3 = p1.getTaskDescription();
	int v4 = v3.getBackgroundColor();
	int v5 = ColorUtils.setAlphaComponent(v4, 255);
	WindowManager$LayoutParams v6 = v2.getAttrs();
	Rect v7 = p1.getBounds();
	InsetsState v8 = v2.getInsetsStateWithVisibilityOverride();
	Rect v9 = v2.getFrame();
	Rect v10 = TaskSnapshotController.getSystemBarInsets(v9, v8);
	TaskSnapshotController$SystemBarBackgroundPainter v10 = new TaskSnapshotController$SystemBarBackgroundPainter(WindowManager$LayoutParams.flags,WindowManager$LayoutParams.privateFlags,InsetsFlags.appearance,v11,this.mHighResTaskSnapshotScale,v8);
	ActivityManager$TaskDescription v11 = p1.getTaskDescription();
	int v13 = v7.width();
	int v14 = v7.height();
	RenderNode v15 = RenderNode.create(""TaskSnapshotController"", 0);
	boolean v16 = v15.setLeftTopRightBottom(0, 0, (v13 * this.mHighResTaskSnapshotScale), (v14 * this.mHighResTaskSnapshotScale));
	boolean v17 = v15.setClipToBounds(0);
	RecordingCanvas v18 = v15.start((v13 * this.mHighResTaskSnapshotScale), (v14 * this.mHighResTaskSnapshotScale));
	v18.drawColor(v5);
	v10.setInsets(v10);
	v10.drawDecors(v18);
	v15.end(v18);
	Bitmap v23 = ThreadedRenderer.createHardwareBitmap(v15, (v13 * this.mHighResTaskSnapshotScale), (v14 * this.mHighResTaskSnapshotScale));
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	AppTransition$$ExternalSyntheticLambda2 v9 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v11 = PooledLambda.__(Tas.class);
	Integer v12 = Integer.valueOf(p1);
	PooledPredicate v13 = PooledLambda.obtainPredicate(v9, v11, v12);
	Task v14 = RootWindowContainer.getTask(v13);
	v13.recycle();
	Task v16 = RootWindowContainer.getOrCreateRootTask(0, 0, v14, 0);
	Task v17 = v14.getRootTask();
	boolean v18 = v14.reparent(v16, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v8 = v14;
	Task v7 = v8;
	int v20 = this.mChildren.size();
	Object v21 = this.mChildren.get(phiInstruction);
	boolean v22 = v21.isVisible();
	int v23 = this.mChildren.size();
	Object v24 = this.mChildren.get(phiInstruction);
	boolean v25 = v24.isVisible();
	boolean v19 = 1;
	return 1;
	ActivityRecord v28 = p1.getTopMostActivity();
	boolean v29 = p1.isActivityTypeStandardOrUndefined();
	boolean v30 = p1.isActivityTypeAssistant();
	boolean v31 = v28.shouldUseAppThemeSnapshot();
	int v27 = 1;
	ActivityRecord v33 = p1.getTopMostActivity();
	WindowState v34 = v33.findMainWindow();
	ActivityManager$TaskDescription v35 = p1.getTaskDescription();
	int v36 = v35.getBackgroundColor();
	int v37 = ColorUtils.setAlphaComponent(v36, 255);
	WindowManager$LayoutParams v38 = v34.getAttrs();
	Rect v39 = p1.getBounds();
	InsetsState v40 = v34.getInsetsStateWithVisibilityOverride();
	Rect v41 = v34.getFrame();
	Rect v42 = TaskSnapshotController.getSystemBarInsets(v41, v40);
	TaskSnapshotController$SystemBarBackgroundPainter v43 = new TaskSnapshotController$SystemBarBackgroundPainter(WindowManager$LayoutParams.flags,WindowManager$LayoutParams.privateFlags,InsetsFlags.appearance,v44,this.mHighResTaskSnapshotScale,v40);
	ActivityManager$TaskDescription v44 = p1.getTaskDescription();
	int v46 = v39.width();
	int v47 = v39.height();
	RenderNode v48 = RenderNode.create(""TaskSnapshotController"", 0);
	boolean v49 = v48.setLeftTopRightBottom(0, 0, (v46 * this.mHighResTaskSnapshotScale), (v47 * this.mHighResTaskSnapshotScale));
	boolean v50 = v48.setClipToBounds(0);
	RecordingCanvas v51 = v48.start((v46 * this.mHighResTaskSnapshotScale), (v47 * this.mHighResTaskSnapshotScale));
	v51.drawColor(v37);
	v43.setInsets(v42);
	v43.drawDecors(v51);
	v48.end(v51);
	Bitmap v56 = ThreadedRenderer.createHardwareBitmap(v48, (v46 * this.mHighResTaskSnapshotScale), (v47 * this.mHighResTaskSnapshotScale));
	TaskSnapshot v32 = 0;
	TaskSnapshot v26 = phiInstruction;
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","takeTaskSnapshot(I)Landroid/window/TaskSnapshot;","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(ne, to iindex=-1) 17,15,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
19 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 18,
21 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, captureTaskSnapshot(Lcom/android/server/wm/Task;Z)Landroid/window/TaskSnapshot; > 19,14,15 @40 exception:20,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshotMode(Lcom/android/server/wm/Task;)I > 1,2 @8 exception:5,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeStandardOrUndefined()Z > 2 @4 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeAssistant()Z > 2 @10 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
conditional branch(eq, to iindex=-1) 4,7,
14 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, shouldUseAppThemeSnapshot()Z > 4 @20 exception:13,
conditional branch(eq, to iindex=-1) 14,7,
return 18,
conditional branch(eq, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 6,9,
11 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, drawAppThemeSnapshot(Lcom/android/server/wm/Task;)Landroid/window/TaskSnapshot; > 1,2 @22 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, findMainWindow()Lcom/android/server/wm/WindowState; > 4 @10 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 2 @17 exception:8,
11 = invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, getBackgroundColor()I > 9 @21 exception:10,
14 = invokestatic < Application, Lcom/android/internal/graphics/ColorUtils, setAlphaComponent(II)I > 11,12 @27 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getAttrs()Landroid/view/WindowManager$LayoutParams; > 7 @31 exception:15,
18 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getBounds()Landroid/graphics/Rect; > 2 @35 exception:17,
20 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getInsetsStateWithVisibilityOverride()Landroid/view/InsetsState; > 7 @39 exception:19,
22 = invokevirtual < Application, Lcom/android/server/wm/WindowState, getFrame()Landroid/graphics/Rect; > 7 @43 exception:21,
24 = invokestatic < Application, Lcom/android/server/wm/TaskSnapshotController, getSystemBarInsets(Landroid/graphics/Rect;Landroid/view/InsetsState;)Landroid/graphics/Rect; > 22,20 @47 exception:23,
25 = new <Application,Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter>@51,
26 = getfield < Application, Landroid/view/WindowManager$LayoutParams, flags, <Primordial,I> > 16,
27 = getfield < Application, Landroid/view/WindowManager$LayoutParams, privateFlags, <Primordial,I> > 16,
28 = getfield < Application, Landroid/view/WindowManager$LayoutParams, insetsFlags, <Application,Landroid/view/InsetsFlags> > 16,
29 = getfield < Application, Landroid/view/InsetsFlags, appearance, <Primordial,I> > 28,
31 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 2 @61 exception:30,
32 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mHighResTaskSnapshotScale, <Primordial,F> > 1,
invokespecial < Application, Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter, <init>(IIILandroid/app/ActivityManager$TaskDescription;FLandroid/view/InsetsState;)V > 25,26,27,29,31,32,20 @68 exception:33,
35 = invokevirtual < Application, Landroid/graphics/Rect, width()I > 18 @71 exception:34,
37 = invokevirtual < Application, Landroid/graphics/Rect, height()I > 18 @75 exception:36,
38 = conversion(F) 35,
39 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mHighResTaskSnapshotScale, <Primordial,F> > 1,
40 = binaryop(mul) 38 , 39,
41 = conversion(I) 40,
42 = conversion(F) 37,
43 = binaryop(mul) 42 , 39,
44 = conversion(I) 43,
47 = invokestatic < Application, Landroid/graphics/RenderNode, create(Ljava/lang/String;Landroid/graphics/RenderNode$AnimationHost;)Landroid/graphics/RenderNode; > 45,5 @89 exception:46,
49 = invokevirtual < Application, Landroid/graphics/RenderNode, setLeftTopRightBottom(IIII)Z > 47,5,5,41,44 @94 exception:48,
51 = invokevirtual < Application, Landroid/graphics/RenderNode, setClipToBounds(Z)Z > 47,5 @97 exception:50,
53 = invokevirtual < Application, Landroid/graphics/RenderNode, start(II)Landroid/graphics/RecordingCanvas; > 47,41,44 @100 exception:52,
invokevirtual < Application, Landroid/graphics/RecordingCanvas, drawColor(I)V > 53,14 @104 exception:54,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter, setInsets(Landroid/graphics/Rect;)V > 25,24 @107 exception:55,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController$SystemBarBackgroundPainter, drawDecors(Landroid/graphics/Canvas;)V > 25,53 @110 exception:56,
invokevirtual < Application, Landroid/graphics/RenderNode, end(Landroid/graphics/RecordingCanvas;)V > 47,53 @113 exception:57,
59 = invokestatic < Application, Landroid/view/ThreadedRenderer, createHardwareBitmap(Landroid/graphics/RenderNode;II)Landroid/graphics/Bitmap; > 47,41,44 @116 exception:58,
conditional branch(ne, to iindex=-1) 59,5,
return 5,
goto (from iindex= 16 to iindex = 5),
15 = phi  14,4,11,8,
return 15,
monitorexit 9,
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,","depth : 0
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.captureTaskSnapshot(v4, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 2
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 1
public TaskSnapshot captureTaskSnapshot(Task p1, boolean p2){
	int v1 = p0.getSnapshotMode(p1);
	TaskSnapshot v2 = p0.drawAppThemeSnapshot(p1);
	return phiInstruction;
}
-----
depth : 2
public int getSnapshotMode(Task p1){
	ActivityRecord v1 = p1.getTopMostActivity();
	boolean v2 = p1.isActivityTypeStandardOrUndefined();
	boolean v3 = p1.isActivityTypeAssistant();
	boolean v4 = v1.shouldUseAppThemeSnapshot();
	return 1;
}
-----
depth : 2
public TaskSnapshot drawAppThemeSnapshot(Task p1){
	ActivityRecord v1 = p1.getTopMostActivity();
	WindowState v2 = v1.findMainWindow();
	ActivityManager$TaskDescription v3 = p1.getTaskDescription();
	int v4 = v3.getBackgroundColor();
	int v5 = ColorUtils.setAlphaComponent(v4, 255);
	WindowManager$LayoutParams v6 = v2.getAttrs();
	Rect v7 = p1.getBounds();
	InsetsState v8 = v2.getInsetsStateWithVisibilityOverride();
	Rect v9 = v2.getFrame();
	Rect v10 = TaskSnapshotController.getSystemBarInsets(v9, v8);
	TaskSnapshotController$SystemBarBackgroundPainter v10 = new TaskSnapshotController$SystemBarBackgroundPainter(WindowManager$LayoutParams.flags,WindowManager$LayoutParams.privateFlags,InsetsFlags.appearance,v11,this.mHighResTaskSnapshotScale,v8);
	ActivityManager$TaskDescription v11 = p1.getTaskDescription();
	int v13 = v7.width();
	int v14 = v7.height();
	RenderNode v15 = RenderNode.create(""TaskSnapshotController"", 0);
	boolean v16 = v15.setLeftTopRightBottom(0, 0, (v13 * this.mHighResTaskSnapshotScale), (v14 * this.mHighResTaskSnapshotScale));
	boolean v17 = v15.setClipToBounds(0);
	RecordingCanvas v18 = v15.start((v13 * this.mHighResTaskSnapshotScale), (v14 * this.mHighResTaskSnapshotScale));
	v18.drawColor(v5);
	v10.setInsets(v10);
	v10.drawDecors(v18);
	v15.end(v18);
	Bitmap v23 = ThreadedRenderer.createHardwareBitmap(v15, (v13 * this.mHighResTaskSnapshotScale), (v14 * this.mHighResTaskSnapshotScale));
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	Integer v11 = Integer.valueOf(p1);
	PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
	Task v13 = RootWindowContainer.getTask(v12);
	v12.recycle();
	Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
	Task v16 = v13.getRootTask();
	boolean v17 = v13.reparent(v15, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v7 = v13;
	Task v6 = v7;
	int v19 = this.mChildren.size();
	Object v20 = this.mChildren.get(phiInstruction);
	boolean v21 = v20.isVisible();
	int v22 = this.mChildren.size();
	Object v23 = this.mChildren.get(phiInstruction);
	boolean v24 = v23.isVisible();
	boolean v18 = 1;
	return 1;
	ActivityRecord v27 = p1.getTopMostActivity();
	boolean v28 = p1.isActivityTypeStandardOrUndefined();
	boolean v29 = p1.isActivityTypeAssistant();
	boolean v30 = v27.shouldUseAppThemeSnapshot();
	int v26 = 1;
	ActivityRecord v32 = p1.getTopMostActivity();
	WindowState v33 = v32.findMainWindow();
	ActivityManager$TaskDescription v34 = p1.getTaskDescription();
	int v35 = v34.getBackgroundColor();
	int v36 = ColorUtils.setAlphaComponent(v35, 255);
	WindowManager$LayoutParams v37 = v33.getAttrs();
	Rect v38 = p1.getBounds();
	InsetsState v39 = v33.getInsetsStateWithVisibilityOverride();
	Rect v40 = v33.getFrame();
	Rect v41 = TaskSnapshotController.getSystemBarInsets(v40, v39);
	TaskSnapshotController$SystemBarBackgroundPainter v42 = new TaskSnapshotController$SystemBarBackgroundPainter(WindowManager$LayoutParams.flags,WindowManager$LayoutParams.privateFlags,InsetsFlags.appearance,v43,this.mHighResTaskSnapshotScale,v39);
	ActivityManager$TaskDescription v43 = p1.getTaskDescription();
	int v45 = v38.width();
	int v46 = v38.height();
	RenderNode v47 = RenderNode.create(""TaskSnapshotController"", 0);
	boolean v48 = v47.setLeftTopRightBottom(0, 0, (v45 * this.mHighResTaskSnapshotScale), (v46 * this.mHighResTaskSnapshotScale));
	boolean v49 = v47.setClipToBounds(0);
	RecordingCanvas v50 = v47.start((v45 * this.mHighResTaskSnapshotScale), (v46 * this.mHighResTaskSnapshotScale));
	v50.drawColor(v36);
	v42.setInsets(v41);
	v42.drawDecors(v50);
	v47.end(v50);
	Bitmap v55 = ThreadedRenderer.createHardwareBitmap(v47, (v45 * this.mHighResTaskSnapshotScale), (v46 * this.mHighResTaskSnapshotScale));
	TaskSnapshot v31 = 0;
	TaskSnapshot v25 = phiInstruction;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I","0","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @0 exception:14,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 15 @5 exception:16,
18 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @8 exception:17,
20 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @12 exception:19,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,18,20,13,15 @16 exception:21,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @20 exception:23,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 24,5,15 @24 exception:25,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/wm/ActivityStarter; > 26,2 @28 exception:27,
30 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 28,3 @32 exception:29,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 30,4 @36 exception:31,
34 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 32,6 @40 exception:33,
36 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultTo(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityStarter; > 34,7 @44 exception:35,
38 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultWho(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 36,8 @48 exception:37,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setRequestCode(I)Lcom/android/server/wm/ActivityStarter; > 38,9 @52 exception:39,
42 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setStartFlags(I)Lcom/android/server/wm/ActivityStarter; > 40,10 @56 exception:41,
44 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setGlobalConfiguration(Landroid/content/res/Configuration;)Lcom/android/server/wm/ActivityStarter; > 42,11 @60 exception:43,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 44,12 @64 exception:45,
48 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 46,22 @68 exception:47,
50 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 48 @72 exception:49,
return 50,","depth : 0
public int startActivityWithConfig(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, Configuration p10, Bundle p11, int p12){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityWithConfig"");
	int v3 = Binder.getCallingPid();
	int v4 = Binder.getCallingUid();
	int v5 = p0.handleIncomingUser(v3, v4, p12, ""startActivityWithConfig"");
	ActivityStartController v6 = p0.getActivityStartController();
	ActivityStarter v7 = v6.obtainStarter(p4, ""startActivityWithConfig"");
	ActivityStarter v8 = v7.setCaller(p1);
	ActivityStarter v9 = v8.setCallingPackage(p2);
	ActivityStarter v10 = v9.setCallingFeatureId(p3);
	ActivityStarter v11 = v10.setResolvedType(p5);
	ActivityStarter v12 = v11.setResultTo(p6);
	ActivityStarter v13 = v12.setResultWho(p7);
	ActivityStarter v14 = v13.setRequestCode(p8);
	ActivityStarter v15 = v14.setStartFlags(p9);
	ActivityStarter v16 = v15.setGlobalConfiguration(p10);
	ActivityStarter v17 = v16.setActivityOptions(p11);
	ActivityStarter v18 = v17.setUserId(v5);
	int v19 = v18.execute();
	return v19;
}
-----
","public int startActivityWithConfig(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, Configuration p10, Bundle p11, int p12){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityWithConfig"");
	int v3 = Binder.getCallingPid();
	int v4 = Binder.getCallingUid();
	int v5 = p0.handleIncomingUser(v3, v4, p12, ""startActivityWithConfig"");
	ActivityStartController v6 = p0.getActivityStartController();
	ActivityStarter v7 = v6.obtainStarter(p4, ""startActivityWithConfig"");
	ActivityStarter v8 = v7.setCaller(p1);
	ActivityStarter v9 = v8.setCallingPackage(p2);
	ActivityStarter v10 = v9.setCallingFeatureId(p3);
	ActivityStarter v11 = v10.setResolvedType(p5);
	ActivityStarter v12 = v11.setResultTo(p6);
	ActivityStarter v13 = v12.setResultWho(p7);
	ActivityStarter v14 = v13.setRequestCode(p8);
	ActivityStarter v15 = v14.setStartFlags(p9);
	ActivityStarter v16 = v15.setGlobalConfiguration(p10);
	ActivityStarter v17 = v16.setActivityOptions(p11);
	ActivityStarter v18 = v17.setUserId(v5);
	int v19 = v18.execute();
	return v19;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I","1","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @0 exception:14,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 15 @5 exception:16,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
18 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @8 exception:17,
20 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @12 exception:19,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,18,20,13,15 @16 exception:21,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @20 exception:23,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 24,5,15 @24 exception:25,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
return 10,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/wm/ActivityStarter; > 26,2 @28 exception:27,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, caller, <Application,Landroid/app/IApplicationThread> > = 2,
return 1,
30 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 28,3 @32 exception:29,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingPackage, <Application,Ljava/lang/String> > = 2,
return 1,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 30,4 @36 exception:31,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingFeatureId, <Application,Ljava/lang/String> > = 2,
return 1,
34 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 32,6 @40 exception:33,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, resolvedType, <Application,Ljava/lang/String> > = 2,
return 1,
36 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultTo(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityStarter; > 34,7 @44 exception:35,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, resultTo, <Application,Landroid/os/IBinder> > = 2,
return 1,
38 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultWho(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 36,8 @48 exception:37,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, resultWho, <Application,Ljava/lang/String> > = 2,
return 1,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setRequestCode(I)Lcom/android/server/wm/ActivityStarter; > 38,9 @52 exception:39,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, requestCode, <Primordial,I> > = 2,
return 1,
42 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setStartFlags(I)Lcom/android/server/wm/ActivityStarter; > 40,10 @56 exception:41,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, startFlags, <Primordial,I> > = 2,
return 1,
44 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setGlobalConfiguration(Landroid/content/res/Configuration;)Lcom/android/server/wm/ActivityStarter; > 42,11 @60 exception:43,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, globalConfig, <Application,Landroid/content/res/Configuration> > = 2,
return 1,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 44,12 @64 exception:45,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
return 6,
48 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 46,22 @68 exception:47,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, userId, <Primordial,I> > = 2,
return 1,
50 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 48 @72 exception:49,
return 50,","depth : 0
public int startActivityWithConfig(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, Configuration p10, Bundle p11, int p12){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityWithConfig"");
	int v3 = Binder.getCallingPid();
	int v4 = Binder.getCallingUid();
	int v5 = p0.handleIncomingUser(v3, v4, p12, ""startActivityWithConfig"");
	ActivityStartController v6 = p0.getActivityStartController();
	ActivityStarter v7 = v6.obtainStarter(p4, ""startActivityWithConfig"");
	ActivityStarter v8 = v7.setCaller(p1);
	ActivityStarter v9 = v8.setCallingPackage(p2);
	ActivityStarter v10 = v9.setCallingFeatureId(p3);
	ActivityStarter v11 = v10.setResolvedType(p5);
	ActivityStarter v12 = v11.setResultTo(p6);
	ActivityStarter v13 = v12.setResultWho(p7);
	ActivityStarter v14 = v13.setRequestCode(p8);
	ActivityStarter v15 = v14.setStartFlags(p9);
	ActivityStarter v16 = v15.setGlobalConfiguration(p10);
	ActivityStarter v17 = v16.setActivityOptions(p11);
	ActivityStarter v18 = v17.setUserId(v5);
	int v19 = v18.execute();
	return v19;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 1
public ActivityStarter setCaller(IApplicationThread p1){
	ActivityStarter$Request.caller = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingPackage(String p1){
	ActivityStarter$Request.callingPackage = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingFeatureId(String p1){
	ActivityStarter$Request.callingFeatureId = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setResolvedType(String p1){
	ActivityStarter$Request.resolvedType = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setResultTo(IBinder p1){
	ActivityStarter$Request.resultTo = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setResultWho(String p1){
	ActivityStarter$Request.resultWho = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setRequestCode(int p1){
	ActivityStarter$Request.requestCode = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setStartFlags(int p1){
	ActivityStarter$Request.startFlags = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setGlobalConfiguration(Configuration p1){
	ActivityStarter$Request.globalConfig = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 1
public ActivityStarter setUserId(int p1){
	ActivityStarter$Request.userId = p1;
	return p0;
}
-----
","public int startActivityWithConfig(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, Configuration p10, Bundle p11, int p12){
	int v7 = Binder.getCallingPid();
	int v8 = Binder.getCallingUid();
	int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p12, 0, 0, ""startActivityWithConfig"", 0);
	int v9 = v10;
	ActivityStartController v11 = this.mActivityStartController;
	ActivityStarter v13 = this.mFactory.obtain();
	ActivityStarter v14 = v13.setIntent(p4);
	ActivityStarter v15 = v14.setReason(""startActivityWithConfig"");
	ActivityStarter v12 = v15;
	ActivityStarter$Request.caller = p1;
	ActivityStarter v16 = ActivityStarter;
	ActivityStarter$Request.callingPackage = p2;
	ActivityStarter v17 = ActivityStarter;
	ActivityStarter$Request.callingFeatureId = p3;
	ActivityStarter v18 = ActivityStarter;
	ActivityStarter$Request.resolvedType = p5;
	ActivityStarter v19 = ActivityStarter;
	ActivityStarter$Request.resultTo = p6;
	ActivityStarter v20 = ActivityStarter;
	ActivityStarter$Request.resultWho = p7;
	ActivityStarter v21 = ActivityStarter;
	ActivityStarter$Request.requestCode = p8;
	ActivityStarter v22 = ActivityStarter;
	ActivityStarter$Request.startFlags = p9;
	ActivityStarter v23 = ActivityStarter;
	ActivityStarter$Request.globalConfig = p10;
	ActivityStarter v24 = ActivityStarter;
	SafeActivityOptions v26 = SafeActivityOptions.fromBundle(p11);
	ActivityStarter v27 = ActivityStarter.setActivityOptions(v26);
	ActivityStarter v25 = v27;
	ActivityStarter$Request.userId = v9;
	ActivityStarter v28 = ActivityStarter;
	int v29 = v28.execute();
	return v29;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityWithConfig(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/content/res/Configuration;Landroid/os/Bundle;I)I","2","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @0 exception:14,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 15 @5 exception:16,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
18 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @8 exception:17,
20 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @12 exception:19,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,18,20,13,15 @16 exception:21,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
24 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @20 exception:23,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 24,5,15 @24 exception:25,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, intent, <Application,Landroid/content/Intent> > = 2,
return 1,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, reason, <Application,Ljava/lang/String> > = 2,
return 1,
return 10,
28 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCaller(Landroid/app/IApplicationThread;)Lcom/android/server/wm/ActivityStarter; > 26,2 @28 exception:27,
30 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 28,3 @32 exception:29,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 30,4 @36 exception:31,
34 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 32,6 @40 exception:33,
36 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultTo(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityStarter; > 34,7 @44 exception:35,
38 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResultWho(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 36,8 @48 exception:37,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setRequestCode(I)Lcom/android/server/wm/ActivityStarter; > 38,9 @52 exception:39,
42 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setStartFlags(I)Lcom/android/server/wm/ActivityStarter; > 40,10 @56 exception:41,
44 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setGlobalConfiguration(Landroid/content/res/Configuration;)Lcom/android/server/wm/ActivityStarter; > 42,11 @60 exception:43,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 44,12 @64 exception:45,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, activityOptions, <Application,Lcom/android/server/wm/SafeActivityOptions> > = 2,
return 1,
return 6,
48 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 46,22 @68 exception:47,
50 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 48 @72 exception:49,
return 50,","depth : 0
public int startActivityWithConfig(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, Configuration p10, Bundle p11, int p12){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityWithConfig"");
	int v3 = Binder.getCallingPid();
	int v4 = Binder.getCallingUid();
	int v5 = p0.handleIncomingUser(v3, v4, p12, ""startActivityWithConfig"");
	ActivityStartController v6 = p0.getActivityStartController();
	ActivityStarter v7 = v6.obtainStarter(p4, ""startActivityWithConfig"");
	ActivityStarter v8 = v7.setCaller(p1);
	ActivityStarter v9 = v8.setCallingPackage(p2);
	ActivityStarter v10 = v9.setCallingFeatureId(p3);
	ActivityStarter v11 = v10.setResolvedType(p5);
	ActivityStarter v12 = v11.setResultTo(p6);
	ActivityStarter v13 = v12.setResultWho(p7);
	ActivityStarter v14 = v13.setRequestCode(p8);
	ActivityStarter v15 = v14.setStartFlags(p9);
	ActivityStarter v16 = v15.setGlobalConfiguration(p10);
	ActivityStarter v17 = v16.setActivityOptions(p11);
	ActivityStarter v18 = v17.setUserId(v5);
	int v19 = v18.execute();
	return v19;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 2
public ActivityStarter setIntent(Intent p1){
	ActivityStarter$Request.intent = p1;
	return p0;
}
-----
depth : 2
public ActivityStarter setReason(String p1){
	ActivityStarter$Request.reason = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 2
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityStarter setActivityOptions(SafeActivityOptions p1){
	ActivityStarter$Request.activityOptions = p1;
	return p0;
}
-----
","public int startActivityWithConfig(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, Configuration p10, Bundle p11, int p12){
	int v7 = Binder.getCallingPid();
	int v8 = Binder.getCallingUid();
	int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p12, 0, 0, ""startActivityWithConfig"", 0);
	int v9 = v10;
	ActivityStartController v11 = this.mActivityStartController;
	ActivityStarter v13 = this.mFactory.obtain();
	ActivityStarter$Request.intent = p1;
	ActivityStarter v14 = ActivityStarter;
	ActivityStarter$Request.reason = p2;
	ActivityStarter v15 = ActivityStarter;
	ActivityStarter v12 = v15;
	ActivityStarter v16 = v12.setCaller(p1);
	ActivityStarter v17 = v16.setCallingPackage(p2);
	ActivityStarter v18 = v17.setCallingFeatureId(p3);
	ActivityStarter v19 = v18.setResolvedType(p5);
	ActivityStarter v20 = v19.setResultTo(p6);
	ActivityStarter v21 = v20.setResultWho(p7);
	ActivityStarter v22 = v21.setRequestCode(p8);
	ActivityStarter v23 = v22.setStartFlags(p9);
	ActivityStarter v24 = v23.setGlobalConfiguration(p10);
	SafeActivityOptions v27 = new SafeActivityOptions(v28);
	ActivityOptions v28 = ActivityOptions.fromBundle(p1);
	SafeActivityOptions v26 = phiInstruction;
	ActivityStarter$Request.activityOptions = v26;
	ActivityStarter v30 = ActivityStarter;
	ActivityStarter v25 = v30;
	ActivityStarter v31 = v25.setUserId(v9);
	int v32 = v31.execute();
	return v32;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getRecentTasks(III)Landroid/content/pm/ParceledListSlice;","0","6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:7,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,8,6,4,9 @10 exception:10,
13 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @16 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,9,13,6 @20 exception:14,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @27 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentTasks(IIZII)Landroid/content/pm/ParceledListSlice; > 18,2,3,15,11,6 @34 exception:19,
monitorexit 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @39 exception:28,
return 20,","depth : 0
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.handleIncomingUser(v2, v1, p3, ""getRecentTasks"");
	int v4 = Binder.getCallingPid();
	boolean v5 = p0.isGetTasksAllowed(""getRecentTasks"", v4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	ParceledListSlice v7 = this.mRecentTasks.getRecentTasks(p1, p2, v5, v3, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
","public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.handleIncomingUser(v2, v1, p3, ""getRecentTasks"");
	int v4 = Binder.getCallingPid();
	boolean v5 = p0.isGetTasksAllowed(""getRecentTasks"", v4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	ParceledListSlice v7 = this.mRecentTasks.getRecentTasks(p1, p2, v5, v3, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRecentTasks(III)Landroid/content/pm/ParceledListSlice;","1","6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:7,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,8,6,4,9 @10 exception:10,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
13 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @16 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,9,13,6 @20 exception:14,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
11 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 9,3,4 @10 exception:10,
conditional branch(ne, to iindex=-1) 11,8,
goto (from iindex= 11 to iindex = 2),
12 = phi  7,8,
conditional branch(ne, to iindex=-1) 12,8,
15 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 13,3,4 @24 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
19 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @33 exception:18,
21 = invokeinterface < Application, Landroid/content/pm/IPackageManager, isUidPrivileged(I)Z > 19,4 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,8,
22 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 22,8,
24 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @47 exception:23,
25 = conversion(J) 4,
26 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
28 = new <Application,[Ljava/lang/Object>@5716 ,
arraystore 28[8] = 24,
30 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 25 @61 exception:29,
arraystore 28[7] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 26,27,17,8,28 @67 exception:31,
36 = phi  12,12,12,7,
40 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 40,8,
42 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @75 exception:41,
43 = conversion(J) 4,
44 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
46 = new <Application,[Ljava/lang/Object>@8516 ,
arraystore 46[8] = 42,
48 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 43 @89 exception:47,
arraystore 46[7] = 48,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 44,45,17,8,46 @95 exception:49,
52 = phi  12,36,36,
return 52,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @27 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentTasks(IIZII)Landroid/content/pm/ParceledListSlice; > 18,2,3,15,11,6 @34 exception:19,
7 = new <Application,Landroid/content/pm/ParceledListSlice>@0,
9 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentTasksImpl(IIZII)Ljava/util/ArrayList; > 1,2,3,4,5,6 @2 exception:8,
invokespecial < Application, Landroid/content/pm/ParceledListSlice, <init>(Ljava/util/List;)V > 7,9 @6 exception:10,
return 7,
monitorexit 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @39 exception:28,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 20,","depth : 0
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.handleIncomingUser(v2, v1, p3, ""getRecentTasks"");
	int v4 = Binder.getCallingPid();
	boolean v5 = p0.isGetTasksAllowed(""getRecentTasks"", v4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	ParceledListSlice v7 = this.mRecentTasks.getRecentTasks(p1, p2, v5, v3, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public boolean isGetTasksAllowed(String p1, int p2, int p3){
	IPackageManager v4 = AppGlobals.getPackageManager();
	boolean v5 = v4.isUidPrivileged(p3);
	String v6 = String.valueOf(p1);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v6);
	String v9 = String.valueOf(p1);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v9);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ParceledListSlice getRecentTasks(int p1, int p2, boolean p3, int p4, int p5){
	ParceledListSlice v0 = new ParceledListSlice(v1);
	ArrayList v1 = p0.getRecentTasksImpl(p1, p2, p3, p4, p5);
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, ""getRecentTasks"", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	IPackageManager v10 = AppGlobals.getPackageManager();
	boolean v11 = v10.isUidPrivileged(v1);
	String v12 = String.valueOf(""getRecentTasks"");
	Object v13 = new Object(2);
	Long v14 = Long.valueOf(v1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v13);
	String v16 = String.valueOf(""getRecentTasks"");
	Object v17 = new Object(2);
	Long v18 = Long.valueOf(v1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v17);
	boolean v6 = phiInstruction;
	this.sThreadPriorityBooster.boost();
	ParceledListSlice v23 = new ParceledListSlice(v24);
	ArrayList v24 = RecentTasks.getRecentTasksImpl(p1, p2, v6, v3, v1);
	ParceledListSlice v22 = v23;
	this.sThreadPriorityBooster.reset();
	return v22;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRecentTasks(III)Landroid/content/pm/ParceledListSlice;","2","6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:7,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,8,6,4,9 @10 exception:10,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
13 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @16 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,9,13,6 @20 exception:14,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
11 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 9,3,4 @10 exception:10,
conditional branch(ne, to iindex=-1) 11,8,
goto (from iindex= 11 to iindex = 2),
12 = phi  7,8,
conditional branch(ne, to iindex=-1) 12,8,
15 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 13,3,4 @24 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
19 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @33 exception:18,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
21 = invokeinterface < Application, Landroid/content/pm/IPackageManager, isUidPrivileged(I)Z > 19,4 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,8,
22 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 22,8,
24 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @47 exception:23,
25 = conversion(J) 4,
26 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
28 = new <Application,[Ljava/lang/Object>@5716 ,
arraystore 28[8] = 24,
30 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 25 @61 exception:29,
arraystore 28[7] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 26,27,17,8,28 @67 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
36 = phi  12,12,12,7,
40 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 40,8,
42 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @75 exception:41,
43 = conversion(J) 4,
44 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
46 = new <Application,[Ljava/lang/Object>@8516 ,
arraystore 46[8] = 42,
48 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 43 @89 exception:47,
arraystore 46[7] = 48,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 44,45,17,8,46 @95 exception:49,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
52 = phi  12,36,36,
return 52,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @27 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentTasks(IIZII)Landroid/content/pm/ParceledListSlice; > 18,2,3,15,11,6 @34 exception:19,
7 = new <Application,Landroid/content/pm/ParceledListSlice>@0,
9 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentTasksImpl(IIZII)Ljava/util/ArrayList; > 1,2,3,4,5,6 @2 exception:8,
8 = binaryop(and) 3 , 7,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 5 to iindex = 2),
11 = phi  10,9,
14 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, isUserRunning(II)Z > 1,5,12 @10 exception:13,
conditional branch(ne, to iindex=-1) 14,9,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, loadUserRecentsLocked(I)V > 1,5 @49 exception:15,
17 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getProfileIds(I)Ljava/util/Set; > 1,5 @52 exception:16,
19 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 5 @56 exception:18,
21 = invokeinterface < Application, Ljava/util/Set, add(Ljava/lang/Object;)Z > 17,19 @60 exception:20,
22 = new <Application,Ljava/util/ArrayList>@63,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 22 @65 exception:23,
24 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTasks, <Application,Ljava/util/ArrayList> > 1,
26 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 24 @70 exception:25,
71 = phi  70,9,
72 = phi  65,9,
conditional branch(ge, to iindex=-1) 71,26,
return 22,
invokespecial < Application, Landroid/content/pm/ParceledListSlice, <init>(Ljava/util/List;)V > 7,9 @6 exception:10,
return 7,
monitorexit 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @39 exception:28,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 20,","depth : 0
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.handleIncomingUser(v2, v1, p3, ""getRecentTasks"");
	int v4 = Binder.getCallingPid();
	boolean v5 = p0.isGetTasksAllowed(""getRecentTasks"", v4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	ParceledListSlice v7 = this.mRecentTasks.getRecentTasks(p1, p2, v5, v3, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public boolean isGetTasksAllowed(String p1, int p2, int p3){
	IPackageManager v4 = AppGlobals.getPackageManager();
	boolean v5 = v4.isUidPrivileged(p3);
	String v6 = String.valueOf(p1);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v6);
	String v9 = String.valueOf(p1);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v9);
	return phiInstruction;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ParceledListSlice getRecentTasks(int p1, int p2, boolean p3, int p4, int p5){
	ParceledListSlice v0 = new ParceledListSlice(v1);
	ArrayList v1 = p0.getRecentTasksImpl(p1, p2, p3, p4, p5);
	return v0;
}
-----
depth : 2
public ArrayList getRecentTasksImpl(int p1, int p2, boolean p3, int p4, int p5){
	boolean v1 = p0.isUserRunning(p4, 4);
	p0.loadUserRecentsLocked(p4);
	Set v3 = p0.getProfileIds(p4);
	Integer v4 = Integer.valueOf(p4);
	boolean v5 = v3.add(v4);
	ArrayList v5 = new ArrayList();
	int v7 = this.mTasks.size();
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, ""getRecentTasks"", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	IPackageManager v11 = ActivityThread.getPackageManager();
	IPackageManager v10 = v11;
	boolean v12 = v10.isUidPrivileged(v1);
	String v13 = String.valueOf(""getRecentTasks"");
	Object v14 = new Object(2);
	Long v15 = Long.valueOf(v1);
	ProtoLogImpl v17 = ProtoLogImpl.getSingleInstance();
	v17.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v14);
	String v19 = String.valueOf(""getRecentTasks"");
	Object v20 = new Object(2);
	Long v21 = Long.valueOf(v1);
	ProtoLogImpl v23 = ProtoLogImpl.getSingleInstance();
	v23.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v20);
	boolean v6 = phiInstruction;
	ParceledListSlice v29 = new ParceledListSlice(v30);
	boolean v31 = RecentTasks.isUserRunning(p4, 4);
	RecentTasks.loadUserRecentsLocked(p4);
	Set v33 = RecentTasks.getProfileIds(p4);
	Integer v34 = Integer.valueOf(p4);
	boolean v35 = v33.add(v34);
	ArrayList v36 = new ArrayList();
	int v38 = this.mTasks.size();
	ArrayList v30 = v36;
	ParceledListSlice v28 = v29;
	return v28;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRecentTasks(III)Landroid/content/pm/ParceledListSlice;","2","6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:7,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,8,6,4,9 @10 exception:10,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
13 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @16 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,9,13,6 @20 exception:14,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
11 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 9,3,4 @10 exception:10,
conditional branch(ne, to iindex=-1) 11,8,
goto (from iindex= 11 to iindex = 2),
12 = phi  7,8,
conditional branch(ne, to iindex=-1) 12,8,
15 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 13,3,4 @24 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
19 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @33 exception:18,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
21 = invokeinterface < Application, Landroid/content/pm/IPackageManager, isUidPrivileged(I)Z > 19,4 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,8,
22 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 22,8,
24 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @47 exception:23,
25 = conversion(J) 4,
26 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
28 = new <Application,[Ljava/lang/Object>@5716 ,
arraystore 28[8] = 24,
30 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 25 @61 exception:29,
arraystore 28[7] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 26,27,17,8,28 @67 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
36 = phi  12,12,12,7,
40 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 40,8,
42 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @75 exception:41,
43 = conversion(J) 4,
44 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
46 = new <Application,[Ljava/lang/Object>@8516 ,
arraystore 46[8] = 42,
48 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 43 @89 exception:47,
arraystore 46[7] = 48,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 44,45,17,8,46 @95 exception:49,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
52 = phi  12,36,36,
return 52,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @27 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentTasks(IIZII)Landroid/content/pm/ParceledListSlice; > 18,2,3,15,11,6 @34 exception:19,
7 = new <Application,Landroid/content/pm/ParceledListSlice>@0,
9 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentTasksImpl(IIZII)Ljava/util/ArrayList; > 1,2,3,4,5,6 @2 exception:8,
8 = binaryop(and) 3 , 7,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 5 to iindex = 2),
11 = phi  10,9,
14 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, isUserRunning(II)Z > 1,5,12 @10 exception:13,
conditional branch(ne, to iindex=-1) 14,9,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, loadUserRecentsLocked(I)V > 1,5 @49 exception:15,
17 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getProfileIds(I)Ljava/util/Set; > 1,5 @52 exception:16,
19 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 5 @56 exception:18,
21 = invokeinterface < Application, Ljava/util/Set, add(Ljava/lang/Object;)Z > 17,19 @60 exception:20,
22 = new <Application,Ljava/util/ArrayList>@63,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 22 @65 exception:23,
24 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTasks, <Application,Ljava/util/ArrayList> > 1,
26 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 24 @70 exception:25,
71 = phi  70,9,
72 = phi  65,9,
conditional branch(ge, to iindex=-1) 71,26,
return 22,
invokespecial < Application, Landroid/content/pm/ParceledListSlice, <init>(Ljava/util/List;)V > 7,9 @6 exception:10,
return 7,
monitorexit 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @39 exception:28,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 20,","depth : 0
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.handleIncomingUser(v2, v1, p3, ""getRecentTasks"");
	int v4 = Binder.getCallingPid();
	boolean v5 = p0.isGetTasksAllowed(""getRecentTasks"", v4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	ParceledListSlice v7 = this.mRecentTasks.getRecentTasks(p1, p2, v5, v3, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public boolean isGetTasksAllowed(String p1, int p2, int p3){
	IPackageManager v4 = AppGlobals.getPackageManager();
	boolean v5 = v4.isUidPrivileged(p3);
	String v6 = String.valueOf(p1);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v6);
	String v9 = String.valueOf(p1);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v9);
	return phiInstruction;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public ParceledListSlice getRecentTasks(int p1, int p2, boolean p3, int p4, int p5){
	ParceledListSlice v0 = new ParceledListSlice(v1);
	ArrayList v1 = p0.getRecentTasksImpl(p1, p2, p3, p4, p5);
	return v0;
}
-----
depth : 2
public ArrayList getRecentTasksImpl(int p1, int p2, boolean p3, int p4, int p5){
	boolean v1 = p0.isUserRunning(p4, 4);
	p0.loadUserRecentsLocked(p4);
	Set v3 = p0.getProfileIds(p4);
	Integer v4 = Integer.valueOf(p4);
	boolean v5 = v3.add(v4);
	ArrayList v5 = new ArrayList();
	int v7 = this.mTasks.size();
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, ""getRecentTasks"", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	IPackageManager v11 = ActivityThread.getPackageManager();
	IPackageManager v10 = v11;
	boolean v12 = v10.isUidPrivileged(v1);
	String v13 = String.valueOf(""getRecentTasks"");
	Object v14 = new Object(2);
	Long v15 = Long.valueOf(v1);
	ProtoLogImpl v17 = ProtoLogImpl.getSingleInstance();
	v17.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v14);
	String v19 = String.valueOf(""getRecentTasks"");
	Object v20 = new Object(2);
	Long v21 = Long.valueOf(v1);
	ProtoLogImpl v23 = ProtoLogImpl.getSingleInstance();
	v23.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v20);
	boolean v6 = phiInstruction;
	WindowManagerThreadPriorityBooster.boost();
	ParceledListSlice v30 = new ParceledListSlice(v31);
	boolean v32 = RecentTasks.isUserRunning(p4, 4);
	RecentTasks.loadUserRecentsLocked(p4);
	Set v34 = RecentTasks.getProfileIds(p4);
	Integer v35 = Integer.valueOf(p4);
	boolean v36 = v34.add(v35);
	ArrayList v37 = new ArrayList();
	int v39 = this.mTasks.size();
	ArrayList v31 = v37;
	ParceledListSlice v29 = v30;
	return v29;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRecentTasks(III)Landroid/content/pm/ParceledListSlice;","2","6 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:7,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,8,6,4,9 @10 exception:10,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
13 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @16 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,9,13,6 @20 exception:14,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
11 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 9,3,4 @10 exception:10,
conditional branch(ne, to iindex=-1) 11,8,
goto (from iindex= 11 to iindex = 2),
12 = phi  7,8,
conditional branch(ne, to iindex=-1) 12,8,
15 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 13,3,4 @24 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
19 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @33 exception:18,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
21 = invokeinterface < Application, Landroid/content/pm/IPackageManager, isUidPrivileged(I)Z > 19,4 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,8,
22 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 22,8,
24 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @47 exception:23,
25 = conversion(J) 4,
26 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
28 = new <Application,[Ljava/lang/Object>@5716 ,
arraystore 28[8] = 24,
30 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 25 @61 exception:29,
arraystore 28[7] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 26,27,17,8,28 @67 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
36 = phi  12,12,12,7,
40 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 40,8,
42 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @75 exception:41,
43 = conversion(J) 4,
44 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
46 = new <Application,[Ljava/lang/Object>@8516 ,
arraystore 46[8] = 42,
48 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 43 @89 exception:47,
arraystore 46[7] = 48,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 44,45,17,8,46 @95 exception:49,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
52 = phi  12,36,36,
return 52,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @27 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
20 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentTasks(IIZII)Landroid/content/pm/ParceledListSlice; > 18,2,3,15,11,6 @34 exception:19,
7 = new <Application,Landroid/content/pm/ParceledListSlice>@0,
9 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentTasksImpl(IIZII)Ljava/util/ArrayList; > 1,2,3,4,5,6 @2 exception:8,
8 = binaryop(and) 3 , 7,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 5 to iindex = 2),
11 = phi  10,9,
14 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, isUserRunning(II)Z > 1,5,12 @10 exception:13,
conditional branch(ne, to iindex=-1) 14,9,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, loadUserRecentsLocked(I)V > 1,5 @49 exception:15,
17 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getProfileIds(I)Ljava/util/Set; > 1,5 @52 exception:16,
19 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 5 @56 exception:18,
21 = invokeinterface < Application, Ljava/util/Set, add(Ljava/lang/Object;)Z > 17,19 @60 exception:20,
22 = new <Application,Ljava/util/ArrayList>@63,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 22 @65 exception:23,
24 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTasks, <Application,Ljava/util/ArrayList> > 1,
26 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 24 @70 exception:25,
71 = phi  70,9,
72 = phi  65,9,
conditional branch(ge, to iindex=-1) 71,26,
return 22,
invokespecial < Application, Landroid/content/pm/ParceledListSlice, <init>(Ljava/util/List;)V > 7,9 @6 exception:10,
return 7,
monitorexit 16,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @39 exception:28,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 20,","depth : 0
public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.handleIncomingUser(v2, v1, p3, ""getRecentTasks"");
	int v4 = Binder.getCallingPid();
	boolean v5 = p0.isGetTasksAllowed(""getRecentTasks"", v4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	ParceledListSlice v7 = this.mRecentTasks.getRecentTasks(p1, p2, v5, v3, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public boolean isGetTasksAllowed(String p1, int p2, int p3){
	IPackageManager v4 = AppGlobals.getPackageManager();
	boolean v5 = v4.isUidPrivileged(p3);
	String v6 = String.valueOf(p1);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v6);
	String v9 = String.valueOf(p1);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v9);
	return phiInstruction;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ParceledListSlice getRecentTasks(int p1, int p2, boolean p3, int p4, int p5){
	ParceledListSlice v0 = new ParceledListSlice(v1);
	ArrayList v1 = p0.getRecentTasksImpl(p1, p2, p3, p4, p5);
	return v0;
}
-----
depth : 2
public ArrayList getRecentTasksImpl(int p1, int p2, boolean p3, int p4, int p5){
	boolean v1 = p0.isUserRunning(p4, 4);
	p0.loadUserRecentsLocked(p4);
	Set v3 = p0.getProfileIds(p4);
	Integer v4 = Integer.valueOf(p4);
	boolean v5 = v3.add(v4);
	ArrayList v5 = new ArrayList();
	int v7 = this.mTasks.size();
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public ParceledListSlice getRecentTasks(int p1, int p2, int p3){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v4 = this.mAmInternal.handleIncomingUser(v2, v1, p3, 0, 0, ""getRecentTasks"", 0);
	int v3 = v4;
	int v5 = Binder.getCallingPid();
	IPackageManager v11 = ActivityThread.getPackageManager();
	IPackageManager v10 = v11;
	boolean v12 = v10.isUidPrivileged(v1);
	String v13 = String.valueOf(""getRecentTasks"");
	Object v14 = new Object(2);
	Long v15 = Long.valueOf(v1);
	ProtoLogImpl v17 = ProtoLogImpl.getSingleInstance();
	v17.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v14);
	String v19 = String.valueOf(""getRecentTasks"");
	Object v20 = new Object(2);
	Long v21 = Long.valueOf(v1);
	ProtoLogImpl v23 = ProtoLogImpl.getSingleInstance();
	v23.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v20);
	boolean v6 = phiInstruction;
	ParceledListSlice v29 = new ParceledListSlice(v30);
	boolean v31 = RecentTasks.isUserRunning(p4, 4);
	RecentTasks.loadUserRecentsLocked(p4);
	Set v33 = RecentTasks.getProfileIds(p4);
	Integer v34 = Integer.valueOf(p4);
	boolean v35 = v33.add(v34);
	ArrayList v36 = new ArrayList();
	int v38 = this.mTasks.size();
	ArrayList v30 = v36;
	ParceledListSlice v28 = v29;
	WindowManagerThreadPriorityBooster.reset();
	return v28;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","stopSystemLockTaskMode()V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, stopLockTaskModeInternal(Landroid/os/IBinder;Z)V > 1,4,5 @7 exception:6,
return,","depth : 0
public void stopSystemLockTaskMode(){
	ActivityTaskManagerService.enforceTaskPermission(""stopSystemLockTaskMode"");
	p0.stopLockTaskModeInternal(0, 1);
	return;
}
-----
","public void stopSystemLockTaskMode(){
	ActivityTaskManagerService.enforceTaskPermission(""stopSystemLockTaskMode"");
	p0.stopLockTaskModeInternal(0, 1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","stopSystemLockTaskMode()V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, stopLockTaskModeInternal(Landroid/os/IBinder;Z)V > 1,4,5 @7 exception:6,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @4 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:9,
conditional branch(eq, to iindex=-1) 2,10,
12 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @17 exception:11,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 12 @31 exception:13,
15 = phi  10,14,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @35 exception:19,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, stopLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 20,15,3,5 @39 exception:21,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @43 exception:22,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 23,24 @50 exception:25,
27 = checkcast <Application,Landroid/telecom/TelecomManager>26 <Application,Landroid/telecom/TelecomManager>,
conditional branch(eq, to iindex=-1) 27,10,
invokevirtual < Application, Landroid/telecom/TelecomManager, showInCallScreen(Z)V > 27,10 @59 exception:28,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:31,
return,
return,","depth : 0
public void stopSystemLockTaskMode(){
	ActivityTaskManagerService.enforceTaskPermission(""stopSystemLockTaskMode"");
	p0.stopLockTaskModeInternal(0, 1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void stopLockTaskModeInternal(IBinder p1, boolean p2){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.forTokenLocked(p1);
	Task v5 = v4.getTask();
	LockTaskController v6 = p0.getLockTaskController();
	v6.stopLockTaskMode(phiInstruction, p2, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Object v9 = this.mContext.getSystemService(""telecom"");
	v9.showInCallScreen(0);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","public void stopSystemLockTaskMode(){
	int v6 = Binder.getCallingUid();
	long v7 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v9 = ActivityRecord.forTokenLocked(0);
	Task v10 = v9.getTask();
	LockTaskController v11 = ActivityTaskManagerService.getLockTaskController();
	v11.stopLockTaskMode(phiInstruction, 1, v6);
	WindowManagerService.resetPriorityAfterLockedSection();
	Object v14 = this.mContext.getSystemService(""telecom"");
	v14.showInCallScreen(0);
	Binder.restoreCallingIdentity(v7);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","stopSystemLockTaskMode()V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, stopLockTaskModeInternal(Landroid/os/IBinder;Z)V > 1,4,5 @7 exception:6,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @4 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:9,
conditional branch(eq, to iindex=-1) 2,10,
12 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @17 exception:11,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 12 @31 exception:13,
15 = phi  10,14,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @35 exception:19,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, stopLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 20,15,3,5 @39 exception:21,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @43 exception:22,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 23,24 @50 exception:25,
27 = checkcast <Application,Landroid/telecom/TelecomManager>26 <Application,Landroid/telecom/TelecomManager>,
conditional branch(eq, to iindex=-1) 27,10,
invokevirtual < Application, Landroid/telecom/TelecomManager, showInCallScreen(Z)V > 27,10 @59 exception:28,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:31,
return,
return,","depth : 0
public void stopSystemLockTaskMode(){
	ActivityTaskManagerService.enforceTaskPermission(""stopSystemLockTaskMode"");
	p0.stopLockTaskModeInternal(0, 1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void stopLockTaskModeInternal(IBinder p1, boolean p2){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.forTokenLocked(p1);
	Task v5 = v4.getTask();
	LockTaskController v6 = p0.getLockTaskController();
	v6.stopLockTaskMode(phiInstruction, p2, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Object v9 = this.mContext.getSystemService(""telecom"");
	v9.showInCallScreen(0);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","public void stopSystemLockTaskMode(){
	int v4 = Binder.getCallingUid();
	long v5 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v7 = ActivityRecord.forTokenLocked(0);
	Task v8 = v7.getTask();
	LockTaskController v9 = ActivityTaskManagerService.getLockTaskController();
	v9.stopLockTaskMode(phiInstruction, 1, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Object v12 = this.mContext.getSystemService(""telecom"");
	v12.showInCallScreen(0);
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","stopSystemLockTaskMode()V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, stopLockTaskModeInternal(Landroid/os/IBinder;Z)V > 1,4,5 @7 exception:6,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @4 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
conditional branch(eq, to iindex=-1) 2,10,
12 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @17 exception:11,
conditional branch(ne, to iindex=-1) 1,2,
3 = checkcast <Application,Lcom/android/server/wm/ActivityRecord$Token>1 <Application,Lcom/android/server/wm/ActivityRecord$Token>,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord$Token, mActivityRef, <Application,Ljava/lang/ref/WeakReference> > 3,
19 = invokevirtual < Application, Ljava/lang/ref/WeakReference, get()Ljava/lang/Object; > 17 @8 exception:18,
20 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>19 <Application,Lcom/android/server/wm/ActivityRecord>,
conditional branch(eq, to iindex=-1) 20,2,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 20 @16 exception:21,
conditional branch(ne, to iindex=-1) 22,2,
goto (from iindex= 12 to iindex = 2),
23 = phi  2,2,20,
return 23,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 12 @31 exception:13,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
15 = phi  10,14,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @35 exception:19,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, stopLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 20,15,3,5 @39 exception:21,
5 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeState, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(eq, to iindex=-1) 2,6,
10 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskUid, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 4,10,
conditional branch(ne, to iindex=-1) 10,6,
11 = getfield < Application, Lcom/android/server/wm/Task, effectiveUid, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 4,11,
goto (from iindex= 21 to iindex = 44),
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, clearLockedTask(Lcom/android/server/wm/Task;)V > 1,2 @85 exception:37,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @43 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 23,24 @50 exception:25,
27 = checkcast <Application,Landroid/telecom/TelecomManager>26 <Application,Landroid/telecom/TelecomManager>,
conditional branch(eq, to iindex=-1) 27,10,
invokevirtual < Application, Landroid/telecom/TelecomManager, showInCallScreen(Z)V > 27,10 @59 exception:28,
4 = invokespecial < Application, Landroid/telecom/TelecomManager, getTelecomService()Lcom/android/internal/telecom/ITelecomService; > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/telecom/TelecomManager, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getOpPackageName()Ljava/lang/String; > 6 @8 exception:7,
9 = getfield < Application, Landroid/telecom/TelecomManager, mContext, <Application,Landroid/content/Context> > 1,
11 = invokevirtual < Application, Landroid/content/Context, getAttributionTag()Ljava/lang/String; > 9 @14 exception:10,
invokeinterface < Application, Lcom/android/internal/telecom/ITelecomService, showInCallScreen(ZLjava/lang/String;Ljava/lang/String;)V > 4,2,8,11 @18 exception:12,
17 = getCaughtException ,
21 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 18,19,17 @27 exception:20,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:31,
return,
return,","depth : 0
public void stopSystemLockTaskMode(){
	ActivityTaskManagerService.enforceTaskPermission(""stopSystemLockTaskMode"");
	p0.stopLockTaskModeInternal(0, 1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void stopLockTaskModeInternal(IBinder p1, boolean p2){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.forTokenLocked(p1);
	Task v5 = v4.getTask();
	LockTaskController v6 = p0.getLockTaskController();
	v6.stopLockTaskMode(phiInstruction, p2, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Object v9 = this.mContext.getSystemService(""telecom"");
	v9.showInCallScreen(0);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public ActivityRecord forTokenLocked(IBinder p1){
	Object v1 = ActivityRecord$Token.mActivityRef.get();
	Task v2 = v1.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public Task getTask(){
	return this.task;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public void stopLockTaskMode(Task p1, boolean p2, int p3){
	p0.clearLockedTask(p1);
	return;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void showInCallScreen(boolean p1){
	ITelecomService v1 = p0.getTelecomService();
	String v2 = this.mContext.getOpPackageName();
	String v3 = this.mContext.getAttributionTag();
	v1.showInCallScreen(p1, v2, v3);
	int v5 = Log.e(""TelecomManager"", ""Error calling ITelecomService#showCallScreen"", caughtException);
	return;
}
-----
","public void stopSystemLockTaskMode(){
	int v6 = Binder.getCallingUid();
	long v7 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Object v11 = ActivityRecord$Token.mActivityRef.get();
	Task v12 = v11.getRootTask();
	ActivityRecord v10 = phiInstruction;
	Task v13 = this.task;
	LockTaskController v14 = this.mLockTaskController;
	LockTaskController.clearLockedTask(phiInstruction);
	this.sThreadPriorityBooster.reset();
	Object v19 = this.mContext.getSystemService(""telecom"");
	ITelecomService v21 = TelecomManager.getTelecomService();
	String v22 = this.mContext.getOpPackageName();
	String v23 = this.mContext.getAttributionTag();
	v21.showInCallScreen(0, v22, v23);
	int v25 = Log.e(""TelecomManager"", ""Error calling ITelecomService#showCallScreen"", caughtException);
	Binder.restoreCallingIdentity(v7);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","stopSystemLockTaskMode()V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, stopLockTaskModeInternal(Landroid/os/IBinder;Z)V > 1,4,5 @7 exception:6,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @4 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
conditional branch(eq, to iindex=-1) 2,10,
12 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @17 exception:11,
conditional branch(ne, to iindex=-1) 1,2,
3 = checkcast <Application,Lcom/android/server/wm/ActivityRecord$Token>1 <Application,Lcom/android/server/wm/ActivityRecord$Token>,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord$Token, mActivityRef, <Application,Ljava/lang/ref/WeakReference> > 3,
19 = invokevirtual < Application, Ljava/lang/ref/WeakReference, get()Ljava/lang/Object; > 17 @8 exception:18,
20 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>19 <Application,Lcom/android/server/wm/ActivityRecord>,
conditional branch(eq, to iindex=-1) 20,2,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 20 @16 exception:21,
conditional branch(ne, to iindex=-1) 22,2,
goto (from iindex= 12 to iindex = 2),
23 = phi  2,2,20,
return 23,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 12 @31 exception:13,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
15 = phi  10,14,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @35 exception:19,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, stopLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 20,15,3,5 @39 exception:21,
5 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeState, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(eq, to iindex=-1) 2,6,
10 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskUid, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 4,10,
conditional branch(ne, to iindex=-1) 10,6,
11 = getfield < Application, Lcom/android/server/wm/Task, effectiveUid, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 4,11,
goto (from iindex= 21 to iindex = 44),
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, clearLockedTask(Lcom/android/server/wm/Task;)V > 1,2 @85 exception:37,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @43 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 23,24 @50 exception:25,
27 = checkcast <Application,Landroid/telecom/TelecomManager>26 <Application,Landroid/telecom/TelecomManager>,
conditional branch(eq, to iindex=-1) 27,10,
invokevirtual < Application, Landroid/telecom/TelecomManager, showInCallScreen(Z)V > 27,10 @59 exception:28,
4 = invokespecial < Application, Landroid/telecom/TelecomManager, getTelecomService()Lcom/android/internal/telecom/ITelecomService; > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/telecom/TelecomManager, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getOpPackageName()Ljava/lang/String; > 6 @8 exception:7,
9 = getfield < Application, Landroid/telecom/TelecomManager, mContext, <Application,Landroid/content/Context> > 1,
11 = invokevirtual < Application, Landroid/content/Context, getAttributionTag()Ljava/lang/String; > 9 @14 exception:10,
17 = getCaughtException ,
21 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 18,19,17 @27 exception:20,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:31,
return,
return,","depth : 0
public void stopSystemLockTaskMode(){
	ActivityTaskManagerService.enforceTaskPermission(""stopSystemLockTaskMode"");
	p0.stopLockTaskModeInternal(0, 1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void stopLockTaskModeInternal(IBinder p1, boolean p2){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.forTokenLocked(p1);
	Task v5 = v4.getTask();
	LockTaskController v6 = p0.getLockTaskController();
	v6.stopLockTaskMode(phiInstruction, p2, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Object v9 = this.mContext.getSystemService(""telecom"");
	v9.showInCallScreen(0);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public ActivityRecord forTokenLocked(IBinder p1){
	Object v1 = ActivityRecord$Token.mActivityRef.get();
	Task v2 = v1.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public Task getTask(){
	return this.task;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public void stopLockTaskMode(Task p1, boolean p2, int p3){
	p0.clearLockedTask(p1);
	return;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void showInCallScreen(boolean p1){
	ITelecomService v1 = p0.getTelecomService();
	String v2 = this.mContext.getOpPackageName();
	String v3 = this.mContext.getAttributionTag();
	int v4 = Log.e(""TelecomManager"", ""Error calling ITelecomService#showCallScreen"", caughtException);
	return;
}
-----
","public void stopSystemLockTaskMode(){
	int v6 = Binder.getCallingUid();
	long v7 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Object v11 = ActivityRecord$Token.mActivityRef.get();
	Task v12 = v11.getRootTask();
	ActivityRecord v10 = phiInstruction;
	Task v13 = this.task;
	LockTaskController v14 = this.mLockTaskController;
	LockTaskController.clearLockedTask(phiInstruction);
	this.sThreadPriorityBooster.reset();
	Object v19 = this.mContext.getSystemService(""telecom"");
	ITelecomService v21 = TelecomManager.getTelecomService();
	String v22 = this.mContext.getOpPackageName();
	String v23 = this.mContext.getAttributionTag();
	int v24 = Log.e(""TelecomManager"", ""Error calling ITelecomService#showCallScreen"", caughtException);
	Binder.restoreCallingIdentity(v7);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","stopSystemLockTaskMode()V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, stopLockTaskModeInternal(Landroid/os/IBinder;Z)V > 1,4,5 @7 exception:6,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @4 exception:6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @11 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
conditional branch(eq, to iindex=-1) 2,10,
12 = invokestatic < Application, Lcom/android/server/wm/ActivityRecord, forTokenLocked(Landroid/os/IBinder;)Lcom/android/server/wm/ActivityRecord; > 2 @17 exception:11,
conditional branch(ne, to iindex=-1) 1,2,
3 = checkcast <Application,Lcom/android/server/wm/ActivityRecord$Token>1 <Application,Lcom/android/server/wm/ActivityRecord$Token>,
17 = getfield < Application, Lcom/android/server/wm/ActivityRecord$Token, mActivityRef, <Application,Ljava/lang/ref/WeakReference> > 3,
19 = invokevirtual < Application, Ljava/lang/ref/WeakReference, get()Ljava/lang/Object; > 17 @8 exception:18,
20 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>19 <Application,Lcom/android/server/wm/ActivityRecord>,
conditional branch(eq, to iindex=-1) 20,2,
22 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getRootTask()Lcom/android/server/wm/Task; > 20 @16 exception:21,
conditional branch(ne, to iindex=-1) 22,2,
goto (from iindex= 12 to iindex = 2),
23 = phi  2,2,20,
return 23,
conditional branch(ne, to iindex=-1) 12,10,
14 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 12 @31 exception:13,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
15 = phi  10,14,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @35 exception:19,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, stopLockTaskMode(Lcom/android/server/wm/Task;ZI)V > 20,15,3,5 @39 exception:21,
5 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeState, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(eq, to iindex=-1) 2,6,
10 = getfield < Application, Lcom/android/server/wm/Task, mLockTaskUid, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 4,10,
conditional branch(ne, to iindex=-1) 10,6,
11 = getfield < Application, Lcom/android/server/wm/Task, effectiveUid, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 4,11,
goto (from iindex= 21 to iindex = 44),
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, clearLockedTask(Lcom/android/server/wm/Task;)V > 1,2 @85 exception:37,
return,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @43 exception:22,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
23 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 23,24 @50 exception:25,
27 = checkcast <Application,Landroid/telecom/TelecomManager>26 <Application,Landroid/telecom/TelecomManager>,
conditional branch(eq, to iindex=-1) 27,10,
invokevirtual < Application, Landroid/telecom/TelecomManager, showInCallScreen(Z)V > 27,10 @59 exception:28,
4 = invokespecial < Application, Landroid/telecom/TelecomManager, getTelecomService()Lcom/android/internal/telecom/ITelecomService; > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/telecom/TelecomManager, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getOpPackageName()Ljava/lang/String; > 6 @8 exception:7,
9 = getfield < Application, Landroid/telecom/TelecomManager, mContext, <Application,Landroid/content/Context> > 1,
11 = invokevirtual < Application, Landroid/content/Context, getAttributionTag()Ljava/lang/String; > 9 @14 exception:10,
invokeinterface < Application, Lcom/android/internal/telecom/ITelecomService, showInCallScreen(ZLjava/lang/String;Ljava/lang/String;)V > 4,2,8,11 @18 exception:12,
17 = getCaughtException ,
21 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 18,19,17 @27 exception:20,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:31,
return,
return,","depth : 0
public void stopSystemLockTaskMode(){
	ActivityTaskManagerService.enforceTaskPermission(""stopSystemLockTaskMode"");
	p0.stopLockTaskModeInternal(0, 1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void stopLockTaskModeInternal(IBinder p1, boolean p2){
	int v1 = Binder.getCallingUid();
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityRecord v4 = ActivityRecord.forTokenLocked(p1);
	Task v5 = v4.getTask();
	LockTaskController v6 = p0.getLockTaskController();
	v6.stopLockTaskMode(phiInstruction, p2, v1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Object v9 = this.mContext.getSystemService(""telecom"");
	v9.showInCallScreen(0);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public ActivityRecord forTokenLocked(IBinder p1){
	Object v1 = ActivityRecord$Token.mActivityRef.get();
	Task v2 = v1.getRootTask();
	return phiInstruction;
}
-----
depth : 2
public Task getTask(){
	return this.task;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public void stopLockTaskMode(Task p1, boolean p2, int p3){
	p0.clearLockedTask(p1);
	return;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void showInCallScreen(boolean p1){
	ITelecomService v1 = p0.getTelecomService();
	String v2 = this.mContext.getOpPackageName();
	String v3 = this.mContext.getAttributionTag();
	v1.showInCallScreen(p1, v2, v3);
	int v5 = Log.e(""TelecomManager"", ""Error calling ITelecomService#showCallScreen"", caughtException);
	return;
}
-----
","public void stopSystemLockTaskMode(){
	int v4 = Binder.getCallingUid();
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Object v9 = ActivityRecord$Token.mActivityRef.get();
	Task v10 = v9.getRootTask();
	ActivityRecord v8 = phiInstruction;
	Task v11 = this.task;
	LockTaskController v12 = this.mLockTaskController;
	LockTaskController.clearLockedTask(phiInstruction);
	this.sThreadPriorityBooster.reset();
	Object v17 = this.mContext.getSystemService(""telecom"");
	ITelecomService v19 = TelecomManager.getTelecomService();
	String v20 = this.mContext.getOpPackageName();
	String v21 = this.mContext.getAttributionTag();
	v19.showInCallScreen(0, v20, v21);
	int v23 = Log.e(""TelecomManager"", ""Error calling ITelecomService#showCallScreen"", caughtException);
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getFrontActivityScreenCompatMode()I","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @17 exception:9,
goto (from iindex= 10 to iindex = 2),
11 = phi  10,8,
conditional branch(ne, to iindex=-1) 11,8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
15 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 11,
16 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 15,
18 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 14,16 @37 exception:17,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @42 exception:19,
return 18,","depth : 0
public int getFrontActivityScreenCompatMode(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getFrontActivityScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	int v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v5;
}
-----
","public int getFrontActivityScreenCompatMode(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getFrontActivityScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	int v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFrontActivityScreenCompatMode()I","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @17 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
goto (from iindex= 10 to iindex = 2),
11 = phi  10,8,
conditional branch(ne, to iindex=-1) 11,8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
15 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 11,
16 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 15,
18 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 14,16 @37 exception:17,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, alwaysSupportsScreen()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, neverSupportsScreen()Z > 4 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @20 exception:10,
return 11,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @42 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 18,","depth : 0
public int getFrontActivityScreenCompatMode(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getFrontActivityScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	int v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v5;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 1
public int computeCompatModeLocked(ApplicationInfo p1){
	CompatibilityInfo v1 = p0.compatibilityInfoForPackageLocked(p1);
	boolean v2 = v1.alwaysSupportsScreen();
	boolean v3 = v1.neverSupportsScreen();
	boolean v4 = p0.getPackageCompatModeEnabledLocked(p1);
	return v4;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public int getFrontActivityScreenCompatMode(){
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	ActivityRecord v9 = TaskFragment.topRunningActivity(0);
	ActivityRecord v8 = v9;
	CompatibilityInfo v11 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
	boolean v12 = v11.alwaysSupportsScreen();
	boolean v13 = v11.neverSupportsScreen();
	boolean v14 = CompatModePackages.getPackageCompatModeEnabledLocked(ActivityInfo.applicationInfo);
	int v10 = v14;
	this.sThreadPriorityBooster.reset();
	return v10;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFrontActivityScreenCompatMode()I","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 7,8,
11 = phi  10,8,
conditional branch(ne, to iindex=-1) 11,8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
15 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 11,
16 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 15,
18 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 14,16 @37 exception:17,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, alwaysSupportsScreen()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, neverSupportsScreen()Z > 4 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @20 exception:10,
return 11,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @42 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 18,","depth : 0
public int getFrontActivityScreenCompatMode(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getFrontActivityScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	int v4 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v4;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public int computeCompatModeLocked(ApplicationInfo p1){
	CompatibilityInfo v1 = p0.compatibilityInfoForPackageLocked(p1);
	boolean v2 = v1.alwaysSupportsScreen();
	boolean v3 = v1.neverSupportsScreen();
	boolean v4 = p0.getPackageCompatModeEnabledLocked(p1);
	return v4;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public int getFrontActivityScreenCompatMode(){
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	CompatibilityInfo v9 = CompatModePackages.compatibilityInfoForPackageLocked(ActivityInfo.applicationInfo);
	boolean v10 = v9.alwaysSupportsScreen();
	boolean v11 = v9.neverSupportsScreen();
	boolean v12 = CompatModePackages.getPackageCompatModeEnabledLocked(ActivityInfo.applicationInfo);
	int v8 = v12;
	this.sThreadPriorityBooster.reset();
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFrontActivityScreenCompatMode()I","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @17 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
goto (from iindex= 10 to iindex = 2),
11 = phi  10,8,
conditional branch(ne, to iindex=-1) 11,8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
15 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 11,
16 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 15,
18 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 14,16 @37 exception:17,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo; > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @0 exception:3,
5 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 2,
8 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getCompatScale(Ljava/lang/String;I)F > 1,5,6 @8 exception:7,
9 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfiguration()Landroid/content/res/Configuration; > 9 @14 exception:10,
12 = new <Application,Landroid/content/res/CompatibilityInfo>@18,
13 = getfield < Application, Landroid/content/res/Configuration, screenLayout, <Primordial,I> > 11,
14 = getfield < Application, Landroid/content/res/Configuration, smallestScreenWidthDp, <Primordial,I> > 11,
invokespecial < Application, Landroid/content/res/CompatibilityInfo, <init>(Landroid/content/pm/ApplicationInfo;IIZF)V > 12,2,13,14,4,8 @26 exception:15,
return 12,
6 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, alwaysSupportsScreen()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, neverSupportsScreen()Z > 4 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @20 exception:10,
3 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
5 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,3 @2 exception:4,
7 = binaryop(and) 5 , 6,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,8,
return 10,
return 11,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @42 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 18,","depth : 0
public int getFrontActivityScreenCompatMode(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getFrontActivityScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	int v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v5;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public int computeCompatModeLocked(ApplicationInfo p1){
	CompatibilityInfo v1 = p0.compatibilityInfoForPackageLocked(p1);
	boolean v2 = v1.alwaysSupportsScreen();
	boolean v3 = v1.neverSupportsScreen();
	boolean v4 = p0.getPackageCompatModeEnabledLocked(p1);
	return v4;
}
-----
depth : 2
public CompatibilityInfo compatibilityInfoForPackageLocked(ApplicationInfo p1){
	boolean v1 = p0.getPackageCompatModeEnabledLocked(p1);
	float v2 = p0.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
	Configuration v3 = this.mService.getGlobalConfiguration();
	CompatibilityInfo v3 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v1,v2);
	return v3;
}
-----
depth : 2
public boolean getPackageCompatModeEnabledLocked(ApplicationInfo p1){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public int getFrontActivityScreenCompatMode(){
	int v9 = RootWindowContainer.getChildCount();
	WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction);
	Task v11 = v10.getFocusedRootTask();
	Task v8 = v11;
	Task v7 = v8;
	ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v13 = v14;
	ActivityRecord v12 = v13;
	boolean v17 = CompatModePackages.getPackageCompatModeEnabledLocked(p1);
	float v18 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
	Configuration v19 = this.mService.getGlobalConfiguration();
	CompatibilityInfo v20 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v17,v18);
	CompatibilityInfo v16 = v20;
	boolean v22 = v16.alwaysSupportsScreen();
	boolean v23 = v16.neverSupportsScreen();
	int v25 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
	boolean v24 = phiInstruction;
	int v15 = v24;
	return v15;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFrontActivityScreenCompatMode()I","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @17 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
goto (from iindex= 10 to iindex = 2),
11 = phi  10,8,
conditional branch(ne, to iindex=-1) 11,8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
15 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 11,
16 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 15,
18 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 14,16 @37 exception:17,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo; > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @0 exception:3,
5 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 2,
8 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getCompatScale(Ljava/lang/String;I)F > 1,5,6 @8 exception:7,
9 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfiguration()Landroid/content/res/Configuration; > 9 @14 exception:10,
12 = new <Application,Landroid/content/res/CompatibilityInfo>@18,
13 = getfield < Application, Landroid/content/res/Configuration, screenLayout, <Primordial,I> > 11,
14 = getfield < Application, Landroid/content/res/Configuration, smallestScreenWidthDp, <Primordial,I> > 11,
invokespecial < Application, Landroid/content/res/CompatibilityInfo, <init>(Landroid/content/pm/ApplicationInfo;IIZF)V > 12,2,13,14,4,8 @26 exception:15,
return 12,
6 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, alwaysSupportsScreen()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, neverSupportsScreen()Z > 4 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @20 exception:10,
3 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
5 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,3 @2 exception:4,
7 = binaryop(and) 5 , 6,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,8,
return 10,
return 11,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @42 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 18,","depth : 0
public int getFrontActivityScreenCompatMode(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getFrontActivityScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	int v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v5;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public int computeCompatModeLocked(ApplicationInfo p1){
	CompatibilityInfo v1 = p0.compatibilityInfoForPackageLocked(p1);
	boolean v2 = v1.alwaysSupportsScreen();
	boolean v3 = v1.neverSupportsScreen();
	boolean v4 = p0.getPackageCompatModeEnabledLocked(p1);
	return v4;
}
-----
depth : 2
public CompatibilityInfo compatibilityInfoForPackageLocked(ApplicationInfo p1){
	boolean v1 = p0.getPackageCompatModeEnabledLocked(p1);
	float v2 = p0.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
	Configuration v3 = this.mService.getGlobalConfiguration();
	CompatibilityInfo v3 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v1,v2);
	return v3;
}
-----
depth : 2
public boolean getPackageCompatModeEnabledLocked(ApplicationInfo p1){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public int getFrontActivityScreenCompatMode(){
	WindowManagerThreadPriorityBooster.boost();
	int v10 = RootWindowContainer.getChildCount();
	WindowContainer v11 = RootWindowContainer.getChildAt(phiInstruction);
	Task v12 = v11.getFocusedRootTask();
	Task v9 = v12;
	Task v8 = v9;
	ActivityRecord v15 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v14 = v15;
	ActivityRecord v13 = v14;
	boolean v18 = CompatModePackages.getPackageCompatModeEnabledLocked(p1);
	float v19 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
	Configuration v20 = this.mService.getGlobalConfiguration();
	CompatibilityInfo v21 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v18,v19);
	CompatibilityInfo v17 = v21;
	boolean v23 = v17.alwaysSupportsScreen();
	boolean v24 = v17.neverSupportsScreen();
	int v26 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
	boolean v25 = phiInstruction;
	int v16 = v25;
	return v16;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFrontActivityScreenCompatMode()I","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @11 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 7 @17 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
goto (from iindex= 10 to iindex = 2),
11 = phi  10,8,
conditional branch(ne, to iindex=-1) 11,8,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
15 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 11,
16 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 15,
18 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 14,16 @37 exception:17,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo; > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @0 exception:3,
5 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
6 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 2,
8 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getCompatScale(Ljava/lang/String;I)F > 1,5,6 @8 exception:7,
9 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfiguration()Landroid/content/res/Configuration; > 9 @14 exception:10,
12 = new <Application,Landroid/content/res/CompatibilityInfo>@18,
13 = getfield < Application, Landroid/content/res/Configuration, screenLayout, <Primordial,I> > 11,
14 = getfield < Application, Landroid/content/res/Configuration, smallestScreenWidthDp, <Primordial,I> > 11,
invokespecial < Application, Landroid/content/res/CompatibilityInfo, <init>(Landroid/content/pm/ApplicationInfo;IIZF)V > 12,2,13,14,4,8 @26 exception:15,
return 12,
6 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, alwaysSupportsScreen()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, neverSupportsScreen()Z > 4 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @20 exception:10,
3 = getfield < Application, Landroid/content/pm/ApplicationInfo, packageName, <Application,Ljava/lang/String> > 2,
5 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,3 @2 exception:4,
7 = binaryop(and) 5 , 6,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,8,
return 10,
return 11,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @42 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 18,","depth : 0
public int getFrontActivityScreenCompatMode(){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getFrontActivityScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	Task v3 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v4 = v3.topRunningActivity();
	int v5 = this.mCompatModePackages.computeCompatModeLocked(ActivityInfo.applicationInfo);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v5;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public ActivityRecord topRunningActivity(boolean p1){
	ActivityRecord v1 = p0.topRunningActivity(p1, 1);
	return v1;
}
-----
depth : 1
public int computeCompatModeLocked(ApplicationInfo p1){
	CompatibilityInfo v1 = p0.compatibilityInfoForPackageLocked(p1);
	boolean v2 = v1.alwaysSupportsScreen();
	boolean v3 = v1.neverSupportsScreen();
	boolean v4 = p0.getPackageCompatModeEnabledLocked(p1);
	return v4;
}
-----
depth : 2
public CompatibilityInfo compatibilityInfoForPackageLocked(ApplicationInfo p1){
	boolean v1 = p0.getPackageCompatModeEnabledLocked(p1);
	float v2 = p0.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
	Configuration v3 = this.mService.getGlobalConfiguration();
	CompatibilityInfo v3 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v1,v2);
	return v3;
}
-----
depth : 2
public boolean getPackageCompatModeEnabledLocked(ApplicationInfo p1){
	int v1 = p0.getPackageFlags(ApplicationInfo.packageName);
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public int getFrontActivityScreenCompatMode(){
	int v9 = RootWindowContainer.getChildCount();
	WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction);
	Task v11 = v10.getFocusedRootTask();
	Task v8 = v11;
	Task v7 = v8;
	ActivityRecord v14 = TaskFragment.topRunningActivity(0, 1);
	ActivityRecord v13 = v14;
	ActivityRecord v12 = v13;
	boolean v17 = CompatModePackages.getPackageCompatModeEnabledLocked(p1);
	float v18 = CompatModePackages.getCompatScale(ApplicationInfo.packageName, ApplicationInfo.uid);
	Configuration v19 = this.mService.getGlobalConfiguration();
	CompatibilityInfo v20 = new CompatibilityInfo(p1,Configuration.screenLayout,Configuration.smallestScreenWidthDp,v17,v18);
	CompatibilityInfo v16 = v20;
	boolean v22 = v16.alwaysSupportsScreen();
	boolean v23 = v16.neverSupportsScreen();
	int v25 = CompatModePackages.getPackageFlags(ApplicationInfo.packageName);
	boolean v24 = phiInstruction;
	int v15 = v24;
	WindowManagerThreadPriorityBooster.reset();
	return v15;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","resizeTask(ILandroid/graphics/Rect;I)Z","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
16 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getWindowConfiguration()Landroid/app/WindowConfiguration; > 14 @59 exception:15,
18 = invokevirtual < Application, Landroid/app/WindowConfiguration, canResizeTask()Z > 16 @63 exception:17,
conditional branch(ne, to iindex=-1) 18,12,
28 = new <Application,Ljava/lang/StringBuilder>@71,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 28 @73 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 28,30 @78 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 28,14 @81 exception:33,
36 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 28 @84 exception:35,
38 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 27,36 @88 exception:37,
monitorexit 9,
goto (from iindex= 42 to iindex = -40),
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @52 exception:76,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @55 exception:77,
return 12,","depth : 0
public boolean resizeTask(int p1, Rect p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""resizeTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	WindowConfiguration v5 = v4.getWindowConfiguration();
	boolean v6 = v5.canResizeTask();
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""resizeTask not allowed on task="");
	StringBuilder v9 = v6.append(v4);
	String v10 = v6.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return 0;
}
-----
","public boolean resizeTask(int p1, Rect p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""resizeTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	WindowConfiguration v5 = v4.getWindowConfiguration();
	boolean v6 = v5.canResizeTask();
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","resizeTask(ILandroid/graphics/Rect;I)Z","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @18 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 14,12,
16 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getWindowConfiguration()Landroid/app/WindowConfiguration; > 14 @59 exception:15,
18 = invokevirtual < Application, Landroid/app/WindowConfiguration, canResizeTask()Z > 16 @63 exception:17,
2 = getfield < Application, Landroid/app/WindowConfiguration, mWindowingMode, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
conditional branch(ne, to iindex=-1) 2,4,
goto (from iindex= 5 to iindex = 3),
8 = phi  5,7,
return 8,
conditional branch(ne, to iindex=-1) 18,12,
20 = binaryop(and) 4 , 19,
conditional branch(eq, to iindex=-1) 20,12,
22 = phi  12,21,
24 = invokevirtual < Application, Lcom/android/server/wm/Task, resize(Landroid/graphics/Rect;IZ)Z > 14,3,4,22 @98 exception:23,
5 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, deferWindowLayout()V > 5 @2 exception:6,
8 = binaryop(and) 3 , 7,
conditional branch(eq, to iindex=-1) 8,10,
goto (from iindex= 7 to iindex = 2),
11 = phi  9,10,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @14 exception:12,
conditional branch(ne, to iindex=-1) 13,10,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, canResizeToBounds(Landroid/graphics/Rect;)Z > 1,2 @41 exception:14,
conditional branch(eq, to iindex=-1) 15,10,
38 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @49 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,40 @54 exception:41,
43 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 1,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 38,43 @59 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @62 exception:46,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 48,47 @68 exception:49,
50 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
52 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @73 exception:51,
invokevirtual < Application, Landroid/content/res/Configuration, setTo(Landroid/content/res/Configuration;)V > 50,52 @77 exception:53,
55 = invokevirtual < Application, Lcom/android/server/wm/Task, setBounds(Landroid/graphics/Rect;)I > 1,2 @80 exception:54,
conditional branch(eq, to iindex=-1) 55,10,
56 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
58 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @88 exception:57,
60 = invokevirtual < Application, Landroid/content/res/Configuration, equals(Landroid/content/res/Configuration;)Z > 56,58 @92 exception:59,
61 = binaryop(xor) 60 , 9,
goto (from iindex= 48 to iindex = 2),
63 = phi  61,10,
conditional branch(eq, to iindex=-1) 63,10,
67 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 1 @101 exception:66,
conditional branch(eq, to iindex=-1) 67,10,
69 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, ensureActivityConfiguration(IZ)Z > 67,10,4 @107 exception:68,
70 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZ)V > 70,67,10,4 @113 exception:71,
conditional branch(ne, to iindex=-1) 69,10,
72 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
74 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 72 @120 exception:73,
75 = phi  9,9,69,69,
invokevirtual < Application, Lcom/android/server/wm/Task, resize(ZZ)V > 1,75,11 @123 exception:80,
invokevirtual < Application, Lcom/android/server/wm/Task, saveLaunchingStateIfNeeded()V > 1 @126 exception:81,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 48 @129 exception:82,
goto (from iindex= 64 to iindex = -97),
101 = phi  9,75,9,
107 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, continueWindowLayout()V > 107 @37 exception:108,
return 101,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @103 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @106 exception:26,
return 24,","depth : 0
public boolean resizeTask(int p1, Rect p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""resizeTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	WindowConfiguration v5 = v4.getWindowConfiguration();
	boolean v6 = v5.canResizeTask();
	boolean v7 = v4.resize(p2, p3, phiInstruction);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v7;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public boolean canResizeTask(){
	return phiInstruction;
}
-----
depth : 1
public boolean resize(Rect p1, int p2, boolean p3){
	TaskFragment.mAtmService.deferWindowLayout();
	WindowContainer v2 = p0.getParent();
	boolean v3 = p0.canResizeToBounds(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""resizeTask_"");
	StringBuilder v6 = v3.append(this.mTaskId);
	String v7 = v3.toString();
	Trace.traceBegin(32, v7);
	Configuration v9 = p0.getResolvedOverrideConfiguration();
	this.mTmpConfig.setTo(v9);
	int v11 = p0.setBounds(p1);
	Configuration v12 = p0.getResolvedOverrideConfiguration();
	boolean v13 = this.mTmpConfig.equals(v12);
	ActivityRecord v14 = p0.topRunningActivityLocked();
	boolean v15 = v14.ensureActivityConfiguration(0, p3);
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(v14, 0, p3);
	boolean v17 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	p0.resize(phiInstruction, phiInstruction);
	p0.saveLaunchingStateIfNeeded();
	Trace.traceEnd(32);
	TaskFragment.mAtmService.continueWindowLayout();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean resizeTask(int p1, Rect p2, int p3){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v9 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v8 = v9;
	WindowConfiguration v10 = v8.getWindowConfiguration();
	boolean v11 = phiInstruction;
	TaskFragment.mAtmService.deferWindowLayout();
	WindowContainer v14 = Task.getParent();
	boolean v15 = Task.canResizeToBounds(p2);
	StringBuilder v16 = new StringBuilder();
	StringBuilder v18 = v16.append(""resizeTask_"");
	StringBuilder v19 = v16.append(this.mTaskId);
	String v20 = v16.toString();
	Trace.traceBegin(32, v20);
	Configuration v22 = Task.getResolvedOverrideConfiguration();
	this.mTmpConfig.setTo(v22);
	int v24 = Task.setBounds(p2);
	Configuration v25 = Task.getResolvedOverrideConfiguration();
	boolean v26 = this.mTmpConfig.equals(v25);
	ActivityRecord v27 = Task.topRunningActivityLocked();
	boolean v28 = v27.ensureActivityConfiguration(0, phiInstruction);
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(v27, 0, phiInstruction);
	boolean v30 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	Task.resize(phiInstruction, phiInstruction);
	Task.saveLaunchingStateIfNeeded();
	Trace.traceEnd(32);
	TaskFragment.mAtmService.continueWindowLayout();
	boolean v12 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","resizeTask(ILandroid/graphics/Rect;I)Z","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @18 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 14,12,
16 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getWindowConfiguration()Landroid/app/WindowConfiguration; > 14 @59 exception:15,
18 = invokevirtual < Application, Landroid/app/WindowConfiguration, canResizeTask()Z > 16 @63 exception:17,
2 = getfield < Application, Landroid/app/WindowConfiguration, mWindowingMode, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
conditional branch(ne, to iindex=-1) 2,4,
goto (from iindex= 5 to iindex = 3),
8 = phi  5,7,
return 8,
conditional branch(ne, to iindex=-1) 18,12,
20 = binaryop(and) 4 , 19,
conditional branch(eq, to iindex=-1) 20,12,
22 = phi  12,21,
24 = invokevirtual < Application, Lcom/android/server/wm/Task, resize(Landroid/graphics/Rect;IZ)Z > 14,3,4,22 @98 exception:23,
5 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, deferWindowLayout()V > 5 @2 exception:6,
8 = binaryop(and) 3 , 7,
conditional branch(eq, to iindex=-1) 8,10,
goto (from iindex= 7 to iindex = 2),
11 = phi  9,10,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @14 exception:12,
conditional branch(ne, to iindex=-1) 13,10,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, canResizeToBounds(Landroid/graphics/Rect;)Z > 1,2 @41 exception:14,
conditional branch(eq, to iindex=-1) 15,10,
38 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @49 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,40 @54 exception:41,
43 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 1,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 38,43 @59 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @62 exception:46,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 48,47 @68 exception:49,
50 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
52 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @73 exception:51,
invokevirtual < Application, Landroid/content/res/Configuration, setTo(Landroid/content/res/Configuration;)V > 50,52 @77 exception:53,
55 = invokevirtual < Application, Lcom/android/server/wm/Task, setBounds(Landroid/graphics/Rect;)I > 1,2 @80 exception:54,
conditional branch(eq, to iindex=-1) 55,10,
56 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
58 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @88 exception:57,
60 = invokevirtual < Application, Landroid/content/res/Configuration, equals(Landroid/content/res/Configuration;)Z > 56,58 @92 exception:59,
61 = binaryop(xor) 60 , 9,
goto (from iindex= 48 to iindex = 2),
63 = phi  61,10,
conditional branch(eq, to iindex=-1) 63,10,
67 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 1 @101 exception:66,
conditional branch(eq, to iindex=-1) 67,10,
69 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, ensureActivityConfiguration(IZ)Z > 67,10,4 @107 exception:68,
70 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZ)V > 70,67,10,4 @113 exception:71,
conditional branch(ne, to iindex=-1) 69,10,
72 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
74 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 72 @120 exception:73,
75 = phi  9,9,69,69,
invokevirtual < Application, Lcom/android/server/wm/Task, resize(ZZ)V > 1,75,11 @123 exception:80,
invokevirtual < Application, Lcom/android/server/wm/Task, saveLaunchingStateIfNeeded()V > 1 @126 exception:81,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 48 @129 exception:82,
goto (from iindex= 64 to iindex = -97),
101 = phi  9,75,9,
107 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, continueWindowLayout()V > 107 @37 exception:108,
return 101,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @103 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @106 exception:26,
return 24,","depth : 0
public boolean resizeTask(int p1, Rect p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""resizeTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	WindowConfiguration v5 = v4.getWindowConfiguration();
	boolean v6 = v5.canResizeTask();
	boolean v7 = v4.resize(p2, p3, phiInstruction);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v7;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public boolean canResizeTask(){
	return phiInstruction;
}
-----
depth : 1
public boolean resize(Rect p1, int p2, boolean p3){
	TaskFragment.mAtmService.deferWindowLayout();
	WindowContainer v2 = p0.getParent();
	boolean v3 = p0.canResizeToBounds(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""resizeTask_"");
	StringBuilder v6 = v3.append(this.mTaskId);
	String v7 = v3.toString();
	Trace.traceBegin(32, v7);
	Configuration v9 = p0.getResolvedOverrideConfiguration();
	this.mTmpConfig.setTo(v9);
	int v11 = p0.setBounds(p1);
	Configuration v12 = p0.getResolvedOverrideConfiguration();
	boolean v13 = this.mTmpConfig.equals(v12);
	ActivityRecord v14 = p0.topRunningActivityLocked();
	boolean v15 = v14.ensureActivityConfiguration(0, p3);
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(v14, 0, p3);
	boolean v17 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	p0.resize(phiInstruction, phiInstruction);
	p0.saveLaunchingStateIfNeeded();
	Trace.traceEnd(32);
	TaskFragment.mAtmService.continueWindowLayout();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean resizeTask(int p1, Rect p2, int p3){
	long v3 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v7 = RootWindowContainer.anyTaskForId(p1, 0, 0, 0);
	Task v6 = v7;
	WindowConfiguration v8 = v6.getWindowConfiguration();
	boolean v9 = phiInstruction;
	TaskFragment.mAtmService.deferWindowLayout();
	WindowContainer v12 = Task.getParent();
	boolean v13 = Task.canResizeToBounds(p2);
	StringBuilder v14 = new StringBuilder();
	StringBuilder v16 = v14.append(""resizeTask_"");
	StringBuilder v17 = v14.append(this.mTaskId);
	String v18 = v14.toString();
	Trace.traceBegin(32, v18);
	Configuration v20 = Task.getResolvedOverrideConfiguration();
	this.mTmpConfig.setTo(v20);
	int v22 = Task.setBounds(p2);
	Configuration v23 = Task.getResolvedOverrideConfiguration();
	boolean v24 = this.mTmpConfig.equals(v23);
	ActivityRecord v25 = Task.topRunningActivityLocked();
	boolean v26 = v25.ensureActivityConfiguration(0, phiInstruction);
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(v25, 0, phiInstruction);
	boolean v28 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	Task.resize(phiInstruction, phiInstruction);
	Task.saveLaunchingStateIfNeeded();
	Trace.traceEnd(32);
	TaskFragment.mAtmService.continueWindowLayout();
	boolean v10 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return v10;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","resizeTask(ILandroid/graphics/Rect;I)Z","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @18 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 14,12,
16 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getWindowConfiguration()Landroid/app/WindowConfiguration; > 14 @59 exception:15,
18 = invokevirtual < Application, Landroid/app/WindowConfiguration, canResizeTask()Z > 16 @63 exception:17,
conditional branch(ne, to iindex=-1) 18,12,
20 = binaryop(and) 4 , 19,
conditional branch(eq, to iindex=-1) 20,12,
22 = phi  12,21,
24 = invokevirtual < Application, Lcom/android/server/wm/Task, resize(Landroid/graphics/Rect;IZ)Z > 14,3,4,22 @98 exception:23,
5 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, deferWindowLayout()V > 5 @2 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mWindowPlacerLocked, <Application,Lcom/android/server/wm/WindowSurfacePlacer> > 2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowSurfacePlacer, isLayoutDeferred()Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mLayoutReasons, <Primordial,I> > = 6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
9 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mWindowPlacerLocked, <Application,Lcom/android/server/wm/WindowSurfacePlacer> > 8,
invokevirtual < Application, Lcom/android/server/wm/WindowSurfacePlacer, deferLayout()V > 9 @17 exception:10,
return,
8 = binaryop(and) 3 , 7,
conditional branch(eq, to iindex=-1) 8,10,
goto (from iindex= 7 to iindex = 2),
11 = phi  9,10,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @14 exception:12,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mParent, <Application,Lcom/android/server/wm/WindowContainer> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,10,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, canResizeToBounds(Landroid/graphics/Rect;)Z > 1,2 @41 exception:14,
conditional branch(eq, to iindex=-1) 2,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, inFreeformWindowingMode()Z > 1 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/graphics/Rect, width()I > 2 @10 exception:7,
10 = invokevirtual < Application, Landroid/graphics/Rect, height()I > 2 @14 exception:9,
conditional branch(le, to iindex=-1) 8,10,
goto (from iindex= 13 to iindex = 2),
11 = phi  3,4,
13 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getRequestedOverrideBounds()Landroid/graphics/Rect; > 1 @24 exception:12,
14 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 14,15,
20 = invokevirtual < Application, Landroid/graphics/Rect, isEmpty()Z > 13 @33 exception:19,
conditional branch(ne, to iindex=-1) 20,4,
22 = invokevirtual < Application, Landroid/graphics/Rect, width()I > 13 @39 exception:21,
24 = invokevirtual < Application, Landroid/graphics/Rect, height()I > 13 @43 exception:23,
conditional branch(le, to iindex=-1) 22,24,
goto (from iindex= 29 to iindex = 2),
25 = phi  3,4,
conditional branch(ne, to iindex=-1) 11,25,
goto (from iindex= 32 to iindex = 2),
26 = phi  3,3,4,
return 26,
conditional branch(eq, to iindex=-1) 15,10,
38 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @49 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,40 @54 exception:41,
43 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 1,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 38,43 @59 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @62 exception:46,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 48,47 @68 exception:49,
50 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
52 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @73 exception:51,
2 = getfield < Application, Lcom/android/server/wm/ConfigurationContainer, mResolvedOverrideConfiguration, <Application,Landroid/content/res/Configuration> > 1,
return 2,
invokevirtual < Application, Landroid/content/res/Configuration, setTo(Landroid/content/res/Configuration;)V > 50,52 @77 exception:53,
55 = invokevirtual < Application, Lcom/android/server/wm/Task, setBounds(Landroid/graphics/Rect;)I > 1,2 @80 exception:54,
4 = invokevirtual < Application, Lcom/android/server/wm/Task, isRootTask()Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @16 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @22 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 9 @26 exception:10,
goto (from iindex= 16 to iindex = 2),
12 = phi  11,5,
conditional branch(eq, to iindex=-1) 12,5,
16 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayInfo()Landroid/view/DisplayInfo; > 12 @34 exception:15,
17 = getfield < Application, Landroid/view/DisplayInfo, rotation, <Primordial,I> > 16,
18 = phi  5,17,
22 = invokespecial < Application, Lcom/android/server/wm/ConfigurationContainer, setBounds(Landroid/graphics/Rect;)I > 1,2 @40 exception:21,
putfield 1.< Application, Lcom/android/server/wm/Task, mRotation, <Primordial,I> > = 18,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, updateSurfacePositionNonOrganized()V > 1 @46 exception:23,
return 22,
conditional branch(eq, to iindex=-1) 55,10,
56 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
58 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @88 exception:57,
2 = getfield < Application, Lcom/android/server/wm/ConfigurationContainer, mResolvedOverrideConfiguration, <Application,Landroid/content/res/Configuration> > 1,
return 2,
60 = invokevirtual < Application, Landroid/content/res/Configuration, equals(Landroid/content/res/Configuration;)Z > 56,58 @92 exception:59,
61 = binaryop(xor) 60 , 9,
goto (from iindex= 48 to iindex = 2),
63 = phi  61,10,
conditional branch(eq, to iindex=-1) 63,10,
67 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 1 @101 exception:66,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda6>@8,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6, <init>()V > 5 @10 exception:6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,5 @13 exception:7,
return 8,
conditional branch(eq, to iindex=-1) 67,10,
69 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, ensureActivityConfiguration(IZ)Z > 67,10,4 @107 exception:68,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, ensureActivityConfiguration(IZZ)Z > 1,2,3,4 @1 exception:5,
return 6,
70 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZ)V > 70,67,10,4 @113 exception:71,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZZ)V > 1,2,3,4,5 @1 exception:6,
return,
conditional branch(ne, to iindex=-1) 69,10,
72 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
74 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 72 @120 exception:73,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
75 = phi  9,9,69,69,
invokevirtual < Application, Lcom/android/server/wm/Task, resize(ZZ)V > 1,75,11 @123 exception:80,
5 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getRequestedOverrideBounds()Landroid/graphics/Rect; > 1 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/wm/Task, setBounds(Landroid/graphics/Rect;Z)I > 1,5,3 @4 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 2,8,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 1 @12 exception:9,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, layoutAndAssignWindowLayersIfNeeded()V > 10 @16 exception:11,
return,
invokevirtual < Application, Lcom/android/server/wm/Task, saveLaunchingStateIfNeeded()V > 1 @126 exception:81,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/wm/Task, saveLaunchingStateIfNeeded(Lcom/android/server/wm/DisplayContent;)V > 1,3 @4 exception:4,
return,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 48 @129 exception:82,
goto (from iindex= 64 to iindex = -97),
101 = phi  9,75,9,
107 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, continueWindowLayout()V > 107 @37 exception:108,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mWindowPlacerLocked, <Application,Lcom/android/server/wm/WindowSurfacePlacer> > 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLayoutReasons, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
invokevirtual < Application, Lcom/android/server/wm/WindowSurfacePlacer, continueLayout(Z)V > 3,7 @11 exception:8,
return,
return 101,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @103 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @106 exception:26,
return 24,","depth : 0
public boolean resizeTask(int p1, Rect p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""resizeTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	WindowConfiguration v5 = v4.getWindowConfiguration();
	boolean v6 = v5.canResizeTask();
	boolean v7 = v4.resize(p2, p3, phiInstruction);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v7;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public boolean resize(Rect p1, int p2, boolean p3){
	TaskFragment.mAtmService.deferWindowLayout();
	WindowContainer v2 = p0.getParent();
	boolean v3 = p0.canResizeToBounds(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""resizeTask_"");
	StringBuilder v6 = v3.append(this.mTaskId);
	String v7 = v3.toString();
	Trace.traceBegin(32, v7);
	Configuration v9 = p0.getResolvedOverrideConfiguration();
	this.mTmpConfig.setTo(v9);
	int v11 = p0.setBounds(p1);
	Configuration v12 = p0.getResolvedOverrideConfiguration();
	boolean v13 = this.mTmpConfig.equals(v12);
	ActivityRecord v14 = p0.topRunningActivityLocked();
	boolean v15 = v14.ensureActivityConfiguration(0, p3);
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(v14, 0, p3);
	boolean v17 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	p0.resize(phiInstruction, phiInstruction);
	p0.saveLaunchingStateIfNeeded();
	Trace.traceEnd(32);
	TaskFragment.mAtmService.continueWindowLayout();
	return phiInstruction;
}
-----
depth : 2
public void deferWindowLayout(){
	boolean v1 = WindowManagerService.mWindowPlacerLocked.isLayoutDeferred();
	this.mLayoutReasons = 0;
	WindowManagerService.mWindowPlacerLocked.deferLayout();
	return;
}
-----
depth : 2
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 2
public boolean canResizeToBounds(Rect p1){
	boolean v1 = p0.inFreeformWindowingMode();
	int v2 = p1.width();
	int v3 = p1.height();
	Rect v4 = p0.getRequestedOverrideBounds();
	boolean v5 = v4.isEmpty();
	int v6 = v4.width();
	int v7 = v4.height();
	return phiInstruction;
}
-----
depth : 2
public Configuration getResolvedOverrideConfiguration(){
	return this.mResolvedOverrideConfiguration;
}
-----
depth : 2
public int setBounds(Rect p1){
	boolean v1 = p0.isRootTask();
	Task v2 = p0.getRootTask();
	Task v3 = p0.getRootTask();
	DisplayContent v4 = v3.getDisplayContent();
	DisplayInfo v5 = phiInstruction.getDisplayInfo();
	int v6 = p0.setBounds(p1);
	this.mRotation = phiInstruction;
	p0.updateSurfacePositionNonOrganized();
	return v6;
}
-----
depth : 2
public Configuration getResolvedOverrideConfiguration(){
	return this.mResolvedOverrideConfiguration;
}
-----
depth : 2
public ActivityRecord topRunningActivityLocked(){
	WindowContainer v1 = p0.getParent();
	Task$$ExternalSyntheticLambda6 v1 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v3 = p0.getActivity(v1);
	return v3;
}
-----
depth : 2
public boolean ensureActivityConfiguration(int p1, boolean p2){
	boolean v1 = p0.ensureActivityConfiguration(p1, p2, 0);
	return v1;
}
-----
depth : 2
public void ensureActivitiesVisible(ActivityRecord p1, int p2, boolean p3){
	p0.ensureActivitiesVisible(p1, p2, p3, 1);
	return;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 2
public void resize(boolean p1, boolean p2){
	Rect v1 = p0.getRequestedOverrideBounds();
	int v2 = p0.setBounds(v1, p2);
	DisplayContent v3 = p0.getDisplayContent();
	v3.layoutAndAssignWindowLayersIfNeeded();
	return;
}
-----
depth : 2
public void saveLaunchingStateIfNeeded(){
	DisplayContent v1 = p0.getDisplayContent();
	p0.saveLaunchingStateIfNeeded(v1);
	return;
}
-----
depth : 2
public void continueWindowLayout(){
	WindowManagerService.mWindowPlacerLocked.continueLayout(phiInstruction);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean resizeTask(int p1, Rect p2, int p3){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v13 = PooledLambda.__(Tas.class);
	Integer v14 = Integer.valueOf(p1);
	PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14);
	Task v16 = RootWindowContainer.getTask(v15);
	v15.recycle();
	Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0);
	Task v19 = v16.getRootTask();
	boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v10 = v16;
	Task v9 = v10;
	WindowConfiguration v21 = v9.getWindowConfiguration();
	boolean v22 = v21.canResizeTask();
	boolean v25 = WindowManagerService.mWindowPlacerLocked.isLayoutDeferred();
	this.mLayoutReasons = 0;
	WindowManagerService.mWindowPlacerLocked.deferLayout();
	WindowContainer v27 = this.mParent;
	boolean v29 = Task.inFreeformWindowingMode();
	int v30 = p1.width();
	int v31 = p1.height();
	Rect v32 = Task.getRequestedOverrideBounds();
	boolean v33 = v32.isEmpty();
	int v34 = v32.width();
	int v35 = v32.height();
	boolean v28 = phiInstruction;
	StringBuilder v36 = new StringBuilder();
	StringBuilder v38 = v36.append(""resizeTask_"");
	StringBuilder v39 = v36.append(this.mTaskId);
	String v40 = v36.toString();
	Trace.traceBegin(32, v40);
	Configuration v42 = this.mResolvedOverrideConfiguration;
	this.mTmpConfig.setTo(v42);
	boolean v45 = Task.isRootTask();
	Task v46 = Task.getRootTask();
	Task v47 = Task.getRootTask();
	DisplayContent v48 = v47.getDisplayContent();
	DisplayInfo v49 = phiInstruction.getDisplayInfo();
	int v50 = Task.setBounds(p1);
	this.mRotation = phiInstruction;
	Task.updateSurfacePositionNonOrganized();
	int v44 = v50;
	Configuration v52 = this.mResolvedOverrideConfiguration;
	boolean v53 = this.mTmpConfig.equals(v52);
	WindowContainer v55 = Task.getParent();
	Task$$ExternalSyntheticLambda6 v56 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v58 = Task.getActivity(v56);
	ActivityRecord v54 = v58;
	boolean v60 = ActivityRecord.ensureActivityConfiguration(0, p3, 0);
	boolean v59 = v60;
	RootWindowContainer.ensureActivitiesVisible(v54, 0, p3, 1);
	boolean v64 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v63 = v64;
	Rect v66 = Task.getRequestedOverrideBounds();
	int v67 = Task.setBounds(v66, phiInstruction);
	DisplayContent v68 = Task.getDisplayContent();
	v68.layoutAndAssignWindowLayersIfNeeded();
	DisplayContent v71 = Task.getDisplayContent();
	Task.saveLaunchingStateIfNeeded(v71);
	Trace.traceEnd(32);
	WindowManagerService.mWindowPlacerLocked.continueLayout(phiInstruction);
	boolean v23 = phiInstruction;
	Binder.restoreCallingIdentity(v5);
	return v23;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","resizeTask(ILandroid/graphics/Rect;I)Z","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @18 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 14,12,
16 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getWindowConfiguration()Landroid/app/WindowConfiguration; > 14 @59 exception:15,
18 = invokevirtual < Application, Landroid/app/WindowConfiguration, canResizeTask()Z > 16 @63 exception:17,
conditional branch(ne, to iindex=-1) 18,12,
20 = binaryop(and) 4 , 19,
conditional branch(eq, to iindex=-1) 20,12,
22 = phi  12,21,
24 = invokevirtual < Application, Lcom/android/server/wm/Task, resize(Landroid/graphics/Rect;IZ)Z > 14,3,4,22 @98 exception:23,
5 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, deferWindowLayout()V > 5 @2 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mWindowPlacerLocked, <Application,Lcom/android/server/wm/WindowSurfacePlacer> > 2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowSurfacePlacer, isLayoutDeferred()Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mLayoutReasons, <Primordial,I> > = 6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
9 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mWindowPlacerLocked, <Application,Lcom/android/server/wm/WindowSurfacePlacer> > 8,
invokevirtual < Application, Lcom/android/server/wm/WindowSurfacePlacer, deferLayout()V > 9 @17 exception:10,
return,
8 = binaryop(and) 3 , 7,
conditional branch(eq, to iindex=-1) 8,10,
goto (from iindex= 7 to iindex = 2),
11 = phi  9,10,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @14 exception:12,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mParent, <Application,Lcom/android/server/wm/WindowContainer> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,10,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, canResizeToBounds(Landroid/graphics/Rect;)Z > 1,2 @41 exception:14,
conditional branch(eq, to iindex=-1) 2,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, inFreeformWindowingMode()Z > 1 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/graphics/Rect, width()I > 2 @10 exception:7,
10 = invokevirtual < Application, Landroid/graphics/Rect, height()I > 2 @14 exception:9,
conditional branch(le, to iindex=-1) 8,10,
goto (from iindex= 13 to iindex = 2),
11 = phi  3,4,
13 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getRequestedOverrideBounds()Landroid/graphics/Rect; > 1 @24 exception:12,
14 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 14,15,
20 = invokevirtual < Application, Landroid/graphics/Rect, isEmpty()Z > 13 @33 exception:19,
conditional branch(ne, to iindex=-1) 20,4,
22 = invokevirtual < Application, Landroid/graphics/Rect, width()I > 13 @39 exception:21,
24 = invokevirtual < Application, Landroid/graphics/Rect, height()I > 13 @43 exception:23,
conditional branch(le, to iindex=-1) 22,24,
goto (from iindex= 29 to iindex = 2),
25 = phi  3,4,
conditional branch(ne, to iindex=-1) 11,25,
goto (from iindex= 32 to iindex = 2),
26 = phi  3,3,4,
return 26,
conditional branch(eq, to iindex=-1) 15,10,
38 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @49 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,40 @54 exception:41,
43 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 1,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 38,43 @59 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @62 exception:46,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 48,47 @68 exception:49,
50 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
52 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @73 exception:51,
2 = getfield < Application, Lcom/android/server/wm/ConfigurationContainer, mResolvedOverrideConfiguration, <Application,Landroid/content/res/Configuration> > 1,
return 2,
invokevirtual < Application, Landroid/content/res/Configuration, setTo(Landroid/content/res/Configuration;)V > 50,52 @77 exception:53,
55 = invokevirtual < Application, Lcom/android/server/wm/Task, setBounds(Landroid/graphics/Rect;)I > 1,2 @80 exception:54,
4 = invokevirtual < Application, Lcom/android/server/wm/Task, isRootTask()Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @16 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @22 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 9 @26 exception:10,
goto (from iindex= 16 to iindex = 2),
12 = phi  11,5,
conditional branch(eq, to iindex=-1) 12,5,
16 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayInfo()Landroid/view/DisplayInfo; > 12 @34 exception:15,
17 = getfield < Application, Landroid/view/DisplayInfo, rotation, <Primordial,I> > 16,
18 = phi  5,17,
22 = invokespecial < Application, Lcom/android/server/wm/ConfigurationContainer, setBounds(Landroid/graphics/Rect;)I > 1,2 @40 exception:21,
putfield 1.< Application, Lcom/android/server/wm/Task, mRotation, <Primordial,I> > = 18,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, updateSurfacePositionNonOrganized()V > 1 @46 exception:23,
return 22,
conditional branch(eq, to iindex=-1) 55,10,
56 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
58 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @88 exception:57,
2 = getfield < Application, Lcom/android/server/wm/ConfigurationContainer, mResolvedOverrideConfiguration, <Application,Landroid/content/res/Configuration> > 1,
return 2,
60 = invokevirtual < Application, Landroid/content/res/Configuration, equals(Landroid/content/res/Configuration;)Z > 56,58 @92 exception:59,
61 = binaryop(xor) 60 , 9,
goto (from iindex= 48 to iindex = 2),
63 = phi  61,10,
conditional branch(eq, to iindex=-1) 63,10,
67 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 1 @101 exception:66,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda6>@8,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6, <init>()V > 5 @10 exception:6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,5 @13 exception:7,
return 8,
conditional branch(eq, to iindex=-1) 67,10,
69 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, ensureActivityConfiguration(IZ)Z > 67,10,4 @107 exception:68,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, ensureActivityConfiguration(IZZ)Z > 1,2,3,4 @1 exception:5,
return 6,
70 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZ)V > 70,67,10,4 @113 exception:71,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZZ)V > 1,2,3,4,5 @1 exception:6,
return,
conditional branch(ne, to iindex=-1) 69,10,
72 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
74 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 72 @120 exception:73,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
75 = phi  9,9,69,69,
invokevirtual < Application, Lcom/android/server/wm/Task, resize(ZZ)V > 1,75,11 @123 exception:80,
5 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getRequestedOverrideBounds()Landroid/graphics/Rect; > 1 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/wm/Task, setBounds(Landroid/graphics/Rect;Z)I > 1,5,3 @4 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 2,8,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 1 @12 exception:9,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, layoutAndAssignWindowLayersIfNeeded()V > 10 @16 exception:11,
return,
invokevirtual < Application, Lcom/android/server/wm/Task, saveLaunchingStateIfNeeded()V > 1 @126 exception:81,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/wm/Task, saveLaunchingStateIfNeeded(Lcom/android/server/wm/DisplayContent;)V > 1,3 @4 exception:4,
return,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 48 @129 exception:82,
goto (from iindex= 64 to iindex = -97),
101 = phi  9,75,9,
107 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, continueWindowLayout()V > 107 @37 exception:108,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mWindowPlacerLocked, <Application,Lcom/android/server/wm/WindowSurfacePlacer> > 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLayoutReasons, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
invokevirtual < Application, Lcom/android/server/wm/WindowSurfacePlacer, continueLayout(Z)V > 3,7 @11 exception:8,
return,
return 101,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @103 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @106 exception:26,
return 24,","depth : 0
public boolean resizeTask(int p1, Rect p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""resizeTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	WindowConfiguration v5 = v4.getWindowConfiguration();
	boolean v6 = v5.canResizeTask();
	boolean v7 = v4.resize(p2, p3, phiInstruction);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v7;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public boolean resize(Rect p1, int p2, boolean p3){
	TaskFragment.mAtmService.deferWindowLayout();
	WindowContainer v2 = p0.getParent();
	boolean v3 = p0.canResizeToBounds(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""resizeTask_"");
	StringBuilder v6 = v3.append(this.mTaskId);
	String v7 = v3.toString();
	Trace.traceBegin(32, v7);
	Configuration v9 = p0.getResolvedOverrideConfiguration();
	this.mTmpConfig.setTo(v9);
	int v11 = p0.setBounds(p1);
	Configuration v12 = p0.getResolvedOverrideConfiguration();
	boolean v13 = this.mTmpConfig.equals(v12);
	ActivityRecord v14 = p0.topRunningActivityLocked();
	boolean v15 = v14.ensureActivityConfiguration(0, p3);
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(v14, 0, p3);
	boolean v17 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	p0.resize(phiInstruction, phiInstruction);
	p0.saveLaunchingStateIfNeeded();
	Trace.traceEnd(32);
	TaskFragment.mAtmService.continueWindowLayout();
	return phiInstruction;
}
-----
depth : 2
public void deferWindowLayout(){
	boolean v1 = WindowManagerService.mWindowPlacerLocked.isLayoutDeferred();
	this.mLayoutReasons = 0;
	WindowManagerService.mWindowPlacerLocked.deferLayout();
	return;
}
-----
depth : 2
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 2
public boolean canResizeToBounds(Rect p1){
	boolean v1 = p0.inFreeformWindowingMode();
	int v2 = p1.width();
	int v3 = p1.height();
	Rect v4 = p0.getRequestedOverrideBounds();
	boolean v5 = v4.isEmpty();
	int v6 = v4.width();
	int v7 = v4.height();
	return phiInstruction;
}
-----
depth : 2
public Configuration getResolvedOverrideConfiguration(){
	return this.mResolvedOverrideConfiguration;
}
-----
depth : 2
public int setBounds(Rect p1){
	boolean v1 = p0.isRootTask();
	Task v2 = p0.getRootTask();
	Task v3 = p0.getRootTask();
	DisplayContent v4 = v3.getDisplayContent();
	DisplayInfo v5 = phiInstruction.getDisplayInfo();
	int v6 = p0.setBounds(p1);
	this.mRotation = phiInstruction;
	p0.updateSurfacePositionNonOrganized();
	return v6;
}
-----
depth : 2
public Configuration getResolvedOverrideConfiguration(){
	return this.mResolvedOverrideConfiguration;
}
-----
depth : 2
public ActivityRecord topRunningActivityLocked(){
	WindowContainer v1 = p0.getParent();
	Task$$ExternalSyntheticLambda6 v1 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v3 = p0.getActivity(v1);
	return v3;
}
-----
depth : 2
public boolean ensureActivityConfiguration(int p1, boolean p2){
	boolean v1 = p0.ensureActivityConfiguration(p1, p2, 0);
	return v1;
}
-----
depth : 2
public void ensureActivitiesVisible(ActivityRecord p1, int p2, boolean p3){
	p0.ensureActivitiesVisible(p1, p2, p3, 1);
	return;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 2
public void resize(boolean p1, boolean p2){
	Rect v1 = p0.getRequestedOverrideBounds();
	int v2 = p0.setBounds(v1, p2);
	DisplayContent v3 = p0.getDisplayContent();
	v3.layoutAndAssignWindowLayersIfNeeded();
	return;
}
-----
depth : 2
public void saveLaunchingStateIfNeeded(){
	DisplayContent v1 = p0.getDisplayContent();
	p0.saveLaunchingStateIfNeeded(v1);
	return;
}
-----
depth : 2
public void continueWindowLayout(){
	WindowManagerService.mWindowPlacerLocked.continueLayout(phiInstruction);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean resizeTask(int p1, Rect p2, int p3){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	AppTransition$$ExternalSyntheticLambda2 v12 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v14 = PooledLambda.__(Tas.class);
	Integer v15 = Integer.valueOf(p1);
	PooledPredicate v16 = PooledLambda.obtainPredicate(v12, v14, v15);
	Task v17 = RootWindowContainer.getTask(v16);
	v16.recycle();
	Task v19 = RootWindowContainer.getOrCreateRootTask(0, 0, v17, 0);
	Task v20 = v17.getRootTask();
	boolean v21 = v17.reparent(v19, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v11 = v17;
	Task v10 = v11;
	WindowConfiguration v22 = v10.getWindowConfiguration();
	boolean v23 = v22.canResizeTask();
	boolean v26 = WindowManagerService.mWindowPlacerLocked.isLayoutDeferred();
	this.mLayoutReasons = 0;
	WindowManagerService.mWindowPlacerLocked.deferLayout();
	WindowContainer v28 = this.mParent;
	boolean v30 = Task.inFreeformWindowingMode();
	int v31 = p1.width();
	int v32 = p1.height();
	Rect v33 = Task.getRequestedOverrideBounds();
	boolean v34 = v33.isEmpty();
	int v35 = v33.width();
	int v36 = v33.height();
	boolean v29 = phiInstruction;
	StringBuilder v37 = new StringBuilder();
	StringBuilder v39 = v37.append(""resizeTask_"");
	StringBuilder v40 = v37.append(this.mTaskId);
	String v41 = v37.toString();
	Trace.traceBegin(32, v41);
	Configuration v43 = this.mResolvedOverrideConfiguration;
	this.mTmpConfig.setTo(v43);
	boolean v46 = Task.isRootTask();
	Task v47 = Task.getRootTask();
	Task v48 = Task.getRootTask();
	DisplayContent v49 = v48.getDisplayContent();
	DisplayInfo v50 = phiInstruction.getDisplayInfo();
	int v51 = Task.setBounds(p1);
	this.mRotation = phiInstruction;
	Task.updateSurfacePositionNonOrganized();
	int v45 = v51;
	Configuration v53 = this.mResolvedOverrideConfiguration;
	boolean v54 = this.mTmpConfig.equals(v53);
	WindowContainer v56 = Task.getParent();
	Task$$ExternalSyntheticLambda6 v57 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v59 = Task.getActivity(v57);
	ActivityRecord v55 = v59;
	boolean v61 = ActivityRecord.ensureActivityConfiguration(0, p3, 0);
	boolean v60 = v61;
	RootWindowContainer.ensureActivitiesVisible(v55, 0, p3, 1);
	boolean v65 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v64 = v65;
	Rect v67 = Task.getRequestedOverrideBounds();
	int v68 = Task.setBounds(v67, phiInstruction);
	DisplayContent v69 = Task.getDisplayContent();
	v69.layoutAndAssignWindowLayersIfNeeded();
	DisplayContent v72 = Task.getDisplayContent();
	Task.saveLaunchingStateIfNeeded(v72);
	Trace.traceEnd(32);
	WindowManagerService.mWindowPlacerLocked.continueLayout(phiInstruction);
	boolean v24 = phiInstruction;
	Binder.restoreCallingIdentity(v5);
	return v24;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","resizeTask(ILandroid/graphics/Rect;I)Z","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @18 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 14,12,
16 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getWindowConfiguration()Landroid/app/WindowConfiguration; > 14 @59 exception:15,
18 = invokevirtual < Application, Landroid/app/WindowConfiguration, canResizeTask()Z > 16 @63 exception:17,
conditional branch(ne, to iindex=-1) 18,12,
20 = binaryop(and) 4 , 19,
conditional branch(eq, to iindex=-1) 20,12,
22 = phi  12,21,
24 = invokevirtual < Application, Lcom/android/server/wm/Task, resize(Landroid/graphics/Rect;IZ)Z > 14,3,4,22 @98 exception:23,
5 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, deferWindowLayout()V > 5 @2 exception:6,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mWindowPlacerLocked, <Application,Lcom/android/server/wm/WindowSurfacePlacer> > 2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowSurfacePlacer, isLayoutDeferred()Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mLayoutReasons, <Primordial,I> > = 6,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
9 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mWindowPlacerLocked, <Application,Lcom/android/server/wm/WindowSurfacePlacer> > 8,
invokevirtual < Application, Lcom/android/server/wm/WindowSurfacePlacer, deferLayout()V > 9 @17 exception:10,
return,
8 = binaryop(and) 3 , 7,
conditional branch(eq, to iindex=-1) 8,10,
goto (from iindex= 7 to iindex = 2),
11 = phi  9,10,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @14 exception:12,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mParent, <Application,Lcom/android/server/wm/WindowContainer> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,10,
15 = invokevirtual < Application, Lcom/android/server/wm/Task, canResizeToBounds(Landroid/graphics/Rect;)Z > 1,2 @41 exception:14,
conditional branch(eq, to iindex=-1) 2,4,
6 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, inFreeformWindowingMode()Z > 1 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/graphics/Rect, width()I > 2 @10 exception:7,
10 = invokevirtual < Application, Landroid/graphics/Rect, height()I > 2 @14 exception:9,
conditional branch(le, to iindex=-1) 8,10,
goto (from iindex= 13 to iindex = 2),
11 = phi  3,4,
13 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getRequestedOverrideBounds()Landroid/graphics/Rect; > 1 @24 exception:12,
14 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 14,15,
20 = invokevirtual < Application, Landroid/graphics/Rect, isEmpty()Z > 13 @33 exception:19,
conditional branch(ne, to iindex=-1) 20,4,
22 = invokevirtual < Application, Landroid/graphics/Rect, width()I > 13 @39 exception:21,
24 = invokevirtual < Application, Landroid/graphics/Rect, height()I > 13 @43 exception:23,
conditional branch(le, to iindex=-1) 22,24,
goto (from iindex= 29 to iindex = 2),
25 = phi  3,4,
conditional branch(ne, to iindex=-1) 11,25,
goto (from iindex= 32 to iindex = 2),
26 = phi  3,3,4,
return 26,
conditional branch(eq, to iindex=-1) 15,10,
38 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @49 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,40 @54 exception:41,
43 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 1,
45 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 38,43 @59 exception:44,
47 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @62 exception:46,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 48,47 @68 exception:49,
50 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
52 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @73 exception:51,
2 = getfield < Application, Lcom/android/server/wm/ConfigurationContainer, mResolvedOverrideConfiguration, <Application,Landroid/content/res/Configuration> > 1,
return 2,
invokevirtual < Application, Landroid/content/res/Configuration, setTo(Landroid/content/res/Configuration;)V > 50,52 @77 exception:53,
55 = invokevirtual < Application, Lcom/android/server/wm/Task, setBounds(Landroid/graphics/Rect;)I > 1,2 @80 exception:54,
4 = invokevirtual < Application, Lcom/android/server/wm/Task, isRootTask()Z > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @16 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @22 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 9 @26 exception:10,
goto (from iindex= 16 to iindex = 2),
12 = phi  11,5,
conditional branch(eq, to iindex=-1) 12,5,
16 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayInfo()Landroid/view/DisplayInfo; > 12 @34 exception:15,
17 = getfield < Application, Landroid/view/DisplayInfo, rotation, <Primordial,I> > 16,
18 = phi  5,17,
22 = invokespecial < Application, Lcom/android/server/wm/ConfigurationContainer, setBounds(Landroid/graphics/Rect;)I > 1,2 @40 exception:21,
putfield 1.< Application, Lcom/android/server/wm/Task, mRotation, <Primordial,I> > = 18,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, updateSurfacePositionNonOrganized()V > 1 @46 exception:23,
return 22,
conditional branch(eq, to iindex=-1) 55,10,
56 = getfield < Application, Lcom/android/server/wm/Task, mTmpConfig, <Application,Landroid/content/res/Configuration> > 1,
58 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getResolvedOverrideConfiguration()Landroid/content/res/Configuration; > 1 @88 exception:57,
2 = getfield < Application, Lcom/android/server/wm/ConfigurationContainer, mResolvedOverrideConfiguration, <Application,Landroid/content/res/Configuration> > 1,
return 2,
60 = invokevirtual < Application, Landroid/content/res/Configuration, equals(Landroid/content/res/Configuration;)Z > 56,58 @92 exception:59,
61 = binaryop(xor) 60 , 9,
goto (from iindex= 48 to iindex = 2),
63 = phi  61,10,
conditional branch(eq, to iindex=-1) 63,10,
67 = invokevirtual < Application, Lcom/android/server/wm/Task, topRunningActivityLocked()Lcom/android/server/wm/ActivityRecord; > 1 @101 exception:66,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda6>@8,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda6, <init>()V > 5 @10 exception:6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;)Lcom/android/server/wm/ActivityRecord; > 1,5 @13 exception:7,
return 8,
conditional branch(eq, to iindex=-1) 67,10,
69 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, ensureActivityConfiguration(IZ)Z > 67,10,4 @107 exception:68,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, ensureActivityConfiguration(IZZ)Z > 1,2,3,4 @1 exception:5,
return 6,
70 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZ)V > 70,67,10,4 @113 exception:71,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZZ)V > 1,2,3,4,5 @1 exception:6,
return,
conditional branch(ne, to iindex=-1) 69,10,
72 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
74 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 72 @120 exception:73,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
75 = phi  9,9,69,69,
invokevirtual < Application, Lcom/android/server/wm/Task, resize(ZZ)V > 1,75,11 @123 exception:80,
5 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getRequestedOverrideBounds()Landroid/graphics/Rect; > 1 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/wm/Task, setBounds(Landroid/graphics/Rect;Z)I > 1,5,3 @4 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 2,8,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 1 @12 exception:9,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, layoutAndAssignWindowLayersIfNeeded()V > 10 @16 exception:11,
return,
invokevirtual < Application, Lcom/android/server/wm/Task, saveLaunchingStateIfNeeded()V > 1 @126 exception:81,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/wm/Task, saveLaunchingStateIfNeeded(Lcom/android/server/wm/DisplayContent;)V > 1,3 @4 exception:4,
return,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 48 @129 exception:82,
goto (from iindex= 64 to iindex = -97),
101 = phi  9,75,9,
107 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, continueWindowLayout()V > 107 @37 exception:108,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mWindowPlacerLocked, <Application,Lcom/android/server/wm/WindowSurfacePlacer> > 2,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLayoutReasons, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
invokevirtual < Application, Lcom/android/server/wm/WindowSurfacePlacer, continueLayout(Z)V > 3,7 @11 exception:8,
return,
return 101,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @103 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @106 exception:26,
return 24,","depth : 0
public boolean resizeTask(int p1, Rect p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""resizeTask()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 0);
	WindowConfiguration v5 = v4.getWindowConfiguration();
	boolean v6 = v5.canResizeTask();
	boolean v7 = v4.resize(p2, p3, phiInstruction);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v7;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public boolean resize(Rect p1, int p2, boolean p3){
	TaskFragment.mAtmService.deferWindowLayout();
	WindowContainer v2 = p0.getParent();
	boolean v3 = p0.canResizeToBounds(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""resizeTask_"");
	StringBuilder v6 = v3.append(this.mTaskId);
	String v7 = v3.toString();
	Trace.traceBegin(32, v7);
	Configuration v9 = p0.getResolvedOverrideConfiguration();
	this.mTmpConfig.setTo(v9);
	int v11 = p0.setBounds(p1);
	Configuration v12 = p0.getResolvedOverrideConfiguration();
	boolean v13 = this.mTmpConfig.equals(v12);
	ActivityRecord v14 = p0.topRunningActivityLocked();
	boolean v15 = v14.ensureActivityConfiguration(0, p3);
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(v14, 0, p3);
	boolean v17 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	p0.resize(phiInstruction, phiInstruction);
	p0.saveLaunchingStateIfNeeded();
	Trace.traceEnd(32);
	TaskFragment.mAtmService.continueWindowLayout();
	return phiInstruction;
}
-----
depth : 2
public void deferWindowLayout(){
	boolean v1 = WindowManagerService.mWindowPlacerLocked.isLayoutDeferred();
	this.mLayoutReasons = 0;
	WindowManagerService.mWindowPlacerLocked.deferLayout();
	return;
}
-----
depth : 2
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 2
public boolean canResizeToBounds(Rect p1){
	boolean v1 = p0.inFreeformWindowingMode();
	int v2 = p1.width();
	int v3 = p1.height();
	Rect v4 = p0.getRequestedOverrideBounds();
	boolean v5 = v4.isEmpty();
	int v6 = v4.width();
	int v7 = v4.height();
	return phiInstruction;
}
-----
depth : 2
public Configuration getResolvedOverrideConfiguration(){
	return this.mResolvedOverrideConfiguration;
}
-----
depth : 2
public int setBounds(Rect p1){
	boolean v1 = p0.isRootTask();
	Task v2 = p0.getRootTask();
	Task v3 = p0.getRootTask();
	DisplayContent v4 = v3.getDisplayContent();
	DisplayInfo v5 = phiInstruction.getDisplayInfo();
	int v6 = p0.setBounds(p1);
	this.mRotation = phiInstruction;
	p0.updateSurfacePositionNonOrganized();
	return v6;
}
-----
depth : 2
public Configuration getResolvedOverrideConfiguration(){
	return this.mResolvedOverrideConfiguration;
}
-----
depth : 2
public ActivityRecord topRunningActivityLocked(){
	WindowContainer v1 = p0.getParent();
	Task$$ExternalSyntheticLambda6 v1 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v3 = p0.getActivity(v1);
	return v3;
}
-----
depth : 2
public boolean ensureActivityConfiguration(int p1, boolean p2){
	boolean v1 = p0.ensureActivityConfiguration(p1, p2, 0);
	return v1;
}
-----
depth : 2
public void ensureActivitiesVisible(ActivityRecord p1, int p2, boolean p3){
	p0.ensureActivitiesVisible(p1, p2, p3, 1);
	return;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 2
public void resize(boolean p1, boolean p2){
	Rect v1 = p0.getRequestedOverrideBounds();
	int v2 = p0.setBounds(v1, p2);
	DisplayContent v3 = p0.getDisplayContent();
	v3.layoutAndAssignWindowLayersIfNeeded();
	return;
}
-----
depth : 2
public void saveLaunchingStateIfNeeded(){
	DisplayContent v1 = p0.getDisplayContent();
	p0.saveLaunchingStateIfNeeded(v1);
	return;
}
-----
depth : 2
public void continueWindowLayout(){
	WindowManagerService.mWindowPlacerLocked.continueLayout(phiInstruction);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public boolean resizeTask(int p1, Rect p2, int p3){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v11 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v13 = PooledLambda.__(Tas.class);
	Integer v14 = Integer.valueOf(p1);
	PooledPredicate v15 = PooledLambda.obtainPredicate(v11, v13, v14);
	Task v16 = RootWindowContainer.getTask(v15);
	v15.recycle();
	Task v18 = RootWindowContainer.getOrCreateRootTask(0, 0, v16, 0);
	Task v19 = v16.getRootTask();
	boolean v20 = v16.reparent(v18, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v10 = v16;
	Task v9 = v10;
	WindowConfiguration v21 = v9.getWindowConfiguration();
	boolean v22 = v21.canResizeTask();
	boolean v25 = WindowManagerService.mWindowPlacerLocked.isLayoutDeferred();
	this.mLayoutReasons = 0;
	WindowManagerService.mWindowPlacerLocked.deferLayout();
	WindowContainer v27 = this.mParent;
	boolean v29 = Task.inFreeformWindowingMode();
	int v30 = p1.width();
	int v31 = p1.height();
	Rect v32 = Task.getRequestedOverrideBounds();
	boolean v33 = v32.isEmpty();
	int v34 = v32.width();
	int v35 = v32.height();
	boolean v28 = phiInstruction;
	StringBuilder v36 = new StringBuilder();
	StringBuilder v38 = v36.append(""resizeTask_"");
	StringBuilder v39 = v36.append(this.mTaskId);
	String v40 = v36.toString();
	Trace.traceBegin(32, v40);
	Configuration v42 = this.mResolvedOverrideConfiguration;
	this.mTmpConfig.setTo(v42);
	boolean v45 = Task.isRootTask();
	Task v46 = Task.getRootTask();
	Task v47 = Task.getRootTask();
	DisplayContent v48 = v47.getDisplayContent();
	DisplayInfo v49 = phiInstruction.getDisplayInfo();
	int v50 = Task.setBounds(p1);
	this.mRotation = phiInstruction;
	Task.updateSurfacePositionNonOrganized();
	int v44 = v50;
	Configuration v52 = this.mResolvedOverrideConfiguration;
	boolean v53 = this.mTmpConfig.equals(v52);
	WindowContainer v55 = Task.getParent();
	Task$$ExternalSyntheticLambda6 v56 = new Task$$ExternalSyntheticLambda6();
	ActivityRecord v58 = Task.getActivity(v56);
	ActivityRecord v54 = v58;
	boolean v60 = ActivityRecord.ensureActivityConfiguration(0, p3, 0);
	boolean v59 = v60;
	RootWindowContainer.ensureActivitiesVisible(v54, 0, p3, 1);
	boolean v64 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v63 = v64;
	Rect v66 = Task.getRequestedOverrideBounds();
	int v67 = Task.setBounds(v66, phiInstruction);
	DisplayContent v68 = Task.getDisplayContent();
	v68.layoutAndAssignWindowLayersIfNeeded();
	DisplayContent v71 = Task.getDisplayContent();
	Task.saveLaunchingStateIfNeeded(v71);
	Trace.traceEnd(32);
	WindowManagerService.mWindowPlacerLocked.continueLayout(phiInstruction);
	boolean v23 = phiInstruction;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v23;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 5 @7 exception:6,
9 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootPinnedTask()Lcom/android/server/wm/Task; > 7 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @17 exception:11,
conditional branch(eq, to iindex=-1) 12,10,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
14 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 14,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @29 exception:16,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, onPictureInPictureStateChanged(Lcom/android/server/wm/ActivityRecord;Landroid/app/PictureInPictureUiState;)V > 15,17,2 @33 exception:18,
return,","depth : 0
public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	ActivityTaskManagerService.enforceTaskPermission(""onPictureInPictureStateChanged"");
	TaskDisplayArea v2 = this.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v3 = v2.getRootPinnedTask();
	ActivityRecord v4 = v3.getTopMostActivity();
	ActivityRecord v5 = v3.getTopMostActivity();
	this.mActivityClientController.onPictureInPictureStateChanged(v5, p1);
	return;
}
-----
","public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	ActivityTaskManagerService.enforceTaskPermission(""onPictureInPictureStateChanged"");
	TaskDisplayArea v2 = this.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v3 = v2.getRootPinnedTask();
	ActivityRecord v4 = v3.getTopMostActivity();
	ActivityRecord v5 = v3.getTopMostActivity();
	this.mActivityClientController.onPictureInPictureStateChanged(v5, p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 5 @7 exception:6,
2 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDefaultDisplay, <Application,Lcom/android/server/wm/DisplayContent> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
9 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootPinnedTask()Lcom/android/server/wm/Task; > 7 @11 exception:8,
2 = getfield < Application, Lcom/android/server/wm/TaskDisplayArea, mRootPinnedTask, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
conditional branch(eq, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @17 exception:11,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 12,10,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
14 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 14,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @29 exception:16,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
return 6,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, onPictureInPictureStateChanged(Lcom/android/server/wm/ActivityRecord;Landroid/app/PictureInPictureUiState;)V > 15,17,2 @33 exception:18,
5 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, inPinnedWindowingMode()Z > 2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 2,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 10 @8 exception:11,
13 = getfield < Application, Lcom/android/server/wm/WindowToken, token, <Application,Landroid/os/IBinder> > 2,
15 = invokestatic < Application, Landroid/app/servertransaction/ClientTransaction, obtain(Landroid/app/IApplicationThread;Landroid/os/IBinder;)Landroid/app/servertransaction/ClientTransaction; > 12,13 @14 exception:14,
17 = invokestatic < Application, Landroid/app/servertransaction/PipStateTransactionItem, obtain(Landroid/app/PictureInPictureUiState;)Landroid/app/servertransaction/PipStateTransactionItem; > 3 @18 exception:16,
invokevirtual < Application, Landroid/app/servertransaction/ClientTransaction, addCallback(Landroid/app/servertransaction/ClientTransactionItem;)V > 15,17 @22 exception:18,
28 = getCaughtException ,
29 = new <Application,Ljava/lang/StringBuilder>@36,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @38 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @43 exception:32,
34 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 2,
36 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 34 @48 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 29,36 @52 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @55 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @61 exception:42,
return,
return,","depth : 0
public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	ActivityTaskManagerService.enforceTaskPermission(""onPictureInPictureStateChanged"");
	TaskDisplayArea v2 = this.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v3 = v2.getRootPinnedTask();
	ActivityRecord v4 = v3.getTopMostActivity();
	ActivityRecord v5 = v3.getTopMostActivity();
	this.mActivityClientController.onPictureInPictureStateChanged(v5, p1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 1
public Task getRootPinnedTask(){
	return this.mRootPinnedTask;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 1
public void onPictureInPictureStateChanged(ActivityRecord p1, PictureInPictureUiState p2){
	boolean v1 = p1.inPinnedWindowingMode();
	IApplicationThread v2 = ActivityRecord.app.getThread();
	ClientTransaction v3 = ClientTransaction.obtain(v2, WindowToken.token);
	PipStateTransactionItem v4 = PipStateTransactionItem.obtain(p2);
	v3.addCallback(v4);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Failed to send pip state transaction item: "");
	ComponentName v8 = ActivityRecord.intent.getComponent();
	StringBuilder v9 = v5.append(v8);
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10, caughtException);
	return;
}
-----
","public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	TaskDisplayArea v6 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	TaskDisplayArea v5 = v6;
	Task v7 = this.mRootPinnedTask;
	WindowContainer$$ExternalSyntheticLambda2 v9 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v11 = WindowContainer.getActivity(v9, 1);
	ActivityRecord v8 = v11;
	WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v15 = WindowContainer.getActivity(v13, 1);
	ActivityRecord v12 = v15;
	boolean v17 = v12.inPinnedWindowingMode();
	IApplicationThread v18 = ActivityRecord.app.getThread();
	ClientTransaction v19 = ClientTransaction.obtain(v18, WindowToken.token);
	PipStateTransactionItem v20 = PipStateTransactionItem.obtain(p1);
	v19.addCallback(v20);
	ComponentName v25 = ActivityRecord.intent.getComponent();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 5 @7 exception:6,
2 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDefaultDisplay, <Application,Lcom/android/server/wm/DisplayContent> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
9 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootPinnedTask()Lcom/android/server/wm/Task; > 7 @11 exception:8,
2 = getfield < Application, Lcom/android/server/wm/TaskDisplayArea, mRootPinnedTask, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
conditional branch(eq, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @17 exception:11,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 12,10,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
14 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 14,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @29 exception:16,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
return 6,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, onPictureInPictureStateChanged(Lcom/android/server/wm/ActivityRecord;Landroid/app/PictureInPictureUiState;)V > 15,17,2 @33 exception:18,
5 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, inPinnedWindowingMode()Z > 2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 2,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 10 @8 exception:11,
13 = getfield < Application, Lcom/android/server/wm/WindowToken, token, <Application,Landroid/os/IBinder> > 2,
15 = invokestatic < Application, Landroid/app/servertransaction/ClientTransaction, obtain(Landroid/app/IApplicationThread;Landroid/os/IBinder;)Landroid/app/servertransaction/ClientTransaction; > 12,13 @14 exception:14,
17 = invokestatic < Application, Landroid/app/servertransaction/PipStateTransactionItem, obtain(Landroid/app/PictureInPictureUiState;)Landroid/app/servertransaction/PipStateTransactionItem; > 3 @18 exception:16,
invokevirtual < Application, Landroid/app/servertransaction/ClientTransaction, addCallback(Landroid/app/servertransaction/ClientTransactionItem;)V > 15,17 @22 exception:18,
28 = getCaughtException ,
29 = new <Application,Ljava/lang/StringBuilder>@36,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @38 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @43 exception:32,
34 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 2,
36 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 34 @48 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 29,36 @52 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @55 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @61 exception:42,
return,
return,","depth : 0
public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	ActivityTaskManagerService.enforceTaskPermission(""onPictureInPictureStateChanged"");
	TaskDisplayArea v2 = this.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v3 = v2.getRootPinnedTask();
	ActivityRecord v4 = v3.getTopMostActivity();
	ActivityRecord v5 = v3.getTopMostActivity();
	this.mActivityClientController.onPictureInPictureStateChanged(v5, p1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 1
public Task getRootPinnedTask(){
	return this.mRootPinnedTask;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 1
public void onPictureInPictureStateChanged(ActivityRecord p1, PictureInPictureUiState p2){
	boolean v1 = p1.inPinnedWindowingMode();
	IApplicationThread v2 = ActivityRecord.app.getThread();
	ClientTransaction v3 = ClientTransaction.obtain(v2, WindowToken.token);
	PipStateTransactionItem v4 = PipStateTransactionItem.obtain(p2);
	v3.addCallback(v4);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Failed to send pip state transaction item: "");
	ComponentName v8 = ActivityRecord.intent.getComponent();
	StringBuilder v9 = v5.append(v8);
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10, caughtException);
	return;
}
-----
","public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	TaskDisplayArea v4 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	TaskDisplayArea v3 = v4;
	Task v5 = this.mRootPinnedTask;
	WindowContainer$$ExternalSyntheticLambda2 v7 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v9 = WindowContainer.getActivity(v7, 1);
	ActivityRecord v6 = v9;
	WindowContainer$$ExternalSyntheticLambda2 v11 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v13 = WindowContainer.getActivity(v11, 1);
	ActivityRecord v10 = v13;
	boolean v15 = v10.inPinnedWindowingMode();
	IApplicationThread v16 = ActivityRecord.app.getThread();
	ClientTransaction v17 = ClientTransaction.obtain(v16, WindowToken.token);
	PipStateTransactionItem v18 = PipStateTransactionItem.obtain(p1);
	v17.addCallback(v18);
	ComponentName v23 = ActivityRecord.intent.getComponent();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 5 @7 exception:6,
2 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDefaultDisplay, <Application,Lcom/android/server/wm/DisplayContent> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDisplayAreaPolicy, <Application,Lcom/android/server/wm/DisplayAreaPolicy> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayAreaPolicy, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
return 4,
9 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootPinnedTask()Lcom/android/server/wm/Task; > 7 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @17 exception:11,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;ZLcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 1,2,3,4 @1 exception:5,
return 6,
return 6,
conditional branch(eq, to iindex=-1) 12,10,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
14 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 14,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @29 exception:16,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;ZLcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 1,2,3,4 @1 exception:5,
return 6,
return 6,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, onPictureInPictureStateChanged(Lcom/android/server/wm/ActivityRecord;Landroid/app/PictureInPictureUiState;)V > 15,17,2 @33 exception:18,
5 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, inPinnedWindowingMode()Z > 2 @0 exception:4,
2 = getfield < Application, Lcom/android/server/wm/ConfigurationContainer, mFullConfiguration, <Application,Landroid/content/res/Configuration> > 1,
3 = getfield < Application, Landroid/content/res/Configuration, windowConfiguration, <Application,Landroid/app/WindowConfiguration> > 2,
5 = invokevirtual < Application, Landroid/app/WindowConfiguration, getWindowingMode()I > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,7,
return 9,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 2,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 10 @8 exception:11,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
13 = getfield < Application, Lcom/android/server/wm/WindowToken, token, <Application,Landroid/os/IBinder> > 2,
15 = invokestatic < Application, Landroid/app/servertransaction/ClientTransaction, obtain(Landroid/app/IApplicationThread;Landroid/os/IBinder;)Landroid/app/servertransaction/ClientTransaction; > 12,13 @14 exception:14,
3 = load_metadata: <Application,Landroid/app/servertransaction/ClientTransaction>, <Primordial,Ljava/lang/Class>,
5 = invokestatic < Application, Landroid/app/servertransaction/ObjectPool, obtain(Ljava/lang/Class;)Landroid/app/servertransaction/ObjectPoolItem; > 3 @2 exception:4,
6 = checkcast <Application,Landroid/app/servertransaction/ClientTransaction>5 <Application,Landroid/app/servertransaction/ClientTransaction>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Landroid/app/servertransaction/ClientTransaction>@10,
invokespecial < Application, Landroid/app/servertransaction/ClientTransaction, <init>()V > 8 @12 exception:9,
10 = phi  6,8,
putfield 10.< Application, Landroid/app/servertransaction/ClientTransaction, mClient, <Application,Landroid/app/IApplicationThread> > = 1,
putfield 10.< Application, Landroid/app/servertransaction/ClientTransaction, mActivityToken, <Application,Landroid/os/IBinder> > = 2,
return 10,
17 = invokestatic < Application, Landroid/app/servertransaction/PipStateTransactionItem, obtain(Landroid/app/PictureInPictureUiState;)Landroid/app/servertransaction/PipStateTransactionItem; > 3 @18 exception:16,
2 = load_metadata: <Application,Landroid/app/servertransaction/PipStateTransactionItem>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Landroid/app/servertransaction/ObjectPool, obtain(Ljava/lang/Class;)Landroid/app/servertransaction/ObjectPoolItem; > 2 @2 exception:3,
5 = checkcast <Application,Landroid/app/servertransaction/PipStateTransactionItem>4 <Application,Landroid/app/servertransaction/PipStateTransactionItem>,
conditional branch(ne, to iindex=-1) 5,6,
7 = new <Application,Landroid/app/servertransaction/PipStateTransactionItem>@10,
invokespecial < Application, Landroid/app/servertransaction/PipStateTransactionItem, <init>()V > 7 @12 exception:8,
9 = phi  5,7,
putfield 9.< Application, Landroid/app/servertransaction/PipStateTransactionItem, mPipState, <Application,Landroid/app/PictureInPictureUiState> > = 1,
return 9,
invokevirtual < Application, Landroid/app/servertransaction/ClientTransaction, addCallback(Landroid/app/servertransaction/ClientTransactionItem;)V > 15,17 @22 exception:18,
3 = getfield < Application, Landroid/app/servertransaction/ClientTransaction, mActivityCallbacks, <Application,Ljava/util/List> > 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Ljava/util/ArrayList>@4,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 5 @6 exception:6,
putfield 1.< Application, Landroid/app/servertransaction/ClientTransaction, mActivityCallbacks, <Application,Ljava/util/List> > = 5,
8 = getfield < Application, Landroid/app/servertransaction/ClientTransaction, mActivityCallbacks, <Application,Ljava/util/List> > 1,
10 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 8,2 @13 exception:9,
return,
28 = getCaughtException ,
29 = new <Application,Ljava/lang/StringBuilder>@36,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @38 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @43 exception:32,
34 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 2,
36 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 34 @48 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 29,36 @52 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @55 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @61 exception:42,
return,
return,","depth : 0
public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	ActivityTaskManagerService.enforceTaskPermission(""onPictureInPictureStateChanged"");
	TaskDisplayArea v2 = this.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v3 = v2.getRootPinnedTask();
	ActivityRecord v4 = v3.getTopMostActivity();
	ActivityRecord v5 = v3.getTopMostActivity();
	this.mActivityClientController.onPictureInPictureStateChanged(v5, p1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 2
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public ActivityRecord getActivity(Predicate p1, boolean p2){
	ActivityRecord v1 = p0.getActivity(p1, p2, 0);
	return v1;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public ActivityRecord getActivity(Predicate p1, boolean p2){
	ActivityRecord v1 = p0.getActivity(p1, p2, 0);
	return v1;
}
-----
depth : 1
public void onPictureInPictureStateChanged(ActivityRecord p1, PictureInPictureUiState p2){
	boolean v1 = p1.inPinnedWindowingMode();
	IApplicationThread v2 = ActivityRecord.app.getThread();
	ClientTransaction v3 = ClientTransaction.obtain(v2, WindowToken.token);
	PipStateTransactionItem v4 = PipStateTransactionItem.obtain(p2);
	v3.addCallback(v4);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Failed to send pip state transaction item: "");
	ComponentName v8 = ActivityRecord.intent.getComponent();
	StringBuilder v9 = v5.append(v8);
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10, caughtException);
	return;
}
-----
depth : 2
public boolean inPinnedWindowingMode(){
	int v1 = Configuration.windowConfiguration.getWindowingMode();
	return phiInstruction;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 2
public ClientTransaction obtain(IApplicationThread p1, IBinder p2){
	ObjectPoolItem v1 = ObjectPool.obtain(ClientTransactio.class);
	ClientTransaction v1 = new ClientTransaction();
	this.mClient = p1;
	this.mActivityToken = p2;
	return phiInstruction;
}
-----
depth : 2
public PipStateTransactionItem obtain(PictureInPictureUiState p1){
	ObjectPoolItem v1 = ObjectPool.obtain(PipStateTransactionIte.class);
	PipStateTransactionItem v1 = new PipStateTransactionItem();
	this.mPipState = p1;
	return phiInstruction;
}
-----
depth : 2
public void addCallback(ClientTransactionItem p1){
	ArrayList v0 = new ArrayList();
	this.mActivityCallbacks = v0;
	boolean v2 = this.mActivityCallbacks.add(p1);
	return;
}
-----
","public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	TaskDisplayArea v7 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	TaskDisplayArea v6 = v7;
	TaskDisplayArea v5 = v6;
	Task v8 = v5.getRootPinnedTask();
	WindowContainer$$ExternalSyntheticLambda2 v10 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v13 = WindowContainer.getActivity(v10, 1, 0);
	ActivityRecord v12 = v13;
	ActivityRecord v9 = v12;
	WindowContainer$$ExternalSyntheticLambda2 v15 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v18 = WindowContainer.getActivity(v15, 1, 0);
	ActivityRecord v17 = v18;
	ActivityRecord v14 = v17;
	int v21 = Configuration.windowConfiguration.getWindowingMode();
	boolean v20 = phiInstruction;
	IApplicationThread v22 = this.mThread;
	ObjectPoolItem v24 = ObjectPool.obtain(ClientTransactio.class);
	ClientTransaction v25 = new ClientTransaction();
	this.mClient = v22;
	this.mActivityToken = WindowToken.token;
	ClientTransaction v23 = phiInstruction;
	ObjectPoolItem v28 = ObjectPool.obtain(PipStateTransactionIte.class);
	PipStateTransactionItem v29 = new PipStateTransactionItem();
	this.mPipState = p2;
	PipStateTransactionItem v27 = phiInstruction;
	ArrayList v32 = new ArrayList();
	this.mActivityCallbacks = v32;
	boolean v34 = this.mActivityCallbacks.add(v27);
	ComponentName v38 = ActivityRecord.intent.getComponent();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 5 @7 exception:6,
2 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDefaultDisplay, <Application,Lcom/android/server/wm/DisplayContent> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDisplayAreaPolicy, <Application,Lcom/android/server/wm/DisplayAreaPolicy> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayAreaPolicy, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
return 4,
9 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootPinnedTask()Lcom/android/server/wm/Task; > 7 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @17 exception:11,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;ZLcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 1,2,3,4 @1 exception:5,
return 6,
return 6,
conditional branch(eq, to iindex=-1) 12,10,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
14 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 14,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @29 exception:16,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;ZLcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 1,2,3,4 @1 exception:5,
return 6,
return 6,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, onPictureInPictureStateChanged(Lcom/android/server/wm/ActivityRecord;Landroid/app/PictureInPictureUiState;)V > 15,17,2 @33 exception:18,
5 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, inPinnedWindowingMode()Z > 2 @0 exception:4,
2 = getfield < Application, Lcom/android/server/wm/ConfigurationContainer, mFullConfiguration, <Application,Landroid/content/res/Configuration> > 1,
3 = getfield < Application, Landroid/content/res/Configuration, windowConfiguration, <Application,Landroid/app/WindowConfiguration> > 2,
5 = invokevirtual < Application, Landroid/app/WindowConfiguration, getWindowingMode()I > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
9 = phi  8,7,
return 9,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 2,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 10 @8 exception:11,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
13 = getfield < Application, Lcom/android/server/wm/WindowToken, token, <Application,Landroid/os/IBinder> > 2,
15 = invokestatic < Application, Landroid/app/servertransaction/ClientTransaction, obtain(Landroid/app/IApplicationThread;Landroid/os/IBinder;)Landroid/app/servertransaction/ClientTransaction; > 12,13 @14 exception:14,
3 = load_metadata: <Application,Landroid/app/servertransaction/ClientTransaction>, <Primordial,Ljava/lang/Class>,
5 = invokestatic < Application, Landroid/app/servertransaction/ObjectPool, obtain(Ljava/lang/Class;)Landroid/app/servertransaction/ObjectPoolItem; > 3 @2 exception:4,
6 = checkcast <Application,Landroid/app/servertransaction/ClientTransaction>5 <Application,Landroid/app/servertransaction/ClientTransaction>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Landroid/app/servertransaction/ClientTransaction>@10,
invokespecial < Application, Landroid/app/servertransaction/ClientTransaction, <init>()V > 8 @12 exception:9,
10 = phi  6,8,
putfield 10.< Application, Landroid/app/servertransaction/ClientTransaction, mClient, <Application,Landroid/app/IApplicationThread> > = 1,
putfield 10.< Application, Landroid/app/servertransaction/ClientTransaction, mActivityToken, <Application,Landroid/os/IBinder> > = 2,
return 10,
17 = invokestatic < Application, Landroid/app/servertransaction/PipStateTransactionItem, obtain(Landroid/app/PictureInPictureUiState;)Landroid/app/servertransaction/PipStateTransactionItem; > 3 @18 exception:16,
2 = load_metadata: <Application,Landroid/app/servertransaction/PipStateTransactionItem>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Landroid/app/servertransaction/ObjectPool, obtain(Ljava/lang/Class;)Landroid/app/servertransaction/ObjectPoolItem; > 2 @2 exception:3,
5 = checkcast <Application,Landroid/app/servertransaction/PipStateTransactionItem>4 <Application,Landroid/app/servertransaction/PipStateTransactionItem>,
conditional branch(ne, to iindex=-1) 5,6,
7 = new <Application,Landroid/app/servertransaction/PipStateTransactionItem>@10,
invokespecial < Application, Landroid/app/servertransaction/PipStateTransactionItem, <init>()V > 7 @12 exception:8,
9 = phi  5,7,
putfield 9.< Application, Landroid/app/servertransaction/PipStateTransactionItem, mPipState, <Application,Landroid/app/PictureInPictureUiState> > = 1,
return 9,
invokevirtual < Application, Landroid/app/servertransaction/ClientTransaction, addCallback(Landroid/app/servertransaction/ClientTransactionItem;)V > 15,17 @22 exception:18,
3 = getfield < Application, Landroid/app/servertransaction/ClientTransaction, mActivityCallbacks, <Application,Ljava/util/List> > 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Ljava/util/ArrayList>@4,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 5 @6 exception:6,
putfield 1.< Application, Landroid/app/servertransaction/ClientTransaction, mActivityCallbacks, <Application,Ljava/util/List> > = 5,
8 = getfield < Application, Landroid/app/servertransaction/ClientTransaction, mActivityCallbacks, <Application,Ljava/util/List> > 1,
10 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 8,2 @13 exception:9,
return,
28 = getCaughtException ,
29 = new <Application,Ljava/lang/StringBuilder>@36,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @38 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @43 exception:32,
34 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 2,
36 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 34 @48 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 29,36 @52 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @55 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @61 exception:42,
return,
return,","depth : 0
public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	ActivityTaskManagerService.enforceTaskPermission(""onPictureInPictureStateChanged"");
	TaskDisplayArea v2 = this.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v3 = v2.getRootPinnedTask();
	ActivityRecord v4 = v3.getTopMostActivity();
	ActivityRecord v5 = v3.getTopMostActivity();
	this.mActivityClientController.onPictureInPictureStateChanged(v5, p1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 2
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public ActivityRecord getActivity(Predicate p1, boolean p2){
	ActivityRecord v1 = p0.getActivity(p1, p2, 0);
	return v1;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public ActivityRecord getActivity(Predicate p1, boolean p2){
	ActivityRecord v1 = p0.getActivity(p1, p2, 0);
	return v1;
}
-----
depth : 1
public void onPictureInPictureStateChanged(ActivityRecord p1, PictureInPictureUiState p2){
	boolean v1 = p1.inPinnedWindowingMode();
	IApplicationThread v2 = ActivityRecord.app.getThread();
	ClientTransaction v3 = ClientTransaction.obtain(v2, WindowToken.token);
	PipStateTransactionItem v4 = PipStateTransactionItem.obtain(p2);
	v3.addCallback(v4);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Failed to send pip state transaction item: "");
	ComponentName v8 = ActivityRecord.intent.getComponent();
	StringBuilder v9 = v5.append(v8);
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10, caughtException);
	return;
}
-----
depth : 2
public boolean inPinnedWindowingMode(){
	int v1 = Configuration.windowConfiguration.getWindowingMode();
	return phiInstruction;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 2
public ClientTransaction obtain(IApplicationThread p1, IBinder p2){
	ObjectPoolItem v1 = ObjectPool.obtain(ClientTransactio.class);
	ClientTransaction v1 = new ClientTransaction();
	this.mClient = p1;
	this.mActivityToken = p2;
	return phiInstruction;
}
-----
depth : 2
public PipStateTransactionItem obtain(PictureInPictureUiState p1){
	ObjectPoolItem v1 = ObjectPool.obtain(PipStateTransactionIte.class);
	PipStateTransactionItem v1 = new PipStateTransactionItem();
	this.mPipState = p1;
	return phiInstruction;
}
-----
depth : 2
public void addCallback(ClientTransactionItem p1){
	ArrayList v0 = new ArrayList();
	this.mActivityCallbacks = v0;
	boolean v2 = this.mActivityCallbacks.add(p1);
	return;
}
-----
","public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	TaskDisplayArea v7 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	TaskDisplayArea v6 = v7;
	TaskDisplayArea v5 = v6;
	Task v8 = v5.getRootPinnedTask();
	WindowContainer$$ExternalSyntheticLambda2 v10 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v13 = WindowContainer.getActivity(v10, 1, 0);
	ActivityRecord v12 = v13;
	ActivityRecord v9 = v12;
	WindowContainer$$ExternalSyntheticLambda2 v15 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v18 = WindowContainer.getActivity(v15, 1, 0);
	ActivityRecord v17 = v18;
	ActivityRecord v14 = v17;
	int v21 = Configuration.windowConfiguration.getWindowingMode();
	boolean v20 = phiInstruction;
	IApplicationThread v22 = this.mThread;
	ObjectPoolItem v24 = ObjectPool.obtain(ClientTransactio.class);
	ClientTransaction v25 = new ClientTransaction();
	this.mClient = v22;
	this.mActivityToken = WindowToken.token;
	ClientTransaction v23 = phiInstruction;
	ObjectPoolItem v28 = ObjectPool.obtain(PipStateTransactionIte.class);
	PipStateTransactionItem v29 = new PipStateTransactionItem();
	this.mPipState = p2;
	PipStateTransactionItem v27 = phiInstruction;
	ArrayList v32 = new ArrayList();
	this.mActivityCallbacks = v32;
	boolean v34 = this.mActivityCallbacks.add(v27);
	ComponentName v38 = ActivityRecord.intent.getComponent();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","onPictureInPictureStateChanged(Landroid/app/PictureInPictureUiState;)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 5 @7 exception:6,
2 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDefaultDisplay, <Application,Lcom/android/server/wm/DisplayContent> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDisplayAreaPolicy, <Application,Lcom/android/server/wm/DisplayAreaPolicy> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayAreaPolicy, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
return 4,
9 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootPinnedTask()Lcom/android/server/wm/Task; > 7 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @17 exception:11,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;ZLcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 1,2,3,4 @1 exception:5,
return 6,
return 6,
conditional branch(eq, to iindex=-1) 12,10,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
14 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 13,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 14,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 9 @29 exception:16,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;ZLcom/android/server/wm/ActivityRecord;)Lcom/android/server/wm/ActivityRecord; > 1,2,3,4 @1 exception:5,
return 6,
return 6,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, onPictureInPictureStateChanged(Lcom/android/server/wm/ActivityRecord;Landroid/app/PictureInPictureUiState;)V > 15,17,2 @33 exception:18,
5 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, inPinnedWindowingMode()Z > 2 @0 exception:4,
2 = getfield < Application, Lcom/android/server/wm/ConfigurationContainer, mFullConfiguration, <Application,Landroid/content/res/Configuration> > 1,
3 = getfield < Application, Landroid/content/res/Configuration, windowConfiguration, <Application,Landroid/app/WindowConfiguration> > 2,
5 = invokevirtual < Application, Landroid/app/WindowConfiguration, getWindowingMode()I > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,7,
return 9,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/wm/ActivityRecord, app, <Application,Lcom/android/server/wm/WindowProcessController> > 2,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 10 @8 exception:11,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
13 = getfield < Application, Lcom/android/server/wm/WindowToken, token, <Application,Landroid/os/IBinder> > 2,
15 = invokestatic < Application, Landroid/app/servertransaction/ClientTransaction, obtain(Landroid/app/IApplicationThread;Landroid/os/IBinder;)Landroid/app/servertransaction/ClientTransaction; > 12,13 @14 exception:14,
3 = load_metadata: <Application,Landroid/app/servertransaction/ClientTransaction>, <Primordial,Ljava/lang/Class>,
5 = invokestatic < Application, Landroid/app/servertransaction/ObjectPool, obtain(Ljava/lang/Class;)Landroid/app/servertransaction/ObjectPoolItem; > 3 @2 exception:4,
6 = checkcast <Application,Landroid/app/servertransaction/ClientTransaction>5 <Application,Landroid/app/servertransaction/ClientTransaction>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Landroid/app/servertransaction/ClientTransaction>@10,
invokespecial < Application, Landroid/app/servertransaction/ClientTransaction, <init>()V > 8 @12 exception:9,
10 = phi  6,8,
putfield 10.< Application, Landroid/app/servertransaction/ClientTransaction, mClient, <Application,Landroid/app/IApplicationThread> > = 1,
putfield 10.< Application, Landroid/app/servertransaction/ClientTransaction, mActivityToken, <Application,Landroid/os/IBinder> > = 2,
return 10,
17 = invokestatic < Application, Landroid/app/servertransaction/PipStateTransactionItem, obtain(Landroid/app/PictureInPictureUiState;)Landroid/app/servertransaction/PipStateTransactionItem; > 3 @18 exception:16,
2 = load_metadata: <Application,Landroid/app/servertransaction/PipStateTransactionItem>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Landroid/app/servertransaction/ObjectPool, obtain(Ljava/lang/Class;)Landroid/app/servertransaction/ObjectPoolItem; > 2 @2 exception:3,
5 = checkcast <Application,Landroid/app/servertransaction/PipStateTransactionItem>4 <Application,Landroid/app/servertransaction/PipStateTransactionItem>,
conditional branch(ne, to iindex=-1) 5,6,
7 = new <Application,Landroid/app/servertransaction/PipStateTransactionItem>@10,
invokespecial < Application, Landroid/app/servertransaction/PipStateTransactionItem, <init>()V > 7 @12 exception:8,
9 = phi  5,7,
putfield 9.< Application, Landroid/app/servertransaction/PipStateTransactionItem, mPipState, <Application,Landroid/app/PictureInPictureUiState> > = 1,
return 9,
invokevirtual < Application, Landroid/app/servertransaction/ClientTransaction, addCallback(Landroid/app/servertransaction/ClientTransactionItem;)V > 15,17 @22 exception:18,
3 = getfield < Application, Landroid/app/servertransaction/ClientTransaction, mActivityCallbacks, <Application,Ljava/util/List> > 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Ljava/util/ArrayList>@4,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 5 @6 exception:6,
putfield 1.< Application, Landroid/app/servertransaction/ClientTransaction, mActivityCallbacks, <Application,Ljava/util/List> > = 5,
8 = getfield < Application, Landroid/app/servertransaction/ClientTransaction, mActivityCallbacks, <Application,Ljava/util/List> > 1,
10 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 8,2 @13 exception:9,
return,
28 = getCaughtException ,
29 = new <Application,Ljava/lang/StringBuilder>@36,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @38 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @43 exception:32,
34 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 2,
36 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 34 @48 exception:35,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 29,36 @52 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @55 exception:39,
43 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 41,40,28 @61 exception:42,
return,
return,","depth : 0
public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	ActivityTaskManagerService.enforceTaskPermission(""onPictureInPictureStateChanged"");
	TaskDisplayArea v2 = this.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v3 = v2.getRootPinnedTask();
	ActivityRecord v4 = v3.getTopMostActivity();
	ActivityRecord v5 = v3.getTopMostActivity();
	this.mActivityClientController.onPictureInPictureStateChanged(v5, p1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 2
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public ActivityRecord getActivity(Predicate p1, boolean p2){
	ActivityRecord v1 = p0.getActivity(p1, p2, 0);
	return v1;
}
-----
depth : 1
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public ActivityRecord getActivity(Predicate p1, boolean p2){
	ActivityRecord v1 = p0.getActivity(p1, p2, 0);
	return v1;
}
-----
depth : 1
public void onPictureInPictureStateChanged(ActivityRecord p1, PictureInPictureUiState p2){
	boolean v1 = p1.inPinnedWindowingMode();
	IApplicationThread v2 = ActivityRecord.app.getThread();
	ClientTransaction v3 = ClientTransaction.obtain(v2, WindowToken.token);
	PipStateTransactionItem v4 = PipStateTransactionItem.obtain(p2);
	v3.addCallback(v4);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Failed to send pip state transaction item: "");
	ComponentName v8 = ActivityRecord.intent.getComponent();
	StringBuilder v9 = v5.append(v8);
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10, caughtException);
	return;
}
-----
depth : 2
public boolean inPinnedWindowingMode(){
	int v1 = Configuration.windowConfiguration.getWindowingMode();
	return phiInstruction;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 2
public ClientTransaction obtain(IApplicationThread p1, IBinder p2){
	ObjectPoolItem v1 = ObjectPool.obtain(ClientTransactio.class);
	ClientTransaction v1 = new ClientTransaction();
	this.mClient = p1;
	this.mActivityToken = p2;
	return phiInstruction;
}
-----
depth : 2
public PipStateTransactionItem obtain(PictureInPictureUiState p1){
	ObjectPoolItem v1 = ObjectPool.obtain(PipStateTransactionIte.class);
	PipStateTransactionItem v1 = new PipStateTransactionItem();
	this.mPipState = p1;
	return phiInstruction;
}
-----
depth : 2
public void addCallback(ClientTransactionItem p1){
	ArrayList v0 = new ArrayList();
	this.mActivityCallbacks = v0;
	boolean v2 = this.mActivityCallbacks.add(p1);
	return;
}
-----
","public void onPictureInPictureStateChanged(PictureInPictureUiState p1){
	TaskDisplayArea v5 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	TaskDisplayArea v4 = v5;
	TaskDisplayArea v3 = v4;
	Task v6 = v3.getRootPinnedTask();
	WindowContainer$$ExternalSyntheticLambda2 v8 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v11 = WindowContainer.getActivity(v8, 1, 0);
	ActivityRecord v10 = v11;
	ActivityRecord v7 = v10;
	WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v16 = WindowContainer.getActivity(v13, 1, 0);
	ActivityRecord v15 = v16;
	ActivityRecord v12 = v15;
	int v19 = Configuration.windowConfiguration.getWindowingMode();
	boolean v18 = phiInstruction;
	IApplicationThread v20 = this.mThread;
	ObjectPoolItem v22 = ObjectPool.obtain(ClientTransactio.class);
	ClientTransaction v23 = new ClientTransaction();
	this.mClient = v20;
	this.mActivityToken = WindowToken.token;
	ClientTransaction v21 = phiInstruction;
	ObjectPoolItem v26 = ObjectPool.obtain(PipStateTransactionIte.class);
	PipStateTransactionItem v27 = new PipStateTransactionItem();
	this.mPipState = p2;
	PipStateTransactionItem v25 = phiInstruction;
	ArrayList v30 = new ArrayList();
	this.mActivityCallbacks = v30;
	boolean v32 = this.mActivityCallbacks.add(v25);
	ComponentName v36 = ActivityRecord.intent.getComponent();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startVoiceActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I","0","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,2 @0 exception:14,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 15,16,17 @9 exception:18,
conditional branch(eq, to iindex=-1) 8,19,
conditional branch(eq, to iindex=-1) 9,19,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,4,5,13,23 @18 exception:24,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @22 exception:26,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 27,6,23 @26 exception:28,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 29,5 @30 exception:30,
33 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 31,2 @34 exception:32,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 33,3 @38 exception:34,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 35,7 @42 exception:36,
39 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setVoiceSession(Landroid/service/voice/IVoiceInteractionSession;)Lcom/android/server/wm/ActivityStarter; > 37,8 @46 exception:38,
41 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setVoiceInteractor(Lcom/android/internal/app/IVoiceInteractor;)Lcom/android/server/wm/ActivityStarter; > 39,9 @50 exception:40,
43 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setStartFlags(I)Lcom/android/server/wm/ActivityStarter; > 41,10 @54 exception:42,
45 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setProfilerInfo(Landroid/app/ProfilerInfo;)Lcom/android/server/wm/ActivityStarter; > 43,11 @58 exception:44,
47 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 45,12 @62 exception:46,
49 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 47,25 @66 exception:48,
52 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setAllowBackgroundActivityStart(Z)Lcom/android/server/wm/ActivityStarter; > 49,50 @71 exception:51,
54 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 52 @75 exception:53,
return 54,","depth : 0
public int startVoiceActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, IVoiceInteractionSession p7, IVoiceInteractor p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v3 = p0.handleIncomingUser(p3, p4, p12, ""startVoiceActivity"");
	ActivityStartController v4 = p0.getActivityStartController();
	ActivityStarter v5 = v4.obtainStarter(p5, ""startVoiceActivity"");
	ActivityStarter v6 = v5.setCallingUid(p4);
	ActivityStarter v7 = v6.setCallingPackage(p1);
	ActivityStarter v8 = v7.setCallingFeatureId(p2);
	ActivityStarter v9 = v8.setResolvedType(p6);
	ActivityStarter v10 = v9.setVoiceSession(p7);
	ActivityStarter v11 = v10.setVoiceInteractor(p8);
	ActivityStarter v12 = v11.setStartFlags(p9);
	ActivityStarter v13 = v12.setProfilerInfo(p10);
	ActivityStarter v14 = v13.setActivityOptions(p11);
	ActivityStarter v15 = v14.setUserId(v3);
	ActivityStarter v16 = v15.setAllowBackgroundActivityStart(1);
	int v17 = v16.execute();
	return v17;
}
-----
","public int startVoiceActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, IVoiceInteractionSession p7, IVoiceInteractor p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v3 = p0.handleIncomingUser(p3, p4, p12, ""startVoiceActivity"");
	ActivityStartController v4 = p0.getActivityStartController();
	ActivityStarter v5 = v4.obtainStarter(p5, ""startVoiceActivity"");
	ActivityStarter v6 = v5.setCallingUid(p4);
	ActivityStarter v7 = v6.setCallingPackage(p1);
	ActivityStarter v8 = v7.setCallingFeatureId(p2);
	ActivityStarter v9 = v8.setResolvedType(p6);
	ActivityStarter v10 = v9.setVoiceSession(p7);
	ActivityStarter v11 = v10.setVoiceInteractor(p8);
	ActivityStarter v12 = v11.setStartFlags(p9);
	ActivityStarter v13 = v12.setProfilerInfo(p10);
	ActivityStarter v14 = v13.setActivityOptions(p11);
	ActivityStarter v15 = v14.setUserId(v3);
	ActivityStarter v16 = v15.setAllowBackgroundActivityStart(1);
	int v17 = v16.execute();
	return v17;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startVoiceActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I","1","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,2 @0 exception:14,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 15,16,17 @9 exception:18,
conditional branch(eq, to iindex=-1) 8,19,
conditional branch(eq, to iindex=-1) 9,19,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,4,5,13,23 @18 exception:24,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @22 exception:26,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 27,6,23 @26 exception:28,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
return 10,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 29,5 @30 exception:30,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingUid, <Primordial,I> > = 2,
return 1,
33 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 31,2 @34 exception:32,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingPackage, <Application,Ljava/lang/String> > = 2,
return 1,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 33,3 @38 exception:34,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingFeatureId, <Application,Ljava/lang/String> > = 2,
return 1,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 35,7 @42 exception:36,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, resolvedType, <Application,Ljava/lang/String> > = 2,
return 1,
39 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setVoiceSession(Landroid/service/voice/IVoiceInteractionSession;)Lcom/android/server/wm/ActivityStarter; > 37,8 @46 exception:38,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, voiceSession, <Application,Landroid/service/voice/IVoiceInteractionSession> > = 2,
return 1,
41 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setVoiceInteractor(Lcom/android/internal/app/IVoiceInteractor;)Lcom/android/server/wm/ActivityStarter; > 39,9 @50 exception:40,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, voiceInteractor, <Application,Lcom/android/internal/app/IVoiceInteractor> > = 2,
return 1,
43 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setStartFlags(I)Lcom/android/server/wm/ActivityStarter; > 41,10 @54 exception:42,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, startFlags, <Primordial,I> > = 2,
return 1,
45 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setProfilerInfo(Landroid/app/ProfilerInfo;)Lcom/android/server/wm/ActivityStarter; > 43,11 @58 exception:44,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, profilerInfo, <Application,Landroid/app/ProfilerInfo> > = 2,
return 1,
47 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 45,12 @62 exception:46,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
return 6,
49 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 47,25 @66 exception:48,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, userId, <Primordial,I> > = 2,
return 1,
52 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setAllowBackgroundActivityStart(Z)Lcom/android/server/wm/ActivityStarter; > 49,50 @71 exception:51,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, allowBackgroundActivityStart, <Primordial,Z> > = 2,
return 1,
54 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 52 @75 exception:53,
return 54,","depth : 0
public int startVoiceActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, IVoiceInteractionSession p7, IVoiceInteractor p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v3 = p0.handleIncomingUser(p3, p4, p12, ""startVoiceActivity"");
	ActivityStartController v4 = p0.getActivityStartController();
	ActivityStarter v5 = v4.obtainStarter(p5, ""startVoiceActivity"");
	ActivityStarter v6 = v5.setCallingUid(p4);
	ActivityStarter v7 = v6.setCallingPackage(p1);
	ActivityStarter v8 = v7.setCallingFeatureId(p2);
	ActivityStarter v9 = v8.setResolvedType(p6);
	ActivityStarter v10 = v9.setVoiceSession(p7);
	ActivityStarter v11 = v10.setVoiceInteractor(p8);
	ActivityStarter v12 = v11.setStartFlags(p9);
	ActivityStarter v13 = v12.setProfilerInfo(p10);
	ActivityStarter v14 = v13.setActivityOptions(p11);
	ActivityStarter v15 = v14.setUserId(v3);
	ActivityStarter v16 = v15.setAllowBackgroundActivityStart(1);
	int v17 = v16.execute();
	return v17;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 1
public ActivityStarter setCallingUid(int p1){
	ActivityStarter$Request.callingUid = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingPackage(String p1){
	ActivityStarter$Request.callingPackage = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingFeatureId(String p1){
	ActivityStarter$Request.callingFeatureId = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setResolvedType(String p1){
	ActivityStarter$Request.resolvedType = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setVoiceSession(IVoiceInteractionSession p1){
	ActivityStarter$Request.voiceSession = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setVoiceInteractor(IVoiceInteractor p1){
	ActivityStarter$Request.voiceInteractor = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setStartFlags(int p1){
	ActivityStarter$Request.startFlags = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setProfilerInfo(ProfilerInfo p1){
	ActivityStarter$Request.profilerInfo = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 1
public ActivityStarter setUserId(int p1){
	ActivityStarter$Request.userId = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setAllowBackgroundActivityStart(boolean p1){
	ActivityStarter$Request.allowBackgroundActivityStart = p1;
	return p0;
}
-----
","public int startVoiceActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, IVoiceInteractionSession p7, IVoiceInteractor p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v4 = this.mAmInternal.handleIncomingUser(p3, p4, p12, 0, 0, ""startVoiceActivity"", 0);
	int v3 = v4;
	ActivityStartController v5 = this.mActivityStartController;
	ActivityStarter v7 = this.mFactory.obtain();
	ActivityStarter v8 = v7.setIntent(p5);
	ActivityStarter v9 = v8.setReason(""startVoiceActivity"");
	ActivityStarter v6 = v9;
	ActivityStarter$Request.callingUid = p4;
	ActivityStarter v10 = ActivityStarter;
	ActivityStarter$Request.callingPackage = p1;
	ActivityStarter v11 = ActivityStarter;
	ActivityStarter$Request.callingFeatureId = p2;
	ActivityStarter v12 = ActivityStarter;
	ActivityStarter$Request.resolvedType = p6;
	ActivityStarter v13 = ActivityStarter;
	ActivityStarter$Request.voiceSession = p7;
	ActivityStarter v14 = ActivityStarter;
	ActivityStarter$Request.voiceInteractor = p8;
	ActivityStarter v15 = ActivityStarter;
	ActivityStarter$Request.startFlags = p9;
	ActivityStarter v16 = ActivityStarter;
	ActivityStarter$Request.profilerInfo = p10;
	ActivityStarter v17 = ActivityStarter;
	SafeActivityOptions v19 = SafeActivityOptions.fromBundle(p11);
	ActivityStarter v20 = ActivityStarter.setActivityOptions(v19);
	ActivityStarter v18 = v20;
	ActivityStarter$Request.userId = v3;
	ActivityStarter v21 = ActivityStarter;
	ActivityStarter$Request.allowBackgroundActivityStart = 1;
	ActivityStarter v22 = ActivityStarter;
	int v23 = v22.execute();
	return v23;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startVoiceActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/service/voice/IVoiceInteractionSession;Lcom/android/internal/app/IVoiceInteractor;ILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I","2","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,2 @0 exception:14,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 15,16,17 @9 exception:18,
conditional branch(eq, to iindex=-1) 8,19,
conditional branch(eq, to iindex=-1) 9,19,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,4,5,13,23 @18 exception:24,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @22 exception:26,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 27,6,23 @26 exception:28,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, intent, <Application,Landroid/content/Intent> > = 2,
return 1,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, reason, <Application,Ljava/lang/String> > = 2,
return 1,
return 10,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 29,5 @30 exception:30,
33 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 31,2 @34 exception:32,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 33,3 @38 exception:34,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 35,7 @42 exception:36,
39 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setVoiceSession(Landroid/service/voice/IVoiceInteractionSession;)Lcom/android/server/wm/ActivityStarter; > 37,8 @46 exception:38,
41 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setVoiceInteractor(Lcom/android/internal/app/IVoiceInteractor;)Lcom/android/server/wm/ActivityStarter; > 39,9 @50 exception:40,
43 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setStartFlags(I)Lcom/android/server/wm/ActivityStarter; > 41,10 @54 exception:42,
45 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setProfilerInfo(Landroid/app/ProfilerInfo;)Lcom/android/server/wm/ActivityStarter; > 43,11 @58 exception:44,
47 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 45,12 @62 exception:46,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, activityOptions, <Application,Lcom/android/server/wm/SafeActivityOptions> > = 2,
return 1,
return 6,
49 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 47,25 @66 exception:48,
52 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setAllowBackgroundActivityStart(Z)Lcom/android/server/wm/ActivityStarter; > 49,50 @71 exception:51,
54 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 52 @75 exception:53,
return 54,","depth : 0
public int startVoiceActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, IVoiceInteractionSession p7, IVoiceInteractor p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v3 = p0.handleIncomingUser(p3, p4, p12, ""startVoiceActivity"");
	ActivityStartController v4 = p0.getActivityStartController();
	ActivityStarter v5 = v4.obtainStarter(p5, ""startVoiceActivity"");
	ActivityStarter v6 = v5.setCallingUid(p4);
	ActivityStarter v7 = v6.setCallingPackage(p1);
	ActivityStarter v8 = v7.setCallingFeatureId(p2);
	ActivityStarter v9 = v8.setResolvedType(p6);
	ActivityStarter v10 = v9.setVoiceSession(p7);
	ActivityStarter v11 = v10.setVoiceInteractor(p8);
	ActivityStarter v12 = v11.setStartFlags(p9);
	ActivityStarter v13 = v12.setProfilerInfo(p10);
	ActivityStarter v14 = v13.setActivityOptions(p11);
	ActivityStarter v15 = v14.setUserId(v3);
	ActivityStarter v16 = v15.setAllowBackgroundActivityStart(1);
	int v17 = v16.execute();
	return v17;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 2
public ActivityStarter setIntent(Intent p1){
	ActivityStarter$Request.intent = p1;
	return p0;
}
-----
depth : 2
public ActivityStarter setReason(String p1){
	ActivityStarter$Request.reason = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 2
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityStarter setActivityOptions(SafeActivityOptions p1){
	ActivityStarter$Request.activityOptions = p1;
	return p0;
}
-----
","public int startVoiceActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, IVoiceInteractionSession p7, IVoiceInteractor p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v4 = this.mAmInternal.handleIncomingUser(p3, p4, p12, 0, 0, ""startVoiceActivity"", 0);
	int v3 = v4;
	ActivityStartController v5 = this.mActivityStartController;
	ActivityStarter v7 = this.mFactory.obtain();
	ActivityStarter$Request.intent = p1;
	ActivityStarter v8 = ActivityStarter;
	ActivityStarter$Request.reason = p2;
	ActivityStarter v9 = ActivityStarter;
	ActivityStarter v6 = v9;
	ActivityStarter v10 = v6.setCallingUid(p4);
	ActivityStarter v11 = v10.setCallingPackage(p1);
	ActivityStarter v12 = v11.setCallingFeatureId(p2);
	ActivityStarter v13 = v12.setResolvedType(p6);
	ActivityStarter v14 = v13.setVoiceSession(p7);
	ActivityStarter v15 = v14.setVoiceInteractor(p8);
	ActivityStarter v16 = v15.setStartFlags(p9);
	ActivityStarter v17 = v16.setProfilerInfo(p10);
	SafeActivityOptions v20 = new SafeActivityOptions(v21);
	ActivityOptions v21 = ActivityOptions.fromBundle(p1);
	SafeActivityOptions v19 = phiInstruction;
	ActivityStarter$Request.activityOptions = v19;
	ActivityStarter v23 = ActivityStarter;
	ActivityStarter v18 = v23;
	ActivityStarter v24 = v18.setUserId(v3);
	ActivityStarter v25 = v24.setAllowBackgroundActivityStart(1);
	int v26 = v25.execute();
	return v26;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","releaseSomeActivities(Landroid/app/IApplicationThread;)V","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @10 exception:7,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, releaseSomeActivities(Ljava/lang/String;)V > 8,9 @16 exception:10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @19 exception:16,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:23,
return,","depth : 0
public void releaseSomeActivities(IApplicationThread p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	WindowProcessController v3 = p0.getProcessController(p1);
	v3.releaseSomeActivities(""low-mem"");
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void releaseSomeActivities(IApplicationThread p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	WindowProcessController v3 = p0.getProcessController(p1);
	v3.releaseSomeActivities(""low-mem"");
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","releaseSomeActivities(Landroid/app/IApplicationThread;)V","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @10 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, releaseSomeActivities(Ljava/lang/String;)V > 8,9 @16 exception:10,
44 = phi  37,3,
45 = phi  43,3,
4 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mActivities, <Application,Ljava/util/ArrayList> > 1,
6 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 4 @5 exception:5,
conditional branch(ge, to iindex=-1) 45,6,
conditional branch(eq, to iindex=-1) 44,3,
46 = new <Application,Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2>@94,
invokespecial < Application, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2, <init>()V > 46 @96 exception:47,
invokevirtual < Application, Ljava/util/ArrayList, sort(Ljava/util/Comparator;)V > 44,46 @99 exception:48,
50 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 44 @102 exception:49,
53 = invokestatic < Application, Ljava/lang/Math, max(II)I > 50,51 @107 exception:52,
62 = phi  60,53,
55 = invokevirtual < Application, Ljava/util/ArrayList, remove(I)Ljava/lang/Object; > 44,3 @111 exception:54,
56 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>55 <Application,Lcom/android/server/wm/ActivityRecord>,
58 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, destroyImmediately(Ljava/lang/String;)Z > 56,2 @117 exception:57,
60 = binaryop(add) 62 , 59,
conditional branch(gt, to iindex=-1) 60,3,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @19 exception:16,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void releaseSomeActivities(IApplicationThread p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	WindowProcessController v3 = p0.getProcessController(p1);
	v3.releaseSomeActivities(""low-mem"");
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 1
public void releaseSomeActivities(String p1){
	int v1 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v1 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v1);
	int v4 = phiInstruction.size();
	int v5 = Math.max(v4, 1);
	Object v6 = phiInstruction.remove(0);
	boolean v7 = v6.destroyImmediately(p1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void releaseSomeActivities(IApplicationThread p1){
	this.sThreadPriorityBooster.boost();
	long v3 = Binder.clearCallingIdentity();
	IBinder v5 = p1.asBinder();
	ArrayMap v6 = this.mProcessNames.getMap();
	int v7 = v6.size();
	Object v8 = v6.valueAt(phiInstruction);
	int v9 = v8.size();
	Object v10 = v8.valueAt(phiInstruction);
	boolean v11 = v10.hasThread();
	IApplicationThread v12 = v10.getThread();
	IBinder v13 = v12.asBinder();
	WindowProcessController v4 = v10;
	int v15 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v16 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v16);
	int v19 = phiInstruction.size();
	int v20 = Math.max(v19, 1);
	Object v21 = phiInstruction.remove(0);
	boolean v22 = v21.destroyImmediately(""low-mem"");
	Binder.restoreCallingIdentity(v3);
	this.sThreadPriorityBooster.reset();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","releaseSomeActivities(Landroid/app/IApplicationThread;)V","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @10 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
return 3,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, releaseSomeActivities(Ljava/lang/String;)V > 8,9 @16 exception:10,
44 = phi  37,3,
45 = phi  43,3,
4 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mActivities, <Application,Ljava/util/ArrayList> > 1,
6 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 4 @5 exception:5,
conditional branch(ge, to iindex=-1) 45,6,
conditional branch(eq, to iindex=-1) 44,3,
46 = new <Application,Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2>@94,
invokespecial < Application, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2, <init>()V > 46 @96 exception:47,
invokevirtual < Application, Ljava/util/ArrayList, sort(Ljava/util/Comparator;)V > 44,46 @99 exception:48,
50 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 44 @102 exception:49,
53 = invokestatic < Application, Ljava/lang/Math, max(II)I > 50,51 @107 exception:52,
62 = phi  60,53,
55 = invokevirtual < Application, Ljava/util/ArrayList, remove(I)Ljava/lang/Object; > 44,3 @111 exception:54,
56 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>55 <Application,Lcom/android/server/wm/ActivityRecord>,
58 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, destroyImmediately(Ljava/lang/String;)Z > 56,2 @117 exception:57,
60 = binaryop(add) 62 , 59,
conditional branch(gt, to iindex=-1) 60,3,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @19 exception:16,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void releaseSomeActivities(IApplicationThread p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	WindowProcessController v3 = p0.getProcessController(p1);
	v3.releaseSomeActivities(""low-mem"");
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	return 0;
}
-----
depth : 1
public void releaseSomeActivities(String p1){
	int v1 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v1 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v1);
	int v4 = phiInstruction.size();
	int v5 = Math.max(v4, 1);
	Object v6 = phiInstruction.remove(0);
	boolean v7 = v6.destroyImmediately(p1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void releaseSomeActivities(IApplicationThread p1){
	this.sThreadPriorityBooster.boost();
	long v3 = Binder.clearCallingIdentity();
	IBinder v5 = p1.asBinder();
	ArrayMap v6 = this.mProcessNames.getMap();
	int v7 = v6.size();
	WindowProcessController v4 = 0;
	int v9 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v10 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v10);
	int v13 = phiInstruction.size();
	int v14 = Math.max(v13, 1);
	Object v15 = phiInstruction.remove(0);
	boolean v16 = v15.destroyImmediately(""low-mem"");
	Binder.restoreCallingIdentity(v3);
	this.sThreadPriorityBooster.reset();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","releaseSomeActivities(Landroid/app/IApplicationThread;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @10 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
2 = getfield < Application, Lcom/android/internal/app/ProcessMap, mMap, <Application,Landroid/util/ArrayMap> > 1,
return 2,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, releaseSomeActivities(Ljava/lang/String;)V > 8,9 @16 exception:10,
44 = phi  37,3,
45 = phi  43,3,
4 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mActivities, <Application,Ljava/util/ArrayList> > 1,
6 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 4 @5 exception:5,
conditional branch(ge, to iindex=-1) 45,6,
conditional branch(eq, to iindex=-1) 44,3,
46 = new <Application,Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2>@94,
invokespecial < Application, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2, <init>()V > 46 @96 exception:47,
invokevirtual < Application, Ljava/util/ArrayList, sort(Ljava/util/Comparator;)V > 44,46 @99 exception:48,
50 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 44 @102 exception:49,
53 = invokestatic < Application, Ljava/lang/Math, max(II)I > 50,51 @107 exception:52,
62 = phi  60,53,
55 = invokevirtual < Application, Ljava/util/ArrayList, remove(I)Ljava/lang/Object; > 44,3 @111 exception:54,
56 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>55 <Application,Lcom/android/server/wm/ActivityRecord>,
58 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, destroyImmediately(Ljava/lang/String;)Z > 56,2 @117 exception:57,
3 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, DESTROYING, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
4 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, DESTROYED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z > 1,3,4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
158 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_STATES_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 158,7,
160 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @17 exception:159,
162 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @21 exception:161,
163 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_STATES, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
166 = new <Application,[Ljava/lang/Object>@31165 ,
arraystore 166[7] = 160,
arraystore 166[8] = 162,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 163,164,7,7,166 @37 exception:167,
return 7,
60 = binaryop(add) 62 , 59,
conditional branch(gt, to iindex=-1) 60,3,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @19 exception:16,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void releaseSomeActivities(IApplicationThread p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	WindowProcessController v3 = p0.getProcessController(p1);
	v3.releaseSomeActivities(""low-mem"");
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 2
public ArrayMap getMap(){
	return this.mMap;
}
-----
depth : 2
public boolean hasThread(){
	return phiInstruction;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 1
public void releaseSomeActivities(String p1){
	int v1 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v1 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v1);
	int v4 = phiInstruction.size();
	int v5 = Math.max(v4, 1);
	Object v6 = phiInstruction.remove(0);
	boolean v7 = v6.destroyImmediately(p1);
	return;
}
-----
depth : 2
public boolean destroyImmediately(String p1){
	boolean v1 = p0.isState(ActivityRecord$State.DESTROYING, ActivityRecord$State.DESTROYED);
	String v2 = String.valueOf(p0);
	String v3 = String.valueOf(p1);
	Object v3 = new Object(2);
	ProtoLogImpl.v(ProtoLogGroup.WM_DEBUG_STATES, -21399771, 0, 0, v3);
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void releaseSomeActivities(IApplicationThread p1){
	long v4 = Binder.clearCallingIdentity();
	IBinder v6 = p1.asBinder();
	ArrayMap v7 = this.mMap;
	int v8 = v7.size();
	Object v9 = v7.valueAt(phiInstruction);
	int v10 = v9.size();
	Object v11 = v9.valueAt(phiInstruction);
	boolean v12 = phiInstruction;
	IApplicationThread v13 = this.mThread;
	IBinder v14 = v13.asBinder();
	WindowProcessController v5 = v11;
	int v16 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v17 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v17);
	int v20 = phiInstruction.size();
	int v21 = Math.max(v20, 1);
	Object v22 = phiInstruction.remove(0);
	boolean v24 = ActivityRecord.isState(ActivityRecord$State.DESTROYING, ActivityRecord$State.DESTROYED);
	String v25 = String.valueOf(ActivityRecord);
	String v26 = String.valueOf(p1);
	Object v27 = new Object(2);
	ProtoLogImpl.v(ProtoLogGroup.WM_DEBUG_STATES, -21399771, 0, 0, v27);
	boolean v23 = 0;
	Binder.restoreCallingIdentity(v4);
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","releaseSomeActivities(Landroid/app/IApplicationThread;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @10 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
2 = getfield < Application, Lcom/android/internal/app/ProcessMap, mMap, <Application,Landroid/util/ArrayMap> > 1,
return 2,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, releaseSomeActivities(Ljava/lang/String;)V > 8,9 @16 exception:10,
44 = phi  37,3,
45 = phi  43,3,
4 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mActivities, <Application,Ljava/util/ArrayList> > 1,
6 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 4 @5 exception:5,
conditional branch(ge, to iindex=-1) 45,6,
conditional branch(eq, to iindex=-1) 44,3,
46 = new <Application,Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2>@94,
invokespecial < Application, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2, <init>()V > 46 @96 exception:47,
invokevirtual < Application, Ljava/util/ArrayList, sort(Ljava/util/Comparator;)V > 44,46 @99 exception:48,
50 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 44 @102 exception:49,
53 = invokestatic < Application, Ljava/lang/Math, max(II)I > 50,51 @107 exception:52,
62 = phi  60,53,
55 = invokevirtual < Application, Ljava/util/ArrayList, remove(I)Ljava/lang/Object; > 44,3 @111 exception:54,
56 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>55 <Application,Lcom/android/server/wm/ActivityRecord>,
58 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, destroyImmediately(Ljava/lang/String;)Z > 56,2 @117 exception:57,
3 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, DESTROYING, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
4 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, DESTROYED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z > 1,3,4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
158 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_STATES_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 158,7,
160 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @17 exception:159,
162 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @21 exception:161,
163 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_STATES, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
166 = new <Application,[Ljava/lang/Object>@31165 ,
arraystore 166[7] = 160,
arraystore 166[8] = 162,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 163,164,7,7,166 @37 exception:167,
return 7,
60 = binaryop(add) 62 , 59,
conditional branch(gt, to iindex=-1) 60,3,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @19 exception:16,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void releaseSomeActivities(IApplicationThread p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	WindowProcessController v3 = p0.getProcessController(p1);
	v3.releaseSomeActivities(""low-mem"");
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 2
public ArrayMap getMap(){
	return this.mMap;
}
-----
depth : 2
public boolean hasThread(){
	return phiInstruction;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 1
public void releaseSomeActivities(String p1){
	int v1 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v1 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v1);
	int v4 = phiInstruction.size();
	int v5 = Math.max(v4, 1);
	Object v6 = phiInstruction.remove(0);
	boolean v7 = v6.destroyImmediately(p1);
	return;
}
-----
depth : 2
public boolean destroyImmediately(String p1){
	boolean v1 = p0.isState(ActivityRecord$State.DESTROYING, ActivityRecord$State.DESTROYED);
	String v2 = String.valueOf(p0);
	String v3 = String.valueOf(p1);
	Object v3 = new Object(2);
	ProtoLogImpl.v(ProtoLogGroup.WM_DEBUG_STATES, -21399771, 0, 0, v3);
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void releaseSomeActivities(IApplicationThread p1){
	WindowManagerThreadPriorityBooster.boost();
	long v5 = Binder.clearCallingIdentity();
	IBinder v7 = p1.asBinder();
	ArrayMap v8 = this.mMap;
	int v9 = v8.size();
	Object v10 = v8.valueAt(phiInstruction);
	int v11 = v10.size();
	Object v12 = v10.valueAt(phiInstruction);
	boolean v13 = phiInstruction;
	IApplicationThread v14 = this.mThread;
	IBinder v15 = v14.asBinder();
	WindowProcessController v6 = v12;
	int v17 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v18 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v18);
	int v21 = phiInstruction.size();
	int v22 = Math.max(v21, 1);
	Object v23 = phiInstruction.remove(0);
	boolean v25 = ActivityRecord.isState(ActivityRecord$State.DESTROYING, ActivityRecord$State.DESTROYED);
	String v26 = String.valueOf(ActivityRecord);
	String v27 = String.valueOf(p1);
	Object v28 = new Object(2);
	ProtoLogImpl.v(ProtoLogGroup.WM_DEBUG_STATES, -21399771, 0, 0, v28);
	boolean v24 = 0;
	Binder.restoreCallingIdentity(v5);
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","releaseSomeActivities(Landroid/app/IApplicationThread;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getProcessController(Landroid/app/IApplicationThread;)Lcom/android/server/wm/WindowProcessController; > 1,2 @10 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
5 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 2 @4 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 1,
8 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 6 @10 exception:7,
2 = getfield < Application, Lcom/android/internal/app/ProcessMap, mMap, <Application,Landroid/util/ArrayMap> > 1,
return 2,
10 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 8 @14 exception:9,
12 = binaryop(add) 10 , 11,
36 = phi  35,12,
conditional branch(lt, to iindex=-1) 36,3,
14 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 8,36 @22 exception:13,
15 = checkcast <Application,Landroid/util/SparseArray>14 <Application,Landroid/util/SparseArray>,
17 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 15 @28 exception:16,
18 = binaryop(add) 17 , 11,
39 = phi  39,36,
32 = phi  31,18,
conditional branch(lt, to iindex=-1) 32,3,
20 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,32 @36 exception:19,
21 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>20 <Application,Lcom/android/server/wm/WindowProcessController>,
23 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, hasThread()Z > 21 @42 exception:22,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 23,3,
25 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, getThread()Landroid/app/IApplicationThread; > 21 @48 exception:24,
2 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mThread, <Application,Landroid/app/IApplicationThread> > 1,
return 2,
27 = invokeinterface < Application, Landroid/app/IApplicationThread, asBinder()Landroid/os/IBinder; > 25 @52 exception:26,
conditional branch(ne, to iindex=-1) 27,5,
return 21,
invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, releaseSomeActivities(Ljava/lang/String;)V > 8,9 @16 exception:10,
44 = phi  37,3,
45 = phi  43,3,
4 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mActivities, <Application,Ljava/util/ArrayList> > 1,
6 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 4 @5 exception:5,
conditional branch(ge, to iindex=-1) 45,6,
conditional branch(eq, to iindex=-1) 44,3,
46 = new <Application,Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2>@94,
invokespecial < Application, Lcom/android/server/wm/WindowProcessController$$ExternalSyntheticLambda2, <init>()V > 46 @96 exception:47,
invokevirtual < Application, Ljava/util/ArrayList, sort(Ljava/util/Comparator;)V > 44,46 @99 exception:48,
50 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 44 @102 exception:49,
53 = invokestatic < Application, Ljava/lang/Math, max(II)I > 50,51 @107 exception:52,
62 = phi  60,53,
55 = invokevirtual < Application, Ljava/util/ArrayList, remove(I)Ljava/lang/Object; > 44,3 @111 exception:54,
56 = checkcast <Application,Lcom/android/server/wm/ActivityRecord>55 <Application,Lcom/android/server/wm/ActivityRecord>,
58 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, destroyImmediately(Ljava/lang/String;)Z > 56,2 @117 exception:57,
3 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, DESTROYING, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
4 = getstatic < Application, Lcom/android/server/wm/ActivityRecord$State, DESTROYED, <Application,Lcom/android/server/wm/ActivityRecord$State> >,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, isState(Lcom/android/server/wm/ActivityRecord$State;Lcom/android/server/wm/ActivityRecord$State;)Z > 1,3,4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
158 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_STATES_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 158,7,
160 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 1 @17 exception:159,
162 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @21 exception:161,
163 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_STATES, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
166 = new <Application,[Ljava/lang/Object>@31165 ,
arraystore 166[7] = 160,
arraystore 166[8] = 162,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, v(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 163,164,7,7,166 @37 exception:167,
return 7,
60 = binaryop(add) 62 , 59,
conditional branch(gt, to iindex=-1) 60,3,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @19 exception:16,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @23 exception:23,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void releaseSomeActivities(IApplicationThread p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	WindowProcessController v3 = p0.getProcessController(p1);
	v3.releaseSomeActivities(""low-mem"");
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public WindowProcessController getProcessController(IApplicationThread p1){
	IBinder v1 = p1.asBinder();
	ArrayMap v2 = this.mProcessNames.getMap();
	int v3 = v2.size();
	Object v4 = v2.valueAt(phiInstruction);
	int v5 = v4.size();
	Object v6 = v4.valueAt(phiInstruction);
	boolean v7 = v6.hasThread();
	IApplicationThread v8 = v6.getThread();
	IBinder v9 = v8.asBinder();
	return v6;
}
-----
depth : 2
public ArrayMap getMap(){
	return this.mMap;
}
-----
depth : 2
public boolean hasThread(){
	return phiInstruction;
}
-----
depth : 2
public IApplicationThread getThread(){
	return this.mThread;
}
-----
depth : 1
public void releaseSomeActivities(String p1){
	int v1 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v1 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v1);
	int v4 = phiInstruction.size();
	int v5 = Math.max(v4, 1);
	Object v6 = phiInstruction.remove(0);
	boolean v7 = v6.destroyImmediately(p1);
	return;
}
-----
depth : 2
public boolean destroyImmediately(String p1){
	boolean v1 = p0.isState(ActivityRecord$State.DESTROYING, ActivityRecord$State.DESTROYED);
	String v2 = String.valueOf(p0);
	String v3 = String.valueOf(p1);
	Object v3 = new Object(2);
	ProtoLogImpl.v(ProtoLogGroup.WM_DEBUG_STATES, -21399771, 0, 0, v3);
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void releaseSomeActivities(IApplicationThread p1){
	long v4 = Binder.clearCallingIdentity();
	IBinder v6 = p1.asBinder();
	ArrayMap v7 = this.mMap;
	int v8 = v7.size();
	Object v9 = v7.valueAt(phiInstruction);
	int v10 = v9.size();
	Object v11 = v9.valueAt(phiInstruction);
	boolean v12 = phiInstruction;
	IApplicationThread v13 = this.mThread;
	IBinder v14 = v13.asBinder();
	WindowProcessController v5 = v11;
	int v16 = this.mActivities.size();
	WindowProcessController$$ExternalSyntheticLambda2 v17 = new WindowProcessController$$ExternalSyntheticLambda2();
	phiInstruction.sort(v17);
	int v20 = phiInstruction.size();
	int v21 = Math.max(v20, 1);
	Object v22 = phiInstruction.remove(0);
	boolean v24 = ActivityRecord.isState(ActivityRecord$State.DESTROYING, ActivityRecord$State.DESTROYED);
	String v25 = String.valueOf(ActivityRecord);
	String v26 = String.valueOf(p1);
	Object v27 = new Object(2);
	ProtoLogImpl.v(ProtoLogGroup.WM_DEBUG_STATES, -21399771, 0, 0, v27);
	boolean v23 = 0;
	Binder.restoreCallingIdentity(v4);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","updateConfiguration(Landroid/content/res/Configuration;)Z","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 2,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfiguration(I)Landroid/content/res/Configuration; > 9,10 @34 exception:11,
13 = phi  2,12,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8>@41,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8, <init>()V > 16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 10 @48 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @52 exception:21,
24 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 15,22 @56 exception:23,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @59 exception:25,
conditional branch(eq, to iindex=-1) 13,10,
invokestatic < Application, Landroid/provider/Settings$System, clearConfiguration(Landroid/content/res/Configuration;)V > 13 @65 exception:27,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/wm/ActivityRecord;ZZIZLcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;)Z > 1,13,10,10,10,29,10,30 @77 exception:31,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult, changes, <Primordial,I> > 33,
conditional branch(eq, to iindex=-1) 34,10,
43 = phi  10,42,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @87 exception:44,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:45,
return 43,","depth : 0
public boolean updateConfiguration(Configuration p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = this.mWindowManager.computeNewConfiguration(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v5 = Integer.valueOf(0);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	long v8 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v10 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
","public boolean updateConfiguration(Configuration p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = this.mWindowManager.computeNewConfiguration(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v4 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v6 = Integer.valueOf(0);
	Message v7 = PooledLambda.obtainMessage(v4, this.mAmInternal, v6);
	boolean v8 = this.mH.sendMessage(v7);
	long v9 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v11 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateConfiguration(Landroid/content/res/Configuration;)Z","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 2,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfiguration(I)Landroid/content/res/Configuration; > 9,10 @34 exception:11,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfigurationLocked(I)Landroid/content/res/Configuration; > 1,2 @6 exception:5,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @11 exception:11,
return 6,
13 = phi  2,12,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8>@41,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8, <init>()V > 16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 10 @48 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @52 exception:21,
24 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 15,22 @56 exception:23,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @59 exception:25,
conditional branch(eq, to iindex=-1) 13,10,
invokestatic < Application, Landroid/provider/Settings$System, clearConfiguration(Landroid/content/res/Configuration;)V > 13 @65 exception:27,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/wm/ActivityRecord;ZZIZLcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;)Z > 1,13,10,10,10,29,10,30 @77 exception:31,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult, changes, <Primordial,I> > 33,
conditional branch(eq, to iindex=-1) 34,10,
43 = phi  10,42,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @87 exception:44,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:45,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 43,","depth : 0
public boolean updateConfiguration(Configuration p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = this.mWindowManager.computeNewConfiguration(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v5 = Integer.valueOf(0);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	long v8 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v10 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Configuration computeNewConfiguration(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v2 = p0.computeNewConfigurationLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean updateConfiguration(Configuration p1){
	this.sThreadPriorityBooster.boost();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v6 = WindowManagerService.computeNewConfigurationLocked(0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Configuration v4 = v6;
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v8 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v10 = Integer.valueOf(0);
	Message v11 = PooledLambda.obtainMessage(v8, this.mAmInternal, v10);
	boolean v12 = this.mH.sendMessage(v11);
	long v13 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v15 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v13);
	this.sThreadPriorityBooster.reset();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateConfiguration(Landroid/content/res/Configuration;)Z","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 2,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfiguration(I)Landroid/content/res/Configuration; > 9,10 @34 exception:11,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfigurationLocked(I)Landroid/content/res/Configuration; > 1,2 @6 exception:5,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @11 exception:11,
return 6,
13 = phi  2,12,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8>@41,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8, <init>()V > 16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 10 @48 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @52 exception:21,
24 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 15,22 @56 exception:23,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @59 exception:25,
conditional branch(eq, to iindex=-1) 13,10,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/wm/ActivityRecord;ZZIZLcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;)Z > 1,13,10,10,10,29,10,30 @77 exception:31,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult, changes, <Primordial,I> > 33,
conditional branch(eq, to iindex=-1) 34,10,
43 = phi  10,42,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @87 exception:44,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:45,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 43,","depth : 0
public boolean updateConfiguration(Configuration p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = this.mWindowManager.computeNewConfiguration(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v5 = Integer.valueOf(0);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	long v8 = Binder.clearCallingIdentity();
	boolean v9 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Configuration computeNewConfiguration(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v2 = p0.computeNewConfigurationLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean updateConfiguration(Configuration p1){
	this.sThreadPriorityBooster.boost();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v6 = WindowManagerService.computeNewConfigurationLocked(0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Configuration v4 = v6;
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v8 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v10 = Integer.valueOf(0);
	Message v11 = PooledLambda.obtainMessage(v8, this.mAmInternal, v10);
	boolean v12 = this.mH.sendMessage(v11);
	long v13 = Binder.clearCallingIdentity();
	boolean v14 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v13);
	this.sThreadPriorityBooster.reset();
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateConfiguration(Landroid/content/res/Configuration;)Z","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 2,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfiguration(I)Landroid/content/res/Configuration; > 9,10 @34 exception:11,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfigurationLocked(I)Landroid/content/res/Configuration; > 1,2 @6 exception:5,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mDisplayReady, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Landroid/content/res/Configuration>@6,
invokespecial < Application, Landroid/content/res/Configuration, <init>()V > 5 @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 7,2 @13 exception:8,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, computeScreenConfiguration(Landroid/content/res/Configuration;)V > 9,5 @17 exception:10,
return 5,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @11 exception:11,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 6,
13 = phi  2,12,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8>@41,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8, <init>()V > 16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 10 @48 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @52 exception:21,
24 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 15,22 @56 exception:23,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @59 exception:25,
conditional branch(eq, to iindex=-1) 13,10,
invokestatic < Application, Landroid/provider/Settings$System, clearConfiguration(Landroid/content/res/Configuration;)V > 13 @65 exception:27,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/wm/ActivityRecord;ZZIZLcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;)Z > 1,13,10,10,10,29,10,30 @77 exception:31,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult, changes, <Primordial,I> > 33,
conditional branch(eq, to iindex=-1) 34,10,
43 = phi  10,42,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @87 exception:44,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:45,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 43,","depth : 0
public boolean updateConfiguration(Configuration p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = this.mWindowManager.computeNewConfiguration(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v5 = Integer.valueOf(0);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	long v8 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v10 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Configuration computeNewConfiguration(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v2 = p0.computeNewConfigurationLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v2;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Configuration computeNewConfigurationLocked(int p1){
	Configuration v0 = new Configuration();
	DisplayContent v2 = this.mRoot.getDisplayContent(p1);
	v2.computeScreenConfiguration(v0);
	return v0;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean updateConfiguration(Configuration p1){
	this.sThreadPriorityBooster.boost();
	Configuration v9 = new Configuration();
	DisplayContent v11 = this.mRoot.getDisplayContent(p1);
	v11.computeScreenConfiguration(v9);
	Configuration v8 = v9;
	this.sThreadPriorityBooster.reset();
	Configuration v5 = v8;
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v15 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v17 = Integer.valueOf(0);
	Message v18 = PooledLambda.obtainMessage(v15, this.mAmInternal, v17);
	boolean v19 = this.mH.sendMessage(v18);
	long v20 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v22 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v20);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateConfiguration(Landroid/content/res/Configuration;)Z","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 2,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfiguration(I)Landroid/content/res/Configuration; > 9,10 @34 exception:11,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfigurationLocked(I)Landroid/content/res/Configuration; > 1,2 @6 exception:5,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mDisplayReady, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Landroid/content/res/Configuration>@6,
invokespecial < Application, Landroid/content/res/Configuration, <init>()V > 5 @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 7,2 @13 exception:8,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, computeScreenConfiguration(Landroid/content/res/Configuration;)V > 9,5 @17 exception:10,
return 5,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @11 exception:11,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 6,
13 = phi  2,12,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8>@41,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8, <init>()V > 16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 10 @48 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @52 exception:21,
24 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 15,22 @56 exception:23,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @59 exception:25,
conditional branch(eq, to iindex=-1) 13,10,
invokestatic < Application, Landroid/provider/Settings$System, clearConfiguration(Landroid/content/res/Configuration;)V > 13 @65 exception:27,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/wm/ActivityRecord;ZZIZLcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;)Z > 1,13,10,10,10,29,10,30 @77 exception:31,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult, changes, <Primordial,I> > 33,
conditional branch(eq, to iindex=-1) 34,10,
43 = phi  10,42,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @87 exception:44,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:45,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 43,","depth : 0
public boolean updateConfiguration(Configuration p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = this.mWindowManager.computeNewConfiguration(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v5 = Integer.valueOf(0);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	long v8 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v10 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Configuration computeNewConfiguration(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v2 = p0.computeNewConfigurationLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v2;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Configuration computeNewConfigurationLocked(int p1){
	Configuration v0 = new Configuration();
	DisplayContent v2 = this.mRoot.getDisplayContent(p1);
	v2.computeScreenConfiguration(v0);
	return v0;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean updateConfiguration(Configuration p1){
	WindowManagerThreadPriorityBooster.boost();
	this.sThreadPriorityBooster.boost();
	Configuration v10 = new Configuration();
	DisplayContent v12 = this.mRoot.getDisplayContent(p1);
	v12.computeScreenConfiguration(v10);
	Configuration v9 = v10;
	this.sThreadPriorityBooster.reset();
	Configuration v6 = v9;
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v16 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v18 = Integer.valueOf(0);
	Message v19 = PooledLambda.obtainMessage(v16, this.mAmInternal, v18);
	boolean v20 = this.mH.sendMessage(v19);
	long v21 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v23 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v21);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","updateConfiguration(Landroid/content/res/Configuration;)Z","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
conditional branch(ne, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 2,10,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfiguration(I)Landroid/content/res/Configuration; > 9,10 @34 exception:11,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, computeNewConfigurationLocked(I)Landroid/content/res/Configuration; > 1,2 @6 exception:5,
3 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mDisplayReady, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Landroid/content/res/Configuration>@6,
invokespecial < Application, Landroid/content/res/Configuration, <init>()V > 5 @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 7,2 @13 exception:8,
invokevirtual < Application, Lcom/android/server/wm/DisplayContent, computeScreenConfiguration(Landroid/content/res/Configuration;)V > 9,5 @17 exception:10,
return 5,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @11 exception:11,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 6,
13 = phi  2,12,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
16 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8>@41,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda8, <init>()V > 16 @43 exception:17,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
20 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 10 @48 exception:19,
22 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Ljava/util/function/BiConsumer;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 16,18,20 @52 exception:21,
24 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 15,22 @56 exception:23,
26 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @59 exception:25,
conditional branch(eq, to iindex=-1) 13,10,
invokestatic < Application, Landroid/provider/Settings$System, clearConfiguration(Landroid/content/res/Configuration;)V > 13 @65 exception:27,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
32 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, updateConfigurationLocked(Landroid/content/res/Configuration;Lcom/android/server/wm/ActivityRecord;ZZIZLcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult;)Z > 1,13,10,10,10,29,10,30 @77 exception:31,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTmpUpdateConfigurationResult, <Application,Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult> > 1,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService$UpdateConfigurationResult, changes, <Primordial,I> > 33,
conditional branch(eq, to iindex=-1) 34,10,
43 = phi  10,42,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 26 @87 exception:44,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:45,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 43,","depth : 0
public boolean updateConfiguration(Configuration p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = this.mWindowManager.computeNewConfiguration(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v5 = Integer.valueOf(0);
	Message v6 = PooledLambda.obtainMessage(v3, this.mAmInternal, v5);
	boolean v7 = this.mH.sendMessage(v6);
	long v8 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v10 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v8);
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Configuration computeNewConfiguration(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v2 = p0.computeNewConfigurationLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v2;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Configuration computeNewConfigurationLocked(int p1){
	Configuration v0 = new Configuration();
	DisplayContent v2 = this.mRoot.getDisplayContent(p1);
	v2.computeScreenConfiguration(v0);
	return v0;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public boolean updateConfiguration(Configuration p1){
	this.sThreadPriorityBooster.boost();
	Configuration v9 = new Configuration();
	DisplayContent v11 = this.mRoot.getDisplayContent(p1);
	v11.computeScreenConfiguration(v9);
	Configuration v8 = v9;
	this.sThreadPriorityBooster.reset();
	Configuration v5 = v8;
	ActivityTaskManagerService$$ExternalSyntheticLambda8 v15 = new ActivityTaskManagerService$$ExternalSyntheticLambda8();
	Integer v17 = Integer.valueOf(0);
	Message v18 = PooledLambda.obtainMessage(v15, this.mAmInternal, v17);
	boolean v19 = this.mH.sendMessage(v18);
	long v20 = Binder.clearCallingIdentity();
	Settings$System.clearConfiguration(phiInstruction);
	boolean v22 = p0.updateConfigurationLocked(phiInstruction, 0, 0, 0, -10000, 0, this.mTmpUpdateConfigurationResult);
	Binder.restoreCallingIdentity(v20);
	WindowManagerThreadPriorityBooster.reset();
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 13 @6 exception:14,
conditional branch(eq, to iindex=-1) 5,15,
17 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 5 @11 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 8 to iindex = 9),
23 = instanceof 3 <Application,Lcom/android/server/am/PendingIntentRecord>,
conditional branch(eq, to iindex=-1) 23,15,
27 = checkcast <Application,Lcom/android/server/am/PendingIntentRecord>3 <Application,Lcom/android/server/am/PendingIntentRecord>,
28 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:29,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @39 exception:30,
conditional branch(eq, to iindex=-1) 31,15,
33 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 31 @45 exception:32,
conditional branch(eq, to iindex=-1) 33,15,
35 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 31 @51 exception:34,
36 = getfield < Application, Lcom/android/server/wm/ActivityRecord, info, <Application,Landroid/content/pm/ActivityInfo> > 35,
37 = getfield < Application, Landroid/content/pm/ActivityInfo, applicationInfo, <Application,Landroid/content/pm/ApplicationInfo> > 36,
38 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 37,
40 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @61 exception:39,
conditional branch(ne, to iindex=-1) 38,40,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 41,
monitorexit 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @71 exception:53,
55 = invokevirtual < Application, Lcom/android/server/am/PendingIntentRecord, sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I > 27,15,5,6,4,15,15,7,8,9,10,11,12 @95 exception:54,
return 55,","depth : 0
public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	this.mAppSwitchesState = 2;
	WindowManagerService.resetPriorityAfterLockedSection();
	int v9 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v9;
}
-----
","public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	this.mAppSwitchesState = 2;
	WindowManagerService.resetPriorityAfterLockedSection();
	int v9 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v9;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 13 @6 exception:14,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
conditional branch(eq, to iindex=-1) 5,15,
17 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 5 @11 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 8 to iindex = 9),
23 = instanceof 3 <Application,Lcom/android/server/am/PendingIntentRecord>,
conditional branch(eq, to iindex=-1) 23,15,
27 = checkcast <Application,Lcom/android/server/am/PendingIntentRecord>3 <Application,Lcom/android/server/am/PendingIntentRecord>,
28 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @39 exception:30,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 31,15,
33 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 31 @45 exception:32,
3 = invokevirtual < Application, Lcom/android/server/wm/Task, isLeafTask()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
7 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 5 @8 exception:6,
9 = binaryop(add) 7 , 8,
19 = phi  18,9,
conditional branch(lt, to iindex=-1) 19,4,
26 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getResumedActivity()Lcom/android/server/wm/ActivityRecord; > 1 @38 exception:25,
27 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
29 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 27 @44 exception:28,
30 = binaryop(add) 29 , 8,
48 = phi  47,30,
49 = phi  43,4,
conditional branch(lt, to iindex=-1) 48,4,
31 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
33 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 31,48 @56 exception:32,
34 = checkcast <Application,Lcom/android/server/wm/WindowContainer>33 <Application,Lcom/android/server/wm/WindowContainer>,
36 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 34 @62 exception:35,
conditional branch(eq, to iindex=-1) 36,4,
40 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 34 @68 exception:39,
42 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 40 @72 exception:41,
goto (from iindex= 40 to iindex = 10),
43 = phi  42,49,49,26,
conditional branch(eq, to iindex=-1) 43,4,
return 43,
conditional branch(eq, to iindex=-1) 33,15,
monitorexit 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @71 exception:53,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
55 = invokevirtual < Application, Lcom/android/server/am/PendingIntentRecord, sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I > 27,15,5,6,4,15,15,7,8,9,10,11,12 @95 exception:54,
conditional branch(eq, to iindex=-1) 3,15,
invokevirtual < Application, Landroid/content/Intent, setDefusable(Z)V > 3,14 @11 exception:16,
conditional branch(eq, to iindex=-1) 13,15,
invokevirtual < Application, Landroid/os/Bundle, setDefusable(Z)V > 13,14 @16 exception:17,
19 = getfield < Application, Lcom/android/server/am/PendingIntentRecord, controller, <Application,Lcom/android/server/am/PendingIntentController> > 1,
20 = getfield < Application, Lcom/android/server/am/PendingIntentController, mLock, <Application,Ljava/lang/Object> > 19,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/am/PendingIntentRecord, canceled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 21,15,
monitorexit 20,
return 22,
return 55,","depth : 0
public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityIntentSender"");
	boolean v2 = p4.hasFileDescriptors();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v5 = v4.getTopResumedActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	int v7 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v7;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public ActivityRecord getTopResumedActivity(){
	boolean v1 = p0.isLeafTask();
	int v2 = WindowContainer.mChildren.size();
	ActivityRecord v3 = p0.getResumedActivity();
	int v4 = WindowContainer.mChildren.size();
	Object v5 = WindowContainer.mChildren.get(phiInstruction);
	TaskFragment v6 = v5.asTaskFragment();
	TaskFragment v7 = v5.asTaskFragment();
	ActivityRecord v8 = v7.getTopResumedActivity();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public int sendInner(int p1, Intent p2, String p3, IBinder p4, IIntentReceiver p5, String p6, IBinder p7, String p8, int p9, int p10, int p11, Bundle p12){
	p2.setDefusable(1);
	p12.setDefusable(1);
	return -96;
}
-----
","public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	boolean v4 = p4.hasFileDescriptors();
	this.sThreadPriorityBooster.boost();
	Task v8 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v7 = v8;
	boolean v10 = Task.isLeafTask();
	int v11 = WindowContainer.mChildren.size();
	ActivityRecord v12 = Task.getResumedActivity();
	int v13 = WindowContainer.mChildren.size();
	Object v14 = WindowContainer.mChildren.get(phiInstruction);
	TaskFragment v15 = v14.asTaskFragment();
	TaskFragment v16 = v14.asTaskFragment();
	ActivityRecord v17 = v16.getTopResumedActivity();
	ActivityRecord v9 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	p4.setDefusable(1);
	p11.setDefusable(1);
	int v20 = -96;
	return v20;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 13 @6 exception:14,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
conditional branch(eq, to iindex=-1) 5,15,
17 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 5 @11 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 8 to iindex = 9),
23 = instanceof 3 <Application,Lcom/android/server/am/PendingIntentRecord>,
conditional branch(eq, to iindex=-1) 23,15,
27 = checkcast <Application,Lcom/android/server/am/PendingIntentRecord>3 <Application,Lcom/android/server/am/PendingIntentRecord>,
28 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @39 exception:30,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 31,15,
monitorexit 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @71 exception:53,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
55 = invokevirtual < Application, Lcom/android/server/am/PendingIntentRecord, sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I > 27,15,5,6,4,15,15,7,8,9,10,11,12 @95 exception:54,
conditional branch(eq, to iindex=-1) 3,15,
invokevirtual < Application, Landroid/content/Intent, setDefusable(Z)V > 3,14 @11 exception:16,
conditional branch(eq, to iindex=-1) 13,15,
invokevirtual < Application, Landroid/os/Bundle, setDefusable(Z)V > 13,14 @16 exception:17,
19 = getfield < Application, Lcom/android/server/am/PendingIntentRecord, controller, <Application,Lcom/android/server/am/PendingIntentController> > 1,
20 = getfield < Application, Lcom/android/server/am/PendingIntentController, mLock, <Application,Ljava/lang/Object> > 19,
monitorenter 20,
21 = getfield < Application, Lcom/android/server/am/PendingIntentRecord, canceled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 21,15,
monitorexit 20,
return 22,
return 55,","depth : 0
public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityIntentSender"");
	boolean v2 = p4.hasFileDescriptors();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	WindowManagerService.resetPriorityAfterLockedSection();
	int v6 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v6;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public int sendInner(int p1, Intent p2, String p3, IBinder p4, IIntentReceiver p5, String p6, IBinder p7, String p8, int p9, int p10, int p11, Bundle p12){
	p2.setDefusable(1);
	p12.setDefusable(1);
	return -96;
}
-----
","public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	boolean v4 = p4.hasFileDescriptors();
	this.sThreadPriorityBooster.boost();
	Task v8 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v7 = v8;
	this.sThreadPriorityBooster.reset();
	p4.setDefusable(1);
	p11.setDefusable(1);
	int v11 = -96;
	return v11;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 13 @6 exception:14,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
conditional branch(eq, to iindex=-1) 5,15,
17 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 5 @11 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 8 to iindex = 9),
23 = instanceof 3 <Application,Lcom/android/server/am/PendingIntentRecord>,
conditional branch(eq, to iindex=-1) 23,15,
27 = checkcast <Application,Lcom/android/server/am/PendingIntentRecord>3 <Application,Lcom/android/server/am/PendingIntentRecord>,
28 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @39 exception:30,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 31,15,
33 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 31 @45 exception:32,
3 = invokevirtual < Application, Lcom/android/server/wm/Task, isLeafTask()Z > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
7 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 5 @8 exception:6,
9 = binaryop(add) 7 , 8,
19 = phi  18,9,
conditional branch(lt, to iindex=-1) 19,4,
26 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getResumedActivity()Lcom/android/server/wm/ActivityRecord; > 1 @38 exception:25,
2 = getfield < Application, Lcom/android/server/wm/TaskFragment, mResumedActivity, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
return 2,
27 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
29 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 27 @44 exception:28,
30 = binaryop(add) 29 , 8,
48 = phi  47,30,
49 = phi  43,4,
conditional branch(lt, to iindex=-1) 48,4,
31 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
33 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 31,48 @56 exception:32,
34 = checkcast <Application,Lcom/android/server/wm/WindowContainer>33 <Application,Lcom/android/server/wm/WindowContainer>,
36 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 34 @62 exception:35,
return 2,
conditional branch(eq, to iindex=-1) 36,4,
40 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 34 @68 exception:39,
return 2,
42 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 40 @72 exception:41,
3 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getResumedActivity()Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @4 exception:4,
7 = binaryop(add) 5 , 6,
23 = phi  22,7,
conditional branch(lt, to iindex=-1) 23,8,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,23 @13 exception:9,
conditional branch(eq, to iindex=-1) 3,8,
conditional branch(ne, to iindex=-1) 10,3,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 10 @26 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 10 @32 exception:15,
18 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 16 @36 exception:17,
19 = phi  14,8,18,
conditional branch(eq, to iindex=-1) 19,8,
return 19,
goto (from iindex= 40 to iindex = 10),
43 = phi  42,49,49,26,
conditional branch(eq, to iindex=-1) 43,4,
return 43,
conditional branch(eq, to iindex=-1) 33,15,
monitorexit 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @71 exception:53,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
55 = invokevirtual < Application, Lcom/android/server/am/PendingIntentRecord, sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I > 27,15,5,6,4,15,15,7,8,9,10,11,12 @95 exception:54,
return 55,","depth : 0
public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityIntentSender"");
	boolean v2 = p4.hasFileDescriptors();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v5 = v4.getTopResumedActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	int v7 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v7;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord getTopResumedActivity(){
	boolean v1 = p0.isLeafTask();
	int v2 = WindowContainer.mChildren.size();
	ActivityRecord v3 = p0.getResumedActivity();
	int v4 = WindowContainer.mChildren.size();
	Object v5 = WindowContainer.mChildren.get(phiInstruction);
	TaskFragment v6 = v5.asTaskFragment();
	TaskFragment v7 = v5.asTaskFragment();
	ActivityRecord v8 = v7.getTopResumedActivity();
	return phiInstruction;
}
-----
depth : 2
public boolean isLeafTask(){
	int v1 = WindowContainer.mChildren.size();
	Object v2 = WindowContainer.mChildren.get(phiInstruction);
	Task v3 = v2.asTask();
	return 0;
}
-----
depth : 2
public ActivityRecord getResumedActivity(){
	return this.mResumedActivity;
}
-----
depth : 2
public TaskFragment asTaskFragment(){
	return 0;
}
-----
depth : 2
public TaskFragment asTaskFragment(){
	return 0;
}
-----
depth : 2
public ActivityRecord getTopResumedActivity(){
	ActivityRecord v1 = p0.getResumedActivity();
	int v2 = p0.getChildCount();
	WindowContainer v3 = p0.getChildAt(phiInstruction);
	TaskFragment v4 = v3.asTaskFragment();
	TaskFragment v5 = v3.asTaskFragment();
	ActivityRecord v6 = v5.getTopResumedActivity();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	boolean v4 = p4.hasFileDescriptors();
	int v10 = RootWindowContainer.getChildCount();
	WindowContainer v11 = RootWindowContainer.getChildAt(phiInstruction);
	Task v12 = v11.getFocusedRootTask();
	Task v9 = v12;
	Task v8 = v9;
	int v15 = WindowContainer.mChildren.size();
	Object v16 = WindowContainer.mChildren.get(phiInstruction);
	Task v17 = v16.asTask();
	boolean v14 = 0;
	int v18 = WindowContainer.mChildren.size();
	ActivityRecord v19 = this.mResumedActivity;
	int v20 = WindowContainer.mChildren.size();
	Object v21 = WindowContainer.mChildren.get(phiInstruction);
	TaskFragment v22 = 0;
	TaskFragment v23 = 0;
	ActivityRecord v25 = TaskFragment.getResumedActivity();
	int v26 = TaskFragment.getChildCount();
	WindowContainer v27 = TaskFragment.getChildAt(phiInstruction);
	TaskFragment v28 = v27.asTaskFragment();
	TaskFragment v29 = v27.asTaskFragment();
	ActivityRecord v30 = v29.getTopResumedActivity();
	ActivityRecord v24 = phiInstruction;
	ActivityRecord v13 = phiInstruction;
	int v34 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v34;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 13 @6 exception:14,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
conditional branch(eq, to iindex=-1) 5,15,
17 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 5 @11 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 8 to iindex = 9),
23 = instanceof 3 <Application,Lcom/android/server/am/PendingIntentRecord>,
conditional branch(eq, to iindex=-1) 23,15,
27 = checkcast <Application,Lcom/android/server/am/PendingIntentRecord>3 <Application,Lcom/android/server/am/PendingIntentRecord>,
28 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @39 exception:30,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 31,15,
33 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 31 @45 exception:32,
3 = invokevirtual < Application, Lcom/android/server/wm/Task, isLeafTask()Z > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
7 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 5 @8 exception:6,
9 = binaryop(add) 7 , 8,
19 = phi  18,9,
conditional branch(lt, to iindex=-1) 19,4,
26 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getResumedActivity()Lcom/android/server/wm/ActivityRecord; > 1 @38 exception:25,
2 = getfield < Application, Lcom/android/server/wm/TaskFragment, mResumedActivity, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
return 2,
27 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
29 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 27 @44 exception:28,
30 = binaryop(add) 29 , 8,
48 = phi  47,30,
49 = phi  43,4,
conditional branch(lt, to iindex=-1) 48,4,
31 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
33 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 31,48 @56 exception:32,
34 = checkcast <Application,Lcom/android/server/wm/WindowContainer>33 <Application,Lcom/android/server/wm/WindowContainer>,
36 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 34 @62 exception:35,
return 2,
conditional branch(eq, to iindex=-1) 36,4,
40 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 34 @68 exception:39,
return 2,
42 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 40 @72 exception:41,
3 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getResumedActivity()Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @4 exception:4,
7 = binaryop(add) 5 , 6,
23 = phi  22,7,
conditional branch(lt, to iindex=-1) 23,8,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,23 @13 exception:9,
conditional branch(eq, to iindex=-1) 3,8,
conditional branch(ne, to iindex=-1) 10,3,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 10 @26 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 10 @32 exception:15,
18 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 16 @36 exception:17,
19 = phi  14,8,18,
conditional branch(eq, to iindex=-1) 19,8,
return 19,
goto (from iindex= 40 to iindex = 10),
43 = phi  42,49,49,26,
conditional branch(eq, to iindex=-1) 43,4,
return 43,
conditional branch(eq, to iindex=-1) 33,15,
monitorexit 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @71 exception:53,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
55 = invokevirtual < Application, Lcom/android/server/am/PendingIntentRecord, sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I > 27,15,5,6,4,15,15,7,8,9,10,11,12 @95 exception:54,
return 55,","depth : 0
public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityIntentSender"");
	boolean v2 = p4.hasFileDescriptors();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v5 = v4.getTopResumedActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	int v7 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v7;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord getTopResumedActivity(){
	boolean v1 = p0.isLeafTask();
	int v2 = WindowContainer.mChildren.size();
	ActivityRecord v3 = p0.getResumedActivity();
	int v4 = WindowContainer.mChildren.size();
	Object v5 = WindowContainer.mChildren.get(phiInstruction);
	TaskFragment v6 = v5.asTaskFragment();
	TaskFragment v7 = v5.asTaskFragment();
	ActivityRecord v8 = v7.getTopResumedActivity();
	return phiInstruction;
}
-----
depth : 2
public boolean isLeafTask(){
	int v1 = WindowContainer.mChildren.size();
	Object v2 = WindowContainer.mChildren.get(phiInstruction);
	Task v3 = v2.asTask();
	return 0;
}
-----
depth : 2
public ActivityRecord getResumedActivity(){
	return this.mResumedActivity;
}
-----
depth : 2
public TaskFragment asTaskFragment(){
	return 0;
}
-----
depth : 2
public TaskFragment asTaskFragment(){
	return 0;
}
-----
depth : 2
public ActivityRecord getTopResumedActivity(){
	ActivityRecord v1 = p0.getResumedActivity();
	int v2 = p0.getChildCount();
	WindowContainer v3 = p0.getChildAt(phiInstruction);
	TaskFragment v4 = v3.asTaskFragment();
	TaskFragment v5 = v3.asTaskFragment();
	ActivityRecord v6 = v5.getTopResumedActivity();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	boolean v4 = p4.hasFileDescriptors();
	WindowManagerThreadPriorityBooster.boost();
	int v11 = RootWindowContainer.getChildCount();
	WindowContainer v12 = RootWindowContainer.getChildAt(phiInstruction);
	Task v13 = v12.getFocusedRootTask();
	Task v10 = v13;
	Task v9 = v10;
	int v16 = WindowContainer.mChildren.size();
	Object v17 = WindowContainer.mChildren.get(phiInstruction);
	Task v18 = v17.asTask();
	boolean v15 = 0;
	int v19 = WindowContainer.mChildren.size();
	ActivityRecord v20 = this.mResumedActivity;
	int v21 = WindowContainer.mChildren.size();
	Object v22 = WindowContainer.mChildren.get(phiInstruction);
	TaskFragment v23 = 0;
	TaskFragment v24 = 0;
	ActivityRecord v26 = TaskFragment.getResumedActivity();
	int v27 = TaskFragment.getChildCount();
	WindowContainer v28 = TaskFragment.getChildAt(phiInstruction);
	TaskFragment v29 = v28.asTaskFragment();
	TaskFragment v30 = v28.asTaskFragment();
	ActivityRecord v31 = v30.getTopResumedActivity();
	ActivityRecord v25 = phiInstruction;
	ActivityRecord v14 = phiInstruction;
	int v35 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v35;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityIntentSender(Landroid/app/IApplicationThread;Landroid/content/IIntentSender;Landroid/os/IBinder;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 13 @6 exception:14,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
conditional branch(eq, to iindex=-1) 5,15,
17 = invokevirtual < Application, Landroid/content/Intent, hasFileDescriptors()Z > 5 @11 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 8 to iindex = 9),
23 = instanceof 3 <Application,Lcom/android/server/am/PendingIntentRecord>,
conditional branch(eq, to iindex=-1) 23,15,
27 = checkcast <Application,Lcom/android/server/am/PendingIntentRecord>3 <Application,Lcom/android/server/am/PendingIntentRecord>,
28 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @36 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @39 exception:30,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 31,15,
33 = invokevirtual < Application, Lcom/android/server/wm/Task, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 31 @45 exception:32,
3 = invokevirtual < Application, Lcom/android/server/wm/Task, isLeafTask()Z > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
7 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 5 @8 exception:6,
9 = binaryop(add) 7 , 8,
19 = phi  18,9,
conditional branch(lt, to iindex=-1) 19,4,
26 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getResumedActivity()Lcom/android/server/wm/ActivityRecord; > 1 @38 exception:25,
2 = getfield < Application, Lcom/android/server/wm/TaskFragment, mResumedActivity, <Application,Lcom/android/server/wm/ActivityRecord> > 1,
return 2,
27 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
29 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 27 @44 exception:28,
30 = binaryop(add) 29 , 8,
48 = phi  47,30,
49 = phi  43,4,
conditional branch(lt, to iindex=-1) 48,4,
31 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
33 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 31,48 @56 exception:32,
34 = checkcast <Application,Lcom/android/server/wm/WindowContainer>33 <Application,Lcom/android/server/wm/WindowContainer>,
36 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 34 @62 exception:35,
return 2,
conditional branch(eq, to iindex=-1) 36,4,
40 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 34 @68 exception:39,
return 2,
42 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 40 @72 exception:41,
3 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getResumedActivity()Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @4 exception:4,
7 = binaryop(add) 5 , 6,
23 = phi  22,7,
conditional branch(lt, to iindex=-1) 23,8,
10 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,23 @13 exception:9,
conditional branch(eq, to iindex=-1) 3,8,
conditional branch(ne, to iindex=-1) 10,3,
12 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 10 @26 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTaskFragment()Lcom/android/server/wm/TaskFragment; > 10 @32 exception:15,
18 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopResumedActivity()Lcom/android/server/wm/ActivityRecord; > 16 @36 exception:17,
19 = phi  14,8,18,
conditional branch(eq, to iindex=-1) 19,8,
return 19,
goto (from iindex= 40 to iindex = 10),
43 = phi  42,49,49,26,
conditional branch(eq, to iindex=-1) 43,4,
return 43,
conditional branch(eq, to iindex=-1) 33,15,
monitorexit 28,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @71 exception:53,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
55 = invokevirtual < Application, Lcom/android/server/am/PendingIntentRecord, sendInner(ILandroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Landroid/content/IIntentReceiver;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IIILandroid/os/Bundle;)I > 27,15,5,6,4,15,15,7,8,9,10,11,12 @95 exception:54,
return 55,","depth : 0
public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivityIntentSender"");
	boolean v2 = p4.hasFileDescriptors();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityRecord v5 = v4.getTopResumedActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	int v7 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v7;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord getTopResumedActivity(){
	boolean v1 = p0.isLeafTask();
	int v2 = WindowContainer.mChildren.size();
	ActivityRecord v3 = p0.getResumedActivity();
	int v4 = WindowContainer.mChildren.size();
	Object v5 = WindowContainer.mChildren.get(phiInstruction);
	TaskFragment v6 = v5.asTaskFragment();
	TaskFragment v7 = v5.asTaskFragment();
	ActivityRecord v8 = v7.getTopResumedActivity();
	return phiInstruction;
}
-----
depth : 2
public boolean isLeafTask(){
	int v1 = WindowContainer.mChildren.size();
	Object v2 = WindowContainer.mChildren.get(phiInstruction);
	Task v3 = v2.asTask();
	return 0;
}
-----
depth : 2
public ActivityRecord getResumedActivity(){
	return this.mResumedActivity;
}
-----
depth : 2
public TaskFragment asTaskFragment(){
	return 0;
}
-----
depth : 2
public TaskFragment asTaskFragment(){
	return 0;
}
-----
depth : 2
public ActivityRecord getTopResumedActivity(){
	ActivityRecord v1 = p0.getResumedActivity();
	int v2 = p0.getChildCount();
	WindowContainer v3 = p0.getChildAt(phiInstruction);
	TaskFragment v4 = v3.asTaskFragment();
	TaskFragment v5 = v3.asTaskFragment();
	ActivityRecord v6 = v5.getTopResumedActivity();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public int startActivityIntentSender(IApplicationThread p1, IIntentSender p2, IBinder p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, int p10, Bundle p11){
	boolean v4 = p4.hasFileDescriptors();
	int v10 = RootWindowContainer.getChildCount();
	WindowContainer v11 = RootWindowContainer.getChildAt(phiInstruction);
	Task v12 = v11.getFocusedRootTask();
	Task v9 = v12;
	Task v8 = v9;
	int v15 = WindowContainer.mChildren.size();
	Object v16 = WindowContainer.mChildren.get(phiInstruction);
	Task v17 = v16.asTask();
	boolean v14 = 0;
	int v18 = WindowContainer.mChildren.size();
	ActivityRecord v19 = this.mResumedActivity;
	int v20 = WindowContainer.mChildren.size();
	Object v21 = WindowContainer.mChildren.get(phiInstruction);
	TaskFragment v22 = 0;
	TaskFragment v23 = 0;
	ActivityRecord v25 = TaskFragment.getResumedActivity();
	int v26 = TaskFragment.getChildCount();
	WindowContainer v27 = TaskFragment.getChildAt(phiInstruction);
	TaskFragment v28 = v27.asTaskFragment();
	TaskFragment v29 = v27.asTaskFragment();
	ActivityRecord v30 = v29.getTopResumedActivity();
	ActivityRecord v24 = phiInstruction;
	ActivityRecord v13 = phiInstruction;
	WindowManagerThreadPriorityBooster.reset();
	int v35 = p2.sendInner(0, p4, p5, p3, 0, 0, p6, p7, p8, p9, p10, p11);
	return v35;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","supportsLocalVoiceInteraction()Z","0","2 = load_metadata: <Application,Landroid/service/voice/VoiceInteractionManagerInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
5 = checkcast <Application,Landroid/service/voice/VoiceInteractionManagerInternal>4 <Application,Landroid/service/voice/VoiceInteractionManagerInternal>,
7 = invokevirtual < Application, Landroid/service/voice/VoiceInteractionManagerInternal, supportsLocalVoiceInteraction()Z > 5 @8 exception:6,
return 7,","depth : 0
public boolean supportsLocalVoiceInteraction(){
	Object v1 = LocalServices.getService(VoiceInteractionManagerInterna.class);
	boolean v2 = v1.supportsLocalVoiceInteraction();
	return v2;
}
-----
","public boolean supportsLocalVoiceInteraction(){
	Object v1 = LocalServices.getService(VoiceInteractionManagerInterna.class);
	boolean v2 = v1.supportsLocalVoiceInteraction();
	return v2;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","supportsLocalVoiceInteraction()Z","1","2 = load_metadata: <Application,Landroid/service/voice/VoiceInteractionManagerInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
5 = checkcast <Application,Landroid/service/voice/VoiceInteractionManagerInternal>4 <Application,Landroid/service/voice/VoiceInteractionManagerInternal>,
7 = invokevirtual < Application, Landroid/service/voice/VoiceInteractionManagerInternal, supportsLocalVoiceInteraction()Z > 5 @8 exception:6,
return 7,","depth : 0
public boolean supportsLocalVoiceInteraction(){
	Object v1 = LocalServices.getService(VoiceInteractionManagerInterna.class);
	boolean v2 = v1.supportsLocalVoiceInteraction();
	return v2;
}
-----
depth : 1
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public boolean supportsLocalVoiceInteraction(){
	Object v2 = this.sLocalServiceObjects.get(VoiceInteractionManagerInterna.class);
	Object v1 = v2;
	boolean v3 = v1.supportsLocalVoiceInteraction();
	return v3;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I","0","14 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I > 1,2,3,4,5,6,7,8,9,10,11,12,14 @25 exception:15,
return 16,","depth : 0
public int startActivity(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11){
	int v1 = UserHandle.getCallingUserId();
	int v2 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, v1);
	return v2;
}
-----
","public int startActivity(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11){
	int v1 = UserHandle.getCallingUserId();
	int v2 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, v1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I","1","14 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I > 1,2,3,4,5,6,7,8,9,10,11,12,14 @25 exception:15,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;IZ)I > 1,2,3,4,5,6,7,8,9,10,11,12,13,14 @25 exception:15,
return 16,
return 16,","depth : 0
public int startActivity(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11){
	int v1 = UserHandle.getCallingUserId();
	int v2 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, v1);
	return v2;
}
-----
depth : 1
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v1 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, 1);
	return v1;
}
-----
","public int startActivity(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11){
	int v1 = UserHandle.getCallingUserId();
	int v3 = ActivityTaskManagerService.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, v1, 1);
	int v2 = v3;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivity(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;)I","2","14 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I > 1,2,3,4,5,6,7,8,9,10,11,12,14 @25 exception:15,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;IZ)I > 1,2,3,4,5,6,7,8,9,10,11,12,13,14 @25 exception:15,
16 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 12 @3 exception:15,
conditional branch(eq, to iindex=-1) 16,17,
19 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOriginalOptions()Landroid/app/ActivityOptions; > 16 @9 exception:18,
21 = invokevirtual < Application, Landroid/app/ActivityOptions, getTransientLaunch()Z > 19 @13 exception:20,
conditional branch(eq, to iindex=-1) 21,17,
23 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @19 exception:22,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,23 @23 exception:24,
conditional branch(eq, to iindex=-1) 25,17,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:26,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 29,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:30,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 28,31 @43 exception:32,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
35 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOriginalOptions()Landroid/app/ActivityOptions; > 16 @48 exception:34,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, startExistingRecentsIfPossible(Landroid/content/Intent;Landroid/app/ActivityOptions;)Z > 33,5,35 @52 exception:36,
conditional branch(eq, to iindex=-1) 37,17,
monitorexit 29,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @60 exception:112,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 28 @63 exception:113,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @66 exception:114,
return 98,
return 16,
return 16,","depth : 0
public int startActivity(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11){
	int v1 = UserHandle.getCallingUserId();
	int v2 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, v1);
	return v2;
}
-----
depth : 1
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v1 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, 1);
	return v1;
}
-----
depth : 2
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12, boolean p13){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p11);
	ActivityOptions v2 = v1.getOriginalOptions();
	boolean v3 = v2.getTransientLaunch();
	int v4 = Binder.getCallingUid();
	boolean v5 = p0.isCallerRecents(v4);
	long v6 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Trace.traceBegin(32, ""startExistingRecents"");
	ActivityOptions v9 = v1.getOriginalOptions();
	boolean v10 = this.mActivityStartController.startExistingRecentsIfPossible(p4, v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v6);
	return 2;
}
-----
","public int startActivity(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11){
	int v1 = UserHandle.getCallingUserId();
	SafeActivityOptions v4 = SafeActivityOptions.fromBundle(p11);
	ActivityOptions v5 = v4.getOriginalOptions();
	boolean v6 = v5.getTransientLaunch();
	int v7 = Binder.getCallingUid();
	boolean v8 = ActivityTaskManagerService.isCallerRecents(v7);
	long v9 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Trace.traceBegin(32, ""startExistingRecents"");
	ActivityOptions v12 = v4.getOriginalOptions();
	boolean v13 = this.mActivityStartController.startExistingRecentsIfPossible(p4, v12);
	WindowManagerService.resetPriorityAfterLockedSection();
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v9);
	int v3 = 2;
	int v2 = v3;
	return v2;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setPersistentVrThread(I)V","0","5 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @8 exception:35,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:37,
39 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @17 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 40,39 @23 exception:41,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setPersistentVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 43,2,39,42 @29 exception:44,
monitorexit 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @33 exception:51,
return,","depth : 0
public void setPersistentVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v4 = Binder.getCallingPid();
	WindowProcessController v5 = this.mProcessMap.getProcess(v4);
	this.mVrController.setPersistentVrThreadLocked(p1, v4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void setPersistentVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v4 = Binder.getCallingPid();
	WindowProcessController v5 = this.mProcessMap.getProcess(v4);
	this.mVrController.setPersistentVrThreadLocked(p1, v4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPersistentVrThread(I)V","1","5 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @8 exception:35,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
return,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:37,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
39 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @17 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 40,39 @23 exception:41,
3 = getfield < Application, Lcom/android/server/wm/WindowProcessControllerMap, mPidMap, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>5 <Application,Lcom/android/server/wm/WindowProcessController>,
return 6,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setPersistentVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 43,2,39,42 @29 exception:44,
6 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:5,
conditional branch(ne, to iindex=-1) 6,8,
conditional branch(ne, to iindex=-1) 4,8,
conditional branch(eq, to iindex=-1) 2,8,
invokevirtual < Application, Lcom/android/server/wm/VrController, enforceThreadInProcess(II)V > 1,2,3 @24 exception:9,
12 = invokevirtual < Application, Lcom/android/server/wm/VrController, setPersistentVrRenderThreadLocked(IZ)I > 1,2,8 @28 exception:11,
return,
monitorexit 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @33 exception:51,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setPersistentVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v4 = Binder.getCallingPid();
	WindowProcessController v5 = this.mProcessMap.getProcess(v4);
	this.mVrController.setPersistentVrThreadLocked(p1, v4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceSystemHasVrFeature(){
	PackageManager v1 = this.mContext.getPackageManager();
	boolean v2 = v1.hasSystemFeature(""android.hardware.vr.high_performance"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public WindowProcessController getProcess(int p1){
	Object v1 = this.mPidMap.get(p1);
	return v1;
}
-----
depth : 1
public void setPersistentVrThreadLocked(int p1, int p2, WindowProcessController p3){
	boolean v1 = p0.hasPersistentVrFlagSet();
	p0.enforceThreadInProcess(p1, p2);
	int v3 = p0.setPersistentVrRenderThreadLocked(p1, 0);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setPersistentVrThread(int p1){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.vr.high_performance"");
	this.sThreadPriorityBooster.boost();
	int v7 = Binder.getCallingPid();
	Object v9 = this.mPidMap.get(v7);
	WindowProcessController v8 = v9;
	boolean v11 = VrController.hasPersistentVrFlagSet();
	VrController.enforceThreadInProcess(p1, v7);
	int v13 = VrController.setPersistentVrRenderThreadLocked(p1, 0);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPersistentVrThread(I)V","2","5 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @8 exception:35,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
return,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:37,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
39 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @17 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 40,39 @23 exception:41,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setPersistentVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 43,2,39,42 @29 exception:44,
6 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/wm/VrController, mVrState, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 6,8,
conditional branch(ne, to iindex=-1) 4,8,
conditional branch(eq, to iindex=-1) 2,8,
invokevirtual < Application, Lcom/android/server/wm/VrController, enforceThreadInProcess(II)V > 1,2,3 @24 exception:9,
5 = invokestatic < Application, Landroid/os/Process, isThreadInProcess(II)Z > 3,2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
return,
12 = invokevirtual < Application, Lcom/android/server/wm/VrController, setPersistentVrRenderThreadLocked(IZ)I > 1,2,8 @28 exception:11,
5 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(ne, to iindex=-1) 3,6,
12 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,10 @12 exception:11,
17 = getfield < Application, Lcom/android/server/wm/VrController, mVrRenderThreadTid, <Primordial,I> > 1,
return 17,
return,
monitorexit 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @33 exception:51,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setPersistentVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v4 = Binder.getCallingPid();
	WindowProcessController v5 = this.mProcessMap.getProcess(v4);
	this.mVrController.setPersistentVrThreadLocked(p1, v4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceSystemHasVrFeature(){
	PackageManager v1 = this.mContext.getPackageManager();
	boolean v2 = v1.hasSystemFeature(""android.hardware.vr.high_performance"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setPersistentVrThreadLocked(int p1, int p2, WindowProcessController p3){
	boolean v1 = p0.hasPersistentVrFlagSet();
	p0.enforceThreadInProcess(p1, p2);
	int v3 = p0.setPersistentVrRenderThreadLocked(p1, 0);
	return;
}
-----
depth : 2
public boolean hasPersistentVrFlagSet(){
	return phiInstruction;
}
-----
depth : 2
public void enforceThreadInProcess(int p1, int p2){
	boolean v1 = Process.isThreadInProcess(p2, p1);
	return;
}
-----
depth : 2
public int setPersistentVrRenderThreadLocked(int p1, boolean p2){
	boolean v1 = p0.hasPersistentVrFlagSet();
	int v2 = Slog.w(""VrController"", ""Failed to set persistent VR thread, system not in persistent VR mode."");
	return this.mVrRenderThreadTid;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setPersistentVrThread(int p1){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.vr.high_performance"");
	int v8 = Binder.getCallingPid();
	WindowProcessController v9 = this.mProcessMap.getProcess(v8);
	boolean v11 = phiInstruction;
	boolean v13 = Process.isThreadInProcess(p2, p1);
	boolean v15 = VrController.hasPersistentVrFlagSet();
	int v14 = this.mVrRenderThreadTid;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPersistentVrThread(I)V","2","5 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @8 exception:35,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
return,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:37,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
39 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @17 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 40,39 @23 exception:41,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setPersistentVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 43,2,39,42 @29 exception:44,
6 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/wm/VrController, mVrState, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 6,8,
conditional branch(ne, to iindex=-1) 4,8,
conditional branch(eq, to iindex=-1) 2,8,
invokevirtual < Application, Lcom/android/server/wm/VrController, enforceThreadInProcess(II)V > 1,2,3 @24 exception:9,
5 = invokestatic < Application, Landroid/os/Process, isThreadInProcess(II)Z > 3,2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
return,
12 = invokevirtual < Application, Lcom/android/server/wm/VrController, setPersistentVrRenderThreadLocked(IZ)I > 1,2,8 @28 exception:11,
5 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(ne, to iindex=-1) 3,6,
12 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,10 @12 exception:11,
17 = getfield < Application, Lcom/android/server/wm/VrController, mVrRenderThreadTid, <Primordial,I> > 1,
return 17,
return,
monitorexit 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @33 exception:51,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setPersistentVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v4 = Binder.getCallingPid();
	WindowProcessController v5 = this.mProcessMap.getProcess(v4);
	this.mVrController.setPersistentVrThreadLocked(p1, v4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceSystemHasVrFeature(){
	PackageManager v1 = this.mContext.getPackageManager();
	boolean v2 = v1.hasSystemFeature(""android.hardware.vr.high_performance"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void setPersistentVrThreadLocked(int p1, int p2, WindowProcessController p3){
	boolean v1 = p0.hasPersistentVrFlagSet();
	p0.enforceThreadInProcess(p1, p2);
	int v3 = p0.setPersistentVrRenderThreadLocked(p1, 0);
	return;
}
-----
depth : 2
public boolean hasPersistentVrFlagSet(){
	return phiInstruction;
}
-----
depth : 2
public void enforceThreadInProcess(int p1, int p2){
	boolean v1 = Process.isThreadInProcess(p2, p1);
	return;
}
-----
depth : 2
public int setPersistentVrRenderThreadLocked(int p1, boolean p2){
	boolean v1 = p0.hasPersistentVrFlagSet();
	int v2 = Slog.w(""VrController"", ""Failed to set persistent VR thread, system not in persistent VR mode."");
	return this.mVrRenderThreadTid;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setPersistentVrThread(int p1){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.vr.high_performance"");
	WindowManagerThreadPriorityBooster.boost();
	int v9 = Binder.getCallingPid();
	WindowProcessController v10 = this.mProcessMap.getProcess(v9);
	boolean v12 = phiInstruction;
	boolean v14 = Process.isThreadInProcess(p2, p1);
	boolean v16 = VrController.hasPersistentVrFlagSet();
	int v15 = this.mVrRenderThreadTid;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setPersistentVrThread(I)V","2","5 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceSystemHasVrFeature()V > 1 @8 exception:35,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
return,
36 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:37,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
39 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @17 exception:38,
40 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
42 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 40,39 @23 exception:41,
43 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVrController, <Application,Lcom/android/server/wm/VrController> > 1,
invokevirtual < Application, Lcom/android/server/wm/VrController, setPersistentVrThreadLocked(IILcom/android/server/wm/WindowProcessController;)V > 43,2,39,42 @29 exception:44,
6 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/wm/VrController, mVrState, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 6,8,
conditional branch(ne, to iindex=-1) 4,8,
conditional branch(eq, to iindex=-1) 2,8,
invokevirtual < Application, Lcom/android/server/wm/VrController, enforceThreadInProcess(II)V > 1,2,3 @24 exception:9,
5 = invokestatic < Application, Landroid/os/Process, isThreadInProcess(II)Z > 3,2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
return,
12 = invokevirtual < Application, Lcom/android/server/wm/VrController, setPersistentVrRenderThreadLocked(IZ)I > 1,2,8 @28 exception:11,
5 = invokevirtual < Application, Lcom/android/server/wm/VrController, hasPersistentVrFlagSet()Z > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(ne, to iindex=-1) 3,6,
12 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,10 @12 exception:11,
17 = getfield < Application, Lcom/android/server/wm/VrController, mVrRenderThreadTid, <Primordial,I> > 1,
return 17,
return,
monitorexit 36,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @33 exception:51,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void setPersistentVrThread(int p1){
	p0.enforceSystemHasVrFeature();
	WindowManagerService.boostPriorityForLockedSection();
	int v4 = Binder.getCallingPid();
	WindowProcessController v5 = this.mProcessMap.getProcess(v4);
	this.mVrController.setPersistentVrThreadLocked(p1, v4, v5);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceSystemHasVrFeature(){
	PackageManager v1 = this.mContext.getPackageManager();
	boolean v2 = v1.hasSystemFeature(""android.hardware.vr.high_performance"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void setPersistentVrThreadLocked(int p1, int p2, WindowProcessController p3){
	boolean v1 = p0.hasPersistentVrFlagSet();
	p0.enforceThreadInProcess(p1, p2);
	int v3 = p0.setPersistentVrRenderThreadLocked(p1, 0);
	return;
}
-----
depth : 2
public boolean hasPersistentVrFlagSet(){
	return phiInstruction;
}
-----
depth : 2
public void enforceThreadInProcess(int p1, int p2){
	boolean v1 = Process.isThreadInProcess(p2, p1);
	return;
}
-----
depth : 2
public int setPersistentVrRenderThreadLocked(int p1, boolean p2){
	boolean v1 = p0.hasPersistentVrFlagSet();
	int v2 = Slog.w(""VrController"", ""Failed to set persistent VR thread, system not in persistent VR mode."");
	return this.mVrRenderThreadTid;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setPersistentVrThread(int p1){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.vr.high_performance"");
	int v8 = Binder.getCallingPid();
	WindowProcessController v9 = this.mProcessMap.getProcess(v8);
	boolean v11 = phiInstruction;
	boolean v13 = Process.isThreadInProcess(p2, p1);
	boolean v15 = VrController.hasPersistentVrFlagSet();
	int v14 = this.mVrRenderThreadTid;
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getWindowOrganizerController()Landroid/window/IWindowOrganizerController;","0","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowOrganizerController, <Application,Lcom/android/server/wm/WindowOrganizerController> > 1,
return 2,","depth : 0
public IWindowOrganizerController getWindowOrganizerController(){
	return this.mWindowOrganizerController;
}
-----
","public IWindowOrganizerController getWindowOrganizerController(){
	return this.mWindowOrganizerController;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","getPackageAskScreenCompat(Ljava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageAskCompatModeLocked(Ljava/lang/String;)Z > 7,2 @13 exception:8,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
return 9,","depth : 0
public boolean getPackageAskScreenCompat(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageAskScreenCompat"");
	WindowManagerService.boostPriorityForLockedSection();
	boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
","public boolean getPackageAskScreenCompat(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageAskScreenCompat"");
	WindowManagerService.boostPriorityForLockedSection();
	boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getPackageAskScreenCompat(Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageAskCompatModeLocked(Ljava/lang/String;)Z > 7,2 @13 exception:8,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,2 @0 exception:3,
6 = binaryop(and) 4 , 5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  5,7,
return 8,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 9,","depth : 0
public boolean getPackageAskScreenCompat(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageAskScreenCompat"");
	WindowManagerService.boostPriorityForLockedSection();
	boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public boolean getPackageAskCompatModeLocked(String p1){
	int v1 = p0.getPackageFlags(p1);
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean getPackageAskScreenCompat(String p1){
	this.sThreadPriorityBooster.boost();
	int v7 = CompatModePackages.getPackageFlags(p1);
	boolean v6 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getPackageAskScreenCompat(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageAskCompatModeLocked(Ljava/lang/String;)Z > 7,2 @13 exception:8,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mPackages, <Application,Ljava/util/HashMap> > 1,
5 = invokevirtual < Application, Ljava/util/HashMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Ljava/lang/Integer>5 <Application,Ljava/lang/Integer>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 6 @10 exception:8,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
return 10,
6 = binaryop(and) 4 , 5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  5,7,
return 8,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 9,","depth : 0
public boolean getPackageAskScreenCompat(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageAskScreenCompat"");
	WindowManagerService.boostPriorityForLockedSection();
	boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public boolean getPackageAskCompatModeLocked(String p1){
	int v1 = p0.getPackageFlags(p1);
	return phiInstruction;
}
-----
depth : 2
public int getPackageFlags(String p1){
	Object v1 = this.mPackages.get(p1);
	int v2 = v1.intValue();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean getPackageAskScreenCompat(String p1){
	Object v9 = this.mPackages.get(p1);
	int v10 = v9.intValue();
	int v8 = phiInstruction;
	boolean v7 = phiInstruction;
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getPackageAskScreenCompat(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageAskCompatModeLocked(Ljava/lang/String;)Z > 7,2 @13 exception:8,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mPackages, <Application,Ljava/util/HashMap> > 1,
5 = invokevirtual < Application, Ljava/util/HashMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Ljava/lang/Integer>5 <Application,Ljava/lang/Integer>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 6 @10 exception:8,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
return 10,
6 = binaryop(and) 4 , 5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  5,7,
return 8,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 9,","depth : 0
public boolean getPackageAskScreenCompat(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageAskScreenCompat"");
	WindowManagerService.boostPriorityForLockedSection();
	boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public boolean getPackageAskCompatModeLocked(String p1){
	int v1 = p0.getPackageFlags(p1);
	return phiInstruction;
}
-----
depth : 2
public int getPackageFlags(String p1){
	Object v1 = this.mPackages.get(p1);
	int v2 = v1.intValue();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean getPackageAskScreenCompat(String p1){
	WindowManagerThreadPriorityBooster.boost();
	Object v10 = this.mPackages.get(p1);
	int v11 = v10.intValue();
	int v9 = phiInstruction;
	boolean v8 = phiInstruction;
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getPackageAskScreenCompat(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageAskCompatModeLocked(Ljava/lang/String;)Z > 7,2 @13 exception:8,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageFlags(Ljava/lang/String;)I > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/wm/CompatModePackages, mPackages, <Application,Ljava/util/HashMap> > 1,
5 = invokevirtual < Application, Ljava/util/HashMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Ljava/lang/Integer>5 <Application,Ljava/lang/Integer>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 6 @10 exception:8,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
return 10,
6 = binaryop(and) 4 , 5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  5,7,
return 8,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 9,","depth : 0
public boolean getPackageAskScreenCompat(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageAskScreenCompat"");
	WindowManagerService.boostPriorityForLockedSection();
	boolean v3 = this.mCompatModePackages.getPackageAskCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public boolean getPackageAskCompatModeLocked(String p1){
	int v1 = p0.getPackageFlags(p1);
	return phiInstruction;
}
-----
depth : 2
public int getPackageFlags(String p1){
	Object v1 = this.mPackages.get(p1);
	int v2 = v1.intValue();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public boolean getPackageAskScreenCompat(String p1){
	Object v9 = this.mPackages.get(p1);
	int v10 = v9.intValue();
	int v8 = phiInstruction;
	boolean v7 = phiInstruction;
	WindowManagerThreadPriorityBooster.reset();
	return v7;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I","0","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @3 exception:10,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 11 @8 exception:12,
14 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @11 exception:13,
16 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @15 exception:15,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,14,16,9,11 @21 exception:17,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @25 exception:19,
22 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 8 @29 exception:21,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, startActivities(Landroid/app/IApplicationThread;IIILjava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Lcom/android/server/wm/SafeActivityOptions;ILjava/lang/String;Lcom/android/server/am/PendingIntentRecord;Z)I > 20,2,23,24,23,3,4,5,6,7,22,18,11,24,24 @50 exception:25,
return 26,","depth : 0
public int startActivities(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, Bundle p7, int p8){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivities"");
	int v3 = Binder.getCallingPid();
	int v4 = Binder.getCallingUid();
	int v5 = p0.handleIncomingUser(v3, v4, p8, ""startActivities"");
	ActivityStartController v6 = p0.getActivityStartController();
	SafeActivityOptions v7 = SafeActivityOptions.fromBundle(p7);
	int v8 = v6.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v7, v5, ""startActivities"", 0, 0);
	return v8;
}
-----
","public int startActivities(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, Bundle p7, int p8){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivities"");
	int v3 = Binder.getCallingPid();
	int v4 = Binder.getCallingUid();
	int v5 = p0.handleIncomingUser(v3, v4, p8, ""startActivities"");
	ActivityStartController v6 = p0.getActivityStartController();
	SafeActivityOptions v7 = SafeActivityOptions.fromBundle(p7);
	int v8 = v6.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v7, v5, ""startActivities"", 0, 0);
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I","1","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @3 exception:10,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 11 @8 exception:12,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
14 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @11 exception:13,
16 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @15 exception:15,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,14,16,9,11 @21 exception:17,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @25 exception:19,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
22 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 8 @29 exception:21,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, startActivities(Landroid/app/IApplicationThread;IIILjava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Lcom/android/server/wm/SafeActivityOptions;ILjava/lang/String;Lcom/android/server/am/PendingIntentRecord;Z)I > 20,2,23,24,23,3,4,5,6,7,22,18,11,24,24 @50 exception:25,
return 26,","depth : 0
public int startActivities(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, Bundle p7, int p8){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivities"");
	int v3 = Binder.getCallingPid();
	int v4 = Binder.getCallingUid();
	int v5 = p0.handleIncomingUser(v3, v4, p8, ""startActivities"");
	ActivityStartController v6 = p0.getActivityStartController();
	SafeActivityOptions v7 = SafeActivityOptions.fromBundle(p7);
	int v8 = v6.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v7, v5, ""startActivities"", 0, 0);
	return v8;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
","public int startActivities(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, Bundle p7, int p8){
	int v7 = Binder.getCallingPid();
	int v8 = Binder.getCallingUid();
	int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p8, 0, 0, ""startActivities"", 0);
	int v9 = v10;
	ActivityStartController v11 = this.mActivityStartController;
	SafeActivityOptions v13 = new SafeActivityOptions(v14);
	ActivityOptions v14 = ActivityOptions.fromBundle(p7);
	SafeActivityOptions v12 = phiInstruction;
	int v16 = v11.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v12, v9, ""startActivities"", 0, 0);
	return v16;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivities(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Landroid/os/Bundle;I)I","2","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,3 @3 exception:10,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 11 @8 exception:12,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
14 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @11 exception:13,
16 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @15 exception:15,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,14,16,9,11 @21 exception:17,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @25 exception:19,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
22 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 8 @29 exception:21,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/app/ActivityOptions>@2,
invokespecial < Application, Landroid/app/ActivityOptions, <init>(Landroid/os/Bundle;)V > 3,1 @4 exception:4,
goto (from iindex= 3 to iindex = 2),
5 = phi  3,2,
return 5,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
26 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, startActivities(Landroid/app/IApplicationThread;IIILjava/lang/String;Ljava/lang/String;[Landroid/content/Intent;[Ljava/lang/String;Landroid/os/IBinder;Lcom/android/server/wm/SafeActivityOptions;ILjava/lang/String;Lcom/android/server/am/PendingIntentRecord;Z)I > 20,2,23,24,23,3,4,5,6,7,22,18,11,24,24 @50 exception:25,
return 26,","depth : 0
public int startActivities(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, Bundle p7, int p8){
	p0.assertPackageMatchesCallingUid(p2);
	ActivityTaskManagerService.enforceNotIsolatedCaller(""startActivities"");
	int v3 = Binder.getCallingPid();
	int v4 = Binder.getCallingUid();
	int v5 = p0.handleIncomingUser(v3, v4, p8, ""startActivities"");
	ActivityStartController v6 = p0.getActivityStartController();
	SafeActivityOptions v7 = SafeActivityOptions.fromBundle(p7);
	int v8 = v6.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v7, v5, ""startActivities"", 0, 0);
	return v8;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions fromBundle(Bundle p1){
	ActivityOptions v0 = new ActivityOptions(p1);
	return phiInstruction;
}
-----
","public int startActivities(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, Bundle p7, int p8){
	int v7 = Binder.getCallingPid();
	int v8 = Binder.getCallingUid();
	int v10 = this.mAmInternal.handleIncomingUser(v7, v8, p8, 0, 0, ""startActivities"", 0);
	int v9 = v10;
	ActivityStartController v11 = this.mActivityStartController;
	SafeActivityOptions v13 = new SafeActivityOptions(v14);
	ActivityOptions v15 = new ActivityOptions(p1);
	ActivityOptions v14 = phiInstruction;
	SafeActivityOptions v12 = phiInstruction;
	int v18 = v11.startActivities(p1, -1, 0, -1, p2, p3, p4, p5, p6, v12, v9, ""startActivities"", 0, 0);
	return v18;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","removeTask(I)Z","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
29 = new <Application,Ljava/lang/StringBuilder>@30,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @32 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @37 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 29,2 @40 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @43 exception:36,
39 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 28,37 @47 exception:38,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @51 exception:48,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @55 exception:59,
return 15,","depth : 0
public boolean removeTask(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""removeTask: No task remove with id="");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""ActivityTaskManager"", v8);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
","public boolean removeTask(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeTask(I)Z","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/Task, isLeafTask()Z > 14 @59 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 7,
conditional branch(eq, to iindex=-1) 17,15,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, removeTask(Lcom/android/server/wm/Task;ZZLjava/lang/String;)V > 20,14,12,12,21 @69 exception:22,
6 = getfield < Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 2,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, requestCloseTransitionIfNeeded(Lcom/android/server/wm/WindowContainer;)V > 8,2 @7 exception:9,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 10,
invokevirtual < Application, Lcom/android/server/wm/Task, removeActivities(Ljava/lang/String;Z)V > 2,5,7 @14 exception:11,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, cleanUpRemovedTaskLocked(Lcom/android/server/wm/Task;ZZ)V > 1,2,3,4 @17 exception:12,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 13 @22 exception:14,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, clearLockedTask(Lcom/android/server/wm/Task;)V > 15,2 @26 exception:16,
17 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController; > 17 @31 exception:18,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, notifyTaskStackChanged()V > 19 @35 exception:20,
21 = getfield < Application, Lcom/android/server/wm/Task, isPersistable, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 21,7,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V > 22,7,10 @45 exception:23,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 7,
return,
goto (from iindex= 34 to iindex = 6),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @78 exception:26,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @82 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 12,","depth : 0
public boolean removeTask(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isLeafTask();
	this.mTaskSupervisor.removeTask(v4, 1, 1, ""remove-task"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public boolean isLeafTask(){
	int v1 = WindowContainer.mChildren.size();
	Object v2 = WindowContainer.mChildren.get(phiInstruction);
	Task v3 = v2.asTask();
	return 0;
}
-----
depth : 1
public void removeTask(Task p1, boolean p2, boolean p3, String p4){
	WindowContainer.mTransitionController.requestCloseTransitionIfNeeded(p1);
	Task.mInRemoveTask = 1;
	p1.removeActivities(p4, 0);
	p0.cleanUpRemovedTaskLocked(p1, p2, p3);
	LockTaskController v4 = this.mService.getLockTaskController();
	v4.clearLockedTask(p1);
	TaskChangeNotificationController v6 = this.mService.getTaskChangeNotificationController();
	v6.notifyTaskStackChanged();
	this.mService.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean removeTask(int p1){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	Task v6 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v5 = v6;
	int v8 = WindowContainer.mChildren.size();
	Object v9 = WindowContainer.mChildren.get(phiInstruction);
	Task v10 = v9.asTask();
	boolean v7 = 0;
	WindowContainer.mTransitionController.requestCloseTransitionIfNeeded(v5);
	Task.mInRemoveTask = 1;
	v5.removeActivities(""remove-task"", 0);
	ActivityTaskSupervisor.cleanUpRemovedTaskLocked(v5, 1, 1);
	LockTaskController v15 = this.mService.getLockTaskController();
	v15.clearLockedTask(v5);
	TaskChangeNotificationController v17 = this.mService.getTaskChangeNotificationController();
	v17.notifyTaskStackChanged();
	this.mService.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	Binder.restoreCallingIdentity(v4);
	this.sThreadPriorityBooster.reset();
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeTask(I)Z","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/Task, isLeafTask()Z > 14 @59 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
return 5,
conditional branch(eq, to iindex=-1) 17,15,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, removeTask(Lcom/android/server/wm/Task;ZZLjava/lang/String;)V > 20,14,12,12,21 @69 exception:22,
6 = getfield < Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 2,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, requestCloseTransitionIfNeeded(Lcom/android/server/wm/WindowContainer;)V > 8,2 @7 exception:9,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 10,
invokevirtual < Application, Lcom/android/server/wm/Task, removeActivities(Ljava/lang/String;Z)V > 2,5,7 @14 exception:11,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, cleanUpRemovedTaskLocked(Lcom/android/server/wm/Task;ZZ)V > 1,2,3,4 @17 exception:12,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 13 @22 exception:14,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, clearLockedTask(Lcom/android/server/wm/Task;)V > 15,2 @26 exception:16,
17 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController; > 17 @31 exception:18,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, notifyTaskStackChanged()V > 19 @35 exception:20,
21 = getfield < Application, Lcom/android/server/wm/Task, isPersistable, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 21,7,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V > 22,7,10 @45 exception:23,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 7,
return,
goto (from iindex= 34 to iindex = 6),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @78 exception:26,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @82 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 12,","depth : 0
public boolean removeTask(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isLeafTask();
	this.mTaskSupervisor.removeTask(v4, 1, 1, ""remove-task"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public boolean isLeafTask(){
	int v1 = WindowContainer.mChildren.size();
	return 1;
}
-----
depth : 1
public void removeTask(Task p1, boolean p2, boolean p3, String p4){
	WindowContainer.mTransitionController.requestCloseTransitionIfNeeded(p1);
	Task.mInRemoveTask = 1;
	p1.removeActivities(p4, 0);
	p0.cleanUpRemovedTaskLocked(p1, p2, p3);
	LockTaskController v4 = this.mService.getLockTaskController();
	v4.clearLockedTask(p1);
	TaskChangeNotificationController v6 = this.mService.getTaskChangeNotificationController();
	v6.notifyTaskStackChanged();
	this.mService.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean removeTask(int p1){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	Task v6 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v5 = v6;
	int v8 = WindowContainer.mChildren.size();
	boolean v7 = 1;
	WindowContainer.mTransitionController.requestCloseTransitionIfNeeded(v5);
	Task.mInRemoveTask = 1;
	v5.removeActivities(""remove-task"", 0);
	ActivityTaskSupervisor.cleanUpRemovedTaskLocked(v5, 1, 1);
	LockTaskController v13 = this.mService.getLockTaskController();
	v13.clearLockedTask(v5);
	TaskChangeNotificationController v15 = this.mService.getTaskChangeNotificationController();
	v15.notifyTaskStackChanged();
	this.mService.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	Binder.restoreCallingIdentity(v4);
	this.sThreadPriorityBooster.reset();
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeTask(I)Z","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/Task, isLeafTask()Z > 14 @59 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 11 @18 exception:12,
return 2,
conditional branch(eq, to iindex=-1) 13,7,
return 7,
conditional branch(eq, to iindex=-1) 17,15,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, removeTask(Lcom/android/server/wm/Task;ZZLjava/lang/String;)V > 20,14,12,12,21 @69 exception:22,
6 = getfield < Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 2,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, requestCloseTransitionIfNeeded(Lcom/android/server/wm/WindowContainer;)V > 8,2 @7 exception:9,
3 = getfield < Application, Lcom/android/server/wm/TransitionController, mTransitionPlayer, <Application,Landroid/window/ITransitionPlayer> > 1,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisibleRequested()Z > 2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
9 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, isCollecting()Z > 1 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,4,
12 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, createTransition(II)Lcom/android/server/wm/Transition; > 1,10,4 @19 exception:11,
14 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 2 @23 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, requestStartTransition(Lcom/android/server/wm/Transition;Lcom/android/server/wm/Task;Landroid/window/RemoteTransition;Landroid/window/TransitionRequestInfo$DisplayChange;)Lcom/android/server/wm/Transition; > 1,12,14,4,4 @28 exception:15,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, collectExistenceChange(Lcom/android/server/wm/WindowContainer;)V > 1,2 @31 exception:20,
goto (from iindex= 18 to iindex = 4),
return,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 10,
invokevirtual < Application, Lcom/android/server/wm/Task, removeActivities(Ljava/lang/String;Z)V > 2,5,7 @14 exception:11,
invokevirtual < Application, Lcom/android/server/wm/Task, clearPinnedTaskIfNeed()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
11 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda2>@9,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda2, <init>(Lcom/android/server/wm/Task;ZLjava/lang/String;)V > 11,1,3,2 @11 exception:12,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllActivities(Ljava/util/function/Consumer;)V > 1,11 @14 exception:13,
goto (from iindex= 7 to iindex = 9),
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, cleanUpRemovedTaskLocked(Lcom/android/server/wm/Task;ZZ)V > 1,2,3,4 @17 exception:12,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, remove(Lcom/android/server/wm/Task;)V > 6,2 @4 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/Task, getBaseIntent()Landroid/content/Intent; > 2 @7 exception:9,
12 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 10 @11 exception:11,
conditional branch(ne, to iindex=-1) 12,5,
13 = new <Application,Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda1>@40,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda1, <init>()V > 13 @42 exception:14,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 15,
17 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 2,
19 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 17 @51 exception:18,
20 = new <Application,Landroid/content/Intent>@55,
22 = invokevirtual < Application, Lcom/android/server/wm/Task, getBaseIntent()Landroid/content/Intent; > 2 @57 exception:21,
invokespecial < Application, Landroid/content/Intent, <init>(Landroid/content/Intent;)V > 20,22 @61 exception:23,
25 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Lcom/android/internal/util/function/QuadConsumer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 13,16,19,12,20 @64 exception:24,
26 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
27 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 26,
29 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 27,25 @72 exception:28,
conditional branch(ne, to iindex=-1) 3,5,
31 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 12 @78 exception:30,
32 = new <Application,Ljava/util/ArrayList>@82,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 32 @84 exception:33,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 34,
37 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 35 @91 exception:36,
70 = phi  69,5,
39 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 37 @97 exception:38,
conditional branch(ge, to iindex=-1) 70,39,
41 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 37,70 @103 exception:40,
42 = checkcast <Application,Landroid/util/SparseArray>41 <Application,Landroid/util/SparseArray>,
75 = phi  75,70,
66 = phi  65,5,
44 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 42 @110 exception:43,
conditional branch(ge, to iindex=-1) 66,44,
46 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 42,66 @116 exception:45,
47 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>46 <Application,Lcom/android/server/wm/WindowProcessController>,
48 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mUserId, <Primordial,I> > 47,
49 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 48,49,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
51 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mHomeProcess, <Application,Lcom/android/server/wm/WindowProcessController> > 50,
conditional branch(ne, to iindex=-1) 47,51,
52 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mPkgList, <Application,Landroid/util/ArraySet> > 47,
54 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 52,31 @138 exception:53,
conditional branch(ne, to iindex=-1) 54,5,
56 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, shouldKillProcessForRemovedTask(Lcom/android/server/wm/Task;)Z > 47,2 @145 exception:55,
conditional branch(ne, to iindex=-1) 56,5,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 13 @22 exception:14,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, clearLockedTask(Lcom/android/server/wm/Task;)V > 15,2 @26 exception:16,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
6 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
7 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
9 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 7,3 @14 exception:8,
conditional branch(ne, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
12 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 10 @22 exception:11,
14 = binaryop(add) 12 , 13,
21 = phi  20,14,
conditional branch(le, to iindex=-1) 21,3,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, removeLockedTask(Lcom/android/server/wm/Task;)V > 1,2 @44 exception:27,
28 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
30 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 28 @49 exception:29,
conditional branch(eq, to iindex=-1) 30,3,
invokevirtual < Application, Lcom/android/server/wm/Task, performClearTaskForReuse(Z)V > 2,3 @56 exception:31,
32 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 32,
35 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 33 @63 exception:34,
return,
17 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController; > 17 @31 exception:18,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskChangeNotificationController, <Application,Lcom/android/server/wm/TaskChangeNotificationController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, notifyTaskStackChanged()V > 19 @35 exception:20,
2 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getActivityMetricsLogger()Lcom/android/server/wm/ActivityMetricsLogger; > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/wm/ActivityMetricsLogger, logWindowState()V > 4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 6,7 @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mHandler, <Application,Landroid/os/Handler> > 1,
11 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(I)Landroid/os/Message; > 9,7 @17 exception:10,
12 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mNotifyTaskStackChanged, <Application,Lcom/android/server/wm/TaskChangeNotificationController$TaskStackConsumer> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, forAllLocalListeners(Lcom/android/server/wm/TaskChangeNotificationController$TaskStackConsumer;Landroid/os/Message;)V > 1,12,11 @23 exception:13,
14 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mHandler, <Application,Landroid/os/Handler> > 1,
17 = invokevirtual < Application, Landroid/os/Handler, sendMessageDelayed(Landroid/os/Message;J)Z > 14,11,15 @30 exception:16,
return,
21 = getfield < Application, Lcom/android/server/wm/Task, isPersistable, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 21,7,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V > 22,7,10 @45 exception:23,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V > 4,2,3 @2 exception:5,
return,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 7,
return,
goto (from iindex= 34 to iindex = 6),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @78 exception:26,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @82 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 12,","depth : 0
public boolean removeTask(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isLeafTask();
	this.mTaskSupervisor.removeTask(v4, 1, 1, ""remove-task"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public boolean isLeafTask(){
	int v1 = WindowContainer.mChildren.size();
	Object v2 = WindowContainer.mChildren.get(phiInstruction);
	Task v3 = v2.asTask();
	return 0;
}
-----
depth : 2
public Task asTask(){
	return 0;
}
-----
depth : 1
public void removeTask(Task p1, boolean p2, boolean p3, String p4){
	WindowContainer.mTransitionController.requestCloseTransitionIfNeeded(p1);
	Task.mInRemoveTask = 1;
	p1.removeActivities(p4, 0);
	p0.cleanUpRemovedTaskLocked(p1, p2, p3);
	LockTaskController v4 = this.mService.getLockTaskController();
	v4.clearLockedTask(p1);
	TaskChangeNotificationController v6 = this.mService.getTaskChangeNotificationController();
	v6.notifyTaskStackChanged();
	this.mService.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	return;
}
-----
depth : 2
public void requestCloseTransitionIfNeeded(WindowContainer p1){
	boolean v1 = p1.isVisibleRequested();
	boolean v2 = p0.isCollecting();
	Transition v3 = p0.createTransition(2, 0);
	Task v4 = p1.asTask();
	Transition v5 = p0.requestStartTransition(v3, v4, 0, 0);
	p0.collectExistenceChange(p1);
	return;
}
-----
depth : 2
public void removeActivities(String p1, boolean p2){
	p0.clearPinnedTaskIfNeed();
	Task v2 = p0.getRootTask();
	Task$$ExternalSyntheticLambda2 v2 = new Task$$ExternalSyntheticLambda2(p0,p2,p1);
	p0.forAllActivities(v2);
	return;
}
-----
depth : 2
public void cleanUpRemovedTaskLocked(Task p1, boolean p2, boolean p3){
	this.mRecentTasks.remove(p1);
	Intent v2 = p1.getBaseIntent();
	ComponentName v3 = v2.getComponent();
	ActivityTaskSupervisor$$ExternalSyntheticLambda1 v3 = new ActivityTaskSupervisor$$ExternalSyntheticLambda1();
	Integer v5 = Integer.valueOf(Task.mUserId);
	Intent v5 = new Intent(v6);
	Intent v6 = p1.getBaseIntent();
	Message v8 = PooledLambda.obtainMessage(v3, ActivityTaskManagerService.mAmInternal, v5, v3, v5);
	boolean v9 = ActivityTaskManagerService.mH.sendMessage(v8);
	String v10 = v3.getPackageName();
	ArrayList v10 = new ArrayList();
	ArrayMap v12 = ActivityTaskManagerService.mProcessNames.getMap();
	int v13 = v12.size();
	Object v14 = v12.valueAt(phiInstruction);
	int v15 = v14.size();
	Object v16 = v14.valueAt(phiInstruction);
	boolean v17 = WindowProcessController.mPkgList.contains(v10);
	boolean v18 = v16.shouldKillProcessForRemovedTask(p1);
	return;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public void clearLockedTask(Task p1){
	boolean v1 = this.mLockTaskModeTasks.isEmpty();
	Object v2 = this.mLockTaskModeTasks.get(0);
	int v3 = this.mLockTaskModeTasks.size();
	p0.removeLockedTask(p1);
	boolean v5 = this.mLockTaskModeTasks.isEmpty();
	p1.performClearTaskForReuse(0);
	boolean v7 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	return;
}
-----
depth : 2
public TaskChangeNotificationController getTaskChangeNotificationController(){
	return this.mTaskChangeNotificationController;
}
-----
depth : 2
public void notifyTaskStackChanged(){
	ActivityMetricsLogger v1 = this.mTaskSupervisor.getActivityMetricsLogger();
	v1.logWindowState();
	this.mHandler.removeMessages(2);
	Message v4 = this.mHandler.obtainMessage(2);
	p0.forAllLocalListeners(this.mNotifyTaskStackChanged, v4);
	boolean v6 = this.mHandler.sendMessageDelayed(v4, 100);
	return;
}
-----
depth : 2
public void notifyTaskPersisterLocked(Task p1, boolean p2){
	this.mRecentTasks.notifyTaskPersisterLocked(p1, p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean removeTask(int p1){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	Integer v11 = Integer.valueOf(p1);
	PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
	Task v13 = RootWindowContainer.getTask(v12);
	v12.recycle();
	Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
	Task v16 = v13.getRootTask();
	boolean v17 = v13.reparent(v15, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v7 = v13;
	Task v6 = v7;
	int v19 = WindowContainer.mChildren.size();
	Object v20 = WindowContainer.mChildren.get(phiInstruction);
	Task v21 = 0;
	boolean v18 = 0;
	boolean v24 = p1.isVisibleRequested();
	boolean v25 = TransitionController.isCollecting();
	Transition v26 = TransitionController.createTransition(2, 0);
	Task v27 = p1.asTask();
	Transition v28 = TransitionController.requestStartTransition(v26, v27, 0, 0);
	TransitionController.collectExistenceChange(p1);
	Task.mInRemoveTask = 1;
	Task.clearPinnedTaskIfNeed();
	Task v32 = Task.getRootTask();
	Task$$ExternalSyntheticLambda2 v33 = new Task$$ExternalSyntheticLambda2(Task,0,p4);
	Task.forAllActivities(v33);
	this.mRecentTasks.remove(p1);
	Intent v38 = p1.getBaseIntent();
	ComponentName v39 = v38.getComponent();
	ActivityTaskSupervisor$$ExternalSyntheticLambda1 v40 = new ActivityTaskSupervisor$$ExternalSyntheticLambda1();
	Integer v42 = Integer.valueOf(Task.mUserId);
	Intent v43 = new Intent(v44);
	Intent v44 = p1.getBaseIntent();
	Message v46 = PooledLambda.obtainMessage(v40, ActivityTaskManagerService.mAmInternal, v42, v39, v43);
	boolean v47 = ActivityTaskManagerService.mH.sendMessage(v46);
	String v48 = v39.getPackageName();
	ArrayList v49 = new ArrayList();
	ArrayMap v51 = ActivityTaskManagerService.mProcessNames.getMap();
	int v52 = v51.size();
	Object v53 = v51.valueAt(phiInstruction);
	int v54 = v53.size();
	Object v55 = v53.valueAt(phiInstruction);
	boolean v56 = WindowProcessController.mPkgList.contains(v48);
	boolean v57 = v55.shouldKillProcessForRemovedTask(p1);
	LockTaskController v58 = this.mLockTaskController;
	boolean v60 = this.mLockTaskModeTasks.isEmpty();
	Object v61 = this.mLockTaskModeTasks.get(0);
	int v62 = this.mLockTaskModeTasks.size();
	LockTaskController.removeLockedTask(p1);
	boolean v64 = this.mLockTaskModeTasks.isEmpty();
	p1.performClearTaskForReuse(0);
	boolean v66 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	TaskChangeNotificationController v67 = this.mTaskChangeNotificationController;
	ActivityMetricsLogger v69 = this.mTaskSupervisor.getActivityMetricsLogger();
	v69.logWindowState();
	this.mHandler.removeMessages(2);
	Message v72 = this.mHandler.obtainMessage(2);
	TaskChangeNotificationController.forAllLocalListeners(this.mNotifyTaskStackChanged, v72);
	boolean v74 = this.mHandler.sendMessageDelayed(v72, 100);
	this.mRecentTasks.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	Binder.restoreCallingIdentity(v5);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeTask(I)Z","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/Task, isLeafTask()Z > 14 @59 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 11 @18 exception:12,
return 2,
conditional branch(eq, to iindex=-1) 13,7,
return 7,
conditional branch(eq, to iindex=-1) 17,15,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, removeTask(Lcom/android/server/wm/Task;ZZLjava/lang/String;)V > 20,14,12,12,21 @69 exception:22,
6 = getfield < Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 2,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, requestCloseTransitionIfNeeded(Lcom/android/server/wm/WindowContainer;)V > 8,2 @7 exception:9,
3 = getfield < Application, Lcom/android/server/wm/TransitionController, mTransitionPlayer, <Application,Landroid/window/ITransitionPlayer> > 1,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisibleRequested()Z > 2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
9 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, isCollecting()Z > 1 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,4,
12 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, createTransition(II)Lcom/android/server/wm/Transition; > 1,10,4 @19 exception:11,
14 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 2 @23 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, requestStartTransition(Lcom/android/server/wm/Transition;Lcom/android/server/wm/Task;Landroid/window/RemoteTransition;Landroid/window/TransitionRequestInfo$DisplayChange;)Lcom/android/server/wm/Transition; > 1,12,14,4,4 @28 exception:15,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, collectExistenceChange(Lcom/android/server/wm/WindowContainer;)V > 1,2 @31 exception:20,
goto (from iindex= 18 to iindex = 4),
return,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 10,
invokevirtual < Application, Lcom/android/server/wm/Task, removeActivities(Ljava/lang/String;Z)V > 2,5,7 @14 exception:11,
invokevirtual < Application, Lcom/android/server/wm/Task, clearPinnedTaskIfNeed()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
11 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda2>@9,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda2, <init>(Lcom/android/server/wm/Task;ZLjava/lang/String;)V > 11,1,3,2 @11 exception:12,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllActivities(Ljava/util/function/Consumer;)V > 1,11 @14 exception:13,
goto (from iindex= 7 to iindex = 9),
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, cleanUpRemovedTaskLocked(Lcom/android/server/wm/Task;ZZ)V > 1,2,3,4 @17 exception:12,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, remove(Lcom/android/server/wm/Task;)V > 6,2 @4 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/Task, getBaseIntent()Landroid/content/Intent; > 2 @7 exception:9,
12 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 10 @11 exception:11,
conditional branch(ne, to iindex=-1) 12,5,
13 = new <Application,Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda1>@40,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda1, <init>()V > 13 @42 exception:14,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 15,
17 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 2,
19 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 17 @51 exception:18,
20 = new <Application,Landroid/content/Intent>@55,
22 = invokevirtual < Application, Lcom/android/server/wm/Task, getBaseIntent()Landroid/content/Intent; > 2 @57 exception:21,
invokespecial < Application, Landroid/content/Intent, <init>(Landroid/content/Intent;)V > 20,22 @61 exception:23,
25 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Lcom/android/internal/util/function/QuadConsumer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 13,16,19,12,20 @64 exception:24,
26 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
27 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 26,
29 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 27,25 @72 exception:28,
conditional branch(ne, to iindex=-1) 3,5,
31 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 12 @78 exception:30,
32 = new <Application,Ljava/util/ArrayList>@82,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 32 @84 exception:33,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 34,
37 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 35 @91 exception:36,
70 = phi  69,5,
39 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 37 @97 exception:38,
conditional branch(ge, to iindex=-1) 70,39,
41 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 37,70 @103 exception:40,
42 = checkcast <Application,Landroid/util/SparseArray>41 <Application,Landroid/util/SparseArray>,
75 = phi  75,70,
66 = phi  65,5,
44 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 42 @110 exception:43,
conditional branch(ge, to iindex=-1) 66,44,
46 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 42,66 @116 exception:45,
47 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>46 <Application,Lcom/android/server/wm/WindowProcessController>,
48 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mUserId, <Primordial,I> > 47,
49 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 48,49,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
51 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mHomeProcess, <Application,Lcom/android/server/wm/WindowProcessController> > 50,
conditional branch(ne, to iindex=-1) 47,51,
52 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mPkgList, <Application,Landroid/util/ArraySet> > 47,
54 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 52,31 @138 exception:53,
conditional branch(ne, to iindex=-1) 54,5,
56 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, shouldKillProcessForRemovedTask(Lcom/android/server/wm/Task;)Z > 47,2 @145 exception:55,
conditional branch(ne, to iindex=-1) 56,5,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 13 @22 exception:14,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, clearLockedTask(Lcom/android/server/wm/Task;)V > 15,2 @26 exception:16,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
6 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
7 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
9 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 7,3 @14 exception:8,
conditional branch(ne, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
12 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 10 @22 exception:11,
14 = binaryop(add) 12 , 13,
21 = phi  20,14,
conditional branch(le, to iindex=-1) 21,3,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, removeLockedTask(Lcom/android/server/wm/Task;)V > 1,2 @44 exception:27,
28 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
30 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 28 @49 exception:29,
conditional branch(eq, to iindex=-1) 30,3,
invokevirtual < Application, Lcom/android/server/wm/Task, performClearTaskForReuse(Z)V > 2,3 @56 exception:31,
32 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 32,
35 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 33 @63 exception:34,
return,
17 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController; > 17 @31 exception:18,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskChangeNotificationController, <Application,Lcom/android/server/wm/TaskChangeNotificationController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, notifyTaskStackChanged()V > 19 @35 exception:20,
2 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getActivityMetricsLogger()Lcom/android/server/wm/ActivityMetricsLogger; > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/wm/ActivityMetricsLogger, logWindowState()V > 4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 6,7 @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mHandler, <Application,Landroid/os/Handler> > 1,
11 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(I)Landroid/os/Message; > 9,7 @17 exception:10,
12 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mNotifyTaskStackChanged, <Application,Lcom/android/server/wm/TaskChangeNotificationController$TaskStackConsumer> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, forAllLocalListeners(Lcom/android/server/wm/TaskChangeNotificationController$TaskStackConsumer;Landroid/os/Message;)V > 1,12,11 @23 exception:13,
14 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mHandler, <Application,Landroid/os/Handler> > 1,
17 = invokevirtual < Application, Landroid/os/Handler, sendMessageDelayed(Landroid/os/Message;J)Z > 14,11,15 @30 exception:16,
return,
21 = getfield < Application, Lcom/android/server/wm/Task, isPersistable, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 21,7,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V > 22,7,10 @45 exception:23,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V > 4,2,3 @2 exception:5,
return,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 7,
return,
goto (from iindex= 34 to iindex = 6),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @78 exception:26,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @82 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 12,","depth : 0
public boolean removeTask(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isLeafTask();
	this.mTaskSupervisor.removeTask(v4, 1, 1, ""remove-task"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public boolean isLeafTask(){
	int v1 = WindowContainer.mChildren.size();
	Object v2 = WindowContainer.mChildren.get(phiInstruction);
	Task v3 = v2.asTask();
	return 0;
}
-----
depth : 2
public Task asTask(){
	return 0;
}
-----
depth : 1
public void removeTask(Task p1, boolean p2, boolean p3, String p4){
	WindowContainer.mTransitionController.requestCloseTransitionIfNeeded(p1);
	Task.mInRemoveTask = 1;
	p1.removeActivities(p4, 0);
	p0.cleanUpRemovedTaskLocked(p1, p2, p3);
	LockTaskController v4 = this.mService.getLockTaskController();
	v4.clearLockedTask(p1);
	TaskChangeNotificationController v6 = this.mService.getTaskChangeNotificationController();
	v6.notifyTaskStackChanged();
	this.mService.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	return;
}
-----
depth : 2
public void requestCloseTransitionIfNeeded(WindowContainer p1){
	boolean v1 = p1.isVisibleRequested();
	boolean v2 = p0.isCollecting();
	Transition v3 = p0.createTransition(2, 0);
	Task v4 = p1.asTask();
	Transition v5 = p0.requestStartTransition(v3, v4, 0, 0);
	p0.collectExistenceChange(p1);
	return;
}
-----
depth : 2
public void removeActivities(String p1, boolean p2){
	p0.clearPinnedTaskIfNeed();
	Task v2 = p0.getRootTask();
	Task$$ExternalSyntheticLambda2 v2 = new Task$$ExternalSyntheticLambda2(p0,p2,p1);
	p0.forAllActivities(v2);
	return;
}
-----
depth : 2
public void cleanUpRemovedTaskLocked(Task p1, boolean p2, boolean p3){
	this.mRecentTasks.remove(p1);
	Intent v2 = p1.getBaseIntent();
	ComponentName v3 = v2.getComponent();
	ActivityTaskSupervisor$$ExternalSyntheticLambda1 v3 = new ActivityTaskSupervisor$$ExternalSyntheticLambda1();
	Integer v5 = Integer.valueOf(Task.mUserId);
	Intent v5 = new Intent(v6);
	Intent v6 = p1.getBaseIntent();
	Message v8 = PooledLambda.obtainMessage(v3, ActivityTaskManagerService.mAmInternal, v5, v3, v5);
	boolean v9 = ActivityTaskManagerService.mH.sendMessage(v8);
	String v10 = v3.getPackageName();
	ArrayList v10 = new ArrayList();
	ArrayMap v12 = ActivityTaskManagerService.mProcessNames.getMap();
	int v13 = v12.size();
	Object v14 = v12.valueAt(phiInstruction);
	int v15 = v14.size();
	Object v16 = v14.valueAt(phiInstruction);
	boolean v17 = WindowProcessController.mPkgList.contains(v10);
	boolean v18 = v16.shouldKillProcessForRemovedTask(p1);
	return;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public void clearLockedTask(Task p1){
	boolean v1 = this.mLockTaskModeTasks.isEmpty();
	Object v2 = this.mLockTaskModeTasks.get(0);
	int v3 = this.mLockTaskModeTasks.size();
	p0.removeLockedTask(p1);
	boolean v5 = this.mLockTaskModeTasks.isEmpty();
	p1.performClearTaskForReuse(0);
	boolean v7 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	return;
}
-----
depth : 2
public TaskChangeNotificationController getTaskChangeNotificationController(){
	return this.mTaskChangeNotificationController;
}
-----
depth : 2
public void notifyTaskStackChanged(){
	ActivityMetricsLogger v1 = this.mTaskSupervisor.getActivityMetricsLogger();
	v1.logWindowState();
	this.mHandler.removeMessages(2);
	Message v4 = this.mHandler.obtainMessage(2);
	p0.forAllLocalListeners(this.mNotifyTaskStackChanged, v4);
	boolean v6 = this.mHandler.sendMessageDelayed(v4, 100);
	return;
}
-----
depth : 2
public void notifyTaskPersisterLocked(Task p1, boolean p2){
	this.mRecentTasks.notifyTaskPersisterLocked(p1, p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean removeTask(int p1){
	WindowManagerThreadPriorityBooster.boost();
	long v6 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v9 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v11 = PooledLambda.__(Tas.class);
	Integer v12 = Integer.valueOf(p1);
	PooledPredicate v13 = PooledLambda.obtainPredicate(v9, v11, v12);
	Task v14 = RootWindowContainer.getTask(v13);
	v13.recycle();
	Task v16 = RootWindowContainer.getOrCreateRootTask(0, 0, v14, 0);
	Task v17 = v14.getRootTask();
	boolean v18 = v14.reparent(v16, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v8 = v14;
	Task v7 = v8;
	int v20 = WindowContainer.mChildren.size();
	Object v21 = WindowContainer.mChildren.get(phiInstruction);
	Task v22 = 0;
	boolean v19 = 0;
	boolean v25 = p1.isVisibleRequested();
	boolean v26 = TransitionController.isCollecting();
	Transition v27 = TransitionController.createTransition(2, 0);
	Task v28 = p1.asTask();
	Transition v29 = TransitionController.requestStartTransition(v27, v28, 0, 0);
	TransitionController.collectExistenceChange(p1);
	Task.mInRemoveTask = 1;
	Task.clearPinnedTaskIfNeed();
	Task v33 = Task.getRootTask();
	Task$$ExternalSyntheticLambda2 v34 = new Task$$ExternalSyntheticLambda2(Task,0,p4);
	Task.forAllActivities(v34);
	this.mRecentTasks.remove(p1);
	Intent v39 = p1.getBaseIntent();
	ComponentName v40 = v39.getComponent();
	ActivityTaskSupervisor$$ExternalSyntheticLambda1 v41 = new ActivityTaskSupervisor$$ExternalSyntheticLambda1();
	Integer v43 = Integer.valueOf(Task.mUserId);
	Intent v44 = new Intent(v45);
	Intent v45 = p1.getBaseIntent();
	Message v47 = PooledLambda.obtainMessage(v41, ActivityTaskManagerService.mAmInternal, v43, v40, v44);
	boolean v48 = ActivityTaskManagerService.mH.sendMessage(v47);
	String v49 = v40.getPackageName();
	ArrayList v50 = new ArrayList();
	ArrayMap v52 = ActivityTaskManagerService.mProcessNames.getMap();
	int v53 = v52.size();
	Object v54 = v52.valueAt(phiInstruction);
	int v55 = v54.size();
	Object v56 = v54.valueAt(phiInstruction);
	boolean v57 = WindowProcessController.mPkgList.contains(v49);
	boolean v58 = v56.shouldKillProcessForRemovedTask(p1);
	LockTaskController v59 = this.mLockTaskController;
	boolean v61 = this.mLockTaskModeTasks.isEmpty();
	Object v62 = this.mLockTaskModeTasks.get(0);
	int v63 = this.mLockTaskModeTasks.size();
	LockTaskController.removeLockedTask(p1);
	boolean v65 = this.mLockTaskModeTasks.isEmpty();
	p1.performClearTaskForReuse(0);
	boolean v67 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	TaskChangeNotificationController v68 = this.mTaskChangeNotificationController;
	ActivityMetricsLogger v70 = this.mTaskSupervisor.getActivityMetricsLogger();
	v70.logWindowState();
	this.mHandler.removeMessages(2);
	Message v73 = this.mHandler.obtainMessage(2);
	TaskChangeNotificationController.forAllLocalListeners(this.mNotifyTaskStackChanged, v73);
	boolean v75 = this.mHandler.sendMessageDelayed(v73, 100);
	this.mRecentTasks.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	Binder.restoreCallingIdentity(v6);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeTask(I)Z","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/Task, isLeafTask()Z > 14 @59 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 11 @18 exception:12,
return 2,
conditional branch(eq, to iindex=-1) 13,7,
return 7,
conditional branch(eq, to iindex=-1) 17,15,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, removeTask(Lcom/android/server/wm/Task;ZZLjava/lang/String;)V > 20,14,12,12,21 @69 exception:22,
6 = getfield < Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 2,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, requestCloseTransitionIfNeeded(Lcom/android/server/wm/WindowContainer;)V > 8,2 @7 exception:9,
3 = getfield < Application, Lcom/android/server/wm/TransitionController, mTransitionPlayer, <Application,Landroid/window/ITransitionPlayer> > 1,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisibleRequested()Z > 2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
9 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, isCollecting()Z > 1 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,4,
12 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, createTransition(II)Lcom/android/server/wm/Transition; > 1,10,4 @19 exception:11,
14 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 2 @23 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, requestStartTransition(Lcom/android/server/wm/Transition;Lcom/android/server/wm/Task;Landroid/window/RemoteTransition;Landroid/window/TransitionRequestInfo$DisplayChange;)Lcom/android/server/wm/Transition; > 1,12,14,4,4 @28 exception:15,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, collectExistenceChange(Lcom/android/server/wm/WindowContainer;)V > 1,2 @31 exception:20,
goto (from iindex= 18 to iindex = 4),
return,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 10,
invokevirtual < Application, Lcom/android/server/wm/Task, removeActivities(Ljava/lang/String;Z)V > 2,5,7 @14 exception:11,
invokevirtual < Application, Lcom/android/server/wm/Task, clearPinnedTaskIfNeed()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
11 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda2>@9,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda2, <init>(Lcom/android/server/wm/Task;ZLjava/lang/String;)V > 11,1,3,2 @11 exception:12,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllActivities(Ljava/util/function/Consumer;)V > 1,11 @14 exception:13,
goto (from iindex= 7 to iindex = 9),
return,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, cleanUpRemovedTaskLocked(Lcom/android/server/wm/Task;ZZ)V > 1,2,3,4 @17 exception:12,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, remove(Lcom/android/server/wm/Task;)V > 6,2 @4 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/Task, getBaseIntent()Landroid/content/Intent; > 2 @7 exception:9,
12 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 10 @11 exception:11,
conditional branch(ne, to iindex=-1) 12,5,
13 = new <Application,Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda1>@40,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda1, <init>()V > 13 @42 exception:14,
15 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 15,
17 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 2,
19 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 17 @51 exception:18,
20 = new <Application,Landroid/content/Intent>@55,
22 = invokevirtual < Application, Lcom/android/server/wm/Task, getBaseIntent()Landroid/content/Intent; > 2 @57 exception:21,
invokespecial < Application, Landroid/content/Intent, <init>(Landroid/content/Intent;)V > 20,22 @61 exception:23,
25 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainMessage(Lcom/android/internal/util/function/QuadConsumer;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Landroid/os/Message; > 13,16,19,12,20 @64 exception:24,
26 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
27 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 26,
29 = invokevirtual < Application, Landroid/os/Handler, sendMessage(Landroid/os/Message;)Z > 27,25 @72 exception:28,
conditional branch(ne, to iindex=-1) 3,5,
31 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 12 @78 exception:30,
32 = new <Application,Ljava/util/ArrayList>@82,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 32 @84 exception:33,
34 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessNames, <Application,Lcom/android/internal/app/ProcessMap> > 34,
37 = invokevirtual < Application, Lcom/android/internal/app/ProcessMap, getMap()Landroid/util/ArrayMap; > 35 @91 exception:36,
70 = phi  69,5,
39 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 37 @97 exception:38,
conditional branch(ge, to iindex=-1) 70,39,
41 = invokevirtual < Application, Landroid/util/ArrayMap, valueAt(I)Ljava/lang/Object; > 37,70 @103 exception:40,
42 = checkcast <Application,Landroid/util/SparseArray>41 <Application,Landroid/util/SparseArray>,
75 = phi  75,70,
66 = phi  65,5,
44 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 42 @110 exception:43,
conditional branch(ge, to iindex=-1) 66,44,
46 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 42,66 @116 exception:45,
47 = checkcast <Application,Lcom/android/server/wm/WindowProcessController>46 <Application,Lcom/android/server/wm/WindowProcessController>,
48 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mUserId, <Primordial,I> > 47,
49 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 48,49,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
51 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mHomeProcess, <Application,Lcom/android/server/wm/WindowProcessController> > 50,
conditional branch(ne, to iindex=-1) 47,51,
52 = getfield < Application, Lcom/android/server/wm/WindowProcessController, mPkgList, <Application,Landroid/util/ArraySet> > 47,
54 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 52,31 @138 exception:53,
conditional branch(ne, to iindex=-1) 54,5,
56 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessController, shouldKillProcessForRemovedTask(Lcom/android/server/wm/Task;)Z > 47,2 @145 exception:55,
conditional branch(ne, to iindex=-1) 56,5,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 13 @22 exception:14,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, clearLockedTask(Lcom/android/server/wm/Task;)V > 15,2 @26 exception:16,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
6 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
7 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
9 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 7,3 @14 exception:8,
conditional branch(ne, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
12 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 10 @22 exception:11,
14 = binaryop(add) 12 , 13,
21 = phi  20,14,
conditional branch(le, to iindex=-1) 21,3,
invokevirtual < Application, Lcom/android/server/wm/LockTaskController, removeLockedTask(Lcom/android/server/wm/Task;)V > 1,2 @44 exception:27,
28 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeTasks, <Application,Ljava/util/ArrayList> > 1,
30 = invokevirtual < Application, Ljava/util/ArrayList, isEmpty()Z > 28 @49 exception:29,
conditional branch(eq, to iindex=-1) 30,3,
invokevirtual < Application, Lcom/android/server/wm/Task, performClearTaskForReuse(Z)V > 2,3 @56 exception:31,
32 = getfield < Application, Lcom/android/server/wm/LockTaskController, mSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 32,
35 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 33 @63 exception:34,
return,
17 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController; > 17 @31 exception:18,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskChangeNotificationController, <Application,Lcom/android/server/wm/TaskChangeNotificationController> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, notifyTaskStackChanged()V > 19 @35 exception:20,
2 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getActivityMetricsLogger()Lcom/android/server/wm/ActivityMetricsLogger; > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/wm/ActivityMetricsLogger, logWindowState()V > 4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mHandler, <Application,Landroid/os/Handler> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 6,7 @12 exception:8,
9 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mHandler, <Application,Landroid/os/Handler> > 1,
11 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(I)Landroid/os/Message; > 9,7 @17 exception:10,
12 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mNotifyTaskStackChanged, <Application,Lcom/android/server/wm/TaskChangeNotificationController$TaskStackConsumer> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, forAllLocalListeners(Lcom/android/server/wm/TaskChangeNotificationController$TaskStackConsumer;Landroid/os/Message;)V > 1,12,11 @23 exception:13,
14 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mHandler, <Application,Landroid/os/Handler> > 1,
17 = invokevirtual < Application, Landroid/os/Handler, sendMessageDelayed(Landroid/os/Message;J)Z > 14,11,15 @30 exception:16,
return,
21 = getfield < Application, Lcom/android/server/wm/Task, isPersistable, <Primordial,Z> > 2,
conditional branch(eq, to iindex=-1) 21,7,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V > 22,7,10 @45 exception:23,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
invokevirtual < Application, Lcom/android/server/wm/RecentTasks, notifyTaskPersisterLocked(Lcom/android/server/wm/Task;Z)V > 4,2,3 @2 exception:5,
return,
putfield 2.< Application, Lcom/android/server/wm/Task, mInRemoveTask, <Primordial,Z> > = 7,
return,
goto (from iindex= 34 to iindex = 6),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @78 exception:26,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @82 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 12,","depth : 0
public boolean removeTask(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isLeafTask();
	this.mTaskSupervisor.removeTask(v4, 1, 1, ""remove-task"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public boolean isLeafTask(){
	int v1 = WindowContainer.mChildren.size();
	Object v2 = WindowContainer.mChildren.get(phiInstruction);
	Task v3 = v2.asTask();
	return 0;
}
-----
depth : 2
public Task asTask(){
	return 0;
}
-----
depth : 1
public void removeTask(Task p1, boolean p2, boolean p3, String p4){
	WindowContainer.mTransitionController.requestCloseTransitionIfNeeded(p1);
	Task.mInRemoveTask = 1;
	p1.removeActivities(p4, 0);
	p0.cleanUpRemovedTaskLocked(p1, p2, p3);
	LockTaskController v4 = this.mService.getLockTaskController();
	v4.clearLockedTask(p1);
	TaskChangeNotificationController v6 = this.mService.getTaskChangeNotificationController();
	v6.notifyTaskStackChanged();
	this.mService.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	return;
}
-----
depth : 2
public void requestCloseTransitionIfNeeded(WindowContainer p1){
	boolean v1 = p1.isVisibleRequested();
	boolean v2 = p0.isCollecting();
	Transition v3 = p0.createTransition(2, 0);
	Task v4 = p1.asTask();
	Transition v5 = p0.requestStartTransition(v3, v4, 0, 0);
	p0.collectExistenceChange(p1);
	return;
}
-----
depth : 2
public void removeActivities(String p1, boolean p2){
	p0.clearPinnedTaskIfNeed();
	Task v2 = p0.getRootTask();
	Task$$ExternalSyntheticLambda2 v2 = new Task$$ExternalSyntheticLambda2(p0,p2,p1);
	p0.forAllActivities(v2);
	return;
}
-----
depth : 2
public void cleanUpRemovedTaskLocked(Task p1, boolean p2, boolean p3){
	this.mRecentTasks.remove(p1);
	Intent v2 = p1.getBaseIntent();
	ComponentName v3 = v2.getComponent();
	ActivityTaskSupervisor$$ExternalSyntheticLambda1 v3 = new ActivityTaskSupervisor$$ExternalSyntheticLambda1();
	Integer v5 = Integer.valueOf(Task.mUserId);
	Intent v5 = new Intent(v6);
	Intent v6 = p1.getBaseIntent();
	Message v8 = PooledLambda.obtainMessage(v3, ActivityTaskManagerService.mAmInternal, v5, v3, v5);
	boolean v9 = ActivityTaskManagerService.mH.sendMessage(v8);
	String v10 = v3.getPackageName();
	ArrayList v10 = new ArrayList();
	ArrayMap v12 = ActivityTaskManagerService.mProcessNames.getMap();
	int v13 = v12.size();
	Object v14 = v12.valueAt(phiInstruction);
	int v15 = v14.size();
	Object v16 = v14.valueAt(phiInstruction);
	boolean v17 = WindowProcessController.mPkgList.contains(v10);
	boolean v18 = v16.shouldKillProcessForRemovedTask(p1);
	return;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public void clearLockedTask(Task p1){
	boolean v1 = this.mLockTaskModeTasks.isEmpty();
	Object v2 = this.mLockTaskModeTasks.get(0);
	int v3 = this.mLockTaskModeTasks.size();
	p0.removeLockedTask(p1);
	boolean v5 = this.mLockTaskModeTasks.isEmpty();
	p1.performClearTaskForReuse(0);
	boolean v7 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	return;
}
-----
depth : 2
public TaskChangeNotificationController getTaskChangeNotificationController(){
	return this.mTaskChangeNotificationController;
}
-----
depth : 2
public void notifyTaskStackChanged(){
	ActivityMetricsLogger v1 = this.mTaskSupervisor.getActivityMetricsLogger();
	v1.logWindowState();
	this.mHandler.removeMessages(2);
	Message v4 = this.mHandler.obtainMessage(2);
	p0.forAllLocalListeners(this.mNotifyTaskStackChanged, v4);
	boolean v6 = this.mHandler.sendMessageDelayed(v4, 100);
	return;
}
-----
depth : 2
public void notifyTaskPersisterLocked(Task p1, boolean p2){
	this.mRecentTasks.notifyTaskPersisterLocked(p1, p2);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public boolean removeTask(int p1){
	long v5 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	Integer v11 = Integer.valueOf(p1);
	PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
	Task v13 = RootWindowContainer.getTask(v12);
	v12.recycle();
	Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
	Task v16 = v13.getRootTask();
	boolean v17 = v13.reparent(v15, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v7 = v13;
	Task v6 = v7;
	int v19 = WindowContainer.mChildren.size();
	Object v20 = WindowContainer.mChildren.get(phiInstruction);
	Task v21 = 0;
	boolean v18 = 0;
	boolean v24 = p1.isVisibleRequested();
	boolean v25 = TransitionController.isCollecting();
	Transition v26 = TransitionController.createTransition(2, 0);
	Task v27 = p1.asTask();
	Transition v28 = TransitionController.requestStartTransition(v26, v27, 0, 0);
	TransitionController.collectExistenceChange(p1);
	Task.mInRemoveTask = 1;
	Task.clearPinnedTaskIfNeed();
	Task v32 = Task.getRootTask();
	Task$$ExternalSyntheticLambda2 v33 = new Task$$ExternalSyntheticLambda2(Task,0,p4);
	Task.forAllActivities(v33);
	this.mRecentTasks.remove(p1);
	Intent v38 = p1.getBaseIntent();
	ComponentName v39 = v38.getComponent();
	ActivityTaskSupervisor$$ExternalSyntheticLambda1 v40 = new ActivityTaskSupervisor$$ExternalSyntheticLambda1();
	Integer v42 = Integer.valueOf(Task.mUserId);
	Intent v43 = new Intent(v44);
	Intent v44 = p1.getBaseIntent();
	Message v46 = PooledLambda.obtainMessage(v40, ActivityTaskManagerService.mAmInternal, v42, v39, v43);
	boolean v47 = ActivityTaskManagerService.mH.sendMessage(v46);
	String v48 = v39.getPackageName();
	ArrayList v49 = new ArrayList();
	ArrayMap v51 = ActivityTaskManagerService.mProcessNames.getMap();
	int v52 = v51.size();
	Object v53 = v51.valueAt(phiInstruction);
	int v54 = v53.size();
	Object v55 = v53.valueAt(phiInstruction);
	boolean v56 = WindowProcessController.mPkgList.contains(v48);
	boolean v57 = v55.shouldKillProcessForRemovedTask(p1);
	LockTaskController v58 = this.mLockTaskController;
	boolean v60 = this.mLockTaskModeTasks.isEmpty();
	Object v61 = this.mLockTaskModeTasks.get(0);
	int v62 = this.mLockTaskModeTasks.size();
	LockTaskController.removeLockedTask(p1);
	boolean v64 = this.mLockTaskModeTasks.isEmpty();
	p1.performClearTaskForReuse(0);
	boolean v66 = ActivityTaskSupervisor.mRootWindowContainer.resumeFocusedTasksTopActivities();
	TaskChangeNotificationController v67 = this.mTaskChangeNotificationController;
	ActivityMetricsLogger v69 = this.mTaskSupervisor.getActivityMetricsLogger();
	v69.logWindowState();
	this.mHandler.removeMessages(2);
	Message v72 = this.mHandler.obtainMessage(2);
	TaskChangeNotificationController.forAllLocalListeners(this.mNotifyTaskStackChanged, v72);
	boolean v74 = this.mHandler.sendMessageDelayed(v72, 100);
	this.mRecentTasks.notifyTaskPersisterLocked(0, 1);
	Task.mInRemoveTask = 0;
	Binder.restoreCallingIdentity(v5);
	WindowManagerThreadPriorityBooster.reset();
	return 1;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","isActivityStartAllowedOnDisplay(ILandroid/content/Intent;Ljava/lang/String;I)Z","0","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @8 exception:10,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, resolveActivityInfoForIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ActivityInfo; > 1,3,4,5,7 @12 exception:12,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @19 exception:15,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, canPlaceEntityOnDisplay(IIILandroid/content/pm/ActivityInfo;)Z > 16,2,9,7,13 @24 exception:17,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @29 exception:31,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @32 exception:32,
return 18,","depth : 0
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	ActivityInfo v4 = p0.resolveActivityInfoForIntent(p2, p3, p4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	boolean v6 = this.mTaskSupervisor.canPlaceEntityOnDisplay(p1, v2, v1, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
-----
","public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	ActivityInfo v4 = p0.resolveActivityInfoForIntent(p2, p3, p4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	boolean v6 = this.mTaskSupervisor.canPlaceEntityOnDisplay(p1, v2, v1, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","isActivityStartAllowedOnDisplay(ILandroid/content/Intent;Ljava/lang/String;I)Z","1","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @8 exception:10,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, resolveActivityInfoForIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ActivityInfo; > 1,3,4,5,7 @12 exception:12,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
9 = invokestatic < Application, Lcom/android/server/wm/ActivityStarter, computeResolveFilterUid(III)I > 5,5,7 @4 exception:8,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveActivity(Landroid/content/Intent;Ljava/lang/String;ILandroid/app/ProfilerInfo;II)Landroid/content/pm/ActivityInfo; > 6,2,3,10,10,4,9 @13 exception:11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
15 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo; > 13,12,4 @19 exception:14,
return 15,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @19 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, canPlaceEntityOnDisplay(IIILandroid/content/pm/ActivityInfo;)Z > 16,2,9,7,13 @24 exception:17,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, canPlaceEntityOnDisplay(IIILcom/android/server/wm/Task;Landroid/content/pm/ActivityInfo;)Z > 1,2,3,4,6,5 @6 exception:7,
return 8,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @29 exception:31,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @32 exception:32,
return 18,","depth : 0
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	ActivityInfo v4 = p0.resolveActivityInfoForIntent(p2, p3, p4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	boolean v6 = this.mTaskSupervisor.canPlaceEntityOnDisplay(p1, v2, v1, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
-----
depth : 1
public ActivityInfo resolveActivityInfoForIntent(Intent p1, String p2, int p3, int p4){
	int v1 = ActivityStarter.computeResolveFilterUid(p4, p4, -10000);
	ActivityInfo v2 = this.mTaskSupervisor.resolveActivity(p1, p2, 0, 0, p3, v1);
	ActivityInfo v3 = this.mAmInternal.getActivityInfoForUser(v2, p3);
	return v3;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public boolean canPlaceEntityOnDisplay(int p1, int p2, int p3, ActivityInfo p4){
	boolean v1 = p0.canPlaceEntityOnDisplay(p1, p2, p3, 0, p4);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	int v5 = ActivityStarter.computeResolveFilterUid(v1, v1, -10000);
	ActivityInfo v6 = this.mTaskSupervisor.resolveActivity(p2, p3, 0, 0, p4, v5);
	ActivityInfo v7 = this.mAmInternal.getActivityInfoForUser(v6, p4);
	ActivityInfo v4 = v7;
	this.sThreadPriorityBooster.boost();
	boolean v11 = ActivityTaskSupervisor.canPlaceEntityOnDisplay(p1, v2, v1, 0, v4);
	boolean v10 = v11;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return v10;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","isActivityStartAllowedOnDisplay(ILandroid/content/Intent;Ljava/lang/String;I)Z","2","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @8 exception:10,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, resolveActivityInfoForIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ActivityInfo; > 1,3,4,5,7 @12 exception:12,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
9 = invokestatic < Application, Lcom/android/server/wm/ActivityStarter, computeResolveFilterUid(III)I > 5,5,7 @4 exception:8,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(lt, to iindex=-1) 1,5,
goto (from iindex= 5 to iindex = 2),
6 = phi  3,1,2,
return 6,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveActivity(Landroid/content/Intent;Ljava/lang/String;ILandroid/app/ProfilerInfo;II)Landroid/content/pm/ActivityInfo; > 6,2,3,10,10,4,9 @13 exception:11,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveIntent(Landroid/content/Intent;Ljava/lang/String;III)Landroid/content/pm/ResolveInfo; > 1,2,3,6,8,7 @6 exception:9,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveActivity(Landroid/content/Intent;Landroid/content/pm/ResolveInfo;ILandroid/app/ProfilerInfo;)Landroid/content/pm/ActivityInfo; > 1,2,10,4,5 @10 exception:11,
return 12,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
15 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo; > 13,12,4 @19 exception:14,
return 15,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @19 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, canPlaceEntityOnDisplay(IIILandroid/content/pm/ActivityInfo;)Z > 16,2,9,7,13 @24 exception:17,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, canPlaceEntityOnDisplay(IIILcom/android/server/wm/Task;Landroid/content/pm/ActivityInfo;)Z > 1,2,3,4,6,5 @6 exception:7,
conditional branch(ne, to iindex=-1) 2,8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mSupportsMultiDisplay, <Primordial,Z> > 9,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, isCallerAllowedToLaunchOnDisplay(IIILandroid/content/pm/ActivityInfo;)Z > 1,3,4,2,6 @12 exception:11,
conditional branch(ne, to iindex=-1) 12,8,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
15 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent; > 13,2 @21 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDwpcHelper, <Application,Lcom/android/server/wm/DisplayWindowPolicyControllerHelper> > 15,
18 = invokevirtual < Application, Lcom/android/server/wm/DisplayWindowPolicyControllerHelper, hasController()Z > 16 @29 exception:17,
conditional branch(eq, to iindex=-1) 18,8,
19 = new <Application,Ljava/util/ArrayList>@35,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 19 @37 exception:20,
conditional branch(eq, to iindex=-1) 6,8,
22 = invokevirtual < Application, Ljava/util/ArrayList, add(Ljava/lang/Object;)Z > 19,6 @42 exception:21,
conditional branch(eq, to iindex=-1) 5,8,
25 = new <Application,Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda6>@47,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda6, <init>(Ljava/util/ArrayList;)V > 25,19 @49 exception:26,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllActivities(Ljava/util/function/Consumer;)V > 5,25 @52 exception:27,
30 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDwpcHelper, <Application,Lcom/android/server/wm/DisplayWindowPolicyControllerHelper> > 15,
32 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getWindowingMode()I > 15 @57 exception:31,
34 = invokevirtual < Application, Lcom/android/server/wm/DisplayWindowPolicyControllerHelper, canContainActivities(Ljava/util/List;I)Z > 30,19,32 @61 exception:33,
conditional branch(ne, to iindex=-1) 34,8,
return 8,
return 8,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @29 exception:31,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @32 exception:32,
return 18,","depth : 0
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	ActivityInfo v4 = p0.resolveActivityInfoForIntent(p2, p3, p4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	boolean v6 = this.mTaskSupervisor.canPlaceEntityOnDisplay(p1, v2, v1, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
-----
depth : 1
public ActivityInfo resolveActivityInfoForIntent(Intent p1, String p2, int p3, int p4){
	int v1 = ActivityStarter.computeResolveFilterUid(p4, p4, -10000);
	ActivityInfo v2 = this.mTaskSupervisor.resolveActivity(p1, p2, 0, 0, p3, v1);
	ActivityInfo v3 = this.mAmInternal.getActivityInfoForUser(v2, p3);
	return v3;
}
-----
depth : 2
public int computeResolveFilterUid(int p1, int p2, int p3){
	return phiInstruction;
}
-----
depth : 2
public ActivityInfo resolveActivity(Intent p1, String p2, int p3, ProfilerInfo p4, int p5, int p6){
	ResolveInfo v1 = p0.resolveIntent(p1, p2, p5, 0, p6);
	ActivityInfo v2 = p0.resolveActivity(p1, v1, p3, p4);
	return v2;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public boolean canPlaceEntityOnDisplay(int p1, int p2, int p3, ActivityInfo p4){
	boolean v1 = p0.canPlaceEntityOnDisplay(p1, p2, p3, 0, p4);
	return v1;
}
-----
depth : 2
public boolean canPlaceEntityOnDisplay(int p1, int p2, int p3, Task p4, ActivityInfo p5){
	boolean v1 = p0.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p5);
	DisplayContent v2 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
	boolean v3 = DisplayContent.mDwpcHelper.hasController();
	ArrayList v3 = new ArrayList();
	boolean v5 = v3.add(p5);
	ActivityTaskSupervisor$$ExternalSyntheticLambda6 v5 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v3);
	p4.forAllActivities(v5);
	int v8 = v2.getWindowingMode();
	boolean v9 = DisplayContent.mDwpcHelper.canContainActivities(v3, v8);
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	int v5 = phiInstruction;
	ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5);
	ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0);
	ActivityInfo v6 = v8;
	ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4);
	ActivityInfo v4 = v9;
	boolean v15 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4);
	DisplayContent v16 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
	boolean v17 = DisplayContent.mDwpcHelper.hasController();
	ArrayList v18 = new ArrayList();
	boolean v20 = v18.add(p4);
	ActivityTaskSupervisor$$ExternalSyntheticLambda6 v21 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v18);
	0.forAllActivities(v21);
	int v24 = v16.getWindowingMode();
	boolean v25 = DisplayContent.mDwpcHelper.canContainActivities(v18, v24);
	boolean v14 = 0;
	boolean v13 = v14;
	Binder.restoreCallingIdentity(v3);
	return v13;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","isActivityStartAllowedOnDisplay(ILandroid/content/Intent;Ljava/lang/String;I)Z","2","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @8 exception:10,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, resolveActivityInfoForIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ActivityInfo; > 1,3,4,5,7 @12 exception:12,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
9 = invokestatic < Application, Lcom/android/server/wm/ActivityStarter, computeResolveFilterUid(III)I > 5,5,7 @4 exception:8,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(lt, to iindex=-1) 1,5,
goto (from iindex= 5 to iindex = 2),
6 = phi  3,1,2,
return 6,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveActivity(Landroid/content/Intent;Ljava/lang/String;ILandroid/app/ProfilerInfo;II)Landroid/content/pm/ActivityInfo; > 6,2,3,10,10,4,9 @13 exception:11,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveIntent(Landroid/content/Intent;Ljava/lang/String;III)Landroid/content/pm/ResolveInfo; > 1,2,3,6,8,7 @6 exception:9,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveActivity(Landroid/content/Intent;Landroid/content/pm/ResolveInfo;ILandroid/app/ProfilerInfo;)Landroid/content/pm/ActivityInfo; > 1,2,10,4,5 @10 exception:11,
return 12,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
15 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo; > 13,12,4 @19 exception:14,
return 15,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @19 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, canPlaceEntityOnDisplay(IIILandroid/content/pm/ActivityInfo;)Z > 16,2,9,7,13 @24 exception:17,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, canPlaceEntityOnDisplay(IIILcom/android/server/wm/Task;Landroid/content/pm/ActivityInfo;)Z > 1,2,3,4,6,5 @6 exception:7,
conditional branch(ne, to iindex=-1) 2,8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mSupportsMultiDisplay, <Primordial,Z> > 9,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, isCallerAllowedToLaunchOnDisplay(IIILandroid/content/pm/ActivityInfo;)Z > 1,3,4,2,6 @12 exception:11,
conditional branch(ne, to iindex=-1) 12,8,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
15 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent; > 13,2 @21 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDwpcHelper, <Application,Lcom/android/server/wm/DisplayWindowPolicyControllerHelper> > 15,
18 = invokevirtual < Application, Lcom/android/server/wm/DisplayWindowPolicyControllerHelper, hasController()Z > 16 @29 exception:17,
conditional branch(eq, to iindex=-1) 18,8,
19 = new <Application,Ljava/util/ArrayList>@35,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 19 @37 exception:20,
conditional branch(eq, to iindex=-1) 6,8,
22 = invokevirtual < Application, Ljava/util/ArrayList, add(Ljava/lang/Object;)Z > 19,6 @42 exception:21,
conditional branch(eq, to iindex=-1) 5,8,
25 = new <Application,Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda6>@47,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda6, <init>(Ljava/util/ArrayList;)V > 25,19 @49 exception:26,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllActivities(Ljava/util/function/Consumer;)V > 5,25 @52 exception:27,
30 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDwpcHelper, <Application,Lcom/android/server/wm/DisplayWindowPolicyControllerHelper> > 15,
32 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getWindowingMode()I > 15 @57 exception:31,
34 = invokevirtual < Application, Lcom/android/server/wm/DisplayWindowPolicyControllerHelper, canContainActivities(Ljava/util/List;I)Z > 30,19,32 @61 exception:33,
conditional branch(ne, to iindex=-1) 34,8,
return 8,
return 8,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @29 exception:31,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @32 exception:32,
return 18,","depth : 0
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	ActivityInfo v4 = p0.resolveActivityInfoForIntent(p2, p3, p4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	boolean v6 = this.mTaskSupervisor.canPlaceEntityOnDisplay(p1, v2, v1, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
-----
depth : 1
public ActivityInfo resolveActivityInfoForIntent(Intent p1, String p2, int p3, int p4){
	int v1 = ActivityStarter.computeResolveFilterUid(p4, p4, -10000);
	ActivityInfo v2 = this.mTaskSupervisor.resolveActivity(p1, p2, 0, 0, p3, v1);
	ActivityInfo v3 = this.mAmInternal.getActivityInfoForUser(v2, p3);
	return v3;
}
-----
depth : 2
public int computeResolveFilterUid(int p1, int p2, int p3){
	return phiInstruction;
}
-----
depth : 2
public ActivityInfo resolveActivity(Intent p1, String p2, int p3, ProfilerInfo p4, int p5, int p6){
	ResolveInfo v1 = p0.resolveIntent(p1, p2, p5, 0, p6);
	ActivityInfo v2 = p0.resolveActivity(p1, v1, p3, p4);
	return v2;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public boolean canPlaceEntityOnDisplay(int p1, int p2, int p3, ActivityInfo p4){
	boolean v1 = p0.canPlaceEntityOnDisplay(p1, p2, p3, 0, p4);
	return v1;
}
-----
depth : 2
public boolean canPlaceEntityOnDisplay(int p1, int p2, int p3, Task p4, ActivityInfo p5){
	boolean v1 = p0.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p5);
	DisplayContent v2 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
	boolean v3 = DisplayContent.mDwpcHelper.hasController();
	ArrayList v3 = new ArrayList();
	boolean v5 = v3.add(p5);
	ActivityTaskSupervisor$$ExternalSyntheticLambda6 v5 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v3);
	p4.forAllActivities(v5);
	int v8 = v2.getWindowingMode();
	boolean v9 = DisplayContent.mDwpcHelper.canContainActivities(v3, v8);
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	int v5 = phiInstruction;
	ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5);
	ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0);
	ActivityInfo v6 = v8;
	ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4);
	ActivityInfo v4 = v9;
	WindowManagerThreadPriorityBooster.boost();
	boolean v16 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4);
	DisplayContent v17 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
	boolean v18 = DisplayContent.mDwpcHelper.hasController();
	ArrayList v19 = new ArrayList();
	boolean v21 = v19.add(p4);
	ActivityTaskSupervisor$$ExternalSyntheticLambda6 v22 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v19);
	0.forAllActivities(v22);
	int v25 = v17.getWindowingMode();
	boolean v26 = DisplayContent.mDwpcHelper.canContainActivities(v19, v25);
	boolean v15 = 0;
	boolean v14 = v15;
	Binder.restoreCallingIdentity(v3);
	return v14;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","isActivityStartAllowedOnDisplay(ILandroid/content/Intent;Ljava/lang/String;I)Z","2","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @8 exception:10,
13 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, resolveActivityInfoForIntent(Landroid/content/Intent;Ljava/lang/String;II)Landroid/content/pm/ActivityInfo; > 1,3,4,5,7 @12 exception:12,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
9 = invokestatic < Application, Lcom/android/server/wm/ActivityStarter, computeResolveFilterUid(III)I > 5,5,7 @4 exception:8,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(lt, to iindex=-1) 1,5,
goto (from iindex= 5 to iindex = 2),
6 = phi  3,1,2,
return 6,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveActivity(Landroid/content/Intent;Ljava/lang/String;ILandroid/app/ProfilerInfo;II)Landroid/content/pm/ActivityInfo; > 6,2,3,10,10,4,9 @13 exception:11,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveIntent(Landroid/content/Intent;Ljava/lang/String;III)Landroid/content/pm/ResolveInfo; > 1,2,3,6,8,7 @6 exception:9,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, resolveActivity(Landroid/content/Intent;Landroid/content/pm/ResolveInfo;ILandroid/app/ProfilerInfo;)Landroid/content/pm/ActivityInfo; > 1,2,10,4,5 @10 exception:11,
return 12,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
15 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, getActivityInfoForUser(Landroid/content/pm/ActivityInfo;I)Landroid/content/pm/ActivityInfo; > 13,12,4 @19 exception:14,
return 15,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @19 exception:15,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, canPlaceEntityOnDisplay(IIILandroid/content/pm/ActivityInfo;)Z > 16,2,9,7,13 @24 exception:17,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, canPlaceEntityOnDisplay(IIILcom/android/server/wm/Task;Landroid/content/pm/ActivityInfo;)Z > 1,2,3,4,6,5 @6 exception:7,
conditional branch(ne, to iindex=-1) 2,8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
10 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mSupportsMultiDisplay, <Primordial,Z> > 9,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, isCallerAllowedToLaunchOnDisplay(IIILandroid/content/pm/ActivityInfo;)Z > 1,3,4,2,6 @12 exception:11,
conditional branch(ne, to iindex=-1) 12,8,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
15 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent; > 13,2 @21 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDwpcHelper, <Application,Lcom/android/server/wm/DisplayWindowPolicyControllerHelper> > 15,
18 = invokevirtual < Application, Lcom/android/server/wm/DisplayWindowPolicyControllerHelper, hasController()Z > 16 @29 exception:17,
conditional branch(eq, to iindex=-1) 18,8,
19 = new <Application,Ljava/util/ArrayList>@35,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 19 @37 exception:20,
conditional branch(eq, to iindex=-1) 6,8,
22 = invokevirtual < Application, Ljava/util/ArrayList, add(Ljava/lang/Object;)Z > 19,6 @42 exception:21,
conditional branch(eq, to iindex=-1) 5,8,
25 = new <Application,Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda6>@47,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskSupervisor$$ExternalSyntheticLambda6, <init>(Ljava/util/ArrayList;)V > 25,19 @49 exception:26,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllActivities(Ljava/util/function/Consumer;)V > 5,25 @52 exception:27,
30 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDwpcHelper, <Application,Lcom/android/server/wm/DisplayWindowPolicyControllerHelper> > 15,
32 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getWindowingMode()I > 15 @57 exception:31,
34 = invokevirtual < Application, Lcom/android/server/wm/DisplayWindowPolicyControllerHelper, canContainActivities(Ljava/util/List;I)Z > 30,19,32 @61 exception:33,
conditional branch(ne, to iindex=-1) 34,8,
return 7,
return 8,
monitorexit 14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @29 exception:31,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @32 exception:32,
return 18,","depth : 0
public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	ActivityInfo v4 = p0.resolveActivityInfoForIntent(p2, p3, p4, v1);
	WindowManagerService.boostPriorityForLockedSection();
	boolean v6 = this.mTaskSupervisor.canPlaceEntityOnDisplay(p1, v2, v1, v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
-----
depth : 1
public ActivityInfo resolveActivityInfoForIntent(Intent p1, String p2, int p3, int p4){
	int v1 = ActivityStarter.computeResolveFilterUid(p4, p4, -10000);
	ActivityInfo v2 = this.mTaskSupervisor.resolveActivity(p1, p2, 0, 0, p3, v1);
	ActivityInfo v3 = this.mAmInternal.getActivityInfoForUser(v2, p3);
	return v3;
}
-----
depth : 2
public int computeResolveFilterUid(int p1, int p2, int p3){
	return phiInstruction;
}
-----
depth : 2
public ActivityInfo resolveActivity(Intent p1, String p2, int p3, ProfilerInfo p4, int p5, int p6){
	ResolveInfo v1 = p0.resolveIntent(p1, p2, p5, 0, p6);
	ActivityInfo v2 = p0.resolveActivity(p1, v1, p3, p4);
	return v2;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public boolean canPlaceEntityOnDisplay(int p1, int p2, int p3, ActivityInfo p4){
	boolean v1 = p0.canPlaceEntityOnDisplay(p1, p2, p3, 0, p4);
	return v1;
}
-----
depth : 2
public boolean canPlaceEntityOnDisplay(int p1, int p2, int p3, Task p4, ActivityInfo p5){
	boolean v1 = p0.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p5);
	DisplayContent v2 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
	boolean v3 = DisplayContent.mDwpcHelper.hasController();
	ArrayList v3 = new ArrayList();
	boolean v5 = v3.add(p5);
	ActivityTaskSupervisor$$ExternalSyntheticLambda6 v5 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v3);
	p4.forAllActivities(v5);
	int v8 = v2.getWindowingMode();
	boolean v9 = DisplayContent.mDwpcHelper.canContainActivities(v3, v8);
	return 1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public boolean isActivityStartAllowedOnDisplay(int p1, Intent p2, String p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	long v3 = Binder.clearCallingIdentity();
	int v5 = phiInstruction;
	ResolveInfo v7 = ActivityTaskSupervisor.resolveIntent(p1, p2, p3, 0, v5);
	ActivityInfo v8 = ActivityTaskSupervisor.resolveActivity(p1, v7, 0, 0);
	ActivityInfo v6 = v8;
	ActivityInfo v9 = this.mAmInternal.getActivityInfoForUser(v6, p4);
	ActivityInfo v4 = v9;
	boolean v15 = ActivityTaskSupervisor.isCallerAllowedToLaunchOnDisplay(p2, p3, p1, p4);
	DisplayContent v16 = this.mRootWindowContainer.getDisplayContentOrCreate(p1);
	boolean v17 = DisplayContent.mDwpcHelper.hasController();
	ArrayList v18 = new ArrayList();
	boolean v20 = v18.add(p4);
	ActivityTaskSupervisor$$ExternalSyntheticLambda6 v21 = new ActivityTaskSupervisor$$ExternalSyntheticLambda6(v18);
	0.forAllActivities(v21);
	int v24 = v16.getWindowingMode();
	boolean v25 = DisplayContent.mDwpcHelper.canContainActivities(v18, v24);
	boolean v14 = 1;
	boolean v13 = v14;
	Binder.restoreCallingIdentity(v3);
	return v13;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","moveRootTaskToDisplay(II)V","0","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @12 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @18 exception:9,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @21 exception:10,
12 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 12,14,
15 = conversion(J) 2,
16 = conversion(J) 3,
17 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
21 = new <Application,[Ljava/lang/Object>@4020 ,
23 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 15 @44 exception:22,
arraystore 21[14] = 23,
25 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @50 exception:24,
arraystore 21[13] = 25,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 17,18,19,14,21 @56 exception:26,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToDisplay(IIZ)V > 30,2,3,13 @61 exception:31,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @64 exception:39,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:49,
return,","depth : 0
public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Object v3 = new Object(2);
	Long v4 = Long.valueOf(p1);
	Long v5 = Long.valueOf(p2);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -1419762046, 5, 0, v3);
	this.mRootWindowContainer.moveRootTaskToDisplay(p1, p2, 1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Object v4 = new Object(2);
	Long v5 = Long.valueOf(p1);
	Long v6 = Long.valueOf(p2);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -1419762046, 5, 0, v4);
	this.mRootWindowContainer.moveRootTaskToDisplay(p1, p2, 1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveRootTaskToDisplay(II)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @12 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @18 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @21 exception:10,
12 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 12,14,
15 = conversion(J) 2,
16 = conversion(J) 3,
17 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
21 = new <Application,[Ljava/lang/Object>@4020 ,
23 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 15 @44 exception:22,
arraystore 21[14] = 23,
25 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @50 exception:24,
arraystore 21[13] = 25,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 17,18,19,14,21 @56 exception:26,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToDisplay(IIZ)V > 30,2,3,13 @61 exception:31,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent; > 1,3 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
20 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 6 @6 exception:19,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToTaskDisplayArea(ILcom/android/server/wm/TaskDisplayArea;Z)V > 1,2,20,4 @10 exception:21,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @64 exception:39,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:49,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Object v3 = new Object(2);
	Long v4 = Long.valueOf(p1);
	Long v5 = Long.valueOf(p2);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -1419762046, 5, 0, v3);
	this.mRootWindowContainer.moveRootTaskToDisplay(p1, p2, 1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void moveRootTaskToDisplay(int p1, int p2, boolean p3){
	DisplayContent v1 = p0.getDisplayContentOrCreate(p2);
	TaskDisplayArea v2 = v1.getDefaultTaskDisplayArea();
	p0.moveRootTaskToTaskDisplayArea(p1, v2, p3);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void moveRootTaskToDisplay(int p1, int p2){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	Object v5 = new Object(2);
	Long v6 = Long.valueOf(p1);
	Long v7 = Long.valueOf(p2);
	ProtoLogImpl v9 = ProtoLogImpl.getSingleInstance();
	v9.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_TASKS, -1419762046, 5, 0, v5);
	DisplayContent v12 = RootWindowContainer.getDisplayContentOrCreate(p2);
	TaskDisplayArea v13 = v12.getDefaultTaskDisplayArea();
	RootWindowContainer.moveRootTaskToTaskDisplayArea(p1, v13, 1);
	Binder.restoreCallingIdentity(v4);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveRootTaskToDisplay(II)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @12 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @18 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @21 exception:10,
12 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 12,14,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToDisplay(IIZ)V > 30,2,3,13 @61 exception:31,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent; > 1,3 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
20 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 6 @6 exception:19,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToTaskDisplayArea(ILcom/android/server/wm/TaskDisplayArea;Z)V > 1,2,20,4 @10 exception:21,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @64 exception:39,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:49,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.moveRootTaskToDisplay(p1, p2, 1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void moveRootTaskToDisplay(int p1, int p2, boolean p3){
	DisplayContent v1 = p0.getDisplayContentOrCreate(p2);
	TaskDisplayArea v2 = v1.getDefaultTaskDisplayArea();
	p0.moveRootTaskToTaskDisplayArea(p1, v2, p3);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void moveRootTaskToDisplay(int p1, int p2){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	DisplayContent v6 = RootWindowContainer.getDisplayContentOrCreate(p2);
	TaskDisplayArea v7 = v6.getDefaultTaskDisplayArea();
	RootWindowContainer.moveRootTaskToTaskDisplayArea(p1, v7, 1);
	Binder.restoreCallingIdentity(v4);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveRootTaskToDisplay(II)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @12 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @18 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @21 exception:10,
12 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 12,14,
15 = conversion(J) 2,
16 = conversion(J) 3,
17 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
21 = new <Application,[Ljava/lang/Object>@4020 ,
23 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 15 @44 exception:22,
arraystore 21[14] = 23,
25 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @50 exception:24,
arraystore 21[13] = 25,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 17,18,19,14,21 @56 exception:26,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToDisplay(IIZ)V > 30,2,3,13 @61 exception:31,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent; > 1,3 @0 exception:5,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDisplayManager, <Application,Landroid/hardware/display/DisplayManager> > 1,
conditional branch(ne, to iindex=-1) 6,5,
8 = invokevirtual < Application, Landroid/hardware/display/DisplayManager, getDisplay(I)Landroid/view/Display; > 6,2 @13 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
9 = new <Application,Lcom/android/server/wm/DisplayContent>@20,
invokespecial < Application, Lcom/android/server/wm/DisplayContent, <init>(Landroid/view/Display;Lcom/android/server/wm/RootWindowContainer;)V > 9,8,1 @22 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, addChild(Lcom/android/server/wm/WindowContainer;I)V > 1,9,11 @27 exception:12,
return 9,
conditional branch(eq, to iindex=-1) 6,7,
20 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 6 @6 exception:19,
2 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDisplayAreaPolicy, <Application,Lcom/android/server/wm/DisplayAreaPolicy> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayAreaPolicy, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToTaskDisplayArea(ILcom/android/server/wm/TaskDisplayArea;Z)V > 1,2,20,4 @10 exception:21,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 1,2 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
20 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 6 @6 exception:19,
conditional branch(eq, to iindex=-1) 20,7,
conditional branch(eq, to iindex=-1) 3,7,
conditional branch(eq, to iindex=-1) 20,3,
invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/TaskDisplayArea;Z)V > 6,3,4 @16 exception:62,
invokevirtual < Application, Lcom/android/server/wm/Task, resumeNextFocusAfterReparent()V > 6 @19 exception:63,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @64 exception:39,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:49,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Object v3 = new Object(2);
	Long v4 = Long.valueOf(p1);
	Long v5 = Long.valueOf(p2);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -1419762046, 5, 0, v3);
	this.mRootWindowContainer.moveRootTaskToDisplay(p1, p2, 1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void moveRootTaskToDisplay(int p1, int p2, boolean p3){
	DisplayContent v1 = p0.getDisplayContentOrCreate(p2);
	TaskDisplayArea v2 = v1.getDefaultTaskDisplayArea();
	p0.moveRootTaskToTaskDisplayArea(p1, v2, p3);
	return;
}
-----
depth : 2
public DisplayContent getDisplayContentOrCreate(int p1){
	DisplayContent v1 = p0.getDisplayContent(p1);
	Display v2 = this.mDisplayManager.getDisplay(p1);
	DisplayContent v2 = new DisplayContent(v2,p0);
	p0.addChild(v2, -2147483648);
	return v2;
}
-----
depth : 2
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 2
public void moveRootTaskToTaskDisplayArea(int p1, TaskDisplayArea p2, boolean p3){
	Task v1 = p0.getRootTask(p1);
	TaskDisplayArea v2 = v1.getDisplayArea();
	v1.reparent(p2, p3);
	v1.resumeNextFocusAfterReparent();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void moveRootTaskToDisplay(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p1);
	Long v8 = Long.valueOf(p2);
	ProtoLogImpl v11 = new ProtoLogImpl(v12,1048576,v14);
	File v12 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v14 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v11;
	ProtoLogImpl v10 = this.sServiceInstance;
	boolean v18 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v20 = p1.isLogToLogcat();
	String v21 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v21, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	DisplayContent v25 = RootWindowContainer.getDisplayContent(p2);
	Display v26 = this.mDisplayManager.getDisplay(p2);
	DisplayContent v27 = new DisplayContent(v26,RootWindowContainer);
	RootWindowContainer.addChild(v27, -2147483648);
	DisplayContent v24 = v27;
	TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	TaskDisplayArea v30 = v31;
	Task v33 = RootWindowContainer.getRootTask(p1);
	TaskDisplayArea v34 = v33.getDisplayArea();
	v33.reparent(v30, p3);
	v33.resumeNextFocusAfterReparent();
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveRootTaskToDisplay(II)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @12 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @18 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @21 exception:10,
12 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 12,14,
15 = conversion(J) 2,
16 = conversion(J) 3,
17 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
21 = new <Application,[Ljava/lang/Object>@4020 ,
23 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 15 @44 exception:22,
arraystore 21[14] = 23,
25 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @50 exception:24,
arraystore 21[13] = 25,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 17,18,19,14,21 @56 exception:26,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToDisplay(IIZ)V > 30,2,3,13 @61 exception:31,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent; > 1,3 @0 exception:5,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDisplayManager, <Application,Landroid/hardware/display/DisplayManager> > 1,
conditional branch(ne, to iindex=-1) 6,5,
8 = invokevirtual < Application, Landroid/hardware/display/DisplayManager, getDisplay(I)Landroid/view/Display; > 6,2 @13 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
9 = new <Application,Lcom/android/server/wm/DisplayContent>@20,
invokespecial < Application, Lcom/android/server/wm/DisplayContent, <init>(Landroid/view/Display;Lcom/android/server/wm/RootWindowContainer;)V > 9,8,1 @22 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, addChild(Lcom/android/server/wm/WindowContainer;I)V > 1,9,11 @27 exception:12,
return 9,
conditional branch(eq, to iindex=-1) 6,7,
20 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 6 @6 exception:19,
2 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDisplayAreaPolicy, <Application,Lcom/android/server/wm/DisplayAreaPolicy> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayAreaPolicy, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToTaskDisplayArea(ILcom/android/server/wm/TaskDisplayArea;Z)V > 1,2,20,4 @10 exception:21,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 1,2 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
20 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 6 @6 exception:19,
conditional branch(eq, to iindex=-1) 20,7,
conditional branch(eq, to iindex=-1) 3,7,
conditional branch(eq, to iindex=-1) 20,3,
invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/TaskDisplayArea;Z)V > 6,3,4 @16 exception:62,
invokevirtual < Application, Lcom/android/server/wm/Task, resumeNextFocusAfterReparent()V > 6 @19 exception:63,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @64 exception:39,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:49,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Object v3 = new Object(2);
	Long v4 = Long.valueOf(p1);
	Long v5 = Long.valueOf(p2);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -1419762046, 5, 0, v3);
	this.mRootWindowContainer.moveRootTaskToDisplay(p1, p2, 1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void moveRootTaskToDisplay(int p1, int p2, boolean p3){
	DisplayContent v1 = p0.getDisplayContentOrCreate(p2);
	TaskDisplayArea v2 = v1.getDefaultTaskDisplayArea();
	p0.moveRootTaskToTaskDisplayArea(p1, v2, p3);
	return;
}
-----
depth : 2
public DisplayContent getDisplayContentOrCreate(int p1){
	DisplayContent v1 = p0.getDisplayContent(p1);
	Display v2 = this.mDisplayManager.getDisplay(p1);
	DisplayContent v2 = new DisplayContent(v2,p0);
	p0.addChild(v2, -2147483648);
	return v2;
}
-----
depth : 2
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 2
public void moveRootTaskToTaskDisplayArea(int p1, TaskDisplayArea p2, boolean p3){
	Task v1 = p0.getRootTask(p1);
	TaskDisplayArea v2 = v1.getDisplayArea();
	v1.reparent(p2, p3);
	v1.resumeNextFocusAfterReparent();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerThreadPriorityBooster.boost();
	long v6 = Binder.clearCallingIdentity();
	Object v7 = new Object(2);
	Long v8 = Long.valueOf(p1);
	Long v9 = Long.valueOf(p2);
	ProtoLogImpl v12 = new ProtoLogImpl(v13,1048576,v15);
	File v13 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v15 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v12;
	ProtoLogImpl v11 = this.sServiceInstance;
	boolean v19 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v21 = p1.isLogToLogcat();
	String v22 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v22, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	DisplayContent v26 = RootWindowContainer.getDisplayContent(p2);
	Display v27 = this.mDisplayManager.getDisplay(p2);
	DisplayContent v28 = new DisplayContent(v27,RootWindowContainer);
	RootWindowContainer.addChild(v28, -2147483648);
	DisplayContent v25 = v28;
	TaskDisplayArea v32 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	TaskDisplayArea v31 = v32;
	Task v34 = RootWindowContainer.getRootTask(p1);
	TaskDisplayArea v35 = v34.getDisplayArea();
	v34.reparent(v31, p3);
	v34.resumeNextFocusAfterReparent();
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveRootTaskToDisplay(II)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @12 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @18 exception:9,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @21 exception:10,
12 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 12,14,
15 = conversion(J) 2,
16 = conversion(J) 3,
17 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
21 = new <Application,[Ljava/lang/Object>@4020 ,
23 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 15 @44 exception:22,
arraystore 21[14] = 23,
25 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @50 exception:24,
arraystore 21[13] = 25,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 17,18,19,14,21 @56 exception:26,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
30 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToDisplay(IIZ)V > 30,2,3,13 @61 exception:31,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContentOrCreate(I)Lcom/android/server/wm/DisplayContent; > 1,3 @0 exception:5,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDisplayManager, <Application,Landroid/hardware/display/DisplayManager> > 1,
conditional branch(ne, to iindex=-1) 6,5,
8 = invokevirtual < Application, Landroid/hardware/display/DisplayManager, getDisplay(I)Landroid/view/Display; > 6,2 @13 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
9 = new <Application,Lcom/android/server/wm/DisplayContent>@20,
invokespecial < Application, Lcom/android/server/wm/DisplayContent, <init>(Landroid/view/Display;Lcom/android/server/wm/RootWindowContainer;)V > 9,8,1 @22 exception:10,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, addChild(Lcom/android/server/wm/WindowContainer;I)V > 1,9,11 @27 exception:12,
return 9,
conditional branch(eq, to iindex=-1) 6,7,
20 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 6 @6 exception:19,
2 = getfield < Application, Lcom/android/server/wm/DisplayContent, mDisplayAreaPolicy, <Application,Lcom/android/server/wm/DisplayAreaPolicy> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayAreaPolicy, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, moveRootTaskToTaskDisplayArea(ILcom/android/server/wm/TaskDisplayArea;Z)V > 1,2,20,4 @10 exception:21,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 1,2 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
20 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 6 @6 exception:19,
conditional branch(eq, to iindex=-1) 20,7,
conditional branch(eq, to iindex=-1) 3,7,
conditional branch(eq, to iindex=-1) 20,3,
invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/TaskDisplayArea;Z)V > 6,3,4 @16 exception:62,
invokevirtual < Application, Lcom/android/server/wm/Task, resumeNextFocusAfterReparent()V > 6 @19 exception:63,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @64 exception:39,
monitorexit 8,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @68 exception:49,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void moveRootTaskToDisplay(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Object v3 = new Object(2);
	Long v4 = Long.valueOf(p1);
	Long v5 = Long.valueOf(p2);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -1419762046, 5, 0, v3);
	this.mRootWindowContainer.moveRootTaskToDisplay(p1, p2, 1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public void moveRootTaskToDisplay(int p1, int p2, boolean p3){
	DisplayContent v1 = p0.getDisplayContentOrCreate(p2);
	TaskDisplayArea v2 = v1.getDefaultTaskDisplayArea();
	p0.moveRootTaskToTaskDisplayArea(p1, v2, p3);
	return;
}
-----
depth : 2
public DisplayContent getDisplayContentOrCreate(int p1){
	DisplayContent v1 = p0.getDisplayContent(p1);
	Display v2 = this.mDisplayManager.getDisplay(p1);
	DisplayContent v2 = new DisplayContent(v2,p0);
	p0.addChild(v2, -2147483648);
	return v2;
}
-----
depth : 2
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 2
public void moveRootTaskToTaskDisplayArea(int p1, TaskDisplayArea p2, boolean p3){
	Task v1 = p0.getRootTask(p1);
	TaskDisplayArea v2 = v1.getDisplayArea();
	v1.reparent(p2, p3);
	v1.resumeNextFocusAfterReparent();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void moveRootTaskToDisplay(int p1, int p2){
	long v5 = Binder.clearCallingIdentity();
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p1);
	Long v8 = Long.valueOf(p2);
	ProtoLogImpl v11 = new ProtoLogImpl(v12,1048576,v14);
	File v12 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v14 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v11;
	ProtoLogImpl v10 = this.sServiceInstance;
	boolean v18 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v20 = p1.isLogToLogcat();
	String v21 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v21, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	DisplayContent v25 = RootWindowContainer.getDisplayContent(p2);
	Display v26 = this.mDisplayManager.getDisplay(p2);
	DisplayContent v27 = new DisplayContent(v26,RootWindowContainer);
	RootWindowContainer.addChild(v27, -2147483648);
	DisplayContent v24 = v27;
	TaskDisplayArea v31 = this.mDisplayAreaPolicy.getDefaultTaskDisplayArea();
	TaskDisplayArea v30 = v31;
	Task v33 = RootWindowContainer.getRootTask(p1);
	TaskDisplayArea v34 = v33.getDisplayArea();
	v33.reparent(v30, p3);
	v33.resumeNextFocusAfterReparent();
	Binder.restoreCallingIdentity(v5);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"


"Lcom/android/server/wm/ActivityTaskManagerService","startActivityFromRecents(ILandroid/os/Bundle;)I","0","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:10,
13 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 3 @17 exception:12,
15 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @21 exception:14,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, startActivityFromRecents(IIILcom/android/server/wm/SafeActivityOptions;)I > 16,9,11,2,13 @27 exception:17,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 15 @31 exception:23,
return 18,","depth : 0
public int startActivityFromRecents(int p1, Bundle p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	SafeActivityOptions v4 = SafeActivityOptions.fromBundle(p2);
	long v5 = Binder.clearCallingIdentity();
	int v6 = this.mTaskSupervisor.startActivityFromRecents(v2, v3, p1, v4);
	Binder.restoreCallingIdentity(v5);
	return v6;
}
-----
","public int startActivityFromRecents(int p1, Bundle p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	SafeActivityOptions v4 = SafeActivityOptions.fromBundle(p2);
	long v5 = Binder.clearCallingIdentity();
	int v6 = this.mTaskSupervisor.startActivityFromRecents(v2, v3, p1, v4);
	Binder.restoreCallingIdentity(v5);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityFromRecents(ILandroid/os/Bundle;)I","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:10,
13 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 3 @17 exception:12,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
15 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @21 exception:14,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, startActivityFromRecents(IIILcom/android/server/wm/SafeActivityOptions;)I > 16,9,11,2,13 @27 exception:17,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 15 @31 exception:23,
return 18,","depth : 0
public int startActivityFromRecents(int p1, Bundle p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	SafeActivityOptions v4 = SafeActivityOptions.fromBundle(p2);
	long v5 = Binder.clearCallingIdentity();
	int v6 = this.mTaskSupervisor.startActivityFromRecents(v2, v3, p1, v4);
	Binder.restoreCallingIdentity(v5);
	return v6;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
","public int startActivityFromRecents(int p1, Bundle p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	SafeActivityOptions v5 = new SafeActivityOptions(v6);
	ActivityOptions v6 = ActivityOptions.fromBundle(p2);
	SafeActivityOptions v4 = phiInstruction;
	long v8 = Binder.clearCallingIdentity();
	int v9 = this.mTaskSupervisor.startActivityFromRecents(v2, v3, p1, v4);
	Binder.restoreCallingIdentity(v8);
	return v9;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityFromRecents(ILandroid/os/Bundle;)I","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @9 exception:8,
11 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:10,
13 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 3 @17 exception:12,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/app/ActivityOptions>@2,
invokespecial < Application, Landroid/app/ActivityOptions, <init>(Landroid/os/Bundle;)V > 3,1 @4 exception:4,
goto (from iindex= 3 to iindex = 2),
5 = phi  3,2,
return 5,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
15 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @21 exception:14,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
18 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, startActivityFromRecents(IIILcom/android/server/wm/SafeActivityOptions;)I > 16,9,11,2,13 @27 exception:17,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 15 @31 exception:23,
return 18,","depth : 0
public int startActivityFromRecents(int p1, Bundle p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	SafeActivityOptions v4 = SafeActivityOptions.fromBundle(p2);
	long v5 = Binder.clearCallingIdentity();
	int v6 = this.mTaskSupervisor.startActivityFromRecents(v2, v3, p1, v4);
	Binder.restoreCallingIdentity(v5);
	return v6;
}
-----
depth : 1
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions fromBundle(Bundle p1){
	ActivityOptions v0 = new ActivityOptions(p1);
	return phiInstruction;
}
-----
","public int startActivityFromRecents(int p1, Bundle p2){
	int v2 = Binder.getCallingPid();
	int v3 = Binder.getCallingUid();
	SafeActivityOptions v5 = new SafeActivityOptions(v6);
	ActivityOptions v7 = new ActivityOptions(p1);
	ActivityOptions v6 = phiInstruction;
	SafeActivityOptions v4 = phiInstruction;
	long v10 = Binder.clearCallingIdentity();
	int v11 = this.mTaskSupervisor.startActivityFromRecents(v2, v3, p1, v4);
	Binder.restoreCallingIdentity(v10);
	return v11;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getLockTaskModeState()I","0","3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskModeState()I > 3 @4 exception:4,
return 5,","depth : 0
public int getLockTaskModeState(){
	LockTaskController v1 = p0.getLockTaskController();
	int v2 = v1.getLockTaskModeState();
	return v2;
}
-----
","public int getLockTaskModeState(){
	LockTaskController v1 = p0.getLockTaskController();
	int v2 = v1.getLockTaskModeState();
	return v2;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","getLockTaskModeState()I","1","3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskModeState()I > 3 @4 exception:4,
2 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeState, <Primordial,I> > 1,
return 2,
return 5,","depth : 0
public int getLockTaskModeState(){
	LockTaskController v1 = p0.getLockTaskController();
	int v2 = v1.getLockTaskModeState();
	return v2;
}
-----
depth : 1
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 1
public int getLockTaskModeState(){
	return this.mLockTaskModeState;
}
-----
","public int getLockTaskModeState(){
	LockTaskController v1 = this.mLockTaskController;
	int v2 = this.mLockTaskModeState;
	return v2;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","getAppTasks(Ljava/lang/String;)Ljava/util/List;","0","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,2 @0 exception:3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:4,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getAppTasks(Ljava/lang/String;I)Ljava/util/List; > 1,2,5 @7 exception:6,
return 7,","depth : 0
public List getAppTasks(String p1){
	p0.assertPackageMatchesCallingUid(p1);
	int v2 = Binder.getCallingUid();
	List v3 = p0.getAppTasks(p1, v2);
	return v3;
}
-----
","public List getAppTasks(String p1){
	p0.assertPackageMatchesCallingUid(p1);
	int v2 = Binder.getCallingUid();
	List v3 = p0.getAppTasks(p1, v2);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAppTasks(Ljava/lang/String;)Ljava/util/List;","1","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,2 @0 exception:3,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:4,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getAppTasks(Ljava/lang/String;I)Ljava/util/List; > 1,2,5 @7 exception:6,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @7 exception:7,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getAppTasksList(ILjava/lang/String;)Ljava/util/ArrayList; > 8,3,2 @12 exception:9,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @17 exception:21,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @20 exception:22,
return 10,
return 7,","depth : 0
public List getAppTasks(String p1){
	p0.assertPackageMatchesCallingUid(p1);
	int v2 = Binder.getCallingUid();
	List v3 = p0.getAppTasks(p1, v2);
	return v3;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public List getAppTasks(String p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v3 = this.mRecentTasks.getAppTasksList(p2, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v1);
	return v3;
}
-----
","public List getAppTasks(String p1){
	int v4 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v8 = this.mRecentTasks.getAppTasksList(v4, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v6);
	List v5 = v8;
	return v5;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getAppTasks(Ljava/lang/String;)Ljava/util/List;","2","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,2 @0 exception:3,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isSameApp(ILjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
return,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:4,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getAppTasks(Ljava/lang/String;I)Ljava/util/List; > 1,2,5 @7 exception:6,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @7 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
8 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getAppTasksList(ILjava/lang/String;)Ljava/util/ArrayList; > 8,3,2 @12 exception:9,
4 = new <Application,Ljava/util/ArrayList>@0,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTasks, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 6 @7 exception:7,
37 = phi  36,9,
conditional branch(ge, to iindex=-1) 37,8,
return 4,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @17 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @20 exception:22,
return 10,
return 7,","depth : 0
public List getAppTasks(String p1){
	p0.assertPackageMatchesCallingUid(p1);
	int v2 = Binder.getCallingUid();
	List v3 = p0.getAppTasks(p1, v2);
	return v3;
}
-----
depth : 1
public void assertPackageMatchesCallingUid(String p1){
	return;
}
-----
depth : 1
public List getAppTasks(String p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ArrayList v3 = this.mRecentTasks.getAppTasksList(p2, p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v1);
	return v3;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public ArrayList getAppTasksList(int p1, String p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mTasks.size();
	return v0;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public List getAppTasks(String p1){
	int v4 = Binder.getCallingUid();
	long v6 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	ArrayList v10 = new ArrayList();
	int v12 = this.mTasks.size();
	ArrayList v9 = v10;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v6);
	List v5 = v9;
	return v5;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","isInLockTaskMode()Z","0","3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskModeState()I > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 4 to iindex = 2),
6 = phi  5,4,
return 6,","depth : 0
public boolean isInLockTaskMode(){
	int v1 = p0.getLockTaskModeState();
	return phiInstruction;
}
-----
","public boolean isInLockTaskMode(){
	int v1 = p0.getLockTaskModeState();
	return phiInstruction;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","isInLockTaskMode()Z","1","3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskModeState()I > 1 @0 exception:2,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskModeState()I > 3 @4 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 4 to iindex = 2),
6 = phi  5,4,
return 6,","depth : 0
public boolean isInLockTaskMode(){
	int v1 = p0.getLockTaskModeState();
	return phiInstruction;
}
-----
depth : 1
public int getLockTaskModeState(){
	LockTaskController v1 = p0.getLockTaskController();
	int v2 = v1.getLockTaskModeState();
	return v2;
}
-----
","public boolean isInLockTaskMode(){
	LockTaskController v2 = ActivityTaskManagerService.getLockTaskController();
	int v3 = v2.getLockTaskModeState();
	int v1 = v3;
	return phiInstruction;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","isInLockTaskMode()Z","1","3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskModeState()I > 1 @0 exception:2,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskModeState()I > 3 @4 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 3,4,
6 = phi  5,4,
return 6,","depth : 0
public boolean isInLockTaskMode(){
	int v1 = p0.getLockTaskModeState();
	return phiInstruction;
}
-----
depth : 1
public int getLockTaskModeState(){
	LockTaskController v1 = p0.getLockTaskController();
	int v2 = v1.getLockTaskModeState();
	return v2;
}
-----
","public boolean isInLockTaskMode(){
	LockTaskController v2 = ActivityTaskManagerService.getLockTaskController();
	int v3 = v2.getLockTaskModeState();
	int v1 = v3;
	return phiInstruction;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","isInLockTaskMode()Z","2","3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskModeState()I > 1 @0 exception:2,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskModeState()I > 3 @4 exception:4,
2 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeState, <Primordial,I> > 1,
return 2,
return 5,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 4 to iindex = 2),
6 = phi  5,4,
return 6,","depth : 0
public boolean isInLockTaskMode(){
	int v1 = p0.getLockTaskModeState();
	return phiInstruction;
}
-----
depth : 1
public int getLockTaskModeState(){
	LockTaskController v1 = p0.getLockTaskController();
	int v2 = v1.getLockTaskModeState();
	return v2;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public int getLockTaskModeState(){
	return this.mLockTaskModeState;
}
-----
","public boolean isInLockTaskMode(){
	LockTaskController v2 = this.mLockTaskController;
	int v3 = this.mLockTaskModeState;
	int v1 = v3;
	return phiInstruction;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","isInLockTaskMode()Z","2","3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskModeState()I > 1 @0 exception:2,
3 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getLockTaskController()Lcom/android/server/wm/LockTaskController; > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mLockTaskController, <Application,Lcom/android/server/wm/LockTaskController> > 1,
return 2,
5 = invokevirtual < Application, Lcom/android/server/wm/LockTaskController, getLockTaskModeState()I > 3 @4 exception:4,
2 = getfield < Application, Lcom/android/server/wm/LockTaskController, mLockTaskModeState, <Primordial,I> > 1,
return 2,
return 5,
conditional branch(eq, to iindex=-1) 3,4,
6 = phi  5,4,
return 6,","depth : 0
public boolean isInLockTaskMode(){
	int v1 = p0.getLockTaskModeState();
	return phiInstruction;
}
-----
depth : 1
public int getLockTaskModeState(){
	LockTaskController v1 = p0.getLockTaskController();
	int v2 = v1.getLockTaskModeState();
	return v2;
}
-----
depth : 2
public LockTaskController getLockTaskController(){
	return this.mLockTaskController;
}
-----
depth : 2
public int getLockTaskModeState(){
	return this.mLockTaskModeState;
}
-----
","public boolean isInLockTaskMode(){
	LockTaskController v2 = this.mLockTaskController;
	int v3 = this.mLockTaskModeState;
	int v1 = v3;
	return phiInstruction;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","registerTaskStackListener(Landroid/app/ITaskStackListener;)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskChangeNotificationController, <Application,Lcom/android/server/wm/TaskChangeNotificationController> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, registerTaskStackListener(Landroid/app/ITaskStackListener;)V > 5,2 @7 exception:6,
return,","depth : 0
public void registerTaskStackListener(ITaskStackListener p1){
	ActivityTaskManagerService.enforceTaskPermission(""registerTaskStackListener()"");
	this.mTaskChangeNotificationController.registerTaskStackListener(p1);
	return;
}
-----
","public void registerTaskStackListener(ITaskStackListener p1){
	ActivityTaskManagerService.enforceTaskPermission(""registerTaskStackListener()"");
	this.mTaskChangeNotificationController.registerTaskStackListener(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","registerTaskStackListener(Landroid/app/ITaskStackListener;)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskChangeNotificationController, <Application,Lcom/android/server/wm/TaskChangeNotificationController> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, registerTaskStackListener(Landroid/app/ITaskStackListener;)V > 5,2 @7 exception:6,
3 = instanceof 2 <Application,Landroid/os/Binder>,
conditional branch(eq, to iindex=-1) 3,4,
11 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
monitorenter 11,
12 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
14 = invokevirtual < Application, Ljava/util/ArrayList, contains(Ljava/lang/Object;)Z > 12,2 @9 exception:13,
conditional branch(ne, to iindex=-1) 14,4,
15 = instanceof 2 <Application,Landroid/app/TaskStackListener>,
conditional branch(eq, to iindex=-1) 15,4,
16 = checkcast <Application,Landroid/app/TaskStackListener>2 <Application,Landroid/app/TaskStackListener>,
invokevirtual < Application, Landroid/app/TaskStackListener, setIsLocal()V > 16 @22 exception:17,
20 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
22 = invokevirtual < Application, Ljava/util/ArrayList, add(Ljava/lang/Object;)Z > 20,2 @27 exception:21,
monitorexit 11,
goto (from iindex= 16 to iindex = 19),
return,
return,","depth : 0
public void registerTaskStackListener(ITaskStackListener p1){
	ActivityTaskManagerService.enforceTaskPermission(""registerTaskStackListener()"");
	this.mTaskChangeNotificationController.registerTaskStackListener(p1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void registerTaskStackListener(ITaskStackListener p1){
	boolean v1 = this.mLocalTaskStackListeners.contains(p1);
	p1.setIsLocal();
	boolean v3 = this.mLocalTaskStackListeners.add(p1);
	return;
}
-----
","public void registerTaskStackListener(ITaskStackListener p1){
	boolean v6 = this.mLocalTaskStackListeners.contains(p1);
	p1.setIsLocal();
	boolean v8 = this.mLocalTaskStackListeners.add(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","registerTaskStackListener(Landroid/app/ITaskStackListener;)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskChangeNotificationController, <Application,Lcom/android/server/wm/TaskChangeNotificationController> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, registerTaskStackListener(Landroid/app/ITaskStackListener;)V > 5,2 @7 exception:6,
3 = instanceof 2 <Application,Landroid/os/Binder>,
conditional branch(eq, to iindex=-1) 3,4,
11 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
monitorenter 11,
12 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
14 = invokevirtual < Application, Ljava/util/ArrayList, contains(Ljava/lang/Object;)Z > 12,2 @9 exception:13,
conditional branch(ne, to iindex=-1) 14,4,
15 = instanceof 2 <Application,Landroid/app/TaskStackListener>,
conditional branch(eq, to iindex=-1) 15,4,
20 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
22 = invokevirtual < Application, Ljava/util/ArrayList, add(Ljava/lang/Object;)Z > 20,2 @27 exception:21,
monitorexit 11,
goto (from iindex= 16 to iindex = 19),
return,
return,","depth : 0
public void registerTaskStackListener(ITaskStackListener p1){
	ActivityTaskManagerService.enforceTaskPermission(""registerTaskStackListener()"");
	this.mTaskChangeNotificationController.registerTaskStackListener(p1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void registerTaskStackListener(ITaskStackListener p1){
	boolean v1 = this.mLocalTaskStackListeners.contains(p1);
	boolean v2 = this.mLocalTaskStackListeners.add(p1);
	return;
}
-----
","public void registerTaskStackListener(ITaskStackListener p1){
	boolean v6 = this.mLocalTaskStackListeners.contains(p1);
	boolean v7 = this.mLocalTaskStackListeners.add(p1);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","isAssistDataAllowedOnCurrentActivity()Z","0","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeAssistant()Z > 5 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 5 @20 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mUserId, <Primordial,I> > 10,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:12,
14 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache, getInstance()Landroid/app/admin/DevicePolicyCache; > @37 exception:13,
16 = invokevirtual < Application, Landroid/app/admin/DevicePolicyCache, isScreenCaptureAllowed(I)Z > 14,11 @41 exception:15,
return 16,","depth : 0
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
-----
","public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","isAssistDataAllowedOnCurrentActivity()Z","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @6 exception:4,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeAssistant()Z > 5 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 5 @20 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 10,6,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mUserId, <Primordial,I> > 10,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
14 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache, getInstance()Landroid/app/admin/DevicePolicyCache; > @37 exception:13,
1 = load_metadata: <Application,Landroid/app/admin/DevicePolicyManagerInternal>, <Primordial,Ljava/lang/Class>,
3 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 1 @2 exception:2,
4 = checkcast <Application,Landroid/app/admin/DevicePolicyManagerInternal>3 <Application,Landroid/app/admin/DevicePolicyManagerInternal>,
conditional branch(eq, to iindex=-1) 4,5,
9 = invokevirtual < Application, Landroid/app/admin/DevicePolicyManagerInternal, getDevicePolicyCache()Landroid/app/admin/DevicePolicyCache; > 4 @10 exception:8,
goto (from iindex= 7 to iindex = 5),
10 = phi  9,7,
return 10,
16 = invokevirtual < Application, Landroid/app/admin/DevicePolicyCache, isScreenCaptureAllowed(I)Z > 14,11 @41 exception:15,
return 16,","depth : 0
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public DevicePolicyCache getInstance(){
	Object v1 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache v2 = v1.getDevicePolicyCache();
	return phiInstruction;
}
-----
","public boolean isAssistDataAllowedOnCurrentActivity(){
	this.sThreadPriorityBooster.boost();
	Task v4 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v3 = v4;
	boolean v5 = v3.isActivityTypeAssistant();
	ActivityRecord v7 = TaskFragment.getTopNonFinishingActivity(1);
	ActivityRecord v6 = v7;
	this.sThreadPriorityBooster.reset();
	Object v11 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache v12 = v11.getDevicePolicyCache();
	DevicePolicyCache v10 = phiInstruction;
	boolean v13 = v10.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v13;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","isAssistDataAllowedOnCurrentActivity()Z","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @6 exception:4,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeAssistant()Z > 5 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 5 @20 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 10,6,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mUserId, <Primordial,I> > 10,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
14 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache, getInstance()Landroid/app/admin/DevicePolicyCache; > @37 exception:13,
1 = load_metadata: <Application,Landroid/app/admin/DevicePolicyManagerInternal>, <Primordial,Ljava/lang/Class>,
3 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 1 @2 exception:2,
4 = checkcast <Application,Landroid/app/admin/DevicePolicyManagerInternal>3 <Application,Landroid/app/admin/DevicePolicyManagerInternal>,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache, -$$Nest$sfgetINSTANCE()Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache; > @15 exception:6,
10 = phi  9,7,
return 10,
16 = invokevirtual < Application, Landroid/app/admin/DevicePolicyCache, isScreenCaptureAllowed(I)Z > 14,11 @41 exception:15,
return 16,","depth : 0
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public DevicePolicyCache getInstance(){
	Object v1 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache$EmptyDevicePolicyCache v2 = DevicePolicyCache$EmptyDevicePolicyCache.-$$Nest$sfgetINSTANCE();
	return phiInstruction;
}
-----
","public boolean isAssistDataAllowedOnCurrentActivity(){
	this.sThreadPriorityBooster.boost();
	Task v4 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v3 = v4;
	boolean v5 = v3.isActivityTypeAssistant();
	ActivityRecord v7 = TaskFragment.getTopNonFinishingActivity(1);
	ActivityRecord v6 = v7;
	this.sThreadPriorityBooster.reset();
	Object v11 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache$EmptyDevicePolicyCache v12 = DevicePolicyCache$EmptyDevicePolicyCache.-$$Nest$sfgetINSTANCE();
	DevicePolicyCache v10 = phiInstruction;
	boolean v13 = v10.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v13;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","isAssistDataAllowedOnCurrentActivity()Z","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @6 exception:4,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeAssistant()Z > 5 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 5 @20 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
conditional branch(ne, to iindex=-1) 10,6,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mUserId, <Primordial,I> > 10,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
14 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache, getInstance()Landroid/app/admin/DevicePolicyCache; > @37 exception:13,
1 = load_metadata: <Application,Landroid/app/admin/DevicePolicyManagerInternal>, <Primordial,Ljava/lang/Class>,
3 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 1 @2 exception:2,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
4 = checkcast <Application,Landroid/app/admin/DevicePolicyManagerInternal>3 <Application,Landroid/app/admin/DevicePolicyManagerInternal>,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache, -$$Nest$sfgetINSTANCE()Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache; > @15 exception:6,
1 = getstatic < Application, Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache, INSTANCE, <Application,Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache> >,
return 1,
10 = phi  9,7,
return 10,
16 = invokevirtual < Application, Landroid/app/admin/DevicePolicyCache, isScreenCaptureAllowed(I)Z > 14,11 @41 exception:15,
return 16,","depth : 0
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 2
public ActivityRecord getTopNonFinishingActivity(boolean p1){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
depth : 1
public DevicePolicyCache getInstance(){
	Object v1 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache$EmptyDevicePolicyCache v2 = DevicePolicyCache$EmptyDevicePolicyCache.-$$Nest$sfgetINSTANCE();
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public DevicePolicyCache$EmptyDevicePolicyCache -$$Nest$sfgetINSTANCE(){
	return this.INSTANCE;
}
-----
","public boolean isAssistDataAllowedOnCurrentActivity(){
	int v6 = RootWindowContainer.getChildCount();
	WindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction);
	Task v8 = v7.getFocusedRootTask();
	Task v5 = v8;
	Task v4 = v5;
	boolean v9 = v4.isActivityTypeAssistant();
	ActivityRecord v12 = TaskFragment.getTopNonFinishingActivity(1, 1);
	ActivityRecord v11 = v12;
	ActivityRecord v10 = v11;
	Object v18 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
	Object v17 = v18;
	DevicePolicyCache$EmptyDevicePolicyCache v19 = this.INSTANCE;
	DevicePolicyCache v16 = phiInstruction;
	boolean v20 = v16.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v20;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","isAssistDataAllowedOnCurrentActivity()Z","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @6 exception:4,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeAssistant()Z > 5 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 5 @20 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
conditional branch(ne, to iindex=-1) 10,6,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mUserId, <Primordial,I> > 10,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
14 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache, getInstance()Landroid/app/admin/DevicePolicyCache; > @37 exception:13,
1 = load_metadata: <Application,Landroid/app/admin/DevicePolicyManagerInternal>, <Primordial,Ljava/lang/Class>,
3 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 1 @2 exception:2,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
4 = checkcast <Application,Landroid/app/admin/DevicePolicyManagerInternal>3 <Application,Landroid/app/admin/DevicePolicyManagerInternal>,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache, -$$Nest$sfgetINSTANCE()Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache; > @15 exception:6,
1 = getstatic < Application, Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache, INSTANCE, <Application,Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache> >,
return 1,
10 = phi  9,7,
return 10,
16 = invokevirtual < Application, Landroid/app/admin/DevicePolicyCache, isScreenCaptureAllowed(I)Z > 14,11 @41 exception:15,
return 16,","depth : 0
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 2
public ActivityRecord getTopNonFinishingActivity(boolean p1){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
depth : 1
public DevicePolicyCache getInstance(){
	Object v1 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache$EmptyDevicePolicyCache v2 = DevicePolicyCache$EmptyDevicePolicyCache.-$$Nest$sfgetINSTANCE();
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public DevicePolicyCache$EmptyDevicePolicyCache -$$Nest$sfgetINSTANCE(){
	return this.INSTANCE;
}
-----
","public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerThreadPriorityBooster.boost();
	int v7 = RootWindowContainer.getChildCount();
	WindowContainer v8 = RootWindowContainer.getChildAt(phiInstruction);
	Task v9 = v8.getFocusedRootTask();
	Task v6 = v9;
	Task v5 = v6;
	boolean v10 = v5.isActivityTypeAssistant();
	ActivityRecord v13 = TaskFragment.getTopNonFinishingActivity(1, 1);
	ActivityRecord v12 = v13;
	ActivityRecord v11 = v12;
	Object v19 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
	Object v18 = v19;
	DevicePolicyCache$EmptyDevicePolicyCache v20 = this.INSTANCE;
	DevicePolicyCache v17 = phiInstruction;
	boolean v21 = v17.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v21;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","isAssistDataAllowedOnCurrentActivity()Z","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @6 exception:4,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeAssistant()Z > 5 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity()Lcom/android/server/wm/ActivityRecord; > 5 @20 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getTopNonFinishingActivity(ZZ)Lcom/android/server/wm/ActivityRecord; > 1,2,3 @1 exception:4,
return 5,
return 4,
conditional branch(ne, to iindex=-1) 10,6,
11 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mUserId, <Primordial,I> > 10,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
14 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache, getInstance()Landroid/app/admin/DevicePolicyCache; > @37 exception:13,
1 = load_metadata: <Application,Landroid/app/admin/DevicePolicyManagerInternal>, <Primordial,Ljava/lang/Class>,
3 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 1 @2 exception:2,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
4 = checkcast <Application,Landroid/app/admin/DevicePolicyManagerInternal>3 <Application,Landroid/app/admin/DevicePolicyManagerInternal>,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokestatic < Application, Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache, -$$Nest$sfgetINSTANCE()Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache; > @15 exception:6,
1 = getstatic < Application, Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache, INSTANCE, <Application,Landroid/app/admin/DevicePolicyCache$EmptyDevicePolicyCache> >,
return 1,
10 = phi  9,7,
return 10,
16 = invokevirtual < Application, Landroid/app/admin/DevicePolicyCache, isScreenCaptureAllowed(I)Z > 14,11 @41 exception:15,
return 16,","depth : 0
public boolean isAssistDataAllowedOnCurrentActivity(){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = p0.getTopDisplayFocusedRootTask();
	boolean v3 = v2.isActivityTypeAssistant();
	ActivityRecord v4 = v2.getTopNonFinishingActivity();
	WindowManagerService.resetPriorityAfterLockedSection();
	DevicePolicyCache v6 = DevicePolicyCache.getInstance();
	boolean v7 = v6.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v7;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityRecord getTopNonFinishingActivity(){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(1);
	return v1;
}
-----
depth : 2
public ActivityRecord getTopNonFinishingActivity(boolean p1){
	ActivityRecord v1 = p0.getTopNonFinishingActivity(p1, 1);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
depth : 1
public DevicePolicyCache getInstance(){
	Object v1 = LocalServices.getService(DevicePolicyManagerInterna.class);
	DevicePolicyCache$EmptyDevicePolicyCache v2 = DevicePolicyCache$EmptyDevicePolicyCache.-$$Nest$sfgetINSTANCE();
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public DevicePolicyCache$EmptyDevicePolicyCache -$$Nest$sfgetINSTANCE(){
	return this.INSTANCE;
}
-----
","public boolean isAssistDataAllowedOnCurrentActivity(){
	int v6 = RootWindowContainer.getChildCount();
	WindowContainer v7 = RootWindowContainer.getChildAt(phiInstruction);
	Task v8 = v7.getFocusedRootTask();
	Task v5 = v8;
	Task v4 = v5;
	boolean v9 = v4.isActivityTypeAssistant();
	ActivityRecord v12 = TaskFragment.getTopNonFinishingActivity(1, 1);
	ActivityRecord v11 = v12;
	ActivityRecord v10 = v11;
	WindowManagerThreadPriorityBooster.reset();
	Object v19 = this.sLocalServiceObjects.get(DevicePolicyManagerInterna.class);
	Object v18 = v19;
	DevicePolicyCache$EmptyDevicePolicyCache v20 = this.INSTANCE;
	DevicePolicyCache v17 = phiInstruction;
	boolean v21 = v17.isScreenCaptureAllowed(ActivityRecord.mUserId);
	return v21;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","setTaskResizeable(II)V","0","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 6,2,7 @9 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
14 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 14 @19 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,16 @24 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,2 @27 exception:19,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,21 @32 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @35 exception:24,
27 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 13,25 @39 exception:26,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @43 exception:36,
return,","depth : 0
public void setTaskResizeable(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""setTaskResizeable: taskId="");
	StringBuilder v5 = v2.append(p1);
	StringBuilder v6 = v2.append("" not found"");
	String v7 = v2.toString();
	int v8 = Slog.w(""ActivityTaskManager"", v7);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void setTaskResizeable(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setTaskResizeable(II)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 6,2,7 @9 exception:8,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 9,10,
invokevirtual < Application, Lcom/android/server/wm/Task, setResizeMode(I)V > 9,3 @47 exception:11,
3 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,2,
putfield 1.< Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > = 2,
4 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZ)V > 4,5,5,5 @11 exception:6,
7 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 7 @16 exception:8,
invokevirtual < Application, Lcom/android/server/wm/Task, updateTaskDescription()V > 1 @19 exception:10,
return,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setTaskResizeable(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	v2.setResizeMode(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public void setResizeMode(int p1){
	this.mResizeMode = p1;
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(0, 0, 0);
	boolean v2 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	p0.updateTaskDescription();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setTaskResizeable(int p1, int p2){
	this.sThreadPriorityBooster.boost();
	Task v4 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v3 = v4;
	this.mResizeMode = p2;
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(0, 0, 0);
	boolean v7 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	Task.updateTaskDescription();
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setTaskResizeable(II)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 6,2,7 @9 exception:8,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 9,10,
14 = new <Application,Ljava/lang/StringBuilder>@17,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 14 @19 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,16 @24 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,2 @27 exception:19,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,21 @32 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @35 exception:24,
27 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 13,25 @39 exception:26,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @43 exception:36,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setTaskResizeable(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""setTaskResizeable: taskId="");
	StringBuilder v5 = v2.append(p1);
	StringBuilder v6 = v2.append("" not found"");
	String v7 = v2.toString();
	int v8 = Slog.w(""ActivityTaskManager"", v7);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setTaskResizeable(int p1, int p2){
	this.sThreadPriorityBooster.boost();
	Task v4 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v3 = v4;
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setTaskResizeable(II)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 6,2,7 @9 exception:8,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 9,10,
invokevirtual < Application, Lcom/android/server/wm/Task, setResizeMode(I)V > 9,3 @47 exception:11,
3 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,2,
putfield 1.< Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > = 2,
4 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZ)V > 4,5,5,5 @11 exception:6,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZZ)V > 1,2,3,4,5 @1 exception:6,
return,
7 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 7 @16 exception:8,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/wm/Task, updateTaskDescription()V > 1 @19 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/Task, getRootActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = new <Application,Landroid/app/ActivityManager$TaskDescription>@8,
invokespecial < Application, Landroid/app/ActivityManager$TaskDescription, <init>()V > 6 @10 exception:7,
8 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda9>@13,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda9, <init>()V > 8 @15 exception:9,
10 = load_metadata: <Application,Lcom/android/server/wm/ActivityRecord>, <Primordial,Ljava/lang/Class>,
12 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 10 @20 exception:11,
14 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Lcom/android/internal/util/function/TriPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 8,12,4,6 @24 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllActivities(Ljava/util/function/Predicate;)Z > 1,14 @28 exception:15,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 14 @31 exception:17,
18 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, setResizeMode(I)V > 6,18 @36 exception:19,
20 = getfield < Application, Lcom/android/server/wm/TaskFragment, mMinWidth, <Primordial,I> > 1,
invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, setMinWidth(I)V > 6,20 @41 exception:21,
22 = getfield < Application, Lcom/android/server/wm/TaskFragment, mMinHeight, <Primordial,I> > 1,
invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, setMinHeight(I)V > 6,22 @46 exception:23,
invokevirtual < Application, Lcom/android/server/wm/Task, setTaskDescription(Landroid/app/ActivityManager$TaskDescription;)V > 1,6 @49 exception:24,
25 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController; > 25 @54 exception:26,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskInfo()Landroid/app/ActivityManager$RunningTaskInfo; > 1 @58 exception:28,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, notifyTaskDescriptionChanged(Landroid/app/TaskInfo;)V > 27,29 @62 exception:30,
32 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @65 exception:31,
conditional branch(eq, to iindex=-1) 32,5,
34 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 32 @71 exception:33,
conditional branch(eq, to iindex=-1) 34,5,
invokevirtual < Application, Lcom/android/server/wm/Task, updateTaskDescription()V > 34 @77 exception:35,
invokevirtual < Application, Lcom/android/server/wm/Task, dispatchTaskInfoChangedIfNeeded(Z)V > 1,5 @81 exception:39,
return,
return,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setTaskResizeable(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	v2.setResizeMode(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void setResizeMode(int p1){
	this.mResizeMode = p1;
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(0, 0, 0);
	boolean v2 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	p0.updateTaskDescription();
	return;
}
-----
depth : 2
public void ensureActivitiesVisible(ActivityRecord p1, int p2, boolean p3){
	p0.ensureActivitiesVisible(p1, p2, p3, 1);
	return;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 2
public void updateTaskDescription(){
	ActivityRecord v1 = p0.getRootActivity(1);
	ActivityManager$TaskDescription v1 = new ActivityManager$TaskDescription();
	Task$$ExternalSyntheticLambda9 v2 = new Task$$ExternalSyntheticLambda9();
	ArgumentPlaceholder v4 = PooledLambda.__(ActivityRecor.class);
	PooledPredicate v5 = PooledLambda.obtainPredicate(v2, v4, v1, v1);
	boolean v6 = p0.forAllActivities(v5);
	v5.recycle();
	v1.setResizeMode(this.mResizeMode);
	v1.setMinWidth(TaskFragment.mMinWidth);
	v1.setMinHeight(TaskFragment.mMinHeight);
	p0.setTaskDescription(v1);
	TaskChangeNotificationController v12 = TaskFragment.mAtmService.getTaskChangeNotificationController();
	ActivityManager$RunningTaskInfo v13 = p0.getTaskInfo();
	v12.notifyTaskDescriptionChanged(v13);
	WindowContainer v15 = p0.getParent();
	Task v16 = v15.asTask();
	v16.updateTaskDescription();
	p0.dispatchTaskInfoChangedIfNeeded(0);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setTaskResizeable(int p1, int p2){
	AppTransition$$ExternalSyntheticLambda2 v6 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v8 = PooledLambda.__(Tas.class);
	Integer v9 = Integer.valueOf(p1);
	PooledPredicate v10 = PooledLambda.obtainPredicate(v6, v8, v9);
	Task v11 = RootWindowContainer.getTask(v10);
	v10.recycle();
	Task v13 = RootWindowContainer.getOrCreateRootTask(0, 0, v11, 0);
	Task v14 = v11.getRootTask();
	boolean v15 = v11.reparent(v13, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v5 = v11;
	Task v4 = v5;
	this.mResizeMode = p2;
	RootWindowContainer.ensureActivitiesVisible(0, 0, 0, 1);
	boolean v20 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v19 = v20;
	ActivityRecord v22 = Task.getRootActivity(1);
	ActivityManager$TaskDescription v23 = new ActivityManager$TaskDescription();
	Task$$ExternalSyntheticLambda9 v25 = new Task$$ExternalSyntheticLambda9();
	ArgumentPlaceholder v27 = PooledLambda.__(ActivityRecor.class);
	PooledPredicate v28 = PooledLambda.obtainPredicate(v25, v27, v22, v23);
	boolean v29 = Task.forAllActivities(v28);
	v28.recycle();
	v23.setResizeMode(this.mResizeMode);
	v23.setMinWidth(TaskFragment.mMinWidth);
	v23.setMinHeight(TaskFragment.mMinHeight);
	Task.setTaskDescription(v23);
	TaskChangeNotificationController v35 = TaskFragment.mAtmService.getTaskChangeNotificationController();
	ActivityManager$RunningTaskInfo v36 = Task.getTaskInfo();
	v35.notifyTaskDescriptionChanged(v36);
	WindowContainer v38 = Task.getParent();
	Task v39 = v38.asTask();
	v39.updateTaskDescription();
	Task.dispatchTaskInfoChangedIfNeeded(0);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setTaskResizeable(II)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 6,2,7 @9 exception:8,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 9,10,
invokevirtual < Application, Lcom/android/server/wm/Task, setResizeMode(I)V > 9,3 @47 exception:11,
3 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,2,
putfield 1.< Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > = 2,
4 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZ)V > 4,5,5,5 @11 exception:6,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZZ)V > 1,2,3,4,5 @1 exception:6,
return,
7 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 7 @16 exception:8,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/wm/Task, updateTaskDescription()V > 1 @19 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/Task, getRootActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = new <Application,Landroid/app/ActivityManager$TaskDescription>@8,
invokespecial < Application, Landroid/app/ActivityManager$TaskDescription, <init>()V > 6 @10 exception:7,
8 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda9>@13,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda9, <init>()V > 8 @15 exception:9,
10 = load_metadata: <Application,Lcom/android/server/wm/ActivityRecord>, <Primordial,Ljava/lang/Class>,
12 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 10 @20 exception:11,
14 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Lcom/android/internal/util/function/TriPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 8,12,4,6 @24 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllActivities(Ljava/util/function/Predicate;)Z > 1,14 @28 exception:15,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 14 @31 exception:17,
18 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, setResizeMode(I)V > 6,18 @36 exception:19,
20 = getfield < Application, Lcom/android/server/wm/TaskFragment, mMinWidth, <Primordial,I> > 1,
invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, setMinWidth(I)V > 6,20 @41 exception:21,
22 = getfield < Application, Lcom/android/server/wm/TaskFragment, mMinHeight, <Primordial,I> > 1,
invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, setMinHeight(I)V > 6,22 @46 exception:23,
invokevirtual < Application, Lcom/android/server/wm/Task, setTaskDescription(Landroid/app/ActivityManager$TaskDescription;)V > 1,6 @49 exception:24,
25 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController; > 25 @54 exception:26,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskInfo()Landroid/app/ActivityManager$RunningTaskInfo; > 1 @58 exception:28,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, notifyTaskDescriptionChanged(Landroid/app/TaskInfo;)V > 27,29 @62 exception:30,
32 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @65 exception:31,
conditional branch(eq, to iindex=-1) 32,5,
34 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 32 @71 exception:33,
conditional branch(eq, to iindex=-1) 34,5,
invokevirtual < Application, Lcom/android/server/wm/Task, updateTaskDescription()V > 34 @77 exception:35,
invokevirtual < Application, Lcom/android/server/wm/Task, dispatchTaskInfoChangedIfNeeded(Z)V > 1,5 @81 exception:39,
return,
return,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setTaskResizeable(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	v2.setResizeMode(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void setResizeMode(int p1){
	this.mResizeMode = p1;
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(0, 0, 0);
	boolean v2 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	p0.updateTaskDescription();
	return;
}
-----
depth : 2
public void ensureActivitiesVisible(ActivityRecord p1, int p2, boolean p3){
	p0.ensureActivitiesVisible(p1, p2, p3, 1);
	return;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 2
public void updateTaskDescription(){
	ActivityRecord v1 = p0.getRootActivity(1);
	ActivityManager$TaskDescription v1 = new ActivityManager$TaskDescription();
	Task$$ExternalSyntheticLambda9 v2 = new Task$$ExternalSyntheticLambda9();
	ArgumentPlaceholder v4 = PooledLambda.__(ActivityRecor.class);
	PooledPredicate v5 = PooledLambda.obtainPredicate(v2, v4, v1, v1);
	boolean v6 = p0.forAllActivities(v5);
	v5.recycle();
	v1.setResizeMode(this.mResizeMode);
	v1.setMinWidth(TaskFragment.mMinWidth);
	v1.setMinHeight(TaskFragment.mMinHeight);
	p0.setTaskDescription(v1);
	TaskChangeNotificationController v12 = TaskFragment.mAtmService.getTaskChangeNotificationController();
	ActivityManager$RunningTaskInfo v13 = p0.getTaskInfo();
	v12.notifyTaskDescriptionChanged(v13);
	WindowContainer v15 = p0.getParent();
	Task v16 = v15.asTask();
	v16.updateTaskDescription();
	p0.dispatchTaskInfoChangedIfNeeded(0);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setTaskResizeable(int p1, int p2){
	WindowManagerThreadPriorityBooster.boost();
	AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v9 = PooledLambda.__(Tas.class);
	Integer v10 = Integer.valueOf(p1);
	PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10);
	Task v12 = RootWindowContainer.getTask(v11);
	v11.recycle();
	Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0);
	Task v15 = v12.getRootTask();
	boolean v16 = v12.reparent(v14, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v6 = v12;
	Task v5 = v6;
	this.mResizeMode = p2;
	RootWindowContainer.ensureActivitiesVisible(0, 0, 0, 1);
	boolean v21 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v20 = v21;
	ActivityRecord v23 = Task.getRootActivity(1);
	ActivityManager$TaskDescription v24 = new ActivityManager$TaskDescription();
	Task$$ExternalSyntheticLambda9 v26 = new Task$$ExternalSyntheticLambda9();
	ArgumentPlaceholder v28 = PooledLambda.__(ActivityRecor.class);
	PooledPredicate v29 = PooledLambda.obtainPredicate(v26, v28, v23, v24);
	boolean v30 = Task.forAllActivities(v29);
	v29.recycle();
	v24.setResizeMode(this.mResizeMode);
	v24.setMinWidth(TaskFragment.mMinWidth);
	v24.setMinHeight(TaskFragment.mMinHeight);
	Task.setTaskDescription(v24);
	TaskChangeNotificationController v36 = TaskFragment.mAtmService.getTaskChangeNotificationController();
	ActivityManager$RunningTaskInfo v37 = Task.getTaskInfo();
	v36.notifyTaskDescriptionChanged(v37);
	WindowContainer v39 = Task.getParent();
	Task v40 = v39.asTask();
	v40.updateTaskDescription();
	Task.dispatchTaskInfoChangedIfNeeded(0);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","setTaskResizeable(II)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 6,2,7 @9 exception:8,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 9,10,
invokevirtual < Application, Lcom/android/server/wm/Task, setResizeMode(I)V > 9,3 @47 exception:11,
3 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,2,
putfield 1.< Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > = 2,
4 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZ)V > 4,5,5,5 @11 exception:6,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, ensureActivitiesVisible(Lcom/android/server/wm/ActivityRecord;IZZ)V > 1,2,3,4,5 @1 exception:6,
return,
7 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities()Z > 7 @16 exception:8,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, resumeFocusedTasksTopActivities(Lcom/android/server/wm/Task;Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;)Z > 1,2,2,2 @1 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/wm/Task, updateTaskDescription()V > 1 @19 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/Task, getRootActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = new <Application,Landroid/app/ActivityManager$TaskDescription>@8,
invokespecial < Application, Landroid/app/ActivityManager$TaskDescription, <init>()V > 6 @10 exception:7,
8 = new <Application,Lcom/android/server/wm/Task$$ExternalSyntheticLambda9>@13,
invokespecial < Application, Lcom/android/server/wm/Task$$ExternalSyntheticLambda9, <init>()V > 8 @15 exception:9,
10 = load_metadata: <Application,Lcom/android/server/wm/ActivityRecord>, <Primordial,Ljava/lang/Class>,
12 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 10 @20 exception:11,
14 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Lcom/android/internal/util/function/TriPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 8,12,4,6 @24 exception:13,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllActivities(Ljava/util/function/Predicate;)Z > 1,14 @28 exception:15,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 14 @31 exception:17,
18 = getfield < Application, Lcom/android/server/wm/Task, mResizeMode, <Primordial,I> > 1,
invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, setResizeMode(I)V > 6,18 @36 exception:19,
20 = getfield < Application, Lcom/android/server/wm/TaskFragment, mMinWidth, <Primordial,I> > 1,
invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, setMinWidth(I)V > 6,20 @41 exception:21,
22 = getfield < Application, Lcom/android/server/wm/TaskFragment, mMinHeight, <Primordial,I> > 1,
invokevirtual < Application, Landroid/app/ActivityManager$TaskDescription, setMinHeight(I)V > 6,22 @46 exception:23,
invokevirtual < Application, Lcom/android/server/wm/Task, setTaskDescription(Landroid/app/ActivityManager$TaskDescription;)V > 1,6 @49 exception:24,
25 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTaskChangeNotificationController()Lcom/android/server/wm/TaskChangeNotificationController; > 25 @54 exception:26,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskInfo()Landroid/app/ActivityManager$RunningTaskInfo; > 1 @58 exception:28,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, notifyTaskDescriptionChanged(Landroid/app/TaskInfo;)V > 27,29 @62 exception:30,
32 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 1 @65 exception:31,
conditional branch(eq, to iindex=-1) 32,5,
34 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 32 @71 exception:33,
conditional branch(eq, to iindex=-1) 34,5,
invokevirtual < Application, Lcom/android/server/wm/Task, updateTaskDescription()V > 34 @77 exception:35,
invokevirtual < Application, Lcom/android/server/wm/Task, dispatchTaskInfoChangedIfNeeded(Z)V > 1,5 @81 exception:39,
return,
return,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @51 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void setTaskResizeable(int p1, int p2){
	WindowManagerService.boostPriorityForLockedSection();
	Task v2 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	v2.setResizeMode(p2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void setResizeMode(int p1){
	this.mResizeMode = p1;
	TaskFragment.mRootWindowContainer.ensureActivitiesVisible(0, 0, 0);
	boolean v2 = TaskFragment.mRootWindowContainer.resumeFocusedTasksTopActivities();
	p0.updateTaskDescription();
	return;
}
-----
depth : 2
public void ensureActivitiesVisible(ActivityRecord p1, int p2, boolean p3){
	p0.ensureActivitiesVisible(p1, p2, p3, 1);
	return;
}
-----
depth : 2
public boolean resumeFocusedTasksTopActivities(){
	boolean v1 = p0.resumeFocusedTasksTopActivities(0, 0, 0);
	return v1;
}
-----
depth : 2
public void updateTaskDescription(){
	ActivityRecord v1 = p0.getRootActivity(1);
	ActivityManager$TaskDescription v1 = new ActivityManager$TaskDescription();
	Task$$ExternalSyntheticLambda9 v2 = new Task$$ExternalSyntheticLambda9();
	ArgumentPlaceholder v4 = PooledLambda.__(ActivityRecor.class);
	PooledPredicate v5 = PooledLambda.obtainPredicate(v2, v4, v1, v1);
	boolean v6 = p0.forAllActivities(v5);
	v5.recycle();
	v1.setResizeMode(this.mResizeMode);
	v1.setMinWidth(TaskFragment.mMinWidth);
	v1.setMinHeight(TaskFragment.mMinHeight);
	p0.setTaskDescription(v1);
	TaskChangeNotificationController v12 = TaskFragment.mAtmService.getTaskChangeNotificationController();
	ActivityManager$RunningTaskInfo v13 = p0.getTaskInfo();
	v12.notifyTaskDescriptionChanged(v13);
	WindowContainer v15 = p0.getParent();
	Task v16 = v15.asTask();
	v16.updateTaskDescription();
	p0.dispatchTaskInfoChangedIfNeeded(0);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setTaskResizeable(int p1, int p2){
	AppTransition$$ExternalSyntheticLambda2 v6 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v8 = PooledLambda.__(Tas.class);
	Integer v9 = Integer.valueOf(p1);
	PooledPredicate v10 = PooledLambda.obtainPredicate(v6, v8, v9);
	Task v11 = RootWindowContainer.getTask(v10);
	v10.recycle();
	Task v13 = RootWindowContainer.getOrCreateRootTask(0, 0, v11, 0);
	Task v14 = v11.getRootTask();
	boolean v15 = v11.reparent(v13, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v5 = v11;
	Task v4 = v5;
	this.mResizeMode = p2;
	RootWindowContainer.ensureActivitiesVisible(0, 0, 0, 1);
	boolean v20 = RootWindowContainer.resumeFocusedTasksTopActivities(0, 0, 0);
	boolean v19 = v20;
	ActivityRecord v22 = Task.getRootActivity(1);
	ActivityManager$TaskDescription v23 = new ActivityManager$TaskDescription();
	Task$$ExternalSyntheticLambda9 v25 = new Task$$ExternalSyntheticLambda9();
	ArgumentPlaceholder v27 = PooledLambda.__(ActivityRecor.class);
	PooledPredicate v28 = PooledLambda.obtainPredicate(v25, v27, v22, v23);
	boolean v29 = Task.forAllActivities(v28);
	v28.recycle();
	v23.setResizeMode(this.mResizeMode);
	v23.setMinWidth(TaskFragment.mMinWidth);
	v23.setMinHeight(TaskFragment.mMinHeight);
	Task.setTaskDescription(v23);
	TaskChangeNotificationController v35 = TaskFragment.mAtmService.getTaskChangeNotificationController();
	ActivityManager$RunningTaskInfo v36 = Task.getTaskInfo();
	v35.notifyTaskDescriptionChanged(v36);
	WindowContainer v38 = Task.getParent();
	Task v39 = v38.asTask();
	v39.updateTaskDescription();
	Task.dispatchTaskInfoChangedIfNeeded(0);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo;","0","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mBackNavigationController, <Application,Lcom/android/server/wm/BackNavigationController> > 1,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/BackNavigationController, startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo; > 9,2,3,4 @15 exception:11,
return 12,","depth : 0
public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	BackNavigationInfo v2 = this.mBackNavigationController.startBackNavigation(p1, p2, p3);
	return v2;
}
-----
","public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	BackNavigationInfo v2 = this.mBackNavigationController.startBackNavigation(p1, p2, p3);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo;","1","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mBackNavigationController, <Application,Lcom/android/server/wm/BackNavigationController> > 1,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/BackNavigationController, startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo; > 9,2,3,4 @15 exception:11,
5 = getfield < Application, Lcom/android/server/wm/BackNavigationController, mWindowManagerService, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
6 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTransactionFactory, <Application,Ljava/util/function/Supplier> > 5,
8 = invokeinterface < Application, Ljava/util/function/Supplier, get()Ljava/lang/Object; > 6 @6 exception:7,
9 = checkcast <Application,Landroid/view/SurfaceControl$Transaction>8 <Application,Landroid/view/SurfaceControl$Transaction>,
putfield 1.< Application, Lcom/android/server/wm/BackNavigationController, mFocusObserver, <Application,Landroid/view/IWindowFocusObserver> > = 3,
10 = new <Application,Landroid/window/BackNavigationInfo$Builder>@17,
invokespecial < Application, Landroid/window/BackNavigationInfo$Builder, <init>()V > 10 @19 exception:11,
12 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 5,
monitorenter 12,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @25 exception:13,
14 = load_metadata: <Application,Lcom/android/server/wm/WindowManagerInternal>, <Primordial,Ljava/lang/Class>,
16 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 14 @30 exception:15,
17 = checkcast <Application,Lcom/android/server/wm/WindowManagerInternal>16 <Application,Lcom/android/server/wm/WindowManagerInternal>,
19 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerInternal, getFocusedWindowToken()Landroid/os/IBinder; > 17 @36 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, getFocusedWindowLocked()Lcom/android/server/wm/WindowState; > 5 @40 exception:20,
conditional branch(ne, to iindex=-1) 21,22,
23 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mEmbeddedWindowController, <Application,Lcom/android/server/wm/EmbeddedWindowController> > 5,
25 = invokevirtual < Application, Lcom/android/server/wm/EmbeddedWindowController, getByFocusToken(Landroid/os/IBinder;)Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow; > 23,19 @50 exception:24,
conditional branch(eq, to iindex=-1) 25,22,
conditional branch(eq, to iindex=-1) 21,22,
29 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_BACK_PREVIEW_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 29,22,
30 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_BACK_PREVIEW, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 30,31,22,32,22 @88 exception:33,
conditional branch(eq, to iindex=-1) 21,22,
38 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, getRecentsAnimationController()Lcom/android/server/wm/RecentsAnimationController; > 5 @93 exception:37,
39 = getfield < Application, Lcom/android/server/wm/WindowState, mActivityRecord, <Application,Lcom/android/server/wm/ActivityRecord> > 21,
conditional branch(eq, to iindex=-1) 39,22,
41 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHomeOrRecents()Z > 39 @101 exception:40,
conditional branch(eq, to iindex=-1) 41,22,
42 = getfield < Application, Lcom/android/server/wm/WindowContainer, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 39,
44 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, isTransientLaunch(Lcom/android/server/wm/ActivityRecord;)Z > 42,39 @109 exception:43,
conditional branch(ne, to iindex=-1) 44,22,
conditional branch(eq, to iindex=-1) 38,22,
49 = invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, shouldApplyInputConsumer(Lcom/android/server/wm/ActivityRecord;)Z > 38,39 @117 exception:48,
conditional branch(eq, to iindex=-1) 49,22,
434 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_BACK_PREVIEW_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 434,22,
435 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_BACK_PREVIEW, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 435,436,22,437,22 @134 exception:438,
monitorexit 12,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @138 exception:443,
return 22,
return 12,","depth : 0
public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	BackNavigationInfo v2 = this.mBackNavigationController.startBackNavigation(p1, p2, p3);
	return v2;
}
-----
depth : 1
public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	Object v1 = WindowManagerService.mTransactionFactory.get();
	this.mFocusObserver = p2;
	BackNavigationInfo$Builder v1 = new BackNavigationInfo$Builder();
	WindowManagerService.boostPriorityForLockedSection();
	Object v4 = LocalServices.getService(WindowManagerInterna.class);
	IBinder v5 = v4.getFocusedWindowToken();
	WindowState v6 = this.mWindowManagerService.getFocusedWindowLocked();
	EmbeddedWindowController$EmbeddedWindow v7 = WindowManagerService.mEmbeddedWindowController.getByFocusToken(v5);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -997565097, 0, ""Focused window found using getFocusedWindowToken"", 0);
	RecentsAnimationController v9 = this.mWindowManagerService.getRecentsAnimationController();
	boolean v10 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents();
	boolean v11 = WindowContainer.mTransitionController.isTransientLaunch(WindowState.mActivityRecord);
	boolean v12 = v9.shouldApplyInputConsumer(WindowState.mActivityRecord);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -451552570, 0, ""Current focused window being animated by recents. Overriding back callback to recents controller callback."", 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
","public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	Object v3 = WindowManagerService.mTransactionFactory.get();
	this.mFocusObserver = p2;
	BackNavigationInfo$Builder v4 = new BackNavigationInfo$Builder();
	WindowManagerService.boostPriorityForLockedSection();
	Object v7 = LocalServices.getService(WindowManagerInterna.class);
	IBinder v8 = v7.getFocusedWindowToken();
	WindowState v9 = this.mWindowManagerService.getFocusedWindowLocked();
	EmbeddedWindowController$EmbeddedWindow v10 = WindowManagerService.mEmbeddedWindowController.getByFocusToken(v8);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -997565097, 0, ""Focused window found using getFocusedWindowToken"", 0);
	RecentsAnimationController v12 = this.mWindowManagerService.getRecentsAnimationController();
	boolean v13 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents();
	boolean v14 = WindowContainer.mTransitionController.isTransientLaunch(WindowState.mActivityRecord);
	boolean v15 = v12.shouldApplyInputConsumer(WindowState.mActivityRecord);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -451552570, 0, ""Current focused window being animated by recents. Overriding back callback to recents controller callback."", 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	BackNavigationInfo v2 = 0;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo;","2","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mBackNavigationController, <Application,Lcom/android/server/wm/BackNavigationController> > 1,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/BackNavigationController, startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo; > 9,2,3,4 @15 exception:11,
5 = getfield < Application, Lcom/android/server/wm/BackNavigationController, mWindowManagerService, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
6 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTransactionFactory, <Application,Ljava/util/function/Supplier> > 5,
8 = invokeinterface < Application, Ljava/util/function/Supplier, get()Ljava/lang/Object; > 6 @6 exception:7,
9 = checkcast <Application,Landroid/view/SurfaceControl$Transaction>8 <Application,Landroid/view/SurfaceControl$Transaction>,
putfield 1.< Application, Lcom/android/server/wm/BackNavigationController, mFocusObserver, <Application,Landroid/view/IWindowFocusObserver> > = 3,
10 = new <Application,Landroid/window/BackNavigationInfo$Builder>@17,
invokespecial < Application, Landroid/window/BackNavigationInfo$Builder, <init>()V > 10 @19 exception:11,
12 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 5,
monitorenter 12,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @25 exception:13,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
14 = load_metadata: <Application,Lcom/android/server/wm/WindowManagerInternal>, <Primordial,Ljava/lang/Class>,
16 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 14 @30 exception:15,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
17 = checkcast <Application,Lcom/android/server/wm/WindowManagerInternal>16 <Application,Lcom/android/server/wm/WindowManagerInternal>,
19 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerInternal, getFocusedWindowToken()Landroid/os/IBinder; > 17 @36 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, getFocusedWindowLocked()Lcom/android/server/wm/WindowState; > 5 @40 exception:20,
2 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/wm/DisplayContent, mCurrentFocus, <Application,Lcom/android/server/wm/WindowState> > 4,
return 5,
conditional branch(ne, to iindex=-1) 21,22,
23 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mEmbeddedWindowController, <Application,Lcom/android/server/wm/EmbeddedWindowController> > 5,
25 = invokevirtual < Application, Lcom/android/server/wm/EmbeddedWindowController, getByFocusToken(Landroid/os/IBinder;)Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow; > 23,19 @50 exception:24,
3 = getfield < Application, Lcom/android/server/wm/EmbeddedWindowController, mWindowsByFocusToken, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow>5 <Application,Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow>,
return 6,
conditional branch(eq, to iindex=-1) 25,22,
conditional branch(eq, to iindex=-1) 21,22,
29 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_BACK_PREVIEW_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 29,22,
30 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_BACK_PREVIEW, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 30,31,22,32,22 @88 exception:33,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
conditional branch(eq, to iindex=-1) 21,22,
38 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, getRecentsAnimationController()Lcom/android/server/wm/RecentsAnimationController; > 5 @93 exception:37,
2 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRecentsAnimationController, <Application,Lcom/android/server/wm/RecentsAnimationController> > 1,
return 2,
39 = getfield < Application, Lcom/android/server/wm/WindowState, mActivityRecord, <Application,Lcom/android/server/wm/ActivityRecord> > 21,
conditional branch(eq, to iindex=-1) 39,22,
41 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHomeOrRecents()Z > 39 @101 exception:40,
conditional branch(eq, to iindex=-1) 41,22,
42 = getfield < Application, Lcom/android/server/wm/WindowContainer, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 39,
44 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, isTransientLaunch(Lcom/android/server/wm/ActivityRecord;)Z > 42,39 @109 exception:43,
3 = getfield < Application, Lcom/android/server/wm/TransitionController, mCollectingTransition, <Application,Lcom/android/server/wm/Transition> > 1,
conditional branch(eq, to iindex=-1) 3,5,
7 = invokevirtual < Application, Lcom/android/server/wm/Transition, isTransientLaunch(Lcom/android/server/wm/ActivityRecord;)Z > 3,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = getfield < Application, Lcom/android/server/wm/TransitionController, mPlayingTransitions, <Application,Ljava/util/ArrayList> > 1,
11 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 9 @14 exception:10,
12 = binaryop(sub) 11 , 4,
21 = phi  20,12,
conditional branch(lt, to iindex=-1) 21,5,
13 = getfield < Application, Lcom/android/server/wm/TransitionController, mPlayingTransitions, <Application,Ljava/util/ArrayList> > 1,
15 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 13,21 @23 exception:14,
16 = checkcast <Application,Lcom/android/server/wm/Transition>15 <Application,Lcom/android/server/wm/Transition>,
18 = invokevirtual < Application, Lcom/android/server/wm/Transition, isTransientLaunch(Lcom/android/server/wm/ActivityRecord;)Z > 16,2 @29 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return 4,
conditional branch(ne, to iindex=-1) 44,22,
conditional branch(eq, to iindex=-1) 38,22,
49 = invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, shouldApplyInputConsumer(Lcom/android/server/wm/ActivityRecord;)Z > 38,39 @117 exception:48,
3 = getfield < Application, Lcom/android/server/wm/RecentsAnimationController, mInputConsumerEnabled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(eq, to iindex=-1) 2,4,
6 = invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, isTargetApp(Lcom/android/server/wm/ActivityRecord;)Z > 1,2 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, isAnimatingApp(Lcom/android/server/wm/ActivityRecord;)Z > 1,2 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 2),
15 = phi  13,4,
return 15,
conditional branch(eq, to iindex=-1) 49,22,
434 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_BACK_PREVIEW_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 434,22,
435 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_BACK_PREVIEW, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 435,436,22,437,22 @134 exception:438,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
monitorexit 12,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @138 exception:443,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 22,
return 12,","depth : 0
public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	BackNavigationInfo v2 = this.mBackNavigationController.startBackNavigation(p1, p2, p3);
	return v2;
}
-----
depth : 1
public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	Object v1 = WindowManagerService.mTransactionFactory.get();
	this.mFocusObserver = p2;
	BackNavigationInfo$Builder v1 = new BackNavigationInfo$Builder();
	WindowManagerService.boostPriorityForLockedSection();
	Object v4 = LocalServices.getService(WindowManagerInterna.class);
	IBinder v5 = v4.getFocusedWindowToken();
	WindowState v6 = this.mWindowManagerService.getFocusedWindowLocked();
	EmbeddedWindowController$EmbeddedWindow v7 = WindowManagerService.mEmbeddedWindowController.getByFocusToken(v5);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -997565097, 0, ""Focused window found using getFocusedWindowToken"", 0);
	RecentsAnimationController v9 = this.mWindowManagerService.getRecentsAnimationController();
	boolean v10 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents();
	boolean v11 = WindowContainer.mTransitionController.isTransientLaunch(WindowState.mActivityRecord);
	boolean v12 = v9.shouldApplyInputConsumer(WindowState.mActivityRecord);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -451552570, 0, ""Current focused window being animated by recents. Overriding back callback to recents controller callback."", 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public WindowState getFocusedWindowLocked(){
	DisplayContent v1 = this.mRoot.getTopFocusedDisplayContent();
	return DisplayContent.mCurrentFocus;
}
-----
depth : 2
public EmbeddedWindowController$EmbeddedWindow getByFocusToken(IBinder p1){
	Object v1 = this.mWindowsByFocusToken.get(p1);
	return v1;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public RecentsAnimationController getRecentsAnimationController(){
	return this.mRecentsAnimationController;
}
-----
depth : 2
public boolean isTransientLaunch(ActivityRecord p1){
	boolean v1 = this.mCollectingTransition.isTransientLaunch(p1);
	int v2 = this.mPlayingTransitions.size();
	Object v3 = this.mPlayingTransitions.get(phiInstruction);
	boolean v4 = v3.isTransientLaunch(p1);
	return 1;
}
-----
depth : 2
public boolean shouldApplyInputConsumer(ActivityRecord p1){
	boolean v1 = p0.isTargetApp(p1);
	boolean v2 = p0.isAnimatingApp(p1);
	return phiInstruction;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	Object v3 = WindowManagerService.mTransactionFactory.get();
	this.mFocusObserver = p2;
	BackNavigationInfo$Builder v4 = new BackNavigationInfo$Builder();
	this.sThreadPriorityBooster.boost();
	Object v9 = this.sLocalServiceObjects.get(WindowManagerInterna.class);
	Object v8 = v9;
	IBinder v10 = v8.getFocusedWindowToken();
	DisplayContent v12 = this.mRoot.getTopFocusedDisplayContent();
	WindowState v11 = DisplayContent.mCurrentFocus;
	Object v14 = this.mWindowsByFocusToken.get(v10);
	EmbeddedWindowController$EmbeddedWindow v13 = v14;
	ProtoLogImpl v16 = ProtoLogImpl.getSingleInstance();
	v16.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -997565097, 0, ""Focused window found using getFocusedWindowToken"", 0);
	RecentsAnimationController v18 = this.mRecentsAnimationController;
	boolean v19 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents();
	boolean v21 = this.mCollectingTransition.isTransientLaunch(WindowState.mActivityRecord);
	int v22 = this.mPlayingTransitions.size();
	Object v23 = this.mPlayingTransitions.get(phiInstruction);
	boolean v24 = v23.isTransientLaunch(WindowState.mActivityRecord);
	boolean v20 = 1;
	boolean v26 = RecentsAnimationController.isTargetApp(WindowState.mActivityRecord);
	boolean v27 = RecentsAnimationController.isAnimatingApp(WindowState.mActivityRecord);
	boolean v25 = phiInstruction;
	ProtoLogImpl v29 = ProtoLogImpl.getSingleInstance();
	v29.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -451552570, 0, ""Current focused window being animated by recents. Overriding back callback to recents controller callback."", 0);
	this.sThreadPriorityBooster.reset();
	BackNavigationInfo v2 = 0;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo;","2","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mBackNavigationController, <Application,Lcom/android/server/wm/BackNavigationController> > 1,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/wm/BackNavigationController, startBackNavigation(ZLandroid/view/IWindowFocusObserver;Landroid/window/BackAnimationAdaptor;)Landroid/window/BackNavigationInfo; > 9,2,3,4 @15 exception:11,
5 = getfield < Application, Lcom/android/server/wm/BackNavigationController, mWindowManagerService, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
6 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTransactionFactory, <Application,Ljava/util/function/Supplier> > 5,
8 = invokeinterface < Application, Ljava/util/function/Supplier, get()Ljava/lang/Object; > 6 @6 exception:7,
9 = checkcast <Application,Landroid/view/SurfaceControl$Transaction>8 <Application,Landroid/view/SurfaceControl$Transaction>,
putfield 1.< Application, Lcom/android/server/wm/BackNavigationController, mFocusObserver, <Application,Landroid/view/IWindowFocusObserver> > = 3,
10 = new <Application,Landroid/window/BackNavigationInfo$Builder>@17,
invokespecial < Application, Landroid/window/BackNavigationInfo$Builder, <init>()V > 10 @19 exception:11,
12 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 5,
monitorenter 12,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @25 exception:13,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
14 = load_metadata: <Application,Lcom/android/server/wm/WindowManagerInternal>, <Primordial,Ljava/lang/Class>,
16 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 14 @30 exception:15,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
17 = checkcast <Application,Lcom/android/server/wm/WindowManagerInternal>16 <Application,Lcom/android/server/wm/WindowManagerInternal>,
19 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerInternal, getFocusedWindowToken()Landroid/os/IBinder; > 17 @36 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, getFocusedWindowLocked()Lcom/android/server/wm/WindowState; > 5 @40 exception:20,
2 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRoot, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopFocusedDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/wm/DisplayContent, mCurrentFocus, <Application,Lcom/android/server/wm/WindowState> > 4,
return 5,
conditional branch(ne, to iindex=-1) 21,22,
23 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mEmbeddedWindowController, <Application,Lcom/android/server/wm/EmbeddedWindowController> > 5,
25 = invokevirtual < Application, Lcom/android/server/wm/EmbeddedWindowController, getByFocusToken(Landroid/os/IBinder;)Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow; > 23,19 @50 exception:24,
3 = getfield < Application, Lcom/android/server/wm/EmbeddedWindowController, mWindowsByFocusToken, <Application,Landroid/util/ArrayMap> > 1,
5 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow>5 <Application,Lcom/android/server/wm/EmbeddedWindowController$EmbeddedWindow>,
return 6,
conditional branch(eq, to iindex=-1) 25,22,
conditional branch(eq, to iindex=-1) 21,22,
29 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_BACK_PREVIEW_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 29,22,
30 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_BACK_PREVIEW, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 30,31,22,32,22 @88 exception:33,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
conditional branch(eq, to iindex=-1) 21,22,
38 = invokevirtual < Application, Lcom/android/server/wm/WindowManagerService, getRecentsAnimationController()Lcom/android/server/wm/RecentsAnimationController; > 5 @93 exception:37,
2 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mRecentsAnimationController, <Application,Lcom/android/server/wm/RecentsAnimationController> > 1,
return 2,
39 = getfield < Application, Lcom/android/server/wm/WindowState, mActivityRecord, <Application,Lcom/android/server/wm/ActivityRecord> > 21,
conditional branch(eq, to iindex=-1) 39,22,
41 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHomeOrRecents()Z > 39 @101 exception:40,
conditional branch(eq, to iindex=-1) 41,22,
42 = getfield < Application, Lcom/android/server/wm/WindowContainer, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 39,
44 = invokevirtual < Application, Lcom/android/server/wm/TransitionController, isTransientLaunch(Lcom/android/server/wm/ActivityRecord;)Z > 42,39 @109 exception:43,
3 = getfield < Application, Lcom/android/server/wm/TransitionController, mCollectingTransition, <Application,Lcom/android/server/wm/Transition> > 1,
conditional branch(eq, to iindex=-1) 3,5,
7 = invokevirtual < Application, Lcom/android/server/wm/Transition, isTransientLaunch(Lcom/android/server/wm/ActivityRecord;)Z > 3,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = getfield < Application, Lcom/android/server/wm/TransitionController, mPlayingTransitions, <Application,Ljava/util/ArrayList> > 1,
11 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 9 @14 exception:10,
12 = binaryop(sub) 11 , 4,
21 = phi  20,12,
conditional branch(lt, to iindex=-1) 21,5,
13 = getfield < Application, Lcom/android/server/wm/TransitionController, mPlayingTransitions, <Application,Ljava/util/ArrayList> > 1,
15 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 13,21 @23 exception:14,
16 = checkcast <Application,Lcom/android/server/wm/Transition>15 <Application,Lcom/android/server/wm/Transition>,
18 = invokevirtual < Application, Lcom/android/server/wm/Transition, isTransientLaunch(Lcom/android/server/wm/ActivityRecord;)Z > 16,2 @29 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return 4,
conditional branch(ne, to iindex=-1) 44,22,
conditional branch(eq, to iindex=-1) 38,22,
49 = invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, shouldApplyInputConsumer(Lcom/android/server/wm/ActivityRecord;)Z > 38,39 @117 exception:48,
3 = getfield < Application, Lcom/android/server/wm/RecentsAnimationController, mInputConsumerEnabled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(eq, to iindex=-1) 2,4,
6 = invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, isTargetApp(Lcom/android/server/wm/ActivityRecord;)Z > 1,2 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/wm/RecentsAnimationController, isAnimatingApp(Lcom/android/server/wm/ActivityRecord;)Z > 1,2 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
15 = phi  13,4,
return 15,
conditional branch(eq, to iindex=-1) 49,22,
434 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_BACK_PREVIEW_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 434,22,
435 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_BACK_PREVIEW, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 435,436,22,437,22 @134 exception:438,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
monitorexit 12,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @138 exception:443,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 22,
return 12,","depth : 0
public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	BackNavigationInfo v2 = this.mBackNavigationController.startBackNavigation(p1, p2, p3);
	return v2;
}
-----
depth : 1
public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	Object v1 = WindowManagerService.mTransactionFactory.get();
	this.mFocusObserver = p2;
	BackNavigationInfo$Builder v1 = new BackNavigationInfo$Builder();
	WindowManagerService.boostPriorityForLockedSection();
	Object v4 = LocalServices.getService(WindowManagerInterna.class);
	IBinder v5 = v4.getFocusedWindowToken();
	WindowState v6 = this.mWindowManagerService.getFocusedWindowLocked();
	EmbeddedWindowController$EmbeddedWindow v7 = WindowManagerService.mEmbeddedWindowController.getByFocusToken(v5);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -997565097, 0, ""Focused window found using getFocusedWindowToken"", 0);
	RecentsAnimationController v9 = this.mWindowManagerService.getRecentsAnimationController();
	boolean v10 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents();
	boolean v11 = WindowContainer.mTransitionController.isTransientLaunch(WindowState.mActivityRecord);
	boolean v12 = v9.shouldApplyInputConsumer(WindowState.mActivityRecord);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -451552570, 0, ""Current focused window being animated by recents. Overriding back callback to recents controller callback."", 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	return 0;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public WindowState getFocusedWindowLocked(){
	DisplayContent v1 = this.mRoot.getTopFocusedDisplayContent();
	return DisplayContent.mCurrentFocus;
}
-----
depth : 2
public EmbeddedWindowController$EmbeddedWindow getByFocusToken(IBinder p1){
	Object v1 = this.mWindowsByFocusToken.get(p1);
	return v1;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public RecentsAnimationController getRecentsAnimationController(){
	return this.mRecentsAnimationController;
}
-----
depth : 2
public boolean isTransientLaunch(ActivityRecord p1){
	boolean v1 = this.mCollectingTransition.isTransientLaunch(p1);
	int v2 = this.mPlayingTransitions.size();
	Object v3 = this.mPlayingTransitions.get(phiInstruction);
	boolean v4 = v3.isTransientLaunch(p1);
	return 1;
}
-----
depth : 2
public boolean shouldApplyInputConsumer(ActivityRecord p1){
	boolean v1 = p0.isTargetApp(p1);
	boolean v2 = p0.isAnimatingApp(p1);
	return phiInstruction;
}
-----
depth : 2
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public BackNavigationInfo startBackNavigation(boolean p1, IWindowFocusObserver p2, BackAnimationAdaptor p3){
	Object v3 = WindowManagerService.mTransactionFactory.get();
	this.mFocusObserver = p2;
	BackNavigationInfo$Builder v4 = new BackNavigationInfo$Builder();
	this.sThreadPriorityBooster.boost();
	Object v9 = this.sLocalServiceObjects.get(WindowManagerInterna.class);
	Object v8 = v9;
	IBinder v10 = v8.getFocusedWindowToken();
	DisplayContent v12 = this.mRoot.getTopFocusedDisplayContent();
	WindowState v11 = DisplayContent.mCurrentFocus;
	Object v14 = this.mWindowsByFocusToken.get(v10);
	EmbeddedWindowController$EmbeddedWindow v13 = v14;
	ProtoLogImpl v16 = ProtoLogImpl.getSingleInstance();
	v16.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -997565097, 0, ""Focused window found using getFocusedWindowToken"", 0);
	RecentsAnimationController v18 = this.mRecentsAnimationController;
	boolean v19 = WindowState.mActivityRecord.isActivityTypeHomeOrRecents();
	boolean v21 = this.mCollectingTransition.isTransientLaunch(WindowState.mActivityRecord);
	int v22 = this.mPlayingTransitions.size();
	Object v23 = this.mPlayingTransitions.get(phiInstruction);
	boolean v24 = v23.isTransientLaunch(WindowState.mActivityRecord);
	boolean v20 = 1;
	boolean v26 = RecentsAnimationController.isTargetApp(WindowState.mActivityRecord);
	boolean v27 = RecentsAnimationController.isAnimatingApp(WindowState.mActivityRecord);
	boolean v25 = phiInstruction;
	ProtoLogImpl v29 = ProtoLogImpl.getSingleInstance();
	v29.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_BACK_PREVIEW, -451552570, 0, ""Current focused window being animated by recents. Overriding back callback to recents controller callback."", 0);
	this.sThreadPriorityBooster.reset();
	BackNavigationInfo v2 = 0;
	return v2;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getPackageScreenCompatMode(Ljava/lang/String;)I","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageScreenCompatModeLocked(Ljava/lang/String;)I > 7,2 @13 exception:8,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
return 9,","depth : 0
public int getPackageScreenCompatMode(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = this.mCompatModePackages.getPackageScreenCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
","public int getPackageScreenCompatMode(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = this.mCompatModePackages.getPackageScreenCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getPackageScreenCompatMode(Ljava/lang/String;)I","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageScreenCompatModeLocked(Ljava/lang/String;)I > 7,2 @13 exception:8,
4 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:3,
8 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 4,2,5,6 @7 exception:7,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,6,
conditional branch(ne, to iindex=-1) 9,6,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 1,9 @17 exception:10,
return 11,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 9,","depth : 0
public int getPackageScreenCompatMode(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = this.mCompatModePackages.getPackageScreenCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public int getPackageScreenCompatModeLocked(String p1){
	IPackageManager v1 = AppGlobals.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 0, 0);
	int v3 = p0.computeCompatModeLocked(phiInstruction);
	return v3;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public int getPackageScreenCompatMode(String p1){
	this.sThreadPriorityBooster.boost();
	IPackageManager v7 = AppGlobals.getPackageManager();
	ApplicationInfo v8 = v7.getApplicationInfo(p1, 0, 0);
	int v9 = CompatModePackages.computeCompatModeLocked(phiInstruction);
	int v6 = v9;
	this.sThreadPriorityBooster.reset();
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getPackageScreenCompatMode(Ljava/lang/String;)I","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageScreenCompatModeLocked(Ljava/lang/String;)I > 7,2 @13 exception:8,
4 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:3,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
8 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 4,2,5,6 @7 exception:7,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,6,
conditional branch(ne, to iindex=-1) 9,6,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 1,9 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, alwaysSupportsScreen()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, neverSupportsScreen()Z > 4 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @20 exception:10,
return 11,
return 11,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 9,","depth : 0
public int getPackageScreenCompatMode(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = this.mCompatModePackages.getPackageScreenCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public int getPackageScreenCompatModeLocked(String p1){
	IPackageManager v1 = AppGlobals.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 0, 0);
	int v3 = p0.computeCompatModeLocked(phiInstruction);
	return v3;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public int computeCompatModeLocked(ApplicationInfo p1){
	CompatibilityInfo v1 = p0.compatibilityInfoForPackageLocked(p1);
	boolean v2 = v1.alwaysSupportsScreen();
	boolean v3 = v1.neverSupportsScreen();
	boolean v4 = p0.getPackageCompatModeEnabledLocked(p1);
	return v4;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public int getPackageScreenCompatMode(String p1){
	IPackageManager v9 = ActivityThread.getPackageManager();
	IPackageManager v8 = v9;
	ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0);
	CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(phiInstruction);
	boolean v13 = v12.alwaysSupportsScreen();
	boolean v14 = v12.neverSupportsScreen();
	boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(phiInstruction);
	int v11 = v15;
	int v7 = v11;
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getPackageScreenCompatMode(Ljava/lang/String;)I","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageScreenCompatModeLocked(Ljava/lang/String;)I > 7,2 @13 exception:8,
4 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:3,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
8 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 4,2,5,6 @7 exception:7,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,6,
conditional branch(ne, to iindex=-1) 9,6,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 1,9 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, alwaysSupportsScreen()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, neverSupportsScreen()Z > 4 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @20 exception:10,
return 11,
return 11,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 9,","depth : 0
public int getPackageScreenCompatMode(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = this.mCompatModePackages.getPackageScreenCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public int getPackageScreenCompatModeLocked(String p1){
	IPackageManager v1 = AppGlobals.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 0, 0);
	int v3 = p0.computeCompatModeLocked(phiInstruction);
	return v3;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public int computeCompatModeLocked(ApplicationInfo p1){
	CompatibilityInfo v1 = p0.compatibilityInfoForPackageLocked(p1);
	boolean v2 = v1.alwaysSupportsScreen();
	boolean v3 = v1.neverSupportsScreen();
	boolean v4 = p0.getPackageCompatModeEnabledLocked(p1);
	return v4;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public int getPackageScreenCompatMode(String p1){
	WindowManagerThreadPriorityBooster.boost();
	IPackageManager v10 = ActivityThread.getPackageManager();
	IPackageManager v9 = v10;
	ApplicationInfo v11 = v9.getApplicationInfo(p1, 0, 0);
	CompatibilityInfo v13 = CompatModePackages.compatibilityInfoForPackageLocked(phiInstruction);
	boolean v14 = v13.alwaysSupportsScreen();
	boolean v15 = v13.neverSupportsScreen();
	boolean v16 = CompatModePackages.getPackageCompatModeEnabledLocked(phiInstruction);
	int v12 = v16;
	int v8 = v12;
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getPackageScreenCompatMode(Ljava/lang/String;)I","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mCompatModePackages, <Application,Lcom/android/server/wm/CompatModePackages> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageScreenCompatModeLocked(Ljava/lang/String;)I > 7,2 @13 exception:8,
4 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:3,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
8 = invokeinterface < Application, Landroid/content/pm/IPackageManager, getApplicationInfo(Ljava/lang/String;JI)Landroid/content/pm/ApplicationInfo; > 4,2,5,6 @7 exception:7,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,6,
conditional branch(ne, to iindex=-1) 9,6,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, computeCompatModeLocked(Landroid/content/pm/ApplicationInfo;)I > 1,9 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, compatibilityInfoForPackageLocked(Landroid/content/pm/ApplicationInfo;)Landroid/content/res/CompatibilityInfo; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, alwaysSupportsScreen()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Landroid/content/res/CompatibilityInfo, neverSupportsScreen()Z > 4 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/wm/CompatModePackages, getPackageCompatModeEnabledLocked(Landroid/content/pm/ApplicationInfo;)Z > 1,2 @20 exception:10,
return 11,
return 11,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @18 exception:14,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 9,","depth : 0
public int getPackageScreenCompatMode(String p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""getPackageScreenCompatMode"");
	WindowManagerService.boostPriorityForLockedSection();
	int v3 = this.mCompatModePackages.getPackageScreenCompatModeLocked(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v3;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public int getPackageScreenCompatModeLocked(String p1){
	IPackageManager v1 = AppGlobals.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 0, 0);
	int v3 = p0.computeCompatModeLocked(phiInstruction);
	return v3;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public int computeCompatModeLocked(ApplicationInfo p1){
	CompatibilityInfo v1 = p0.compatibilityInfoForPackageLocked(p1);
	boolean v2 = v1.alwaysSupportsScreen();
	boolean v3 = v1.neverSupportsScreen();
	boolean v4 = p0.getPackageCompatModeEnabledLocked(p1);
	return v4;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public int getPackageScreenCompatMode(String p1){
	IPackageManager v9 = ActivityThread.getPackageManager();
	IPackageManager v8 = v9;
	ApplicationInfo v10 = v8.getApplicationInfo(p1, 0, 0);
	CompatibilityInfo v12 = CompatModePackages.compatibilityInfoForPackageLocked(phiInstruction);
	boolean v13 = v12.alwaysSupportsScreen();
	boolean v14 = v12.neverSupportsScreen();
	boolean v15 = CompatModePackages.getPackageCompatModeEnabledLocked(phiInstruction);
	int v11 = v15;
	int v7 = v11;
	WindowManagerThreadPriorityBooster.reset();
	return v7;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V","0","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRunningVoice, <Application,Landroid/service/voice/IVoiceInteractionSession> > 1,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 6 @10 exception:8,
11 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 2 @14 exception:10,
conditional branch(ne, to iindex=-1) 9,11,
conditional branch(eq, to iindex=-1) 3,7,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVoiceWakeLock, <Application,Landroid/os/PowerManager$WakeLock> > 1,
invokevirtual < Application, Landroid/os/PowerManager$WakeLock, acquire()V > 14 @24 exception:15,
goto (from iindex= 13 to iindex = 6),
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:27,
return,","depth : 0
public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	IBinder v2 = this.mRunningVoice.asBinder();
	IBinder v3 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	IBinder v2 = this.mRunningVoice.asBinder();
	IBinder v3 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRunningVoice, <Application,Landroid/service/voice/IVoiceInteractionSession> > 1,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 6 @10 exception:8,
11 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 2 @14 exception:10,
conditional branch(ne, to iindex=-1) 9,11,
conditional branch(eq, to iindex=-1) 3,7,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVoiceWakeLock, <Application,Landroid/os/PowerManager$WakeLock> > 1,
invokevirtual < Application, Landroid/os/PowerManager$WakeLock, acquire()V > 14 @24 exception:15,
goto (from iindex= 13 to iindex = 6),
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	IBinder v2 = this.mRunningVoice.asBinder();
	IBinder v3 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	IBinder v3 = this.mRunningVoice.asBinder();
	IBinder v4 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	this.sThreadPriorityBooster.reset();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V","1","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRunningVoice, <Application,Landroid/service/voice/IVoiceInteractionSession> > 1,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 6 @10 exception:8,
11 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 2 @14 exception:10,
conditional branch(ne, to iindex=-1) 9,11,
conditional branch(eq, to iindex=-1) 3,7,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVoiceWakeLock, <Application,Landroid/os/PowerManager$WakeLock> > 1,
invokevirtual < Application, Landroid/os/PowerManager$WakeLock, release()V > 12 @30 exception:13,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	IBinder v2 = this.mRunningVoice.asBinder();
	IBinder v3 = p1.asBinder();
	this.mVoiceWakeLock.release();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	this.sThreadPriorityBooster.boost();
	IBinder v3 = this.mRunningVoice.asBinder();
	IBinder v4 = p1.asBinder();
	this.mVoiceWakeLock.release();
	this.sThreadPriorityBooster.reset();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRunningVoice, <Application,Landroid/service/voice/IVoiceInteractionSession> > 1,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 6 @10 exception:8,
11 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 2 @14 exception:10,
conditional branch(ne, to iindex=-1) 9,11,
conditional branch(eq, to iindex=-1) 3,7,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVoiceWakeLock, <Application,Landroid/os/PowerManager$WakeLock> > 1,
invokevirtual < Application, Landroid/os/PowerManager$WakeLock, acquire()V > 14 @24 exception:15,
goto (from iindex= 13 to iindex = 6),
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	IBinder v2 = this.mRunningVoice.asBinder();
	IBinder v3 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	IBinder v4 = this.mRunningVoice.asBinder();
	IBinder v5 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRunningVoice, <Application,Landroid/service/voice/IVoiceInteractionSession> > 1,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 6 @10 exception:8,
11 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 2 @14 exception:10,
conditional branch(ne, to iindex=-1) 9,11,
conditional branch(eq, to iindex=-1) 3,7,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVoiceWakeLock, <Application,Landroid/os/PowerManager$WakeLock> > 1,
invokevirtual < Application, Landroid/os/PowerManager$WakeLock, acquire()V > 14 @24 exception:15,
goto (from iindex= 13 to iindex = 6),
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	IBinder v2 = this.mRunningVoice.asBinder();
	IBinder v3 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	WindowManagerThreadPriorityBooster.boost();
	IBinder v5 = this.mRunningVoice.asBinder();
	IBinder v6 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","setVoiceKeepAwake(Landroid/service/voice/IVoiceInteractionSession;Z)V","2","4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRunningVoice, <Application,Landroid/service/voice/IVoiceInteractionSession> > 1,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 6 @10 exception:8,
11 = invokeinterface < Application, Landroid/service/voice/IVoiceInteractionSession, asBinder()Landroid/os/IBinder; > 2 @14 exception:10,
conditional branch(ne, to iindex=-1) 9,11,
conditional branch(eq, to iindex=-1) 3,7,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mVoiceWakeLock, <Application,Landroid/os/PowerManager$WakeLock> > 1,
invokevirtual < Application, Landroid/os/PowerManager$WakeLock, acquire()V > 14 @24 exception:15,
goto (from iindex= 13 to iindex = 6),
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @34 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	WindowManagerService.boostPriorityForLockedSection();
	IBinder v2 = this.mRunningVoice.asBinder();
	IBinder v3 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void setVoiceKeepAwake(IVoiceInteractionSession p1, boolean p2){
	IBinder v4 = this.mRunningVoice.asBinder();
	IBinder v5 = p1.asBinder();
	this.mVoiceWakeLock.acquire();
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","startAssistantActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I","0","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,2 @0 exception:10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 11,12,13 @9 exception:14,
17 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,4,5,9,15 @14 exception:16,
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @18 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @22 exception:20,
23 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 21,6,15 @26 exception:22,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 23,5 @30 exception:24,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 25,2 @34 exception:26,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 27,3 @38 exception:28,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 29,7 @42 exception:30,
33 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 31,8 @46 exception:32,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 33,17 @50 exception:34,
38 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setAllowBackgroundActivityStart(Z)Lcom/android/server/wm/ActivityStarter; > 35,36 @55 exception:37,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 38 @59 exception:39,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @63 exception:47,
return 40,","depth : 0
public int startAssistantActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, Bundle p7, int p8){
	int v3 = p0.handleIncomingUser(p3, p4, p8, ""startAssistantActivity"");
	long v4 = Binder.clearCallingIdentity();
	ActivityStartController v5 = p0.getActivityStartController();
	ActivityStarter v6 = v5.obtainStarter(p5, ""startAssistantActivity"");
	ActivityStarter v7 = v6.setCallingUid(p4);
	ActivityStarter v8 = v7.setCallingPackage(p1);
	ActivityStarter v9 = v8.setCallingFeatureId(p2);
	ActivityStarter v10 = v9.setResolvedType(p6);
	ActivityStarter v11 = v10.setActivityOptions(p7);
	ActivityStarter v12 = v11.setUserId(v3);
	ActivityStarter v13 = v12.setAllowBackgroundActivityStart(1);
	int v14 = v13.execute();
	Binder.restoreCallingIdentity(v4);
	return v14;
}
-----
","public int startAssistantActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, Bundle p7, int p8){
	int v3 = p0.handleIncomingUser(p3, p4, p8, ""startAssistantActivity"");
	long v4 = Binder.clearCallingIdentity();
	ActivityStartController v5 = p0.getActivityStartController();
	ActivityStarter v6 = v5.obtainStarter(p5, ""startAssistantActivity"");
	ActivityStarter v7 = v6.setCallingUid(p4);
	ActivityStarter v8 = v7.setCallingPackage(p1);
	ActivityStarter v9 = v8.setCallingFeatureId(p2);
	ActivityStarter v10 = v9.setResolvedType(p6);
	ActivityStarter v11 = v10.setActivityOptions(p7);
	ActivityStarter v12 = v11.setUserId(v3);
	ActivityStarter v13 = v12.setAllowBackgroundActivityStart(1);
	int v14 = v13.execute();
	Binder.restoreCallingIdentity(v4);
	return v14;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startAssistantActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I","1","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,2 @0 exception:10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 11,12,13 @9 exception:14,
17 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,4,5,9,15 @14 exception:16,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @18 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @22 exception:20,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
23 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 21,6,15 @26 exception:22,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
return 10,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 23,5 @30 exception:24,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingUid, <Primordial,I> > = 2,
return 1,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 25,2 @34 exception:26,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingPackage, <Application,Ljava/lang/String> > = 2,
return 1,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 27,3 @38 exception:28,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, callingFeatureId, <Application,Ljava/lang/String> > = 2,
return 1,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 29,7 @42 exception:30,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, resolvedType, <Application,Ljava/lang/String> > = 2,
return 1,
33 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 31,8 @46 exception:32,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
return 6,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 33,17 @50 exception:34,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, userId, <Primordial,I> > = 2,
return 1,
38 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setAllowBackgroundActivityStart(Z)Lcom/android/server/wm/ActivityStarter; > 35,36 @55 exception:37,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, allowBackgroundActivityStart, <Primordial,Z> > = 2,
return 1,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 38 @59 exception:39,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @63 exception:47,
return 40,","depth : 0
public int startAssistantActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, Bundle p7, int p8){
	int v3 = p0.handleIncomingUser(p3, p4, p8, ""startAssistantActivity"");
	long v4 = Binder.clearCallingIdentity();
	ActivityStartController v5 = p0.getActivityStartController();
	ActivityStarter v6 = v5.obtainStarter(p5, ""startAssistantActivity"");
	ActivityStarter v7 = v6.setCallingUid(p4);
	ActivityStarter v8 = v7.setCallingPackage(p1);
	ActivityStarter v9 = v8.setCallingFeatureId(p2);
	ActivityStarter v10 = v9.setResolvedType(p6);
	ActivityStarter v11 = v10.setActivityOptions(p7);
	ActivityStarter v12 = v11.setUserId(v3);
	ActivityStarter v13 = v12.setAllowBackgroundActivityStart(1);
	int v14 = v13.execute();
	Binder.restoreCallingIdentity(v4);
	return v14;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 1
public ActivityStarter setCallingUid(int p1){
	ActivityStarter$Request.callingUid = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingPackage(String p1){
	ActivityStarter$Request.callingPackage = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setCallingFeatureId(String p1){
	ActivityStarter$Request.callingFeatureId = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setResolvedType(String p1){
	ActivityStarter$Request.resolvedType = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 1
public ActivityStarter setUserId(int p1){
	ActivityStarter$Request.userId = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setAllowBackgroundActivityStart(boolean p1){
	ActivityStarter$Request.allowBackgroundActivityStart = p1;
	return p0;
}
-----
","public int startAssistantActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, Bundle p7, int p8){
	int v4 = this.mAmInternal.handleIncomingUser(p3, p4, p8, 0, 0, ""startAssistantActivity"", 0);
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	ActivityStartController v6 = this.mActivityStartController;
	ActivityStarter v8 = this.mFactory.obtain();
	ActivityStarter v9 = v8.setIntent(p5);
	ActivityStarter v10 = v9.setReason(""startAssistantActivity"");
	ActivityStarter v7 = v10;
	ActivityStarter$Request.callingUid = p4;
	ActivityStarter v11 = ActivityStarter;
	ActivityStarter$Request.callingPackage = p1;
	ActivityStarter v12 = ActivityStarter;
	ActivityStarter$Request.callingFeatureId = p2;
	ActivityStarter v13 = ActivityStarter;
	ActivityStarter$Request.resolvedType = p6;
	ActivityStarter v14 = ActivityStarter;
	SafeActivityOptions v16 = SafeActivityOptions.fromBundle(p7);
	ActivityStarter v17 = ActivityStarter.setActivityOptions(v16);
	ActivityStarter v15 = v17;
	ActivityStarter$Request.userId = v3;
	ActivityStarter v18 = ActivityStarter;
	ActivityStarter$Request.allowBackgroundActivityStart = 1;
	ActivityStarter v19 = ActivityStarter;
	int v20 = v19.execute();
	Binder.restoreCallingIdentity(v5);
	return v20;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startAssistantActivity(Ljava/lang/String;Ljava/lang/String;IILandroid/content/Intent;Ljava/lang/String;Landroid/os/Bundle;I)I","2","invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, assertPackageMatchesCallingUid(Ljava/lang/String;)V > 1,2 @0 exception:10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 11,12,13 @9 exception:14,
17 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,4,5,9,15 @14 exception:16,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @18 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getActivityStartController()Lcom/android/server/wm/ActivityStartController; > 1 @22 exception:20,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
return 2,
23 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, obtainStarter(Landroid/content/Intent;Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 21,6,15 @26 exception:22,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mFactory, <Application,Lcom/android/server/wm/ActivityStarter$Factory> > 1,
6 = invokeinterface < Application, Lcom/android/server/wm/ActivityStarter$Factory, obtain()Lcom/android/server/wm/ActivityStarter; > 4 @2 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setIntent(Landroid/content/Intent;)Lcom/android/server/wm/ActivityStarter; > 6,2 @6 exception:7,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, intent, <Application,Landroid/content/Intent> > = 2,
return 1,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setReason(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 8,3 @10 exception:9,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, reason, <Application,Ljava/lang/String> > = 2,
return 1,
return 10,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingUid(I)Lcom/android/server/wm/ActivityStarter; > 23,5 @30 exception:24,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingPackage(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 25,2 @34 exception:26,
29 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setCallingFeatureId(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 27,3 @38 exception:28,
31 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setResolvedType(Ljava/lang/String;)Lcom/android/server/wm/ActivityStarter; > 29,7 @42 exception:30,
33 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Landroid/os/Bundle;)Lcom/android/server/wm/ActivityStarter; > 31,8 @46 exception:32,
4 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 2 @0 exception:3,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setActivityOptions(Lcom/android/server/wm/SafeActivityOptions;)Lcom/android/server/wm/ActivityStarter; > 1,4 @4 exception:5,
3 = getfield < Application, Lcom/android/server/wm/ActivityStarter, mRequest, <Application,Lcom/android/server/wm/ActivityStarter$Request> > 1,
putfield 3.< Application, Lcom/android/server/wm/ActivityStarter$Request, activityOptions, <Application,Lcom/android/server/wm/SafeActivityOptions> > = 2,
return 1,
return 6,
35 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setUserId(I)Lcom/android/server/wm/ActivityStarter; > 33,17 @50 exception:34,
38 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, setAllowBackgroundActivityStart(Z)Lcom/android/server/wm/ActivityStarter; > 35,36 @55 exception:37,
40 = invokevirtual < Application, Lcom/android/server/wm/ActivityStarter, execute()I > 38 @59 exception:39,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @63 exception:47,
return 40,","depth : 0
public int startAssistantActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, Bundle p7, int p8){
	int v3 = p0.handleIncomingUser(p3, p4, p8, ""startAssistantActivity"");
	long v4 = Binder.clearCallingIdentity();
	ActivityStartController v5 = p0.getActivityStartController();
	ActivityStarter v6 = v5.obtainStarter(p5, ""startAssistantActivity"");
	ActivityStarter v7 = v6.setCallingUid(p4);
	ActivityStarter v8 = v7.setCallingPackage(p1);
	ActivityStarter v9 = v8.setCallingFeatureId(p2);
	ActivityStarter v10 = v9.setResolvedType(p6);
	ActivityStarter v11 = v10.setActivityOptions(p7);
	ActivityStarter v12 = v11.setUserId(v3);
	ActivityStarter v13 = v12.setAllowBackgroundActivityStart(1);
	int v14 = v13.execute();
	Binder.restoreCallingIdentity(v4);
	return v14;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public ActivityStartController getActivityStartController(){
	return this.mActivityStartController;
}
-----
depth : 1
public ActivityStarter obtainStarter(Intent p1, String p2){
	ActivityStarter v1 = this.mFactory.obtain();
	ActivityStarter v2 = v1.setIntent(p1);
	ActivityStarter v3 = v2.setReason(p2);
	return v3;
}
-----
depth : 2
public ActivityStarter setIntent(Intent p1){
	ActivityStarter$Request.intent = p1;
	return p0;
}
-----
depth : 2
public ActivityStarter setReason(String p1){
	ActivityStarter$Request.reason = p1;
	return p0;
}
-----
depth : 1
public ActivityStarter setActivityOptions(Bundle p1){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p1);
	ActivityStarter v2 = p0.setActivityOptions(v1);
	return v2;
}
-----
depth : 2
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityStarter setActivityOptions(SafeActivityOptions p1){
	ActivityStarter$Request.activityOptions = p1;
	return p0;
}
-----
","public int startAssistantActivity(String p1, String p2, int p3, int p4, Intent p5, String p6, Bundle p7, int p8){
	int v4 = this.mAmInternal.handleIncomingUser(p3, p4, p8, 0, 0, ""startAssistantActivity"", 0);
	int v3 = v4;
	long v5 = Binder.clearCallingIdentity();
	ActivityStartController v6 = this.mActivityStartController;
	ActivityStarter v8 = this.mFactory.obtain();
	ActivityStarter$Request.intent = p1;
	ActivityStarter v9 = ActivityStarter;
	ActivityStarter$Request.reason = p2;
	ActivityStarter v10 = ActivityStarter;
	ActivityStarter v7 = v10;
	ActivityStarter v11 = v7.setCallingUid(p4);
	ActivityStarter v12 = v11.setCallingPackage(p1);
	ActivityStarter v13 = v12.setCallingFeatureId(p2);
	ActivityStarter v14 = v13.setResolvedType(p6);
	SafeActivityOptions v17 = new SafeActivityOptions(v18);
	ActivityOptions v18 = ActivityOptions.fromBundle(p1);
	SafeActivityOptions v16 = phiInstruction;
	ActivityStarter$Request.activityOptions = v16;
	ActivityStarter v20 = ActivityStarter;
	ActivityStarter v15 = v20;
	ActivityStarter v21 = v15.setUserId(v3);
	ActivityStarter v22 = v21.setAllowBackgroundActivityStart(1);
	int v23 = v22.execute();
	Binder.restoreCallingIdentity(v5);
	return v23;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","unhandledBack()V","0","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @19 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
invokevirtual < Application, Lcom/android/server/wm/Task, unhandledBackLocked()V > 11 @25 exception:13,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @28 exception:19,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @32 exception:27,
return,","depth : 0
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","unhandledBack()V","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @19 exception:10,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 11,12,
invokevirtual < Application, Lcom/android/server/wm/Task, unhandledBackLocked()V > 11 @25 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, finishIfPossible(Ljava/lang/String;Z)I > 3,6,5 @9 exception:7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @28 exception:19,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @32 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public void unhandledBackLocked(){
	ActivityRecord v1 = p0.getTopMostActivity();
	int v2 = v1.finishIfPossible(""unhandled-back"", 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void unhandledBack(){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v5 = v6;
	ActivityRecord v8 = Task.getTopMostActivity();
	int v9 = v8.finishIfPossible(""unhandled-back"", 1);
	Binder.restoreCallingIdentity(v4);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","unhandledBack()V","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @19 exception:10,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 11,12,
invokevirtual < Application, Lcom/android/server/wm/Task, unhandledBackLocked()V > 11 @25 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @28 exception:19,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @32 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public void unhandledBackLocked(){
	ActivityRecord v1 = p0.getTopMostActivity();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void unhandledBack(){
	this.sThreadPriorityBooster.boost();
	long v4 = Binder.clearCallingIdentity();
	Task v6 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v5 = v6;
	ActivityRecord v8 = Task.getTopMostActivity();
	Binder.restoreCallingIdentity(v4);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","unhandledBack()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @19 exception:10,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 11,12,
invokevirtual < Application, Lcom/android/server/wm/Task, unhandledBackLocked()V > 11 @25 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 3,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, finishIfPossible(Ljava/lang/String;Z)I > 3,6,5 @9 exception:7,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, finishIfPossible(ILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;Ljava/lang/String;Z)I > 1,4,4,4,2,3 @6 exception:5,
return 6,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @28 exception:19,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @32 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public void unhandledBackLocked(){
	ActivityRecord v1 = p0.getTopMostActivity();
	int v2 = v1.finishIfPossible(""unhandled-back"", 1);
	return;
}
-----
depth : 2
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public int finishIfPossible(String p1, boolean p2){
	int v1 = p0.finishIfPossible(0, 0, 0, p1, p2);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void unhandledBack(){
	long v5 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	WindowContainer v9 = RootWindowContainer.getChildAt(phiInstruction);
	Task v10 = v9.getFocusedRootTask();
	Task v7 = v10;
	Task v6 = v7;
	WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v15 = WindowContainer.getActivity(v13, 1);
	ActivityRecord v12 = v15;
	int v17 = ActivityRecord.finishIfPossible(0, 0, 0, ""unhandled-back"", 1);
	int v16 = v17;
	Binder.restoreCallingIdentity(v5);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","unhandledBack()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @19 exception:10,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 11,12,
invokevirtual < Application, Lcom/android/server/wm/Task, unhandledBackLocked()V > 11 @25 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 3,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, finishIfPossible(Ljava/lang/String;Z)I > 3,6,5 @9 exception:7,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, finishIfPossible(ILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;Ljava/lang/String;Z)I > 1,4,4,4,2,3 @6 exception:5,
return 6,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @28 exception:19,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @32 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public void unhandledBackLocked(){
	ActivityRecord v1 = p0.getTopMostActivity();
	int v2 = v1.finishIfPossible(""unhandled-back"", 1);
	return;
}
-----
depth : 2
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public int finishIfPossible(String p1, boolean p2){
	int v1 = p0.finishIfPossible(0, 0, 0, p1, p2);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void unhandledBack(){
	WindowManagerThreadPriorityBooster.boost();
	long v6 = Binder.clearCallingIdentity();
	int v9 = RootWindowContainer.getChildCount();
	WindowContainer v10 = RootWindowContainer.getChildAt(phiInstruction);
	Task v11 = v10.getFocusedRootTask();
	Task v8 = v11;
	Task v7 = v8;
	WindowContainer$$ExternalSyntheticLambda2 v14 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v16 = WindowContainer.getActivity(v14, 1);
	ActivityRecord v13 = v16;
	int v18 = ActivityRecord.finishIfPossible(0, 0, 0, ""unhandled-back"", 1);
	int v17 = v18;
	Binder.restoreCallingIdentity(v6);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","unhandledBack()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @15 exception:8,
11 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @19 exception:10,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 11,12,
invokevirtual < Application, Lcom/android/server/wm/Task, unhandledBackLocked()V > 11 @25 exception:13,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTopMostActivity()Lcom/android/server/wm/ActivityRecord; > 1 @0 exception:2,
2 = new <Application,Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2>@0,
invokespecial < Application, Lcom/android/server/wm/WindowContainer$$ExternalSyntheticLambda2, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getActivity(Ljava/util/function/Predicate;Z)Lcom/android/server/wm/ActivityRecord; > 1,2,4 @6 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 3,4,
8 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, finishIfPossible(Ljava/lang/String;Z)I > 3,6,5 @9 exception:7,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, finishIfPossible(ILandroid/content/Intent;Lcom/android/server/uri/NeededUriGrants;Ljava/lang/String;Z)I > 1,4,4,4,2,3 @6 exception:5,
return 6,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @28 exception:19,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @32 exception:27,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void unhandledBack(){
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	v4.unhandledBackLocked();
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public void unhandledBackLocked(){
	ActivityRecord v1 = p0.getTopMostActivity();
	int v2 = v1.finishIfPossible(""unhandled-back"", 1);
	return;
}
-----
depth : 2
public ActivityRecord getTopMostActivity(){
	WindowContainer$$ExternalSyntheticLambda2 v0 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v2 = p0.getActivity(v0, 1);
	return v2;
}
-----
depth : 2
public int finishIfPossible(String p1, boolean p2){
	int v1 = p0.finishIfPossible(0, 0, 0, p1, p2);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void unhandledBack(){
	long v5 = Binder.clearCallingIdentity();
	int v8 = RootWindowContainer.getChildCount();
	WindowContainer v9 = RootWindowContainer.getChildAt(phiInstruction);
	Task v10 = v9.getFocusedRootTask();
	Task v7 = v10;
	Task v6 = v7;
	WindowContainer$$ExternalSyntheticLambda2 v13 = new WindowContainer$$ExternalSyntheticLambda2();
	ActivityRecord v15 = WindowContainer.getActivity(v13, 1);
	ActivityRecord v12 = v15;
	int v17 = ActivityRecord.finishIfPossible(0, 0, 0, ""unhandled-back"", 1);
	int v16 = v17;
	Binder.restoreCallingIdentity(v5);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","keyguardGoingAway(I)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
10 = binaryop(and) 2 , 9,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 12,11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
15 = binaryop(or) 13 , 14,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > = 15,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
21 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1>@38,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/ActivityTaskManagerService;I)V > 21,1,2 @40 exception:22,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 20,21 @43 exception:23,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @47 exception:30,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @50 exception:37,
return,","depth : 0
public void keyguardGoingAway(int p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""keyguardGoingAway"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons | 1);
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","public void keyguardGoingAway(int p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""keyguardGoingAway"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons | 1);
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v4 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","keyguardGoingAway(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = binaryop(and) 2 , 9,
conditional branch(eq, to iindex=-1) 10,11,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, invalidateHomeTaskSnapshot(Landroid/os/IBinder;)V > 16,11 @22 exception:17,
conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @4 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @10 exception:7,
conditional branch(ne, to iindex=-1) 2,3,
10 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 10,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 11 @19 exception:12,
15 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootHomeTask()Lcom/android/server/wm/Task; > 13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,3,
17 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 15 @29 exception:16,
goto (from iindex= 16 to iindex = 7),
18 = phi  17,3,9,
conditional branch(eq, to iindex=-1) 18,3,
22 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHome()Z > 18 @42 exception:21,
conditional branch(eq, to iindex=-1) 22,3,
23 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 23,
25 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 24,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 18 @54 exception:26,
28 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 27,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, removeSnapshotCache(I)V > 25,28 @60 exception:29,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @64 exception:40,
return,
goto (from iindex= 12 to iindex = 11),
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
21 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1>@38,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/ActivityTaskManagerService;I)V > 21,1,2 @40 exception:22,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 20,21 @43 exception:23,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @47 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @50 exception:37,
return,","depth : 0
public void keyguardGoingAway(int p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""keyguardGoingAway"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mActivityClientController.invalidateHomeTaskSnapshot(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v4 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void invalidateHomeTaskSnapshot(IBinder p1){
	ActivityTaskManagerService.enforceTaskPermission(""invalidateHomeTaskSnapshot"");
	WindowManagerService.boostPriorityForLockedSection();
	TaskDisplayArea v3 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v4 = v3.getRootHomeTask();
	ActivityRecord v5 = v4.topRunningActivity();
	boolean v6 = phiInstruction.isActivityTypeHome();
	Task v7 = phiInstruction.getTask();
	WindowManagerService.mTaskSnapshotController.removeSnapshotCache(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void keyguardGoingAway(int p1){
	long v4 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	ActivityTaskManagerService.enforceTaskPermission(""invalidateHomeTaskSnapshot"");
	WindowManagerService.boostPriorityForLockedSection();
	TaskDisplayArea v10 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v11 = v10.getRootHomeTask();
	ActivityRecord v12 = v11.topRunningActivity();
	boolean v13 = phiInstruction.isActivityTypeHome();
	Task v14 = phiInstruction.getTask();
	WindowManagerService.mTaskSnapshotController.removeSnapshotCache(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v17 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v17);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v4);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","keyguardGoingAway(I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = binaryop(and) 2 , 9,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mKeyguardShown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 12,11,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > 1,
15 = binaryop(or) 13 , 14,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mDemoteTopAppReasons, <Primordial,I> > = 15,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
21 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1>@38,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/ActivityTaskManagerService;I)V > 21,1,2 @40 exception:22,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 20,21 @43 exception:23,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @47 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @50 exception:37,
return,","depth : 0
public void keyguardGoingAway(int p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""keyguardGoingAway"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons | 1);
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v3 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void keyguardGoingAway(int p1){
	long v4 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	this.mDemoteTopAppReasons = (this.mDemoteTopAppReasons | 1);
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v7 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v7);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v4);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","keyguardGoingAway(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = binaryop(and) 2 , 9,
conditional branch(eq, to iindex=-1) 10,11,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, invalidateHomeTaskSnapshot(Landroid/os/IBinder;)V > 16,11 @22 exception:17,
conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @4 exception:5,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @10 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
conditional branch(ne, to iindex=-1) 2,3,
10 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 10,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 11 @19 exception:12,
2 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDefaultDisplay, <Application,Lcom/android/server/wm/DisplayContent> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
15 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootHomeTask()Lcom/android/server/wm/Task; > 13 @23 exception:14,
2 = getfield < Application, Lcom/android/server/wm/TaskDisplayArea, mRootHomeTask, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
conditional branch(eq, to iindex=-1) 15,3,
17 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 15 @29 exception:16,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
goto (from iindex= 16 to iindex = 7),
18 = phi  17,3,9,
conditional branch(eq, to iindex=-1) 18,3,
22 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHome()Z > 18 @42 exception:21,
conditional branch(eq, to iindex=-1) 22,3,
23 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 23,
25 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 24,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 18 @54 exception:26,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
28 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 27,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, removeSnapshotCache(I)V > 25,28 @60 exception:29,
3 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mCache, <Application,Lcom/android/server/wm/TaskSnapshotCache> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, removeRunningEntry(I)V > 3,2 @2 exception:4,
return,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @64 exception:40,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,
goto (from iindex= 12 to iindex = 11),
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
21 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1>@38,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/ActivityTaskManagerService;I)V > 21,1,2 @40 exception:22,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 20,21 @43 exception:23,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @47 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @50 exception:37,
return,","depth : 0
public void keyguardGoingAway(int p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""keyguardGoingAway"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mActivityClientController.invalidateHomeTaskSnapshot(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v4 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void invalidateHomeTaskSnapshot(IBinder p1){
	ActivityTaskManagerService.enforceTaskPermission(""invalidateHomeTaskSnapshot"");
	WindowManagerService.boostPriorityForLockedSection();
	TaskDisplayArea v3 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v4 = v3.getRootHomeTask();
	ActivityRecord v5 = v4.topRunningActivity();
	boolean v6 = phiInstruction.isActivityTypeHome();
	Task v7 = phiInstruction.getTask();
	WindowManagerService.mTaskSnapshotController.removeSnapshotCache(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 2
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 2
public Task getRootHomeTask(){
	return this.mRootHomeTask;
}
-----
depth : 2
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public Task getTask(){
	return this.task;
}
-----
depth : 2
public void removeSnapshotCache(int p1){
	this.mCache.removeRunningEntry(p1);
	return;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void keyguardGoingAway(int p1){
	long v4 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	TaskDisplayArea v16 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	TaskDisplayArea v15 = v16;
	Task v17 = this.mRootHomeTask;
	ActivityRecord v19 = TaskFragment.topRunningActivity(0);
	ActivityRecord v18 = v19;
	boolean v20 = phiInstruction.isActivityTypeHome();
	Task v21 = this.task;
	this.mCache.removeRunningEntry(Task.mTaskId);
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v26 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v26);
	Binder.restoreCallingIdentity(v4);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","keyguardGoingAway(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
10 = binaryop(and) 2 , 9,
conditional branch(eq, to iindex=-1) 10,11,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, invalidateHomeTaskSnapshot(Landroid/os/IBinder;)V > 16,11 @22 exception:17,
conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @4 exception:5,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @10 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
conditional branch(ne, to iindex=-1) 2,3,
10 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 10,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 11 @19 exception:12,
2 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDefaultDisplay, <Application,Lcom/android/server/wm/DisplayContent> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
15 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootHomeTask()Lcom/android/server/wm/Task; > 13 @23 exception:14,
2 = getfield < Application, Lcom/android/server/wm/TaskDisplayArea, mRootHomeTask, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
conditional branch(eq, to iindex=-1) 15,3,
17 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 15 @29 exception:16,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
goto (from iindex= 16 to iindex = 7),
18 = phi  17,3,9,
conditional branch(eq, to iindex=-1) 18,3,
22 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHome()Z > 18 @42 exception:21,
conditional branch(eq, to iindex=-1) 22,3,
23 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 23,
25 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 24,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 18 @54 exception:26,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
28 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 27,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, removeSnapshotCache(I)V > 25,28 @60 exception:29,
3 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mCache, <Application,Lcom/android/server/wm/TaskSnapshotCache> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, removeRunningEntry(I)V > 3,2 @2 exception:4,
return,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @64 exception:40,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,
goto (from iindex= 12 to iindex = 11),
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
21 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1>@38,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/ActivityTaskManagerService;I)V > 21,1,2 @40 exception:22,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 20,21 @43 exception:23,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @47 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @50 exception:37,
return,","depth : 0
public void keyguardGoingAway(int p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""keyguardGoingAway"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mActivityClientController.invalidateHomeTaskSnapshot(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v4 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void invalidateHomeTaskSnapshot(IBinder p1){
	ActivityTaskManagerService.enforceTaskPermission(""invalidateHomeTaskSnapshot"");
	WindowManagerService.boostPriorityForLockedSection();
	TaskDisplayArea v3 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v4 = v3.getRootHomeTask();
	ActivityRecord v5 = v4.topRunningActivity();
	boolean v6 = phiInstruction.isActivityTypeHome();
	Task v7 = phiInstruction.getTask();
	WindowManagerService.mTaskSnapshotController.removeSnapshotCache(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 2
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 2
public Task getRootHomeTask(){
	return this.mRootHomeTask;
}
-----
depth : 2
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public Task getTask(){
	return this.task;
}
-----
depth : 2
public void removeSnapshotCache(int p1){
	this.mCache.removeRunningEntry(p1);
	return;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void keyguardGoingAway(int p1){
	long v4 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	this.sThreadPriorityBooster.boost();
	TaskDisplayArea v17 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	TaskDisplayArea v16 = v17;
	Task v18 = this.mRootHomeTask;
	ActivityRecord v20 = TaskFragment.topRunningActivity(0);
	ActivityRecord v19 = v20;
	boolean v21 = phiInstruction.isActivityTypeHome();
	Task v22 = this.task;
	this.mCache.removeRunningEntry(Task.mTaskId);
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v27 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v27);
	Binder.restoreCallingIdentity(v4);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","keyguardGoingAway(I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceNotIsolatedCaller(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
5 = invokestatic < Application, Landroid/os/UserHandle, isIsolated(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = binaryop(and) 2 , 9,
conditional branch(eq, to iindex=-1) 10,11,
16 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 1,
invokevirtual < Application, Lcom/android/server/wm/ActivityClientController, invalidateHomeTaskSnapshot(Landroid/os/IBinder;)V > 16,11 @22 exception:17,
conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 4 @4 exception:5,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @10 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
conditional branch(ne, to iindex=-1) 2,3,
10 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 10,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 11 @19 exception:12,
2 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mDefaultDisplay, <Application,Lcom/android/server/wm/DisplayContent> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 2 @2 exception:3,
return 4,
15 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootHomeTask()Lcom/android/server/wm/Task; > 13 @23 exception:14,
2 = getfield < Application, Lcom/android/server/wm/TaskDisplayArea, mRootHomeTask, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
conditional branch(eq, to iindex=-1) 15,3,
17 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 15 @29 exception:16,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity(Z)Lcom/android/server/wm/ActivityRecord; > 1,2 @1 exception:3,
return 4,
goto (from iindex= 16 to iindex = 7),
18 = phi  17,3,9,
conditional branch(eq, to iindex=-1) 18,3,
22 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHome()Z > 18 @42 exception:21,
conditional branch(eq, to iindex=-1) 22,3,
23 = getfield < Application, Lcom/android/server/wm/ActivityClientController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
24 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 23,
25 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 24,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, getTask()Lcom/android/server/wm/Task; > 18 @54 exception:26,
2 = getfield < Application, Lcom/android/server/wm/ActivityRecord, task, <Application,Lcom/android/server/wm/Task> > 1,
return 2,
28 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 27,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, removeSnapshotCache(I)V > 25,28 @60 exception:29,
3 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mCache, <Application,Lcom/android/server/wm/TaskSnapshotCache> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, removeRunningEntry(I)V > 3,2 @2 exception:4,
return,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @64 exception:40,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,
goto (from iindex= 12 to iindex = 11),
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
21 = new <Application,Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1>@38,
invokespecial < Application, Lcom/android/server/wm/ActivityTaskManagerService$$ExternalSyntheticLambda1, <init>(Lcom/android/server/wm/ActivityTaskManagerService;I)V > 21,1,2 @40 exception:22,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, forAllDisplays(Ljava/util/function/Consumer;)V > 20,21 @43 exception:23,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @47 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @50 exception:37,
return,","depth : 0
public void keyguardGoingAway(int p1){
	ActivityTaskManagerService.enforceNotIsolatedCaller(""keyguardGoingAway"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	this.mActivityClientController.invalidateHomeTaskSnapshot(0);
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v4 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v4);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void enforceNotIsolatedCaller(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void invalidateHomeTaskSnapshot(IBinder p1){
	ActivityTaskManagerService.enforceTaskPermission(""invalidateHomeTaskSnapshot"");
	WindowManagerService.boostPriorityForLockedSection();
	TaskDisplayArea v3 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v4 = v3.getRootHomeTask();
	ActivityRecord v5 = v4.topRunningActivity();
	boolean v6 = phiInstruction.isActivityTypeHome();
	Task v7 = phiInstruction.getTask();
	WindowManagerService.mTaskSnapshotController.removeSnapshotCache(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 2
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public TaskDisplayArea getDefaultTaskDisplayArea(){
	TaskDisplayArea v1 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	return v1;
}
-----
depth : 2
public Task getRootHomeTask(){
	return this.mRootHomeTask;
}
-----
depth : 2
public ActivityRecord topRunningActivity(){
	ActivityRecord v1 = p0.topRunningActivity(0);
	return v1;
}
-----
depth : 2
public Task getTask(){
	return this.task;
}
-----
depth : 2
public void removeSnapshotCache(int p1){
	this.mCache.removeRunningEntry(p1);
	return;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void keyguardGoingAway(int p1){
	long v4 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	TaskDisplayArea v16 = this.mDefaultDisplay.getDefaultTaskDisplayArea();
	TaskDisplayArea v15 = v16;
	Task v17 = this.mRootHomeTask;
	ActivityRecord v19 = TaskFragment.topRunningActivity(0);
	ActivityRecord v18 = v19;
	boolean v20 = phiInstruction.isActivityTypeHome();
	Task v21 = this.task;
	this.mCache.removeRunningEntry(Task.mTaskId);
	this.sThreadPriorityBooster.reset();
	ActivityTaskManagerService$$ExternalSyntheticLambda1 v26 = new ActivityTaskManagerService$$ExternalSyntheticLambda1(p0,p1);
	this.mRootWindowContainer.forAllDisplays(v26);
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v4);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescriptionIcon(Ljava/lang/String;I)Landroid/graphics/Bitmap;","0","5 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @0 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @4 exception:6,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,5,7,3,8 @10 exception:9,
11 = new <Application,Ljava/io/File>@14,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 11,2 @16 exception:12,
13 = new <Application,Ljava/io/File>@19,
15 = invokestatic < Application, Lcom/android/server/wm/TaskPersister, getUserImagesDir(I)Ljava/io/File; > 10 @21 exception:14,
17 = invokevirtual < Application, Ljava/io/File, getName()Ljava/lang/String; > 11 @25 exception:16,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 13,15,17 @29 exception:18,
20 = invokevirtual < Application, Ljava/io/File, getPath()Ljava/lang/String; > 13 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 20,2 @36 exception:21,
conditional branch(eq, to iindex=-1) 22,23,
26 = invokevirtual < Application, Ljava/lang/String, contains(Ljava/lang/CharSequence;)Z > 2,24 @44 exception:25,
conditional branch(eq, to iindex=-1) 26,23,
46 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
48 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap; > 46,2 @52 exception:47,
return 48,","depth : 0
public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = p0.handleIncomingUser(v1, v2, p2, ""getTaskDescriptionIcon"");
	File v3 = new File(p1);
	File v4 = new File(v5,v6);
	File v5 = TaskPersister.getUserImagesDir(v3);
	String v6 = v3.getName();
	String v8 = v4.getPath();
	boolean v9 = v8.equals(p1);
	boolean v10 = p1.contains(""_activity_icon_"");
	Bitmap v11 = this.mRecentTasks.getTaskDescriptionIcon(p1);
	return v11;
}
-----
","public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = p0.handleIncomingUser(v1, v2, p2, ""getTaskDescriptionIcon"");
	File v4 = new File(p1);
	File v6 = new File(v7,v8);
	File v7 = TaskPersister.getUserImagesDir(v3);
	String v8 = v4.getName();
	String v10 = v6.getPath();
	boolean v11 = v10.equals(p1);
	boolean v12 = p1.contains(""_activity_icon_"");
	Bitmap v13 = this.mRecentTasks.getTaskDescriptionIcon(p1);
	return v13;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescriptionIcon(Ljava/lang/String;I)Landroid/graphics/Bitmap;","1","5 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @0 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @4 exception:6,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,5,7,3,8 @10 exception:9,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
11 = new <Application,Ljava/io/File>@14,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 11,2 @16 exception:12,
13 = new <Application,Ljava/io/File>@19,
15 = invokestatic < Application, Lcom/android/server/wm/TaskPersister, getUserImagesDir(I)Ljava/io/File; > 10 @21 exception:14,
2 = new <Application,Ljava/io/File>@0,
4 = invokestatic < Application, Landroid/os/Environment, getDataSystemCeDirectory(I)Ljava/io/File; > 1 @2 exception:3,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 2,4,5 @8 exception:6,
return 2,
17 = invokevirtual < Application, Ljava/io/File, getName()Ljava/lang/String; > 11 @25 exception:16,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 13,15,17 @29 exception:18,
20 = invokevirtual < Application, Ljava/io/File, getPath()Ljava/lang/String; > 13 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 20,2 @36 exception:21,
conditional branch(eq, to iindex=-1) 22,23,
26 = invokevirtual < Application, Ljava/lang/String, contains(Ljava/lang/CharSequence;)Z > 2,24 @44 exception:25,
conditional branch(eq, to iindex=-1) 26,23,
46 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
48 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap; > 46,2 @52 exception:47,
3 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTaskPersister, <Application,Lcom/android/server/wm/TaskPersister> > 1,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskPersister, getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap; > 3,2 @2 exception:4,
return 5,
return 48,","depth : 0
public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = p0.handleIncomingUser(v1, v2, p2, ""getTaskDescriptionIcon"");
	File v3 = new File(p1);
	File v4 = new File(v5,v6);
	File v5 = TaskPersister.getUserImagesDir(v3);
	String v6 = v3.getName();
	String v8 = v4.getPath();
	boolean v9 = v8.equals(p1);
	boolean v10 = p1.contains(""_activity_icon_"");
	Bitmap v11 = this.mRecentTasks.getTaskDescriptionIcon(p1);
	return v11;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public File getUserImagesDir(int p1){
	File v0 = new File(v1,""recent_images"");
	File v1 = Environment.getDataSystemCeDirectory(p1);
	return v0;
}
-----
depth : 1
public Bitmap getTaskDescriptionIcon(String p1){
	Bitmap v1 = this.mTaskPersister.getTaskDescriptionIcon(p1);
	return v1;
}
-----
","public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.mAmInternal.handleIncomingUser(v1, v2, p2, 0, 0, ""getTaskDescriptionIcon"", 0);
	int v3 = v4;
	File v5 = new File(p1);
	File v7 = new File(v8,v12);
	File v9 = new File(v10,""recent_images"");
	File v10 = Environment.getDataSystemCeDirectory(v3);
	File v8 = v9;
	String v12 = v5.getName();
	String v14 = v7.getPath();
	boolean v15 = v14.equals(p1);
	boolean v16 = p1.contains(""_activity_icon_"");
	Bitmap v18 = this.mTaskPersister.getTaskDescriptionIcon(p1);
	Bitmap v17 = v18;
	return v17;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescriptionIcon(Ljava/lang/String;I)Landroid/graphics/Bitmap;","2","5 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @0 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @4 exception:6,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,5,7,3,8 @10 exception:9,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
11 = new <Application,Ljava/io/File>@14,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 11,2 @16 exception:12,
13 = new <Application,Ljava/io/File>@19,
15 = invokestatic < Application, Lcom/android/server/wm/TaskPersister, getUserImagesDir(I)Ljava/io/File; > 10 @21 exception:14,
2 = new <Application,Ljava/io/File>@0,
4 = invokestatic < Application, Landroid/os/Environment, getDataSystemCeDirectory(I)Ljava/io/File; > 1 @2 exception:3,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 2,4,5 @8 exception:6,
return 2,
17 = invokevirtual < Application, Ljava/io/File, getName()Ljava/lang/String; > 11 @25 exception:16,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 13,15,17 @29 exception:18,
20 = invokevirtual < Application, Ljava/io/File, getPath()Ljava/lang/String; > 13 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 20,2 @36 exception:21,
conditional branch(eq, to iindex=-1) 22,23,
26 = invokevirtual < Application, Ljava/lang/String, contains(Ljava/lang/CharSequence;)Z > 2,24 @44 exception:25,
conditional branch(eq, to iindex=-1) 26,23,
46 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
48 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap; > 46,2 @52 exception:47,
3 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTaskPersister, <Application,Lcom/android/server/wm/TaskPersister> > 1,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskPersister, getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap; > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskPersister, getImageFromWriteQueue(Ljava/lang/String;)Landroid/graphics/Bitmap; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
return 4,
return 5,
return 48,","depth : 0
public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = p0.handleIncomingUser(v1, v2, p2, ""getTaskDescriptionIcon"");
	File v3 = new File(p1);
	File v4 = new File(v5,v6);
	File v5 = TaskPersister.getUserImagesDir(v3);
	String v6 = v3.getName();
	String v8 = v4.getPath();
	boolean v9 = v8.equals(p1);
	boolean v10 = p1.contains(""_activity_icon_"");
	Bitmap v11 = this.mRecentTasks.getTaskDescriptionIcon(p1);
	return v11;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public File getUserImagesDir(int p1){
	File v0 = new File(v1,""recent_images"");
	File v1 = Environment.getDataSystemCeDirectory(p1);
	return v0;
}
-----
depth : 1
public Bitmap getTaskDescriptionIcon(String p1){
	Bitmap v1 = this.mTaskPersister.getTaskDescriptionIcon(p1);
	return v1;
}
-----
depth : 2
public Bitmap getTaskDescriptionIcon(String p1){
	Bitmap v1 = p0.getImageFromWriteQueue(p1);
	return v1;
}
-----
","public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.mAmInternal.handleIncomingUser(v1, v2, p2, 0, 0, ""getTaskDescriptionIcon"", 0);
	int v3 = v4;
	File v5 = new File(p1);
	File v7 = new File(v8,v12);
	File v9 = new File(v10,""recent_images"");
	File v10 = Environment.getDataSystemCeDirectory(v3);
	File v8 = v9;
	String v12 = v5.getName();
	String v14 = v7.getPath();
	boolean v15 = v14.equals(p1);
	boolean v16 = p1.contains(""_activity_icon_"");
	Bitmap v19 = TaskPersister.getImageFromWriteQueue(p1);
	Bitmap v18 = v19;
	Bitmap v17 = v18;
	return v17;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescriptionIcon(Ljava/lang/String;I)Landroid/graphics/Bitmap;","2","5 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @0 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @4 exception:6,
10 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, handleIncomingUser(IIILjava/lang/String;)I > 1,5,7,3,8 @10 exception:9,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
9 = invokevirtual < Application, Landroid/app/ActivityManagerInternal, handleIncomingUser(IIIZILjava/lang/String;Ljava/lang/String;)I > 6,2,3,4,7,7,5,7 @9 exception:8,
return 9,
11 = new <Application,Ljava/io/File>@14,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 11,2 @16 exception:12,
13 = new <Application,Ljava/io/File>@19,
15 = invokestatic < Application, Lcom/android/server/wm/TaskPersister, getUserImagesDir(I)Ljava/io/File; > 10 @21 exception:14,
2 = new <Application,Ljava/io/File>@0,
4 = invokestatic < Application, Landroid/os/Environment, getDataSystemCeDirectory(I)Ljava/io/File; > 1 @2 exception:3,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 2,4,5 @8 exception:6,
return 2,
17 = invokevirtual < Application, Ljava/io/File, getName()Ljava/lang/String; > 11 @25 exception:16,
invokespecial < Application, Ljava/io/File, <init>(Ljava/io/File;Ljava/lang/String;)V > 13,15,17 @29 exception:18,
20 = invokevirtual < Application, Ljava/io/File, getPath()Ljava/lang/String; > 13 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 20,2 @36 exception:21,
conditional branch(eq, to iindex=-1) 22,23,
26 = invokevirtual < Application, Ljava/lang/String, contains(Ljava/lang/CharSequence;)Z > 2,24 @44 exception:25,
conditional branch(eq, to iindex=-1) 26,23,
46 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
48 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap; > 46,2 @52 exception:47,
3 = getfield < Application, Lcom/android/server/wm/RecentTasks, mTaskPersister, <Application,Lcom/android/server/wm/TaskPersister> > 1,
5 = invokevirtual < Application, Lcom/android/server/wm/TaskPersister, getTaskDescriptionIcon(Ljava/lang/String;)Landroid/graphics/Bitmap; > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/wm/TaskPersister, getImageFromWriteQueue(Ljava/lang/String;)Landroid/graphics/Bitmap; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokestatic < Application, Lcom/android/server/wm/TaskPersister, restoreImage(Ljava/lang/String;)Landroid/graphics/Bitmap; > 2 @7 exception:6,
return 7,
return 5,
return 48,","depth : 0
public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v3 = p0.handleIncomingUser(v1, v2, p2, ""getTaskDescriptionIcon"");
	File v3 = new File(p1);
	File v4 = new File(v5,v6);
	File v5 = TaskPersister.getUserImagesDir(v3);
	String v6 = v3.getName();
	String v8 = v4.getPath();
	boolean v9 = v8.equals(p1);
	boolean v10 = p1.contains(""_activity_icon_"");
	Bitmap v11 = this.mRecentTasks.getTaskDescriptionIcon(p1);
	return v11;
}
-----
depth : 1
public int handleIncomingUser(int p1, int p2, int p3, String p4){
	int v1 = this.mAmInternal.handleIncomingUser(p1, p2, p3, 0, 0, p4, 0);
	return v1;
}
-----
depth : 1
public File getUserImagesDir(int p1){
	File v0 = new File(v1,""recent_images"");
	File v1 = Environment.getDataSystemCeDirectory(p1);
	return v0;
}
-----
depth : 1
public Bitmap getTaskDescriptionIcon(String p1){
	Bitmap v1 = this.mTaskPersister.getTaskDescriptionIcon(p1);
	return v1;
}
-----
depth : 2
public Bitmap getTaskDescriptionIcon(String p1){
	Bitmap v1 = p0.getImageFromWriteQueue(p1);
	Bitmap v2 = TaskPersister.restoreImage(p1);
	return v2;
}
-----
","public Bitmap getTaskDescriptionIcon(String p1, int p2){
	int v1 = Binder.getCallingPid();
	int v2 = Binder.getCallingUid();
	int v4 = this.mAmInternal.handleIncomingUser(v1, v2, p2, 0, 0, ""getTaskDescriptionIcon"", 0);
	int v3 = v4;
	File v5 = new File(p1);
	File v7 = new File(v8,v12);
	File v9 = new File(v10,""recent_images"");
	File v10 = Environment.getDataSystemCeDirectory(v3);
	File v8 = v9;
	String v12 = v5.getName();
	String v14 = v7.getPath();
	boolean v15 = v14.equals(p1);
	boolean v16 = p1.contains(""_activity_icon_"");
	Bitmap v19 = TaskPersister.getImageFromWriteQueue(p1);
	Bitmap v20 = TaskPersister.restoreImage(p1);
	Bitmap v18 = v20;
	Bitmap v17 = v18;
	return v17;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 7,2,8 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
14 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 10 @20 exception:13,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:21,
return 14,","depth : 0
public ActivityManager$TaskDescription getTaskDescription(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	ActivityManager$TaskDescription v4 = v3.getTaskDescription();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v4;
}
-----
","public ActivityManager$TaskDescription getTaskDescription(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	ActivityManager$TaskDescription v4 = v3.getTaskDescription();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 7,2,8 @14 exception:9,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 10,11,
14 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 10 @20 exception:13,
2 = getfield < Application, Lcom/android/server/wm/Task, mTaskDescription, <Application,Landroid/app/ActivityManager$TaskDescription> > 1,
return 2,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 14,","depth : 0
public ActivityManager$TaskDescription getTaskDescription(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	ActivityManager$TaskDescription v4 = v3.getTaskDescription();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v4;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public ActivityManager$TaskDescription getTaskDescription(){
	return this.mTaskDescription;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ActivityManager$TaskDescription getTaskDescription(int p1){
	this.sThreadPriorityBooster.boost();
	Task v8 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v7 = v8;
	ActivityManager$TaskDescription v9 = this.mTaskDescription;
	this.sThreadPriorityBooster.reset();
	return v9;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 7,2,8 @14 exception:9,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 10,11,
14 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 10 @20 exception:13,
2 = getfield < Application, Lcom/android/server/wm/Task, mTaskDescription, <Application,Landroid/app/ActivityManager$TaskDescription> > 1,
return 2,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 14,","depth : 0
public ActivityManager$TaskDescription getTaskDescription(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	ActivityManager$TaskDescription v4 = v3.getTaskDescription();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v4;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public ActivityManager$TaskDescription getTaskDescription(){
	return this.mTaskDescription;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ActivityManager$TaskDescription getTaskDescription(int p1){
	this.sThreadPriorityBooster.boost();
	Task v6 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v5 = v6;
	ActivityManager$TaskDescription v7 = this.mTaskDescription;
	this.sThreadPriorityBooster.reset();
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 7,2,8 @14 exception:9,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(eq, to iindex=-1) 10,11,
14 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 10 @20 exception:13,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 14,","depth : 0
public ActivityManager$TaskDescription getTaskDescription(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	ActivityManager$TaskDescription v4 = v3.getTaskDescription();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v4;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ActivityManager$TaskDescription getTaskDescription(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v9 = PooledLambda.__(Tas.class);
	Integer v10 = Integer.valueOf(p1);
	PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10);
	Task v12 = RootWindowContainer.getTask(v11);
	v11.recycle();
	Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0);
	Task v15 = v12.getRootTask();
	boolean v16 = v12.reparent(v14, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v6 = v12;
	Task v5 = v6;
	ActivityManager$TaskDescription v17 = v5.getTaskDescription();
	return v17;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 7,2,8 @14 exception:9,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(eq, to iindex=-1) 10,11,
14 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 10 @20 exception:13,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 14,","depth : 0
public ActivityManager$TaskDescription getTaskDescription(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	ActivityManager$TaskDescription v4 = v3.getTaskDescription();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v4;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ActivityManager$TaskDescription getTaskDescription(int p1){
	WindowManagerThreadPriorityBooster.boost();
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	Integer v11 = Integer.valueOf(p1);
	PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
	Task v13 = RootWindowContainer.getTask(v12);
	v12.recycle();
	Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
	Task v16 = v13.getRootTask();
	boolean v17 = v13.reparent(v15, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v7 = v13;
	Task v6 = v7;
	ActivityManager$TaskDescription v18 = v6.getTaskDescription();
	return v18;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskDescription(I)Landroid/app/ActivityManager$TaskDescription;","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 7,2,8 @14 exception:9,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(eq, to iindex=-1) 10,11,
14 = invokevirtual < Application, Lcom/android/server/wm/Task, getTaskDescription()Landroid/app/ActivityManager$TaskDescription; > 10 @20 exception:13,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:21,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 14,","depth : 0
public ActivityManager$TaskDescription getTaskDescription(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	Task v3 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	ActivityManager$TaskDescription v4 = v3.getTaskDescription();
	WindowManagerService.resetPriorityAfterLockedSection();
	return v4;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public ActivityManager$TaskDescription getTaskDescription(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getTaskDescription()"");
	AppTransition$$ExternalSyntheticLambda2 v7 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v9 = PooledLambda.__(Tas.class);
	Integer v10 = Integer.valueOf(p1);
	PooledPredicate v11 = PooledLambda.obtainPredicate(v7, v9, v10);
	Task v12 = RootWindowContainer.getTask(v11);
	v11.recycle();
	Task v14 = RootWindowContainer.getOrCreateRootTask(0, 0, v12, 0);
	Task v15 = v12.getRootTask();
	boolean v16 = v12.reparent(v14, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v6 = v12;
	Task v5 = v6;
	ActivityManager$TaskDescription v17 = v5.getTaskDescription();
	WindowManagerThreadPriorityBooster.reset();
	return v17;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskChangeNotificationController, <Application,Lcom/android/server/wm/TaskChangeNotificationController> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V > 5,2 @7 exception:6,
return,","depth : 0
public void unregisterTaskStackListener(ITaskStackListener p1){
	ActivityTaskManagerService.enforceTaskPermission(""unregisterTaskStackListener()"");
	this.mTaskChangeNotificationController.unregisterTaskStackListener(p1);
	return;
}
-----
","public void unregisterTaskStackListener(ITaskStackListener p1){
	ActivityTaskManagerService.enforceTaskPermission(""unregisterTaskStackListener()"");
	this.mTaskChangeNotificationController.unregisterTaskStackListener(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskChangeNotificationController, <Application,Lcom/android/server/wm/TaskChangeNotificationController> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V > 5,2 @7 exception:6,
3 = instanceof 2 <Application,Landroid/os/Binder>,
conditional branch(eq, to iindex=-1) 3,4,
11 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
monitorenter 11,
12 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
14 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 12,2 @9 exception:13,
monitorexit 11,
goto (from iindex= 7 to iindex = 19),
return,
return,","depth : 0
public void unregisterTaskStackListener(ITaskStackListener p1){
	ActivityTaskManagerService.enforceTaskPermission(""unregisterTaskStackListener()"");
	this.mTaskChangeNotificationController.unregisterTaskStackListener(p1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void unregisterTaskStackListener(ITaskStackListener p1){
	boolean v1 = this.mLocalTaskStackListeners.remove(p1);
	return;
}
-----
","public void unregisterTaskStackListener(ITaskStackListener p1){
	boolean v4 = this.mLocalTaskStackListeners.remove(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mTaskChangeNotificationController, <Application,Lcom/android/server/wm/TaskChangeNotificationController> > 1,
invokevirtual < Application, Lcom/android/server/wm/TaskChangeNotificationController, unregisterTaskStackListener(Landroid/app/ITaskStackListener;)V > 5,2 @7 exception:6,
3 = instanceof 2 <Application,Landroid/os/Binder>,
conditional branch(eq, to iindex=-1) 3,4,
11 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
monitorenter 11,
12 = getfield < Application, Lcom/android/server/wm/TaskChangeNotificationController, mLocalTaskStackListeners, <Application,Ljava/util/ArrayList> > 1,
14 = invokevirtual < Application, Ljava/util/ArrayList, remove(Ljava/lang/Object;)Z > 12,2 @9 exception:13,
monitorexit 11,
goto (from iindex= 7 to iindex = 19),
return,
return,","depth : 0
public void unregisterTaskStackListener(ITaskStackListener p1){
	ActivityTaskManagerService.enforceTaskPermission(""unregisterTaskStackListener()"");
	this.mTaskChangeNotificationController.unregisterTaskStackListener(p1);
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void unregisterTaskStackListener(ITaskStackListener p1){
	boolean v1 = this.mLocalTaskStackListeners.remove(p1);
	return;
}
-----
","public void unregisterTaskStackListener(ITaskStackListener p1){
	boolean v6 = this.mLocalTaskStackListeners.remove(p1);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getActivityClientController()Landroid/app/IActivityClientController;","0","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityClientController, <Application,Lcom/android/server/wm/ActivityClientController> > 1,
return 2,","depth : 0
public IActivityClientController getActivityClientController(){
	return this.mActivityClientController;
}
-----
","public IActivityClientController getActivityClientController(){
	return this.mActivityClientController;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;","0","2 = new <Application,Landroid/content/pm/ConfigurationInfo>@0,
invokespecial < Application, Landroid/content/pm/ConfigurationInfo, <init>()V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForCallingPid()Landroid/content/res/Configuration; > 1 @11 exception:6,
8 = getfield < Application, Landroid/content/res/Configuration, touchscreen, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqTouchScreen, <Primordial,I> > = 8,
9 = getfield < Application, Landroid/content/res/Configuration, keyboard, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqKeyboardType, <Primordial,I> > = 9,
10 = getfield < Application, Landroid/content/res/Configuration, navigation, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqNavigation, <Primordial,I> > = 10,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,12,
13 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
14 = binaryop(or) 13 , 11,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 14,
conditional branch(eq, to iindex=-1) 9,16,
conditional branch(eq, to iindex=-1) 9,17,
18 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
19 = binaryop(or) 17 , 18,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 19,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, GL_ES_VERSION, <Primordial,I> > 1,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqGlEsVersion, <Primordial,I> > = 22,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @53 exception:29,
return 2,","depth : 0
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v0 = new ConfigurationInfo();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = p0.getGlobalConfigurationForCallingPid();
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	WindowManagerService.resetPriorityAfterLockedSection();
	return v0;
}
-----
","public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v4 = p0.getGlobalConfigurationForCallingPid();
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	WindowManagerService.resetPriorityAfterLockedSection();
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;","1","2 = new <Application,Landroid/content/pm/ConfigurationInfo>@0,
invokespecial < Application, Landroid/content/pm/ConfigurationInfo, <init>()V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForCallingPid()Landroid/content/res/Configuration; > 1 @11 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForPid(I)Landroid/content/res/Configuration; > 1,3 @4 exception:4,
return 5,
8 = getfield < Application, Landroid/content/res/Configuration, touchscreen, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqTouchScreen, <Primordial,I> > = 8,
9 = getfield < Application, Landroid/content/res/Configuration, keyboard, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqKeyboardType, <Primordial,I> > = 9,
10 = getfield < Application, Landroid/content/res/Configuration, navigation, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqNavigation, <Primordial,I> > = 10,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,12,
13 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
14 = binaryop(or) 13 , 11,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 14,
conditional branch(eq, to iindex=-1) 9,16,
conditional branch(eq, to iindex=-1) 9,17,
18 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
19 = binaryop(or) 17 , 18,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 19,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, GL_ES_VERSION, <Primordial,I> > 1,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqGlEsVersion, <Primordial,I> > = 22,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @53 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 2,","depth : 0
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v0 = new ConfigurationInfo();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = p0.getGlobalConfigurationForCallingPid();
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	WindowManagerService.resetPriorityAfterLockedSection();
	return v0;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Configuration getGlobalConfigurationForCallingPid(){
	int v1 = Binder.getCallingPid();
	Configuration v2 = p0.getGlobalConfigurationForPid(v1);
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	this.sThreadPriorityBooster.boost();
	int v6 = Binder.getCallingPid();
	Configuration v7 = ActivityTaskManagerService.getGlobalConfigurationForPid(v6);
	Configuration v5 = v7;
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	this.sThreadPriorityBooster.reset();
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;","1","2 = new <Application,Landroid/content/pm/ConfigurationInfo>@0,
invokespecial < Application, Landroid/content/pm/ConfigurationInfo, <init>()V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForCallingPid()Landroid/content/res/Configuration; > 1 @11 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForPid(I)Landroid/content/res/Configuration; > 1,3 @4 exception:4,
return 5,
8 = getfield < Application, Landroid/content/res/Configuration, touchscreen, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqTouchScreen, <Primordial,I> > = 8,
9 = getfield < Application, Landroid/content/res/Configuration, keyboard, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqKeyboardType, <Primordial,I> > = 9,
10 = getfield < Application, Landroid/content/res/Configuration, navigation, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqNavigation, <Primordial,I> > = 10,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,12,
13 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
14 = binaryop(or) 13 , 11,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 14,
conditional branch(eq, to iindex=-1) 9,16,
conditional branch(eq, to iindex=-1) 9,17,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, GL_ES_VERSION, <Primordial,I> > 1,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqGlEsVersion, <Primordial,I> > = 22,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @53 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 2,","depth : 0
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v0 = new ConfigurationInfo();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = p0.getGlobalConfigurationForCallingPid();
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	WindowManagerService.resetPriorityAfterLockedSection();
	return v0;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Configuration getGlobalConfigurationForCallingPid(){
	int v1 = Binder.getCallingPid();
	Configuration v2 = p0.getGlobalConfigurationForPid(v1);
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	this.sThreadPriorityBooster.boost();
	int v6 = Binder.getCallingPid();
	Configuration v7 = ActivityTaskManagerService.getGlobalConfigurationForPid(v6);
	Configuration v5 = v7;
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	this.sThreadPriorityBooster.reset();
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;","2","2 = new <Application,Landroid/content/pm/ConfigurationInfo>@0,
invokespecial < Application, Landroid/content/pm/ConfigurationInfo, <init>()V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForCallingPid()Landroid/content/res/Configuration; > 1 @11 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForPid(I)Landroid/content/res/Configuration; > 1,3 @4 exception:4,
3 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, MY_PID, <Primordial,I> >,
conditional branch(eq, to iindex=-1) 2,3,
conditional branch(ge, to iindex=-1) 2,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @10 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 7,2 @15 exception:8,
conditional branch(eq, to iindex=-1) 9,4,
13 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getConfiguration()Landroid/content/res/Configuration; > 9 @21 exception:12,
goto (from iindex= 13 to iindex = 5),
14 = phi  13,11,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @31 exception:23,
return 14,
return 5,
8 = getfield < Application, Landroid/content/res/Configuration, touchscreen, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqTouchScreen, <Primordial,I> > = 8,
9 = getfield < Application, Landroid/content/res/Configuration, keyboard, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqKeyboardType, <Primordial,I> > = 9,
10 = getfield < Application, Landroid/content/res/Configuration, navigation, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqNavigation, <Primordial,I> > = 10,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,12,
13 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
14 = binaryop(or) 13 , 11,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 14,
conditional branch(eq, to iindex=-1) 9,16,
conditional branch(eq, to iindex=-1) 9,17,
18 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
19 = binaryop(or) 17 , 18,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 19,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, GL_ES_VERSION, <Primordial,I> > 1,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqGlEsVersion, <Primordial,I> > = 22,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @53 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 2,","depth : 0
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v0 = new ConfigurationInfo();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = p0.getGlobalConfigurationForCallingPid();
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	WindowManagerService.resetPriorityAfterLockedSection();
	return v0;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Configuration getGlobalConfigurationForCallingPid(){
	int v1 = Binder.getCallingPid();
	Configuration v2 = p0.getGlobalConfigurationForPid(v1);
	return v2;
}
-----
depth : 2
public Configuration getGlobalConfigurationForPid(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v2 = this.mProcessMap.getProcess(p1);
	Configuration v3 = v2.getConfiguration();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	int v7 = Binder.getCallingPid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v10 = this.mProcessMap.getProcess(v7);
	Configuration v11 = v10.getConfiguration();
	WindowManagerService.resetPriorityAfterLockedSection();
	Configuration v8 = phiInstruction;
	Configuration v6 = v8;
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;","2","2 = new <Application,Landroid/content/pm/ConfigurationInfo>@0,
invokespecial < Application, Landroid/content/pm/ConfigurationInfo, <init>()V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForCallingPid()Landroid/content/res/Configuration; > 1 @11 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForPid(I)Landroid/content/res/Configuration; > 1,3 @4 exception:4,
3 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, MY_PID, <Primordial,I> >,
conditional branch(eq, to iindex=-1) 2,3,
conditional branch(ge, to iindex=-1) 2,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @10 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 7,2 @15 exception:8,
conditional branch(eq, to iindex=-1) 9,4,
13 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getConfiguration()Landroid/content/res/Configuration; > 9 @21 exception:12,
goto (from iindex= 13 to iindex = 5),
14 = phi  13,11,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @31 exception:23,
return 14,
return 5,
8 = getfield < Application, Landroid/content/res/Configuration, touchscreen, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqTouchScreen, <Primordial,I> > = 8,
9 = getfield < Application, Landroid/content/res/Configuration, keyboard, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqKeyboardType, <Primordial,I> > = 9,
10 = getfield < Application, Landroid/content/res/Configuration, navigation, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqNavigation, <Primordial,I> > = 10,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,12,
13 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
14 = binaryop(or) 13 , 11,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 14,
conditional branch(eq, to iindex=-1) 9,16,
conditional branch(eq, to iindex=-1) 9,17,
18 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
19 = binaryop(or) 17 , 18,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 19,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, GL_ES_VERSION, <Primordial,I> > 1,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqGlEsVersion, <Primordial,I> > = 22,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @53 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 2,","depth : 0
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v0 = new ConfigurationInfo();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = p0.getGlobalConfigurationForCallingPid();
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	WindowManagerService.resetPriorityAfterLockedSection();
	return v0;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Configuration getGlobalConfigurationForCallingPid(){
	int v1 = Binder.getCallingPid();
	Configuration v2 = p0.getGlobalConfigurationForPid(v1);
	return v2;
}
-----
depth : 2
public Configuration getGlobalConfigurationForPid(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v2 = this.mProcessMap.getProcess(p1);
	Configuration v3 = v2.getConfiguration();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	WindowManagerThreadPriorityBooster.boost();
	int v8 = Binder.getCallingPid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v11 = this.mProcessMap.getProcess(v8);
	Configuration v12 = v11.getConfiguration();
	WindowManagerService.resetPriorityAfterLockedSection();
	Configuration v9 = phiInstruction;
	Configuration v7 = v9;
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getDeviceConfigurationInfo()Landroid/content/pm/ConfigurationInfo;","2","2 = new <Application,Landroid/content/pm/ConfigurationInfo>@0,
invokespecial < Application, Landroid/content/pm/ConfigurationInfo, <init>()V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:5,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
7 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForCallingPid()Landroid/content/res/Configuration; > 1 @11 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getGlobalConfigurationForPid(I)Landroid/content/res/Configuration; > 1,3 @4 exception:4,
3 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, MY_PID, <Primordial,I> >,
conditional branch(eq, to iindex=-1) 2,3,
conditional branch(ge, to iindex=-1) 2,4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @10 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mProcessMap, <Application,Lcom/android/server/wm/WindowProcessControllerMap> > 1,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowProcessControllerMap, getProcess(I)Lcom/android/server/wm/WindowProcessController; > 7,2 @15 exception:8,
conditional branch(eq, to iindex=-1) 9,4,
13 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getConfiguration()Landroid/content/res/Configuration; > 9 @21 exception:12,
goto (from iindex= 13 to iindex = 5),
14 = phi  13,11,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @31 exception:23,
return 14,
return 5,
8 = getfield < Application, Landroid/content/res/Configuration, touchscreen, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqTouchScreen, <Primordial,I> > = 8,
9 = getfield < Application, Landroid/content/res/Configuration, keyboard, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqKeyboardType, <Primordial,I> > = 9,
10 = getfield < Application, Landroid/content/res/Configuration, navigation, <Primordial,I> > 7,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqNavigation, <Primordial,I> > = 10,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 10,12,
13 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
14 = binaryop(or) 13 , 11,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 14,
conditional branch(eq, to iindex=-1) 9,16,
conditional branch(eq, to iindex=-1) 9,17,
18 = getfield < Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > 2,
19 = binaryop(or) 17 , 18,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqInputFeatures, <Primordial,I> > = 19,
22 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, GL_ES_VERSION, <Primordial,I> > 1,
putfield 2.< Application, Landroid/content/pm/ConfigurationInfo, reqGlEsVersion, <Primordial,I> > = 22,
monitorexit 4,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @53 exception:29,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 2,","depth : 0
public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v0 = new ConfigurationInfo();
	WindowManagerService.boostPriorityForLockedSection();
	Configuration v3 = p0.getGlobalConfigurationForCallingPid();
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	WindowManagerService.resetPriorityAfterLockedSection();
	return v0;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Configuration getGlobalConfigurationForCallingPid(){
	int v1 = Binder.getCallingPid();
	Configuration v2 = p0.getGlobalConfigurationForPid(v1);
	return v2;
}
-----
depth : 2
public Configuration getGlobalConfigurationForPid(int p1){
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v2 = this.mProcessMap.getProcess(p1);
	Configuration v3 = v2.getConfiguration();
	WindowManagerService.resetPriorityAfterLockedSection();
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public ConfigurationInfo getDeviceConfigurationInfo(){
	ConfigurationInfo v1 = new ConfigurationInfo();
	int v7 = Binder.getCallingPid();
	WindowManagerService.boostPriorityForLockedSection();
	WindowProcessController v10 = this.mProcessMap.getProcess(v7);
	Configuration v11 = v10.getConfiguration();
	WindowManagerService.resetPriorityAfterLockedSection();
	Configuration v8 = phiInstruction;
	Configuration v6 = v8;
	ConfigurationInfo.reqTouchScreen = Configuration.touchscreen;
	ConfigurationInfo.reqKeyboardType = Configuration.keyboard;
	ConfigurationInfo.reqNavigation = Configuration.navigation;
	ConfigurationInfo.reqInputFeatures = (ConfigurationInfo.reqInputFeatures | 2);
	ConfigurationInfo.reqInputFeatures = (1 | ConfigurationInfo.reqInputFeatures);
	ConfigurationInfo.reqGlEsVersion = this.GL_ES_VERSION;
	WindowManagerThreadPriorityBooster.reset();
	return v1;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","detachNavigationBarFromApp(Landroid/os/IBinder;)V","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @19 exception:11,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, legacyDetachNavigationBarFromApp(Landroid/os/IBinder;)V > 12,2 @23 exception:13,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:19,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @30 exception:25,
return,","depth : 0
public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	TransitionController v4 = p0.getTransitionController();
	v4.legacyDetachNavigationBarFromApp(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	TransitionController v4 = p0.getTransitionController();
	v4.legacyDetachNavigationBarFromApp(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","detachNavigationBarFromApp(Landroid/os/IBinder;)V","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @19 exception:11,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowOrganizerController, <Application,Lcom/android/server/wm/WindowOrganizerController> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowOrganizerController, getTransitionController()Lcom/android/server/wm/TransitionController; > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, legacyDetachNavigationBarFromApp(Landroid/os/IBinder;)V > 12,2 @23 exception:13,
4 = invokestatic < Application, Lcom/android/server/wm/Transition, fromBinder(Landroid/os/IBinder;)Lcom/android/server/wm/Transition; > 2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mPlayingTransitions, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, contains(Ljava/lang/Object;)Z > 6,4 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
goto (from iindex= 7 to iindex = 5),
13 = new <Application,Ljava/lang/StringBuilder>@19,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @21 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @26 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 13,2 @29 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @32 exception:20,
24 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 22,21 @38 exception:23,
return,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @30 exception:25,
return,","depth : 0
public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	TransitionController v4 = p0.getTransitionController();
	v4.legacyDetachNavigationBarFromApp(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public TransitionController getTransitionController(){
	TransitionController v1 = this.mWindowOrganizerController.getTransitionController();
	return v1;
}
-----
depth : 1
public void legacyDetachNavigationBarFromApp(IBinder p1){
	Transition v1 = Transition.fromBinder(p1);
	boolean v2 = this.mPlayingTransitions.contains(v1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Transition isn't playing: "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.e(""TransitionController"", v6);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	TransitionController v6 = this.mWindowOrganizerController.getTransitionController();
	TransitionController v5 = v6;
	Transition v8 = Transition.fromBinder(p1);
	boolean v9 = this.mPlayingTransitions.contains(v8);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","detachNavigationBarFromApp(Landroid/os/IBinder;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @19 exception:11,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowOrganizerController, <Application,Lcom/android/server/wm/WindowOrganizerController> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowOrganizerController, getTransitionController()Lcom/android/server/wm/TransitionController; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowOrganizerController, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 1,
return 2,
return 4,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, legacyDetachNavigationBarFromApp(Landroid/os/IBinder;)V > 12,2 @23 exception:13,
4 = invokestatic < Application, Lcom/android/server/wm/Transition, fromBinder(Landroid/os/IBinder;)Lcom/android/server/wm/Transition; > 2 @0 exception:3,
2 = checkcast <Application,Lcom/android/server/wm/Transition>1 <Application,Lcom/android/server/wm/Transition>,
return 2,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mPlayingTransitions, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, contains(Ljava/lang/Object;)Z > 6,4 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
invokevirtual < Application, Lcom/android/server/wm/Transition, legacyRestoreNavigationBarFromApp()V > 4 @15 exception:9,
2 = getfield < Application, Lcom/android/server/wm/Transition, mNavBarAttachedToApp, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/wm/Transition, mNavBarAttachedToApp, <Primordial,Z> > = 3,
4 = getfield < Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 4,5,
9 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 6,7 @17 exception:8,
putfield 1.< Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > = 3,
12 = getfield < Application, Lcom/android/server/wm/Transition, mController, <Application,Lcom/android/server/wm/TransitionController> > 1,
13 = getfield < Application, Lcom/android/server/wm/TransitionController, mStatusBar, <Application,Lcom/android/server/statusbar/StatusBarManagerInternal> > 12,
conditional branch(eq, to iindex=-1) 13,3,
15 = getfield < Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > 1,
invokeinterface < Application, Lcom/android/server/statusbar/StatusBarManagerInternal, setNavigationBarLumaSamplingEnabled(IZ)V > 13,15,14 @31 exception:16,
18 = getfield < Application, Lcom/android/server/wm/Transition, mController, <Application,Lcom/android/server/wm/TransitionController> > 1,
19 = getfield < Application, Lcom/android/server/wm/TransitionController, mAtm, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 18,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 19,
21 = getfield < Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > 1,
23 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 20,21 @42 exception:22,
25 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy; > 23 @46 exception:24,
27 = invokevirtual < Application, Lcom/android/server/wm/DisplayPolicy, getNavigationBar()Lcom/android/server/wm/WindowState; > 25 @50 exception:26,
conditional branch(ne, to iindex=-1) 27,3,
invokevirtual < Application, Lcom/android/server/wm/WindowState, setSurfaceTranslationY(I)V > 27,3 @57 exception:28,
29 = getfield < Application, Lcom/android/server/wm/WindowState, mToken, <Application,Lcom/android/server/wm/WindowToken> > 27,
conditional branch(ne, to iindex=-1) 29,3,
31 = invokevirtual < Application, Lcom/android/server/wm/DisplayArea, getPendingTransaction()Landroid/view/SurfaceControl$Transaction; > 23 @65 exception:30,
33 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 29 @69 exception:32,
35 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getSurfaceControl()Landroid/view/SurfaceControl; > 29 @73 exception:34,
37 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getLastLayer()I > 29 @77 exception:36,
39 = invokevirtual < Application, Landroid/view/SurfaceControl$Transaction, setLayer(Landroid/view/SurfaceControl;I)Landroid/view/SurfaceControl$Transaction; > 31,35,37 @81 exception:38,
55 = phi  54,3,
40 = getfield < Application, Lcom/android/server/wm/Transition, mTargets, <Application,Ljava/util/ArrayList> > 1,
42 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 40 @87 exception:41,
conditional branch(ge, to iindex=-1) 55,42,
43 = getfield < Application, Lcom/android/server/wm/Transition, mTargets, <Application,Ljava/util/ArrayList> > 1,
45 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 43,55 @95 exception:44,
46 = checkcast <Application,Lcom/android/server/wm/WindowContainer>45 <Application,Lcom/android/server/wm/WindowContainer>,
48 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 46 @101 exception:47,
conditional branch(eq, to iindex=-1) 48,3,
50 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHomeOrRecents()Z > 48 @107 exception:49,
conditional branch(ne, to iindex=-1) 50,3,
60 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisibleRequested()Z > 48 @114 exception:59,
goto (from iindex= 61 to iindex = 4),
61 = phi  3,60,
conditional branch(eq, to iindex=-1) 61,3,
71 = new <Application,Lcom/android/server/wm/NavBarFadeAnimationController>@124,
invokespecial < Application, Lcom/android/server/wm/NavBarFadeAnimationController, <init>(Lcom/android/server/wm/DisplayContent;)V > 71,23 @126 exception:72,
invokevirtual < Application, Lcom/android/server/wm/NavBarFadeAnimationController, fadeWindowToken(Z)V > 71,14 @129 exception:73,
goto (from iindex= 68 to iindex = 12),
return,
return,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @30 exception:25,
return,","depth : 0
public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	TransitionController v4 = p0.getTransitionController();
	v4.legacyDetachNavigationBarFromApp(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public TransitionController getTransitionController(){
	TransitionController v1 = this.mWindowOrganizerController.getTransitionController();
	return v1;
}
-----
depth : 2
public TransitionController getTransitionController(){
	return this.mTransitionController;
}
-----
depth : 1
public void legacyDetachNavigationBarFromApp(IBinder p1){
	Transition v1 = Transition.fromBinder(p1);
	boolean v2 = this.mPlayingTransitions.contains(v1);
	v1.legacyRestoreNavigationBarFromApp();
	return;
}
-----
depth : 2
public Transition fromBinder(IBinder p1){
	return p1;
}
-----
depth : 2
public void legacyRestoreNavigationBarFromApp(){
	this.mNavBarAttachedToApp = 0;
	int v1 = Slog.e(""Transition"", ""Reparented navigation bar without a valid display"");
	this.mRecentsDisplayId = 0;
	TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1);
	DisplayContent v3 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId);
	DisplayPolicy v4 = v3.getDisplayPolicy();
	WindowState v5 = v4.getNavigationBar();
	v5.setSurfaceTranslationY(0);
	SurfaceControl$Transaction v7 = v3.getPendingTransaction();
	WindowContainer v8 = WindowState.mToken.getParent();
	SurfaceControl v9 = WindowState.mToken.getSurfaceControl();
	int v10 = WindowState.mToken.getLastLayer();
	SurfaceControl$Transaction v11 = v7.setLayer(v9, v10);
	int v12 = this.mTargets.size();
	Object v13 = this.mTargets.get(phiInstruction);
	Task v14 = v13.asTask();
	boolean v15 = v14.isActivityTypeHomeOrRecents();
	boolean v16 = v14.isVisibleRequested();
	NavBarFadeAnimationController v16 = new NavBarFadeAnimationController(v3);
	v16.fadeWindowToken(1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	TransitionController v7 = this.mTransitionController;
	TransitionController v6 = v7;
	Transition v9 = p1;
	boolean v10 = this.mPlayingTransitions.contains(v9);
	this.mNavBarAttachedToApp = 0;
	this.mRecentsDisplayId = 0;
	TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1);
	DisplayContent v14 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId);
	DisplayPolicy v15 = v14.getDisplayPolicy();
	WindowState v16 = v15.getNavigationBar();
	v16.setSurfaceTranslationY(0);
	SurfaceControl$Transaction v18 = v14.getPendingTransaction();
	WindowContainer v19 = WindowState.mToken.getParent();
	SurfaceControl v20 = WindowState.mToken.getSurfaceControl();
	int v21 = WindowState.mToken.getLastLayer();
	SurfaceControl$Transaction v22 = v18.setLayer(v20, v21);
	int v23 = this.mTargets.size();
	Object v24 = this.mTargets.get(phiInstruction);
	Task v25 = v24.asTask();
	boolean v26 = v25.isActivityTypeHomeOrRecents();
	boolean v27 = v25.isVisibleRequested();
	NavBarFadeAnimationController v28 = new NavBarFadeAnimationController(v14);
	v28.fadeWindowToken(1);
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","detachNavigationBarFromApp(Landroid/os/IBinder;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @19 exception:11,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowOrganizerController, <Application,Lcom/android/server/wm/WindowOrganizerController> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowOrganizerController, getTransitionController()Lcom/android/server/wm/TransitionController; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowOrganizerController, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 1,
return 2,
return 4,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, legacyDetachNavigationBarFromApp(Landroid/os/IBinder;)V > 12,2 @23 exception:13,
4 = invokestatic < Application, Lcom/android/server/wm/Transition, fromBinder(Landroid/os/IBinder;)Lcom/android/server/wm/Transition; > 2 @0 exception:3,
2 = checkcast <Application,Lcom/android/server/wm/Transition>1 <Application,Lcom/android/server/wm/Transition>,
return 2,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mPlayingTransitions, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, contains(Ljava/lang/Object;)Z > 6,4 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
invokevirtual < Application, Lcom/android/server/wm/Transition, legacyRestoreNavigationBarFromApp()V > 4 @15 exception:9,
2 = getfield < Application, Lcom/android/server/wm/Transition, mNavBarAttachedToApp, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/wm/Transition, mNavBarAttachedToApp, <Primordial,Z> > = 3,
4 = getfield < Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 4,5,
9 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 6,7 @17 exception:8,
putfield 1.< Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > = 3,
12 = getfield < Application, Lcom/android/server/wm/Transition, mController, <Application,Lcom/android/server/wm/TransitionController> > 1,
13 = getfield < Application, Lcom/android/server/wm/TransitionController, mStatusBar, <Application,Lcom/android/server/statusbar/StatusBarManagerInternal> > 12,
conditional branch(eq, to iindex=-1) 13,3,
15 = getfield < Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > 1,
invokeinterface < Application, Lcom/android/server/statusbar/StatusBarManagerInternal, setNavigationBarLumaSamplingEnabled(IZ)V > 13,15,14 @31 exception:16,
18 = getfield < Application, Lcom/android/server/wm/Transition, mController, <Application,Lcom/android/server/wm/TransitionController> > 1,
19 = getfield < Application, Lcom/android/server/wm/TransitionController, mAtm, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 18,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 19,
21 = getfield < Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > 1,
23 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 20,21 @42 exception:22,
25 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy; > 23 @46 exception:24,
27 = invokevirtual < Application, Lcom/android/server/wm/DisplayPolicy, getNavigationBar()Lcom/android/server/wm/WindowState; > 25 @50 exception:26,
conditional branch(ne, to iindex=-1) 27,3,
invokevirtual < Application, Lcom/android/server/wm/WindowState, setSurfaceTranslationY(I)V > 27,3 @57 exception:28,
29 = getfield < Application, Lcom/android/server/wm/WindowState, mToken, <Application,Lcom/android/server/wm/WindowToken> > 27,
conditional branch(ne, to iindex=-1) 29,3,
31 = invokevirtual < Application, Lcom/android/server/wm/DisplayArea, getPendingTransaction()Landroid/view/SurfaceControl$Transaction; > 23 @65 exception:30,
33 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 29 @69 exception:32,
35 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getSurfaceControl()Landroid/view/SurfaceControl; > 29 @73 exception:34,
37 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getLastLayer()I > 29 @77 exception:36,
39 = invokevirtual < Application, Landroid/view/SurfaceControl$Transaction, setLayer(Landroid/view/SurfaceControl;I)Landroid/view/SurfaceControl$Transaction; > 31,35,37 @81 exception:38,
55 = phi  54,3,
40 = getfield < Application, Lcom/android/server/wm/Transition, mTargets, <Application,Ljava/util/ArrayList> > 1,
42 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 40 @87 exception:41,
conditional branch(ge, to iindex=-1) 55,42,
43 = getfield < Application, Lcom/android/server/wm/Transition, mTargets, <Application,Ljava/util/ArrayList> > 1,
45 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 43,55 @95 exception:44,
46 = checkcast <Application,Lcom/android/server/wm/WindowContainer>45 <Application,Lcom/android/server/wm/WindowContainer>,
48 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 46 @101 exception:47,
conditional branch(eq, to iindex=-1) 48,3,
50 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHomeOrRecents()Z > 48 @107 exception:49,
conditional branch(ne, to iindex=-1) 50,3,
60 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisibleRequested()Z > 48 @114 exception:59,
goto (from iindex= 61 to iindex = 4),
61 = phi  3,60,
conditional branch(eq, to iindex=-1) 61,3,
71 = new <Application,Lcom/android/server/wm/NavBarFadeAnimationController>@124,
invokespecial < Application, Lcom/android/server/wm/NavBarFadeAnimationController, <init>(Lcom/android/server/wm/DisplayContent;)V > 71,23 @126 exception:72,
invokevirtual < Application, Lcom/android/server/wm/NavBarFadeAnimationController, fadeWindowToken(Z)V > 71,14 @129 exception:73,
goto (from iindex= 68 to iindex = 12),
return,
return,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @30 exception:25,
return,","depth : 0
public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	TransitionController v4 = p0.getTransitionController();
	v4.legacyDetachNavigationBarFromApp(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public TransitionController getTransitionController(){
	TransitionController v1 = this.mWindowOrganizerController.getTransitionController();
	return v1;
}
-----
depth : 2
public TransitionController getTransitionController(){
	return this.mTransitionController;
}
-----
depth : 1
public void legacyDetachNavigationBarFromApp(IBinder p1){
	Transition v1 = Transition.fromBinder(p1);
	boolean v2 = this.mPlayingTransitions.contains(v1);
	v1.legacyRestoreNavigationBarFromApp();
	return;
}
-----
depth : 2
public Transition fromBinder(IBinder p1){
	return p1;
}
-----
depth : 2
public void legacyRestoreNavigationBarFromApp(){
	this.mNavBarAttachedToApp = 0;
	int v1 = Slog.e(""Transition"", ""Reparented navigation bar without a valid display"");
	this.mRecentsDisplayId = 0;
	TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1);
	DisplayContent v3 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId);
	DisplayPolicy v4 = v3.getDisplayPolicy();
	WindowState v5 = v4.getNavigationBar();
	v5.setSurfaceTranslationY(0);
	SurfaceControl$Transaction v7 = v3.getPendingTransaction();
	WindowContainer v8 = WindowState.mToken.getParent();
	SurfaceControl v9 = WindowState.mToken.getSurfaceControl();
	int v10 = WindowState.mToken.getLastLayer();
	SurfaceControl$Transaction v11 = v7.setLayer(v9, v10);
	int v12 = this.mTargets.size();
	Object v13 = this.mTargets.get(phiInstruction);
	Task v14 = v13.asTask();
	boolean v15 = v14.isActivityTypeHomeOrRecents();
	boolean v16 = v14.isVisibleRequested();
	NavBarFadeAnimationController v16 = new NavBarFadeAnimationController(v3);
	v16.fadeWindowToken(1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	TransitionController v8 = this.mTransitionController;
	TransitionController v7 = v8;
	Transition v10 = p1;
	boolean v11 = this.mPlayingTransitions.contains(v10);
	this.mNavBarAttachedToApp = 0;
	this.mRecentsDisplayId = 0;
	TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1);
	DisplayContent v15 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId);
	DisplayPolicy v16 = v15.getDisplayPolicy();
	WindowState v17 = v16.getNavigationBar();
	v17.setSurfaceTranslationY(0);
	SurfaceControl$Transaction v19 = v15.getPendingTransaction();
	WindowContainer v20 = WindowState.mToken.getParent();
	SurfaceControl v21 = WindowState.mToken.getSurfaceControl();
	int v22 = WindowState.mToken.getLastLayer();
	SurfaceControl$Transaction v23 = v19.setLayer(v21, v22);
	int v24 = this.mTargets.size();
	Object v25 = this.mTargets.get(phiInstruction);
	Task v26 = v25.asTask();
	boolean v27 = v26.isActivityTypeHomeOrRecents();
	boolean v28 = v26.isVisibleRequested();
	NavBarFadeAnimationController v29 = new NavBarFadeAnimationController(v15);
	v29.fadeWindowToken(1);
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","detachNavigationBarFromApp(Landroid/os/IBinder;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
12 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTransitionController()Lcom/android/server/wm/TransitionController; > 1 @19 exception:11,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowOrganizerController, <Application,Lcom/android/server/wm/WindowOrganizerController> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowOrganizerController, getTransitionController()Lcom/android/server/wm/TransitionController; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowOrganizerController, mTransitionController, <Application,Lcom/android/server/wm/TransitionController> > 1,
return 2,
return 4,
invokevirtual < Application, Lcom/android/server/wm/TransitionController, legacyDetachNavigationBarFromApp(Landroid/os/IBinder;)V > 12,2 @23 exception:13,
4 = invokestatic < Application, Lcom/android/server/wm/Transition, fromBinder(Landroid/os/IBinder;)Lcom/android/server/wm/Transition; > 2 @0 exception:3,
2 = checkcast <Application,Lcom/android/server/wm/Transition>1 <Application,Lcom/android/server/wm/Transition>,
return 2,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/wm/TransitionController, mPlayingTransitions, <Application,Ljava/util/ArrayList> > 1,
8 = invokevirtual < Application, Ljava/util/ArrayList, contains(Ljava/lang/Object;)Z > 6,4 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
invokevirtual < Application, Lcom/android/server/wm/Transition, legacyRestoreNavigationBarFromApp()V > 4 @15 exception:9,
2 = getfield < Application, Lcom/android/server/wm/Transition, mNavBarAttachedToApp, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/wm/Transition, mNavBarAttachedToApp, <Primordial,Z> > = 3,
4 = getfield < Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 4,5,
9 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 6,7 @17 exception:8,
putfield 1.< Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > = 3,
12 = getfield < Application, Lcom/android/server/wm/Transition, mController, <Application,Lcom/android/server/wm/TransitionController> > 1,
13 = getfield < Application, Lcom/android/server/wm/TransitionController, mStatusBar, <Application,Lcom/android/server/statusbar/StatusBarManagerInternal> > 12,
conditional branch(eq, to iindex=-1) 13,3,
15 = getfield < Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > 1,
invokeinterface < Application, Lcom/android/server/statusbar/StatusBarManagerInternal, setNavigationBarLumaSamplingEnabled(IZ)V > 13,15,14 @31 exception:16,
18 = getfield < Application, Lcom/android/server/wm/Transition, mController, <Application,Lcom/android/server/wm/TransitionController> > 1,
19 = getfield < Application, Lcom/android/server/wm/TransitionController, mAtm, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 18,
20 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 19,
21 = getfield < Application, Lcom/android/server/wm/Transition, mRecentsDisplayId, <Primordial,I> > 1,
23 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 20,21 @42 exception:22,
25 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getDisplayPolicy()Lcom/android/server/wm/DisplayPolicy; > 23 @46 exception:24,
27 = invokevirtual < Application, Lcom/android/server/wm/DisplayPolicy, getNavigationBar()Lcom/android/server/wm/WindowState; > 25 @50 exception:26,
conditional branch(ne, to iindex=-1) 27,3,
invokevirtual < Application, Lcom/android/server/wm/WindowState, setSurfaceTranslationY(I)V > 27,3 @57 exception:28,
29 = getfield < Application, Lcom/android/server/wm/WindowState, mToken, <Application,Lcom/android/server/wm/WindowToken> > 27,
conditional branch(ne, to iindex=-1) 29,3,
31 = invokevirtual < Application, Lcom/android/server/wm/DisplayArea, getPendingTransaction()Landroid/view/SurfaceControl$Transaction; > 23 @65 exception:30,
33 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 29 @69 exception:32,
35 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getSurfaceControl()Landroid/view/SurfaceControl; > 29 @73 exception:34,
37 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getLastLayer()I > 29 @77 exception:36,
39 = invokevirtual < Application, Landroid/view/SurfaceControl$Transaction, setLayer(Landroid/view/SurfaceControl;I)Landroid/view/SurfaceControl$Transaction; > 31,35,37 @81 exception:38,
55 = phi  54,3,
40 = getfield < Application, Lcom/android/server/wm/Transition, mTargets, <Application,Ljava/util/ArrayList> > 1,
42 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 40 @87 exception:41,
conditional branch(ge, to iindex=-1) 55,42,
43 = getfield < Application, Lcom/android/server/wm/Transition, mTargets, <Application,Ljava/util/ArrayList> > 1,
45 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 43,55 @95 exception:44,
46 = checkcast <Application,Lcom/android/server/wm/WindowContainer>45 <Application,Lcom/android/server/wm/WindowContainer>,
48 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, asTask()Lcom/android/server/wm/Task; > 46 @101 exception:47,
conditional branch(eq, to iindex=-1) 48,3,
50 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeHomeOrRecents()Z > 48 @107 exception:49,
conditional branch(ne, to iindex=-1) 50,3,
60 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisibleRequested()Z > 48 @114 exception:59,
goto (from iindex= 61 to iindex = 4),
61 = phi  3,60,
conditional branch(eq, to iindex=-1) 61,3,
71 = new <Application,Lcom/android/server/wm/NavBarFadeAnimationController>@124,
invokespecial < Application, Lcom/android/server/wm/NavBarFadeAnimationController, <init>(Lcom/android/server/wm/DisplayContent;)V > 71,23 @126 exception:72,
invokevirtual < Application, Lcom/android/server/wm/NavBarFadeAnimationController, fadeWindowToken(Z)V > 71,14 @129 exception:73,
goto (from iindex= 68 to iindex = 12),
return,
return,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @27 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @30 exception:25,
return,","depth : 0
public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	TransitionController v4 = p0.getTransitionController();
	v4.legacyDetachNavigationBarFromApp(p1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public TransitionController getTransitionController(){
	TransitionController v1 = this.mWindowOrganizerController.getTransitionController();
	return v1;
}
-----
depth : 2
public TransitionController getTransitionController(){
	return this.mTransitionController;
}
-----
depth : 1
public void legacyDetachNavigationBarFromApp(IBinder p1){
	Transition v1 = Transition.fromBinder(p1);
	boolean v2 = this.mPlayingTransitions.contains(v1);
	v1.legacyRestoreNavigationBarFromApp();
	return;
}
-----
depth : 2
public Transition fromBinder(IBinder p1){
	return p1;
}
-----
depth : 2
public void legacyRestoreNavigationBarFromApp(){
	this.mNavBarAttachedToApp = 0;
	int v1 = Slog.e(""Transition"", ""Reparented navigation bar without a valid display"");
	this.mRecentsDisplayId = 0;
	TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1);
	DisplayContent v3 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId);
	DisplayPolicy v4 = v3.getDisplayPolicy();
	WindowState v5 = v4.getNavigationBar();
	v5.setSurfaceTranslationY(0);
	SurfaceControl$Transaction v7 = v3.getPendingTransaction();
	WindowContainer v8 = WindowState.mToken.getParent();
	SurfaceControl v9 = WindowState.mToken.getSurfaceControl();
	int v10 = WindowState.mToken.getLastLayer();
	SurfaceControl$Transaction v11 = v7.setLayer(v9, v10);
	int v12 = this.mTargets.size();
	Object v13 = this.mTargets.get(phiInstruction);
	Task v14 = v13.asTask();
	boolean v15 = v14.isActivityTypeHomeOrRecents();
	boolean v16 = v14.isVisibleRequested();
	NavBarFadeAnimationController v16 = new NavBarFadeAnimationController(v3);
	v16.fadeWindowToken(1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void detachNavigationBarFromApp(IBinder p1){
	long v2 = Binder.clearCallingIdentity();
	TransitionController v7 = this.mTransitionController;
	TransitionController v6 = v7;
	Transition v9 = p1;
	boolean v10 = this.mPlayingTransitions.contains(v9);
	this.mNavBarAttachedToApp = 0;
	this.mRecentsDisplayId = 0;
	TransitionController.mStatusBar.setNavigationBarLumaSamplingEnabled(this.mRecentsDisplayId, 1);
	DisplayContent v14 = ActivityTaskManagerService.mRootWindowContainer.getDisplayContent(this.mRecentsDisplayId);
	DisplayPolicy v15 = v14.getDisplayPolicy();
	WindowState v16 = v15.getNavigationBar();
	v16.setSurfaceTranslationY(0);
	SurfaceControl$Transaction v18 = v14.getPendingTransaction();
	WindowContainer v19 = WindowState.mToken.getParent();
	SurfaceControl v20 = WindowState.mToken.getSurfaceControl();
	int v21 = WindowState.mToken.getLastLayer();
	SurfaceControl$Transaction v22 = v18.setLayer(v20, v21);
	int v23 = this.mTargets.size();
	Object v24 = this.mTargets.get(phiInstruction);
	Task v25 = v24.asTask();
	boolean v26 = v25.isActivityTypeHomeOrRecents();
	boolean v27 = v25.isVisibleRequested();
	NavBarFadeAnimationController v28 = new NavBarFadeAnimationController(v14);
	v28.fadeWindowToken(1);
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v2);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo;","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(III)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,2,3,4 @17 exception:12,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:24,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @25 exception:25,
return 13,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfoOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2, p3);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfoOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2, p3);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(III)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,2,3,4 @17 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(III)Lcom/android/server/wm/Task; > 1,2,3,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,6 @6 exception:8,
goto (from iindex= 5 to iindex = 2),
10 = phi  9,7,
return 10,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:24,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @25 exception:25,
return 13,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfoOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2, p3);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2, int p3){
	Task v1 = p0.getRootTask(p1, p2, p3);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v9 = RootWindowContainer.getRootTask(p1, p2, p3);
	ActivityTaskManager$RootTaskInfo v10 = RootWindowContainer.getRootTaskInfo(v9);
	ActivityTaskManager$RootTaskInfo v8 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(III)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,2,3,4 @17 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(III)Lcom/android/server/wm/Task; > 1,2,3,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,6 @6 exception:8,
goto (from iindex= 5 to iindex = 2),
10 = phi  9,7,
return 10,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:24,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @25 exception:25,
return 13,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfoOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2, p3);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2, int p3){
	Task v1 = p0.getRootTask(p1, p2, p3);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	long v3 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v7 = RootWindowContainer.getRootTask(p1, p2, p3);
	ActivityTaskManager$RootTaskInfo v8 = RootWindowContainer.getRootTaskInfo(v7);
	ActivityTaskManager$RootTaskInfo v6 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(III)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,2,3,4 @17 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(III)Lcom/android/server/wm/Task; > 1,2,3,4 @0 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,4 @0 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(II)Lcom/android/server/wm/Task; > 6,2,3 @8 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,6 @6 exception:8,
3 = new <Application,Landroid/app/ActivityTaskManager$RootTaskInfo>@0,
invokespecial < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, <init>()V > 3 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/Task, fillTaskInfo(Landroid/app/TaskInfo;)V > 2,3 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,10,
11 = new <Primordial,[I>@209 ,
12 = new <Primordial,[Z>@229 ,
13 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21, <init>(Lcom/android/server/wm/Task;[Z[I)V > 13,2,12,11 @26 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Predicate;Z)Z > 7,13,10 @29 exception:15,
17 = arrayload 12[10],
conditional branch(eq, to iindex=-1) 17,10,
18 = arrayload 11[10],
19 = phi  8,18,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, position, <Primordial,I> > = 19,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z > 2,10 @41 exception:24,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, visible, <Primordial,Z> > = 25,
26 = getfield < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, bounds, <Application,Landroid/graphics/Rect> > 3,
invokevirtual < Application, Lcom/android/server/wm/Task, getBounds(Landroid/graphics/Rect;)V > 2,26 @49 exception:27,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getDescendantTaskCount()I > 2 @52 exception:28,
30 = new <Primordial,[I>@5629 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskIds, <Primordial,[I> > = 30,
31 = new <Application,[Ljava/lang/String>@6029 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskNames, <Application,[Ljava/lang/String> > = 31,
32 = new <Application,[Landroid/graphics/Rect>@6429 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskBounds, <Application,[Landroid/graphics/Rect> > = 32,
33 = new <Primordial,[I>@6829 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskUserIds, <Primordial,[I> > = 33,
34 = new <Primordial,[I>@729 ,
arraystore 34[10] = 10,
35 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22>@76,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22, <init>()V > 35 @78 exception:36,
37 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 37 @83 exception:38,
41 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Lcom/android/internal/util/function/TriConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 35,39,3,34 @87 exception:40,
invokevirtual < Application, Lcom/android/server/wm/Task, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 2,41,10 @91 exception:42,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 41 @94 exception:43,
45 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 2 @97 exception:44,
conditional branch(eq, to iindex=-1) 45,10,
46 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 45,
48 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 46 @105 exception:47,
49 = phi  10,48,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, topActivity, <Application,Landroid/content/ComponentName> > = 49,
return 3,
goto (from iindex= 5 to iindex = 2),
10 = phi  9,7,
return 10,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:24,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @25 exception:25,
return 13,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfoOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2, p3);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2, int p3){
	Task v1 = p0.getRootTask(p1, p2, p3);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(int p1, int p2, int p3){
	DisplayContent v1 = p0.getDisplayContent(p3);
	Task v2 = v1.getRootTask(p1, p2);
	return v2;
}
-----
depth : 2
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(Task p1){
	ActivityTaskManager$RootTaskInfo v0 = new ActivityTaskManager$RootTaskInfo();
	p1.fillTaskInfo(v0);
	DisplayContent v3 = p1.getDisplayContent();
	[I v3 = new [I(1);
	[Z v3 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v3 = new RootWindowContainer$$ExternalSyntheticLambda21(p1,v3,v3);
	boolean v5 = v3.forAllRootTasks(v3, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v6 = p1.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v6;
	p1.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v8 = p1.getDescendantTaskCount();
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v8;
	String v8 = new String(v8);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v8;
	Rect v8 = new Rect(v8);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v8;
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v8;
	[I v8 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v8 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	PooledConsumer v11 = PooledLambda.obtainConsumer(v8, v10, v0, v8);
	p1.forAllLeafTasks(v11, 0);
	v11.recycle();
	ActivityRecord v14 = p1.topRunningActivity();
	ComponentName v15 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	long v5 = Binder.clearCallingIdentity();
	DisplayContent v11 = RootWindowContainer.getDisplayContent(p3);
	Task v12 = v11.getRootTask(p1, p2);
	Task v10 = v12;
	ActivityTaskManager$RootTaskInfo v14 = new ActivityTaskManager$RootTaskInfo();
	v10.fillTaskInfo(v14);
	DisplayContent v17 = v10.getDisplayContent();
	[I v18 = new [I(1);
	[Z v19 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v20 = new RootWindowContainer$$ExternalSyntheticLambda21(v10,v19,v18);
	boolean v22 = v17.forAllRootTasks(v20, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v23 = v10.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v23;
	v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v25 = v10.getDescendantTaskCount();
	[I v26 = new [I(v25);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v26;
	String v27 = new String(v25);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v27;
	Rect v28 = new Rect(v25);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v28;
	[I v29 = new [I(v25);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v29;
	[I v30 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v31 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v33 = PooledLambda.__(Tas.class);
	PooledConsumer v34 = PooledLambda.obtainConsumer(v31, v33, v14, v30);
	v10.forAllLeafTasks(v34, 0);
	v34.recycle();
	ActivityRecord v37 = v10.topRunningActivity();
	ComponentName v38 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v13 = v14;
	ActivityTaskManager$RootTaskInfo v9 = phiInstruction;
	Binder.restoreCallingIdentity(v5);
	return v9;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(III)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,2,3,4 @17 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(III)Lcom/android/server/wm/Task; > 1,2,3,4 @0 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,4 @0 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(II)Lcom/android/server/wm/Task; > 6,2,3 @8 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,6 @6 exception:8,
3 = new <Application,Landroid/app/ActivityTaskManager$RootTaskInfo>@0,
invokespecial < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, <init>()V > 3 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/Task, fillTaskInfo(Landroid/app/TaskInfo;)V > 2,3 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,10,
11 = new <Primordial,[I>@209 ,
12 = new <Primordial,[Z>@229 ,
13 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21, <init>(Lcom/android/server/wm/Task;[Z[I)V > 13,2,12,11 @26 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Predicate;Z)Z > 7,13,10 @29 exception:15,
17 = arrayload 12[10],
conditional branch(eq, to iindex=-1) 17,10,
18 = arrayload 11[10],
19 = phi  8,18,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, position, <Primordial,I> > = 19,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z > 2,10 @41 exception:24,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, visible, <Primordial,Z> > = 25,
26 = getfield < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, bounds, <Application,Landroid/graphics/Rect> > 3,
invokevirtual < Application, Lcom/android/server/wm/Task, getBounds(Landroid/graphics/Rect;)V > 2,26 @49 exception:27,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getDescendantTaskCount()I > 2 @52 exception:28,
30 = new <Primordial,[I>@5629 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskIds, <Primordial,[I> > = 30,
31 = new <Application,[Ljava/lang/String>@6029 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskNames, <Application,[Ljava/lang/String> > = 31,
32 = new <Application,[Landroid/graphics/Rect>@6429 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskBounds, <Application,[Landroid/graphics/Rect> > = 32,
33 = new <Primordial,[I>@6829 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskUserIds, <Primordial,[I> > = 33,
34 = new <Primordial,[I>@729 ,
arraystore 34[10] = 10,
35 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22>@76,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22, <init>()V > 35 @78 exception:36,
37 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 37 @83 exception:38,
41 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Lcom/android/internal/util/function/TriConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 35,39,3,34 @87 exception:40,
invokevirtual < Application, Lcom/android/server/wm/Task, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 2,41,10 @91 exception:42,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 41 @94 exception:43,
45 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 2 @97 exception:44,
conditional branch(eq, to iindex=-1) 45,10,
46 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 45,
48 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 46 @105 exception:47,
49 = phi  10,48,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, topActivity, <Application,Landroid/content/ComponentName> > = 49,
return 3,
goto (from iindex= 5 to iindex = 2),
10 = phi  9,7,
return 10,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:24,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @25 exception:25,
return 13,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfoOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2, p3);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2, int p3){
	Task v1 = p0.getRootTask(p1, p2, p3);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(int p1, int p2, int p3){
	DisplayContent v1 = p0.getDisplayContent(p3);
	Task v2 = v1.getRootTask(p1, p2);
	return v2;
}
-----
depth : 2
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(Task p1){
	ActivityTaskManager$RootTaskInfo v0 = new ActivityTaskManager$RootTaskInfo();
	p1.fillTaskInfo(v0);
	DisplayContent v3 = p1.getDisplayContent();
	[I v3 = new [I(1);
	[Z v3 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v3 = new RootWindowContainer$$ExternalSyntheticLambda21(p1,v3,v3);
	boolean v5 = v3.forAllRootTasks(v3, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v6 = p1.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v6;
	p1.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v8 = p1.getDescendantTaskCount();
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v8;
	String v8 = new String(v8);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v8;
	Rect v8 = new Rect(v8);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v8;
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v8;
	[I v8 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v8 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	PooledConsumer v11 = PooledLambda.obtainConsumer(v8, v10, v0, v8);
	p1.forAllLeafTasks(v11, 0);
	v11.recycle();
	ActivityRecord v14 = p1.topRunningActivity();
	ComponentName v15 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	DisplayContent v12 = RootWindowContainer.getDisplayContent(p3);
	Task v13 = v12.getRootTask(p1, p2);
	Task v11 = v13;
	ActivityTaskManager$RootTaskInfo v15 = new ActivityTaskManager$RootTaskInfo();
	v11.fillTaskInfo(v15);
	DisplayContent v18 = v11.getDisplayContent();
	[I v19 = new [I(1);
	[Z v20 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v21 = new RootWindowContainer$$ExternalSyntheticLambda21(v11,v20,v19);
	boolean v23 = v18.forAllRootTasks(v21, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v24 = v11.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v24;
	v11.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v26 = v11.getDescendantTaskCount();
	[I v27 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v27;
	String v28 = new String(v26);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v28;
	Rect v29 = new Rect(v26);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v29;
	[I v30 = new [I(v26);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v30;
	[I v31 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v32 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v34 = PooledLambda.__(Tas.class);
	PooledConsumer v35 = PooledLambda.obtainConsumer(v32, v34, v15, v31);
	v11.forAllLeafTasks(v35, 0);
	v35.recycle();
	ActivityRecord v38 = v11.topRunningActivity();
	ComponentName v39 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v14 = v15;
	ActivityTaskManager$RootTaskInfo v10 = phiInstruction;
	Binder.restoreCallingIdentity(v5);
	return v10;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getRootTaskInfoOnDisplay(III)Landroid/app/ActivityTaskManager$RootTaskInfo;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @2 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(III)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,2,3,4 @17 exception:12,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(III)Lcom/android/server/wm/Task; > 1,2,3,4 @0 exception:5,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,4 @0 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(II)Lcom/android/server/wm/Task; > 6,2,3 @8 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,6 @6 exception:8,
3 = new <Application,Landroid/app/ActivityTaskManager$RootTaskInfo>@0,
invokespecial < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, <init>()V > 3 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/Task, fillTaskInfo(Landroid/app/TaskInfo;)V > 2,3 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,10,
11 = new <Primordial,[I>@209 ,
12 = new <Primordial,[Z>@229 ,
13 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21, <init>(Lcom/android/server/wm/Task;[Z[I)V > 13,2,12,11 @26 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Predicate;Z)Z > 7,13,10 @29 exception:15,
17 = arrayload 12[10],
conditional branch(eq, to iindex=-1) 17,10,
18 = arrayload 11[10],
19 = phi  8,18,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, position, <Primordial,I> > = 19,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z > 2,10 @41 exception:24,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, visible, <Primordial,Z> > = 25,
26 = getfield < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, bounds, <Application,Landroid/graphics/Rect> > 3,
invokevirtual < Application, Lcom/android/server/wm/Task, getBounds(Landroid/graphics/Rect;)V > 2,26 @49 exception:27,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getDescendantTaskCount()I > 2 @52 exception:28,
30 = new <Primordial,[I>@5629 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskIds, <Primordial,[I> > = 30,
31 = new <Application,[Ljava/lang/String>@6029 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskNames, <Application,[Ljava/lang/String> > = 31,
32 = new <Application,[Landroid/graphics/Rect>@6429 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskBounds, <Application,[Landroid/graphics/Rect> > = 32,
33 = new <Primordial,[I>@6829 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskUserIds, <Primordial,[I> > = 33,
34 = new <Primordial,[I>@729 ,
arraystore 34[10] = 10,
35 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22>@76,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22, <init>()V > 35 @78 exception:36,
37 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 37 @83 exception:38,
41 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Lcom/android/internal/util/function/TriConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 35,39,3,34 @87 exception:40,
invokevirtual < Application, Lcom/android/server/wm/Task, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 2,41,10 @91 exception:42,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 41 @94 exception:43,
45 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 2 @97 exception:44,
conditional branch(eq, to iindex=-1) 45,10,
46 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 45,
48 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 46 @105 exception:47,
49 = phi  10,48,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, topActivity, <Application,Landroid/content/ComponentName> > = 49,
return 3,
goto (from iindex= 5 to iindex = 2),
10 = phi  9,7,
return 10,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @22 exception:24,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @25 exception:25,
return 13,","depth : 0
public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	ActivityTaskManagerService.enforceTaskPermission(""getRootTaskInfoOnDisplay()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	ActivityTaskManager$RootTaskInfo v4 = this.mRootWindowContainer.getRootTaskInfo(p1, p2, p3);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1, int p2, int p3){
	Task v1 = p0.getRootTask(p1, p2, p3);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return phiInstruction;
}
-----
depth : 2
public Task getRootTask(int p1, int p2, int p3){
	DisplayContent v1 = p0.getDisplayContent(p3);
	Task v2 = v1.getRootTask(p1, p2);
	return v2;
}
-----
depth : 2
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(Task p1){
	ActivityTaskManager$RootTaskInfo v0 = new ActivityTaskManager$RootTaskInfo();
	p1.fillTaskInfo(v0);
	DisplayContent v3 = p1.getDisplayContent();
	[I v3 = new [I(1);
	[Z v3 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v3 = new RootWindowContainer$$ExternalSyntheticLambda21(p1,v3,v3);
	boolean v5 = v3.forAllRootTasks(v3, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v6 = p1.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v6;
	p1.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v8 = p1.getDescendantTaskCount();
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v8;
	String v8 = new String(v8);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v8;
	Rect v8 = new Rect(v8);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v8;
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v8;
	[I v8 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v8 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	PooledConsumer v11 = PooledLambda.obtainConsumer(v8, v10, v0, v8);
	p1.forAllLeafTasks(v11, 0);
	v11.recycle();
	ActivityRecord v14 = p1.topRunningActivity();
	ComponentName v15 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getRootTaskInfoOnDisplay(int p1, int p2, int p3){
	long v5 = Binder.clearCallingIdentity();
	DisplayContent v11 = RootWindowContainer.getDisplayContent(p3);
	Task v12 = v11.getRootTask(p1, p2);
	Task v10 = v12;
	ActivityTaskManager$RootTaskInfo v14 = new ActivityTaskManager$RootTaskInfo();
	v10.fillTaskInfo(v14);
	DisplayContent v17 = v10.getDisplayContent();
	[I v18 = new [I(1);
	[Z v19 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v20 = new RootWindowContainer$$ExternalSyntheticLambda21(v10,v19,v18);
	boolean v22 = v17.forAllRootTasks(v20, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v23 = v10.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v23;
	v10.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v25 = v10.getDescendantTaskCount();
	[I v26 = new [I(v25);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v26;
	String v27 = new String(v25);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v27;
	Rect v28 = new Rect(v25);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v28;
	[I v29 = new [I(v25);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v29;
	[I v30 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v31 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v33 = PooledLambda.__(Tas.class);
	PooledConsumer v34 = PooledLambda.obtainConsumer(v31, v33, v14, v30);
	v10.forAllLeafTasks(v34, 0);
	v34.recycle();
	ActivityRecord v37 = v10.topRunningActivity();
	ComponentName v38 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v13 = v14;
	ActivityTaskManager$RootTaskInfo v9 = phiInstruction;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v9;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;","0","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:12,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 13,2,14 @22 exception:15,
conditional branch(ne, to iindex=-1) 16,17,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @65 exception:18,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
20 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 19,
21 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 16,
23 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 20,2,21,14,3 @74 exception:22,
conditional branch(ne, to iindex=-1) 23,17,
conditional branch(eq, to iindex=-1) 4,17,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, takeTaskSnapshot(I)Landroid/window/TaskSnapshot; > 1,2 @82 exception:24,
26 = phi  23,23,25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @86 exception:29,
return 26,","depth : 0
public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.getSnapshot(p1, Task.mUserId, 1, p2);
	TaskSnapshot v7 = p0.takeTaskSnapshot(p1);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
","public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.getSnapshot(p1, Task.mUserId, 1, p2);
	TaskSnapshot v7 = p0.takeTaskSnapshot(p1);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;","1","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 13,2,14 @22 exception:15,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 16,17,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @65 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
20 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 19,
21 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 16,
23 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 20,2,21,14,3 @74 exception:22,
6 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mCache, <Application,Lcom/android/server/wm/TaskSnapshotCache> > 1,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mPersister, <Application,Lcom/android/server/wm/TaskSnapshotPersister> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotPersister, enableLowResSnapshots()Z > 8 @6 exception:9,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,7,
15 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 6,2,3,4,13 @15 exception:14,
return 15,
conditional branch(ne, to iindex=-1) 23,17,
conditional branch(eq, to iindex=-1) 4,17,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, takeTaskSnapshot(I)Landroid/window/TaskSnapshot; > 1,2 @82 exception:24,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
conditional branch(ne, to iindex=-1) 17,15,
goto (from iindex= 17 to iindex = 18),
26 = new <Application,Ljava/lang/StringBuilder>@54,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @56 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @61 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 26,2 @64 exception:31,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,33 @69 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @72 exception:36,
39 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 25,37 @76 exception:38,
monitorexit 9,
goto (from iindex= 40 to iindex = -36),
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,
26 = phi  23,23,25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @86 exception:29,
return 26,","depth : 0
public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.getSnapshot(p1, Task.mUserId, 1, p2);
	TaskSnapshot v7 = p0.takeTaskSnapshot(p1);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public TaskSnapshot getSnapshot(int p1, int p2, boolean p3, boolean p4){
	boolean v1 = this.mPersister.enableLowResSnapshots();
	TaskSnapshot v2 = this.mCache.getSnapshot(p1, p2, p3, phiInstruction);
	return v2;
}
-----
depth : 1
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""takeTaskSnapshot: taskId="");
	StringBuilder v8 = v5.append(p1);
	StringBuilder v9 = v5.append("" not found or not visible"");
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
","public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v6 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v5 = v6;
	this.sThreadPriorityBooster.reset();
	boolean v10 = this.mPersister.enableLowResSnapshots();
	TaskSnapshot v11 = this.mCache.getSnapshot(p1, Task.mUserId, 1, phiInstruction);
	TaskSnapshot v9 = v11;
	long v14 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v16 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v17 = v16.isVisible();
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v14);
	TaskSnapshot v12 = phiInstruction;
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;","1","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 13,2,14 @22 exception:15,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 16,17,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @65 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
20 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 19,
21 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 16,
23 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 20,2,21,14,3 @74 exception:22,
6 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mCache, <Application,Lcom/android/server/wm/TaskSnapshotCache> > 1,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mPersister, <Application,Lcom/android/server/wm/TaskSnapshotPersister> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotPersister, enableLowResSnapshots()Z > 8 @6 exception:9,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,7,
15 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 6,2,3,4,13 @15 exception:14,
return 15,
conditional branch(ne, to iindex=-1) 23,17,
26 = phi  23,23,25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @86 exception:29,
return 26,","depth : 0
public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.getSnapshot(p1, Task.mUserId, 1, p2);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 1
public TaskSnapshot getSnapshot(int p1, int p2, boolean p3, boolean p4){
	boolean v1 = this.mPersister.enableLowResSnapshots();
	TaskSnapshot v2 = this.mCache.getSnapshot(p1, p2, p3, phiInstruction);
	return v2;
}
-----
","public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v6 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v5 = v6;
	this.sThreadPriorityBooster.reset();
	boolean v10 = this.mPersister.enableLowResSnapshots();
	TaskSnapshot v11 = this.mCache.getSnapshot(p1, Task.mUserId, 1, phiInstruction);
	TaskSnapshot v9 = v11;
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;","2","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 13,2,14 @22 exception:15,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 16,17,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @65 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
20 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 19,
21 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 16,
23 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 20,2,21,14,3 @74 exception:22,
6 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mCache, <Application,Lcom/android/server/wm/TaskSnapshotCache> > 1,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mPersister, <Application,Lcom/android/server/wm/TaskSnapshotPersister> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotPersister, enableLowResSnapshots()Z > 8 @6 exception:9,
2 = getfield < Application, Lcom/android/server/wm/TaskSnapshotPersister, mEnableLowResSnapshots, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,7,
15 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 6,2,3,4,13 @15 exception:14,
6 = getfield < Application, Lcom/android/server/wm/TaskSnapshotCache, mService, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 6,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @5 exception:8,
9 = getfield < Application, Lcom/android/server/wm/TaskSnapshotCache, mRunningCache, <Application,Landroid/util/ArrayMap> > 1,
11 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @10 exception:10,
13 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 9,11 @14 exception:12,
14 = checkcast <Application,Lcom/android/server/wm/TaskSnapshotCache$CacheEntry>13 <Application,Lcom/android/server/wm/TaskSnapshotCache$CacheEntry>,
conditional branch(eq, to iindex=-1) 14,15,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @30 exception:16,
conditional branch(ne, to iindex=-1) 4,15,
18 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, tryRestoreFromDisk(IIZ)Landroid/window/TaskSnapshot; > 1,2,3,5 @37 exception:17,
return 18,
return 15,
conditional branch(ne, to iindex=-1) 23,17,
conditional branch(eq, to iindex=-1) 4,17,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, takeTaskSnapshot(I)Landroid/window/TaskSnapshot; > 1,2 @82 exception:24,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(ne, to iindex=-1) 17,15,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
19 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 18,
21 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, captureTaskSnapshot(Lcom/android/server/wm/Task;Z)Landroid/window/TaskSnapshot; > 19,14,15 @40 exception:20,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshotMode(Lcom/android/server/wm/Task;)I > 1,2 @8 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 6,12,
goto (from iindex= 12 to iindex = 11),
15 = phi  14,4,11,8,
return 15,
monitorexit 9,
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,
26 = phi  23,23,25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @86 exception:29,
return 26,","depth : 0
public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.getSnapshot(p1, Task.mUserId, 1, p2);
	TaskSnapshot v7 = p0.takeTaskSnapshot(p1);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
depth : 1
public TaskSnapshot getSnapshot(int p1, int p2, boolean p3, boolean p4){
	boolean v1 = this.mPersister.enableLowResSnapshots();
	TaskSnapshot v2 = this.mCache.getSnapshot(p1, p2, p3, phiInstruction);
	return v2;
}
-----
depth : 2
public boolean enableLowResSnapshots(){
	return this.mEnableLowResSnapshots;
}
-----
depth : 2
public TaskSnapshot getSnapshot(int p1, int p2, boolean p3, boolean p4){
	WindowManagerService.boostPriorityForLockedSection();
	Integer v2 = Integer.valueOf(p1);
	Object v3 = this.mRunningCache.get(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v5 = p0.tryRestoreFromDisk(p1, p2, p4);
	return v5;
}
-----
depth : 1
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.captureTaskSnapshot(v4, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 2
public TaskSnapshot captureTaskSnapshot(Task p1, boolean p2){
	int v1 = p0.getSnapshotMode(p1);
	return phiInstruction;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	Integer v11 = Integer.valueOf(p1);
	PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
	Task v13 = RootWindowContainer.getTask(v12);
	v12.recycle();
	Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
	Task v16 = v13.getRootTask();
	boolean v17 = v13.reparent(v15, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v7 = v13;
	Task v6 = v7;
	boolean v22 = this.mEnableLowResSnapshots;
	WindowManagerService.boostPriorityForLockedSection();
	Integer v25 = Integer.valueOf(p1);
	Object v26 = this.mRunningCache.get(v25);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v28 = TaskSnapshotCache.tryRestoreFromDisk(p1, p2, phiInstruction);
	TaskSnapshot v23 = v28;
	TaskSnapshot v21 = v23;
	long v31 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v35 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v34 = v35;
	int v37 = this.mChildren.size();
	Object v38 = this.mChildren.get(phiInstruction);
	boolean v39 = v38.isVisible();
	boolean v36 = 1;
	int v41 = TaskSnapshotController.getSnapshotMode(v34);
	TaskSnapshot v40 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v31);
	TaskSnapshot v29 = phiInstruction;
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;","2","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 13,2,14 @22 exception:15,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 16,17,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @65 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
20 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 19,
21 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 16,
23 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 20,2,21,14,3 @74 exception:22,
6 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mCache, <Application,Lcom/android/server/wm/TaskSnapshotCache> > 1,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mPersister, <Application,Lcom/android/server/wm/TaskSnapshotPersister> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotPersister, enableLowResSnapshots()Z > 8 @6 exception:9,
2 = getfield < Application, Lcom/android/server/wm/TaskSnapshotPersister, mEnableLowResSnapshots, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,7,
15 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 6,2,3,4,13 @15 exception:14,
6 = getfield < Application, Lcom/android/server/wm/TaskSnapshotCache, mService, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 6,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @5 exception:8,
9 = getfield < Application, Lcom/android/server/wm/TaskSnapshotCache, mRunningCache, <Application,Landroid/util/ArrayMap> > 1,
11 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @10 exception:10,
13 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 9,11 @14 exception:12,
14 = checkcast <Application,Lcom/android/server/wm/TaskSnapshotCache$CacheEntry>13 <Application,Lcom/android/server/wm/TaskSnapshotCache$CacheEntry>,
conditional branch(eq, to iindex=-1) 14,15,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @30 exception:16,
conditional branch(ne, to iindex=-1) 4,15,
18 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, tryRestoreFromDisk(IIZ)Landroid/window/TaskSnapshot; > 1,2,3,5 @37 exception:17,
return 18,
return 15,
conditional branch(ne, to iindex=-1) 23,17,
conditional branch(eq, to iindex=-1) 4,17,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, takeTaskSnapshot(I)Landroid/window/TaskSnapshot; > 1,2 @82 exception:24,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(ne, to iindex=-1) 17,15,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
19 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 18,
21 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, captureTaskSnapshot(Lcom/android/server/wm/Task;Z)Landroid/window/TaskSnapshot; > 19,14,15 @40 exception:20,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshotMode(Lcom/android/server/wm/Task;)I > 1,2 @8 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 6,12,
goto (from iindex= 12 to iindex = 11),
15 = phi  14,4,11,8,
return 15,
monitorexit 9,
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,
26 = phi  23,23,25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @86 exception:29,
return 26,","depth : 0
public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.getSnapshot(p1, Task.mUserId, 1, p2);
	TaskSnapshot v7 = p0.takeTaskSnapshot(p1);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
depth : 1
public TaskSnapshot getSnapshot(int p1, int p2, boolean p3, boolean p4){
	boolean v1 = this.mPersister.enableLowResSnapshots();
	TaskSnapshot v2 = this.mCache.getSnapshot(p1, p2, p3, phiInstruction);
	return v2;
}
-----
depth : 2
public boolean enableLowResSnapshots(){
	return this.mEnableLowResSnapshots;
}
-----
depth : 2
public TaskSnapshot getSnapshot(int p1, int p2, boolean p3, boolean p4){
	WindowManagerService.boostPriorityForLockedSection();
	Integer v2 = Integer.valueOf(p1);
	Object v3 = this.mRunningCache.get(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v5 = p0.tryRestoreFromDisk(p1, p2, p4);
	return v5;
}
-----
depth : 1
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.captureTaskSnapshot(v4, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 2
public TaskSnapshot captureTaskSnapshot(Task p1, boolean p2){
	int v1 = p0.getSnapshotMode(p1);
	return phiInstruction;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	AppTransition$$ExternalSyntheticLambda2 v9 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v11 = PooledLambda.__(Tas.class);
	Integer v12 = Integer.valueOf(p1);
	PooledPredicate v13 = PooledLambda.obtainPredicate(v9, v11, v12);
	Task v14 = RootWindowContainer.getTask(v13);
	v13.recycle();
	Task v16 = RootWindowContainer.getOrCreateRootTask(0, 0, v14, 0);
	Task v17 = v14.getRootTask();
	boolean v18 = v14.reparent(v16, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v8 = v14;
	Task v7 = v8;
	boolean v23 = this.mEnableLowResSnapshots;
	WindowManagerService.boostPriorityForLockedSection();
	Integer v26 = Integer.valueOf(p1);
	Object v27 = this.mRunningCache.get(v26);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v29 = TaskSnapshotCache.tryRestoreFromDisk(p1, p2, phiInstruction);
	TaskSnapshot v24 = v29;
	TaskSnapshot v22 = v24;
	long v32 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v36 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v35 = v36;
	int v38 = this.mChildren.size();
	Object v39 = this.mChildren.get(phiInstruction);
	boolean v40 = v39.isVisible();
	boolean v37 = 1;
	int v42 = TaskSnapshotController.getSnapshotMode(v35);
	TaskSnapshot v41 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v32);
	TaskSnapshot v30 = phiInstruction;
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskSnapshot(IZZ)Landroid/window/TaskSnapshot;","2","5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @6 exception:8,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
13 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 13,2,14 @22 exception:15,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 16,17,
monitorexit 11,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @65 exception:18,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
19 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
20 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 19,
21 = getfield < Application, Lcom/android/server/wm/Task, mUserId, <Primordial,I> > 16,
23 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 20,2,21,14,3 @74 exception:22,
6 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mCache, <Application,Lcom/android/server/wm/TaskSnapshotCache> > 1,
conditional branch(eq, to iindex=-1) 5,7,
8 = getfield < Application, Lcom/android/server/wm/TaskSnapshotController, mPersister, <Application,Lcom/android/server/wm/TaskSnapshotPersister> > 1,
10 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotPersister, enableLowResSnapshots()Z > 8 @6 exception:9,
2 = getfield < Application, Lcom/android/server/wm/TaskSnapshotPersister, mEnableLowResSnapshots, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,7,
15 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, getSnapshot(IIZZ)Landroid/window/TaskSnapshot; > 6,2,3,4,13 @15 exception:14,
6 = getfield < Application, Lcom/android/server/wm/TaskSnapshotCache, mService, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
7 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 6,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @5 exception:8,
9 = getfield < Application, Lcom/android/server/wm/TaskSnapshotCache, mRunningCache, <Application,Landroid/util/ArrayMap> > 1,
11 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @10 exception:10,
13 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 9,11 @14 exception:12,
14 = checkcast <Application,Lcom/android/server/wm/TaskSnapshotCache$CacheEntry>13 <Application,Lcom/android/server/wm/TaskSnapshotCache$CacheEntry>,
conditional branch(eq, to iindex=-1) 14,15,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @30 exception:16,
conditional branch(ne, to iindex=-1) 4,15,
18 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotCache, tryRestoreFromDisk(IIZ)Landroid/window/TaskSnapshot; > 1,2,3,5 @37 exception:17,
return 18,
return 15,
conditional branch(ne, to iindex=-1) 23,17,
conditional branch(eq, to iindex=-1) 4,17,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, takeTaskSnapshot(I)Landroid/window/TaskSnapshot; > 1,2 @82 exception:24,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @9 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @16 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @22 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 14 @28 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
6 = binaryop(sub) 4 , 5,
16 = phi  15,6,
conditional branch(lt, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
10 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 8,16 @12 exception:9,
11 = checkcast <Application,Lcom/android/server/wm/WindowContainer>10 <Application,Lcom/android/server/wm/WindowContainer>,
13 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, isVisible()Z > 11 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
return 5,
conditional branch(ne, to iindex=-1) 17,15,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 1,
19 = getfield < Application, Lcom/android/server/wm/WindowManagerService, mTaskSnapshotController, <Application,Lcom/android/server/wm/TaskSnapshotController> > 18,
21 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, captureTaskSnapshot(Lcom/android/server/wm/Task;Z)Landroid/window/TaskSnapshot; > 19,14,15 @40 exception:20,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/wm/TaskSnapshotController, getSnapshotMode(Lcom/android/server/wm/Task;)I > 1,2 @8 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 6,12,
goto (from iindex= 12 to iindex = 11),
15 = phi  14,4,11,8,
return 15,
monitorexit 9,
56 = phi  15,21,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @45 exception:60,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @48 exception:61,
return 56,
26 = phi  23,23,25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @86 exception:29,
return 26,","depth : 0
public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.getSnapshot(p1, Task.mUserId, 1, p2);
	TaskSnapshot v7 = p0.takeTaskSnapshot(p1);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
depth : 1
public TaskSnapshot getSnapshot(int p1, int p2, boolean p3, boolean p4){
	boolean v1 = this.mPersister.enableLowResSnapshots();
	TaskSnapshot v2 = this.mCache.getSnapshot(p1, p2, p3, phiInstruction);
	return v2;
}
-----
depth : 2
public boolean enableLowResSnapshots(){
	return this.mEnableLowResSnapshots;
}
-----
depth : 2
public TaskSnapshot getSnapshot(int p1, int p2, boolean p3, boolean p4){
	WindowManagerService.boostPriorityForLockedSection();
	Integer v2 = Integer.valueOf(p1);
	Object v3 = this.mRunningCache.get(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v5 = p0.tryRestoreFromDisk(p1, p2, p4);
	return v5;
}
-----
depth : 1
public TaskSnapshot takeTaskSnapshot(int p1){
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	boolean v5 = v4.isVisible();
	TaskSnapshot v6 = WindowManagerService.mTaskSnapshotController.captureTaskSnapshot(v4, 0);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public boolean isVisible(){
	int v1 = this.mChildren.size();
	Object v2 = this.mChildren.get(phiInstruction);
	boolean v3 = v2.isVisible();
	return 1;
}
-----
depth : 2
public TaskSnapshot captureTaskSnapshot(Task p1, boolean p2){
	int v1 = p0.getSnapshotMode(p1);
	return phiInstruction;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public TaskSnapshot getTaskSnapshot(int p1, boolean p2, boolean p3){
	long v2 = Binder.clearCallingIdentity();
	AppTransition$$ExternalSyntheticLambda2 v8 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	Integer v11 = Integer.valueOf(p1);
	PooledPredicate v12 = PooledLambda.obtainPredicate(v8, v10, v11);
	Task v13 = RootWindowContainer.getTask(v12);
	v12.recycle();
	Task v15 = RootWindowContainer.getOrCreateRootTask(0, 0, v13, 0);
	Task v16 = v13.getRootTask();
	boolean v17 = v13.reparent(v15, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v7 = v13;
	Task v6 = v7;
	WindowManagerThreadPriorityBooster.reset();
	boolean v23 = this.mEnableLowResSnapshots;
	WindowManagerService.boostPriorityForLockedSection();
	Integer v26 = Integer.valueOf(p1);
	Object v27 = this.mRunningCache.get(v26);
	WindowManagerService.resetPriorityAfterLockedSection();
	TaskSnapshot v29 = TaskSnapshotCache.tryRestoreFromDisk(p1, p2, phiInstruction);
	TaskSnapshot v24 = v29;
	TaskSnapshot v22 = v24;
	long v32 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v36 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v35 = v36;
	int v38 = this.mChildren.size();
	Object v39 = this.mChildren.get(phiInstruction);
	boolean v40 = v39.isVisible();
	boolean v37 = 1;
	int v42 = TaskSnapshotController.getSnapshotMode(v35);
	TaskSnapshot v41 = phiInstruction;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v32);
	TaskSnapshot v30 = phiInstruction;
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V > 7,2 @12 exception:8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
return,","depth : 0
public void finishVoiceTask(IVoiceInteractionSession p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.finishVoiceTask(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void finishVoiceTask(IVoiceInteractionSession p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.finishVoiceTask(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V > 7,2 @12 exception:8,
3 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda5>@0,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda5, <init>(Landroid/service/voice/IVoiceInteractionSession;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 1,3 @5 exception:5,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void finishVoiceTask(IVoiceInteractionSession p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.finishVoiceTask(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void finishVoiceTask(IVoiceInteractionSession p1){
	RootWindowContainer$$ExternalSyntheticLambda5 v0 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
	p0.forAllRootTasks(v0);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void finishVoiceTask(IVoiceInteractionSession p1){
	this.sThreadPriorityBooster.boost();
	long v3 = Binder.clearCallingIdentity();
	RootWindowContainer$$ExternalSyntheticLambda5 v5 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
	RootWindowContainer.forAllRootTasks(v5);
	Binder.restoreCallingIdentity(v3);
	this.sThreadPriorityBooster.reset();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V > 7,2 @12 exception:8,
3 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda5>@0,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda5, <init>(Landroid/service/voice/IVoiceInteractionSession;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 1,3 @5 exception:5,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;Z)V > 1,2,3 @1 exception:4,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void finishVoiceTask(IVoiceInteractionSession p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.finishVoiceTask(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void finishVoiceTask(IVoiceInteractionSession p1){
	RootWindowContainer$$ExternalSyntheticLambda5 v0 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
	p0.forAllRootTasks(v0);
	return;
}
-----
depth : 2
public void forAllRootTasks(Consumer p1){
	p0.forAllRootTasks(p1, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void finishVoiceTask(IVoiceInteractionSession p1){
	long v4 = Binder.clearCallingIdentity();
	RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
	WindowContainer.forAllRootTasks(v6, 1);
	Binder.restoreCallingIdentity(v4);
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V > 7,2 @12 exception:8,
3 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda5>@0,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda5, <init>(Landroid/service/voice/IVoiceInteractionSession;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 1,3 @5 exception:5,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;Z)V > 1,2,3 @1 exception:4,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void finishVoiceTask(IVoiceInteractionSession p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.finishVoiceTask(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void finishVoiceTask(IVoiceInteractionSession p1){
	RootWindowContainer$$ExternalSyntheticLambda5 v0 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
	p0.forAllRootTasks(v0);
	return;
}
-----
depth : 2
public void forAllRootTasks(Consumer p1){
	p0.forAllRootTasks(p1, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void finishVoiceTask(IVoiceInteractionSession p1){
	WindowManagerThreadPriorityBooster.boost();
	long v5 = Binder.clearCallingIdentity();
	RootWindowContainer$$ExternalSyntheticLambda5 v7 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
	WindowContainer.forAllRootTasks(v7, 1);
	Binder.restoreCallingIdentity(v5);
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, finishVoiceTask(Landroid/service/voice/IVoiceInteractionSession;)V > 7,2 @12 exception:8,
3 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda5>@0,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda5, <init>(Landroid/service/voice/IVoiceInteractionSession;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;)V > 1,3 @5 exception:5,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Consumer;Z)V > 1,2,3 @1 exception:4,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void finishVoiceTask(IVoiceInteractionSession p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.finishVoiceTask(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void finishVoiceTask(IVoiceInteractionSession p1){
	RootWindowContainer$$ExternalSyntheticLambda5 v0 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
	p0.forAllRootTasks(v0);
	return;
}
-----
depth : 2
public void forAllRootTasks(Consumer p1){
	p0.forAllRootTasks(p1, 1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void finishVoiceTask(IVoiceInteractionSession p1){
	long v4 = Binder.clearCallingIdentity();
	RootWindowContainer$$ExternalSyntheticLambda5 v6 = new RootWindowContainer$$ExternalSyntheticLambda5(p1);
	WindowContainer.forAllRootTasks(v6, 1);
	Binder.restoreCallingIdentity(v4);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","stopAppSwitches()V","0","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
10 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @18 exception:9,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastStopAppSwitchesTime, <Primordial,J> > = 10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 11,12 @27 exception:13,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
17 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessageDelayed(IJ)Z > 14,12,15 @34 exception:16,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @38 exception:25,
return,","depth : 0
public void stopAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 0;
	long v3 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v3;
	this.mH.removeMessages(4);
	boolean v5 = this.mH.sendEmptyMessageDelayed(4, 500);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void stopAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 0;
	long v3 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v3;
	this.mH.removeMessages(4);
	boolean v5 = this.mH.sendEmptyMessageDelayed(4, 500);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","stopAppSwitches()V","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
10 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @18 exception:9,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastStopAppSwitchesTime, <Primordial,J> > = 10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 11,12 @27 exception:13,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
17 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessageDelayed(IJ)Z > 14,12,15 @34 exception:16,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @38 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void stopAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 0;
	long v3 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v3;
	this.mH.removeMessages(4);
	boolean v5 = this.mH.sendEmptyMessageDelayed(4, 500);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void stopAppSwitches(){
	this.sThreadPriorityBooster.boost();
	this.mAppSwitchesState = 0;
	long v4 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v4;
	this.mH.removeMessages(4);
	boolean v6 = this.mH.sendEmptyMessageDelayed(4, 500);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","stopAppSwitches()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
10 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @18 exception:9,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastStopAppSwitchesTime, <Primordial,J> > = 10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 11,12 @27 exception:13,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
17 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessageDelayed(IJ)Z > 14,12,15 @34 exception:16,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @38 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void stopAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 0;
	long v3 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v3;
	this.mH.removeMessages(4);
	boolean v5 = this.mH.sendEmptyMessageDelayed(4, 500);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void stopAppSwitches(){
	this.mAppSwitchesState = 0;
	long v5 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v5;
	this.mH.removeMessages(4);
	boolean v7 = this.mH.sendEmptyMessageDelayed(4, 500);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","stopAppSwitches()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
10 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @18 exception:9,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastStopAppSwitchesTime, <Primordial,J> > = 10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 11,12 @27 exception:13,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
17 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessageDelayed(IJ)Z > 14,12,15 @34 exception:16,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @38 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void stopAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 0;
	long v3 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v3;
	this.mH.removeMessages(4);
	boolean v5 = this.mH.sendEmptyMessageDelayed(4, 500);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void stopAppSwitches(){
	WindowManagerThreadPriorityBooster.boost();
	this.mAppSwitchesState = 0;
	long v6 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v6;
	this.mH.removeMessages(4);
	boolean v8 = this.mH.sendEmptyMessageDelayed(4, 500);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","stopAppSwitches()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
10 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @18 exception:9,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mLastStopAppSwitchesTime, <Primordial,J> > = 10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 11,12 @27 exception:13,
14 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
17 = invokevirtual < Application, Landroid/os/Handler, sendEmptyMessageDelayed(IJ)Z > 14,12,15 @34 exception:16,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @38 exception:25,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void stopAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 0;
	long v3 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v3;
	this.mH.removeMessages(4);
	boolean v5 = this.mH.sendEmptyMessageDelayed(4, 500);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void stopAppSwitches(){
	this.mAppSwitchesState = 0;
	long v5 = SystemClock.uptimeMillis();
	this.mLastStopAppSwitchesTime = v5;
	this.mH.removeMessages(4);
	boolean v7 = this.mH.sendEmptyMessageDelayed(4, 500);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I","0","16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;IZ)I > 1,2,3,4,5,6,7,8,9,10,11,12,13,14 @25 exception:15,
return 16,","depth : 0
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v1 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, 1);
	return v1;
}
-----
","public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v1 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, 1);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I","1","16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;IZ)I > 1,2,3,4,5,6,7,8,9,10,11,12,13,14 @25 exception:15,
16 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 12 @3 exception:15,
conditional branch(eq, to iindex=-1) 16,17,
19 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOriginalOptions()Landroid/app/ActivityOptions; > 16 @9 exception:18,
21 = invokevirtual < Application, Landroid/app/ActivityOptions, getTransientLaunch()Z > 19 @13 exception:20,
conditional branch(eq, to iindex=-1) 21,17,
23 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @19 exception:22,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,23 @23 exception:24,
conditional branch(eq, to iindex=-1) 25,17,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:26,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 29,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:30,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 28,31 @43 exception:32,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
35 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOriginalOptions()Landroid/app/ActivityOptions; > 16 @48 exception:34,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, startExistingRecentsIfPossible(Landroid/content/Intent;Landroid/app/ActivityOptions;)Z > 33,5,35 @52 exception:36,
conditional branch(eq, to iindex=-1) 37,17,
monitorexit 29,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @60 exception:112,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 28 @63 exception:113,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @66 exception:114,
return 98,
return 16,","depth : 0
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v1 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, 1);
	return v1;
}
-----
depth : 1
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12, boolean p13){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p11);
	ActivityOptions v2 = v1.getOriginalOptions();
	boolean v3 = v2.getTransientLaunch();
	int v4 = Binder.getCallingUid();
	boolean v5 = p0.isCallerRecents(v4);
	long v6 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Trace.traceBegin(32, ""startExistingRecents"");
	ActivityOptions v9 = v1.getOriginalOptions();
	boolean v10 = this.mActivityStartController.startExistingRecentsIfPossible(p4, v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v6);
	return 2;
}
-----
","public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	SafeActivityOptions v2 = SafeActivityOptions.fromBundle(p11);
	ActivityOptions v3 = v2.getOriginalOptions();
	boolean v4 = v3.getTransientLaunch();
	int v5 = Binder.getCallingUid();
	boolean v6 = ActivityTaskManagerService.isCallerRecents(v5);
	long v7 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Trace.traceBegin(32, ""startExistingRecents"");
	ActivityOptions v10 = v2.getOriginalOptions();
	boolean v11 = this.mActivityStartController.startExistingRecentsIfPossible(p4, v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v7);
	int v1 = 2;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I","2","16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;IZ)I > 1,2,3,4,5,6,7,8,9,10,11,12,13,14 @25 exception:15,
16 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 12 @3 exception:15,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
conditional branch(eq, to iindex=-1) 16,17,
19 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOriginalOptions()Landroid/app/ActivityOptions; > 16 @9 exception:18,
2 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mOriginalOptions, <Application,Landroid/app/ActivityOptions> > 1,
return 2,
21 = invokevirtual < Application, Landroid/app/ActivityOptions, getTransientLaunch()Z > 19 @13 exception:20,
2 = getfield < Application, Landroid/app/ActivityOptions, mTransientLaunch, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 21,17,
23 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @19 exception:22,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,23 @23 exception:24,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
5 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, isCallerRecents(I)Z > 3,2 @2 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 25,17,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:26,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 29,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 28,31 @43 exception:32,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
35 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOriginalOptions()Landroid/app/ActivityOptions; > 16 @48 exception:34,
2 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mOriginalOptions, <Application,Landroid/app/ActivityOptions> > 1,
return 2,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, startExistingRecentsIfPossible(Landroid/content/Intent;Landroid/app/ActivityOptions;)Z > 33,5,35 @52 exception:36,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 4 @4 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentsComponent()Landroid/content/ComponentName; > 6 @8 exception:7,
10 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 2 @12 exception:9,
12 = invokevirtual < Application, Landroid/content/ComponentName, equals(Ljava/lang/Object;)Z > 8,10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,13,
goto (from iindex= 12 to iindex = 2),
16 = phi  15,14,
17 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 17,
20 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 18 @29 exception:19,
22 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootTask(II)Lcom/android/server/wm/Task; > 20,13,16 @34 exception:21,
conditional branch(ne, to iindex=-1) 22,13,
return 13,
conditional branch(eq, to iindex=-1) 37,17,
monitorexit 29,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @60 exception:112,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 28 @63 exception:113,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @66 exception:114,
return 98,
return 16,","depth : 0
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v1 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, 1);
	return v1;
}
-----
depth : 1
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12, boolean p13){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p11);
	ActivityOptions v2 = v1.getOriginalOptions();
	boolean v3 = v2.getTransientLaunch();
	int v4 = Binder.getCallingUid();
	boolean v5 = p0.isCallerRecents(v4);
	long v6 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Trace.traceBegin(32, ""startExistingRecents"");
	ActivityOptions v9 = v1.getOriginalOptions();
	boolean v10 = this.mActivityStartController.startExistingRecentsIfPossible(p4, v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v6);
	return 2;
}
-----
depth : 2
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions getOriginalOptions(){
	return this.mOriginalOptions;
}
-----
depth : 2
public boolean getTransientLaunch(){
	return this.mTransientLaunch;
}
-----
depth : 2
public boolean isCallerRecents(int p1){
	boolean v1 = this.mRecentTasks.isCallerRecents(p1);
	return v1;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public ActivityOptions getOriginalOptions(){
	return this.mOriginalOptions;
}
-----
depth : 2
public boolean startExistingRecentsIfPossible(Intent p1, ActivityOptions p2){
	RecentTasks v1 = this.mService.getRecentTasks();
	ComponentName v2 = v1.getRecentsComponent();
	ComponentName v3 = p1.getComponent();
	boolean v4 = v2.equals(v3);
	TaskDisplayArea v5 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v6 = v5.getRootTask(0, phiInstruction);
	return 0;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	SafeActivityOptions v3 = new SafeActivityOptions(v4);
	ActivityOptions v4 = ActivityOptions.fromBundle(p11);
	SafeActivityOptions v2 = phiInstruction;
	ActivityOptions v6 = this.mOriginalOptions;
	boolean v7 = this.mTransientLaunch;
	int v8 = Binder.getCallingUid();
	boolean v10 = this.mRecentTasks.isCallerRecents(v8);
	boolean v9 = v10;
	long v11 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Trace.traceBegin(32, ""startExistingRecents"");
	ActivityOptions v15 = this.mOriginalOptions;
	RecentTasks v17 = this.mService.getRecentTasks();
	ComponentName v18 = v17.getRecentsComponent();
	ComponentName v19 = p4.getComponent();
	boolean v20 = v18.equals(v19);
	TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v22 = v21.getRootTask(0, phiInstruction);
	boolean v16 = 0;
	this.sThreadPriorityBooster.reset();
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v11);
	int v1 = 2;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;I)I","2","16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;Ljava/lang/String;Landroid/os/IBinder;Ljava/lang/String;IILandroid/app/ProfilerInfo;Landroid/os/Bundle;IZ)I > 1,2,3,4,5,6,7,8,9,10,11,12,13,14 @25 exception:15,
16 = invokestatic < Application, Lcom/android/server/wm/SafeActivityOptions, fromBundle(Landroid/os/Bundle;)Lcom/android/server/wm/SafeActivityOptions; > 12 @3 exception:15,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Lcom/android/server/wm/SafeActivityOptions>@2,
5 = invokestatic < Application, Landroid/app/ActivityOptions, fromBundle(Landroid/os/Bundle;)Landroid/app/ActivityOptions; > 1 @4 exception:4,
invokespecial < Application, Lcom/android/server/wm/SafeActivityOptions, <init>(Landroid/app/ActivityOptions;)V > 3,5 @8 exception:6,
goto (from iindex= 5 to iindex = 2),
7 = phi  3,2,
return 7,
conditional branch(eq, to iindex=-1) 16,17,
19 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOriginalOptions()Landroid/app/ActivityOptions; > 16 @9 exception:18,
2 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mOriginalOptions, <Application,Landroid/app/ActivityOptions> > 1,
return 2,
21 = invokevirtual < Application, Landroid/app/ActivityOptions, getTransientLaunch()Z > 19 @13 exception:20,
2 = getfield < Application, Landroid/app/ActivityOptions, mTransientLaunch, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 21,17,
23 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @19 exception:22,
25 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,23 @23 exception:24,
3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
5 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, isCallerRecents(I)Z > 3,2 @2 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 25,17,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @29 exception:26,
29 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 29,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @38 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 28,31 @43 exception:32,
33 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mActivityStartController, <Application,Lcom/android/server/wm/ActivityStartController> > 1,
35 = invokevirtual < Application, Lcom/android/server/wm/SafeActivityOptions, getOriginalOptions()Landroid/app/ActivityOptions; > 16 @48 exception:34,
2 = getfield < Application, Lcom/android/server/wm/SafeActivityOptions, mOriginalOptions, <Application,Landroid/app/ActivityOptions> > 1,
return 2,
37 = invokevirtual < Application, Lcom/android/server/wm/ActivityStartController, startExistingRecentsIfPossible(Landroid/content/Intent;Landroid/app/ActivityOptions;)Z > 33,5,35 @52 exception:36,
4 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 4 @4 exception:5,
8 = invokevirtual < Application, Lcom/android/server/wm/RecentTasks, getRecentsComponent()Landroid/content/ComponentName; > 6 @8 exception:7,
10 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 2 @12 exception:9,
12 = invokevirtual < Application, Landroid/content/ComponentName, equals(Ljava/lang/Object;)Z > 8,10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,13,
goto (from iindex= 12 to iindex = 2),
16 = phi  15,14,
17 = getfield < Application, Lcom/android/server/wm/ActivityStartController, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
18 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 17,
20 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDefaultTaskDisplayArea()Lcom/android/server/wm/TaskDisplayArea; > 18 @29 exception:19,
22 = invokevirtual < Application, Lcom/android/server/wm/TaskDisplayArea, getRootTask(II)Lcom/android/server/wm/Task; > 20,13,16 @34 exception:21,
conditional branch(ne, to iindex=-1) 22,13,
24 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 22 @41 exception:23,
conditional branch(eq, to iindex=-1) 24,13,
25 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mVisibleRequested, <Primordial,Z> > 24,
conditional branch(ne, to iindex=-1) 25,13,
27 = invokevirtual < Application, Lcom/android/server/wm/ActivityRecord, attachedToProcess()Z > 24 @51 exception:26,
conditional branch(eq, to iindex=-1) 27,13,
28 = getfield < Application, Lcom/android/server/wm/ActivityRecord, mActivityComponent, <Application,Landroid/content/ComponentName> > 24,
30 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 2 @59 exception:29,
32 = invokevirtual < Application, Landroid/content/ComponentName, equals(Ljava/lang/Object;)Z > 28,30 @63 exception:31,
conditional branch(eq, to iindex=-1) 32,13,
33 = getfield < Application, Lcom/android/server/wm/WindowContainer, mDisplayContent, <Application,Lcom/android/server/wm/DisplayContent> > 24,
35 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, isKeyguardLocked()Z > 33 @71 exception:34,
conditional branch(eq, to iindex=-1) 35,13,
goto (from iindex= 41 to iindex = 97),
return 13,
conditional branch(eq, to iindex=-1) 37,17,
monitorexit 29,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @60 exception:112,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 28 @63 exception:113,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @66 exception:114,
return 98,
return 16,","depth : 0
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	int v1 = p0.startActivityAsUser(p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, 1);
	return v1;
}
-----
depth : 1
public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12, boolean p13){
	SafeActivityOptions v1 = SafeActivityOptions.fromBundle(p11);
	ActivityOptions v2 = v1.getOriginalOptions();
	boolean v3 = v2.getTransientLaunch();
	int v4 = Binder.getCallingUid();
	boolean v5 = p0.isCallerRecents(v4);
	long v6 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Trace.traceBegin(32, ""startExistingRecents"");
	ActivityOptions v9 = v1.getOriginalOptions();
	boolean v10 = this.mActivityStartController.startExistingRecentsIfPossible(p4, v9);
	WindowManagerService.resetPriorityAfterLockedSection();
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v6);
	return 2;
}
-----
depth : 2
public SafeActivityOptions fromBundle(Bundle p1){
	SafeActivityOptions v0 = new SafeActivityOptions(v1);
	ActivityOptions v1 = ActivityOptions.fromBundle(p1);
	return phiInstruction;
}
-----
depth : 2
public ActivityOptions getOriginalOptions(){
	return this.mOriginalOptions;
}
-----
depth : 2
public boolean getTransientLaunch(){
	return this.mTransientLaunch;
}
-----
depth : 2
public boolean isCallerRecents(int p1){
	boolean v1 = this.mRecentTasks.isCallerRecents(p1);
	return v1;
}
-----
depth : 2
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public ActivityOptions getOriginalOptions(){
	return this.mOriginalOptions;
}
-----
depth : 2
public boolean startExistingRecentsIfPossible(Intent p1, ActivityOptions p2){
	RecentTasks v1 = this.mService.getRecentTasks();
	ComponentName v2 = v1.getRecentsComponent();
	ComponentName v3 = p1.getComponent();
	boolean v4 = v2.equals(v3);
	TaskDisplayArea v5 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v6 = v5.getRootTask(0, phiInstruction);
	ActivityRecord v7 = v6.topRunningActivity();
	boolean v8 = v7.attachedToProcess();
	ComponentName v9 = p1.getComponent();
	boolean v10 = ActivityRecord.mActivityComponent.equals(v9);
	boolean v11 = WindowContainer.mDisplayContent.isKeyguardLocked();
	return 0;
}
-----
depth : 2
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public int startActivityAsUser(IApplicationThread p1, String p2, String p3, Intent p4, String p5, IBinder p6, String p7, int p8, int p9, ProfilerInfo p10, Bundle p11, int p12){
	SafeActivityOptions v3 = new SafeActivityOptions(v4);
	ActivityOptions v4 = ActivityOptions.fromBundle(p11);
	SafeActivityOptions v2 = phiInstruction;
	ActivityOptions v6 = this.mOriginalOptions;
	boolean v7 = this.mTransientLaunch;
	int v8 = Binder.getCallingUid();
	boolean v10 = this.mRecentTasks.isCallerRecents(v8);
	boolean v9 = v10;
	long v11 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Trace.traceBegin(32, ""startExistingRecents"");
	ActivityOptions v15 = this.mOriginalOptions;
	RecentTasks v17 = this.mService.getRecentTasks();
	ComponentName v18 = v17.getRecentsComponent();
	ComponentName v19 = p4.getComponent();
	boolean v20 = v18.equals(v19);
	TaskDisplayArea v21 = ActivityTaskManagerService.mRootWindowContainer.getDefaultTaskDisplayArea();
	Task v22 = v21.getRootTask(0, phiInstruction);
	ActivityRecord v23 = v22.topRunningActivity();
	boolean v24 = v23.attachedToProcess();
	ComponentName v25 = p4.getComponent();
	boolean v26 = ActivityRecord.mActivityComponent.equals(v25);
	boolean v27 = WindowContainer.mDisplayContent.isKeyguardLocked();
	boolean v16 = 0;
	this.sThreadPriorityBooster.reset();
	Trace.traceEnd(32);
	Binder.restoreCallingIdentity(v11);
	int v1 = 2;
	return v1;
}
","SYS_OR_SIG"


"Lcom/android/server/wm/ActivityTaskManagerService","getTaskBounds(I)Landroid/graphics/Rect;","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = new <Application,Landroid/graphics/Rect>@9,
invokespecial < Application, Landroid/graphics/Rect, <init>()V > 7 @11 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @23 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
29 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @33 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @38 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 29,2 @41 exception:34,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,36 @46 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @49 exception:39,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 28,40 @53 exception:41,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:57,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @60 exception:58,
return 7,","depth : 0
public Rect getTaskBounds(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getTaskBounds()"");
	long v2 = Binder.clearCallingIdentity();
	Rect v2 = new Rect();
	WindowManagerService.boostPriorityForLockedSection();
	Task v5 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""getTaskBounds: taskId="");
	StringBuilder v8 = v5.append(p1);
	StringBuilder v9 = v5.append("" not found"");
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v2;
}
-----
","public Rect getTaskBounds(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getTaskBounds()"");
	long v2 = Binder.clearCallingIdentity();
	Rect v3 = new Rect();
	WindowManagerService.boostPriorityForLockedSection();
	Task v6 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskBounds(I)Landroid/graphics/Rect;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = new <Application,Landroid/graphics/Rect>@9,
invokespecial < Application, Landroid/graphics/Rect, <init>()V > 7 @11 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @23 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 14 @64 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mParent, <Application,Lcom/android/server/wm/WindowContainer> > 1,
return 2,
conditional branch(eq, to iindex=-1) 17,15,
21 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, getBounds()Landroid/graphics/Rect; > 14 @70 exception:20,
invokevirtual < Application, Landroid/graphics/Rect, set(Landroid/graphics/Rect;)V > 7,21 @74 exception:22,
goto (from iindex= 35 to iindex = 8),
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @86 exception:26,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @89 exception:27,
return 7,","depth : 0
public Rect getTaskBounds(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getTaskBounds()"");
	long v2 = Binder.clearCallingIdentity();
	Rect v2 = new Rect();
	WindowManagerService.boostPriorityForLockedSection();
	Task v5 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowContainer v6 = v5.getParent();
	Rect v7 = v5.getBounds();
	v2.set(v7);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v2;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public Rect getTaskBounds(int p1){
	long v5 = Binder.clearCallingIdentity();
	Rect v6 = new Rect();
	this.sThreadPriorityBooster.boost();
	Task v11 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v10 = v11;
	WindowContainer v12 = this.mParent;
	Rect v13 = v10.getBounds();
	v6.set(v13);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskBounds(I)Landroid/graphics/Rect;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = new <Application,Landroid/graphics/Rect>@9,
invokespecial < Application, Landroid/graphics/Rect, <init>()V > 7 @11 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @23 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getParent()Lcom/android/server/wm/WindowContainer; > 14 @64 exception:16,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mParent, <Application,Lcom/android/server/wm/WindowContainer> > 1,
return 2,
conditional branch(eq, to iindex=-1) 17,15,
18 = getfield < Application, Lcom/android/server/wm/Task, mLastNonFullscreenBounds, <Application,Landroid/graphics/Rect> > 14,
conditional branch(eq, to iindex=-1) 18,15,
invokevirtual < Application, Landroid/graphics/Rect, set(Landroid/graphics/Rect;)V > 7,18 @82 exception:19,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @86 exception:26,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @89 exception:27,
return 7,","depth : 0
public Rect getTaskBounds(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getTaskBounds()"");
	long v2 = Binder.clearCallingIdentity();
	Rect v2 = new Rect();
	WindowManagerService.boostPriorityForLockedSection();
	Task v5 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	WindowContainer v6 = v5.getParent();
	v2.set(Task.mLastNonFullscreenBounds);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v2;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public WindowContainer getParent(){
	return this.mParent;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public Rect getTaskBounds(int p1){
	long v5 = Binder.clearCallingIdentity();
	Rect v6 = new Rect();
	this.sThreadPriorityBooster.boost();
	Task v11 = RootWindowContainer.anyTaskForId(p1, 1, 0, 0);
	Task v10 = v11;
	WindowContainer v12 = this.mParent;
	v6.set(Task.mLastNonFullscreenBounds);
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskBounds(I)Landroid/graphics/Rect;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = new <Application,Landroid/graphics/Rect>@9,
invokespecial < Application, Landroid/graphics/Rect, <init>()V > 7 @11 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @23 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
29 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @33 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @38 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 29,2 @41 exception:34,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,36 @46 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @49 exception:39,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 28,40 @53 exception:41,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:57,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @60 exception:58,
return 7,","depth : 0
public Rect getTaskBounds(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getTaskBounds()"");
	long v2 = Binder.clearCallingIdentity();
	Rect v2 = new Rect();
	WindowManagerService.boostPriorityForLockedSection();
	Task v5 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""getTaskBounds: taskId="");
	StringBuilder v8 = v5.append(p1);
	StringBuilder v9 = v5.append("" not found"");
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v2;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public Rect getTaskBounds(int p1){
	long v5 = Binder.clearCallingIdentity();
	Rect v6 = new Rect();
	AppTransition$$ExternalSyntheticLambda2 v13 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v15 = PooledLambda.__(Tas.class);
	Integer v16 = Integer.valueOf(p1);
	PooledPredicate v17 = PooledLambda.obtainPredicate(v13, v15, v16);
	Task v18 = RootWindowContainer.getTask(v17);
	v17.recycle();
	Task v20 = RootWindowContainer.getOrCreateRootTask(0, 0, v18, 0);
	Task v21 = v18.getRootTask();
	boolean v22 = v18.reparent(v20, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v12 = v18;
	Task v11 = v12;
	Binder.restoreCallingIdentity(v5);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskBounds(I)Landroid/graphics/Rect;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = new <Application,Landroid/graphics/Rect>@9,
invokespecial < Application, Landroid/graphics/Rect, <init>()V > 7 @11 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @23 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
29 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @33 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @38 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 29,2 @41 exception:34,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,36 @46 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @49 exception:39,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 28,40 @53 exception:41,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:57,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @60 exception:58,
return 7,","depth : 0
public Rect getTaskBounds(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getTaskBounds()"");
	long v2 = Binder.clearCallingIdentity();
	Rect v2 = new Rect();
	WindowManagerService.boostPriorityForLockedSection();
	Task v5 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""getTaskBounds: taskId="");
	StringBuilder v8 = v5.append(p1);
	StringBuilder v9 = v5.append("" not found"");
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v2;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public Rect getTaskBounds(int p1){
	long v5 = Binder.clearCallingIdentity();
	Rect v6 = new Rect();
	WindowManagerThreadPriorityBooster.boost();
	AppTransition$$ExternalSyntheticLambda2 v14 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v16 = PooledLambda.__(Tas.class);
	Integer v17 = Integer.valueOf(p1);
	PooledPredicate v18 = PooledLambda.obtainPredicate(v14, v16, v17);
	Task v19 = RootWindowContainer.getTask(v18);
	v18.recycle();
	Task v21 = RootWindowContainer.getOrCreateRootTask(0, 0, v19, 0);
	Task v22 = v19.getRootTask();
	boolean v23 = v19.reparent(v21, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v13 = v19;
	Task v12 = v13;
	Binder.restoreCallingIdentity(v5);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTaskBounds(I)Landroid/graphics/Rect;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:5,
7 = new <Application,Landroid/graphics/Rect>@9,
invokespecial < Application, Landroid/graphics/Rect, <init>()V > 7 @11 exception:8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @17 exception:10,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 11,2,12 @23 exception:13,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
conditional branch(ne, to iindex=-1) 4,7,
goto (from iindex= 3 to iindex = 9),
11 = new <Application,Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2>@14,
invokespecial < Application, Lcom/android/server/wm/AppTransition$$ExternalSyntheticLambda2, <init>()V > 11 @16 exception:12,
13 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
15 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 13 @21 exception:14,
17 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @25 exception:16,
19 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainPredicate(Ljava/util/function/BiPredicate;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledPredicate; > 11,15,17 @29 exception:18,
21 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,19 @33 exception:20,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledPredicate, recycle()V > 19 @37 exception:22,
conditional branch(eq, to iindex=-1) 21,7,
conditional branch(eq, to iindex=-1) 4,7,
32 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getOrCreateRootTask(Lcom/android/server/wm/ActivityRecord;Landroid/app/ActivityOptions;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 1,7,4,21,5 @45 exception:31,
conditional branch(eq, to iindex=-1) 32,7,
34 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 21 @51 exception:33,
conditional branch(eq, to iindex=-1) 34,32,
conditional branch(eq, to iindex=-1) 5,7,
35 = phi  6,7,
38 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 21,32,5,35,27,27,36 @67 exception:37,
return 21,
return 6,
conditional branch(ne, to iindex=-1) 14,15,
29 = new <Application,Ljava/lang/StringBuilder>@31,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @33 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @38 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 29,2 @41 exception:34,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,36 @46 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @49 exception:39,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 28,40 @53 exception:41,
monitorexit 9,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @57 exception:57,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @60 exception:58,
return 7,","depth : 0
public Rect getTaskBounds(int p1){
	ActivityTaskManagerService.enforceTaskPermission(""getTaskBounds()"");
	long v2 = Binder.clearCallingIdentity();
	Rect v2 = new Rect();
	WindowManagerService.boostPriorityForLockedSection();
	Task v5 = this.mRootWindowContainer.anyTaskForId(p1, 1);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""getTaskBounds: taskId="");
	StringBuilder v8 = v5.append(p1);
	StringBuilder v9 = v5.append("" not found"");
	String v10 = v5.toString();
	int v11 = Slog.w(""ActivityTaskManager"", v10);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return v2;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2, ActivityOptions p3, boolean p4){
	AppTransition$$ExternalSyntheticLambda2 v0 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v2 = PooledLambda.__(Tas.class);
	Integer v3 = Integer.valueOf(p1);
	PooledPredicate v4 = PooledLambda.obtainPredicate(v0, v2, v3);
	Task v5 = p0.getTask(v4);
	v4.recycle();
	Task v7 = p0.getOrCreateRootTask(0, p3, v5, p4);
	Task v8 = v5.getRootTask();
	boolean v9 = v5.reparent(v7, p4, phiInstruction, 1, 1, ""anyTaskForId"");
	return v5;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public Rect getTaskBounds(int p1){
	long v5 = Binder.clearCallingIdentity();
	Rect v6 = new Rect();
	AppTransition$$ExternalSyntheticLambda2 v13 = new AppTransition$$ExternalSyntheticLambda2();
	ArgumentPlaceholder v15 = PooledLambda.__(Tas.class);
	Integer v16 = Integer.valueOf(p1);
	PooledPredicate v17 = PooledLambda.obtainPredicate(v13, v15, v16);
	Task v18 = RootWindowContainer.getTask(v17);
	v17.recycle();
	Task v20 = RootWindowContainer.getOrCreateRootTask(0, 0, v18, 0);
	Task v21 = v18.getRootTask();
	boolean v22 = v18.reparent(v20, 0, phiInstruction, 1, 1, ""anyTaskForId"");
	Task v12 = v18;
	Task v11 = v12;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return v6;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToRootTask(IIZ)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:8,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @17 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 11,2 @23 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
15 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 15,14,
16 = conversion(J) 2,
17 = conversion(J) 3,
18 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
22 = new <Application,[Ljava/lang/Object>@7421 ,
24 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @78 exception:23,
arraystore 22[14] = 24,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 17 @85 exception:26,
arraystore 22[25] = 27,
30 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 4 @92 exception:29,
arraystore 22[28] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 18,19,20,14,22 @98 exception:31,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
37 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 35,3 @103 exception:36,
conditional branch(eq, to iindex=-1) 37,14,
50 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeStandardOrUndefined()Z > 37 @109 exception:49,
conditional branch(eq, to iindex=-1) 50,14,
69 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 13,37,4,25,25,14,67 @122 exception:68,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @125 exception:70,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @129 exception:71,
return,","depth : 0
public void moveTaskToRootTask(int p1, int p2, boolean p3){
	ActivityTaskManagerService.enforceTaskPermission(""moveTaskToRootTask()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1);
	Object v4 = new Object(3);
	Long v5 = Long.valueOf(p1);
	Long v6 = Long.valueOf(p2);
	Boolean v7 = Boolean.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -677449371, 53, 0, v4);
	Task v9 = this.mRootWindowContainer.getRootTask(p2);
	boolean v10 = v9.isActivityTypeStandardOrUndefined();
	boolean v11 = v4.reparent(v9, p3, 1, 1, 0, ""moveTaskToRootTask"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void moveTaskToRootTask(int p1, int p2, boolean p3){
	ActivityTaskManagerService.enforceTaskPermission(""moveTaskToRootTask()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1);
	Object v5 = new Object(3);
	Long v6 = Long.valueOf(p1);
	Long v7 = Long.valueOf(p2);
	Boolean v8 = Boolean.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -677449371, 53, 0, v5);
	Task v10 = this.mRootWindowContainer.getRootTask(p2);
	boolean v11 = v10.isActivityTypeStandardOrUndefined();
	boolean v12 = v4.reparent(v10, p3, 1, 1, 0, ""moveTaskToRootTask"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToRootTask(IIZ)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @17 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 11,2 @23 exception:12,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 1,2,3 @1 exception:4,
return 5,
conditional branch(ne, to iindex=-1) 13,14,
15 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 15,14,
16 = conversion(J) 2,
17 = conversion(J) 3,
18 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
22 = new <Application,[Ljava/lang/Object>@7421 ,
24 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @78 exception:23,
arraystore 22[14] = 24,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 17 @85 exception:26,
arraystore 22[25] = 27,
30 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 4 @92 exception:29,
arraystore 22[28] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 18,19,20,14,22 @98 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
37 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 35,3 @103 exception:36,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(eq, to iindex=-1) 37,14,
50 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeStandardOrUndefined()Z > 37 @109 exception:49,
conditional branch(eq, to iindex=-1) 50,14,
69 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 13,37,4,25,25,14,67 @122 exception:68,
conditional branch(eq, to iindex=-1) 3,8,
goto (from iindex= 2 to iindex = 2),
10 = phi  9,8,
13 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;IIZZZLjava/lang/String;)Z > 1,2,10,4,5,6,11,7 @15 exception:12,
return 13,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @125 exception:70,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @129 exception:71,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void moveTaskToRootTask(int p1, int p2, boolean p3){
	ActivityTaskManagerService.enforceTaskPermission(""moveTaskToRootTask()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1);
	Object v4 = new Object(3);
	Long v5 = Long.valueOf(p1);
	Long v6 = Long.valueOf(p2);
	Boolean v7 = Boolean.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -677449371, 53, 0, v4);
	Task v9 = this.mRootWindowContainer.getRootTask(p2);
	boolean v10 = v9.isActivityTypeStandardOrUndefined();
	boolean v11 = v4.reparent(v9, p3, 1, 1, 0, ""moveTaskToRootTask"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1){
	Task v1 = p0.anyTaskForId(p1, 2);
	return v1;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 1
public boolean reparent(Task p1, boolean p2, int p3, boolean p4, boolean p5, String p6){
	boolean v1 = p0.reparent(p1, phiInstruction, p3, p4, p5, 1, p6);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void moveTaskToRootTask(int p1, int p2, boolean p3){
	this.sThreadPriorityBooster.boost();
	long v7 = Binder.clearCallingIdentity();
	Task v9 = RootWindowContainer.anyTaskForId(p1, 2);
	Task v8 = v9;
	Object v10 = new Object(3);
	Long v11 = Long.valueOf(p1);
	Long v12 = Long.valueOf(p2);
	Boolean v13 = Boolean.valueOf(p3);
	ProtoLogImpl v15 = ProtoLogImpl.getSingleInstance();
	v15.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_TASKS, -677449371, 53, 0, v10);
	int v18 = RootWindowContainer.getChildCount();
	WindowContainer v19 = RootWindowContainer.getChildAt(phiInstruction);
	Task v20 = v19.getRootTask(p2);
	Task v17 = v20;
	boolean v21 = v17.isActivityTypeStandardOrUndefined();
	boolean v23 = Task.reparent(v17, phiInstruction, 1, 1, 0, 1, ""moveTaskToRootTask"");
	boolean v22 = v23;
	Binder.restoreCallingIdentity(v7);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToRootTask(IIZ)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @17 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 11,2 @23 exception:12,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 1,2,3 @1 exception:4,
return 5,
conditional branch(ne, to iindex=-1) 13,14,
15 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 15,14,
16 = conversion(J) 2,
17 = conversion(J) 3,
18 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
22 = new <Application,[Ljava/lang/Object>@7421 ,
24 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @78 exception:23,
arraystore 22[14] = 24,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 17 @85 exception:26,
arraystore 22[25] = 27,
30 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 4 @92 exception:29,
arraystore 22[28] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 18,19,20,14,22 @98 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
37 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 35,3 @103 exception:36,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(eq, to iindex=-1) 37,14,
50 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeStandardOrUndefined()Z > 37 @109 exception:49,
conditional branch(eq, to iindex=-1) 50,14,
69 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 13,37,4,25,25,14,67 @122 exception:68,
conditional branch(eq, to iindex=-1) 3,8,
goto (from iindex= 2 to iindex = 2),
10 = phi  9,8,
13 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;IIZZZLjava/lang/String;)Z > 1,2,10,4,5,6,11,7 @15 exception:12,
return 13,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @125 exception:70,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @129 exception:71,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void moveTaskToRootTask(int p1, int p2, boolean p3){
	ActivityTaskManagerService.enforceTaskPermission(""moveTaskToRootTask()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1);
	Object v4 = new Object(3);
	Long v5 = Long.valueOf(p1);
	Long v6 = Long.valueOf(p2);
	Boolean v7 = Boolean.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -677449371, 53, 0, v4);
	Task v9 = this.mRootWindowContainer.getRootTask(p2);
	boolean v10 = v9.isActivityTypeStandardOrUndefined();
	boolean v11 = v4.reparent(v9, p3, 1, 1, 0, ""moveTaskToRootTask"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1){
	Task v1 = p0.anyTaskForId(p1, 2);
	return v1;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 1
public boolean reparent(Task p1, boolean p2, int p3, boolean p4, boolean p5, String p6){
	boolean v1 = p0.reparent(p1, phiInstruction, p3, p4, p5, 1, p6);
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void moveTaskToRootTask(int p1, int p2, boolean p3){
	this.sThreadPriorityBooster.boost();
	long v5 = Binder.clearCallingIdentity();
	Task v7 = RootWindowContainer.anyTaskForId(p1, 2);
	Task v6 = v7;
	Object v8 = new Object(3);
	Long v9 = Long.valueOf(p1);
	Long v10 = Long.valueOf(p2);
	Boolean v11 = Boolean.valueOf(p3);
	ProtoLogImpl v13 = ProtoLogImpl.getSingleInstance();
	v13.log(BaseProtoLogImpl$LogLevel.DEBUG, ProtoLogGroup.WM_DEBUG_TASKS, -677449371, 53, 0, v8);
	int v16 = RootWindowContainer.getChildCount();
	WindowContainer v17 = RootWindowContainer.getChildAt(phiInstruction);
	Task v18 = v17.getRootTask(p2);
	Task v15 = v18;
	boolean v19 = v15.isActivityTypeStandardOrUndefined();
	boolean v21 = Task.reparent(v15, phiInstruction, 1, 1, 0, 1, ""moveTaskToRootTask"");
	boolean v20 = v21;
	Binder.restoreCallingIdentity(v5);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToRootTask(IIZ)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @17 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 11,2 @23 exception:12,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 1,2,3 @1 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
return 5,
conditional branch(ne, to iindex=-1) 13,14,
15 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 15,14,
16 = conversion(J) 2,
17 = conversion(J) 3,
18 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
22 = new <Application,[Ljava/lang/Object>@7421 ,
24 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @78 exception:23,
arraystore 22[14] = 24,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 17 @85 exception:26,
arraystore 22[25] = 27,
30 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 4 @92 exception:29,
arraystore 22[28] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 18,19,20,14,22 @98 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
37 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 35,3 @103 exception:36,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
3 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
5 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowContainer>5 <Application,Lcom/android/server/wm/WindowContainer>,
return 6,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
3 = new <Application,Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6>@0,
invokespecial < Application, Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6, <init>(I)V > 3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getRootTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,3 @5 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(eq, to iindex=-1) 37,14,
50 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeStandardOrUndefined()Z > 37 @109 exception:49,
conditional branch(eq, to iindex=-1) 50,14,
69 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 13,37,4,25,25,14,67 @122 exception:68,
conditional branch(eq, to iindex=-1) 3,8,
goto (from iindex= 2 to iindex = 2),
10 = phi  9,8,
13 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;IIZZZLjava/lang/String;)Z > 1,2,10,4,5,6,11,7 @15 exception:12,
9 = getfield < Application, Lcom/android/server/wm/TaskFragment, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
10 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 11,
14 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @20 exception:13,
conditional branch(ne, to iindex=-1) 3,16,
goto (from iindex= 16 to iindex = 2),
18 = phi  17,15,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getReparentTargetRootTask(Lcom/android/server/wm/Task;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 9,1,2,18 @33 exception:19,
conditional branch(ne, to iindex=-1) 20,14,
22 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getDisplayId()I > 20 @40 exception:21,
24 = invokevirtual < Application, Lcom/android/server/wm/Task, canBeLaunchedOnDisplay(I)Z > 1,22 @44 exception:23,
conditional branch(ne, to iindex=-1) 24,15,
return 15,
return 13,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @125 exception:70,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @129 exception:71,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void moveTaskToRootTask(int p1, int p2, boolean p3){
	ActivityTaskManagerService.enforceTaskPermission(""moveTaskToRootTask()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1);
	Object v4 = new Object(3);
	Long v5 = Long.valueOf(p1);
	Long v6 = Long.valueOf(p2);
	Boolean v7 = Boolean.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -677449371, 53, 0, v4);
	Task v9 = this.mRootWindowContainer.getRootTask(p2);
	boolean v10 = v9.isActivityTypeStandardOrUndefined();
	boolean v11 = v4.reparent(v9, p3, 1, 1, 0, ""moveTaskToRootTask"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1){
	Task v1 = p0.anyTaskForId(p1, 2);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 2
public WindowContainer getChildAt(int p1){
	Object v1 = this.mChildren.get(p1);
	return v1;
}
-----
depth : 2
public Task getRootTask(int p1){
	DisplayContent$$ExternalSyntheticLambda6 v0 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v2 = p0.getRootTask(v0);
	return v2;
}
-----
depth : 1
public boolean reparent(Task p1, boolean p2, int p3, boolean p4, boolean p5, String p6){
	boolean v1 = p0.reparent(p1, phiInstruction, p3, p4, p5, 1, p6);
	return v1;
}
-----
depth : 2
public boolean reparent(Task p1, int p2, int p3, boolean p4, boolean p5, boolean p6, String p7){
	Task v1 = p0.getRootTask();
	Task v2 = TaskFragment.mTaskSupervisor.getReparentTargetRootTask(p0, p1, phiInstruction);
	int v3 = v2.getDisplayId();
	boolean v4 = p0.canBeLaunchedOnDisplay(v3);
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void moveTaskToRootTask(int p1, int p2, boolean p3){
	long v8 = Binder.clearCallingIdentity();
	Task v11 = RootWindowContainer.anyTaskForId(p1, 2, 0, 0);
	Task v10 = v11;
	Task v9 = v10;
	Object v12 = new Object(3);
	Long v13 = Long.valueOf(p1);
	Long v14 = Long.valueOf(p2);
	Boolean v15 = Boolean.valueOf(p3);
	ProtoLogImpl v18 = new ProtoLogImpl(v19,1048576,v21);
	File v19 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v21 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v18;
	ProtoLogImpl v17 = this.sServiceInstance;
	boolean v25 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v27 = p1.isLogToLogcat();
	String v28 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v28, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	int v32 = this.mChildren.size();
	int v31 = v32;
	Object v34 = this.mChildren.get(phiInstruction);
	WindowContainer v33 = v34;
	DisplayContent$$ExternalSyntheticLambda6 v36 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v38 = DisplayContent.getRootTask(v36);
	Task v35 = v38;
	Task v30 = v35;
	boolean v39 = v30.isActivityTypeStandardOrUndefined();
	Task v42 = Task.getRootTask();
	Task v43 = TaskFragment.mTaskSupervisor.getReparentTargetRootTask(Task, p1, phiInstruction);
	int v44 = v43.getDisplayId();
	boolean v45 = Task.canBeLaunchedOnDisplay(v44);
	boolean v41 = 0;
	boolean v40 = v41;
	Binder.restoreCallingIdentity(v8);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToRootTask(IIZ)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @17 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 11,2 @23 exception:12,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 1,2,3 @1 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
return 5,
conditional branch(ne, to iindex=-1) 13,14,
15 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 15,14,
16 = conversion(J) 2,
17 = conversion(J) 3,
18 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
22 = new <Application,[Ljava/lang/Object>@7421 ,
24 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @78 exception:23,
arraystore 22[14] = 24,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 17 @85 exception:26,
arraystore 22[25] = 27,
30 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 4 @92 exception:29,
arraystore 22[28] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 18,19,20,14,22 @98 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
37 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 35,3 @103 exception:36,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
3 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
5 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowContainer>5 <Application,Lcom/android/server/wm/WindowContainer>,
return 6,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
3 = new <Application,Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6>@0,
invokespecial < Application, Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6, <init>(I)V > 3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getRootTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,3 @5 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(eq, to iindex=-1) 37,14,
50 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeStandardOrUndefined()Z > 37 @109 exception:49,
conditional branch(eq, to iindex=-1) 50,14,
69 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 13,37,4,25,25,14,67 @122 exception:68,
conditional branch(eq, to iindex=-1) 3,8,
goto (from iindex= 2 to iindex = 2),
10 = phi  9,8,
13 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;IIZZZLjava/lang/String;)Z > 1,2,10,4,5,6,11,7 @15 exception:12,
9 = getfield < Application, Lcom/android/server/wm/TaskFragment, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
10 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 11,
14 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @20 exception:13,
conditional branch(ne, to iindex=-1) 3,16,
goto (from iindex= 16 to iindex = 2),
18 = phi  17,15,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getReparentTargetRootTask(Lcom/android/server/wm/Task;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 9,1,2,18 @33 exception:19,
conditional branch(ne, to iindex=-1) 20,14,
22 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getDisplayId()I > 20 @40 exception:21,
24 = invokevirtual < Application, Lcom/android/server/wm/Task, canBeLaunchedOnDisplay(I)Z > 1,22 @44 exception:23,
conditional branch(ne, to iindex=-1) 24,15,
return 15,
return 13,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @125 exception:70,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @129 exception:71,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void moveTaskToRootTask(int p1, int p2, boolean p3){
	ActivityTaskManagerService.enforceTaskPermission(""moveTaskToRootTask()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1);
	Object v4 = new Object(3);
	Long v5 = Long.valueOf(p1);
	Long v6 = Long.valueOf(p2);
	Boolean v7 = Boolean.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -677449371, 53, 0, v4);
	Task v9 = this.mRootWindowContainer.getRootTask(p2);
	boolean v10 = v9.isActivityTypeStandardOrUndefined();
	boolean v11 = v4.reparent(v9, p3, 1, 1, 0, ""moveTaskToRootTask"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1){
	Task v1 = p0.anyTaskForId(p1, 2);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 2
public WindowContainer getChildAt(int p1){
	Object v1 = this.mChildren.get(p1);
	return v1;
}
-----
depth : 2
public Task getRootTask(int p1){
	DisplayContent$$ExternalSyntheticLambda6 v0 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v2 = p0.getRootTask(v0);
	return v2;
}
-----
depth : 1
public boolean reparent(Task p1, boolean p2, int p3, boolean p4, boolean p5, String p6){
	boolean v1 = p0.reparent(p1, phiInstruction, p3, p4, p5, 1, p6);
	return v1;
}
-----
depth : 2
public boolean reparent(Task p1, int p2, int p3, boolean p4, boolean p5, boolean p6, String p7){
	Task v1 = p0.getRootTask();
	Task v2 = TaskFragment.mTaskSupervisor.getReparentTargetRootTask(p0, p1, phiInstruction);
	int v3 = v2.getDisplayId();
	boolean v4 = p0.canBeLaunchedOnDisplay(v3);
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void moveTaskToRootTask(int p1, int p2, boolean p3){
	WindowManagerThreadPriorityBooster.boost();
	long v9 = Binder.clearCallingIdentity();
	Task v12 = RootWindowContainer.anyTaskForId(p1, 2, 0, 0);
	Task v11 = v12;
	Task v10 = v11;
	Object v13 = new Object(3);
	Long v14 = Long.valueOf(p1);
	Long v15 = Long.valueOf(p2);
	Boolean v16 = Boolean.valueOf(p3);
	ProtoLogImpl v19 = new ProtoLogImpl(v20,1048576,v22);
	File v20 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v22 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v19;
	ProtoLogImpl v18 = this.sServiceInstance;
	boolean v26 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v28 = p1.isLogToLogcat();
	String v29 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v29, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	int v33 = this.mChildren.size();
	int v32 = v33;
	Object v35 = this.mChildren.get(phiInstruction);
	WindowContainer v34 = v35;
	DisplayContent$$ExternalSyntheticLambda6 v37 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v39 = DisplayContent.getRootTask(v37);
	Task v36 = v39;
	Task v31 = v36;
	boolean v40 = v31.isActivityTypeStandardOrUndefined();
	Task v43 = Task.getRootTask();
	Task v44 = TaskFragment.mTaskSupervisor.getReparentTargetRootTask(Task, p1, phiInstruction);
	int v45 = v44.getDisplayId();
	boolean v46 = Task.canBeLaunchedOnDisplay(v45);
	boolean v42 = 0;
	boolean v41 = v42;
	Binder.restoreCallingIdentity(v9);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","moveTaskToRootTask(IIZ)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 5 @8 exception:6,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @14 exception:8,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
10 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @17 exception:9,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
13 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(I)Lcom/android/server/wm/Task; > 11,2 @23 exception:12,
5 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(II)Lcom/android/server/wm/Task; > 1,2,3 @1 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, anyTaskForId(IILandroid/app/ActivityOptions;Z)Lcom/android/server/wm/Task; > 1,2,3,4,4 @2 exception:5,
return 6,
return 5,
conditional branch(ne, to iindex=-1) 13,14,
15 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 15,14,
16 = conversion(J) 2,
17 = conversion(J) 3,
18 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
22 = new <Application,[Ljava/lang/Object>@7421 ,
24 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 16 @78 exception:23,
arraystore 22[14] = 24,
27 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 17 @85 exception:26,
arraystore 22[25] = 27,
30 = invokestatic < Application, Ljava/lang/Boolean, valueOf(Z)Ljava/lang/Boolean; > 4 @92 exception:29,
arraystore 22[28] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, d(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 18,19,20,14,22 @98 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
1 = load_metadata: <Application,Lcom/android/internal/protolog/ProtoLogImpl>, <Primordial,Ljava/lang/Class>,
monitorenter 1,
2 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
conditional branch(ne, to iindex=-1) 2,3,
4 = new <Application,Lcom/android/internal/protolog/ProtoLogImpl>@7,
5 = new <Application,Ljava/io/File>@9,
invokespecial < Application, Ljava/io/File, <init>(Ljava/lang/String;)V > 5,6 @13 exception:7,
9 = new <Application,Lcom/android/internal/protolog/ProtoLogViewerConfigReader>@18,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogViewerConfigReader, <init>()V > 9 @20 exception:10,
invokespecial < Application, Lcom/android/internal/protolog/ProtoLogImpl, <init>(Ljava/io/File;ILcom/android/internal/protolog/ProtoLogViewerConfigReader;)V > 4,5,8,9 @23 exception:11,
putstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> > = 4,
13 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, sServiceInstance, <Application,Lcom/android/internal/protolog/ProtoLogImpl> >,
monitorexit 1,
return 13,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, DEBUG, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
9 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToProto()Z > 3 @0 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToProto(II[Ljava/lang/Object;)V > 1,4,5,7 @6 exception:11,
14 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, isLogToLogcat()Z > 3 @9 exception:13,
conditional branch(eq, to iindex=-1) 14,10,
16 = invokeinterface < Application, Lcom/android/internal/protolog/common/IProtoLogGroup, getTag()Ljava/lang/String; > 3 @15 exception:15,
invokespecial < Application, Lcom/android/internal/protolog/BaseProtoLogImpl, logToLogcat(Ljava/lang/String;Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;ILjava/lang/String;[Ljava/lang/Object;)V > 1,16,2,4,6,7 @24 exception:17,
return,
return,
35 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
37 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 35,3 @103 exception:36,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
3 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
5 = invokevirtual < Application, Ljava/util/ArrayList, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/wm/WindowContainer>5 <Application,Lcom/android/server/wm/WindowContainer>,
return 6,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
3 = new <Application,Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6>@0,
invokespecial < Application, Lcom/android/server/wm/DisplayContent$$ExternalSyntheticLambda6, <init>(I)V > 3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getRootTask(Ljava/util/function/Predicate;)Lcom/android/server/wm/Task; > 1,3 @5 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(eq, to iindex=-1) 37,14,
50 = invokevirtual < Application, Lcom/android/server/wm/ConfigurationContainer, isActivityTypeStandardOrUndefined()Z > 37 @109 exception:49,
conditional branch(eq, to iindex=-1) 50,14,
69 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;ZIZZLjava/lang/String;)Z > 13,37,4,25,25,14,67 @122 exception:68,
conditional branch(eq, to iindex=-1) 3,8,
goto (from iindex= 2 to iindex = 2),
10 = phi  9,8,
13 = invokevirtual < Application, Lcom/android/server/wm/Task, reparent(Lcom/android/server/wm/Task;IIZZZLjava/lang/String;)Z > 1,2,10,4,5,6,11,7 @15 exception:12,
9 = getfield < Application, Lcom/android/server/wm/TaskFragment, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
10 = getfield < Application, Lcom/android/server/wm/TaskFragment, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
11 = getfield < Application, Lcom/android/server/wm/TaskFragment, mAtmService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
12 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mWindowManager, <Application,Lcom/android/server/wm/WindowManagerService> > 11,
14 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getRootTask()Lcom/android/server/wm/Task; > 1 @20 exception:13,
conditional branch(ne, to iindex=-1) 3,16,
goto (from iindex= 16 to iindex = 2),
18 = phi  17,15,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getReparentTargetRootTask(Lcom/android/server/wm/Task;Lcom/android/server/wm/Task;Z)Lcom/android/server/wm/Task; > 9,1,2,18 @33 exception:19,
conditional branch(ne, to iindex=-1) 20,14,
22 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, getDisplayId()I > 20 @40 exception:21,
24 = invokevirtual < Application, Lcom/android/server/wm/Task, canBeLaunchedOnDisplay(I)Z > 1,22 @44 exception:23,
conditional branch(ne, to iindex=-1) 24,15,
return 15,
return 13,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 10 @125 exception:70,
monitorexit 7,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @129 exception:71,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void moveTaskToRootTask(int p1, int p2, boolean p3){
	ActivityTaskManagerService.enforceTaskPermission(""moveTaskToRootTask()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	Task v4 = this.mRootWindowContainer.anyTaskForId(p1);
	Object v4 = new Object(3);
	Long v5 = Long.valueOf(p1);
	Long v6 = Long.valueOf(p2);
	Boolean v7 = Boolean.valueOf(p3);
	ProtoLogImpl.d(ProtoLogGroup.WM_DEBUG_TASKS, -677449371, 53, 0, v4);
	Task v9 = this.mRootWindowContainer.getRootTask(p2);
	boolean v10 = v9.isActivityTypeStandardOrUndefined();
	boolean v11 = v4.reparent(v9, p3, 1, 1, 0, ""moveTaskToRootTask"");
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task anyTaskForId(int p1){
	Task v1 = p0.anyTaskForId(p1, 2);
	return v1;
}
-----
depth : 2
public Task anyTaskForId(int p1, int p2){
	Task v1 = p0.anyTaskForId(p1, p2, 0, 0);
	return v1;
}
-----
depth : 1
public void d(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.DEBUG, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public ProtoLogImpl getSingleInstance(){
	ProtoLogImpl v0 = new ProtoLogImpl(v0,1048576,v1);
	File v0 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v1 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v0;
	return this.sServiceInstance;
}
-----
depth : 2
public void log(BaseProtoLogImpl$LogLevel p1, IProtoLogGroup p2, int p3, int p4, String p5, Object p6){
	boolean v1 = p2.isLogToProto();
	p0.logToProto(p3, p4, p6);
	boolean v3 = p2.isLogToLogcat();
	String v4 = p2.getTag();
	p0.logToLogcat(v4, p1, p3, p5, p6);
	return;
}
-----
depth : 1
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 2
public WindowContainer getChildAt(int p1){
	Object v1 = this.mChildren.get(p1);
	return v1;
}
-----
depth : 2
public Task getRootTask(int p1){
	DisplayContent$$ExternalSyntheticLambda6 v0 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v2 = p0.getRootTask(v0);
	return v2;
}
-----
depth : 1
public boolean reparent(Task p1, boolean p2, int p3, boolean p4, boolean p5, String p6){
	boolean v1 = p0.reparent(p1, phiInstruction, p3, p4, p5, 1, p6);
	return v1;
}
-----
depth : 2
public boolean reparent(Task p1, int p2, int p3, boolean p4, boolean p5, boolean p6, String p7){
	Task v1 = p0.getRootTask();
	Task v2 = TaskFragment.mTaskSupervisor.getReparentTargetRootTask(p0, p1, phiInstruction);
	int v3 = v2.getDisplayId();
	boolean v4 = p0.canBeLaunchedOnDisplay(v3);
	return 0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void moveTaskToRootTask(int p1, int p2, boolean p3){
	long v8 = Binder.clearCallingIdentity();
	Task v11 = RootWindowContainer.anyTaskForId(p1, 2, 0, 0);
	Task v10 = v11;
	Task v9 = v10;
	Object v12 = new Object(3);
	Long v13 = Long.valueOf(p1);
	Long v14 = Long.valueOf(p2);
	Boolean v15 = Boolean.valueOf(p3);
	ProtoLogImpl v18 = new ProtoLogImpl(v19,1048576,v21);
	File v19 = new File(""/data/misc/wmtrace/wm_log.winscope"");
	ProtoLogViewerConfigReader v21 = new ProtoLogViewerConfigReader();
	this.sServiceInstance = v18;
	ProtoLogImpl v17 = this.sServiceInstance;
	boolean v25 = p1.isLogToProto();
	BaseProtoLogImpl.logToProto(p2, p3, p5);
	boolean v27 = p1.isLogToLogcat();
	String v28 = p1.getTag();
	BaseProtoLogImpl.logToLogcat(v28, BaseProtoLogImpl$LogLevel.DEBUG, p2, p4, p5);
	int v32 = this.mChildren.size();
	int v31 = v32;
	Object v34 = this.mChildren.get(phiInstruction);
	WindowContainer v33 = v34;
	DisplayContent$$ExternalSyntheticLambda6 v36 = new DisplayContent$$ExternalSyntheticLambda6(p1);
	Task v38 = DisplayContent.getRootTask(v36);
	Task v35 = v38;
	Task v30 = v35;
	boolean v39 = v30.isActivityTypeStandardOrUndefined();
	Task v42 = Task.getRootTask();
	Task v43 = TaskFragment.mTaskSupervisor.getReparentTargetRootTask(Task, p1, phiInstruction);
	int v44 = v43.getDisplayId();
	boolean v45 = Task.canBeLaunchedOnDisplay(v44);
	boolean v41 = 0;
	boolean v40 = v41;
	Binder.restoreCallingIdentity(v8);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksWithActivityTypes([I)V","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksWithActivityTypes([I)V > 9,2 @17 exception:10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
return,","depth : 0
public void removeRootTasksWithActivityTypes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksWithActivityTypes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksWithActivityTypes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void removeRootTasksWithActivityTypes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksWithActivityTypes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksWithActivityTypes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksWithActivityTypes([I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksWithActivityTypes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void removeRootTasksWithActivityTypes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksWithActivityTypes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksWithActivityTypes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void removeRootTasksWithActivityTypes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void removeRootTasksWithActivityTypes([I p1){
	this.sThreadPriorityBooster.boost();
	long v7 = Binder.clearCallingIdentity();
	int v9 = RootWindowContainer.getChildCount();
	Binder.restoreCallingIdentity(v7);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksWithActivityTypes([I)V","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksWithActivityTypes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void removeRootTasksWithActivityTypes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksWithActivityTypes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksWithActivityTypes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void removeRootTasksWithActivityTypes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void removeRootTasksWithActivityTypes([I p1){
	this.sThreadPriorityBooster.boost();
	long v5 = Binder.clearCallingIdentity();
	int v7 = RootWindowContainer.getChildCount();
	Binder.restoreCallingIdentity(v5);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksWithActivityTypes([I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksWithActivityTypes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void removeRootTasksWithActivityTypes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksWithActivityTypes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksWithActivityTypes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void removeRootTasksWithActivityTypes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void removeRootTasksWithActivityTypes([I p1){
	long v8 = Binder.clearCallingIdentity();
	int v11 = this.mChildren.size();
	int v10 = v11;
	Binder.restoreCallingIdentity(v8);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksWithActivityTypes([I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksWithActivityTypes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void removeRootTasksWithActivityTypes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksWithActivityTypes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksWithActivityTypes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void removeRootTasksWithActivityTypes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void removeRootTasksWithActivityTypes([I p1){
	WindowManagerThreadPriorityBooster.boost();
	long v9 = Binder.clearCallingIdentity();
	int v12 = this.mChildren.size();
	int v11 = v12;
	Binder.restoreCallingIdentity(v9);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","removeRootTasksWithActivityTypes([I)V","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 3 @2 exception:4,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @8 exception:6,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @11 exception:7,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, removeRootTasksWithActivityTypes([I)V > 9,2 @17 exception:10,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/wm/WindowContainer, mChildren, <Application,Lcom/android/server/wm/WindowList> > 1,
4 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 2 @2 exception:3,
return 4,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @20 exception:14,
monitorexit 5,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @24 exception:19,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void removeRootTasksWithActivityTypes([I p1){
	ActivityTaskManagerService.enforceTaskPermission(""removeRootTasksWithActivityTypes()"");
	WindowManagerService.boostPriorityForLockedSection();
	long v3 = Binder.clearCallingIdentity();
	this.mRootWindowContainer.removeRootTasksWithActivityTypes(p1);
	Binder.restoreCallingIdentity(v3);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void removeRootTasksWithActivityTypes([I p1){
	int v1 = p0.getChildCount();
	return;
}
-----
depth : 2
public int getChildCount(){
	int v1 = this.mChildren.size();
	return v1;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void removeRootTasksWithActivityTypes([I p1){
	long v8 = Binder.clearCallingIdentity();
	int v11 = this.mChildren.size();
	int v10 = v11;
	Binder.restoreCallingIdentity(v8);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V","0","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppWarnings, <Application,Lcom/android/server/wm/AppWarnings> > 1,
invokevirtual < Application, Lcom/android/server/wm/AppWarnings, alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V > 7,2 @12 exception:8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
return,","depth : 0
public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V","1","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppWarnings, <Application,Lcom/android/server/wm/AppWarnings> > 1,
invokevirtual < Application, Lcom/android/server/wm/AppWarnings, alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V > 7,2 @12 exception:8,
3 = getfield < Application, Lcom/android/server/wm/AppWarnings, mAlwaysShowUnsupportedCompileSdkWarningActivities, <Application,Ljava/util/HashSet> > 1,
5 = invokevirtual < Application, Ljava/util/HashSet, add(Ljava/lang/Object;)Z > 3,2 @2 exception:4,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	boolean v1 = this.mAlwaysShowUnsupportedCompileSdkWarningActivities.add(p1);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	this.sThreadPriorityBooster.boost();
	long v3 = Binder.clearCallingIdentity();
	boolean v5 = this.mAlwaysShowUnsupportedCompileSdkWarningActivities.add(p1);
	Binder.restoreCallingIdentity(v3);
	this.sThreadPriorityBooster.reset();
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppWarnings, <Application,Lcom/android/server/wm/AppWarnings> > 1,
invokevirtual < Application, Lcom/android/server/wm/AppWarnings, alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V > 7,2 @12 exception:8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	long v4 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v4);
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppWarnings, <Application,Lcom/android/server/wm/AppWarnings> > 1,
invokevirtual < Application, Lcom/android/server/wm/AppWarnings, alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V > 7,2 @12 exception:8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	WindowManagerThreadPriorityBooster.boost();
	long v5 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V","2","3 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:4,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:5,
7 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppWarnings, <Application,Lcom/android/server/wm/AppWarnings> > 1,
invokevirtual < Application, Lcom/android/server/wm/AppWarnings, alwaysShowUnsupportedCompileSdkWarning(Landroid/content/ComponentName;)V > 7,2 @12 exception:8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @15 exception:12,
monitorexit 3,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @19 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	WindowManagerService.boostPriorityForLockedSection();
	long v2 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v2);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void alwaysShowUnsupportedCompileSdkWarning(ComponentName p1){
	long v4 = Binder.clearCallingIdentity();
	this.mAppWarnings.alwaysShowUnsupportedCompileSdkWarning(p1);
	Binder.restoreCallingIdentity(v4);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;","0","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 9,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(I)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,12 @25 exception:13,
monitorexit 6,
27 = phi  10,14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @30 exception:30,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @33 exception:31,
return 27,","depth : 0
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	ActivityTaskManagerService.enforceTaskPermission(""getFocusedRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityTaskManager$RootTaskInfo v5 = this.mRootWindowContainer.getRootTaskInfo(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
","public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	ActivityTaskManagerService.enforceTaskPermission(""getFocusedRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityTaskManager$RootTaskInfo v5 = this.mRootWindowContainer.getRootTaskInfo(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:8,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 9,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(I)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,12 @25 exception:13,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,4 @6 exception:6,
return 7,
monitorexit 6,
27 = phi  10,14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @30 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @33 exception:31,
return 27,","depth : 0
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	ActivityTaskManagerService.enforceTaskPermission(""getFocusedRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityTaskManager$RootTaskInfo v5 = this.mRootWindowContainer.getRootTaskInfo(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1){
	Task v1 = p0.getRootTask(p1);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v5 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v9 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v8 = v9;
	Task v11 = RootWindowContainer.getRootTask(Task.mTaskId);
	ActivityTaskManager$RootTaskInfo v12 = RootWindowContainer.getRootTaskInfo(v11);
	ActivityTaskManager$RootTaskInfo v10 = v12;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;","1","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:8,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 9,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(I)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,12 @25 exception:13,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,4 @6 exception:6,
return 7,
monitorexit 6,
27 = phi  10,14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @30 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @33 exception:31,
return 27,","depth : 0
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	ActivityTaskManagerService.enforceTaskPermission(""getFocusedRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityTaskManager$RootTaskInfo v5 = this.mRootWindowContainer.getRootTaskInfo(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1){
	Task v1 = p0.getRootTask(p1);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return v2;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v3 = Binder.clearCallingIdentity();
	this.sThreadPriorityBooster.boost();
	Task v7 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	Task v6 = v7;
	Task v9 = RootWindowContainer.getRootTask(Task.mTaskId);
	ActivityTaskManager$RootTaskInfo v10 = RootWindowContainer.getRootTaskInfo(v9);
	ActivityTaskManager$RootTaskInfo v8 = v10;
	this.sThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v3);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:8,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 9,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(I)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,12 @25 exception:13,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,4 @6 exception:6,
3 = new <Application,Landroid/app/ActivityTaskManager$RootTaskInfo>@0,
invokespecial < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, <init>()V > 3 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/Task, fillTaskInfo(Landroid/app/TaskInfo;)V > 2,3 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,10,
11 = new <Primordial,[I>@209 ,
12 = new <Primordial,[Z>@229 ,
13 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21, <init>(Lcom/android/server/wm/Task;[Z[I)V > 13,2,12,11 @26 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Predicate;Z)Z > 7,13,10 @29 exception:15,
17 = arrayload 12[10],
conditional branch(eq, to iindex=-1) 17,10,
18 = arrayload 11[10],
19 = phi  8,18,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, position, <Primordial,I> > = 19,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z > 2,10 @41 exception:24,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, visible, <Primordial,Z> > = 25,
26 = getfield < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, bounds, <Application,Landroid/graphics/Rect> > 3,
invokevirtual < Application, Lcom/android/server/wm/Task, getBounds(Landroid/graphics/Rect;)V > 2,26 @49 exception:27,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getDescendantTaskCount()I > 2 @52 exception:28,
30 = new <Primordial,[I>@5629 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskIds, <Primordial,[I> > = 30,
31 = new <Application,[Ljava/lang/String>@6029 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskNames, <Application,[Ljava/lang/String> > = 31,
32 = new <Application,[Landroid/graphics/Rect>@6429 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskBounds, <Application,[Landroid/graphics/Rect> > = 32,
33 = new <Primordial,[I>@6829 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskUserIds, <Primordial,[I> > = 33,
34 = new <Primordial,[I>@729 ,
arraystore 34[10] = 10,
35 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22>@76,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22, <init>()V > 35 @78 exception:36,
37 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 37 @83 exception:38,
41 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Lcom/android/internal/util/function/TriConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 35,39,3,34 @87 exception:40,
invokevirtual < Application, Lcom/android/server/wm/Task, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 2,41,10 @91 exception:42,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 41 @94 exception:43,
45 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 2 @97 exception:44,
conditional branch(eq, to iindex=-1) 45,10,
46 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 45,
48 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 46 @105 exception:47,
49 = phi  10,48,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, topActivity, <Application,Landroid/content/ComponentName> > = 49,
return 3,
return 7,
monitorexit 6,
27 = phi  10,14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @30 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @33 exception:31,
return 27,","depth : 0
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	ActivityTaskManagerService.enforceTaskPermission(""getFocusedRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityTaskManager$RootTaskInfo v5 = this.mRootWindowContainer.getRootTaskInfo(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1){
	Task v1 = p0.getRootTask(p1);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return v2;
}
-----
depth : 2
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 2
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(Task p1){
	ActivityTaskManager$RootTaskInfo v0 = new ActivityTaskManager$RootTaskInfo();
	p1.fillTaskInfo(v0);
	DisplayContent v3 = p1.getDisplayContent();
	[I v3 = new [I(1);
	[Z v3 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v3 = new RootWindowContainer$$ExternalSyntheticLambda21(p1,v3,v3);
	boolean v5 = v3.forAllRootTasks(v3, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v6 = p1.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v6;
	p1.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v8 = p1.getDescendantTaskCount();
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v8;
	String v8 = new String(v8);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v8;
	Rect v8 = new Rect(v8);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v8;
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v8;
	[I v8 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v8 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	PooledConsumer v11 = PooledLambda.obtainConsumer(v8, v10, v0, v8);
	p1.forAllLeafTasks(v11, 0);
	v11.recycle();
	ActivityRecord v14 = p1.topRunningActivity();
	ComponentName v15 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v5 = Binder.clearCallingIdentity();
	int v11 = RootWindowContainer.getChildCount();
	WindowContainer v12 = RootWindowContainer.getChildAt(phiInstruction);
	Task v13 = v12.getFocusedRootTask();
	Task v10 = v13;
	Task v9 = v10;
	int v16 = RootWindowContainer.getChildCount();
	WindowContainer v17 = RootWindowContainer.getChildAt(phiInstruction);
	Task v18 = v17.getRootTask(p1);
	Task v15 = v18;
	ActivityTaskManager$RootTaskInfo v20 = new ActivityTaskManager$RootTaskInfo();
	v15.fillTaskInfo(v20);
	DisplayContent v23 = v15.getDisplayContent();
	[I v24 = new [I(1);
	[Z v25 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v26 = new RootWindowContainer$$ExternalSyntheticLambda21(v15,v25,v24);
	boolean v28 = v23.forAllRootTasks(v26, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v29 = v15.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v29;
	v15.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v31 = v15.getDescendantTaskCount();
	[I v32 = new [I(v31);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v32;
	String v33 = new String(v31);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v33;
	Rect v34 = new Rect(v31);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v34;
	[I v35 = new [I(v31);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v35;
	[I v36 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v37 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v39 = PooledLambda.__(Tas.class);
	PooledConsumer v40 = PooledLambda.obtainConsumer(v37, v39, v20, v36);
	v15.forAllLeafTasks(v40, 0);
	v40.recycle();
	ActivityRecord v43 = v15.topRunningActivity();
	ComponentName v44 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v19 = v20;
	ActivityTaskManager$RootTaskInfo v14 = v19;
	Binder.restoreCallingIdentity(v5);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:8,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 9,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(I)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,12 @25 exception:13,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,4 @6 exception:6,
3 = new <Application,Landroid/app/ActivityTaskManager$RootTaskInfo>@0,
invokespecial < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, <init>()V > 3 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/Task, fillTaskInfo(Landroid/app/TaskInfo;)V > 2,3 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,10,
11 = new <Primordial,[I>@209 ,
12 = new <Primordial,[Z>@229 ,
13 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21, <init>(Lcom/android/server/wm/Task;[Z[I)V > 13,2,12,11 @26 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Predicate;Z)Z > 7,13,10 @29 exception:15,
17 = arrayload 12[10],
conditional branch(eq, to iindex=-1) 17,10,
18 = arrayload 11[10],
19 = phi  8,18,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, position, <Primordial,I> > = 19,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z > 2,10 @41 exception:24,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, visible, <Primordial,Z> > = 25,
26 = getfield < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, bounds, <Application,Landroid/graphics/Rect> > 3,
invokevirtual < Application, Lcom/android/server/wm/Task, getBounds(Landroid/graphics/Rect;)V > 2,26 @49 exception:27,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getDescendantTaskCount()I > 2 @52 exception:28,
30 = new <Primordial,[I>@5629 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskIds, <Primordial,[I> > = 30,
31 = new <Application,[Ljava/lang/String>@6029 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskNames, <Application,[Ljava/lang/String> > = 31,
32 = new <Application,[Landroid/graphics/Rect>@6429 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskBounds, <Application,[Landroid/graphics/Rect> > = 32,
33 = new <Primordial,[I>@6829 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskUserIds, <Primordial,[I> > = 33,
34 = new <Primordial,[I>@729 ,
arraystore 34[10] = 10,
35 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22>@76,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22, <init>()V > 35 @78 exception:36,
37 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 37 @83 exception:38,
41 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Lcom/android/internal/util/function/TriConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 35,39,3,34 @87 exception:40,
invokevirtual < Application, Lcom/android/server/wm/Task, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 2,41,10 @91 exception:42,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 41 @94 exception:43,
45 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 2 @97 exception:44,
conditional branch(eq, to iindex=-1) 45,10,
46 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 45,
48 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 46 @105 exception:47,
49 = phi  10,48,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, topActivity, <Application,Landroid/content/ComponentName> > = 49,
return 3,
return 7,
monitorexit 6,
27 = phi  10,14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @30 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @33 exception:31,
return 27,","depth : 0
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	ActivityTaskManagerService.enforceTaskPermission(""getFocusedRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityTaskManager$RootTaskInfo v5 = this.mRootWindowContainer.getRootTaskInfo(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1){
	Task v1 = p0.getRootTask(p1);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return v2;
}
-----
depth : 2
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 2
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(Task p1){
	ActivityTaskManager$RootTaskInfo v0 = new ActivityTaskManager$RootTaskInfo();
	p1.fillTaskInfo(v0);
	DisplayContent v3 = p1.getDisplayContent();
	[I v3 = new [I(1);
	[Z v3 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v3 = new RootWindowContainer$$ExternalSyntheticLambda21(p1,v3,v3);
	boolean v5 = v3.forAllRootTasks(v3, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v6 = p1.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v6;
	p1.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v8 = p1.getDescendantTaskCount();
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v8;
	String v8 = new String(v8);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v8;
	Rect v8 = new Rect(v8);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v8;
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v8;
	[I v8 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v8 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	PooledConsumer v11 = PooledLambda.obtainConsumer(v8, v10, v0, v8);
	p1.forAllLeafTasks(v11, 0);
	v11.recycle();
	ActivityRecord v14 = p1.topRunningActivity();
	ComponentName v15 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v5 = Binder.clearCallingIdentity();
	WindowManagerThreadPriorityBooster.boost();
	int v12 = RootWindowContainer.getChildCount();
	WindowContainer v13 = RootWindowContainer.getChildAt(phiInstruction);
	Task v14 = v13.getFocusedRootTask();
	Task v11 = v14;
	Task v10 = v11;
	int v17 = RootWindowContainer.getChildCount();
	WindowContainer v18 = RootWindowContainer.getChildAt(phiInstruction);
	Task v19 = v18.getRootTask(p1);
	Task v16 = v19;
	ActivityTaskManager$RootTaskInfo v21 = new ActivityTaskManager$RootTaskInfo();
	v16.fillTaskInfo(v21);
	DisplayContent v24 = v16.getDisplayContent();
	[I v25 = new [I(1);
	[Z v26 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v27 = new RootWindowContainer$$ExternalSyntheticLambda21(v16,v26,v25);
	boolean v29 = v24.forAllRootTasks(v27, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v30 = v16.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v30;
	v16.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v32 = v16.getDescendantTaskCount();
	[I v33 = new [I(v32);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v33;
	String v34 = new String(v32);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v34;
	Rect v35 = new Rect(v32);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v35;
	[I v36 = new [I(v32);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v36;
	[I v37 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v38 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v40 = PooledLambda.__(Tas.class);
	PooledConsumer v41 = PooledLambda.obtainConsumer(v38, v40, v21, v37);
	v16.forAllLeafTasks(v41, 0);
	v41.recycle();
	ActivityRecord v44 = v16.topRunningActivity();
	ComponentName v45 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v20 = v21;
	ActivityTaskManager$RootTaskInfo v15 = v20;
	Binder.restoreCallingIdentity(v5);
	return phiInstruction;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getFocusedRootTaskInfo()Landroid/app/ActivityTaskManager$RootTaskInfo;","2","invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, enforceTaskPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkCallingPermission(Ljava/lang/String;)I > 6 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
42 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 9,40 @21 exception:41,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @5 exception:4,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
9 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 1 @15 exception:8,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getTopDisplayFocusedRootTask()Lcom/android/server/wm/Task; > 2 @2 exception:3,
3 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:2,
5 = binaryop(add) 3 , 4,
13 = phi  12,5,
conditional branch(lt, to iindex=-1) 13,6,
8 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,13 @8 exception:7,
9 = checkcast <Application,Lcom/android/server/wm/DisplayContent>8 <Application,Lcom/android/server/wm/DisplayContent>,
11 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getFocusedRootTask()Lcom/android/server/wm/Task; > 9 @14 exception:10,
conditional branch(eq, to iindex=-1) 11,6,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
12 = getfield < Application, Lcom/android/server/wm/Task, mTaskId, <Primordial,I> > 9,
14 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(I)Landroid/app/ActivityTaskManager$RootTaskInfo; > 11,12 @25 exception:13,
4 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTask(I)Lcom/android/server/wm/Task; > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
14 = phi  13,6,
conditional branch(lt, to iindex=-1) 14,7,
9 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildAt(I)Lcom/android/server/wm/WindowContainer; > 1,14 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/wm/DisplayContent>9 <Application,Lcom/android/server/wm/DisplayContent>,
12 = invokevirtual < Application, Lcom/android/server/wm/DisplayContent, getRootTask(I)Lcom/android/server/wm/Task; > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,7,
return 12,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRootTaskInfo(Lcom/android/server/wm/Task;)Landroid/app/ActivityTaskManager$RootTaskInfo; > 1,4 @6 exception:6,
3 = new <Application,Landroid/app/ActivityTaskManager$RootTaskInfo>@0,
invokespecial < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, <init>()V > 3 @2 exception:4,
invokevirtual < Application, Lcom/android/server/wm/Task, fillTaskInfo(Landroid/app/TaskInfo;)V > 2,3 @5 exception:5,
7 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getDisplayContent()Lcom/android/server/wm/DisplayContent; > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,10,
11 = new <Primordial,[I>@209 ,
12 = new <Primordial,[Z>@229 ,
13 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21>@24,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda21, <init>(Lcom/android/server/wm/Task;[Z[I)V > 13,2,12,11 @26 exception:14,
16 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllRootTasks(Ljava/util/function/Predicate;Z)Z > 7,13,10 @29 exception:15,
17 = arrayload 12[10],
conditional branch(eq, to iindex=-1) 17,10,
18 = arrayload 11[10],
19 = phi  8,18,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, position, <Primordial,I> > = 19,
25 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, shouldBeVisible(Lcom/android/server/wm/ActivityRecord;)Z > 2,10 @41 exception:24,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, visible, <Primordial,Z> > = 25,
26 = getfield < Application, Landroid/app/ActivityTaskManager$RootTaskInfo, bounds, <Application,Landroid/graphics/Rect> > 3,
invokevirtual < Application, Lcom/android/server/wm/Task, getBounds(Landroid/graphics/Rect;)V > 2,26 @49 exception:27,
29 = invokevirtual < Application, Lcom/android/server/wm/Task, getDescendantTaskCount()I > 2 @52 exception:28,
30 = new <Primordial,[I>@5629 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskIds, <Primordial,[I> > = 30,
31 = new <Application,[Ljava/lang/String>@6029 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskNames, <Application,[Ljava/lang/String> > = 31,
32 = new <Application,[Landroid/graphics/Rect>@6429 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskBounds, <Application,[Landroid/graphics/Rect> > = 32,
33 = new <Primordial,[I>@6829 ,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, childTaskUserIds, <Primordial,[I> > = 33,
34 = new <Primordial,[I>@729 ,
arraystore 34[10] = 10,
35 = new <Application,Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22>@76,
invokespecial < Application, Lcom/android/server/wm/RootWindowContainer$$ExternalSyntheticLambda22, <init>()V > 35 @78 exception:36,
37 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
39 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 37 @83 exception:38,
41 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Lcom/android/internal/util/function/TriConsumer;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;Ljava/lang/Object;Ljava/lang/Object;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 35,39,3,34 @87 exception:40,
invokevirtual < Application, Lcom/android/server/wm/Task, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 2,41,10 @91 exception:42,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 41 @94 exception:43,
45 = invokevirtual < Application, Lcom/android/server/wm/TaskFragment, topRunningActivity()Lcom/android/server/wm/ActivityRecord; > 2 @97 exception:44,
conditional branch(eq, to iindex=-1) 45,10,
46 = getfield < Application, Lcom/android/server/wm/ActivityRecord, intent, <Application,Landroid/content/Intent> > 45,
48 = invokevirtual < Application, Landroid/content/Intent, getComponent()Landroid/content/ComponentName; > 46 @105 exception:47,
49 = phi  10,48,
putfield 3.< Application, Landroid/app/ActivityTaskManager$RootTaskInfo, topActivity, <Application,Landroid/content/ComponentName> > = 49,
return 3,
return 7,
monitorexit 6,
27 = phi  10,14,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @30 exception:30,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @33 exception:31,
return 27,","depth : 0
public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	ActivityTaskManagerService.enforceTaskPermission(""getFocusedRootTaskInfo()"");
	long v2 = Binder.clearCallingIdentity();
	WindowManagerService.boostPriorityForLockedSection();
	Task v4 = p0.getTopDisplayFocusedRootTask();
	ActivityTaskManager$RootTaskInfo v5 = this.mRootWindowContainer.getRootTaskInfo(Task.mTaskId);
	WindowManagerService.resetPriorityAfterLockedSection();
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void enforceTaskPermission(String p1){
	int v3 = Slog.w(""ActivityTaskManager"", ""MANAGE_ACTIVITY_STACKS is deprecated, please use alternative permission: MANAGE_ACTIVITY_TASKS"");
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public Task getTopDisplayFocusedRootTask(){
	Task v1 = this.mRootWindowContainer.getTopDisplayFocusedRootTask();
	return v1;
}
-----
depth : 2
public Task getTopDisplayFocusedRootTask(){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getFocusedRootTask();
	return v3;
}
-----
depth : 1
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(int p1){
	Task v1 = p0.getRootTask(p1);
	ActivityTaskManager$RootTaskInfo v2 = p0.getRootTaskInfo(v1);
	return v2;
}
-----
depth : 2
public Task getRootTask(int p1){
	int v1 = p0.getChildCount();
	WindowContainer v2 = p0.getChildAt(phiInstruction);
	Task v3 = v2.getRootTask(p1);
	return v3;
}
-----
depth : 2
public ActivityTaskManager$RootTaskInfo getRootTaskInfo(Task p1){
	ActivityTaskManager$RootTaskInfo v0 = new ActivityTaskManager$RootTaskInfo();
	p1.fillTaskInfo(v0);
	DisplayContent v3 = p1.getDisplayContent();
	[I v3 = new [I(1);
	[Z v3 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v3 = new RootWindowContainer$$ExternalSyntheticLambda21(p1,v3,v3);
	boolean v5 = v3.forAllRootTasks(v3, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v6 = p1.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v6;
	p1.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v8 = p1.getDescendantTaskCount();
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v8;
	String v8 = new String(v8);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v8;
	Rect v8 = new Rect(v8);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v8;
	[I v8 = new [I(v8);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v8;
	[I v8 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v8 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v10 = PooledLambda.__(Tas.class);
	PooledConsumer v11 = PooledLambda.obtainConsumer(v8, v10, v0, v8);
	p1.forAllLeafTasks(v11, 0);
	v11.recycle();
	ActivityRecord v14 = p1.topRunningActivity();
	ComponentName v15 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	return v0;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public ActivityTaskManager$RootTaskInfo getFocusedRootTaskInfo(){
	long v5 = Binder.clearCallingIdentity();
	int v11 = RootWindowContainer.getChildCount();
	WindowContainer v12 = RootWindowContainer.getChildAt(phiInstruction);
	Task v13 = v12.getFocusedRootTask();
	Task v10 = v13;
	Task v9 = v10;
	int v16 = RootWindowContainer.getChildCount();
	WindowContainer v17 = RootWindowContainer.getChildAt(phiInstruction);
	Task v18 = v17.getRootTask(p1);
	Task v15 = v18;
	ActivityTaskManager$RootTaskInfo v20 = new ActivityTaskManager$RootTaskInfo();
	v15.fillTaskInfo(v20);
	DisplayContent v23 = v15.getDisplayContent();
	[I v24 = new [I(1);
	[Z v25 = new [Z(1);
	RootWindowContainer$$ExternalSyntheticLambda21 v26 = new RootWindowContainer$$ExternalSyntheticLambda21(v15,v25,v24);
	boolean v28 = v23.forAllRootTasks(v26, 0);
	ActivityTaskManager$RootTaskInfo.position = phiInstruction;
	boolean v29 = v15.shouldBeVisible(0);
	ActivityTaskManager$RootTaskInfo.visible = v29;
	v15.getBounds(ActivityTaskManager$RootTaskInfo.bounds);
	int v31 = v15.getDescendantTaskCount();
	[I v32 = new [I(v31);
	ActivityTaskManager$RootTaskInfo.childTaskIds = v32;
	String v33 = new String(v31);
	ActivityTaskManager$RootTaskInfo.childTaskNames = v33;
	Rect v34 = new Rect(v31);
	ActivityTaskManager$RootTaskInfo.childTaskBounds = v34;
	[I v35 = new [I(v31);
	ActivityTaskManager$RootTaskInfo.childTaskUserIds = v35;
	[I v36 = new [I(1);
	RootWindowContainer$$ExternalSyntheticLambda22 v37 = new RootWindowContainer$$ExternalSyntheticLambda22();
	ArgumentPlaceholder v39 = PooledLambda.__(Tas.class);
	PooledConsumer v40 = PooledLambda.obtainConsumer(v37, v39, v20, v36);
	v15.forAllLeafTasks(v40, 0);
	v40.recycle();
	ActivityRecord v43 = v15.topRunningActivity();
	ComponentName v44 = ActivityRecord.intent.getComponent();
	ActivityTaskManager$RootTaskInfo.topActivity = phiInstruction;
	ActivityTaskManager$RootTaskInfo v19 = v20;
	ActivityTaskManager$RootTaskInfo v14 = v19;
	WindowManagerThreadPriorityBooster.reset();
	Binder.restoreCallingIdentity(v5);
	return phiInstruction;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getAppTaskThumbnailSize()Landroid/graphics/Point;","0","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
4 = new <Application,Landroid/graphics/Point>@6,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailWidth, <Primordial,I> > 1,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailHeight, <Primordial,I> > 1,
invokespecial < Application, Landroid/graphics/Point, <init>(II)V > 4,5,6 @12 exception:7,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @16 exception:12,
return 4,","depth : 0
public Point getAppTaskThumbnailSize(){
	WindowManagerService.boostPriorityForLockedSection();
	Point v1 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v1;
}
-----
","public Point getAppTaskThumbnailSize(){
	WindowManagerService.boostPriorityForLockedSection();
	Point v2 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v2;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","getAppTaskThumbnailSize()Landroid/graphics/Point;","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
4 = new <Application,Landroid/graphics/Point>@6,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailWidth, <Primordial,I> > 1,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailHeight, <Primordial,I> > 1,
invokespecial < Application, Landroid/graphics/Point, <init>(II)V > 4,5,6 @12 exception:7,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @16 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 4,","depth : 0
public Point getAppTaskThumbnailSize(){
	WindowManagerService.boostPriorityForLockedSection();
	Point v1 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public Point getAppTaskThumbnailSize(){
	this.sThreadPriorityBooster.boost();
	Point v3 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	this.sThreadPriorityBooster.reset();
	return v3;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","getAppTaskThumbnailSize()Landroid/graphics/Point;","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
4 = new <Application,Landroid/graphics/Point>@6,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailWidth, <Primordial,I> > 1,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailHeight, <Primordial,I> > 1,
invokespecial < Application, Landroid/graphics/Point, <init>(II)V > 4,5,6 @12 exception:7,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @16 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 4,","depth : 0
public Point getAppTaskThumbnailSize(){
	WindowManagerService.boostPriorityForLockedSection();
	Point v1 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public Point getAppTaskThumbnailSize(){
	Point v4 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	return v4;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","getAppTaskThumbnailSize()Landroid/graphics/Point;","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
4 = new <Application,Landroid/graphics/Point>@6,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailWidth, <Primordial,I> > 1,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailHeight, <Primordial,I> > 1,
invokespecial < Application, Landroid/graphics/Point, <init>(II)V > 4,5,6 @12 exception:7,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @16 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 4,","depth : 0
public Point getAppTaskThumbnailSize(){
	WindowManagerService.boostPriorityForLockedSection();
	Point v1 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public Point getAppTaskThumbnailSize(){
	WindowManagerThreadPriorityBooster.boost();
	Point v5 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	return v5;
}
","NONE"
"Lcom/android/server/wm/ActivityTaskManagerService","getAppTaskThumbnailSize()Landroid/graphics/Point;","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @3 exception:3,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
4 = new <Application,Landroid/graphics/Point>@6,
5 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailWidth, <Primordial,I> > 1,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mThumbnailHeight, <Primordial,I> > 1,
invokespecial < Application, Landroid/graphics/Point, <init>(II)V > 4,5,6 @12 exception:7,
monitorexit 2,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @16 exception:12,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return 4,","depth : 0
public Point getAppTaskThumbnailSize(){
	WindowManagerService.boostPriorityForLockedSection();
	Point v1 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public Point getAppTaskThumbnailSize(){
	Point v4 = new Point(this.mThumbnailWidth,this.mThumbnailHeight);
	WindowManagerThreadPriorityBooster.reset();
	return v4;
}
","NONE"

"Lcom/android/server/wm/ActivityTaskManagerService","resumeAppSwitches()V","0","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 9,10 @21 exception:11,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:17,
return,","depth : 0
public void resumeAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
","public void resumeAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","resumeAppSwitches()V","1","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 9,10 @21 exception:11,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return,","depth : 0
public void resumeAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public void resumeAppSwitches(){
	this.sThreadPriorityBooster.boost();
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	this.sThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","resumeAppSwitches()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 9,10 @21 exception:11,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void resumeAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void resumeAppSwitches(){
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","resumeAppSwitches()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 9,10 @21 exception:11,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return,","depth : 0
public void resumeAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public void resumeAppSwitches(){
	WindowManagerThreadPriorityBooster.boost();
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","resumeAppSwitches()V","2","2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mAmInternal, <Application,Landroid/app/ActivityManagerInternal> > 1,
invokevirtual < Application, Landroid/app/ActivityManagerInternal, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @12 exception:7,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
putfield 1.< Application, Lcom/android/server/wm/ActivityTaskManagerService, mAppSwitchesState, <Primordial,I> > = 8,
9 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mH, <Application,Lcom/android/server/wm/ActivityTaskManagerService$H> > 1,
invokevirtual < Application, Landroid/os/Handler, removeMessages(I)V > 9,10 @21 exception:11,
monitorexit 6,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @25 exception:17,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, reset()V > 1 @13 exception:6,
return,
return,
return,","depth : 0
public void resumeAppSwitches(){
	WindowManagerService.boostPriorityForLockedSection();
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	p0.reset();
	return;
}
-----
","public void resumeAppSwitches(){
	this.mAppSwitchesState = 2;
	this.mH.removeMessages(4);
	WindowManagerThreadPriorityBooster.reset();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/wm/ActivityTaskManagerService","getTasks(IZZI)Ljava/util/List;","0","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
conditional branch(eq, to iindex=-1) 4,10,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,10,
13 = binaryop(or) 3 , 12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCrossUserAllowed(II)Z > 1,9,7 @16 exception:14,
conditional branch(eq, to iindex=-1) 15,10,
goto (from iindex= 14 to iindex = 2),
17 = phi  16,10,
18 = binaryop(or) 13 , 17,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getUserManager()Lcom/android/server/pm/UserManagerService; > 1 @26 exception:19,
22 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 7 @30 exception:21,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(IZ)[I > 20,22,23 @35 exception:24,
26 = new <Application,Landroid/util/ArraySet>@39,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 26 @41 exception:27,
36 = phi  35,10,
28 = arraylength 25,
conditional branch(ge, to iindex=-1) 36,28,
40 = new <Application,Ljava/util/ArrayList>@60,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 40 @62 exception:41,
42 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @68 exception:43,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,44,9,7 @73 exception:45,
conditional branch(eq, to iindex=-1) 46,10,
48 = phi  10,47,
49 = binaryop(or) 18 , 48,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRunningTasks(ILjava/util/List;IILandroid/util/ArraySet;I)V > 50,2,40,49,7,26,5 @87 exception:51,
monitorexit 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:61,
return 40,","depth : 0
public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = p0.isCrossUserAllowed(v2, v1);
	UserManagerService v4 = p0.getUserManager();
	int v5 = UserHandle.getUserId(v1);
	[I v6 = v4.getProfileIds(v5, 1);
	ArraySet v6 = new ArraySet();
	ArrayList v7 = new ArrayList();
	WindowManagerService.boostPriorityForLockedSection();
	boolean v10 = p0.isGetTasksAllowed(""getTasks"", v2, v1);
	this.mRootWindowContainer.getRunningTasks(p1, v7, (((p2 | phiInstruction) | phiInstruction) | phiInstruction), v1, v6, p4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
","public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = p0.isCrossUserAllowed(v2, v1);
	UserManagerService v4 = p0.getUserManager();
	int v5 = UserHandle.getUserId(v1);
	[I v6 = v4.getProfileIds(v5, 1);
	ArraySet v7 = new ArraySet();
	ArrayList v9 = new ArrayList();
	WindowManagerService.boostPriorityForLockedSection();
	boolean v12 = p0.isGetTasksAllowed(""getTasks"", v2, v1);
	this.mRootWindowContainer.getRunningTasks(p1, v9, (((p2 | phiInstruction) | phiInstruction) | phiInstruction), v1, v7, p4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v9;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTasks(IZZI)Ljava/util/List;","1","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
conditional branch(eq, to iindex=-1) 4,10,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,10,
13 = binaryop(or) 3 , 12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCrossUserAllowed(II)Z > 1,9,7 @16 exception:14,
6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 4,2,3 @2 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 8,2,3 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,7,
goto (from iindex= 8 to iindex = 3),
15 = phi  7,14,
return 15,
conditional branch(eq, to iindex=-1) 15,10,
goto (from iindex= 14 to iindex = 2),
17 = phi  16,10,
18 = binaryop(or) 13 , 17,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getUserManager()Lcom/android/server/pm/UserManagerService; > 1 @26 exception:19,
22 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 7 @30 exception:21,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(IZ)[I > 20,22,23 @35 exception:24,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
return 6,
26 = new <Application,Landroid/util/ArraySet>@39,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 26 @41 exception:27,
36 = phi  35,10,
28 = arraylength 25,
conditional branch(ge, to iindex=-1) 36,28,
40 = new <Application,Ljava/util/ArrayList>@60,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 40 @62 exception:41,
42 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @68 exception:43,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,44,9,7 @73 exception:45,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
11 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 9,3,4 @10 exception:10,
conditional branch(ne, to iindex=-1) 11,8,
goto (from iindex= 11 to iindex = 2),
12 = phi  7,8,
conditional branch(ne, to iindex=-1) 12,8,
15 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 13,3,4 @24 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
19 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @33 exception:18,
21 = invokeinterface < Application, Landroid/content/pm/IPackageManager, isUidPrivileged(I)Z > 19,4 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,8,
22 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 22,8,
24 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @47 exception:23,
25 = conversion(J) 4,
26 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
28 = new <Application,[Ljava/lang/Object>@5716 ,
arraystore 28[8] = 24,
30 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 25 @61 exception:29,
arraystore 28[7] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 26,27,17,8,28 @67 exception:31,
36 = phi  12,12,12,7,
40 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 40,8,
42 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @75 exception:41,
43 = conversion(J) 4,
44 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
46 = new <Application,[Ljava/lang/Object>@8516 ,
arraystore 46[8] = 42,
48 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 43 @89 exception:47,
arraystore 46[7] = 48,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 44,45,17,8,46 @95 exception:49,
52 = phi  12,36,36,
return 52,
conditional branch(eq, to iindex=-1) 46,10,
48 = phi  10,47,
49 = binaryop(or) 18 , 48,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRunningTasks(ILjava/util/List;IILandroid/util/ArraySet;I)V > 50,2,40,49,7,26,5 @87 exception:51,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,7 @3 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
goto (from iindex= 7 to iindex = 2),
12 = phi  10,1,
14 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getRunningTasks()Lcom/android/server/wm/RunningTasks; > 14 @15 exception:15,
17 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 17 @21 exception:18,
invokevirtual < Application, Lcom/android/server/wm/RunningTasks, getTasks(ILjava/util/List;ILcom/android/server/wm/RecentTasks;Lcom/android/server/wm/WindowContainer;ILandroid/util/ArraySet;)V > 16,2,3,4,19,12,5,6 @30 exception:20,
return,
monitorexit 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:61,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 40,","depth : 0
public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = p0.isCrossUserAllowed(v2, v1);
	UserManagerService v4 = p0.getUserManager();
	int v5 = UserHandle.getUserId(v1);
	[I v6 = v4.getProfileIds(v5, 1);
	ArraySet v6 = new ArraySet();
	ArrayList v7 = new ArrayList();
	WindowManagerService.boostPriorityForLockedSection();
	boolean v10 = p0.isGetTasksAllowed(""getTasks"", v2, v1);
	this.mRootWindowContainer.getRunningTasks(p1, v7, (((p2 | phiInstruction) | phiInstruction) | phiInstruction), v1, v6, p4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
depth : 1
public boolean isCrossUserAllowed(int p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public boolean isGetTasksAllowed(String p1, int p2, int p3){
	IPackageManager v4 = AppGlobals.getPackageManager();
	boolean v5 = v4.isUidPrivileged(p3);
	String v6 = String.valueOf(p1);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v6);
	String v9 = String.valueOf(p1);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v9);
	return phiInstruction;
}
-----
depth : 1
public void getRunningTasks(int p1, List p2, int p3, int p4, ArraySet p5, int p6){
	DisplayContent v1 = p0.getDisplayContent(p6);
	RunningTasks v2 = this.mTaskSupervisor.getRunningTasks();
	RecentTasks v3 = this.mService.getRecentTasks();
	v2.getTasks(p1, p2, p3, v3, phiInstruction, p4, p5);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = phiInstruction;
	UserManagerService v6 = p0.getUserManager();
	int v7 = UserHandle.getUserId(v1);
	[I v9 = UserManagerService.getProfileIds(v7, 0, 1);
	[I v8 = v9;
	ArraySet v10 = new ArraySet();
	ArrayList v12 = new ArrayList();
	this.sThreadPriorityBooster.boost();
	IPackageManager v20 = AppGlobals.getPackageManager();
	boolean v21 = v20.isUidPrivileged(v1);
	String v22 = String.valueOf(""getTasks"");
	Object v23 = new Object(2);
	Long v24 = Long.valueOf(v1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v23);
	String v26 = String.valueOf(""getTasks"");
	Object v27 = new Object(2);
	Long v28 = Long.valueOf(v1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v27);
	boolean v16 = phiInstruction;
	DisplayContent v31 = RootWindowContainer.getDisplayContent(p4);
	RunningTasks v32 = this.mTaskSupervisor.getRunningTasks();
	RecentTasks v33 = this.mService.getRecentTasks();
	v32.getTasks(p1, v12, (((p2 | phiInstruction) | phiInstruction) | phiInstruction), v33, phiInstruction, v1, v10);
	this.sThreadPriorityBooster.reset();
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTasks(IZZI)Ljava/util/List;","1","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
conditional branch(eq, to iindex=-1) 4,10,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,10,
13 = binaryop(or) 3 , 12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCrossUserAllowed(II)Z > 1,9,7 @16 exception:14,
6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 4,2,3 @2 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 8,2,3 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,7,
goto (from iindex= 10 to iindex = 2),
15 = phi  7,14,
return 15,
conditional branch(eq, to iindex=-1) 15,10,
goto (from iindex= 14 to iindex = 2),
17 = phi  16,10,
18 = binaryop(or) 13 , 17,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getUserManager()Lcom/android/server/pm/UserManagerService; > 1 @26 exception:19,
22 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 7 @30 exception:21,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(IZ)[I > 20,22,23 @35 exception:24,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
return 6,
26 = new <Application,Landroid/util/ArraySet>@39,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 26 @41 exception:27,
36 = phi  35,10,
28 = arraylength 25,
conditional branch(ge, to iindex=-1) 36,28,
40 = new <Application,Ljava/util/ArrayList>@60,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 40 @62 exception:41,
42 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @68 exception:43,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
return,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,44,9,7 @73 exception:45,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
11 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 9,3,4 @10 exception:10,
conditional branch(ne, to iindex=-1) 11,8,
goto (from iindex= 11 to iindex = 2),
12 = phi  7,8,
conditional branch(ne, to iindex=-1) 12,8,
15 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 13,3,4 @24 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
19 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @33 exception:18,
21 = invokeinterface < Application, Landroid/content/pm/IPackageManager, isUidPrivileged(I)Z > 19,4 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,8,
22 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 22,8,
24 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @47 exception:23,
25 = conversion(J) 4,
26 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
28 = new <Application,[Ljava/lang/Object>@5716 ,
arraystore 28[8] = 24,
30 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 25 @61 exception:29,
arraystore 28[7] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 26,27,17,8,28 @67 exception:31,
36 = phi  12,12,12,7,
40 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 40,8,
42 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @75 exception:41,
43 = conversion(J) 4,
44 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
46 = new <Application,[Ljava/lang/Object>@8516 ,
arraystore 46[8] = 42,
48 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 43 @89 exception:47,
arraystore 46[7] = 48,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 44,45,17,8,46 @95 exception:49,
52 = phi  12,36,36,
return 52,
conditional branch(eq, to iindex=-1) 46,10,
48 = phi  10,47,
49 = binaryop(or) 18 , 48,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRunningTasks(ILjava/util/List;IILandroid/util/ArraySet;I)V > 50,2,40,49,7,26,5 @87 exception:51,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,7 @3 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
goto (from iindex= 7 to iindex = 2),
12 = phi  10,1,
14 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getRunningTasks()Lcom/android/server/wm/RunningTasks; > 14 @15 exception:15,
17 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 17 @21 exception:18,
invokevirtual < Application, Lcom/android/server/wm/RunningTasks, getTasks(ILjava/util/List;ILcom/android/server/wm/RecentTasks;Lcom/android/server/wm/WindowContainer;ILandroid/util/ArraySet;)V > 16,2,3,4,19,12,5,6 @30 exception:20,
return,
monitorexit 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:61,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
return,
return 40,","depth : 0
public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = p0.isCrossUserAllowed(v2, v1);
	UserManagerService v4 = p0.getUserManager();
	int v5 = UserHandle.getUserId(v1);
	[I v6 = v4.getProfileIds(v5, 1);
	ArraySet v6 = new ArraySet();
	ArrayList v7 = new ArrayList();
	WindowManagerService.boostPriorityForLockedSection();
	boolean v10 = p0.isGetTasksAllowed(""getTasks"", v2, v1);
	this.mRootWindowContainer.getRunningTasks(p1, v7, (((p2 | phiInstruction) | phiInstruction) | phiInstruction), v1, v6, p4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
depth : 1
public boolean isCrossUserAllowed(int p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 1
public boolean isGetTasksAllowed(String p1, int p2, int p3){
	IPackageManager v4 = AppGlobals.getPackageManager();
	boolean v5 = v4.isUidPrivileged(p3);
	String v6 = String.valueOf(p1);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v6);
	String v9 = String.valueOf(p1);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v9);
	return phiInstruction;
}
-----
depth : 1
public void getRunningTasks(int p1, List p2, int p3, int p4, ArraySet p5, int p6){
	DisplayContent v1 = p0.getDisplayContent(p6);
	RunningTasks v2 = this.mTaskSupervisor.getRunningTasks();
	RecentTasks v3 = this.mService.getRecentTasks();
	v2.getTasks(p1, p2, p3, v3, phiInstruction, p4, p5);
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
","public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = phiInstruction;
	UserManagerService v6 = p0.getUserManager();
	int v7 = UserHandle.getUserId(v1);
	[I v9 = UserManagerService.getProfileIds(v7, 0, 1);
	[I v8 = v9;
	ArraySet v10 = new ArraySet();
	ArrayList v12 = new ArrayList();
	this.sThreadPriorityBooster.boost();
	IPackageManager v20 = AppGlobals.getPackageManager();
	boolean v21 = v20.isUidPrivileged(v1);
	String v22 = String.valueOf(""getTasks"");
	Object v23 = new Object(2);
	Long v24 = Long.valueOf(v1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v23);
	String v26 = String.valueOf(""getTasks"");
	Object v27 = new Object(2);
	Long v28 = Long.valueOf(v1);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v27);
	boolean v16 = phiInstruction;
	DisplayContent v31 = RootWindowContainer.getDisplayContent(p4);
	RunningTasks v32 = this.mTaskSupervisor.getRunningTasks();
	RecentTasks v33 = this.mService.getRecentTasks();
	v32.getTasks(p1, v12, (((p2 | phiInstruction) | phiInstruction) | phiInstruction), v33, phiInstruction, v1, v10);
	this.sThreadPriorityBooster.reset();
	return v12;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTasks(IZZI)Ljava/util/List;","2","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
conditional branch(eq, to iindex=-1) 4,10,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,10,
13 = binaryop(or) 3 , 12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCrossUserAllowed(II)Z > 1,9,7 @16 exception:14,
6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 4,2,3 @2 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 8,2,3 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,7,
goto (from iindex= 8 to iindex = 3),
15 = phi  7,14,
return 15,
conditional branch(eq, to iindex=-1) 15,10,
goto (from iindex= 14 to iindex = 2),
17 = phi  16,10,
18 = binaryop(or) 13 , 17,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getUserManager()Lcom/android/server/pm/UserManagerService; > 1 @26 exception:19,
22 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 7 @30 exception:21,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(IZ)[I > 20,22,23 @35 exception:24,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
return 6,
26 = new <Application,Landroid/util/ArraySet>@39,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 26 @41 exception:27,
36 = phi  35,10,
28 = arraylength 25,
conditional branch(ge, to iindex=-1) 36,28,
40 = new <Application,Ljava/util/ArrayList>@60,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 40 @62 exception:41,
42 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @68 exception:43,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,44,9,7 @73 exception:45,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
11 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 9,3,4 @10 exception:10,
conditional branch(ne, to iindex=-1) 11,8,
goto (from iindex= 11 to iindex = 2),
12 = phi  7,8,
conditional branch(ne, to iindex=-1) 12,8,
15 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 13,3,4 @24 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
19 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @33 exception:18,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
21 = invokeinterface < Application, Landroid/content/pm/IPackageManager, isUidPrivileged(I)Z > 19,4 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,8,
22 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 22,8,
24 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @47 exception:23,
25 = conversion(J) 4,
26 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
28 = new <Application,[Ljava/lang/Object>@5716 ,
arraystore 28[8] = 24,
30 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 25 @61 exception:29,
arraystore 28[7] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 26,27,17,8,28 @67 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
36 = phi  12,12,12,7,
40 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 40,8,
42 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @75 exception:41,
43 = conversion(J) 4,
44 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
46 = new <Application,[Ljava/lang/Object>@8516 ,
arraystore 46[8] = 42,
48 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 43 @89 exception:47,
arraystore 46[7] = 48,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 44,45,17,8,46 @95 exception:49,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
52 = phi  12,36,36,
return 52,
conditional branch(eq, to iindex=-1) 46,10,
48 = phi  10,47,
49 = binaryop(or) 18 , 48,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRunningTasks(ILjava/util/List;IILandroid/util/ArraySet;I)V > 50,2,40,49,7,26,5 @87 exception:51,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,7 @3 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 10,11,
goto (from iindex= 7 to iindex = 2),
12 = phi  10,1,
14 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getRunningTasks()Lcom/android/server/wm/RunningTasks; > 14 @15 exception:15,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRunningTasks, <Application,Lcom/android/server/wm/RunningTasks> > 1,
return 2,
17 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 17 @21 exception:18,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/RunningTasks, getTasks(ILjava/util/List;ILcom/android/server/wm/RecentTasks;Lcom/android/server/wm/WindowContainer;ILandroid/util/ArraySet;)V > 16,2,3,4,19,12,5,6 @30 exception:20,
conditional branch(gt, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/wm/RunningTasks, mTmpSortedSet, <Application,Ljava/util/TreeSet> > 1,
invokevirtual < Application, Ljava/util/TreeSet, clear()V > 10 @5 exception:11,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mCallingUid, <Primordial,I> > = 7,
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 7 @10 exception:12,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mUserId, <Primordial,I> > = 13,
15 = binaryop(and) 4 , 14,
conditional branch(ne, to iindex=-1) 15,16,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mCrossUser, <Primordial,Z> > = 18,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mProfileIds, <Application,Landroid/util/ArraySet> > = 8,
20 = binaryop(and) 4 , 19,
conditional branch(ne, to iindex=-1) 20,21,
goto (from iindex= 22 to iindex = 2),
22 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mAllowed, <Primordial,Z> > = 22,
24 = binaryop(and) 4 , 23,
conditional branch(ne, to iindex=-1) 24,17,
goto (from iindex= 28 to iindex = 2),
25 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mFilterOnlyVisibleRecents, <Primordial,Z> > = 25,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > = 5,
27 = binaryop(and) 4 , 26,
conditional branch(ne, to iindex=-1) 27,26,
goto (from iindex= 35 to iindex = 2),
28 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mKeepIntentExtra, <Primordial,Z> > = 28,
29 = new <Application,Lcom/android/server/wm/RunningTasks$$ExternalSyntheticLambda0>@60,
invokespecial < Application, Lcom/android/server/wm/RunningTasks$$ExternalSyntheticLambda0, <init>()V > 29 @62 exception:30,
31 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
33 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 31 @67 exception:32,
35 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Ljava/util/function/BiConsumer;Ljava/lang/Object;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 29,1,33 @71 exception:34,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 6,35,9 @75 exception:36,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 35 @78 exception:37,
38 = getfield < Application, Lcom/android/server/wm/RunningTasks, mTmpSortedSet, <Application,Ljava/util/TreeSet> > 1,
40 = invokevirtual < Application, Ljava/util/TreeSet, iterator()Ljava/util/Iterator; > 38 @83 exception:39,
52 = phi  51,2,
42 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 40 @87 exception:41,
conditional branch(eq, to iindex=-1) 42,9,
conditional branch(ne, to iindex=-1) 52,9,
goto (from iindex= 54 to iindex = 17),
return,
return,
monitorexit 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:61,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 40,","depth : 0
public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = p0.isCrossUserAllowed(v2, v1);
	UserManagerService v4 = p0.getUserManager();
	int v5 = UserHandle.getUserId(v1);
	[I v6 = v4.getProfileIds(v5, 1);
	ArraySet v6 = new ArraySet();
	ArrayList v7 = new ArrayList();
	WindowManagerService.boostPriorityForLockedSection();
	boolean v10 = p0.isGetTasksAllowed(""getTasks"", v2, v1);
	this.mRootWindowContainer.getRunningTasks(p1, v7, (((p2 | phiInstruction) | phiInstruction) | phiInstruction), v1, v6, p4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
depth : 1
public boolean isCrossUserAllowed(int p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public boolean isGetTasksAllowed(String p1, int p2, int p3){
	IPackageManager v4 = AppGlobals.getPackageManager();
	boolean v5 = v4.isUidPrivileged(p3);
	String v6 = String.valueOf(p1);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v6);
	String v9 = String.valueOf(p1);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v9);
	return phiInstruction;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void getRunningTasks(int p1, List p2, int p3, int p4, ArraySet p5, int p6){
	DisplayContent v1 = p0.getDisplayContent(p6);
	RunningTasks v2 = this.mTaskSupervisor.getRunningTasks();
	RecentTasks v3 = this.mService.getRecentTasks();
	v2.getTasks(p1, p2, p3, v3, phiInstruction, p4, p5);
	return;
}
-----
depth : 2
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public RunningTasks getRunningTasks(){
	return this.mRunningTasks;
}
-----
depth : 2
public RecentTasks getRecentTasks(){
	return this.mRecentTasks;
}
-----
depth : 2
public void getTasks(int p1, List p2, int p3, RecentTasks p4, WindowContainer p5, int p6, ArraySet p7){
	this.mTmpSortedSet.clear();
	this.mCallingUid = p6;
	int v2 = UserHandle.getUserId(p6);
	this.mUserId = v2;
	this.mCrossUser = phiInstruction;
	this.mProfileIds = p7;
	this.mAllowed = phiInstruction;
	this.mFilterOnlyVisibleRecents = phiInstruction;
	this.mRecentTasks = p4;
	this.mKeepIntentExtra = phiInstruction;
	RunningTasks$$ExternalSyntheticLambda0 v2 = new RunningTasks$$ExternalSyntheticLambda0();
	ArgumentPlaceholder v4 = PooledLambda.__(Tas.class);
	PooledConsumer v5 = PooledLambda.obtainConsumer(v2, p0, v4);
	p5.forAllLeafTasks(v5, 0);
	v5.recycle();
	Iterator v8 = this.mTmpSortedSet.iterator();
	boolean v9 = v8.hasNext();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = phiInstruction;
	UserManagerService v6 = p0.getUserManager();
	int v7 = UserHandle.getUserId(v1);
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append(""getting profiles related to user "");
	StringBuilder v14 = v11.append(p1);
	String v15 = v11.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v15);
	long v17 = Binder.clearCallingIdentity();
	IntArray v18 = UserManagerService.getProfileIdsLU(p1, 0, p2);
	[I v19 = v18.toArray();
	Binder.restoreCallingIdentity(v17);
	[I v9 = v19;
	[I v8 = v9;
	ArraySet v21 = new ArraySet();
	ArrayList v23 = new ArrayList();
	IPackageManager v33 = ActivityThread.getPackageManager();
	IPackageManager v32 = v33;
	boolean v34 = v32.isUidPrivileged(v1);
	String v35 = String.valueOf(""getTasks"");
	Object v36 = new Object(2);
	Long v37 = Long.valueOf(v1);
	ProtoLogImpl v39 = ProtoLogImpl.getSingleInstance();
	v39.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v36);
	String v41 = String.valueOf(""getTasks"");
	Object v42 = new Object(2);
	Long v43 = Long.valueOf(v1);
	ProtoLogImpl v45 = ProtoLogImpl.getSingleInstance();
	v45.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v42);
	boolean v28 = phiInstruction;
	int v49 = RootWindowContainer.getChildCount();
	DisplayContent v48 = 0;
	RunningTasks v50 = this.mRunningTasks;
	RecentTasks v51 = this.mRecentTasks;
	this.mTmpSortedSet.clear();
	this.mCallingUid = p4;
	int v54 = UserHandle.getUserId(p4);
	this.mUserId = v54;
	this.mCrossUser = phiInstruction;
	this.mProfileIds = p5;
	this.mAllowed = phiInstruction;
	this.mFilterOnlyVisibleRecents = phiInstruction;
	this.mRecentTasks = v51;
	this.mKeepIntentExtra = phiInstruction;
	RunningTasks$$ExternalSyntheticLambda0 v55 = new RunningTasks$$ExternalSyntheticLambda0();
	ArgumentPlaceholder v57 = PooledLambda.__(Tas.class);
	PooledConsumer v58 = PooledLambda.obtainConsumer(v55, RunningTasks, v57);
	phiInstruction.forAllLeafTasks(v58, 0);
	v58.recycle();
	Iterator v61 = this.mTmpSortedSet.iterator();
	boolean v62 = v61.hasNext();
	return v23;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTasks(IZZI)Ljava/util/List;","2","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
conditional branch(eq, to iindex=-1) 4,10,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,10,
13 = binaryop(or) 3 , 12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCrossUserAllowed(II)Z > 1,9,7 @16 exception:14,
6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 4,2,3 @2 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 8,2,3 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,7,
goto (from iindex= 10 to iindex = 2),
15 = phi  7,14,
return 15,
conditional branch(eq, to iindex=-1) 15,10,
goto (from iindex= 14 to iindex = 2),
17 = phi  16,10,
18 = binaryop(or) 13 , 17,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getUserManager()Lcom/android/server/pm/UserManagerService; > 1 @26 exception:19,
22 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 7 @30 exception:21,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(IZ)[I > 20,22,23 @35 exception:24,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
return 6,
26 = new <Application,Landroid/util/ArraySet>@39,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 26 @41 exception:27,
36 = phi  35,10,
28 = arraylength 25,
conditional branch(ge, to iindex=-1) 36,28,
40 = new <Application,Ljava/util/ArrayList>@60,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 40 @62 exception:41,
42 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @68 exception:43,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,44,9,7 @73 exception:45,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
11 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 9,3,4 @10 exception:10,
conditional branch(ne, to iindex=-1) 11,8,
goto (from iindex= 11 to iindex = 2),
12 = phi  7,8,
conditional branch(ne, to iindex=-1) 12,8,
15 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 13,3,4 @24 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
19 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @33 exception:18,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
21 = invokeinterface < Application, Landroid/content/pm/IPackageManager, isUidPrivileged(I)Z > 19,4 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,8,
22 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 22,8,
24 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @47 exception:23,
25 = conversion(J) 4,
26 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
28 = new <Application,[Ljava/lang/Object>@5716 ,
arraystore 28[8] = 24,
30 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 25 @61 exception:29,
arraystore 28[7] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 26,27,17,8,28 @67 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
36 = phi  12,12,12,7,
40 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 40,8,
42 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @75 exception:41,
43 = conversion(J) 4,
44 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
46 = new <Application,[Ljava/lang/Object>@8516 ,
arraystore 46[8] = 42,
48 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 43 @89 exception:47,
arraystore 46[7] = 48,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 44,45,17,8,46 @95 exception:49,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
52 = phi  12,36,36,
return 52,
conditional branch(eq, to iindex=-1) 46,10,
48 = phi  10,47,
49 = binaryop(or) 18 , 48,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRunningTasks(ILjava/util/List;IILandroid/util/ArraySet;I)V > 50,2,40,49,7,26,5 @87 exception:51,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,7 @3 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 10,11,
goto (from iindex= 7 to iindex = 2),
12 = phi  10,1,
14 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getRunningTasks()Lcom/android/server/wm/RunningTasks; > 14 @15 exception:15,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRunningTasks, <Application,Lcom/android/server/wm/RunningTasks> > 1,
return 2,
17 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 17 @21 exception:18,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/RunningTasks, getTasks(ILjava/util/List;ILcom/android/server/wm/RecentTasks;Lcom/android/server/wm/WindowContainer;ILandroid/util/ArraySet;)V > 16,2,3,4,19,12,5,6 @30 exception:20,
conditional branch(gt, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/wm/RunningTasks, mTmpSortedSet, <Application,Ljava/util/TreeSet> > 1,
invokevirtual < Application, Ljava/util/TreeSet, clear()V > 10 @5 exception:11,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mCallingUid, <Primordial,I> > = 7,
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 7 @10 exception:12,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mUserId, <Primordial,I> > = 13,
15 = binaryop(and) 4 , 14,
conditional branch(ne, to iindex=-1) 15,16,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mCrossUser, <Primordial,Z> > = 18,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mProfileIds, <Application,Landroid/util/ArraySet> > = 8,
20 = binaryop(and) 4 , 19,
conditional branch(ne, to iindex=-1) 20,21,
goto (from iindex= 22 to iindex = 2),
22 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mAllowed, <Primordial,Z> > = 22,
24 = binaryop(and) 4 , 23,
conditional branch(ne, to iindex=-1) 24,17,
goto (from iindex= 28 to iindex = 2),
25 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mFilterOnlyVisibleRecents, <Primordial,Z> > = 25,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > = 5,
27 = binaryop(and) 4 , 26,
conditional branch(ne, to iindex=-1) 27,26,
goto (from iindex= 35 to iindex = 2),
28 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mKeepIntentExtra, <Primordial,Z> > = 28,
29 = new <Application,Lcom/android/server/wm/RunningTasks$$ExternalSyntheticLambda0>@60,
invokespecial < Application, Lcom/android/server/wm/RunningTasks$$ExternalSyntheticLambda0, <init>()V > 29 @62 exception:30,
31 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
33 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 31 @67 exception:32,
35 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Ljava/util/function/BiConsumer;Ljava/lang/Object;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 29,1,33 @71 exception:34,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 6,35,9 @75 exception:36,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 35 @78 exception:37,
38 = getfield < Application, Lcom/android/server/wm/RunningTasks, mTmpSortedSet, <Application,Ljava/util/TreeSet> > 1,
40 = invokevirtual < Application, Ljava/util/TreeSet, iterator()Ljava/util/Iterator; > 38 @83 exception:39,
52 = phi  51,2,
42 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 40 @87 exception:41,
conditional branch(eq, to iindex=-1) 42,9,
conditional branch(ne, to iindex=-1) 52,9,
goto (from iindex= 54 to iindex = 17),
return,
return,
monitorexit 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:61,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 40,","depth : 0
public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = p0.isCrossUserAllowed(v2, v1);
	UserManagerService v4 = p0.getUserManager();
	int v5 = UserHandle.getUserId(v1);
	[I v6 = v4.getProfileIds(v5, 1);
	ArraySet v6 = new ArraySet();
	ArrayList v7 = new ArrayList();
	WindowManagerService.boostPriorityForLockedSection();
	boolean v10 = p0.isGetTasksAllowed(""getTasks"", v2, v1);
	this.mRootWindowContainer.getRunningTasks(p1, v7, (((p2 | phiInstruction) | phiInstruction) | phiInstruction), v1, v6, p4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
depth : 1
public boolean isCrossUserAllowed(int p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	return;
}
-----
depth : 1
public boolean isGetTasksAllowed(String p1, int p2, int p3){
	IPackageManager v4 = AppGlobals.getPackageManager();
	boolean v5 = v4.isUidPrivileged(p3);
	String v6 = String.valueOf(p1);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v6);
	String v9 = String.valueOf(p1);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v9);
	return phiInstruction;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void getRunningTasks(int p1, List p2, int p3, int p4, ArraySet p5, int p6){
	DisplayContent v1 = p0.getDisplayContent(p6);
	RunningTasks v2 = this.mTaskSupervisor.getRunningTasks();
	RecentTasks v3 = this.mService.getRecentTasks();
	v2.getTasks(p1, p2, p3, v3, phiInstruction, p4, p5);
	return;
}
-----
depth : 2
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public RunningTasks getRunningTasks(){
	return this.mRunningTasks;
}
-----
depth : 2
public RecentTasks getRecentTasks(){
	return this.mRecentTasks;
}
-----
depth : 2
public void getTasks(int p1, List p2, int p3, RecentTasks p4, WindowContainer p5, int p6, ArraySet p7){
	this.mTmpSortedSet.clear();
	this.mCallingUid = p6;
	int v2 = UserHandle.getUserId(p6);
	this.mUserId = v2;
	this.mCrossUser = phiInstruction;
	this.mProfileIds = p7;
	this.mAllowed = phiInstruction;
	this.mFilterOnlyVisibleRecents = phiInstruction;
	this.mRecentTasks = p4;
	this.mKeepIntentExtra = phiInstruction;
	RunningTasks$$ExternalSyntheticLambda0 v2 = new RunningTasks$$ExternalSyntheticLambda0();
	ArgumentPlaceholder v4 = PooledLambda.__(Tas.class);
	PooledConsumer v5 = PooledLambda.obtainConsumer(v2, p0, v4);
	p5.forAllLeafTasks(v5, 0);
	v5.recycle();
	Iterator v8 = this.mTmpSortedSet.iterator();
	boolean v9 = v8.hasNext();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = phiInstruction;
	UserManagerService v6 = p0.getUserManager();
	int v7 = UserHandle.getUserId(v1);
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append(""getting profiles related to user "");
	StringBuilder v14 = v11.append(p1);
	String v15 = v11.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v15);
	long v17 = Binder.clearCallingIdentity();
	IntArray v18 = UserManagerService.getProfileIdsLU(p1, 0, p2);
	[I v19 = v18.toArray();
	Binder.restoreCallingIdentity(v17);
	[I v9 = v19;
	[I v8 = v9;
	ArraySet v21 = new ArraySet();
	ArrayList v23 = new ArrayList();
	IPackageManager v33 = ActivityThread.getPackageManager();
	IPackageManager v32 = v33;
	boolean v34 = v32.isUidPrivileged(v1);
	String v35 = String.valueOf(""getTasks"");
	Object v36 = new Object(2);
	Long v37 = Long.valueOf(v1);
	ProtoLogImpl v39 = ProtoLogImpl.getSingleInstance();
	v39.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v36);
	String v41 = String.valueOf(""getTasks"");
	Object v42 = new Object(2);
	Long v43 = Long.valueOf(v1);
	ProtoLogImpl v45 = ProtoLogImpl.getSingleInstance();
	v45.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v42);
	boolean v28 = phiInstruction;
	int v49 = RootWindowContainer.getChildCount();
	DisplayContent v48 = 0;
	RunningTasks v50 = this.mRunningTasks;
	RecentTasks v51 = this.mRecentTasks;
	this.mTmpSortedSet.clear();
	this.mCallingUid = p4;
	int v54 = UserHandle.getUserId(p4);
	this.mUserId = v54;
	this.mCrossUser = phiInstruction;
	this.mProfileIds = p5;
	this.mAllowed = phiInstruction;
	this.mFilterOnlyVisibleRecents = phiInstruction;
	this.mRecentTasks = v51;
	this.mKeepIntentExtra = phiInstruction;
	RunningTasks$$ExternalSyntheticLambda0 v55 = new RunningTasks$$ExternalSyntheticLambda0();
	ArgumentPlaceholder v57 = PooledLambda.__(Tas.class);
	PooledConsumer v58 = PooledLambda.obtainConsumer(v55, RunningTasks, v57);
	phiInstruction.forAllLeafTasks(v58, 0);
	v58.recycle();
	Iterator v61 = this.mTmpSortedSet.iterator();
	boolean v62 = v61.hasNext();
	return v23;
}
","SYS_OR_SIG"
"Lcom/android/server/wm/ActivityTaskManagerService","getTasks(IZZI)Ljava/util/List;","2","7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @4 exception:8,
conditional branch(eq, to iindex=-1) 4,10,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,10,
13 = binaryop(or) 3 , 12,
15 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCrossUserAllowed(II)Z > 1,9,7 @16 exception:14,
6 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 4,2,3 @2 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 8,2,3 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,7,
goto (from iindex= 8 to iindex = 3),
15 = phi  7,14,
return 15,
conditional branch(eq, to iindex=-1) 15,10,
goto (from iindex= 14 to iindex = 2),
17 = phi  16,10,
18 = binaryop(or) 13 , 17,
20 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getUserManager()Lcom/android/server/pm/UserManagerService; > 1 @26 exception:19,
22 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 7 @30 exception:21,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(IZ)[I > 20,22,23 @35 exception:24,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @0 exception:5,
conditional branch(eq, to iindex=-1) 2,6,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 7 @8 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 7,9 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 7,2 @16 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 7 @19 exception:14,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:20,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
26 = invokevirtual < Application, Landroid/util/IntArray, toArray()[I > 24 @37 exception:25,
monitorexit 22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @42 exception:36,
return 26,
return 6,
26 = new <Application,Landroid/util/ArraySet>@39,
invokespecial < Application, Landroid/util/ArraySet, <init>()V > 26 @41 exception:27,
36 = phi  35,10,
28 = arraylength 25,
conditional branch(ge, to iindex=-1) 36,28,
40 = new <Application,Ljava/util/ArrayList>@60,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 40 @62 exception:41,
42 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mGlobalLock, <Application,Lcom/android/server/wm/WindowManagerGlobalLock> > 1,
monitorenter 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, boostPriorityForLockedSection()V > @68 exception:43,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, boost()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
invokespecial < Application, Lcom/android/server/ThreadPriorityBooster, boost()V > 1 @13 exception:6,
return,
return,
46 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isGetTasksAllowed(Ljava/lang/String;II)Z > 1,44,9,7 @73 exception:45,
6 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, isCallerRecents(I)Z > 1,4 @0 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
11 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 9,3,4 @10 exception:10,
conditional branch(ne, to iindex=-1) 11,8,
goto (from iindex= 11 to iindex = 2),
12 = phi  7,8,
conditional branch(ne, to iindex=-1) 12,8,
15 = invokestatic < Application, Lcom/android/server/wm/ActivityTaskManagerService, checkPermission(Ljava/lang/String;II)I > 13,3,4 @24 exception:14,
conditional branch(ne, to iindex=-1) 15,8,
19 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @33 exception:18,
2 = invokestatic < Application, Landroid/app/ActivityThread, getPackageManager()Landroid/content/pm/IPackageManager; > @0 exception:1,
return 2,
21 = invokeinterface < Application, Landroid/content/pm/IPackageManager, isUidPrivileged(I)Z > 19,4 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,8,
22 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 22,8,
24 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @47 exception:23,
25 = conversion(J) 4,
26 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
28 = new <Application,[Ljava/lang/Object>@5716 ,
arraystore 28[8] = 24,
30 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 25 @61 exception:29,
arraystore 28[7] = 30,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 26,27,17,8,28 @67 exception:31,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
36 = phi  12,12,12,7,
40 = getstatic < Application, Lcom/android/server/wm/ProtoLogCache, WM_DEBUG_TASKS_enabled, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 40,8,
42 = invokestatic < Application, Ljava/lang/String, valueOf(Ljava/lang/Object;)Ljava/lang/String; > 2 @75 exception:41,
43 = conversion(J) 4,
44 = getstatic < Application, Lcom/android/internal/protolog/ProtoLogGroup, WM_DEBUG_TASKS, <Application,Lcom/android/internal/protolog/ProtoLogGroup> >,
46 = new <Application,[Ljava/lang/Object>@8516 ,
arraystore 46[8] = 42,
48 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 43 @89 exception:47,
arraystore 46[7] = 48,
invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, w(Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 44,45,17,8,46 @95 exception:49,
7 = invokestatic < Application, Lcom/android/internal/protolog/ProtoLogImpl, getSingleInstance()Lcom/android/internal/protolog/ProtoLogImpl; > @0 exception:6,
8 = getstatic < Application, Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel, WARN, <Application,Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel> >,
invokevirtual < Application, Lcom/android/internal/protolog/ProtoLogImpl, log(Lcom/android/internal/protolog/BaseProtoLogImpl$LogLevel;Lcom/android/internal/protolog/common/IProtoLogGroup;IILjava/lang/String;[Ljava/lang/Object;)V > 7,8,1,2,3,4,5 @11 exception:9,
return,
52 = phi  12,36,36,
return 52,
conditional branch(eq, to iindex=-1) 46,10,
48 = phi  10,47,
49 = binaryop(or) 18 , 48,
50 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRootWindowContainer, <Application,Lcom/android/server/wm/RootWindowContainer> > 1,
invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getRunningTasks(ILjava/util/List;IILandroid/util/ArraySet;I)V > 50,2,40,49,7,26,5 @87 exception:51,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/wm/RootWindowContainer, getDisplayContent(I)Lcom/android/server/wm/DisplayContent; > 1,7 @3 exception:9,
4 = invokevirtual < Application, Lcom/android/server/wm/WindowContainer, getChildCount()I > 1 @0 exception:3,
6 = binaryop(add) 4 , 5,
13 = phi  12,6,
conditional branch(lt, to iindex=-1) 13,7,
return 7,
conditional branch(ne, to iindex=-1) 10,11,
goto (from iindex= 7 to iindex = 2),
12 = phi  10,1,
14 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mTaskSupervisor, <Application,Lcom/android/server/wm/ActivityTaskSupervisor> > 1,
16 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskSupervisor, getRunningTasks()Lcom/android/server/wm/RunningTasks; > 14 @15 exception:15,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskSupervisor, mRunningTasks, <Application,Lcom/android/server/wm/RunningTasks> > 1,
return 2,
17 = getfield < Application, Lcom/android/server/wm/RootWindowContainer, mService, <Application,Lcom/android/server/wm/ActivityTaskManagerService> > 1,
19 = invokevirtual < Application, Lcom/android/server/wm/ActivityTaskManagerService, getRecentTasks()Lcom/android/server/wm/RecentTasks; > 17 @21 exception:18,
2 = getfield < Application, Lcom/android/server/wm/ActivityTaskManagerService, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/wm/RunningTasks, getTasks(ILjava/util/List;ILcom/android/server/wm/RecentTasks;Lcom/android/server/wm/WindowContainer;ILandroid/util/ArraySet;)V > 16,2,3,4,19,12,5,6 @30 exception:20,
conditional branch(gt, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/wm/RunningTasks, mTmpSortedSet, <Application,Ljava/util/TreeSet> > 1,
invokevirtual < Application, Ljava/util/TreeSet, clear()V > 10 @5 exception:11,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mCallingUid, <Primordial,I> > = 7,
13 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 7 @10 exception:12,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mUserId, <Primordial,I> > = 13,
15 = binaryop(and) 4 , 14,
conditional branch(ne, to iindex=-1) 15,16,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mCrossUser, <Primordial,Z> > = 18,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mProfileIds, <Application,Landroid/util/ArraySet> > = 8,
20 = binaryop(and) 4 , 19,
conditional branch(ne, to iindex=-1) 20,21,
goto (from iindex= 22 to iindex = 2),
22 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mAllowed, <Primordial,Z> > = 22,
24 = binaryop(and) 4 , 23,
conditional branch(ne, to iindex=-1) 24,17,
goto (from iindex= 28 to iindex = 2),
25 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mFilterOnlyVisibleRecents, <Primordial,Z> > = 25,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mRecentTasks, <Application,Lcom/android/server/wm/RecentTasks> > = 5,
27 = binaryop(and) 4 , 26,
conditional branch(ne, to iindex=-1) 27,26,
goto (from iindex= 35 to iindex = 2),
28 = phi  17,9,
putfield 1.< Application, Lcom/android/server/wm/RunningTasks, mKeepIntentExtra, <Primordial,Z> > = 28,
29 = new <Application,Lcom/android/server/wm/RunningTasks$$ExternalSyntheticLambda0>@60,
invokespecial < Application, Lcom/android/server/wm/RunningTasks$$ExternalSyntheticLambda0, <init>()V > 29 @62 exception:30,
31 = load_metadata: <Application,Lcom/android/server/wm/Task>, <Primordial,Ljava/lang/Class>,
33 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, __(Ljava/lang/Class;)Lcom/android/internal/util/function/pooled/ArgumentPlaceholder; > 31 @67 exception:32,
35 = invokestatic < Application, Lcom/android/internal/util/function/pooled/PooledLambda, obtainConsumer(Ljava/util/function/BiConsumer;Ljava/lang/Object;Lcom/android/internal/util/function/pooled/ArgumentPlaceholder;)Lcom/android/internal/util/function/pooled/PooledConsumer; > 29,1,33 @71 exception:34,
invokevirtual < Application, Lcom/android/server/wm/WindowContainer, forAllLeafTasks(Ljava/util/function/Consumer;Z)V > 6,35,9 @75 exception:36,
invokeinterface < Application, Lcom/android/internal/util/function/pooled/PooledConsumer, recycle()V > 35 @78 exception:37,
38 = getfield < Application, Lcom/android/server/wm/RunningTasks, mTmpSortedSet, <Application,Ljava/util/TreeSet> > 1,
40 = invokevirtual < Application, Ljava/util/TreeSet, iterator()Ljava/util/Iterator; > 38 @83 exception:39,
52 = phi  51,2,
42 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 40 @87 exception:41,
conditional branch(eq, to iindex=-1) 42,9,
conditional branch(ne, to iindex=-1) 52,9,
goto (from iindex= 54 to iindex = 17),
return,
return,
monitorexit 42,
invokestatic < Application, Lcom/android/server/wm/WindowManagerService, resetPriorityAfterLockedSection()V > @91 exception:61,
1 = getstatic < Application, Lcom/android/server/wm/WindowManagerService, sThreadPriorityBooster, <Application,Lcom/android/server/wm/WindowManagerThreadPriorityBooster> >,
invokevirtual < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, reset()V > 1 @2 exception:2,
3 = invokestatic < Application, Landroid/os/Process, myTid()I > @0 exception:2,
4 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mAnimationThreadId, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/wm/WindowManagerThreadPriorityBooster, mSurfaceAnimationThreadId, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,5,
goto (from iindex= 6 to iindex = 4),
return,
return,
return 40,","depth : 0
public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = p0.isCrossUserAllowed(v2, v1);
	UserManagerService v4 = p0.getUserManager();
	int v5 = UserHandle.getUserId(v1);
	[I v6 = v4.getProfileIds(v5, 1);
	ArraySet v6 = new ArraySet();
	ArrayList v7 = new ArrayList();
	WindowManagerService.boostPriorityForLockedSection();
	boolean v10 = p0.isGetTasksAllowed(""getTasks"", v2, v1);
	this.mRootWindowContainer.getRunningTasks(p1, v7, (((p2 | phiInstruction) | phiInstruction) | phiInstruction), v1, v6, p4);
	WindowManagerService.resetPriorityAfterLockedSection();
	return v7;
}
-----
depth : 1
public boolean isCrossUserAllowed(int p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 1
public void boostPriorityForLockedSection(){
	this.sThreadPriorityBooster.boost();
	return;
}
-----
depth : 2
public void boost(){
	p0.boost();
	return;
}
-----
depth : 1
public boolean isGetTasksAllowed(String p1, int p2, int p3){
	IPackageManager v4 = AppGlobals.getPackageManager();
	boolean v5 = v4.isUidPrivileged(p3);
	String v6 = String.valueOf(p1);
	Object v6 = new Object(2);
	Long v7 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v6);
	String v9 = String.valueOf(p1);
	Object v9 = new Object(2);
	Long v10 = Long.valueOf(p3);
	ProtoLogImpl.w(ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v9);
	return phiInstruction;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 2
public void w(IProtoLogGroup p1, int p2, int p3, String p4, Object p5){
	ProtoLogImpl v1 = ProtoLogImpl.getSingleInstance();
	v1.log(BaseProtoLogImpl$LogLevel.WARN, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public void getRunningTasks(int p1, List p2, int p3, int p4, ArraySet p5, int p6){
	DisplayContent v1 = p0.getDisplayContent(p6);
	RunningTasks v2 = this.mTaskSupervisor.getRunningTasks();
	RecentTasks v3 = this.mService.getRecentTasks();
	v2.getTasks(p1, p2, p3, v3, phiInstruction, p4, p5);
	return;
}
-----
depth : 2
public DisplayContent getDisplayContent(int p1){
	int v1 = p0.getChildCount();
	return 0;
}
-----
depth : 2
public RunningTasks getRunningTasks(){
	return this.mRunningTasks;
}
-----
depth : 2
public RecentTasks getRecentTasks(){
	return this.mRecentTasks;
}
-----
depth : 2
public void getTasks(int p1, List p2, int p3, RecentTasks p4, WindowContainer p5, int p6, ArraySet p7){
	this.mTmpSortedSet.clear();
	this.mCallingUid = p6;
	int v2 = UserHandle.getUserId(p6);
	this.mUserId = v2;
	this.mCrossUser = phiInstruction;
	this.mProfileIds = p7;
	this.mAllowed = phiInstruction;
	this.mFilterOnlyVisibleRecents = phiInstruction;
	this.mRecentTasks = p4;
	this.mKeepIntentExtra = phiInstruction;
	RunningTasks$$ExternalSyntheticLambda0 v2 = new RunningTasks$$ExternalSyntheticLambda0();
	ArgumentPlaceholder v4 = PooledLambda.__(Tas.class);
	PooledConsumer v5 = PooledLambda.obtainConsumer(v2, p0, v4);
	p5.forAllLeafTasks(v5, 0);
	v5.recycle();
	Iterator v8 = this.mTmpSortedSet.iterator();
	boolean v9 = v8.hasNext();
	return;
}
-----
depth : 1
public void resetPriorityAfterLockedSection(){
	this.sThreadPriorityBooster.reset();
	return;
}
-----
depth : 2
public void reset(){
	return;
}
-----
","public List getTasks(int p1, boolean p2, boolean p3, int p4){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	boolean v3 = phiInstruction;
	UserManagerService v6 = p0.getUserManager();
	int v7 = UserHandle.getUserId(v1);
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append(""getting profiles related to user "");
	StringBuilder v14 = v11.append(p1);
	String v15 = v11.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v15);
	long v17 = Binder.clearCallingIdentity();
	IntArray v18 = UserManagerService.getProfileIdsLU(p1, 0, p2);
	[I v19 = v18.toArray();
	Binder.restoreCallingIdentity(v17);
	[I v9 = v19;
	[I v8 = v9;
	ArraySet v21 = new ArraySet();
	ArrayList v23 = new ArrayList();
	WindowManagerThreadPriorityBooster.boost();
	IPackageManager v34 = ActivityThread.getPackageManager();
	IPackageManager v33 = v34;
	boolean v35 = v33.isUidPrivileged(v1);
	String v36 = String.valueOf(""getTasks"");
	Object v37 = new Object(2);
	Long v38 = Long.valueOf(v1);
	ProtoLogImpl v40 = ProtoLogImpl.getSingleInstance();
	v40.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -917215012, 4, 0, v37);
	String v42 = String.valueOf(""getTasks"");
	Object v43 = new Object(2);
	Long v44 = Long.valueOf(v1);
	ProtoLogImpl v46 = ProtoLogImpl.getSingleInstance();
	v46.log(BaseProtoLogImpl$LogLevel.WARN, ProtoLogGroup.WM_DEBUG_TASKS, -401029526, 4, 0, v43);
	boolean v29 = phiInstruction;
	int v50 = RootWindowContainer.getChildCount();
	DisplayContent v49 = 0;
	RunningTasks v51 = this.mRunningTasks;
	RecentTasks v52 = this.mRecentTasks;
	this.mTmpSortedSet.clear();
	this.mCallingUid = p4;
	int v55 = UserHandle.getUserId(p4);
	this.mUserId = v55;
	this.mCrossUser = phiInstruction;
	this.mProfileIds = p5;
	this.mAllowed = phiInstruction;
	this.mFilterOnlyVisibleRecents = phiInstruction;
	this.mRecentTasks = v52;
	this.mKeepIntentExtra = phiInstruction;
	RunningTasks$$ExternalSyntheticLambda0 v56 = new RunningTasks$$ExternalSyntheticLambda0();
	ArgumentPlaceholder v58 = PooledLambda.__(Tas.class);
	PooledConsumer v59 = PooledLambda.obtainConsumer(v56, RunningTasks, v58);
	phiInstruction.forAllLeafTasks(v59, 0);
	v59.recycle();
	Iterator v62 = this.mTmpSortedSet.iterator();
	boolean v63 = v62.hasNext();
	return v23;
}
","SYS_OR_SIG"

