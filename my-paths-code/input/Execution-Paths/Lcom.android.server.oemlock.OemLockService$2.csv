"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowed()Z","0","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 16,11,
goto (from iindex= 17 to iindex = 2),
21 = phi  20,11,
24 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 24,21 @38 exception:25,
return 21,","depth : 0
public boolean isOemUnlockAllowed(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v6 = v5.isOemUnlockAllowedByDevice();
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, phiInstruction);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowed()Z","1","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 12 @23 exception:13,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
conditional branch(eq, to iindex=-1) 16,11,
goto (from iindex= 17 to iindex = 2),
21 = phi  20,11,
24 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 24,21 @38 exception:25,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, setPersistentDataBlockOemUnlockAllowedBit(Z)V > 1,2 @0 exception:3,
return,
return 21,","depth : 0
public boolean isOemUnlockAllowed(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v6 = v5.isOemUnlockAllowedByDevice();
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, phiInstruction);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
depth : 1
public void -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(OemLockService p1, boolean p2){
	p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowed()Z","1","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 12 @23 exception:13,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
conditional branch(eq, to iindex=-1) 16,11,
21 = phi  20,11,
24 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 24,21 @38 exception:25,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, setPersistentDataBlockOemUnlockAllowedBit(Z)V > 1,2 @0 exception:3,
return,
return 21,","depth : 0
public boolean isOemUnlockAllowed(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v6 = v5.isOemUnlockAllowedByDevice();
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, phiInstruction);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
depth : 1
public void -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(OemLockService p1, boolean p2){
	p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowed()Z","2","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 11 to iindex = 9),
return,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 16,11,
goto (from iindex= 17 to iindex = 2),
21 = phi  20,11,
24 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 24,21 @38 exception:25,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, setPersistentDataBlockOemUnlockAllowedBit(Z)V > 1,2 @0 exception:3,
3 = load_metadata: <Application,Lcom/android/server/PersistentDataBlockManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = checkcast <Application,Lcom/android/server/PersistentDataBlockManagerInternal>5 <Application,Lcom/android/server/PersistentDataBlockManagerInternal>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
9 = instanceof 8 <Application,Lcom/android/server/oemlock/PersistentDataBlockLock>,
conditional branch(ne, to iindex=-1) 9,7,
10 = new <Application,Ljava/lang/StringBuilder>@16,
return,
return,
return 21,","depth : 0
public boolean isOemUnlockAllowed(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v6 = v5.isOemUnlockAllowedByDevice();
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, phiInstruction);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
depth : 1
public void -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(OemLockService p1, boolean p2){
	p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
	return;
}
-----
depth : 2
public void setPersistentDataBlockOemUnlockAllowedBit(boolean p1){
	Object v1 = LocalServices.getService(PersistentDataBlockManagerInterna.class);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Update OEM Unlock bit in pst partition to "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	int v6 = Slog.i(""OemLock"", v5);
	v1.forceOemUnlockEnabled(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowed()Z","2","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 5,6,
return,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 16,11,
goto (from iindex= 17 to iindex = 2),
21 = phi  20,11,
24 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 24,21 @38 exception:25,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, setPersistentDataBlockOemUnlockAllowedBit(Z)V > 1,2 @0 exception:3,
3 = load_metadata: <Application,Lcom/android/server/PersistentDataBlockManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = checkcast <Application,Lcom/android/server/PersistentDataBlockManagerInternal>5 <Application,Lcom/android/server/PersistentDataBlockManagerInternal>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
9 = instanceof 8 <Application,Lcom/android/server/oemlock/PersistentDataBlockLock>,
conditional branch(ne, to iindex=-1) 9,7,
10 = new <Application,Ljava/lang/StringBuilder>@16,
return,
return,
return 21,","depth : 0
public boolean isOemUnlockAllowed(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v6 = v5.isOemUnlockAllowedByDevice();
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, phiInstruction);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
depth : 1
public void -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(OemLockService p1, boolean p2){
	p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
	return;
}
-----
depth : 2
public void setPersistentDataBlockOemUnlockAllowedBit(boolean p1){
	Object v1 = LocalServices.getService(PersistentDataBlockManagerInterna.class);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Update OEM Unlock bit in pst partition to "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	int v6 = Slog.i(""OemLock"", v5);
	v1.forceOemUnlockEnabled(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowed()Z","2","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 11 to iindex = 9),
return,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 16,11,
goto (from iindex= 17 to iindex = 2),
21 = phi  20,11,
24 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 24,21 @38 exception:25,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, setPersistentDataBlockOemUnlockAllowedBit(Z)V > 1,2 @0 exception:3,
3 = load_metadata: <Application,Lcom/android/server/PersistentDataBlockManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = checkcast <Application,Lcom/android/server/PersistentDataBlockManagerInternal>5 <Application,Lcom/android/server/PersistentDataBlockManagerInternal>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
9 = instanceof 8 <Application,Lcom/android/server/oemlock/PersistentDataBlockLock>,
conditional branch(ne, to iindex=-1) 9,7,
return,
return,
return 21,","depth : 0
public boolean isOemUnlockAllowed(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	OemLock v5 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v6 = v5.isOemUnlockAllowedByDevice();
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, phiInstruction);
	Binder.restoreCallingIdentity(v2);
	return phiInstruction;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
depth : 1
public void -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(OemLockService p1, boolean p2){
	p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
	return;
}
-----
depth : 2
public void setPersistentDataBlockOemUnlockAllowedBit(boolean p1){
	Object v1 = LocalServices.getService(PersistentDataBlockManagerInterna.class);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowedByCarrier()Z","0","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageCarrierOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
return 10,","depth : 0
public boolean isOemUnlockAllowedByCarrier(){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowedByCarrier()Z","1","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageCarrierOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageCarrierOemUnlockPermission()V > 1 @0 exception:2,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
return 10,","depth : 0
public boolean isOemUnlockAllowedByCarrier(){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void -$$Nest$menforceManageCarrierOemUnlockPermission(OemLockService p1){
	p1.enforceManageCarrierOemUnlockPermission();
	return;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowedByCarrier()Z","2","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageCarrierOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageCarrierOemUnlockPermission()V > 1 @0 exception:2,
return,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
return 10,","depth : 0
public boolean isOemUnlockAllowedByCarrier(){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByCarrier();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void -$$Nest$menforceManageCarrierOemUnlockPermission(OemLockService p1){
	p1.enforceManageCarrierOemUnlockPermission();
	return;
}
-----
depth : 2
public void enforceManageCarrierOemUnlockPermission(){
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/oemlock/OemLockService$2","isDeviceOemUnlocked()Z","0","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
public boolean isDeviceOemUnlocked(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isDeviceOemUnlocked()Z","1","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
return,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
public boolean isDeviceOemUnlocked(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	return 0;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isDeviceOemUnlocked()Z","1","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
return,
conditional branch(ne, to iindex=-1) 11,12,
return 13,","depth : 0
public boolean isDeviceOemUnlocked(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	return 1;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isDeviceOemUnlocked()Z","2","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 11 to iindex = 9),
return,
return,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
public boolean isDeviceOemUnlocked(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	return 0;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isDeviceOemUnlocked()Z","2","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 11 to iindex = 9),
return,
return,
conditional branch(ne, to iindex=-1) 11,12,
return 13,","depth : 0
public boolean isDeviceOemUnlocked(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	return 1;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isDeviceOemUnlocked()Z","2","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceOemUnlockReadPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceOemUnlockReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 5,6,
return,
return,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
public boolean isDeviceOemUnlocked(){
	OemLockService.-$$Nest$menforceOemUnlockReadPermission(this.this$0);
	String v2 = SystemProperties.get(""ro.boot.flash.locked"");
	int v3 = v2.hashCode();
	boolean v4 = v2.equals(""0"");
	return 0;
}
-----
depth : 1
public void -$$Nest$menforceOemUnlockReadPermission(OemLockService p1){
	p1.enforceOemUnlockReadPermission();
	return;
}
-----
depth : 2
public void enforceOemUnlockReadPermission(){
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/oemlock/OemLockService$2","setOemUnlockAllowedByCarrier(Z[B)V","0","4 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageCarrierOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceUserIsAdmin(Lcom/android/server/oemlock/OemLockService;)V > 6 @7 exception:7,
10 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
12 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 10 @16 exception:11,
return,","depth : 0
public void setOemUnlockAllowedByCarrier(boolean p1, byte[] p2){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v3 = Binder.clearCallingIdentity();
	OemLock v4 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v4.setOemUnlockAllowedByCarrier(p1, p2);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","setOemUnlockAllowedByCarrier(Z[B)V","1","4 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageCarrierOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 4 @2 exception:5,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageCarrierOemUnlockPermission()V > 1 @0 exception:2,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceUserIsAdmin(Lcom/android/server/oemlock/OemLockService;)V > 6 @7 exception:7,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceUserIsAdmin()V > 1 @0 exception:2,
return,
10 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
12 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 10 @16 exception:11,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
return,","depth : 0
public void setOemUnlockAllowedByCarrier(boolean p1, byte[] p2){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v3 = Binder.clearCallingIdentity();
	OemLock v4 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v4.setOemUnlockAllowedByCarrier(p1, p2);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void -$$Nest$menforceManageCarrierOemUnlockPermission(OemLockService p1){
	p1.enforceManageCarrierOemUnlockPermission();
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserIsAdmin(OemLockService p1){
	p1.enforceUserIsAdmin();
	return;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","setOemUnlockAllowedByCarrier(Z[B)V","2","4 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageCarrierOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 4 @2 exception:5,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageCarrierOemUnlockPermission()V > 1 @0 exception:2,
return,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceUserIsAdmin(Lcom/android/server/oemlock/OemLockService;)V > 6 @7 exception:7,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceUserIsAdmin()V > 1 @0 exception:2,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 10,11,
return,
return,
10 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
12 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 10 @16 exception:11,
return,","depth : 0
public void setOemUnlockAllowedByCarrier(boolean p1, byte[] p2){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v3 = Binder.clearCallingIdentity();
	OemLock v4 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v4.setOemUnlockAllowedByCarrier(p1, p2);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void -$$Nest$menforceManageCarrierOemUnlockPermission(OemLockService p1){
	p1.enforceManageCarrierOemUnlockPermission();
	return;
}
-----
depth : 2
public void enforceManageCarrierOemUnlockPermission(){
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserIsAdmin(OemLockService p1){
	p1.enforceUserIsAdmin();
	return;
}
-----
depth : 2
public void enforceUserIsAdmin(){
	int v1 = UserHandle.getCallingUserId();
	long v2 = Binder.clearCallingIdentity();
	UserManager v3 = UserManager.get(this.mContext);
	boolean v4 = v3.isUserAdmin(v1);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowedByUser()Z","0","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageUserOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
return 10,","depth : 0
public boolean isOemUnlockAllowedByUser(){
	OemLockService.-$$Nest$menforceManageUserOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByDevice();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowedByUser()Z","1","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageUserOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageUserOemUnlockPermission()V > 1 @0 exception:2,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
return 10,","depth : 0
public boolean isOemUnlockAllowedByUser(){
	OemLockService.-$$Nest$menforceManageUserOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByDevice();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void -$$Nest$menforceManageUserOemUnlockPermission(OemLockService p1){
	p1.enforceManageUserOemUnlockPermission();
	return;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","isOemUnlockAllowedByUser()Z","2","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageUserOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageUserOemUnlockPermission()V > 1 @0 exception:2,
return,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
return 10,","depth : 0
public boolean isOemUnlockAllowedByUser(){
	OemLockService.-$$Nest$menforceManageUserOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v4 = v3.isOemUnlockAllowedByDevice();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void -$$Nest$menforceManageUserOemUnlockPermission(OemLockService p1){
	p1.enforceManageUserOemUnlockPermission();
	return;
}
-----
depth : 2
public void enforceManageUserOemUnlockPermission(){
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/oemlock/OemLockService$2","setOemUnlockAllowedByUser(Z)V","0","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageUserOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 6 @9 exception:7,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceUserIsAdmin(Lcom/android/server/oemlock/OemLockService;)V > 8 @14 exception:9,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$misOemUnlockAllowedByAdmin(Lcom/android/server/oemlock/OemLockService;)Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,5,
18 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
20 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 18 @31 exception:19,
conditional branch(eq, to iindex=-1) 22,5,
26 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
28 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 26 @43 exception:27,
30 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 30,2 @52 exception:31,
return,","depth : 0
public void setOemUnlockAllowedByUser(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	OemLockService.-$$Nest$menforceManageUserOemUnlockPermission(this.this$0);
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v4 = Binder.clearCallingIdentity();
	boolean v5 = OemLockService.-$$Nest$misOemUnlockAllowedByAdmin(this.this$0);
	OemLock v6 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v7 = v6.isOemUnlockAllowedByCarrier();
	OemLock v8 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v8.setOemUnlockAllowedByDevice(p1);
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, p1);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","setOemUnlockAllowedByUser(Z)V","1","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageUserOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageUserOemUnlockPermission()V > 1 @0 exception:2,
return,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceUserIsAdmin(Lcom/android/server/oemlock/OemLockService;)V > 8 @14 exception:9,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceUserIsAdmin()V > 1 @0 exception:2,
return,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$misOemUnlockAllowedByAdmin(Lcom/android/server/oemlock/OemLockService;)Z > 12 @23 exception:13,
3 = invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, isOemUnlockAllowedByAdmin()Z > 1 @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 14,5,
18 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
20 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 18 @31 exception:19,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
conditional branch(eq, to iindex=-1) 22,5,
26 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
28 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 26 @43 exception:27,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
30 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 30,2 @52 exception:31,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, setPersistentDataBlockOemUnlockAllowedBit(Z)V > 1,2 @0 exception:3,
return,
return,","depth : 0
public void setOemUnlockAllowedByUser(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	OemLockService.-$$Nest$menforceManageUserOemUnlockPermission(this.this$0);
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v4 = Binder.clearCallingIdentity();
	boolean v5 = OemLockService.-$$Nest$misOemUnlockAllowedByAdmin(this.this$0);
	OemLock v6 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v7 = v6.isOemUnlockAllowedByCarrier();
	OemLock v8 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v8.setOemUnlockAllowedByDevice(p1);
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, p1);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void -$$Nest$menforceManageUserOemUnlockPermission(OemLockService p1){
	p1.enforceManageUserOemUnlockPermission();
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserIsAdmin(OemLockService p1){
	p1.enforceUserIsAdmin();
	return;
}
-----
depth : 1
public boolean -$$Nest$misOemUnlockAllowedByAdmin(OemLockService p1){
	boolean v1 = p1.isOemUnlockAllowedByAdmin();
	return v1;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
depth : 1
public void -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(OemLockService p1, boolean p2){
	p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","setOemUnlockAllowedByUser(Z)V","2","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageUserOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageUserOemUnlockPermission()V > 1 @0 exception:2,
return,
return,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceUserIsAdmin(Lcom/android/server/oemlock/OemLockService;)V > 8 @14 exception:9,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceUserIsAdmin()V > 1 @0 exception:2,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 10,11,
return,
return,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$misOemUnlockAllowedByAdmin(Lcom/android/server/oemlock/OemLockService;)Z > 12 @23 exception:13,
3 = invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, isOemUnlockAllowedByAdmin()Z > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mContext, <Application,Landroid/content/Context> > 1,
5 = getstatic < Application, Landroid/os/UserHandle, SYSTEM, <Application,Landroid/os/UserHandle> >,
10 = binaryop(xor) 8 , 9,
return 10,
return 3,
conditional branch(eq, to iindex=-1) 14,5,
18 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
20 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 18 @31 exception:19,
conditional branch(eq, to iindex=-1) 22,5,
26 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
28 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 26 @43 exception:27,
30 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 30,2 @52 exception:31,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, setPersistentDataBlockOemUnlockAllowedBit(Z)V > 1,2 @0 exception:3,
3 = load_metadata: <Application,Lcom/android/server/PersistentDataBlockManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = checkcast <Application,Lcom/android/server/PersistentDataBlockManagerInternal>5 <Application,Lcom/android/server/PersistentDataBlockManagerInternal>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
9 = instanceof 8 <Application,Lcom/android/server/oemlock/PersistentDataBlockLock>,
conditional branch(ne, to iindex=-1) 9,7,
10 = new <Application,Ljava/lang/StringBuilder>@16,
return,
return,
return,","depth : 0
public void setOemUnlockAllowedByUser(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	OemLockService.-$$Nest$menforceManageUserOemUnlockPermission(this.this$0);
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v4 = Binder.clearCallingIdentity();
	boolean v5 = OemLockService.-$$Nest$misOemUnlockAllowedByAdmin(this.this$0);
	OemLock v6 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v7 = v6.isOemUnlockAllowedByCarrier();
	OemLock v8 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v8.setOemUnlockAllowedByDevice(p1);
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, p1);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void -$$Nest$menforceManageUserOemUnlockPermission(OemLockService p1){
	p1.enforceManageUserOemUnlockPermission();
	return;
}
-----
depth : 2
public void enforceManageUserOemUnlockPermission(){
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserIsAdmin(OemLockService p1){
	p1.enforceUserIsAdmin();
	return;
}
-----
depth : 2
public void enforceUserIsAdmin(){
	int v1 = UserHandle.getCallingUserId();
	long v2 = Binder.clearCallingIdentity();
	UserManager v3 = UserManager.get(this.mContext);
	boolean v4 = v3.isUserAdmin(v1);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public boolean -$$Nest$misOemUnlockAllowedByAdmin(OemLockService p1){
	boolean v1 = p1.isOemUnlockAllowedByAdmin();
	return v1;
}
-----
depth : 2
public boolean isOemUnlockAllowedByAdmin(){
	UserManager v1 = UserManager.get(this.mContext);
	boolean v2 = v1.hasUserRestriction(""no_factory_reset"", UserHandle.SYSTEM);
	return (v2 ^ 1);
}
-----
depth : 1
public void -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(OemLockService p1, boolean p2){
	p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
	return;
}
-----
depth : 2
public void setPersistentDataBlockOemUnlockAllowedBit(boolean p1){
	Object v1 = LocalServices.getService(PersistentDataBlockManagerInterna.class);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""Update OEM Unlock bit in pst partition to "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	int v6 = Slog.i(""OemLock"", v5);
	v1.forceOemUnlockEnabled(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","setOemUnlockAllowedByUser(Z)V","2","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageUserOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageUserOemUnlockPermission()V > 1 @0 exception:2,
return,
return,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceUserIsAdmin(Lcom/android/server/oemlock/OemLockService;)V > 8 @14 exception:9,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceUserIsAdmin()V > 1 @0 exception:2,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 10,11,
return,
return,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$misOemUnlockAllowedByAdmin(Lcom/android/server/oemlock/OemLockService;)Z > 12 @23 exception:13,
3 = invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, isOemUnlockAllowedByAdmin()Z > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mContext, <Application,Landroid/content/Context> > 1,
5 = getstatic < Application, Landroid/os/UserHandle, SYSTEM, <Application,Landroid/os/UserHandle> >,
10 = binaryop(xor) 8 , 9,
return 10,
return 3,
conditional branch(eq, to iindex=-1) 14,5,
18 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
20 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 18 @31 exception:19,
conditional branch(eq, to iindex=-1) 22,5,
26 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
28 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 26 @43 exception:27,
30 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 30,2 @52 exception:31,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, setPersistentDataBlockOemUnlockAllowedBit(Z)V > 1,2 @0 exception:3,
3 = load_metadata: <Application,Lcom/android/server/PersistentDataBlockManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = checkcast <Application,Lcom/android/server/PersistentDataBlockManagerInternal>5 <Application,Lcom/android/server/PersistentDataBlockManagerInternal>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
9 = instanceof 8 <Application,Lcom/android/server/oemlock/PersistentDataBlockLock>,
conditional branch(ne, to iindex=-1) 9,7,
return,
return,
return,","depth : 0
public void setOemUnlockAllowedByUser(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	OemLockService.-$$Nest$menforceManageUserOemUnlockPermission(this.this$0);
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v4 = Binder.clearCallingIdentity();
	boolean v5 = OemLockService.-$$Nest$misOemUnlockAllowedByAdmin(this.this$0);
	OemLock v6 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v7 = v6.isOemUnlockAllowedByCarrier();
	OemLock v8 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v8.setOemUnlockAllowedByDevice(p1);
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, p1);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void -$$Nest$menforceManageUserOemUnlockPermission(OemLockService p1){
	p1.enforceManageUserOemUnlockPermission();
	return;
}
-----
depth : 2
public void enforceManageUserOemUnlockPermission(){
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserIsAdmin(OemLockService p1){
	p1.enforceUserIsAdmin();
	return;
}
-----
depth : 2
public void enforceUserIsAdmin(){
	int v1 = UserHandle.getCallingUserId();
	long v2 = Binder.clearCallingIdentity();
	UserManager v3 = UserManager.get(this.mContext);
	boolean v4 = v3.isUserAdmin(v1);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public boolean -$$Nest$misOemUnlockAllowedByAdmin(OemLockService p1){
	boolean v1 = p1.isOemUnlockAllowedByAdmin();
	return v1;
}
-----
depth : 2
public boolean isOemUnlockAllowedByAdmin(){
	UserManager v1 = UserManager.get(this.mContext);
	boolean v2 = v1.hasUserRestriction(""no_factory_reset"", UserHandle.SYSTEM);
	return (v2 ^ 1);
}
-----
depth : 1
public void -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(OemLockService p1, boolean p2){
	p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
	return;
}
-----
depth : 2
public void setPersistentDataBlockOemUnlockAllowedBit(boolean p1){
	Object v1 = LocalServices.getService(PersistentDataBlockManagerInterna.class);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","setOemUnlockAllowedByUser(Z)V","2","4 = invokestatic < Application, Landroid/app/ActivityManager, isUserAMonkey()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageUserOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageUserOemUnlockPermission()V > 1 @0 exception:2,
return,
return,
8 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceUserIsAdmin(Lcom/android/server/oemlock/OemLockService;)V > 8 @14 exception:9,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceUserIsAdmin()V > 1 @0 exception:2,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 10,11,
return,
return,
12 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
14 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$misOemUnlockAllowedByAdmin(Lcom/android/server/oemlock/OemLockService;)Z > 12 @23 exception:13,
3 = invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, isOemUnlockAllowedByAdmin()Z > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mContext, <Application,Landroid/content/Context> > 1,
5 = getstatic < Application, Landroid/os/UserHandle, SYSTEM, <Application,Landroid/os/UserHandle> >,
10 = binaryop(xor) 8 , 9,
return 10,
return 3,
conditional branch(eq, to iindex=-1) 14,5,
18 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
20 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 18 @31 exception:19,
conditional branch(eq, to iindex=-1) 22,5,
26 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
28 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 26 @43 exception:27,
30 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(Lcom/android/server/oemlock/OemLockService;Z)V > 30,2 @52 exception:31,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, setPersistentDataBlockOemUnlockAllowedBit(Z)V > 1,2 @0 exception:3,
3 = load_metadata: <Application,Lcom/android/server/PersistentDataBlockManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = checkcast <Application,Lcom/android/server/PersistentDataBlockManagerInternal>5 <Application,Lcom/android/server/PersistentDataBlockManagerInternal>,
conditional branch(eq, to iindex=-1) 6,7,
return,
return,
return,","depth : 0
public void setOemUnlockAllowedByUser(boolean p1){
	boolean v1 = ActivityManager.isUserAMonkey();
	OemLockService.-$$Nest$menforceManageUserOemUnlockPermission(this.this$0);
	OemLockService.-$$Nest$menforceUserIsAdmin(this.this$0);
	long v4 = Binder.clearCallingIdentity();
	boolean v5 = OemLockService.-$$Nest$misOemUnlockAllowedByAdmin(this.this$0);
	OemLock v6 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	boolean v7 = v6.isOemUnlockAllowedByCarrier();
	OemLock v8 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	v8.setOemUnlockAllowedByDevice(p1);
	OemLockService.-$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(this.this$0, p1);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void -$$Nest$menforceManageUserOemUnlockPermission(OemLockService p1){
	p1.enforceManageUserOemUnlockPermission();
	return;
}
-----
depth : 2
public void enforceManageUserOemUnlockPermission(){
	return;
}
-----
depth : 1
public void -$$Nest$menforceUserIsAdmin(OemLockService p1){
	p1.enforceUserIsAdmin();
	return;
}
-----
depth : 2
public void enforceUserIsAdmin(){
	int v1 = UserHandle.getCallingUserId();
	long v2 = Binder.clearCallingIdentity();
	UserManager v3 = UserManager.get(this.mContext);
	boolean v4 = v3.isUserAdmin(v1);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public boolean -$$Nest$misOemUnlockAllowedByAdmin(OemLockService p1){
	boolean v1 = p1.isOemUnlockAllowedByAdmin();
	return v1;
}
-----
depth : 2
public boolean isOemUnlockAllowedByAdmin(){
	UserManager v1 = UserManager.get(this.mContext);
	boolean v2 = v1.hasUserRestriction(""no_factory_reset"", UserHandle.SYSTEM);
	return (v2 ^ 1);
}
-----
depth : 1
public void -$$Nest$msetPersistentDataBlockOemUnlockAllowedBit(OemLockService p1, boolean p2){
	p1.setPersistentDataBlockOemUnlockAllowedBit(p2);
	return;
}
-----
depth : 2
public void setPersistentDataBlockOemUnlockAllowedBit(boolean p1){
	Object v1 = LocalServices.getService(PersistentDataBlockManagerInterna.class);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/oemlock/OemLockService$2","getLockName()Ljava/lang/String;","0","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageCarrierOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
return 10,","depth : 0
public String getLockName(){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	String v4 = v3.getLockName();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","getLockName()Ljava/lang/String;","1","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageCarrierOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageCarrierOemUnlockPermission()V > 1 @0 exception:2,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
2 = getfield < Application, Lcom/android/server/oemlock/OemLockService, mOemLock, <Application,Lcom/android/server/oemlock/OemLock> > 1,
return 2,
return 10,","depth : 0
public String getLockName(){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	String v4 = v3.getLockName();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void -$$Nest$menforceManageCarrierOemUnlockPermission(OemLockService p1){
	p1.enforceManageCarrierOemUnlockPermission();
	return;
}
-----
depth : 1
public OemLock -$$Nest$fgetmOemLock(OemLockService p1){
	return this.mOemLock;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/oemlock/OemLockService$2","getLockName()Ljava/lang/String;","2","2 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$menforceManageCarrierOemUnlockPermission(Lcom/android/server/oemlock/OemLockService;)V > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/oemlock/OemLockService, enforceManageCarrierOemUnlockPermission()V > 1 @0 exception:2,
return,
return,
6 = getfield < Application, Lcom/android/server/oemlock/OemLockService$2, this$0, <Application,Lcom/android/server/oemlock/OemLockService> > 1,
8 = invokestatic < Application, Lcom/android/server/oemlock/OemLockService, -$$Nest$fgetmOemLock(Lcom/android/server/oemlock/OemLockService;)Lcom/android/server/oemlock/OemLock; > 6 @11 exception:7,
return 10,","depth : 0
public String getLockName(){
	OemLockService.-$$Nest$menforceManageCarrierOemUnlockPermission(this.this$0);
	long v2 = Binder.clearCallingIdentity();
	OemLock v3 = OemLockService.-$$Nest$fgetmOemLock(this.this$0);
	String v4 = v3.getLockName();
	Binder.restoreCallingIdentity(v2);
	return v4;
}
-----
depth : 1
public void -$$Nest$menforceManageCarrierOemUnlockPermission(OemLockService p1){
	p1.enforceManageCarrierOemUnlockPermission();
	return;
}
-----
depth : 2
public void enforceManageCarrierOemUnlockPermission(){
	return;
}
-----
","SYS_OR_SIG"

