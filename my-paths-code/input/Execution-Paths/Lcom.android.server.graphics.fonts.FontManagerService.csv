"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","0","3 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @0 exception:2,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @8 exception:6,
8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
","public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","1","3 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @0 exception:2,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @8 exception:6,
8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(ne, to iindex=-1) 2,3,
11 = invokestatic < Application, Landroid/graphics/fonts/SystemFonts, getSystemPreinstalledFontConfig()Landroid/text/FontConfig; > @4 exception:10,
return 11,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
depth : 1
public FontConfig getSystemFontConfig(){
	FontConfig v1 = SystemFonts.getSystemPreinstalledFontConfig();
	return v1;
}
-----
","public FontConfig getFontConfig(){
	FontConfig v4 = SystemFonts.getSystemPreinstalledFontConfig();
	FontConfig v3 = v4;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","1","3 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @0 exception:2,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @8 exception:6,
8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
7 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getSystemFontConfig()Landroid/text/FontConfig; > 5 @14 exception:6,
monitorexit 4,
return 7,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
depth : 1
public FontConfig getSystemFontConfig(){
	FontConfig v1 = this.mUpdatableFontDir.getSystemFontConfig();
	return v1;
}
-----
","public FontConfig getFontConfig(){
	FontConfig v4 = this.mUpdatableFontDir.getSystemFontConfig();
	FontConfig v3 = v4;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","2","3 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @0 exception:2,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @8 exception:6,
8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(ne, to iindex=-1) 2,3,
11 = invokestatic < Application, Landroid/graphics/fonts/SystemFonts, getSystemPreinstalledFontConfig()Landroid/text/FontConfig; > @4 exception:10,
8 = invokestatic < Application, Landroid/graphics/fonts/SystemFonts, getSystemFontConfigInternal(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Map;JI)Landroid/text/FontConfig; > 1,2,3,4,5,6,5 @12 exception:7,
return 8,
return 11,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
depth : 1
public FontConfig getSystemFontConfig(){
	FontConfig v1 = SystemFonts.getSystemPreinstalledFontConfig();
	return v1;
}
-----
depth : 2
public FontConfig getSystemPreinstalledFontConfig(){
	FontConfig v1 = SystemFonts.getSystemFontConfigInternal(""/system/etc/fonts.xml"", ""/system/fonts/"", ""/product/etc/fonts_customization.xml"", ""/product/fonts/"", 0, 0, 0);
	return v1;
}
-----
","public FontConfig getFontConfig(){
	FontConfig v5 = SystemFonts.getSystemFontConfigInternal(""/system/etc/fonts.xml"", ""/system/fonts/"", ""/product/etc/fonts_customization.xml"", ""/product/fonts/"", 0, 0, 0);
	FontConfig v4 = v5;
	FontConfig v3 = v4;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","2","3 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @0 exception:2,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @8 exception:6,
8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
7 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getSystemFontConfig()Landroid/text/FontConfig; > 5 @14 exception:6,
2 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigSupplier, <Application,Ljava/util/function/Function> > 1,
4 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getPostScriptMap()Ljava/util/Map; > 1 @2 exception:3,
6 = invokeinterface < Application, Ljava/util/function/Function, apply(Ljava/lang/Object;)Ljava/lang/Object; > 2,4 @6 exception:5,
7 = checkcast <Application,Landroid/text/FontConfig>6 <Application,Landroid/text/FontConfig>,
9 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, readPersistentConfig()Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config; > 1 @12 exception:8,
10 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 9,
11 = new <Application,Ljava/util/ArrayList>@18,
13 = invokevirtual < Application, Landroid/text/FontConfig, getFontFamilies()Ljava/util/List; > 7 @20 exception:12,
15 = invokeinterface < Application, Ljava/util/List, size()I > 13 @24 exception:14,
17 = invokeinterface < Application, Ljava/util/List, size()I > 10 @28 exception:16,
18 = binaryop(add) 15 , 17,
invokespecial < Application, Ljava/util/ArrayList, <init>(I)V > 11,18 @33 exception:19,
21 = invokevirtual < Application, Landroid/text/FontConfig, getFontFamilies()Ljava/util/List; > 7 @36 exception:20,
23 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 11,21 @40 exception:22,
38 = phi  37,24,
26 = invokeinterface < Application, Ljava/util/List, size()I > 10 @44 exception:25,
conditional branch(ge, to iindex=-1) 38,26,
42 = new <Application,Landroid/text/FontConfig>@68,
44 = invokevirtual < Application, Landroid/text/FontConfig, getAliases()Ljava/util/List; > 7 @70 exception:43,
45 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
46 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
invokespecial < Application, Landroid/text/FontConfig, <init>(Ljava/util/List;Ljava/util/List;JI)V > 42,11,44,45,46 @79 exception:47,
return 42,
monitorexit 4,
return 7,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
depth : 1
public FontConfig getSystemFontConfig(){
	FontConfig v1 = this.mUpdatableFontDir.getSystemFontConfig();
	return v1;
}
-----
depth : 2
public FontConfig getSystemFontConfig(){
	Map v1 = p0.getPostScriptMap();
	Object v2 = this.mConfigSupplier.apply(v1);
	PersistentSystemFontConfig$Config v3 = p0.readPersistentConfig();
	ArrayList v3 = new ArrayList((v5 + v6));
	List v4 = v2.getFontFamilies();
	int v5 = v4.size();
	int v6 = PersistentSystemFontConfig$Config.fontFamilies.size();
	List v8 = v2.getFontFamilies();
	boolean v9 = v3.addAll(v8);
	int v10 = PersistentSystemFontConfig$Config.fontFamilies.size();
	FontConfig v10 = new FontConfig(v3,v11,this.mLastModifiedMillis,this.mConfigVersion);
	List v11 = v2.getAliases();
	return v10;
}
-----
","public FontConfig getFontConfig(){
	Map v5 = UpdatableFontDir.getPostScriptMap();
	Object v6 = this.mConfigSupplier.apply(v5);
	PersistentSystemFontConfig$Config v7 = UpdatableFontDir.readPersistentConfig();
	ArrayList v8 = new ArrayList((v10 + v11));
	List v9 = v6.getFontFamilies();
	int v10 = v9.size();
	int v11 = PersistentSystemFontConfig$Config.fontFamilies.size();
	List v13 = v6.getFontFamilies();
	boolean v14 = v8.addAll(v13);
	int v15 = PersistentSystemFontConfig$Config.fontFamilies.size();
	FontConfig v16 = new FontConfig(v8,v17,this.mLastModifiedMillis,this.mConfigVersion);
	List v17 = v6.getAliases();
	FontConfig v4 = v16;
	FontConfig v3 = v4;
	return v3;
}
","SYS_OR_SIG"

"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","0","5 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgumentNonnegative(I)I > 3 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @6 exception:8,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 9,10,11 @14 exception:12,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
14 = getCaughtException ,
18 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 15,16,14 @30 exception:17,
20 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, getErrorCode()I > 14 @33 exception:19,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @37 exception:28,
return 20,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	int v6 = Slog.e(""FontManagerService"", ""Failed to update font family"", caughtException);
	int v7 = caughtException.getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v7;
}
-----
","public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	int v7 = caughtException.getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v7;
}
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","1","5 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgumentNonnegative(I)I > 3 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @6 exception:8,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 9,10,11 @14 exception:12,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
monitorexit 10,
return,
14 = getCaughtException ,
18 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 15,16,14 @30 exception:17,
20 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, getErrorCode()I > 14 @33 exception:19,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, mErrorCode, <Primordial,I> > 1,
return 2,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @37 exception:28,
return 20,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	int v6 = Slog.e(""FontManagerService"", ""Failed to update font family"", caughtException);
	int v7 = caughtException.getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v7;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
depth : 1
public int getErrorCode(){
	return this.mErrorCode;
}
-----
","public int updateFontFamily(List p1, int p2){
	int v6 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p1);
	FontManagerService.updateSerializedFontMap();
	int v10 = this.mErrorCode;
	FontManagerService.closeFileDescriptors(p1);
	return v10;
}
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","1","5 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgumentNonnegative(I)I > 3 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @6 exception:8,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 9,10,11 @14 exception:12,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
monitorexit 10,
return,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @21 exception:30,
return 29,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	FontManagerService.closeFileDescriptors(p1);
	return 0;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
","public int updateFontFamily(List p1, int p2){
	int v6 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p1);
	FontManagerService.updateSerializedFontMap();
	FontManagerService.closeFileDescriptors(p1);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","2","5 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgumentNonnegative(I)I > 3 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @6 exception:8,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 9,10,11 @14 exception:12,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
2 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
4 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 2 @0 exception:3,
6 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
36 = new <Application,Landroid/util/ArrayMap>@60,
37 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
invokespecial < Application, Landroid/util/ArrayMap, <init>(Landroid/util/ArrayMap;)V > 36,37 @64 exception:38,
40 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, readPersistentConfig()Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config; > 1 @67 exception:39,
41 = new <Application,Ljava/util/HashMap>@71,
invokespecial < Application, Ljava/util/HashMap, <init>()V > 41 @73 exception:42,
56 = phi  55,8,
43 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 40,
45 = invokeinterface < Application, Ljava/util/List, size()I > 43 @79 exception:44,
conditional branch(ge, to iindex=-1) 56,45,
59 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
61 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 2 @105 exception:60,
63 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 61 @109 exception:62,
conditional branch(eq, to iindex=-1) 63,8,
87 = invokeinterface < Application, Ljava/util/Map, values()Ljava/util/Collection; > 41 @158 exception:86,
89 = invokeinterface < Application, Ljava/util/Collection, iterator()Ljava/util/Iterator; > 87 @162 exception:88,
91 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 89 @166 exception:90,
conditional branch(eq, to iindex=-1) 91,8,
100 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mCurrentTimeSupplier, <Application,Ljava/util/function/Supplier> > 1,
102 = invokeinterface < Application, Ljava/util/function/Supplier, get()Ljava/lang/Object; > 100 @197 exception:101,
103 = checkcast <Application,Ljava/lang/Long>102 <Application,Ljava/lang/Long>,
105 = invokevirtual < Application, Ljava/lang/Long, longValue()J > 103 @203 exception:104,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > = 105,
106 = new <Application,Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config>@209,
invokespecial < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, <init>()V > 106 @211 exception:107,
108 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
putfield 106.< Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, lastModifiedMillis, <Primordial,J> > = 108,
109 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
111 = invokevirtual < Application, Landroid/util/ArrayMap, values()Ljava/util/Collection; > 109 @220 exception:110,
113 = invokeinterface < Application, Ljava/util/Collection, iterator()Ljava/util/Iterator; > 111 @224 exception:112,
115 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 113 @228 exception:114,
conditional branch(eq, to iindex=-1) 115,8,
130 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 106,
132 = invokeinterface < Application, Ljava/util/Map, values()Ljava/util/Collection; > 41 @256 exception:131,
134 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 130,132 @260 exception:133,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, writePersistentConfig(Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config;)V > 1,106 @263 exception:135,
136 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
137 = binaryop(add) 136 , 7,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > = 137,
return,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
3 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, serializeFontMap(Landroid/text/FontConfig;)Landroid/os/SharedMemory; > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, serializeSystemServerFontMap()Landroid/os/SharedMemory; > @10 exception:7,
9 = phi  5,8,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, setSerializedFontMap(Landroid/os/SharedMemory;)V > 1,9 @14 exception:12,
return,
monitorexit 10,
return,
14 = getCaughtException ,
18 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 15,16,14 @30 exception:17,
20 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, getErrorCode()I > 14 @33 exception:19,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @37 exception:28,
return 20,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	int v6 = Slog.e(""FontManagerService"", ""Failed to update font family"", caughtException);
	int v7 = caughtException.getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v7;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
depth : 2
public int getConfigVersion(){
	return this.mConfigVersion;
}
-----
depth : 2
public void update(List p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	ArrayMap v2 = new ArrayMap(this.mFontFileInfoMap);
	PersistentSystemFontConfig$Config v4 = p0.readPersistentConfig();
	HashMap v4 = new HashMap();
	int v6 = PersistentSystemFontConfig$Config.fontFamilies.size();
	Iterator v7 = p1.iterator();
	boolean v8 = v7.hasNext();
	Collection v9 = v4.values();
	Iterator v10 = v9.iterator();
	boolean v11 = v10.hasNext();
	Object v12 = this.mCurrentTimeSupplier.get();
	long v13 = v12.longValue();
	this.mLastModifiedMillis = v13;
	PersistentSystemFontConfig$Config v13 = new PersistentSystemFontConfig$Config();
	PersistentSystemFontConfig$Config.lastModifiedMillis = this.mLastModifiedMillis;
	Collection v15 = this.mFontFileInfoMap.values();
	Iterator v16 = v15.iterator();
	boolean v17 = v16.hasNext();
	Collection v18 = v4.values();
	boolean v19 = PersistentSystemFontConfig$Config.fontFamilies.addAll(v18);
	p0.writePersistentConfig(v13);
	this.mConfigVersion = (this.mConfigVersion + 1);
	return;
}
-----
depth : 2
public void updateSerializedFontMap(){
	FontConfig v1 = p0.getSystemFontConfig();
	SharedMemory v2 = FontManagerService.serializeFontMap(v1);
	SharedMemory v3 = FontManagerService.serializeSystemServerFontMap();
	p0.setSerializedFontMap(phiInstruction);
	return;
}
-----
","public int updateFontFamily(List p1, int p2){
	int v6 = this.mConfigVersion;
	Iterator v8 = p2.iterator();
	boolean v9 = v8.hasNext();
	ArrayMap v10 = new ArrayMap(this.mFontFileInfoMap);
	PersistentSystemFontConfig$Config v12 = UpdatableFontDir.readPersistentConfig();
	HashMap v13 = new HashMap();
	int v15 = PersistentSystemFontConfig$Config.fontFamilies.size();
	Iterator v16 = p2.iterator();
	boolean v17 = v16.hasNext();
	Collection v18 = v13.values();
	Iterator v19 = v18.iterator();
	boolean v20 = v19.hasNext();
	Object v21 = this.mCurrentTimeSupplier.get();
	long v22 = v21.longValue();
	this.mLastModifiedMillis = v22;
	PersistentSystemFontConfig$Config v23 = new PersistentSystemFontConfig$Config();
	PersistentSystemFontConfig$Config.lastModifiedMillis = this.mLastModifiedMillis;
	Collection v25 = this.mFontFileInfoMap.values();
	Iterator v26 = v25.iterator();
	boolean v27 = v26.hasNext();
	Collection v28 = v13.values();
	boolean v29 = PersistentSystemFontConfig$Config.fontFamilies.addAll(v28);
	UpdatableFontDir.writePersistentConfig(v23);
	this.mConfigVersion = (this.mConfigVersion + 1);
	FontConfig v32 = FontManagerService.getSystemFontConfig();
	SharedMemory v33 = FontManagerService.serializeFontMap(v32);
	SharedMemory v34 = FontManagerService.serializeSystemServerFontMap();
	FontManagerService.setSerializedFontMap(phiInstruction);
	int v37 = caughtException.getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v37;
}
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","2","5 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgumentNonnegative(I)I > 3 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @6 exception:8,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 9,10,11 @14 exception:12,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
2 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
4 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 2 @0 exception:3,
6 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
36 = new <Application,Landroid/util/ArrayMap>@60,
37 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
invokespecial < Application, Landroid/util/ArrayMap, <init>(Landroid/util/ArrayMap;)V > 36,37 @64 exception:38,
40 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, readPersistentConfig()Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config; > 1 @67 exception:39,
41 = new <Application,Ljava/util/HashMap>@71,
invokespecial < Application, Ljava/util/HashMap, <init>()V > 41 @73 exception:42,
56 = phi  55,8,
43 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 40,
45 = invokeinterface < Application, Ljava/util/List, size()I > 43 @79 exception:44,
conditional branch(ge, to iindex=-1) 56,45,
59 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
61 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 2 @105 exception:60,
63 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 61 @109 exception:62,
conditional branch(eq, to iindex=-1) 63,8,
87 = invokeinterface < Application, Ljava/util/Map, values()Ljava/util/Collection; > 41 @158 exception:86,
89 = invokeinterface < Application, Ljava/util/Collection, iterator()Ljava/util/Iterator; > 87 @162 exception:88,
91 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 89 @166 exception:90,
conditional branch(eq, to iindex=-1) 91,8,
100 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mCurrentTimeSupplier, <Application,Ljava/util/function/Supplier> > 1,
102 = invokeinterface < Application, Ljava/util/function/Supplier, get()Ljava/lang/Object; > 100 @197 exception:101,
103 = checkcast <Application,Ljava/lang/Long>102 <Application,Ljava/lang/Long>,
105 = invokevirtual < Application, Ljava/lang/Long, longValue()J > 103 @203 exception:104,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > = 105,
106 = new <Application,Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config>@209,
invokespecial < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, <init>()V > 106 @211 exception:107,
108 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
putfield 106.< Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, lastModifiedMillis, <Primordial,J> > = 108,
109 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
111 = invokevirtual < Application, Landroid/util/ArrayMap, values()Ljava/util/Collection; > 109 @220 exception:110,
113 = invokeinterface < Application, Ljava/util/Collection, iterator()Ljava/util/Iterator; > 111 @224 exception:112,
115 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 113 @228 exception:114,
conditional branch(eq, to iindex=-1) 115,8,
130 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 106,
132 = invokeinterface < Application, Ljava/util/Map, values()Ljava/util/Collection; > 41 @256 exception:131,
134 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 130,132 @260 exception:133,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, writePersistentConfig(Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config;)V > 1,106 @263 exception:135,
136 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
137 = binaryop(add) 136 , 7,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > = 137,
return,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
3 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, serializeFontMap(Landroid/text/FontConfig;)Landroid/os/SharedMemory; > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
9 = phi  5,8,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, setSerializedFontMap(Landroid/os/SharedMemory;)V > 1,9 @14 exception:12,
return,
monitorexit 10,
return,
14 = getCaughtException ,
18 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 15,16,14 @30 exception:17,
20 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, getErrorCode()I > 14 @33 exception:19,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @37 exception:28,
return 20,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	int v6 = Slog.e(""FontManagerService"", ""Failed to update font family"", caughtException);
	int v7 = caughtException.getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v7;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
depth : 2
public int getConfigVersion(){
	return this.mConfigVersion;
}
-----
depth : 2
public void update(List p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	ArrayMap v2 = new ArrayMap(this.mFontFileInfoMap);
	PersistentSystemFontConfig$Config v4 = p0.readPersistentConfig();
	HashMap v4 = new HashMap();
	int v6 = PersistentSystemFontConfig$Config.fontFamilies.size();
	Iterator v7 = p1.iterator();
	boolean v8 = v7.hasNext();
	Collection v9 = v4.values();
	Iterator v10 = v9.iterator();
	boolean v11 = v10.hasNext();
	Object v12 = this.mCurrentTimeSupplier.get();
	long v13 = v12.longValue();
	this.mLastModifiedMillis = v13;
	PersistentSystemFontConfig$Config v13 = new PersistentSystemFontConfig$Config();
	PersistentSystemFontConfig$Config.lastModifiedMillis = this.mLastModifiedMillis;
	Collection v15 = this.mFontFileInfoMap.values();
	Iterator v16 = v15.iterator();
	boolean v17 = v16.hasNext();
	Collection v18 = v4.values();
	boolean v19 = PersistentSystemFontConfig$Config.fontFamilies.addAll(v18);
	p0.writePersistentConfig(v13);
	this.mConfigVersion = (this.mConfigVersion + 1);
	return;
}
-----
depth : 2
public void updateSerializedFontMap(){
	FontConfig v1 = p0.getSystemFontConfig();
	SharedMemory v2 = FontManagerService.serializeFontMap(v1);
	p0.setSerializedFontMap(phiInstruction);
	return;
}
-----
","public int updateFontFamily(List p1, int p2){
	int v6 = this.mConfigVersion;
	Iterator v8 = p2.iterator();
	boolean v9 = v8.hasNext();
	ArrayMap v10 = new ArrayMap(this.mFontFileInfoMap);
	PersistentSystemFontConfig$Config v12 = UpdatableFontDir.readPersistentConfig();
	HashMap v13 = new HashMap();
	int v15 = PersistentSystemFontConfig$Config.fontFamilies.size();
	Iterator v16 = p2.iterator();
	boolean v17 = v16.hasNext();
	Collection v18 = v13.values();
	Iterator v19 = v18.iterator();
	boolean v20 = v19.hasNext();
	Object v21 = this.mCurrentTimeSupplier.get();
	long v22 = v21.longValue();
	this.mLastModifiedMillis = v22;
	PersistentSystemFontConfig$Config v23 = new PersistentSystemFontConfig$Config();
	PersistentSystemFontConfig$Config.lastModifiedMillis = this.mLastModifiedMillis;
	Collection v25 = this.mFontFileInfoMap.values();
	Iterator v26 = v25.iterator();
	boolean v27 = v26.hasNext();
	Collection v28 = v13.values();
	boolean v29 = PersistentSystemFontConfig$Config.fontFamilies.addAll(v28);
	UpdatableFontDir.writePersistentConfig(v23);
	this.mConfigVersion = (this.mConfigVersion + 1);
	FontConfig v32 = FontManagerService.getSystemFontConfig();
	SharedMemory v33 = FontManagerService.serializeFontMap(v32);
	FontManagerService.setSerializedFontMap(phiInstruction);
	int v36 = caughtException.getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v36;
}
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","2","5 = invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgumentNonnegative(I)I > 3 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getContext()Landroid/content/Context; > 1 @6 exception:8,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 9,10,11 @14 exception:12,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
2 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
4 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 2 @0 exception:3,
6 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
36 = new <Application,Landroid/util/ArrayMap>@60,
37 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
invokespecial < Application, Landroid/util/ArrayMap, <init>(Landroid/util/ArrayMap;)V > 36,37 @64 exception:38,
40 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, readPersistentConfig()Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config; > 1 @67 exception:39,
41 = new <Application,Ljava/util/HashMap>@71,
invokespecial < Application, Ljava/util/HashMap, <init>()V > 41 @73 exception:42,
56 = phi  55,8,
43 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 40,
45 = invokeinterface < Application, Ljava/util/List, size()I > 43 @79 exception:44,
conditional branch(ge, to iindex=-1) 56,45,
59 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
61 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 2 @105 exception:60,
63 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 61 @109 exception:62,
conditional branch(eq, to iindex=-1) 63,8,
87 = invokeinterface < Application, Ljava/util/Map, values()Ljava/util/Collection; > 41 @158 exception:86,
89 = invokeinterface < Application, Ljava/util/Collection, iterator()Ljava/util/Iterator; > 87 @162 exception:88,
91 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 89 @166 exception:90,
conditional branch(eq, to iindex=-1) 91,8,
100 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mCurrentTimeSupplier, <Application,Ljava/util/function/Supplier> > 1,
102 = invokeinterface < Application, Ljava/util/function/Supplier, get()Ljava/lang/Object; > 100 @197 exception:101,
103 = checkcast <Application,Ljava/lang/Long>102 <Application,Ljava/lang/Long>,
105 = invokevirtual < Application, Ljava/lang/Long, longValue()J > 103 @203 exception:104,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > = 105,
106 = new <Application,Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config>@209,
invokespecial < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, <init>()V > 106 @211 exception:107,
108 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
putfield 106.< Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, lastModifiedMillis, <Primordial,J> > = 108,
109 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
111 = invokevirtual < Application, Landroid/util/ArrayMap, values()Ljava/util/Collection; > 109 @220 exception:110,
113 = invokeinterface < Application, Ljava/util/Collection, iterator()Ljava/util/Iterator; > 111 @224 exception:112,
115 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 113 @228 exception:114,
conditional branch(eq, to iindex=-1) 115,8,
130 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 106,
132 = invokeinterface < Application, Ljava/util/Map, values()Ljava/util/Collection; > 41 @256 exception:131,
134 = invokeinterface < Application, Ljava/util/List, addAll(Ljava/util/Collection;)Z > 130,132 @260 exception:133,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, writePersistentConfig(Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config;)V > 1,106 @263 exception:135,
136 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
137 = binaryop(add) 136 , 7,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > = 137,
return,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
3 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @0 exception:2,
5 = invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, serializeFontMap(Landroid/text/FontConfig;)Landroid/os/SharedMemory; > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, serializeSystemServerFontMap()Landroid/os/SharedMemory; > @10 exception:7,
9 = phi  5,8,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, setSerializedFontMap(Landroid/os/SharedMemory;)V > 1,9 @14 exception:12,
return,
monitorexit 10,
return,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @21 exception:30,
return 29,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	FontManagerService.closeFileDescriptors(p1);
	return 0;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
depth : 2
public int getConfigVersion(){
	return this.mConfigVersion;
}
-----
depth : 2
public void update(List p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	ArrayMap v2 = new ArrayMap(this.mFontFileInfoMap);
	PersistentSystemFontConfig$Config v4 = p0.readPersistentConfig();
	HashMap v4 = new HashMap();
	int v6 = PersistentSystemFontConfig$Config.fontFamilies.size();
	Iterator v7 = p1.iterator();
	boolean v8 = v7.hasNext();
	Collection v9 = v4.values();
	Iterator v10 = v9.iterator();
	boolean v11 = v10.hasNext();
	Object v12 = this.mCurrentTimeSupplier.get();
	long v13 = v12.longValue();
	this.mLastModifiedMillis = v13;
	PersistentSystemFontConfig$Config v13 = new PersistentSystemFontConfig$Config();
	PersistentSystemFontConfig$Config.lastModifiedMillis = this.mLastModifiedMillis;
	Collection v15 = this.mFontFileInfoMap.values();
	Iterator v16 = v15.iterator();
	boolean v17 = v16.hasNext();
	Collection v18 = v4.values();
	boolean v19 = PersistentSystemFontConfig$Config.fontFamilies.addAll(v18);
	p0.writePersistentConfig(v13);
	this.mConfigVersion = (this.mConfigVersion + 1);
	return;
}
-----
depth : 2
public void updateSerializedFontMap(){
	FontConfig v1 = p0.getSystemFontConfig();
	SharedMemory v2 = FontManagerService.serializeFontMap(v1);
	SharedMemory v3 = FontManagerService.serializeSystemServerFontMap();
	p0.setSerializedFontMap(phiInstruction);
	return;
}
-----
","public int updateFontFamily(List p1, int p2){
	int v6 = this.mConfigVersion;
	Iterator v8 = p2.iterator();
	boolean v9 = v8.hasNext();
	ArrayMap v10 = new ArrayMap(this.mFontFileInfoMap);
	PersistentSystemFontConfig$Config v12 = UpdatableFontDir.readPersistentConfig();
	HashMap v13 = new HashMap();
	int v15 = PersistentSystemFontConfig$Config.fontFamilies.size();
	Iterator v16 = p2.iterator();
	boolean v17 = v16.hasNext();
	Collection v18 = v13.values();
	Iterator v19 = v18.iterator();
	boolean v20 = v19.hasNext();
	Object v21 = this.mCurrentTimeSupplier.get();
	long v22 = v21.longValue();
	this.mLastModifiedMillis = v22;
	PersistentSystemFontConfig$Config v23 = new PersistentSystemFontConfig$Config();
	PersistentSystemFontConfig$Config.lastModifiedMillis = this.mLastModifiedMillis;
	Collection v25 = this.mFontFileInfoMap.values();
	Iterator v26 = v25.iterator();
	boolean v27 = v26.hasNext();
	Collection v28 = v13.values();
	boolean v29 = PersistentSystemFontConfig$Config.fontFamilies.addAll(v28);
	UpdatableFontDir.writePersistentConfig(v23);
	this.mConfigVersion = (this.mConfigVersion + 1);
	FontConfig v32 = FontManagerService.getSystemFontConfig();
	SharedMemory v33 = FontManagerService.serializeFontMap(v32);
	SharedMemory v34 = FontManagerService.serializeSystemServerFontMap();
	FontManagerService.setSerializedFontMap(phiInstruction);
	FontManagerService.closeFileDescriptors(p1);
	return 0;
}
","SYS_OR_SIG"

