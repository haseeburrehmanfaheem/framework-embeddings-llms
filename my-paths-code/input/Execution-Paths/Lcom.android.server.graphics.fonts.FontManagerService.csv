"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","0","8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","1","8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(ne, to iindex=-1) 2,3,
11 = invokestatic < Application, Landroid/graphics/fonts/SystemFonts, getSystemPreinstalledFontConfig()Landroid/text/FontConfig; > @4 exception:10,
return 11,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
depth : 1
public FontConfig getSystemFontConfig(){
	FontConfig v1 = SystemFonts.getSystemPreinstalledFontConfig();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","1","8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
7 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getSystemFontConfig()Landroid/text/FontConfig; > 5 @14 exception:6,
monitorexit 4,
return 7,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
depth : 1
public FontConfig getSystemFontConfig(){
	FontConfig v1 = this.mUpdatableFontDir.getSystemFontConfig();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","2","8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(ne, to iindex=-1) 2,3,
11 = invokestatic < Application, Landroid/graphics/fonts/SystemFonts, getSystemPreinstalledFontConfig()Landroid/text/FontConfig; > @4 exception:10,
return 8,
return 11,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
depth : 1
public FontConfig getSystemFontConfig(){
	FontConfig v1 = SystemFonts.getSystemPreinstalledFontConfig();
	return v1;
}
-----
depth : 2
public FontConfig getSystemPreinstalledFontConfig(){
	FontConfig v1 = SystemFonts.getSystemFontConfigInternal(""/system/etc/fonts.xml"", ""/system/fonts/"", ""/product/etc/fonts_customization.xml"", ""/product/fonts/"", 0, 0, 0);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","getFontConfig()Landroid/text/FontConfig;","2","8 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, getSystemFontConfig()Landroid/text/FontConfig; > 1 @11 exception:7,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
7 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getSystemFontConfig()Landroid/text/FontConfig; > 5 @14 exception:6,
2 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigSupplier, <Application,Ljava/util/function/Function> > 1,
7 = checkcast <Application,Landroid/text/FontConfig>6 <Application,Landroid/text/FontConfig>,
10 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 9,
11 = new <Application,Ljava/util/ArrayList>@18,
18 = binaryop(add) 15 , 17,
38 = phi  37,24,
conditional branch(ge, to iindex=-1) 38,26,
42 = new <Application,Landroid/text/FontConfig>@68,
45 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
46 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
return 42,
monitorexit 4,
return 7,
return 8,","depth : 0
public FontConfig getFontConfig(){
	FontConfig v3 = p0.getSystemFontConfig();
	return v3;
}
-----
depth : 1
public FontConfig getSystemFontConfig(){
	FontConfig v1 = this.mUpdatableFontDir.getSystemFontConfig();
	return v1;
}
-----
depth : 2
public FontConfig getSystemFontConfig(){
	Map v1 = p0.getPostScriptMap();
	Object v2 = this.mConfigSupplier.apply(v1);
	PersistentSystemFontConfig$Config v3 = p0.readPersistentConfig();
	ArrayList v3 = new ArrayList((v5 + v6));
	List v4 = v2.getFontFamilies();
	int v5 = v4.size();
	int v6 = PersistentSystemFontConfig$Config.fontFamilies.size();
	List v8 = v2.getFontFamilies();
	boolean v9 = v3.addAll(v8);
	int v10 = PersistentSystemFontConfig$Config.fontFamilies.size();
	FontConfig v10 = new FontConfig(v3,v11,this.mLastModifiedMillis,this.mConfigVersion);
	List v11 = v2.getAliases();
	return v10;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","0","invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
14 = getCaughtException ,
20 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, getErrorCode()I > 14 @33 exception:19,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @37 exception:28,
return 20,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	int v6 = Slog.e(""FontManagerService"", ""Failed to update font family"", caughtException);
	int v7 = [resolveCodeAbst] + 14 = getCaughtException .getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v7;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","1","invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
monitorexit 10,
return,
14 = getCaughtException ,
20 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, getErrorCode()I > 14 @33 exception:19,
2 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, mErrorCode, <Primordial,I> > 1,
return 2,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @37 exception:28,
return 20,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	int v6 = Slog.e(""FontManagerService"", ""Failed to update font family"", caughtException);
	int v7 = [resolveCodeAbst] + 14 = getCaughtException .getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v7;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
depth : 1
public int getErrorCode(){
	return this.mErrorCode;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","1","invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
monitorexit 10,
return,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @21 exception:30,
return 29,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	FontManagerService.closeFileDescriptors(p1);
	return 0;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","2","invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
2 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
conditional branch(eq, to iindex=-1) 6,8,
36 = new <Application,Landroid/util/ArrayMap>@60,
37 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
41 = new <Application,Ljava/util/HashMap>@71,
56 = phi  55,8,
43 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 40,
conditional branch(ge, to iindex=-1) 56,45,
59 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
conditional branch(eq, to iindex=-1) 63,8,
conditional branch(eq, to iindex=-1) 91,8,
100 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mCurrentTimeSupplier, <Application,Ljava/util/function/Supplier> > 1,
103 = checkcast <Application,Ljava/lang/Long>102 <Application,Ljava/lang/Long>,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > = 105,
106 = new <Application,Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config>@209,
108 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
putfield 106.< Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, lastModifiedMillis, <Primordial,J> > = 108,
109 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(eq, to iindex=-1) 115,8,
130 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 106,
136 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
137 = binaryop(add) 136 , 7,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > = 137,
return,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
conditional branch(ne, to iindex=-1) 5,6,
9 = phi  5,8,
return,
monitorexit 10,
return,
14 = getCaughtException ,
20 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, getErrorCode()I > 14 @33 exception:19,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @37 exception:28,
return 20,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	int v6 = Slog.e(""FontManagerService"", ""Failed to update font family"", caughtException);
	int v7 = [resolveCodeAbst] + 14 = getCaughtException .getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v7;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
depth : 2
public int getConfigVersion(){
	return this.mConfigVersion;
}
-----
depth : 2
public void update(List p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	ArrayMap v2 = new ArrayMap(this.mFontFileInfoMap);
	PersistentSystemFontConfig$Config v4 = p0.readPersistentConfig();
	HashMap v4 = new HashMap();
	int v6 = PersistentSystemFontConfig$Config.fontFamilies.size();
	Iterator v7 = p1.iterator();
	boolean v8 = v7.hasNext();
	Collection v9 = v4.values();
	Iterator v10 = v9.iterator();
	boolean v11 = v10.hasNext();
	Object v12 = this.mCurrentTimeSupplier.get();
	long v13 = v12.longValue();
	this.mLastModifiedMillis = v13;
	PersistentSystemFontConfig$Config v13 = new PersistentSystemFontConfig$Config();
	PersistentSystemFontConfig$Config.lastModifiedMillis = this.mLastModifiedMillis;
	Collection v15 = this.mFontFileInfoMap.values();
	Iterator v16 = v15.iterator();
	boolean v17 = v16.hasNext();
	Collection v18 = v4.values();
	boolean v19 = PersistentSystemFontConfig$Config.fontFamilies.addAll(v18);
	p0.writePersistentConfig(v13);
	this.mConfigVersion = (this.mConfigVersion + 1);
	return;
}
-----
depth : 2
public void updateSerializedFontMap(){
	FontConfig v1 = p0.getSystemFontConfig();
	SharedMemory v2 = FontManagerService.serializeFontMap(v1);
	SharedMemory v3 = FontManagerService.serializeSystemServerFontMap();
	p0.setSerializedFontMap(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","2","invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
2 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
conditional branch(eq, to iindex=-1) 6,8,
36 = new <Application,Landroid/util/ArrayMap>@60,
37 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
41 = new <Application,Ljava/util/HashMap>@71,
56 = phi  55,8,
43 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 40,
conditional branch(ge, to iindex=-1) 56,45,
59 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
conditional branch(eq, to iindex=-1) 63,8,
conditional branch(eq, to iindex=-1) 91,8,
100 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mCurrentTimeSupplier, <Application,Ljava/util/function/Supplier> > 1,
103 = checkcast <Application,Ljava/lang/Long>102 <Application,Ljava/lang/Long>,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > = 105,
106 = new <Application,Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config>@209,
108 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
putfield 106.< Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, lastModifiedMillis, <Primordial,J> > = 108,
109 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(eq, to iindex=-1) 115,8,
130 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 106,
136 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
137 = binaryop(add) 136 , 7,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > = 137,
return,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
conditional branch(ne, to iindex=-1) 5,6,
9 = phi  5,8,
return,
monitorexit 10,
return,
14 = getCaughtException ,
20 = invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService$SystemFontException, getErrorCode()I > 14 @33 exception:19,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @37 exception:28,
return 20,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	int v6 = Slog.e(""FontManagerService"", ""Failed to update font family"", caughtException);
	int v7 = [resolveCodeAbst] + 14 = getCaughtException .getErrorCode();
	FontManagerService.closeFileDescriptors(p1);
	return v7;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
depth : 2
public int getConfigVersion(){
	return this.mConfigVersion;
}
-----
depth : 2
public void update(List p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	ArrayMap v2 = new ArrayMap(this.mFontFileInfoMap);
	PersistentSystemFontConfig$Config v4 = p0.readPersistentConfig();
	HashMap v4 = new HashMap();
	int v6 = PersistentSystemFontConfig$Config.fontFamilies.size();
	Iterator v7 = p1.iterator();
	boolean v8 = v7.hasNext();
	Collection v9 = v4.values();
	Iterator v10 = v9.iterator();
	boolean v11 = v10.hasNext();
	Object v12 = this.mCurrentTimeSupplier.get();
	long v13 = v12.longValue();
	this.mLastModifiedMillis = v13;
	PersistentSystemFontConfig$Config v13 = new PersistentSystemFontConfig$Config();
	PersistentSystemFontConfig$Config.lastModifiedMillis = this.mLastModifiedMillis;
	Collection v15 = this.mFontFileInfoMap.values();
	Iterator v16 = v15.iterator();
	boolean v17 = v16.hasNext();
	Collection v18 = v4.values();
	boolean v19 = PersistentSystemFontConfig$Config.fontFamilies.addAll(v18);
	p0.writePersistentConfig(v13);
	this.mConfigVersion = (this.mConfigVersion + 1);
	return;
}
-----
depth : 2
public void updateSerializedFontMap(){
	FontConfig v1 = p0.getSystemFontConfig();
	SharedMemory v2 = FontManagerService.serializeFontMap(v1);
	p0.setSerializedFontMap(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/graphics/fonts/FontManagerService","updateFontFamily(Ljava/util/List;I)I","2","invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, update(ILjava/util/List;)V > 1,3,2 @17 exception:13,
4 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
conditional branch(eq, to iindex=-1) 4,5,
10 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDirLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
conditional branch(eq, to iindex=-1) 2,11,
12 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
14 = invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, getConfigVersion()I > 12 @12 exception:13,
2 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 14,2,
goto (from iindex= 10 to iindex = 10),
20 = getfield < Application, Lcom/android/server/graphics/fonts/FontManagerService, mUpdatableFontDir, <Application,Lcom/android/server/graphics/fonts/UpdatableFontDir> > 1,
invokevirtual < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, update(Ljava/util/List;)V > 20,3 @30 exception:21,
conditional branch(eq, to iindex=-1) 6,8,
36 = new <Application,Landroid/util/ArrayMap>@60,
37 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
41 = new <Application,Ljava/util/HashMap>@71,
56 = phi  55,8,
43 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 40,
conditional branch(ge, to iindex=-1) 56,45,
59 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
conditional branch(eq, to iindex=-1) 63,8,
conditional branch(eq, to iindex=-1) 91,8,
100 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mCurrentTimeSupplier, <Application,Ljava/util/function/Supplier> > 1,
103 = checkcast <Application,Ljava/lang/Long>102 <Application,Ljava/lang/Long>,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > = 105,
106 = new <Application,Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config>@209,
108 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mLastModifiedMillis, <Primordial,J> > 1,
putfield 106.< Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, lastModifiedMillis, <Primordial,J> > = 108,
109 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mFontFileInfoMap, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(eq, to iindex=-1) 115,8,
130 = getfield < Application, Lcom/android/server/graphics/fonts/PersistentSystemFontConfig$Config, fontFamilies, <Application,Ljava/util/List> > 106,
136 = getfield < Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > 1,
137 = binaryop(add) 136 , 7,
putfield 1.< Application, Lcom/android/server/graphics/fonts/UpdatableFontDir, mConfigVersion, <Primordial,I> > = 137,
return,
invokevirtual < Application, Lcom/android/server/graphics/fonts/FontManagerService, updateSerializedFontMap()V > 1 @33 exception:22,
conditional branch(ne, to iindex=-1) 5,6,
9 = phi  5,8,
return,
monitorexit 10,
return,
invokestatic < Application, Lcom/android/server/graphics/fonts/FontManagerService, closeFileDescriptors(Ljava/util/List;)V > 2 @21 exception:30,
return 29,","depth : 0
public int updateFontFamily(List p1, int p2){
	p0.update(p2, p1);
	FontManagerService.closeFileDescriptors(p1);
	return 0;
}
-----
depth : 1
public void update(int p1, List p2){
	int v1 = this.mUpdatableFontDir.getConfigVersion();
	this.mUpdatableFontDir.update(p2);
	p0.updateSerializedFontMap();
	return;
}
-----
depth : 2
public int getConfigVersion(){
	return this.mConfigVersion;
}
-----
depth : 2
public void update(List p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	ArrayMap v2 = new ArrayMap(this.mFontFileInfoMap);
	PersistentSystemFontConfig$Config v4 = p0.readPersistentConfig();
	HashMap v4 = new HashMap();
	int v6 = PersistentSystemFontConfig$Config.fontFamilies.size();
	Iterator v7 = p1.iterator();
	boolean v8 = v7.hasNext();
	Collection v9 = v4.values();
	Iterator v10 = v9.iterator();
	boolean v11 = v10.hasNext();
	Object v12 = this.mCurrentTimeSupplier.get();
	long v13 = v12.longValue();
	this.mLastModifiedMillis = v13;
	PersistentSystemFontConfig$Config v13 = new PersistentSystemFontConfig$Config();
	PersistentSystemFontConfig$Config.lastModifiedMillis = this.mLastModifiedMillis;
	Collection v15 = this.mFontFileInfoMap.values();
	Iterator v16 = v15.iterator();
	boolean v17 = v16.hasNext();
	Collection v18 = v4.values();
	boolean v19 = PersistentSystemFontConfig$Config.fontFamilies.addAll(v18);
	p0.writePersistentConfig(v13);
	this.mConfigVersion = (this.mConfigVersion + 1);
	return;
}
-----
depth : 2
public void updateSerializedFontMap(){
	FontConfig v1 = p0.getSystemFontConfig();
	SharedMemory v2 = FontManagerService.serializeFontMap(v1);
	SharedMemory v3 = FontManagerService.serializeSystemServerFontMap();
	p0.setSerializedFontMap(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

