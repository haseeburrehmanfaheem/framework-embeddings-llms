"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getAuthenticatorId(II)J","0","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
return 19,","depth : 0
public long getAuthenticatorId(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for getAuthenticatorId"");
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getAuthenticatorId(II)J","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 19,","depth : 0
public long getAuthenticatorId(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for getAuthenticatorId"");
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getAuthenticatorId(II)J","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 14,","depth : 0
public long getAuthenticatorId(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	long v4 = v3.getAuthenticatorId(p1, p2);
	return v4;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getAuthenticatorId(II)J","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 19,","depth : 0
public long getAuthenticatorId(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for getAuthenticatorId"");
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getAuthenticatorId(II)J","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 14,","depth : 0
public long getAuthenticatorId(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	long v4 = v3.getAuthenticatorId(p1, p2);
	return v4;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getAuthenticatorId(II)J","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 19,","depth : 0
public long getAuthenticatorId(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for getAuthenticatorId"");
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal;","0","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
15 = new <Application,Ljava/lang/StringBuilder>@19,
return 12,","depth : 0
public FaceSensorPropertiesInternal getSensorProperties(int p1, String p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for getSensorProperties, sensorId: "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("", caller: "");
	StringBuilder v8 = v3.append(p2);
	String v9 = v3.toString();
	int v10 = Slog.w(""FaceService"", v9);
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal;","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
15 = new <Application,Ljava/lang/StringBuilder>@19,
return 12,","depth : 0
public FaceSensorPropertiesInternal getSensorProperties(int p1, String p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for getSensorProperties, sensorId: "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("", caller: "");
	StringBuilder v8 = v3.append(p2);
	String v9 = v3.toString();
	int v10 = Slog.w(""FaceService"", v9);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal;","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 14,","depth : 0
public FaceSensorPropertiesInternal getSensorProperties(int p1, String p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	FaceSensorPropertiesInternal v4 = v3.getSensorProperties(p1);
	return v4;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal;","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
15 = new <Application,Ljava/lang/StringBuilder>@19,
return 12,","depth : 0
public FaceSensorPropertiesInternal getSensorProperties(int p1, String p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for getSensorProperties, sensorId: "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("", caller: "");
	StringBuilder v8 = v3.append(p2);
	String v9 = v3.toString();
	int v10 = Slog.w(""FaceService"", v9);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal;","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 14,","depth : 0
public FaceSensorPropertiesInternal getSensorProperties(int p1, String p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	FaceSensorPropertiesInternal v4 = v3.getSensorProperties(p1);
	return v4;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getSensorProperties(ILjava/lang/String;)Landroid/hardware/face/FaceSensorPropertiesInternal;","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
15 = new <Application,Ljava/lang/StringBuilder>@19,
return 12,","depth : 0
public FaceSensorPropertiesInternal getSensorProperties(int p1, String p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for getSensorProperties, sensorId: "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("", caller: "");
	StringBuilder v8 = v3.append(p2);
	String v9 = v3.toString();
	int v10 = Slog.w(""FaceService"", v9);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","hasEnrolledFaces(IILjava/lang/String;)Z","0","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
conditional branch(ne, to iindex=-1) 23,24,
conditional branch(le, to iindex=-1) 28,24,
30 = phi  24,29,
return 30,","depth : 0
public boolean hasEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v6 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	List v7 = v6.getEnrolledFaces(p1, p2);
	int v8 = v7.size();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","hasEnrolledFaces(IILjava/lang/String;)Z","1","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
conditional branch(le, to iindex=-1) 28,24,
30 = phi  24,29,
return 30,","depth : 0
public boolean hasEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v6 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	List v7 = v6.getEnrolledFaces(p1, p2);
	int v8 = v7.size();
	return phiInstruction;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","hasEnrolledFaces(IILjava/lang/String;)Z","1","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
conditional branch(le, to iindex=-1) 28,24,
30 = phi  24,29,
return 30,","depth : 0
public boolean hasEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	List v5 = v4.getEnrolledFaces(p1, p2);
	int v6 = v5.size();
	return phiInstruction;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","hasEnrolledFaces(IILjava/lang/String;)Z","2","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
conditional branch(le, to iindex=-1) 28,24,
30 = phi  24,29,
return 30,","depth : 0
public boolean hasEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v6 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	List v7 = v6.getEnrolledFaces(p1, p2);
	int v8 = v7.size();
	return phiInstruction;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","hasEnrolledFaces(IILjava/lang/String;)Z","2","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
conditional branch(le, to iindex=-1) 28,24,
30 = phi  24,29,
return 30,","depth : 0
public boolean hasEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	List v5 = v4.getEnrolledFaces(p1, p2);
	int v6 = v5.size();
	return phiInstruction;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","hasEnrolledFaces(IILjava/lang/String;)Z","2","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
31 = new <Application,Ljava/lang/StringBuilder>@37,
return 24,","depth : 0
public boolean hasEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v6 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Null provider for hasEnrolledFaces, caller: "");
	StringBuilder v9 = v6.append(p3);
	String v10 = v6.toString();
	int v11 = Slog.w(""FaceService"", v10);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","addLockoutResetCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V","0","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockoutResetDispatcher(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/LockoutResetDispatcher; > 9 @13 exception:10,
invokevirtual < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, addCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V > 11,2,3 @17 exception:12,
return,","depth : 0
public void addLockoutResetCallback(IBiometricServiceLockoutResetCallback p1, String p2){
	LockoutResetDispatcher v3 = FaceService.-$$Nest$fgetmLockoutResetDispatcher(this.this$0);
	v3.addCallback(p1, p2);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","addLockoutResetCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockoutResetDispatcher(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/LockoutResetDispatcher; > 9 @13 exception:10,
2 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mLockoutResetDispatcher, <Application,Lcom/android/server/biometrics/sensors/LockoutResetDispatcher> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, addCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V > 11,2,3 @17 exception:12,
conditional branch(ne, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, mClientCallbacks, <Application,Ljava/util/List> > 1,
7 = new <Application,Lcom/android/server/biometrics/sensors/LockoutResetDispatcher$ClientCallback>@32,
8 = getfield < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, mContext, <Application,Landroid/content/Context> > 1,
18 = getCaughtException ,
return,
return,","depth : 0
public void addLockoutResetCallback(IBiometricServiceLockoutResetCallback p1, String p2){
	LockoutResetDispatcher v3 = FaceService.-$$Nest$fgetmLockoutResetDispatcher(this.this$0);
	v3.addCallback(p1, p2);
	return;
}
-----
depth : 1
public LockoutResetDispatcher -$$Nest$fgetmLockoutResetDispatcher(FaceService p1){
	return this.mLockoutResetDispatcher;
}
-----
depth : 1
public void addCallback(IBiometricServiceLockoutResetCallback p1, String p2){
	LockoutResetDispatcher$ClientCallback v0 = new LockoutResetDispatcher$ClientCallback(this.mContext,p1,p2);
	boolean v2 = this.mClientCallbacks.add(v0);
	IBinder v3 = p1.asBinder();
	int v4 = Slog.e(""LockoutResetTracker"", ""Failed to link to death"", caughtException);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","addLockoutResetCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockoutResetDispatcher(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/LockoutResetDispatcher; > 9 @13 exception:10,
2 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mLockoutResetDispatcher, <Application,Lcom/android/server/biometrics/sensors/LockoutResetDispatcher> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, addCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V > 11,2,3 @17 exception:12,
conditional branch(ne, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, mClientCallbacks, <Application,Ljava/util/List> > 1,
7 = new <Application,Lcom/android/server/biometrics/sensors/LockoutResetDispatcher$ClientCallback>@32,
8 = getfield < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, mContext, <Application,Landroid/content/Context> > 1,
18 = getCaughtException ,
return,
return,","depth : 0
public void addLockoutResetCallback(IBiometricServiceLockoutResetCallback p1, String p2){
	LockoutResetDispatcher v3 = FaceService.-$$Nest$fgetmLockoutResetDispatcher(this.this$0);
	v3.addCallback(p1, p2);
	return;
}
-----
depth : 1
public LockoutResetDispatcher -$$Nest$fgetmLockoutResetDispatcher(FaceService p1){
	return this.mLockoutResetDispatcher;
}
-----
depth : 1
public void addCallback(IBiometricServiceLockoutResetCallback p1, String p2){
	LockoutResetDispatcher$ClientCallback v0 = new LockoutResetDispatcher$ClientCallback(this.mContext,p1,p2);
	boolean v2 = this.mClientCallbacks.add(v0);
	IBinder v3 = p1.asBinder();
	v3.linkToDeath(p0, 0);
	int v5 = Slog.e(""LockoutResetTracker"", ""Failed to link to death"", caughtException);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","addLockoutResetCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockoutResetDispatcher(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/server/biometrics/sensors/LockoutResetDispatcher; > 9 @13 exception:10,
2 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mLockoutResetDispatcher, <Application,Lcom/android/server/biometrics/sensors/LockoutResetDispatcher> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, addCallback(Landroid/hardware/biometrics/IBiometricServiceLockoutResetCallback;Ljava/lang/String;)V > 11,2,3 @17 exception:12,
conditional branch(ne, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, mClientCallbacks, <Application,Ljava/util/List> > 1,
7 = new <Application,Lcom/android/server/biometrics/sensors/LockoutResetDispatcher$ClientCallback>@32,
8 = getfield < Application, Lcom/android/server/biometrics/sensors/LockoutResetDispatcher, mContext, <Application,Landroid/content/Context> > 1,
goto (from iindex= 22 to iindex = 7),
return,
return,","depth : 0
public void addLockoutResetCallback(IBiometricServiceLockoutResetCallback p1, String p2){
	LockoutResetDispatcher v3 = FaceService.-$$Nest$fgetmLockoutResetDispatcher(this.this$0);
	v3.addCallback(p1, p2);
	return;
}
-----
depth : 1
public LockoutResetDispatcher -$$Nest$fgetmLockoutResetDispatcher(FaceService p1){
	return this.mLockoutResetDispatcher;
}
-----
depth : 1
public void addCallback(IBiometricServiceLockoutResetCallback p1, String p2){
	LockoutResetDispatcher$ClientCallback v0 = new LockoutResetDispatcher$ClientCallback(this.mContext,p1,p2);
	boolean v2 = this.mClientCallbacks.add(v0);
	IBinder v3 = p1.asBinder();
	v3.linkToDeath(p0, 0);
	return;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J","0","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
15 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 13,5 @17 exception:14,
conditional branch(ne, to iindex=-1) 15,18,
19 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
21 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockPatternUtils(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/internal/widget/LockPatternUtils; > 19 @50 exception:20,
23 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isUserEncryptedOrLockdown(Lcom/android/internal/widget/LockPatternUtils;I)Z > 21,3 @54 exception:22,
conditional branch(ne, to iindex=-1) 23,18,
24 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
26 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 24 @68 exception:25,
conditional branch(ne, to iindex=-1) 26,18,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 26,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 26,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@93,
return 37,","depth : 0
public long detectFace(IBinder p1, int p2, IFaceServiceReceiver p3, String p4){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p4);
	LockPatternUtils v5 = FaceService.-$$Nest$fgetmLockPatternUtils(this.this$0);
	boolean v6 = Utils.isUserEncryptedOrLockdown(v5, p2);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p3);
	long v10 = Pair.second.scheduleFaceDetect(v8, p1, p2, v8, p4, 1);
	return v10;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J","1","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
15 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 13,5 @17 exception:14,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 15,18,
19 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
21 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockPatternUtils(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/internal/widget/LockPatternUtils; > 19 @50 exception:20,
2 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
return 2,
23 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isUserEncryptedOrLockdown(Lcom/android/internal/widget/LockPatternUtils;I)Z > 21,3 @54 exception:22,
7 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,5 @5 exception:6,
10 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,8 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,12 @19 exception:13,
conditional branch(eq, to iindex=-1) 14,11,
goto (from iindex= 14 to iindex = 3),
20 = phi  11,5,
23 = new <Application,Ljava/lang/StringBuilder>@29,
conditional branch(ne, to iindex=-1) 7,11,
conditional branch(eq, to iindex=-1) 20,11,
goto (from iindex= 32 to iindex = 2),
40 = phi  5,5,11,
return 40,
conditional branch(ne, to iindex=-1) 23,18,
24 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
26 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 24 @68 exception:25,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 26,18,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 26,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 26,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@93,
return 37,","depth : 0
public long detectFace(IBinder p1, int p2, IFaceServiceReceiver p3, String p4){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p4);
	LockPatternUtils v5 = FaceService.-$$Nest$fgetmLockPatternUtils(this.this$0);
	boolean v6 = Utils.isUserEncryptedOrLockdown(v5, p2);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p3);
	long v10 = Pair.second.scheduleFaceDetect(v8, p1, p2, v8, p4, 1);
	return v10;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 1
public LockPatternUtils -$$Nest$fgetmLockPatternUtils(FaceService p1){
	return this.mLockPatternUtils;
}
-----
depth : 1
public boolean isUserEncryptedOrLockdown(LockPatternUtils p1, int p2){
	int v1 = p1.getStrongAuthForUser(p2);
	boolean v2 = Utils.containsFlag(v1, 1);
	boolean v3 = Utils.containsFlag(v1, 2);
	boolean v4 = Utils.containsFlag(v1, 32);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""isEncrypted: "");
	StringBuilder v7 = v4.append(v2);
	StringBuilder v8 = v4.append("" isLockdown: "");
	StringBuilder v9 = v4.append(phiInstruction);
	String v10 = v4.toString();
	int v11 = Slog.d(""BiometricUtils"", v10);
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J","1","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
15 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 13,5 @17 exception:14,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 15,18,
19 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
21 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockPatternUtils(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/internal/widget/LockPatternUtils; > 19 @50 exception:20,
2 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
return 2,
23 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isUserEncryptedOrLockdown(Lcom/android/internal/widget/LockPatternUtils;I)Z > 21,3 @54 exception:22,
7 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,5 @5 exception:6,
10 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,8 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,12 @19 exception:13,
conditional branch(eq, to iindex=-1) 14,11,
goto (from iindex= 14 to iindex = 3),
20 = phi  11,5,
23 = new <Application,Ljava/lang/StringBuilder>@29,
conditional branch(ne, to iindex=-1) 7,11,
conditional branch(eq, to iindex=-1) 20,11,
goto (from iindex= 32 to iindex = 2),
40 = phi  5,5,11,
return 40,
conditional branch(ne, to iindex=-1) 23,18,
24 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
26 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 24 @68 exception:25,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 26,18,
return 16,","depth : 0
public long detectFace(IBinder p1, int p2, IFaceServiceReceiver p3, String p4){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p4);
	LockPatternUtils v5 = FaceService.-$$Nest$fgetmLockPatternUtils(this.this$0);
	boolean v6 = Utils.isUserEncryptedOrLockdown(v5, p2);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Slog.w(""FaceService"", ""Null provider for detectFace"");
	return -1;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 1
public LockPatternUtils -$$Nest$fgetmLockPatternUtils(FaceService p1){
	return this.mLockPatternUtils;
}
-----
depth : 1
public boolean isUserEncryptedOrLockdown(LockPatternUtils p1, int p2){
	int v1 = p1.getStrongAuthForUser(p2);
	boolean v2 = Utils.containsFlag(v1, 1);
	boolean v3 = Utils.containsFlag(v1, 2);
	boolean v4 = Utils.containsFlag(v1, 32);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""isEncrypted: "");
	StringBuilder v7 = v4.append(v2);
	StringBuilder v8 = v4.append("" isLockdown: "");
	StringBuilder v9 = v4.append(phiInstruction);
	String v10 = v4.toString();
	int v11 = Slog.d(""BiometricUtils"", v10);
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J","2","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
15 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 13,5 @17 exception:14,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 15,18,
19 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
21 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockPatternUtils(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/internal/widget/LockPatternUtils; > 19 @50 exception:20,
23 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isUserEncryptedOrLockdown(Lcom/android/internal/widget/LockPatternUtils;I)Z > 21,3 @54 exception:22,
7 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,5 @5 exception:6,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
10 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,8 @10 exception:9,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(ne, to iindex=-1) 10,11,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,12 @19 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(eq, to iindex=-1) 14,11,
goto (from iindex= 14 to iindex = 3),
20 = phi  11,5,
23 = new <Application,Ljava/lang/StringBuilder>@29,
conditional branch(ne, to iindex=-1) 7,11,
conditional branch(eq, to iindex=-1) 20,11,
goto (from iindex= 32 to iindex = 2),
40 = phi  5,5,11,
return 40,
conditional branch(ne, to iindex=-1) 23,18,
24 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
26 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 24 @68 exception:25,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 26,18,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 26,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 26,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@93,
return 37,","depth : 0
public long detectFace(IBinder p1, int p2, IFaceServiceReceiver p3, String p4){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p4);
	LockPatternUtils v5 = FaceService.-$$Nest$fgetmLockPatternUtils(this.this$0);
	boolean v6 = Utils.isUserEncryptedOrLockdown(v5, p2);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p3);
	long v10 = Pair.second.scheduleFaceDetect(v8, p1, p2, v8, p4, 1);
	return v10;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserEncryptedOrLockdown(LockPatternUtils p1, int p2){
	int v1 = p1.getStrongAuthForUser(p2);
	boolean v2 = Utils.containsFlag(v1, 1);
	boolean v3 = Utils.containsFlag(v1, 2);
	boolean v4 = Utils.containsFlag(v1, 32);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""isEncrypted: "");
	StringBuilder v7 = v4.append(v2);
	StringBuilder v8 = v4.append("" isLockdown: "");
	StringBuilder v9 = v4.append(phiInstruction);
	String v10 = v4.toString();
	int v11 = Slog.d(""BiometricUtils"", v10);
	return phiInstruction;
}
-----
depth : 2
public boolean containsFlag(int p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean containsFlag(int p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean containsFlag(int p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J","2","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
15 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 13,5 @17 exception:14,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 15,18,
19 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
21 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockPatternUtils(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/internal/widget/LockPatternUtils; > 19 @50 exception:20,
23 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isUserEncryptedOrLockdown(Lcom/android/internal/widget/LockPatternUtils;I)Z > 21,3 @54 exception:22,
7 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,5 @5 exception:6,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
10 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,8 @10 exception:9,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(ne, to iindex=-1) 10,11,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,12 @19 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(eq, to iindex=-1) 14,11,
goto (from iindex= 16 to iindex = 2),
20 = phi  11,5,
23 = new <Application,Ljava/lang/StringBuilder>@29,
conditional branch(ne, to iindex=-1) 7,11,
conditional branch(eq, to iindex=-1) 20,11,
goto (from iindex= 32 to iindex = 2),
40 = phi  5,5,11,
return 40,
conditional branch(ne, to iindex=-1) 23,18,
24 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
26 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 24 @68 exception:25,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 26,18,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 26,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 26,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@93,
return 37,","depth : 0
public long detectFace(IBinder p1, int p2, IFaceServiceReceiver p3, String p4){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p4);
	LockPatternUtils v5 = FaceService.-$$Nest$fgetmLockPatternUtils(this.this$0);
	boolean v6 = Utils.isUserEncryptedOrLockdown(v5, p2);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p3);
	long v10 = Pair.second.scheduleFaceDetect(v8, p1, p2, v8, p4, 1);
	return v10;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserEncryptedOrLockdown(LockPatternUtils p1, int p2){
	int v1 = p1.getStrongAuthForUser(p2);
	boolean v2 = Utils.containsFlag(v1, 1);
	boolean v3 = Utils.containsFlag(v1, 2);
	boolean v4 = Utils.containsFlag(v1, 32);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""isEncrypted: "");
	StringBuilder v7 = v4.append(v2);
	StringBuilder v8 = v4.append("" isLockdown: "");
	StringBuilder v9 = v4.append(phiInstruction);
	String v10 = v4.toString();
	int v11 = Slog.d(""BiometricUtils"", v10);
	return phiInstruction;
}
-----
depth : 2
public boolean containsFlag(int p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean containsFlag(int p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean containsFlag(int p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","detectFace(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)J","2","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
15 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 13,5 @17 exception:14,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 15,18,
19 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
21 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmLockPatternUtils(Lcom/android/server/biometrics/sensors/face/FaceService;)Lcom/android/internal/widget/LockPatternUtils; > 19 @50 exception:20,
23 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isUserEncryptedOrLockdown(Lcom/android/internal/widget/LockPatternUtils;I)Z > 21,3 @54 exception:22,
7 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,5 @5 exception:6,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
10 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,8 @10 exception:9,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(ne, to iindex=-1) 10,11,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, containsFlag(II)Z > 4,12 @19 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(eq, to iindex=-1) 14,11,
goto (from iindex= 14 to iindex = 3),
20 = phi  11,5,
23 = new <Application,Ljava/lang/StringBuilder>@29,
conditional branch(ne, to iindex=-1) 7,11,
conditional branch(eq, to iindex=-1) 20,11,
goto (from iindex= 32 to iindex = 2),
40 = phi  5,5,11,
return 40,
conditional branch(ne, to iindex=-1) 23,18,
24 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
26 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 24 @68 exception:25,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 26,18,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 26,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 26,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@93,
return 37,","depth : 0
public long detectFace(IBinder p1, int p2, IFaceServiceReceiver p3, String p4){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p4);
	LockPatternUtils v5 = FaceService.-$$Nest$fgetmLockPatternUtils(this.this$0);
	boolean v6 = Utils.isUserEncryptedOrLockdown(v5, p2);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p3);
	long v10 = Pair.second.scheduleFaceDetect(v8, p1, p2, v8, p4, 1);
	return v10;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserEncryptedOrLockdown(LockPatternUtils p1, int p2){
	int v1 = p1.getStrongAuthForUser(p2);
	boolean v2 = Utils.containsFlag(v1, 1);
	boolean v3 = Utils.containsFlag(v1, 2);
	boolean v4 = Utils.containsFlag(v1, 32);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""isEncrypted: "");
	StringBuilder v7 = v4.append(v2);
	StringBuilder v8 = v4.append("" isLockdown: "");
	StringBuilder v9 = v4.append(phiInstruction);
	String v10 = v4.toString();
	int v11 = Slog.d(""BiometricUtils"", v10);
	return phiInstruction;
}
-----
depth : 2
public boolean containsFlag(int p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean containsFlag(int p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean containsFlag(int p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","0","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
16 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 14,
17 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>16 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
18 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 14,
19 = checkcast <Application,Ljava/lang/Integer>18 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void remove(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleRemove(v4, p1, p2, p3, p4, p5);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
16 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 14,
17 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>16 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
18 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 14,
19 = checkcast <Application,Ljava/lang/Integer>18 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void remove(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleRemove(v4, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void remove(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for remove"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
16 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 14,
17 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>16 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
18 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 14,
19 = checkcast <Application,Ljava/lang/Integer>18 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void remove(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleRemove(v4, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
return 6,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
16 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 14,
17 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>16 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
18 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 14,
19 = checkcast <Application,Ljava/lang/Integer>18 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void remove(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleRemove(v4, p1, p2, p3, p4, p5);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	int v6 = Slog.e(""FaceService"", ""Single sensor, but provider not found"");
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","remove(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void remove(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for remove"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V","0","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 12,3 @17 exception:13,
conditional branch(ne, to iindex=-1) 14,16,
17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 17 @48 exception:18,
conditional branch(ne, to iindex=-1) 19,16,
20 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 19,
21 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>20 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
22 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 19,
23 = checkcast <Application,Ljava/lang/Integer>22 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelFaceDetect(IBinder p1, String p2, long p3){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p2);
	Pair v5 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v6 = Pair.first.intValue();
	Pair.second.cancelFaceDetect(v6, p1, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V","1","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 12,3 @17 exception:13,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 14,16,
17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 17 @48 exception:18,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 19,16,
20 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 19,
21 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>20 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
22 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 19,
23 = checkcast <Application,Ljava/lang/Integer>22 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelFaceDetect(IBinder p1, String p2, long p3){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p2);
	Pair v5 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v6 = Pair.first.intValue();
	Pair.second.cancelFaceDetect(v6, p1, p3);
	return;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V","1","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 12,3 @17 exception:13,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 14,16,
17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 17 @48 exception:18,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 19,16,
return,","depth : 0
public void cancelFaceDetect(IBinder p1, String p2, long p3){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p2);
	Pair v5 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v6 = Slog.w(""FaceService"", ""Null provider for cancelFaceDetect"");
	return;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 12,3 @17 exception:13,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 14,16,
17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 17 @48 exception:18,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 19,16,
20 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 19,
21 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>20 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
22 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 19,
23 = checkcast <Application,Ljava/lang/Integer>22 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelFaceDetect(IBinder p1, String p2, long p3){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p2);
	Pair v5 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v6 = Pair.first.intValue();
	Pair.second.cancelFaceDetect(v6, p1, p3);
	return;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 12,3 @17 exception:13,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 14,16,
17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 17 @48 exception:18,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 19,16,
20 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 19,
21 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>20 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
22 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 19,
23 = checkcast <Application,Ljava/lang/Integer>22 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelFaceDetect(IBinder p1, String p2, long p3){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p2);
	Pair v5 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v6 = Pair.first.intValue();
	Pair.second.cancelFaceDetect(v6, p1, p3);
	return;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelFaceDetect(Landroid/os/IBinder;Ljava/lang/String;J)V","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 12,3 @17 exception:13,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
conditional branch(ne, to iindex=-1) 14,16,
17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 17 @48 exception:18,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
return 6,
return 3,
conditional branch(ne, to iindex=-1) 19,16,
20 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 19,
21 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>20 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
22 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 19,
23 = checkcast <Application,Ljava/lang/Integer>22 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelFaceDetect(IBinder p1, String p2, long p3){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p2);
	Pair v5 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v6 = Pair.first.intValue();
	Pair.second.cancelFaceDetect(v6, p1, p3);
	return;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	int v6 = Slog.e(""FaceService"", ""Single sensor, but provider not found"");
	return 0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V","0","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 10 @13 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
14 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 12,
15 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>14 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
16 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 12,
17 = checkcast <Application,Ljava/lang/Integer>16 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelAuthentication(IBinder p1, String p2, long p3){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.cancelAuthentication(v4, p1, p3);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V","1","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 10 @13 exception:11,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 12,13,
14 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 12,
15 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>14 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
16 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 12,
17 = checkcast <Application,Ljava/lang/Integer>16 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelAuthentication(IBinder p1, String p2, long p3){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.cancelAuthentication(v4, p1, p3);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V","1","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 10 @13 exception:11,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 12,13,
return,","depth : 0
public void cancelAuthentication(IBinder p1, String p2, long p3){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for cancelAuthentication"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 10 @13 exception:11,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 12,13,
14 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 12,
15 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>14 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
16 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 12,
17 = checkcast <Application,Ljava/lang/Integer>16 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelAuthentication(IBinder p1, String p2, long p3){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.cancelAuthentication(v4, p1, p3);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 10 @13 exception:11,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
return 6,
return 3,
conditional branch(ne, to iindex=-1) 12,13,
14 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 12,
15 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>14 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
16 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 12,
17 = checkcast <Application,Ljava/lang/Integer>16 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelAuthentication(IBinder p1, String p2, long p3){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.cancelAuthentication(v4, p1, p3);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	int v6 = Slog.e(""FaceService"", ""Single sensor, but provider not found"");
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthentication(Landroid/os/IBinder;Ljava/lang/String;J)V","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 10 @13 exception:11,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 12,13,
return,","depth : 0
public void cancelAuthentication(IBinder p1, String p2, long p3){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for cancelAuthentication"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getLockoutModeForUser(II)I","0","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
public int getLockoutModeForUser(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for getLockoutModeForUser"");
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getLockoutModeForUser(II)I","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
public int getLockoutModeForUser(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for getLockoutModeForUser"");
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getLockoutModeForUser(II)I","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 14,","depth : 0
public int getLockoutModeForUser(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = v3.getLockoutModeForUser(p1, p2);
	return v4;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getLockoutModeForUser(II)I","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
public int getLockoutModeForUser(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for getLockoutModeForUser"");
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getLockoutModeForUser(II)I","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 14,","depth : 0
public int getLockoutModeForUser(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = v3.getLockoutModeForUser(p1, p2);
	return v4;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getLockoutModeForUser(II)I","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
public int getLockoutModeForUser(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for getLockoutModeForUser"");
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","0","14 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
16 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 14 @14 exception:15,
conditional branch(ne, to iindex=-1) 16,17,
18 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 16,
19 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>18 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
20 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 16,
21 = checkcast <Application,Ljava/lang/Integer>20 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void setFeature(IBinder p1, int p2, int p3, boolean p4, byte[] p5, IFaceServiceReceiver p6, String p7){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleSetFeature(v4, p1, p2, p3, p4, p5, p6, p7);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","1","14 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
16 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 14 @14 exception:15,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 16,17,
18 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 16,
19 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>18 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
20 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 16,
21 = checkcast <Application,Ljava/lang/Integer>20 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void setFeature(IBinder p1, int p2, int p3, boolean p4, byte[] p5, IFaceServiceReceiver p6, String p7){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleSetFeature(v4, p1, p2, p3, p4, p5, p6, p7);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","1","14 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
16 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 14 @14 exception:15,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 16,17,
return,","depth : 0
public void setFeature(IBinder p1, int p2, int p3, boolean p4, byte[] p5, IFaceServiceReceiver p6, String p7){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for setFeature"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","14 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
16 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 14 @14 exception:15,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 16,17,
18 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 16,
19 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>18 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
20 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 16,
21 = checkcast <Application,Ljava/lang/Integer>20 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void setFeature(IBinder p1, int p2, int p3, boolean p4, byte[] p5, IFaceServiceReceiver p6, String p7){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleSetFeature(v4, p1, p2, p3, p4, p5, p6, p7);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","14 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
16 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 14 @14 exception:15,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
return 6,
return 3,
conditional branch(ne, to iindex=-1) 16,17,
18 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 16,
19 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>18 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
20 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 16,
21 = checkcast <Application,Ljava/lang/Integer>20 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void setFeature(IBinder p1, int p2, int p3, boolean p4, byte[] p5, IFaceServiceReceiver p6, String p7){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.scheduleSetFeature(v4, p1, p2, p3, p4, p5, p6, p7);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	int v6 = Slog.e(""FaceService"", ""Single sensor, but provider not found"");
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","setFeature(Landroid/os/IBinder;IIZ[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","14 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
16 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 14 @14 exception:15,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 16,17,
return,","depth : 0
public void setFeature(IBinder p1, int p2, int p3, boolean p4, byte[] p5, IFaceServiceReceiver p6, String p7){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for setFeature"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelEnrollment(Landroid/os/IBinder;J)V","0","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 9 @13 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 11,
14 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>13 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
15 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 11,
16 = checkcast <Application,Ljava/lang/Integer>15 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelEnrollment(IBinder p1, long p2){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.cancelEnrollment(v4, p1, p2);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelEnrollment(Landroid/os/IBinder;J)V","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 9 @13 exception:10,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 11,
14 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>13 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
15 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 11,
16 = checkcast <Application,Ljava/lang/Integer>15 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelEnrollment(IBinder p1, long p2){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.cancelEnrollment(v4, p1, p2);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelEnrollment(Landroid/os/IBinder;J)V","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 9 @13 exception:10,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 11,12,
return,","depth : 0
public void cancelEnrollment(IBinder p1, long p2){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for cancelEnrollment"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelEnrollment(Landroid/os/IBinder;J)V","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 9 @13 exception:10,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 11,
14 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>13 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
15 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 11,
16 = checkcast <Application,Ljava/lang/Integer>15 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelEnrollment(IBinder p1, long p2){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.cancelEnrollment(v4, p1, p2);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelEnrollment(Landroid/os/IBinder;J)V","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 9 @13 exception:10,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
return 6,
return 3,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 11,
14 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>13 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
15 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 11,
16 = checkcast <Application,Ljava/lang/Integer>15 <Application,Ljava/lang/Integer>,
return,","depth : 0
public void cancelEnrollment(IBinder p1, long p2){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	Pair.second.cancelEnrollment(v4, p1, p2);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	int v6 = Slog.e(""FaceService"", ""Single sensor, but provider not found"");
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelEnrollment(Landroid/os/IBinder;J)V","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 9 @13 exception:10,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 11,12,
return,","depth : 0
public void cancelEnrollment(IBinder p1, long p2){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for cancelEnrollment"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V","0","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void resetLockout(IBinder p1, int p2, int p3, byte[] p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Null provider for resetLockout, caller: "");
	StringBuilder v6 = v3.append(p5);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void resetLockout(IBinder p1, int p2, int p3, byte[] p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Null provider for resetLockout, caller: "");
	StringBuilder v6 = v3.append(p5);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void resetLockout(IBinder p1, int p2, int p3, byte[] p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	v3.scheduleResetLockout(p2, p3, p4);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void resetLockout(IBinder p1, int p2, int p3, byte[] p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Null provider for resetLockout, caller: "");
	StringBuilder v6 = v3.append(p5);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void resetLockout(IBinder p1, int p2, int p3, byte[] p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	v3.scheduleResetLockout(p2, p3, p4);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","resetLockout(Landroid/os/IBinder;II[BLjava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void resetLockout(IBinder p1, int p2, int p3, byte[] p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Null provider for resetLockout, caller: "");
	StringBuilder v6 = v3.append(p5);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","registerAuthenticators(Ljava/util/List;)V","0","8 = new <Application,Lcom/android/server/ServiceThread>@11,
14 = new <Application,Landroid/os/Handler>@24,
18 = new <Application,Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0>@33,
return,","depth : 0
public void registerAuthenticators(List p1){
	ServiceThread v2 = new ServiceThread(""FaceService"",10,1);
	v2.start();
	Handler v4 = new Handler(v5);
	Looper v5 = v2.getLooper();
	FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0 v6 = new FaceService$FaceServiceWrapper$$ExternalSyntheticLambda0(p0,p1);
	boolean v8 = v4.post(v6);
	return;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","startPreparedClient(II)V","0","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
return,","depth : 0
public void startPreparedClient(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for startPreparedClient"");
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","startPreparedClient(II)V","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return,","depth : 0
public void startPreparedClient(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for startPreparedClient"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","startPreparedClient(II)V","1","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return,","depth : 0
public void startPreparedClient(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v3.startPreparedClient(p1, p2);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","startPreparedClient(II)V","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return,","depth : 0
public void startPreparedClient(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for startPreparedClient"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","startPreparedClient(II)V","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return,","depth : 0
public void startPreparedClient(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v3.startPreparedClient(p1, p2);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","startPreparedClient(II)V","2","9 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
11 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 9,2 @13 exception:10,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 11,12,
return,","depth : 0
public void startPreparedClient(int p1, int p2){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for startPreparedClient"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;","0","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
16 = new <Application,Ljava/lang/StringBuilder>@19,
return 13,","depth : 0
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Null provider for createTestSession, sensorId: "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;","1","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
16 = new <Application,Ljava/lang/StringBuilder>@19,
return 13,","depth : 0
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Null provider for createTestSession, sensorId: "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;","1","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
return 15,","depth : 0
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	ITestSession v4 = v3.createTestSession(p1, p2, p3);
	return v4;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
16 = new <Application,Ljava/lang/StringBuilder>@19,
return 13,","depth : 0
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Null provider for createTestSession, sensorId: "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
return 15,","depth : 0
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	ITestSession v4 = v3.createTestSession(p1, p2, p3);
	return v4;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","createTestSession(ILandroid/hardware/biometrics/ITestSessionCallback;Ljava/lang/String;)Landroid/hardware/biometrics/ITestSession;","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
16 = new <Application,Ljava/lang/StringBuilder>@19,
return 13,","depth : 0
public ITestSession createTestSession(int p1, ITestSessionCallback p2, String p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Null provider for createTestSession, sensorId: "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","isHardwareDetected(ILjava/lang/String;)Z","0","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @17 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
19 = new <Application,Ljava/lang/StringBuilder>@25,
return 14,","depth : 0
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Null provider for isHardwareDetected, caller: "");
	StringBuilder v7 = v4.append(p2);
	String v8 = v4.toString();
	int v9 = Slog.w(""FaceService"", v8);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","isHardwareDetected(ILjava/lang/String;)Z","1","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @17 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
19 = new <Application,Ljava/lang/StringBuilder>@25,
return 14,","depth : 0
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Null provider for isHardwareDetected, caller: "");
	StringBuilder v7 = v4.append(p2);
	String v8 = v4.toString();
	int v9 = Slog.w(""FaceService"", v8);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","isHardwareDetected(ILjava/lang/String;)Z","1","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @17 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
return 16,","depth : 0
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	boolean v5 = v4.isHardwareDetected(p1);
	Binder.restoreCallingIdentity(v3);
	return v5;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","isHardwareDetected(ILjava/lang/String;)Z","2","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @17 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
19 = new <Application,Ljava/lang/StringBuilder>@25,
return 14,","depth : 0
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Null provider for isHardwareDetected, caller: "");
	StringBuilder v7 = v4.append(p2);
	String v8 = v4.toString();
	int v9 = Slog.w(""FaceService"", v8);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","isHardwareDetected(ILjava/lang/String;)Z","2","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @17 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
return 16,","depth : 0
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	boolean v5 = v4.isHardwareDetected(p1);
	Binder.restoreCallingIdentity(v3);
	return v5;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","isHardwareDetected(ILjava/lang/String;)Z","2","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @17 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
19 = new <Application,Ljava/lang/StringBuilder>@25,
return 14,","depth : 0
public boolean isHardwareDetected(int p1, String p2){
	long v3 = Binder.clearCallingIdentity();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Null provider for isHardwareDetected, caller: "");
	StringBuilder v7 = v4.append(p2);
	String v8 = v4.toString();
	int v9 = Slog.w(""FaceService"", v8);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V","0","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
return,","depth : 0
public void invalidateAuthenticatorId(int p1, int p2, IInvalidationCallback p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for invalidateAuthenticatorId"");
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V","1","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
return,","depth : 0
public void invalidateAuthenticatorId(int p1, int p2, IInvalidationCallback p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for invalidateAuthenticatorId"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V","1","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
return,","depth : 0
public void invalidateAuthenticatorId(int p1, int p2, IInvalidationCallback p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v3.scheduleInvalidateAuthenticatorId(p1, p2, p3);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
return,","depth : 0
public void invalidateAuthenticatorId(int p1, int p2, IInvalidationCallback p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for invalidateAuthenticatorId"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
return,","depth : 0
public void invalidateAuthenticatorId(int p1, int p2, IInvalidationCallback p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v3.scheduleInvalidateAuthenticatorId(p1, p2, p3);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","invalidateAuthenticatorId(IILandroid/hardware/biometrics/IInvalidationCallback;)V","2","10 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
12 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 10,2 @13 exception:11,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 12,13,
return,","depth : 0
public void invalidateAuthenticatorId(int p1, int p2, IInvalidationCallback p3){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for invalidateAuthenticatorId"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","removeAll(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","0","11 = new <Application,Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$1>@11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
15 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmServiceProviders(Lcom/android/server/biometrics/sensors/face/FaceService;)Ljava/util/List; > 13 @18 exception:14,
conditional branch(eq, to iindex=-1) 19,20,
return,","depth : 0
public void removeAll(IBinder p1, int p2, IFaceServiceReceiver p3, String p4){
	FaceService$FaceServiceWrapper$1 v2 = new FaceService$FaceServiceWrapper$1(p0,p3);
	List v4 = FaceService.-$$Nest$fgetmServiceProviders(this.this$0);
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","removeAll(Landroid/os/IBinder;ILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","1","11 = new <Application,Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper$1>@11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
15 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$fgetmServiceProviders(Lcom/android/server/biometrics/sensors/face/FaceService;)Ljava/util/List; > 13 @18 exception:14,
2 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
return 2,
conditional branch(eq, to iindex=-1) 19,20,
return,","depth : 0
public void removeAll(IBinder p1, int p2, IFaceServiceReceiver p3, String p4){
	FaceService$FaceServiceWrapper$1 v2 = new FaceService$FaceServiceWrapper$1(p0,p3);
	List v4 = FaceService.-$$Nest$fgetmServiceProviders(this.this$0);
	Iterator v5 = v4.iterator();
	boolean v6 = v5.hasNext();
	return;
}
-----
depth : 1
public List -$$Nest$fgetmServiceProviders(FaceService p1){
	return this.mServiceProviders;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","revokeChallenge(Landroid/os/IBinder;IILjava/lang/String;J)V","0","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void revokeChallenge(IBinder p1, int p2, int p3, String p4, long p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for revokeChallenge, sensorId: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","revokeChallenge(Landroid/os/IBinder;IILjava/lang/String;J)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void revokeChallenge(IBinder p1, int p2, int p3, String p4, long p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for revokeChallenge, sensorId: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","revokeChallenge(Landroid/os/IBinder;IILjava/lang/String;J)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void revokeChallenge(IBinder p1, int p2, int p3, String p4, long p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	v3.scheduleRevokeChallenge(p2, p3, p1, p4, p5);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","revokeChallenge(Landroid/os/IBinder;IILjava/lang/String;J)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void revokeChallenge(IBinder p1, int p2, int p3, String p4, long p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for revokeChallenge, sensorId: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","revokeChallenge(Landroid/os/IBinder;IILjava/lang/String;J)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void revokeChallenge(IBinder p1, int p2, int p3, String p4, long p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	v3.scheduleRevokeChallenge(p2, p3, p1, p4, p5);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","revokeChallenge(Landroid/os/IBinder;IILjava/lang/String;J)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void revokeChallenge(IBinder p1, int p2, int p3, String p4, long p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for revokeChallenge, sensorId: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","enrollRemotely(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[I)J","0","return 13,","depth : 0
public long enrollRemotely(int p1, IBinder p2, byte[] p3, IFaceServiceReceiver p4, String p5, [I p6){
	return -1;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;","0","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
conditional branch(ne, to iindex=-1) 23,24,
27 = new <Application,Ljava/lang/StringBuilder>@36,
return 40,","depth : 0
public List getEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v6 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Null provider for getEnrolledFaces, caller: "");
	StringBuilder v9 = v6.append(p3);
	String v10 = v6.toString();
	int v11 = Slog.w(""FaceService"", v10);
	List v12 = Collections.emptyList();
	return v12;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;","1","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
27 = new <Application,Ljava/lang/StringBuilder>@36,
return 40,","depth : 0
public List getEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v6 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Null provider for getEnrolledFaces, caller: "");
	StringBuilder v9 = v6.append(p3);
	String v10 = v6.toString();
	int v11 = Slog.w(""FaceService"", v10);
	List v12 = Collections.emptyList();
	return v12;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;","1","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
27 = new <Application,Ljava/lang/StringBuilder>@36,
return 40,","depth : 0
public List getEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Null provider for getEnrolledFaces, caller: "");
	StringBuilder v7 = v4.append(p3);
	String v8 = v4.toString();
	int v9 = Slog.w(""FaceService"", v8);
	List v10 = Collections.emptyList();
	return v10;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;","2","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
27 = new <Application,Ljava/lang/StringBuilder>@36,
return 40,","depth : 0
public List getEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v6 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Null provider for getEnrolledFaces, caller: "");
	StringBuilder v9 = v6.append(p3);
	String v10 = v6.toString();
	int v11 = Slog.w(""FaceService"", v10);
	List v12 = Collections.emptyList();
	return v12;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;","2","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
27 = new <Application,Ljava/lang/StringBuilder>@36,
return 40,","depth : 0
public List getEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Null provider for getEnrolledFaces, caller: "");
	StringBuilder v7 = v4.append(p3);
	String v8 = v4.toString();
	int v9 = Slog.w(""FaceService"", v8);
	List v10 = Collections.emptyList();
	return v10;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getEnrolledFaces(IILjava/lang/String;)Ljava/util/List;","2","21 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
23 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 21,2 @30 exception:22,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 23,24,
return 26,","depth : 0
public List getEnrolledFaces(int p1, int p2, String p3){
	ServiceProvider v6 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	List v7 = v6.getEnrolledFaces(p1, p2);
	return v7;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V","0","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @13 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
return,","depth : 0
public void cancelAuthenticationFromService(int p1, IBinder p2, String p3, long p4){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for cancelAuthenticationFromService"");
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V","1","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @13 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
return,","depth : 0
public void cancelAuthenticationFromService(int p1, IBinder p2, String p3, long p4){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for cancelAuthenticationFromService"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V","1","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @13 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
return,","depth : 0
public void cancelAuthenticationFromService(int p1, IBinder p2, String p3, long p4){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v3.cancelAuthentication(p1, p2, p4);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V","2","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @13 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
return,","depth : 0
public void cancelAuthenticationFromService(int p1, IBinder p2, String p3, long p4){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for cancelAuthenticationFromService"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V","2","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @13 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
return,","depth : 0
public void cancelAuthenticationFromService(int p1, IBinder p2, String p3, long p4){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v3.cancelAuthentication(p1, p2, p4);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","cancelAuthenticationFromService(ILandroid/os/IBinder;Ljava/lang/String;J)V","2","11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @13 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 13,14,
return,","depth : 0
public void cancelAuthenticationFromService(int p1, IBinder p2, String p3, long p4){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for cancelAuthenticationFromService"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","dumpSensorServiceStateProto(IZ)[B","0","9 = new <Application,Landroid/util/proto/ProtoOutputStream>@11,
11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,14,
return 19,","depth : 0
public byte[] dumpSensorServiceStateProto(int p1, boolean p2){
	ProtoOutputStream v2 = new ProtoOutputStream();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v4.dumpProtoState(p1, v2, p2);
	v2.flush();
	byte[] v7 = v2.getBytes();
	return v7;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","dumpSensorServiceStateProto(IZ)[B","1","9 = new <Application,Landroid/util/proto/ProtoOutputStream>@11,
11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @18 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 13,14,
return 19,","depth : 0
public byte[] dumpSensorServiceStateProto(int p1, boolean p2){
	ProtoOutputStream v2 = new ProtoOutputStream();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v4.dumpProtoState(p1, v2, p2);
	v2.flush();
	byte[] v7 = v2.getBytes();
	return v7;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","dumpSensorServiceStateProto(IZ)[B","1","9 = new <Application,Landroid/util/proto/ProtoOutputStream>@11,
11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @18 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 13,14,
return 19,","depth : 0
public byte[] dumpSensorServiceStateProto(int p1, boolean p2){
	ProtoOutputStream v2 = new ProtoOutputStream();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v2.flush();
	byte[] v6 = v2.getBytes();
	return v6;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","dumpSensorServiceStateProto(IZ)[B","2","9 = new <Application,Landroid/util/proto/ProtoOutputStream>@11,
11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @18 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 13,14,
return 19,","depth : 0
public byte[] dumpSensorServiceStateProto(int p1, boolean p2){
	ProtoOutputStream v2 = new ProtoOutputStream();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v4.dumpProtoState(p1, v2, p2);
	v2.flush();
	byte[] v7 = v2.getBytes();
	return v7;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","dumpSensorServiceStateProto(IZ)[B","2","9 = new <Application,Landroid/util/proto/ProtoOutputStream>@11,
11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @18 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(eq, to iindex=-1) 13,14,
return 19,","depth : 0
public byte[] dumpSensorServiceStateProto(int p1, boolean p2){
	ProtoOutputStream v2 = new ProtoOutputStream();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v2.flush();
	byte[] v6 = v2.getBytes();
	return v6;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","dumpSensorServiceStateProto(IZ)[B","2","9 = new <Application,Landroid/util/proto/ProtoOutputStream>@11,
11 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
13 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 11,2 @18 exception:12,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(eq, to iindex=-1) 13,14,
return 19,","depth : 0
public byte[] dumpSensorServiceStateProto(int p1, boolean p2){
	ProtoOutputStream v2 = new ProtoOutputStream();
	ServiceProvider v4 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	v4.dumpProtoState(p1, v2, p2);
	v2.flush();
	byte[] v7 = v2.getBytes();
	return v7;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V","0","17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 17,2 @17 exception:18,
conditional branch(ne, to iindex=-1) 19,20,
21 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@31,
return,","depth : 0
public void prepareForAuthentication(int p1, boolean p2, IBinder p3, long p4, int p5, IBiometricSensorReceiver p6, String p7, long p8, int p9, boolean p10){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	ClientMonitorCallbackConverter v3 = new ClientMonitorCallbackConverter(p6);
	v3.scheduleAuthenticate(p1, p3, p4, p5, p9, v3, p7, p8, 1, 2, p10, 0);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V","1","17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 17,2 @17 exception:18,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 19,20,
21 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@31,
return,","depth : 0
public void prepareForAuthentication(int p1, boolean p2, IBinder p3, long p4, int p5, IBiometricSensorReceiver p6, String p7, long p8, int p9, boolean p10){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	ClientMonitorCallbackConverter v3 = new ClientMonitorCallbackConverter(p6);
	v3.scheduleAuthenticate(p1, p3, p4, p5, p9, v3, p7, p8, 1, 2, p10, 0);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V","1","17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 17,2 @17 exception:18,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 19,20,
return,","depth : 0
public void prepareForAuthentication(int p1, boolean p2, IBinder p3, long p4, int p5, IBiometricSensorReceiver p6, String p7, long p8, int p9, boolean p10){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for prepareForAuthentication"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V","2","17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 17,2 @17 exception:18,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 19,20,
21 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@31,
return,","depth : 0
public void prepareForAuthentication(int p1, boolean p2, IBinder p3, long p4, int p5, IBiometricSensorReceiver p6, String p7, long p8, int p9, boolean p10){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	ClientMonitorCallbackConverter v3 = new ClientMonitorCallbackConverter(p6);
	v3.scheduleAuthenticate(p1, p3, p4, p5, p9, v3, p7, p8, 1, 2, p10, 0);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V","2","17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 17,2 @17 exception:18,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 19,20,
return,","depth : 0
public void prepareForAuthentication(int p1, boolean p2, IBinder p3, long p4, int p5, IBiometricSensorReceiver p6, String p7, long p8, int p9, boolean p10){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	int v4 = Slog.w(""FaceService"", ""Null provider for prepareForAuthentication"");
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","prepareForAuthentication(IZLandroid/os/IBinder;JILandroid/hardware/biometrics/IBiometricSensorReceiver;Ljava/lang/String;JIZ)V","2","17 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
19 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 17,2 @17 exception:18,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 19,20,
21 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@31,
return,","depth : 0
public void prepareForAuthentication(int p1, boolean p2, IBinder p3, long p4, int p5, IBiometricSensorReceiver p6, String p7, long p8, int p9, boolean p10){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p1);
	ClientMonitorCallbackConverter v3 = new ClientMonitorCallbackConverter(p6);
	v3.scheduleAuthenticate(p1, p3, p4, p5, p9, v3, p7, p8, 1, 2, p10, 0);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J","0","13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 15,6 @20 exception:16,
18 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
22 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 20,6 @30 exception:21,
23 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
25 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 23 @36 exception:24,
conditional branch(ne, to iindex=-1) 25,26,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 25,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 25,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@65,
return 36,","depth : 0
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p5);
	Context v5 = this.this$0.getContext();
	boolean v6 = Utils.isKeyguard(v5, p5);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p4);
	long v10 = Pair.second.scheduleAuthenticate(v8, p1, p2, p3, 0, v8, p5, 0, v4, v6, p6);
	return v10;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J","1","13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 15,6 @20 exception:16,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
18 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
22 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 20,6 @30 exception:21,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
23 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
25 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 23 @36 exception:24,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 25,26,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 25,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 25,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@65,
return 36,","depth : 0
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p5);
	Context v5 = this.this$0.getContext();
	boolean v6 = Utils.isKeyguard(v5, p5);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p4);
	long v10 = Pair.second.scheduleAuthenticate(v8, p1, p2, p3, 0, v8, p5, 0, v4, v6, p6);
	return v10;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J","1","13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 15,6 @20 exception:16,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
18 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
22 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 20,6 @30 exception:21,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
23 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
25 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 23 @36 exception:24,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 25,26,
return 41,","depth : 0
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p5);
	Context v5 = this.this$0.getContext();
	boolean v6 = Utils.isKeyguard(v5, p5);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Slog.w(""FaceService"", ""Null provider for authenticate"");
	return -1;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J","2","13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 15,6 @20 exception:16,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
18 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
22 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 20,6 @30 exception:21,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
23 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
25 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 23 @36 exception:24,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 25,26,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 25,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 25,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@65,
return 36,","depth : 0
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p5);
	Context v5 = this.this$0.getContext();
	boolean v6 = Utils.isKeyguard(v5, p5);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p4);
	long v10 = Pair.second.scheduleAuthenticate(v8, p1, p2, p3, 0, v8, p5, 0, v4, v6, p6);
	return v10;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J","2","13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 15,6 @20 exception:16,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
18 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
22 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 20,6 @30 exception:21,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
23 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
25 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 23 @36 exception:24,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 25,26,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 25,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 25,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@65,
return 36,","depth : 0
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p5);
	Context v5 = this.this$0.getContext();
	boolean v6 = Utils.isKeyguard(v5, p5);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p4);
	long v10 = Pair.second.scheduleAuthenticate(v8, p1, p2, p3, 0, v8, p5, 0, v4, v6, p6);
	return v10;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","authenticate(Landroid/os/IBinder;JILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;Z)J","2","13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 15,6 @20 exception:16,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
18 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
22 = invokestatic < Application, Lcom/android/server/biometrics/Utils, isKeyguard(Landroid/content/Context;Ljava/lang/String;)Z > 20,6 @30 exception:21,
4 = invokestatic < Application, Lcom/android/server/biometrics/Utils, hasInternalPermission(Landroid/content/Context;)Z > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
9 = invokevirtual < Application, Landroid/content/res/Resources, getString(I)Ljava/lang/String; > 6,7 @11 exception:8,
11 = invokestatic < Application, Landroid/content/ComponentName, unflattenFromString(Ljava/lang/String;)Landroid/content/ComponentName; > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
14 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 11 @21 exception:13,
goto (from iindex= 12 to iindex = 2),
15 = phi  14,12,
conditional branch(eq, to iindex=-1) 4,12,
conditional branch(eq, to iindex=-1) 15,12,
conditional branch(eq, to iindex=-1) 19,12,
goto (from iindex= 20 to iindex = 2),
24 = phi  23,12,
return 24,
23 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
25 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 23 @36 exception:24,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 25,26,
27 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 25,
28 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>27 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
29 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 25,
30 = checkcast <Application,Ljava/lang/Integer>29 <Application,Ljava/lang/Integer>,
33 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@65,
return 36,","depth : 0
public long authenticate(IBinder p1, long p2, int p3, IFaceServiceReceiver p4, String p5, boolean p6){
	Context v3 = this.this$0.getContext();
	boolean v4 = Utils.isKeyguard(v3, p5);
	Context v5 = this.this$0.getContext();
	boolean v6 = Utils.isKeyguard(v5, p5);
	Pair v7 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v8 = Pair.first.intValue();
	ClientMonitorCallbackConverter v8 = new ClientMonitorCallbackConverter(p4);
	long v10 = Pair.second.scheduleAuthenticate(v8, p1, p2, p3, 0, v8, p5, 0, v4, v6, p6);
	return v10;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public boolean isKeyguard(Context p1, String p2){
	boolean v1 = Utils.hasInternalPermission(p1);
	Resources v2 = p1.getResources();
	String v3 = v2.getString(17039993);
	ComponentName v4 = ComponentName.unflattenFromString(v3);
	String v5 = v4.getPackageName();
	boolean v6 = [resolveCodeAbst] + 15 = phi  14,12.equals(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasInternalPermission(Context p1){
	return phiInstruction;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","0","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void generateChallenge(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for generateChallenge, sensorId: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void generateChallenge(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for generateChallenge, sensorId: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void generateChallenge(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void generateChallenge(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for generateChallenge, sensorId: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>10 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 13,8,
return 11,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void generateChallenge(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	v3.scheduleGenerateChallenge(p2, p3, p1, p4, p5);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	boolean v4 = v3.containsSensor(p1);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","generateChallenge(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetProviderForSensor(Lcom/android/server/biometrics/sensors/face/FaceService;I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 12,3 @13 exception:13,
4 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getProviderForSensor(I)Lcom/android/server/biometrics/sensors/face/ServiceProvider; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 7,8,
return 8,
return 4,
conditional branch(ne, to iindex=-1) 14,15,
17 = new <Application,Ljava/lang/StringBuilder>@19,
return,","depth : 0
public void generateChallenge(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	ServiceProvider v3 = FaceService.-$$Nest$mgetProviderForSensor(this.this$0, p2);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""No matching sensor for generateChallenge, sensorId: "");
	StringBuilder v6 = v3.append(p2);
	String v7 = v3.toString();
	int v8 = Slog.w(""FaceService"", v7);
	return;
}
-----
depth : 1
public ServiceProvider -$$Nest$mgetProviderForSensor(FaceService p1, int p2){
	ServiceProvider v1 = p1.getProviderForSensor(p2);
	return v1;
}
-----
depth : 2
public ServiceProvider getProviderForSensor(int p1){
	Iterator v1 = this.mServiceProviders.iterator();
	boolean v2 = v1.hasNext();
	return 0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J","0","15 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 15 @14 exception:16,
conditional branch(ne, to iindex=-1) 17,18,
19 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 17,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
21 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 17,
22 = checkcast <Application,Ljava/lang/Integer>21 <Application,Ljava/lang/Integer>,
return 26,","depth : 0
public long enroll(int p1, IBinder p2, byte[] p3, IFaceServiceReceiver p4, String p5, [I p6, Surface p7, boolean p8){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	long v5 = Pair.second.scheduleEnroll(v4, p2, p3, p1, p4, p5, p6, p7, p8);
	return v5;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J","1","15 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 15 @14 exception:16,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 17,18,
19 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 17,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
21 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 17,
22 = checkcast <Application,Ljava/lang/Integer>21 <Application,Ljava/lang/Integer>,
return 26,","depth : 0
public long enroll(int p1, IBinder p2, byte[] p3, IFaceServiceReceiver p4, String p5, [I p6, Surface p7, boolean p8){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	long v5 = Pair.second.scheduleEnroll(v4, p2, p3, p1, p4, p5, p6, p7, p8);
	return v5;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J","1","15 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 15 @14 exception:16,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 17,18,
return 31,","depth : 0
public long enroll(int p1, IBinder p2, byte[] p3, IFaceServiceReceiver p4, String p5, [I p6, Surface p7, boolean p8){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for enroll"");
	return -1;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J","2","15 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 15 @14 exception:16,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 17,18,
19 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 17,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
21 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 17,
22 = checkcast <Application,Ljava/lang/Integer>21 <Application,Ljava/lang/Integer>,
return 26,","depth : 0
public long enroll(int p1, IBinder p2, byte[] p3, IFaceServiceReceiver p4, String p5, [I p6, Surface p7, boolean p8){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	long v5 = Pair.second.scheduleEnroll(v4, p2, p3, p1, p4, p5, p6, p7, p8);
	return v5;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J","2","15 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 15 @14 exception:16,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
return 6,
return 3,
conditional branch(ne, to iindex=-1) 17,18,
19 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 17,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
21 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 17,
22 = checkcast <Application,Ljava/lang/Integer>21 <Application,Ljava/lang/Integer>,
return 26,","depth : 0
public long enroll(int p1, IBinder p2, byte[] p3, IFaceServiceReceiver p4, String p5, [I p6, Surface p7, boolean p8){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	long v5 = Pair.second.scheduleEnroll(v4, p2, p3, p1, p4, p5, p6, p7, p8);
	return v5;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	int v6 = Slog.e(""FaceService"", ""Single sensor, but provider not found"");
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","enroll(ILandroid/os/IBinder;[BLandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;[ILandroid/view/Surface;Z)J","2","15 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
17 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 15 @14 exception:16,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 17,18,
return 31,","depth : 0
public long enroll(int p1, IBinder p2, byte[] p3, IFaceServiceReceiver p4, String p5, [I p6, Surface p7, boolean p8){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for enroll"");
	return -1;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getSensorPropertiesInternal(Ljava/lang/String;)Ljava/util/List;","0","8 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
10 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSensorProperties(Lcom/android/server/biometrics/sensors/face/FaceService;)Ljava/util/List; > 8 @13 exception:9,
return 10,","depth : 0
public List getSensorPropertiesInternal(String p1){
	List v3 = FaceService.-$$Nest$mgetSensorProperties(this.this$0);
	return v3;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getSensorPropertiesInternal(Ljava/lang/String;)Ljava/util/List;","1","8 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
10 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSensorProperties(Lcom/android/server/biometrics/sensors/face/FaceService;)Ljava/util/List; > 8 @13 exception:9,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSensorProperties()Ljava/util/List; > 1 @0 exception:2,
return 3,
return 10,","depth : 0
public List getSensorPropertiesInternal(String p1){
	List v3 = FaceService.-$$Nest$mgetSensorProperties(this.this$0);
	return v3;
}
-----
depth : 1
public List -$$Nest$mgetSensorProperties(FaceService p1){
	List v1 = p1.getSensorProperties();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getSensorPropertiesInternal(Ljava/lang/String;)Ljava/util/List;","2","8 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
10 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSensorProperties(Lcom/android/server/biometrics/sensors/face/FaceService;)Ljava/util/List; > 8 @13 exception:9,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSensorProperties()Ljava/util/List; > 1 @0 exception:2,
2 = new <Application,Ljava/util/ArrayList>@0,
4 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 8,9,
return 2,
return 3,
return 10,","depth : 0
public List getSensorPropertiesInternal(String p1){
	List v3 = FaceService.-$$Nest$mgetSensorProperties(this.this$0);
	return v3;
}
-----
depth : 1
public List -$$Nest$mgetSensorProperties(FaceService p1){
	List v1 = p1.getSensorProperties();
	return v1;
}
-----
depth : 2
public List getSensorProperties(){
	ArrayList v0 = new ArrayList();
	Iterator v2 = this.mServiceProviders.iterator();
	boolean v3 = v2.hasNext();
	return v0;
}
-----
","NORMAL"

"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","0","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
16 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 14,
17 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>16 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
18 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 14,
19 = checkcast <Application,Ljava/lang/Integer>18 <Application,Ljava/lang/Integer>,
22 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@40,
return,","depth : 0
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	ClientMonitorCallbackConverter v4 = new ClientMonitorCallbackConverter(p4);
	Pair.second.scheduleGetFeature(v4, p1, p2, p3, v4, p5);
	return;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
16 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 14,
17 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>16 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
18 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 14,
19 = checkcast <Application,Ljava/lang/Integer>18 <Application,Ljava/lang/Integer>,
22 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@40,
return,","depth : 0
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	ClientMonitorCallbackConverter v4 = new ClientMonitorCallbackConverter(p4);
	Pair.second.scheduleGetFeature(v4, p1, p2, p3, v4, p5);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","1","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for getFeature"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
16 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 14,
17 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>16 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
18 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 14,
19 = checkcast <Application,Ljava/lang/Integer>18 <Application,Ljava/lang/Integer>,
22 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@40,
return,","depth : 0
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	ClientMonitorCallbackConverter v4 = new ClientMonitorCallbackConverter(p4);
	Pair.second.scheduleGetFeature(v4, p1, p2, p3, v4, p5);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
return 6,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
16 = getfield < Application, Landroid/util/Pair, second, <Application,Ljava/lang/Object> > 14,
17 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>16 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
18 = getfield < Application, Landroid/util/Pair, first, <Application,Ljava/lang/Object> > 14,
19 = checkcast <Application,Ljava/lang/Integer>18 <Application,Ljava/lang/Integer>,
22 = new <Application,Lcom/android/server/biometrics/sensors/ClientMonitorCallbackConverter>@40,
return,","depth : 0
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Pair.first.intValue();
	ClientMonitorCallbackConverter v4 = new ClientMonitorCallbackConverter(p4);
	Pair.second.scheduleGetFeature(v4, p1, p2, p3, v4, p5);
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	int v6 = Slog.e(""FaceService"", ""Single sensor, but provider not found"");
	return 0;
}
-----
","NORMAL"
"Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper","getFeature(Landroid/os/IBinder;IILandroid/hardware/face/IFaceServiceReceiver;Ljava/lang/String;)V","2","12 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService$FaceServiceWrapper, this$0, <Application,Lcom/android/server/biometrics/sensors/face/FaceService> > 1,
14 = invokestatic < Application, Lcom/android/server/biometrics/sensors/face/FaceService, -$$Nest$mgetSingleProvider(Lcom/android/server/biometrics/sensors/face/FaceService;)Landroid/util/Pair; > 12 @13 exception:13,
3 = invokevirtual < Application, Lcom/android/server/biometrics/sensors/face/FaceService, getSingleProvider()Landroid/util/Pair; > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 5,8,
11 = checkcast <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>10 <Application,Landroid/hardware/face/FaceSensorPropertiesInternal>,
12 = getfield < Application, Landroid/hardware/face/FaceSensorPropertiesInternal, sensorId, <Primordial,I> > 11,
13 = getfield < Application, Lcom/android/server/biometrics/sensors/face/FaceService, mServiceProviders, <Application,Ljava/util/List> > 1,
conditional branch(eq, to iindex=-1) 17,6,
20 = checkcast <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>19 <Application,Lcom/android/server/biometrics/sensors/face/ServiceProvider>,
conditional branch(eq, to iindex=-1) 22,6,
30 = new <Application,Landroid/util/Pair>@72,
return 30,
return 3,
conditional branch(ne, to iindex=-1) 14,15,
return,","depth : 0
public void getFeature(IBinder p1, int p2, int p3, IFaceServiceReceiver p4, String p5){
	Pair v3 = FaceService.-$$Nest$mgetSingleProvider(this.this$0);
	int v4 = Slog.w(""FaceService"", ""Null provider for getFeature"");
	return;
}
-----
depth : 1
public Pair -$$Nest$mgetSingleProvider(FaceService p1){
	Pair v1 = p1.getSingleProvider();
	return v1;
}
-----
depth : 2
public Pair getSingleProvider(){
	List v1 = p0.getSensorProperties();
	int v2 = v1.size();
	Object v3 = v1.get(0);
	Iterator v4 = this.mServiceProviders.iterator();
	boolean v5 = v4.hasNext();
	Object v6 = v4.next();
	boolean v7 = v6.containsSensor(FaceSensorPropertiesInternal.sensorId);
	Pair v7 = new Pair(v8,v6);
	Integer v8 = Integer.valueOf(FaceSensorPropertiesInternal.sensorId);
	return v7;
}
-----
","NORMAL"

