"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","removeNetdEventCallback(I)Z","0","invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, enforceNetdEventListeningPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mNetdListener, <Application,Lcom/android/server/connectivity/NetdEventListenerService> > 4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/connectivity/NetdEventListenerService, removeNetdEventCallback(I)Z > 5,2 @11 exception:7,
return 8,","depth : 0
-----
","public boolean removeNetdEventCallback(int p1){
	if (IpConnectivityMetrics.mNetdListener != 0) {
		boolean v2 = IpConnectivityMetrics.mNetdListener.removeNetdEventCallback(p1);
		return v2;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","removeNetdEventCallback(I)Z","1","invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, enforceNetdEventListeningPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mNetdListener, <Application,Lcom/android/server/connectivity/NetdEventListenerService> > 4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/connectivity/NetdEventListenerService, removeNetdEventCallback(I)Z > 5,2 @11 exception:7,
monitorenter 1,
4 = invokestatic < Application, Lcom/android/server/connectivity/NetdEventListenerService, isValidCallerType(I)Z > 2 @1 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/connectivity/NetdEventListenerService, mNetdEventCallbackList, <Application,[Landroid/net/INetdEventCallback> > 1,
arraystore 6[2] = 5,
monitorexit 1,
return 7,
return 8,","depth : 0
-----
depth : 1
-----
","public boolean removeNetdEventCallback(int p1){
	if (IpConnectivityMetrics.mNetdListener != 0) {
		boolean v3 = NetdEventListenerService.isValidCallerType(p1);
		if (v3 != 0) {
			boolean v2 = 1;
			return v2;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","removeNetdEventCallback(I)Z","2","invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, enforceNetdEventListeningPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mNetdListener, <Application,Lcom/android/server/connectivity/NetdEventListenerService> > 4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/connectivity/NetdEventListenerService, removeNetdEventCallback(I)Z > 5,2 @11 exception:7,
monitorenter 1,
4 = invokestatic < Application, Lcom/android/server/connectivity/NetdEventListenerService, isValidCallerType(I)Z > 2 @1 exception:3,
8 = phi  7,2,
3 = getstatic < Application, Lcom/android/server/connectivity/NetdEventListenerService, ALLOWED_CALLBACK_TYPES, <Primordial,[I> >,
4 = arraylength 3,
conditional branch(ge, to iindex=-1) 8,4,
return 2,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/connectivity/NetdEventListenerService, mNetdEventCallbackList, <Application,[Landroid/net/INetdEventCallback> > 1,
arraystore 6[2] = 5,
monitorexit 1,
return 7,
return 8,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public boolean removeNetdEventCallback(int p1){
	if (IpConnectivityMetrics.mNetdListener != 0) {
		if (0 >= this.ALLOWED_CALLBACK_TYPES.length) {
			boolean v3 = 0;
			if (v3 != 0) {
				boolean v2 = 1;
				return v2;
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","logDefaultNetworkValidity(Z)V","0","3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = invokevirtual < Application, Lcom/android/server/SystemService, getContext()Landroid/content/Context; > 3 @2 exception:4,
invokestatic < Application, Landroid/net/NetworkStack, checkNetworkStackPermission(Landroid/content/Context;)V > 5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
8 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mDefaultNetworkMetrics, <Application,Lcom/android/server/connectivity/DefaultNetworkMetrics> > 7,
10 = invokestatic < Application, Landroid/os/SystemClock, elapsedRealtime()J > @13 exception:9,
invokevirtual < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, logDefaultNetworkValidity(JZ)V > 8,10,2 @17 exception:11,
return,","depth : 0
-----
","public void logDefaultNetworkValidity(boolean p1){
	Context v1 = this.this$0.getContext();
	long v3 = SystemClock.elapsedRealtime();
	IpConnectivityMetrics.mDefaultNetworkMetrics.logDefaultNetworkValidity(v3, p1);
	return;
}
","NORMAL"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","logDefaultNetworkValidity(Z)V","1","3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = invokevirtual < Application, Lcom/android/server/SystemService, getContext()Landroid/content/Context; > 3 @2 exception:4,
invokestatic < Application, Landroid/net/NetworkStack, checkNetworkStackPermission(Landroid/content/Context;)V > 5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
8 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mDefaultNetworkMetrics, <Application,Lcom/android/server/connectivity/DefaultNetworkMetrics> > 7,
10 = invokestatic < Application, Landroid/os/SystemClock, elapsedRealtime()J > @13 exception:9,
invokevirtual < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, logDefaultNetworkValidity(JZ)V > 8,10,2 @17 exception:11,
monitorenter 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mIsCurrentlyValid, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 5,4,
putfield 1.< Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mIsCurrentlyValid, <Primordial,Z> > = 4,
invokevirtual < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, updateValidationTime(J)V > 1,2 @10 exception:6,
goto (from iindex= 7 to iindex = 3),
conditional branch(eq, to iindex=-1) 3,4,
8 = getfield < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mIsCurrentlyValid, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 8,4,
putfield 1.< Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mIsCurrentlyValid, <Primordial,Z> > = 9,
putfield 1.< Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mLastValidationTimeMs, <Primordial,J> > = 2,
goto (from iindex= 16 to iindex = 3),
monitorexit 1,
return,
return,","depth : 0
-----
depth : 1
-----
","public void logDefaultNetworkValidity(boolean p1){
	Context v1 = this.this$0.getContext();
	long v3 = SystemClock.elapsedRealtime();
	if (p1 != 0) {
		if (this.mIsCurrentlyValid == 0) {
			this.mIsCurrentlyValid = 0;
			DefaultNetworkMetrics.updateValidationTime(v3);
			if (p1 == 0) {
				if (this.mIsCurrentlyValid != 0) {
					this.mIsCurrentlyValid = 1;
					this.mLastValidationTimeMs = v3;
					return;
				}
			}
		}
	}
}
","NORMAL"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","logDefaultNetworkValidity(Z)V","2","3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = invokevirtual < Application, Lcom/android/server/SystemService, getContext()Landroid/content/Context; > 3 @2 exception:4,
invokestatic < Application, Landroid/net/NetworkStack, checkNetworkStackPermission(Landroid/content/Context;)V > 5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
8 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mDefaultNetworkMetrics, <Application,Lcom/android/server/connectivity/DefaultNetworkMetrics> > 7,
10 = invokestatic < Application, Landroid/os/SystemClock, elapsedRealtime()J > @13 exception:9,
invokevirtual < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, logDefaultNetworkValidity(JZ)V > 8,10,2 @17 exception:11,
monitorenter 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mIsCurrentlyValid, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 5,4,
putfield 1.< Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mIsCurrentlyValid, <Primordial,Z> > = 4,
invokevirtual < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, updateValidationTime(J)V > 1,2 @10 exception:6,
3 = getfield < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mCurrentDefaultNetwork, <Application,Landroid/net/metrics/DefaultNetworkEvent> > 1,
4 = getfield < Application, Landroid/net/metrics/DefaultNetworkEvent, validatedMs, <Primordial,J> > 3,
5 = getfield < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mLastValidationTimeMs, <Primordial,J> > 1,
6 = binaryop(sub) 2 , 5,
7 = binaryop(add) 4 , 6,
putfield 3.< Application, Landroid/net/metrics/DefaultNetworkEvent, validatedMs, <Primordial,J> > = 7,
return,
goto (from iindex= 7 to iindex = 3),
conditional branch(eq, to iindex=-1) 3,4,
8 = getfield < Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mIsCurrentlyValid, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 8,4,
putfield 1.< Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mIsCurrentlyValid, <Primordial,Z> > = 9,
putfield 1.< Application, Lcom/android/server/connectivity/DefaultNetworkMetrics, mLastValidationTimeMs, <Primordial,J> > = 2,
goto (from iindex= 16 to iindex = 3),
monitorexit 1,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public void logDefaultNetworkValidity(boolean p1){
	Context v1 = this.this$0.getContext();
	long v3 = SystemClock.elapsedRealtime();
	if (p1 != 0) {
		if (this.mIsCurrentlyValid == 0) {
			this.mIsCurrentlyValid = 0;
			DefaultNetworkEvent.validatedMs = (DefaultNetworkEvent.validatedMs + (v3 - this.mLastValidationTimeMs));
			if (p1 == 0) {
				if (this.mIsCurrentlyValid != 0) {
					this.mIsCurrentlyValid = 1;
					this.mLastValidationTimeMs = v3;
					return;
				}
			}
		}
	}
}
","NORMAL"

"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z","0","invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, enforceNetdEventListeningPermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
6 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mNetdListener, <Application,Lcom/android/server/connectivity/NetdEventListenerService> > 5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/connectivity/NetdEventListenerService, addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z > 6,2,3 @11 exception:8,
return 9,","depth : 0
-----
","public boolean addNetdEventCallback(int p1, INetdEventCallback p2){
	if (IpConnectivityMetrics.mNetdListener != 0) {
		boolean v2 = IpConnectivityMetrics.mNetdListener.addNetdEventCallback(p1, p2);
		return v2;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z","1","invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, enforceNetdEventListeningPermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
6 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mNetdListener, <Application,Lcom/android/server/connectivity/NetdEventListenerService> > 5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/connectivity/NetdEventListenerService, addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z > 6,2,3 @11 exception:8,
monitorenter 1,
5 = invokestatic < Application, Lcom/android/server/connectivity/NetdEventListenerService, isValidCallerType(I)Z > 2 @1 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/connectivity/NetdEventListenerService, mNetdEventCallbackList, <Application,[Landroid/net/INetdEventCallback> > 1,
arraystore 7[2] = 3,
monitorexit 1,
return 8,
return 9,","depth : 0
-----
depth : 1
-----
","public boolean addNetdEventCallback(int p1, INetdEventCallback p2){
	if (IpConnectivityMetrics.mNetdListener != 0) {
		boolean v3 = NetdEventListenerService.isValidCallerType(p1);
		if (v3 != 0) {
			boolean v2 = 1;
			return v2;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z","2","invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, enforceNetdEventListeningPermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
6 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mNetdListener, <Application,Lcom/android/server/connectivity/NetdEventListenerService> > 5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/connectivity/NetdEventListenerService, addNetdEventCallback(ILandroid/net/INetdEventCallback;)Z > 6,2,3 @11 exception:8,
monitorenter 1,
5 = invokestatic < Application, Lcom/android/server/connectivity/NetdEventListenerService, isValidCallerType(I)Z > 2 @1 exception:4,
8 = phi  7,2,
3 = getstatic < Application, Lcom/android/server/connectivity/NetdEventListenerService, ALLOWED_CALLBACK_TYPES, <Primordial,[I> >,
4 = arraylength 3,
conditional branch(ge, to iindex=-1) 8,4,
return 2,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/connectivity/NetdEventListenerService, mNetdEventCallbackList, <Application,[Landroid/net/INetdEventCallback> > 1,
arraystore 7[2] = 3,
monitorexit 1,
return 8,
return 9,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public boolean addNetdEventCallback(int p1, INetdEventCallback p2){
	if (IpConnectivityMetrics.mNetdListener != 0) {
		if (0 >= this.ALLOWED_CALLBACK_TYPES.length) {
			boolean v3 = 0;
			if (v3 != 0) {
				boolean v2 = 1;
				return v2;
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","logEvent(Landroid/net/ConnectivityMetricsEvent;)I","0","3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = invokevirtual < Application, Lcom/android/server/SystemService, getContext()Landroid/content/Context; > 3 @2 exception:4,
invokestatic < Application, Landroid/net/NetworkStack, checkNetworkStackPermission(Landroid/content/Context;)V > 5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
9 = invokestatic < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, -$$Nest$mappend(Lcom/android/server/connectivity/IpConnectivityMetrics;Landroid/net/ConnectivityMetricsEvent;)I > 7,2 @11 exception:8,
return 9,","depth : 0
-----
","public int logEvent(ConnectivityMetricsEvent p1){
	Context v1 = this.this$0.getContext();
	int v3 = IpConnectivityMetrics.-$$Nest$mappend(this.this$0, p1);
	return v3;
}
","NORMAL"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","logEvent(Landroid/net/ConnectivityMetricsEvent;)I","1","3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = invokevirtual < Application, Lcom/android/server/SystemService, getContext()Landroid/content/Context; > 3 @2 exception:4,
invokestatic < Application, Landroid/net/NetworkStack, checkNetworkStackPermission(Landroid/content/Context;)V > 5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
9 = invokestatic < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, -$$Nest$mappend(Lcom/android/server/connectivity/IpConnectivityMetrics;Landroid/net/ConnectivityMetricsEvent;)I > 7,2 @11 exception:8,
4 = invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, append(Landroid/net/ConnectivityMetricsEvent;)I > 1,2 @0 exception:3,
return 4,
return 9,","depth : 0
-----
depth : 1
-----
","public int logEvent(ConnectivityMetricsEvent p1){
	Context v1 = this.this$0.getContext();
	int v4 = this.this$0.append(p1);
	int v3 = v4;
	return v3;
}
","NORMAL"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","logEvent(Landroid/net/ConnectivityMetricsEvent;)I","2","3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = invokevirtual < Application, Lcom/android/server/SystemService, getContext()Landroid/content/Context; > 3 @2 exception:4,
invokestatic < Application, Landroid/net/NetworkStack, checkNetworkStackPermission(Landroid/content/Context;)V > 5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
9 = invokestatic < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, -$$Nest$mappend(Lcom/android/server/connectivity/IpConnectivityMetrics;Landroid/net/ConnectivityMetricsEvent;)I > 7,2 @11 exception:8,
4 = invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, append(Landroid/net/ConnectivityMetricsEvent;)I > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mEventLog, <Application,Lcom/android/internal/util/RingBuffer> > 1,
invokevirtual < Application, Lcom/android/internal/util/RingBuffer, append(Ljava/lang/Object;)V > 4,2 @5 exception:5,
6 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mCapacity, <Primordial,I> > 1,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mBuffer, <Application,Ljava/util/ArrayList> > 1,
9 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 7 @12 exception:8,
10 = binaryop(sub) 6 , 9,
conditional branch(ne, to iindex=-1) 2,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, isRateLimited(Landroid/net/ConnectivityMetricsEvent;)Z > 1,2 @21 exception:12,
conditional branch(eq, to iindex=-1) 13,11,
monitorexit 3,
return 22,
return 4,
return 9,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public int logEvent(ConnectivityMetricsEvent p1){
	Context v1 = this.this$0.getContext();
	this.mEventLog.append(p1);
	int v6 = this.mBuffer.size();
	if (p1 != 0) {
		boolean v7 = IpConnectivityMetrics.isRateLimited(p1);
		if (v7 == 0) {
			int v4 = -1;
			int v3 = v4;
			return v3;
		}
	}
}
","NORMAL"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","logEvent(Landroid/net/ConnectivityMetricsEvent;)I","2","3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = invokevirtual < Application, Lcom/android/server/SystemService, getContext()Landroid/content/Context; > 3 @2 exception:4,
invokestatic < Application, Landroid/net/NetworkStack, checkNetworkStackPermission(Landroid/content/Context;)V > 5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
9 = invokestatic < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, -$$Nest$mappend(Lcom/android/server/connectivity/IpConnectivityMetrics;Landroid/net/ConnectivityMetricsEvent;)I > 7,2 @11 exception:8,
4 = invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, append(Landroid/net/ConnectivityMetricsEvent;)I > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mEventLog, <Application,Lcom/android/internal/util/RingBuffer> > 1,
invokevirtual < Application, Lcom/android/internal/util/RingBuffer, append(Ljava/lang/Object;)V > 4,2 @5 exception:5,
6 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mCapacity, <Primordial,I> > 1,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mBuffer, <Application,Ljava/util/ArrayList> > 1,
9 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 7 @12 exception:8,
10 = binaryop(sub) 6 , 9,
conditional branch(ne, to iindex=-1) 2,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, isRateLimited(Landroid/net/ConnectivityMetricsEvent;)Z > 1,2 @21 exception:12,
conditional branch(eq, to iindex=-1) 13,11,
conditional branch(ne, to iindex=-1) 10,11,
19 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mDropped, <Primordial,I> > 1,
21 = binaryop(add) 19 , 20,
putfield 1.< Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mDropped, <Primordial,I> > = 21,
monitorexit 3,
return 11,
return 4,
return 9,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public int logEvent(ConnectivityMetricsEvent p1){
	Context v1 = this.this$0.getContext();
	this.mEventLog.append(p1);
	int v6 = this.mBuffer.size();
	if (p1 != 0) {
		boolean v7 = IpConnectivityMetrics.isRateLimited(p1);
		if (v7 == 0) {
			if ((this.mCapacity - v6) != 0) {
				this.mDropped = (this.mDropped + 1);
				int v4 = 0;
				int v3 = v4;
				return v3;
			}
		}
	}
}
","NORMAL"
"Lcom/android/server/connectivity/IpConnectivityMetrics$Impl","logEvent(Landroid/net/ConnectivityMetricsEvent;)I","2","3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
5 = invokevirtual < Application, Lcom/android/server/SystemService, getContext()Landroid/content/Context; > 3 @2 exception:4,
invokestatic < Application, Landroid/net/NetworkStack, checkNetworkStackPermission(Landroid/content/Context;)V > 5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics$Impl, this$0, <Application,Lcom/android/server/connectivity/IpConnectivityMetrics> > 1,
9 = invokestatic < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, -$$Nest$mappend(Lcom/android/server/connectivity/IpConnectivityMetrics;Landroid/net/ConnectivityMetricsEvent;)I > 7,2 @11 exception:8,
4 = invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, append(Landroid/net/ConnectivityMetricsEvent;)I > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mEventLog, <Application,Lcom/android/internal/util/RingBuffer> > 1,
invokevirtual < Application, Lcom/android/internal/util/RingBuffer, append(Ljava/lang/Object;)V > 4,2 @5 exception:5,
6 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mCapacity, <Primordial,I> > 1,
7 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mBuffer, <Application,Ljava/util/ArrayList> > 1,
9 = invokevirtual < Application, Ljava/util/ArrayList, size()I > 7 @12 exception:8,
10 = binaryop(sub) 6 , 9,
conditional branch(ne, to iindex=-1) 2,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, isRateLimited(Landroid/net/ConnectivityMetricsEvent;)Z > 1,2 @21 exception:12,
conditional branch(eq, to iindex=-1) 13,11,
conditional branch(ne, to iindex=-1) 10,11,
14 = getfield < Application, Lcom/android/server/connectivity/IpConnectivityMetrics, mBuffer, <Application,Ljava/util/ArrayList> > 1,
16 = invokevirtual < Application, Ljava/util/ArrayList, add(Ljava/lang/Object;)Z > 14,2 @43 exception:15,
18 = binaryop(add) 10 , 17,
monitorexit 3,
return 18,
return 4,
return 9,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public int logEvent(ConnectivityMetricsEvent p1){
	Context v1 = this.this$0.getContext();
	this.mEventLog.append(p1);
	int v6 = this.mBuffer.size();
	if (p1 != 0) {
		boolean v7 = IpConnectivityMetrics.isRateLimited(p1);
		if (v7 == 0) {
			if ((this.mCapacity - v6) != 0) {
				boolean v8 = this.mBuffer.add(p1);
				int v4 = ((this.mCapacity - v6) + -1);
				int v3 = v4;
				return v3;
			}
		}
	}
}
","NORMAL"

