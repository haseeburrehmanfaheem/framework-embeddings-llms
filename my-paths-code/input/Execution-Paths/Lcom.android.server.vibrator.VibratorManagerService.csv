"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/vibrator/VibratorManagerService","cancelVibrate(ILandroid/os/IBinder;)V","0","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 5,4 @5 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,4 @14 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = new <Application,Lcom/android/server/vibrator/Vibration$EndInfo>@20,
12 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, CANCELLED_BY_USER, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
invokespecial < Application, Lcom/android/server/vibrator/Vibration$EndInfo, <init>(Lcom/android/server/vibrator/Vibration$Status;)V > 11,12 @24 exception:13,
15 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @27 exception:14,
16 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 16,17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 16 @35 exception:18,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,19,2,3 @39 exception:20,
conditional branch(eq, to iindex=-1) 21,17,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, clearNextVibrationLocked(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 1,11 @45 exception:22,
26 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 26,17,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 26 @53 exception:27,
30 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,28,2,3 @57 exception:29,
conditional branch(eq, to iindex=-1) 30,17,
31 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, notifyCancelled(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 31,11,17 @65 exception:32,
37 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(eq, to iindex=-1) 37,17,
38 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 37,
40 = invokevirtual < Application, Landroid/os/ExternalVibration, getVibrationAttributes()Landroid/os/VibrationAttributes; > 38 @74 exception:39,
42 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,40,2 @78 exception:41,
conditional branch(eq, to iindex=-1) 42,17,
43 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, mute()V > 43 @86 exception:44,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endExternalVibrateLocked(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,11,17 @89 exception:45,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 15 @92 exception:57,
monitorexit 10,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 5 @96 exception:75,
return,","depth : 0
-----
","public void cancelVibrate(int p1, IBinder p2){
	Vibration$EndInfo v3 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_USER);
	long v5 = Binder.clearCallingIdentity();
	if (this.mNextVibration == 0) {
		Vibration v6 = this.mNextVibration.getVibration();
		boolean v7 = p0.shouldCancelVibration(v6, p1, p2);
		if (v7 == 0) {
			p0.clearNextVibrationLocked(v3);
			if (this.mCurrentVibration == 0) {
				Vibration v9 = this.mCurrentVibration.getVibration();
				boolean v10 = p0.shouldCancelVibration(v9, p1, p2);
				if (v10 == 0) {
					this.mCurrentVibration.notifyCancelled(v3, 0);
					if (this.mCurrentExternalVibration == 0) {
						VibrationAttributes v12 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getVibrationAttributes();
						boolean v13 = p0.shouldCancelVibration(v12, p1);
						if (v13 == 0) {
							this.mCurrentExternalVibration.mute();
							p0.endExternalVibrateLocked(v3, 0);
							Binder.restoreCallingIdentity(v5);
							Trace.traceEnd(8388608);
							return;
						}
					}
				}
			}
		}
	}
}
","NORMAL"
"Lcom/android/server/vibrator/VibratorManagerService","cancelVibrate(ILandroid/os/IBinder;)V","1","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 5,4 @5 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,4 @14 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = new <Application,Lcom/android/server/vibrator/Vibration$EndInfo>@20,
12 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, CANCELLED_BY_USER, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
invokespecial < Application, Lcom/android/server/vibrator/Vibration$EndInfo, <init>(Lcom/android/server/vibrator/Vibration$Status;)V > 11,12 @24 exception:13,
15 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @27 exception:14,
16 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 16,17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 16 @35 exception:18,
2 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mVibration, <Application,Lcom/android/server/vibrator/Vibration> > 1,
return 2,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,19,2,3 @39 exception:20,
5 = getfield < Application, Lcom/android/server/vibrator/Vibration, token, <Application,Landroid/os/IBinder> > 2,
conditional branch(ne, to iindex=-1) 5,4,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,6,3 @6 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,9,
return 13,
conditional branch(eq, to iindex=-1) 21,17,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, clearNextVibrationLocked(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 1,11 @45 exception:22,
3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 3 @4 exception:5,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationLocked(Lcom/android/server/vibrator/Vibration;Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,6,2,7 @9 exception:8,
putfield 1.< Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > = 4,
return,
26 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 26,17,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 26 @53 exception:27,
2 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mVibration, <Application,Lcom/android/server/vibrator/Vibration> > 1,
return 2,
30 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,28,2,3 @57 exception:29,
5 = getfield < Application, Lcom/android/server/vibrator/Vibration, token, <Application,Landroid/os/IBinder> > 2,
conditional branch(ne, to iindex=-1) 5,4,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,6,3 @6 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,9,
return 13,
conditional branch(eq, to iindex=-1) 30,17,
31 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, notifyCancelled(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 31,11,17 @65 exception:32,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,5,
invokestatic < Application, Lcom/android/server/vibrator/VibrationStepConductor, expectIsVibrationThread(Z)V > 5 @5 exception:6,
conditional branch(eq, to iindex=-1) 2,5,
8 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 2,
10 = invokevirtual < Application, Ljava/lang/Enum, name()Ljava/lang/String; > 8 @12 exception:9,
13 = invokevirtual < Application, Ljava/lang/String, startsWith(Ljava/lang/String;)Z > 10,11 @18 exception:12,
conditional branch(ne, to iindex=-1) 13,5,
36 = phi  2,31,
39 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 39,
conditional branch(eq, to iindex=-1) 3,5,
40 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 40,5,
42 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancel, <Application,Lcom/android/server/vibrator/Vibration$EndInfo> > 1,
conditional branch(eq, to iindex=-1) 42,5,
43 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > 1,
44 = binaryop(or) 3 , 43,
putfield 1.< Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > = 44,
conditional branch(ne, to iindex=-1) 42,5,
putfield 1.< Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancel, <Application,Lcom/android/server/vibrator/Vibration$EndInfo> > = 36,
45 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mLock, <Application,Ljava/lang/Object> > 1,
invokevirtual < Application, Ljava/lang/Object, notify()V > 45 @84 exception:46,
monitorexit 39,
return,
37 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(eq, to iindex=-1) 37,17,
38 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 37,
40 = invokevirtual < Application, Landroid/os/ExternalVibration, getVibrationAttributes()Landroid/os/VibrationAttributes; > 38 @74 exception:39,
2 = new <Application,Landroid/os/VibrationAttributes$Builder>@0,
3 = getfield < Application, Landroid/os/ExternalVibration, mAttrs, <Application,Landroid/media/AudioAttributes> > 1,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/media/AudioAttributes;)V > 2,3 @4 exception:4,
6 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 2 @7 exception:5,
return 6,
42 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,40,2 @78 exception:41,
5 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,7,
9 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @16 exception:8,
10 = binaryop(and) 9 , 3,
12 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @21 exception:11,
conditional branch(ne, to iindex=-1) 10,12,
goto (from iindex= 17 to iindex = 2),
13 = phi  6,7,
return 13,
conditional branch(eq, to iindex=-1) 42,17,
43 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, mute()V > 43 @86 exception:44,
2 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 1,
4 = invokevirtual < Application, Landroid/os/ExternalVibration, mute()Z > 2 @2 exception:3,
return,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endExternalVibrateLocked(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,11,17 @89 exception:45,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @5 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(ne, to iindex=-1) 7,8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @12 exception:25,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 15 @92 exception:57,
monitorexit 10,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 5 @96 exception:75,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public void cancelVibrate(int p1, IBinder p2){
	Vibration$EndInfo v3 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_USER);
	long v5 = Binder.clearCallingIdentity();
	if (this.mNextVibration == 0) {
		Vibration v6 = this.mVibration;
		if (Vibration.token != p2) {
			boolean v8 = VibratorManagerService.shouldCancelVibration(Vibration.attrs, p1);
			if (v8 == 0) {
				boolean v7 = 1;
				if (v7 == 0) {
					if (this.mNextVibration == 0) {
						Vibration v10 = this.mNextVibration.getVibration();
						VibratorManagerService.endVibrationLocked(v10, v3, 1);
						this.mNextVibration = 0;
						if (this.mCurrentVibration == 0) {
							Vibration v12 = this.mVibration;
							if (Vibration.token != p2) {
								boolean v14 = VibratorManagerService.shouldCancelVibration(Vibration.attrs, p1);
								if (v14 == 0) {
									boolean v13 = 1;
									if (v13 == 0) {
										if (Build.IS_DEBUGGABLE == 0) {
											VibrationStepConductor.expectIsVibrationThread(0);
											if (v3 == 0) {
												String v17 = Vibration$EndInfo.status.name();
												boolean v18 = v17.startsWith(""CANCEL"");
												if (v18 != 0) {
													if (0 == 0) {
														if (this.mSignalCancelImmediate != 0) {
															if (this.mSignalCancel == 0) {
																this.mSignalCancelImmediate = (0 | this.mSignalCancelImmediate);
																if (this.mSignalCancel != 0) {
																	this.mSignalCancel = v3;
																	this.mLock.notify();
																	if (this.mCurrentExternalVibration == 0) {
																		VibrationAttributes$Builder v21 = new VibrationAttributes$Builder(this.mAttrs);
																		VibrationAttributes v23 = v21.build();
																		VibrationAttributes v20 = v23;
																		int v25 = v20.getUsage();
																		if (v25 != 0) {
																			int v26 = v20.getUsage();
																			int v27 = v20.getUsage();
																			if ((v26 & p1) != v27) {
																				boolean v24 = 1;
																				if (v24 == 0) {
																					boolean v29 = this.externalVibration.mute();
																					Trace.traceBegin(8388608, ""endExternalVibrateLocked"");
																					if (this.mCurrentExternalVibration != 0) {
																						Trace.traceEnd(8388608);
																						Binder.restoreCallingIdentity(v5);
																						Trace.traceEnd(8388608);
																						return;
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","NORMAL"
"Lcom/android/server/vibrator/VibratorManagerService","cancelVibrate(ILandroid/os/IBinder;)V","1","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 5,4 @5 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,4 @14 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = new <Application,Lcom/android/server/vibrator/Vibration$EndInfo>@20,
12 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, CANCELLED_BY_USER, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
invokespecial < Application, Lcom/android/server/vibrator/Vibration$EndInfo, <init>(Lcom/android/server/vibrator/Vibration$Status;)V > 11,12 @24 exception:13,
15 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @27 exception:14,
16 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 16,17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 16 @35 exception:18,
2 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mVibration, <Application,Lcom/android/server/vibrator/Vibration> > 1,
return 2,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,19,2,3 @39 exception:20,
5 = getfield < Application, Lcom/android/server/vibrator/Vibration, token, <Application,Landroid/os/IBinder> > 2,
conditional branch(ne, to iindex=-1) 5,4,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,6,3 @6 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,9,
return 13,
conditional branch(eq, to iindex=-1) 21,17,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, clearNextVibrationLocked(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 1,11 @45 exception:22,
3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 3 @4 exception:5,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationLocked(Lcom/android/server/vibrator/Vibration;Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,6,2,7 @9 exception:8,
putfield 1.< Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > = 4,
return,
26 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 26,17,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 26 @53 exception:27,
2 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mVibration, <Application,Lcom/android/server/vibrator/Vibration> > 1,
return 2,
30 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,28,2,3 @57 exception:29,
5 = getfield < Application, Lcom/android/server/vibrator/Vibration, token, <Application,Landroid/os/IBinder> > 2,
conditional branch(ne, to iindex=-1) 5,4,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,6,3 @6 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,9,
return 13,
conditional branch(eq, to iindex=-1) 30,17,
31 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, notifyCancelled(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 31,11,17 @65 exception:32,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,5,
invokestatic < Application, Lcom/android/server/vibrator/VibrationStepConductor, expectIsVibrationThread(Z)V > 5 @5 exception:6,
conditional branch(eq, to iindex=-1) 2,5,
8 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 2,
10 = invokevirtual < Application, Ljava/lang/Enum, name()Ljava/lang/String; > 8 @12 exception:9,
13 = invokevirtual < Application, Ljava/lang/String, startsWith(Ljava/lang/String;)Z > 10,11 @18 exception:12,
conditional branch(ne, to iindex=-1) 13,5,
36 = phi  2,31,
39 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 39,
conditional branch(eq, to iindex=-1) 3,5,
40 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 40,5,
42 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancel, <Application,Lcom/android/server/vibrator/Vibration$EndInfo> > 1,
conditional branch(eq, to iindex=-1) 42,5,
43 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > 1,
44 = binaryop(or) 3 , 43,
putfield 1.< Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > = 44,
conditional branch(ne, to iindex=-1) 42,5,
putfield 1.< Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancel, <Application,Lcom/android/server/vibrator/Vibration$EndInfo> > = 36,
45 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mLock, <Application,Ljava/lang/Object> > 1,
invokevirtual < Application, Ljava/lang/Object, notify()V > 45 @84 exception:46,
monitorexit 39,
return,
37 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(eq, to iindex=-1) 37,17,
38 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 37,
40 = invokevirtual < Application, Landroid/os/ExternalVibration, getVibrationAttributes()Landroid/os/VibrationAttributes; > 38 @74 exception:39,
2 = new <Application,Landroid/os/VibrationAttributes$Builder>@0,
3 = getfield < Application, Landroid/os/ExternalVibration, mAttrs, <Application,Landroid/media/AudioAttributes> > 1,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/media/AudioAttributes;)V > 2,3 @4 exception:4,
6 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 2 @7 exception:5,
return 6,
42 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,40,2 @78 exception:41,
5 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,7,
9 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @16 exception:8,
10 = binaryop(and) 9 , 3,
12 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @21 exception:11,
conditional branch(ne, to iindex=-1) 10,12,
goto (from iindex= 17 to iindex = 2),
13 = phi  6,7,
return 13,
conditional branch(eq, to iindex=-1) 42,17,
43 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, mute()V > 43 @86 exception:44,
2 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 1,
4 = invokevirtual < Application, Landroid/os/ExternalVibration, mute()Z > 2 @2 exception:3,
return,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endExternalVibrateLocked(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,11,17 @89 exception:45,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @5 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(ne, to iindex=-1) 7,8,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, unlinkToDeath()V > 7 @16 exception:9,
conditional branch(ne, to iindex=-1) 3,8,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
11 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, stats, <Application,Lcom/android/server/vibrator/VibrationStats> > 10,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, setExternalControl(ZLcom/android/server/vibrator/VibrationStats;)V > 1,8,11 @26 exception:12,
16 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationAndWriteStatsLocked(Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder;Lcom/android/server/vibrator/Vibration$EndInfo;)V > 1,16,2 @31 exception:17,
putfield 1.< Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > = 8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @37 exception:24,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 15 @92 exception:57,
monitorexit 10,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 5 @96 exception:75,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public void cancelVibrate(int p1, IBinder p2){
	Vibration$EndInfo v3 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_USER);
	long v5 = Binder.clearCallingIdentity();
	if (this.mNextVibration == 0) {
		Vibration v6 = this.mVibration;
		if (Vibration.token != p2) {
			boolean v8 = VibratorManagerService.shouldCancelVibration(Vibration.attrs, p1);
			if (v8 == 0) {
				boolean v7 = 1;
				if (v7 == 0) {
					if (this.mNextVibration == 0) {
						Vibration v10 = this.mNextVibration.getVibration();
						VibratorManagerService.endVibrationLocked(v10, v3, 1);
						this.mNextVibration = 0;
						if (this.mCurrentVibration == 0) {
							Vibration v12 = this.mVibration;
							if (Vibration.token != p2) {
								boolean v14 = VibratorManagerService.shouldCancelVibration(Vibration.attrs, p1);
								if (v14 == 0) {
									boolean v13 = 1;
									if (v13 == 0) {
										if (Build.IS_DEBUGGABLE == 0) {
											VibrationStepConductor.expectIsVibrationThread(0);
											if (v3 == 0) {
												String v17 = Vibration$EndInfo.status.name();
												boolean v18 = v17.startsWith(""CANCEL"");
												if (v18 != 0) {
													if (0 == 0) {
														if (this.mSignalCancelImmediate != 0) {
															if (this.mSignalCancel == 0) {
																this.mSignalCancelImmediate = (0 | this.mSignalCancelImmediate);
																if (this.mSignalCancel != 0) {
																	this.mSignalCancel = v3;
																	this.mLock.notify();
																	if (this.mCurrentExternalVibration == 0) {
																		VibrationAttributes$Builder v21 = new VibrationAttributes$Builder(this.mAttrs);
																		VibrationAttributes v23 = v21.build();
																		VibrationAttributes v20 = v23;
																		int v25 = v20.getUsage();
																		if (v25 != 0) {
																			int v26 = v20.getUsage();
																			int v27 = v20.getUsage();
																			if ((v26 & p1) != v27) {
																				boolean v24 = 1;
																				if (v24 == 0) {
																					boolean v29 = this.externalVibration.mute();
																					Trace.traceBegin(8388608, ""endExternalVibrateLocked"");
																					if (this.mCurrentExternalVibration != 0) {
																						this.mCurrentExternalVibration.unlinkToDeath();
																						if (0 != 0) {
																							VibratorManagerService.setExternalControl(0, VibratorManagerService$ExternalVibrationHolder.stats);
																							VibratorManagerService.endVibrationAndWriteStatsLocked(this.mCurrentExternalVibration, v3);
																							this.mCurrentExternalVibration = 0;
																							Trace.traceEnd(8388608);
																							Binder.restoreCallingIdentity(v5);
																							Trace.traceEnd(8388608);
																							return;
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","NORMAL"
"Lcom/android/server/vibrator/VibratorManagerService","cancelVibrate(ILandroid/os/IBinder;)V","2","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 5,4 @5 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,4 @14 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = new <Application,Lcom/android/server/vibrator/Vibration$EndInfo>@20,
12 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, CANCELLED_BY_USER, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
invokespecial < Application, Lcom/android/server/vibrator/Vibration$EndInfo, <init>(Lcom/android/server/vibrator/Vibration$Status;)V > 11,12 @24 exception:13,
15 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @27 exception:14,
16 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 16,17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 16 @35 exception:18,
2 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mVibration, <Application,Lcom/android/server/vibrator/Vibration> > 1,
return 2,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,19,2,3 @39 exception:20,
5 = getfield < Application, Lcom/android/server/vibrator/Vibration, token, <Application,Landroid/os/IBinder> > 2,
conditional branch(ne, to iindex=-1) 5,4,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,6,3 @6 exception:7,
5 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,7,
9 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @16 exception:8,
10 = binaryop(and) 9 , 3,
12 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @21 exception:11,
conditional branch(ne, to iindex=-1) 10,12,
goto (from iindex= 17 to iindex = 2),
13 = phi  6,7,
return 13,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,9,
return 13,
conditional branch(eq, to iindex=-1) 21,17,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, clearNextVibrationLocked(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 1,11 @45 exception:22,
3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 3 @4 exception:5,
2 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mVibration, <Application,Lcom/android/server/vibrator/Vibration> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationLocked(Lcom/android/server/vibrator/Vibration;Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,6,2,7 @9 exception:8,
invokevirtual < Application, Lcom/android/server/vibrator/Vibration, end(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 2,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, uid, <Primordial,I> > 2,
7 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 3,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, logVibrationStatus(ILandroid/os/VibrationAttributes;Lcom/android/server/vibrator/Vibration$Status;)V > 1,6,7,8 @9 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibratorManagerRecords, <Application,Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords, record(Lcom/android/server/vibrator/Vibration;)V > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 4,12,
13 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mFrameworkStatsLogger, <Application,Lcom/android/server/vibrator/VibratorFrameworkStatsLogger> > 1,
15 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @21 exception:14,
17 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, getStatsInfo(J)Lcom/android/server/vibrator/VibrationStats$StatsInfo; > 2,15 @25 exception:16,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorFrameworkStatsLogger, writeVibrationReportedAsync(Lcom/android/server/vibrator/VibrationStats$StatsInfo;)V > 13,17 @29 exception:18,
return,
putfield 1.< Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > = 4,
return,
26 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 26,17,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 26 @53 exception:27,
30 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,28,2,3 @57 exception:29,
5 = getfield < Application, Lcom/android/server/vibrator/Vibration, token, <Application,Landroid/os/IBinder> > 2,
conditional branch(ne, to iindex=-1) 5,4,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,6,3 @6 exception:7,
5 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,7,
9 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @16 exception:8,
10 = binaryop(and) 9 , 3,
12 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @21 exception:11,
conditional branch(ne, to iindex=-1) 10,12,
goto (from iindex= 17 to iindex = 2),
13 = phi  6,7,
return 13,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,9,
return 13,
conditional branch(eq, to iindex=-1) 30,17,
31 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, notifyCancelled(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 31,11,17 @65 exception:32,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,5,
invokestatic < Application, Lcom/android/server/vibrator/VibrationStepConductor, expectIsVibrationThread(Z)V > 5 @5 exception:6,
3 = invokestatic < Application, Ljava/lang/Thread, currentThread()Ljava/lang/Thread; > @0 exception:2,
4 = instanceof 3 <Application,Lcom/android/server/vibrator/VibrationThread>,
conditional branch(eq, to iindex=-1) 4,1,
5 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @10 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @15 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 5,1 @18 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @21 exception:12,
16 = invokestatic < Application, Landroid/util/Slog, wtfStack(Ljava/lang/String;Ljava/lang/String;)I > 14,13 @27 exception:15,
return,
conditional branch(eq, to iindex=-1) 2,5,
8 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 2,
10 = invokevirtual < Application, Ljava/lang/Enum, name()Ljava/lang/String; > 8 @12 exception:9,
13 = invokevirtual < Application, Ljava/lang/String, startsWith(Ljava/lang/String;)Z > 10,11 @18 exception:12,
conditional branch(ne, to iindex=-1) 13,5,
36 = phi  2,31,
39 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 39,
conditional branch(eq, to iindex=-1) 3,5,
40 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 40,5,
42 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancel, <Application,Lcom/android/server/vibrator/Vibration$EndInfo> > 1,
conditional branch(eq, to iindex=-1) 42,5,
43 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > 1,
44 = binaryop(or) 3 , 43,
putfield 1.< Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > = 44,
conditional branch(ne, to iindex=-1) 42,5,
putfield 1.< Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancel, <Application,Lcom/android/server/vibrator/Vibration$EndInfo> > = 36,
45 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mLock, <Application,Ljava/lang/Object> > 1,
invokevirtual < Application, Ljava/lang/Object, notify()V > 45 @84 exception:46,
monitorexit 39,
return,
37 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(eq, to iindex=-1) 37,17,
38 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 37,
40 = invokevirtual < Application, Landroid/os/ExternalVibration, getVibrationAttributes()Landroid/os/VibrationAttributes; > 38 @74 exception:39,
2 = new <Application,Landroid/os/VibrationAttributes$Builder>@0,
3 = getfield < Application, Landroid/os/ExternalVibration, mAttrs, <Application,Landroid/media/AudioAttributes> > 1,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/media/AudioAttributes;)V > 2,3 @4 exception:4,
6 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 2 @7 exception:5,
2 = new <Application,Landroid/os/VibrationAttributes>@0,
3 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mUsage, <Primordial,I> > 1,
4 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mOriginalAudioUsage, <Primordial,I> > 1,
5 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > 1,
invokespecial < Application, Landroid/os/VibrationAttributes, <init>(IIILandroid/os/VibrationAttributes-IA;)V > 2,3,4,5,6 @9 exception:7,
return 2,
return 6,
42 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,40,2 @78 exception:41,
5 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @0 exception:4,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 5,7,
9 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @16 exception:8,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
10 = binaryop(and) 9 , 3,
12 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @21 exception:11,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 10,12,
goto (from iindex= 17 to iindex = 2),
13 = phi  6,7,
return 13,
conditional branch(eq, to iindex=-1) 42,17,
43 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, mute()V > 43 @86 exception:44,
2 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 1,
4 = invokevirtual < Application, Landroid/os/ExternalVibration, mute()Z > 2 @2 exception:3,
2 = getfield < Application, Landroid/os/ExternalVibration, mController, <Application,Landroid/os/IExternalVibrationController> > 1,
4 = invokeinterface < Application, Landroid/os/IExternalVibrationController, mute()Z > 2 @2 exception:3,
5 = getCaughtException ,
6 = new <Application,Ljava/lang/StringBuilder>@9,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 6 @11 exception:7,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 6,8 @16 exception:9,
12 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 10,1 @20 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 12 @24 exception:13,
17 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 15,14,5 @30 exception:16,
return 18,
return,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endExternalVibrateLocked(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,11,17 @89 exception:45,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @5 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(ne, to iindex=-1) 7,8,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, unlinkToDeath()V > 7 @16 exception:9,
2 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 1,
invokevirtual < Application, Landroid/os/ExternalVibration, unlinkToDeath(Landroid/os/IBinder$DeathRecipient;)V > 2,1 @2 exception:3,
return,
conditional branch(ne, to iindex=-1) 3,8,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
11 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, stats, <Application,Lcom/android/server/vibrator/VibrationStats> > 10,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, setExternalControl(ZLcom/android/server/vibrator/VibrationStats;)V > 1,8,11 @26 exception:12,
16 = phi  15,4,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @3 exception:6,
conditional branch(ge, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 8,16 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, setExternalControl(Z)V > 11,2 @17 exception:12,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationStats, reportSetExternalControl()V > 3 @20 exception:13,
15 = binaryop(add) 16 , 14,
goto (from iindex= 12 to iindex = -24),
16 = phi  15,4,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @3 exception:6,
conditional branch(ge, to iindex=-1) 16,7,
return,
16 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationAndWriteStatsLocked(Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder;Lcom/android/server/vibrator/Vibration$EndInfo;)V > 1,16,2 @31 exception:17,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, end(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 2,3 @0 exception:4,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 2,
7 = invokevirtual < Application, Landroid/os/ExternalVibration, getUid()I > 5 @5 exception:6,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 2,
10 = invokevirtual < Application, Landroid/os/ExternalVibration, getVibrationAttributes()Landroid/os/VibrationAttributes; > 8 @11 exception:9,
11 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 3,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, logVibrationStatus(ILandroid/os/VibrationAttributes;Lcom/android/server/vibrator/Vibration$Status;)V > 1,7,10,11 @17 exception:12,
13 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibratorManagerRecords, <Application,Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords, record(Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder;)V > 13,2 @22 exception:14,
15 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mFrameworkStatsLogger, <Application,Lcom/android/server/vibrator/VibratorFrameworkStatsLogger> > 1,
17 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @27 exception:16,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, getStatsInfo(J)Lcom/android/server/vibrator/VibrationStats$StatsInfo; > 2,17 @31 exception:18,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorFrameworkStatsLogger, writeVibrationReportedAsync(Lcom/android/server/vibrator/VibrationStats$StatsInfo;)V > 15,19 @35 exception:20,
return,
putfield 1.< Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > = 8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @37 exception:24,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 15 @92 exception:57,
monitorexit 10,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 5 @96 exception:75,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void cancelVibrate(int p1, IBinder p2){
	Vibration$EndInfo v3 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_USER);
	long v5 = Binder.clearCallingIdentity();
	if (this.mNextVibration == 0) {
		Vibration v6 = this.mVibration;
		if (Vibration.token != p2) {
			int v9 = Vibration.attrs.getUsage();
			if (v9 != 0) {
				int v10 = Vibration.attrs.getUsage();
				int v11 = Vibration.attrs.getUsage();
				if ((v10 & p1) != v11) {
					boolean v8 = 1;
					if (v8 == 0) {
						boolean v7 = 1;
						if (v7 == 0) {
							if (this.mNextVibration == 0) {
								Vibration v13 = this.mVibration;
								v13.end(v3);
								VibratorManagerService.logVibrationStatus(Vibration.uid, Vibration.attrs, Vibration$EndInfo.status);
								this.mVibratorManagerRecords.record(v13);
								if (1 == 0) {
									long v18 = SystemClock.uptimeMillis();
									VibrationStats$StatsInfo v19 = v13.getStatsInfo(v18);
									this.mFrameworkStatsLogger.writeVibrationReportedAsync(v19);
									this.mNextVibration = 0;
									if (this.mCurrentVibration == 0) {
										Vibration v21 = this.mCurrentVibration.getVibration();
										if (Vibration.token != p2) {
											int v24 = Vibration.attrs.getUsage();
											if (v24 != 0) {
												int v25 = Vibration.attrs.getUsage();
												int v26 = Vibration.attrs.getUsage();
												if ((v25 & p1) != v26) {
													boolean v23 = 1;
													if (v23 == 0) {
														boolean v22 = 1;
														if (v22 == 0) {
															if (Build.IS_DEBUGGABLE == 0) {
																Thread v29 = Thread.currentThread();
																if (v29 instanceof VibrationThread == 0) {
																	if (v3 == 0) {
																		String v36 = Vibration$EndInfo.status.name();
																		boolean v37 = v36.startsWith(""CANCEL"");
																		if (v37 != 0) {
																			if (0 == 0) {
																				if (this.mSignalCancelImmediate != 0) {
																					if (this.mSignalCancel == 0) {
																						this.mSignalCancelImmediate = (0 | this.mSignalCancelImmediate);
																						if (this.mSignalCancel != 0) {
																							this.mSignalCancel = v3;
																							this.mLock.notify();
																							if (this.mCurrentExternalVibration == 0) {
																								VibrationAttributes$Builder v40 = new VibrationAttributes$Builder(this.mAttrs);
																								VibrationAttributes v43 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
																								VibrationAttributes v42 = v43;
																								VibrationAttributes v39 = v42;
																								int v46 = this.mUsage;
																								if (v46 != 0) {
																									int v47 = this.mUsage;
																									int v48 = this.mUsage;
																									if ((v47 & p1) != v48) {
																										boolean v45 = 1;
																										if (v45 == 0) {
																											boolean v51 = this.mController.mute();
																											boolean v50 = 0;
																											Trace.traceBegin(8388608, ""endExternalVibrateLocked"");
																											if (this.mCurrentExternalVibration != 0) {
																												this.externalVibration.unlinkToDeath(VibratorManagerService$ExternalVibrationHolder);
																												if (0 != 0) {
																													int v63 = this.mVibrators.size();
																													if (0 >= v63) {
																														Object v64 = this.mVibrators.valueAt(0);
																														v64.setExternalControl(0);
																														VibratorManagerService$ExternalVibrationHolder.stats.reportSetExternalControl();
																														int v67 = this.mVibrators.size();
																														if ((0 + 1) >= v67) {
																															this.mCurrentExternalVibration.end(v3);
																															int v70 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getUid();
																															VibrationAttributes v71 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getVibrationAttributes();
																															VibratorManagerService.logVibrationStatus(v70, v71, Vibration$EndInfo.status);
																															this.mVibratorManagerRecords.record(this.mCurrentExternalVibration);
																															long v74 = SystemClock.uptimeMillis();
																															VibrationStats$StatsInfo v75 = this.mCurrentExternalVibration.getStatsInfo(v74);
																															this.mFrameworkStatsLogger.writeVibrationReportedAsync(v75);
																															this.mCurrentExternalVibration = 0;
																															Trace.traceEnd(8388608);
																															Binder.restoreCallingIdentity(v5);
																															Trace.traceEnd(8388608);
																															return;
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","NORMAL"
"Lcom/android/server/vibrator/VibratorManagerService","cancelVibrate(ILandroid/os/IBinder;)V","2","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 5,4 @5 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 7,8,4 @14 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = new <Application,Lcom/android/server/vibrator/Vibration$EndInfo>@20,
12 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, CANCELLED_BY_USER, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
invokespecial < Application, Lcom/android/server/vibrator/Vibration$EndInfo, <init>(Lcom/android/server/vibrator/Vibration$Status;)V > 11,12 @24 exception:13,
15 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @27 exception:14,
16 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 16,17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 16 @35 exception:18,
2 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mVibration, <Application,Lcom/android/server/vibrator/Vibration> > 1,
return 2,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,19,2,3 @39 exception:20,
5 = getfield < Application, Lcom/android/server/vibrator/Vibration, token, <Application,Landroid/os/IBinder> > 2,
conditional branch(ne, to iindex=-1) 5,4,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,6,3 @6 exception:7,
5 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,7,
9 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @16 exception:8,
10 = binaryop(and) 9 , 3,
12 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @21 exception:11,
conditional branch(ne, to iindex=-1) 10,12,
goto (from iindex= 17 to iindex = 2),
13 = phi  6,7,
return 13,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,9,
return 13,
conditional branch(eq, to iindex=-1) 21,17,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, clearNextVibrationLocked(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 1,11 @45 exception:22,
3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 3 @4 exception:5,
2 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mVibration, <Application,Lcom/android/server/vibrator/Vibration> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationLocked(Lcom/android/server/vibrator/Vibration;Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,6,2,7 @9 exception:8,
invokevirtual < Application, Lcom/android/server/vibrator/Vibration, end(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 2,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, uid, <Primordial,I> > 2,
7 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 3,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, logVibrationStatus(ILandroid/os/VibrationAttributes;Lcom/android/server/vibrator/Vibration$Status;)V > 1,6,7,8 @9 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibratorManagerRecords, <Application,Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords, record(Lcom/android/server/vibrator/Vibration;)V > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 4,12,
13 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mFrameworkStatsLogger, <Application,Lcom/android/server/vibrator/VibratorFrameworkStatsLogger> > 1,
15 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @21 exception:14,
17 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, getStatsInfo(J)Lcom/android/server/vibrator/VibrationStats$StatsInfo; > 2,15 @25 exception:16,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorFrameworkStatsLogger, writeVibrationReportedAsync(Lcom/android/server/vibrator/VibrationStats$StatsInfo;)V > 13,17 @29 exception:18,
return,
putfield 1.< Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > = 4,
return,
26 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 26,17,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 26 @53 exception:27,
30 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Lcom/android/server/vibrator/Vibration;ILandroid/os/IBinder;)Z > 1,28,2,3 @57 exception:29,
5 = getfield < Application, Lcom/android/server/vibrator/Vibration, token, <Application,Landroid/os/IBinder> > 2,
conditional branch(ne, to iindex=-1) 5,4,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,6,3 @6 exception:7,
5 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,7,
9 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @16 exception:8,
10 = binaryop(and) 9 , 3,
12 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @21 exception:11,
conditional branch(ne, to iindex=-1) 10,12,
goto (from iindex= 17 to iindex = 2),
13 = phi  6,7,
return 13,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,9,
return 13,
conditional branch(eq, to iindex=-1) 30,17,
31 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, notifyCancelled(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 31,11,17 @65 exception:32,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(eq, to iindex=-1) 4,5,
invokestatic < Application, Lcom/android/server/vibrator/VibrationStepConductor, expectIsVibrationThread(Z)V > 5 @5 exception:6,
3 = invokestatic < Application, Ljava/lang/Thread, currentThread()Ljava/lang/Thread; > @0 exception:2,
4 = instanceof 3 <Application,Lcom/android/server/vibrator/VibrationThread>,
conditional branch(eq, to iindex=-1) 4,1,
5 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @10 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @15 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 5,1 @18 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @21 exception:12,
16 = invokestatic < Application, Landroid/util/Slog, wtfStack(Ljava/lang/String;Ljava/lang/String;)I > 14,13 @27 exception:15,
return,
conditional branch(eq, to iindex=-1) 2,5,
8 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 2,
10 = invokevirtual < Application, Ljava/lang/Enum, name()Ljava/lang/String; > 8 @12 exception:9,
13 = invokevirtual < Application, Ljava/lang/String, startsWith(Ljava/lang/String;)Z > 10,11 @18 exception:12,
conditional branch(ne, to iindex=-1) 13,5,
36 = phi  2,31,
39 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 39,
conditional branch(eq, to iindex=-1) 3,5,
40 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 40,5,
42 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancel, <Application,Lcom/android/server/vibrator/Vibration$EndInfo> > 1,
conditional branch(eq, to iindex=-1) 42,5,
43 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > 1,
44 = binaryop(or) 3 , 43,
putfield 1.< Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancelImmediate, <Primordial,Z> > = 44,
conditional branch(ne, to iindex=-1) 42,5,
putfield 1.< Application, Lcom/android/server/vibrator/VibrationStepConductor, mSignalCancel, <Application,Lcom/android/server/vibrator/Vibration$EndInfo> > = 36,
45 = getfield < Application, Lcom/android/server/vibrator/VibrationStepConductor, mLock, <Application,Ljava/lang/Object> > 1,
invokevirtual < Application, Ljava/lang/Object, notify()V > 45 @84 exception:46,
monitorexit 39,
return,
37 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(eq, to iindex=-1) 37,17,
38 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 37,
40 = invokevirtual < Application, Landroid/os/ExternalVibration, getVibrationAttributes()Landroid/os/VibrationAttributes; > 38 @74 exception:39,
2 = new <Application,Landroid/os/VibrationAttributes$Builder>@0,
3 = getfield < Application, Landroid/os/ExternalVibration, mAttrs, <Application,Landroid/media/AudioAttributes> > 1,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/media/AudioAttributes;)V > 2,3 @4 exception:4,
6 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 2 @7 exception:5,
2 = new <Application,Landroid/os/VibrationAttributes>@0,
3 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mUsage, <Primordial,I> > 1,
4 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mOriginalAudioUsage, <Primordial,I> > 1,
5 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > 1,
invokespecial < Application, Landroid/os/VibrationAttributes, <init>(IIILandroid/os/VibrationAttributes-IA;)V > 2,3,4,5,6 @9 exception:7,
return 2,
return 6,
42 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldCancelVibration(Landroid/os/VibrationAttributes;I)Z > 1,40,2 @78 exception:41,
5 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @0 exception:4,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 5,7,
9 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @16 exception:8,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
10 = binaryop(and) 9 , 3,
12 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 2 @21 exception:11,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 10,12,
goto (from iindex= 17 to iindex = 2),
13 = phi  6,7,
return 13,
conditional branch(eq, to iindex=-1) 42,17,
43 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, mute()V > 43 @86 exception:44,
2 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 1,
4 = invokevirtual < Application, Landroid/os/ExternalVibration, mute()Z > 2 @2 exception:3,
2 = getfield < Application, Landroid/os/ExternalVibration, mController, <Application,Landroid/os/IExternalVibrationController> > 1,
4 = invokeinterface < Application, Landroid/os/IExternalVibrationController, mute()Z > 2 @2 exception:3,
return 19,
return,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endExternalVibrateLocked(Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,11,17 @89 exception:45,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 4,5 @5 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(ne, to iindex=-1) 7,8,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, unlinkToDeath()V > 7 @16 exception:9,
2 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 1,
invokevirtual < Application, Landroid/os/ExternalVibration, unlinkToDeath(Landroid/os/IBinder$DeathRecipient;)V > 2,1 @2 exception:3,
return,
conditional branch(ne, to iindex=-1) 3,8,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
11 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, stats, <Application,Lcom/android/server/vibrator/VibrationStats> > 10,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, setExternalControl(ZLcom/android/server/vibrator/VibrationStats;)V > 1,8,11 @26 exception:12,
16 = phi  15,4,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @3 exception:6,
conditional branch(ge, to iindex=-1) 16,7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 8,16 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, setExternalControl(Z)V > 11,2 @17 exception:12,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationStats, reportSetExternalControl()V > 3 @20 exception:13,
15 = binaryop(add) 16 , 14,
goto (from iindex= 12 to iindex = -24),
16 = phi  15,4,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 5 @3 exception:6,
conditional branch(ge, to iindex=-1) 16,7,
return,
16 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationAndWriteStatsLocked(Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder;Lcom/android/server/vibrator/Vibration$EndInfo;)V > 1,16,2 @31 exception:17,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, end(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 2,3 @0 exception:4,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 2,
7 = invokevirtual < Application, Landroid/os/ExternalVibration, getUid()I > 5 @5 exception:6,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, externalVibration, <Application,Landroid/os/ExternalVibration> > 2,
10 = invokevirtual < Application, Landroid/os/ExternalVibration, getVibrationAttributes()Landroid/os/VibrationAttributes; > 8 @11 exception:9,
11 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 3,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, logVibrationStatus(ILandroid/os/VibrationAttributes;Lcom/android/server/vibrator/Vibration$Status;)V > 1,7,10,11 @17 exception:12,
13 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibratorManagerRecords, <Application,Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords, record(Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder;)V > 13,2 @22 exception:14,
15 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mFrameworkStatsLogger, <Application,Lcom/android/server/vibrator/VibratorFrameworkStatsLogger> > 1,
17 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @27 exception:16,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder, getStatsInfo(J)Lcom/android/server/vibrator/VibrationStats$StatsInfo; > 2,17 @31 exception:18,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorFrameworkStatsLogger, writeVibrationReportedAsync(Lcom/android/server/vibrator/VibrationStats$StatsInfo;)V > 15,19 @35 exception:20,
return,
putfield 1.< Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > = 8,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 4 @37 exception:24,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 15 @92 exception:57,
monitorexit 10,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 5 @96 exception:75,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void cancelVibrate(int p1, IBinder p2){
	Vibration$EndInfo v3 = new Vibration$EndInfo(Vibration$Status.CANCELLED_BY_USER);
	long v5 = Binder.clearCallingIdentity();
	if (this.mNextVibration == 0) {
		Vibration v6 = this.mVibration;
		if (Vibration.token != p2) {
			int v9 = Vibration.attrs.getUsage();
			if (v9 != 0) {
				int v10 = Vibration.attrs.getUsage();
				int v11 = Vibration.attrs.getUsage();
				if ((v10 & p1) != v11) {
					boolean v8 = 1;
					if (v8 == 0) {
						boolean v7 = 1;
						if (v7 == 0) {
							if (this.mNextVibration == 0) {
								Vibration v13 = this.mVibration;
								v13.end(v3);
								VibratorManagerService.logVibrationStatus(Vibration.uid, Vibration.attrs, Vibration$EndInfo.status);
								this.mVibratorManagerRecords.record(v13);
								if (1 == 0) {
									long v18 = SystemClock.uptimeMillis();
									VibrationStats$StatsInfo v19 = v13.getStatsInfo(v18);
									this.mFrameworkStatsLogger.writeVibrationReportedAsync(v19);
									this.mNextVibration = 0;
									if (this.mCurrentVibration == 0) {
										Vibration v21 = this.mCurrentVibration.getVibration();
										if (Vibration.token != p2) {
											int v24 = Vibration.attrs.getUsage();
											if (v24 != 0) {
												int v25 = Vibration.attrs.getUsage();
												int v26 = Vibration.attrs.getUsage();
												if ((v25 & p1) != v26) {
													boolean v23 = 1;
													if (v23 == 0) {
														boolean v22 = 1;
														if (v22 == 0) {
															if (Build.IS_DEBUGGABLE == 0) {
																Thread v29 = Thread.currentThread();
																if (v29 instanceof VibrationThread == 0) {
																	if (v3 == 0) {
																		String v36 = Vibration$EndInfo.status.name();
																		boolean v37 = v36.startsWith(""CANCEL"");
																		if (v37 != 0) {
																			if (0 == 0) {
																				if (this.mSignalCancelImmediate != 0) {
																					if (this.mSignalCancel == 0) {
																						this.mSignalCancelImmediate = (0 | this.mSignalCancelImmediate);
																						if (this.mSignalCancel != 0) {
																							this.mSignalCancel = v3;
																							this.mLock.notify();
																							if (this.mCurrentExternalVibration == 0) {
																								VibrationAttributes$Builder v40 = new VibrationAttributes$Builder(this.mAttrs);
																								VibrationAttributes v43 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
																								VibrationAttributes v42 = v43;
																								VibrationAttributes v39 = v42;
																								int v46 = this.mUsage;
																								if (v46 != 0) {
																									int v47 = this.mUsage;
																									int v48 = this.mUsage;
																									if ((v47 & p1) != v48) {
																										boolean v45 = 1;
																										if (v45 == 0) {
																											boolean v51 = this.mController.mute();
																											boolean v50 = 1;
																											Trace.traceBegin(8388608, ""endExternalVibrateLocked"");
																											if (this.mCurrentExternalVibration != 0) {
																												this.externalVibration.unlinkToDeath(VibratorManagerService$ExternalVibrationHolder);
																												if (0 != 0) {
																													int v57 = this.mVibrators.size();
																													if (0 >= v57) {
																														Object v58 = this.mVibrators.valueAt(0);
																														v58.setExternalControl(0);
																														VibratorManagerService$ExternalVibrationHolder.stats.reportSetExternalControl();
																														int v61 = this.mVibrators.size();
																														if ((0 + 1) >= v61) {
																															this.mCurrentExternalVibration.end(v3);
																															int v64 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getUid();
																															VibrationAttributes v65 = VibratorManagerService$ExternalVibrationHolder.externalVibration.getVibrationAttributes();
																															VibratorManagerService.logVibrationStatus(v64, v65, Vibration$EndInfo.status);
																															this.mVibratorManagerRecords.record(this.mCurrentExternalVibration);
																															long v68 = SystemClock.uptimeMillis();
																															VibrationStats$StatsInfo v69 = this.mCurrentExternalVibration.getStatsInfo(v68);
																															this.mFrameworkStatsLogger.writeVibrationReportedAsync(v69);
																															this.mCurrentExternalVibration = 0;
																															Trace.traceEnd(8388608);
																															Binder.restoreCallingIdentity(v5);
																															Trace.traceEnd(8388608);
																															return;
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","NORMAL"

"Lcom/android/server/vibrator/VibratorManagerService","registerVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z","0","4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
-----
","public boolean registerVibratorStateListener(int p1, IVibratorStateListener p2){
	Object v2 = this.mVibrators.get(p1);
	if (v2 != 0) {
		return 0;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","registerVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z","0","4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, registerVibratorStateListener(Landroid/os/IVibratorStateListener;)Z > 11,3 @21 exception:13,
return 14,","depth : 0
-----
","public boolean registerVibratorStateListener(int p1, IVibratorStateListener p2){
	Object v2 = this.mVibrators.get(p1);
	if (v2 != 0) {
		boolean v3 = v2.registerVibratorStateListener(p2);
		return v3;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","registerVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z","1","4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, registerVibratorStateListener(Landroid/os/IVibratorStateListener;)Z > 11,3 @21 exception:13,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:3,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorStateListeners, <Application,Landroid/os/RemoteCallbackList> > 1,
8 = invokevirtual < Application, Landroid/os/RemoteCallbackList, register(Landroid/os/IInterface;)Z > 6,2 @9 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
monitorexit 5,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @17 exception:24,
return 9,
return 14,","depth : 0
-----
depth : 1
-----
","public boolean registerVibratorStateListener(int p1, IVibratorStateListener p2){
	Object v2 = this.mVibrators.get(p1);
	if (v2 != 0) {
		long v4 = Binder.clearCallingIdentity();
		boolean v5 = this.mVibratorStateListeners.register(p2);
		if (v5 != 0) {
			Binder.restoreCallingIdentity(v4);
			boolean v3 = 0;
			return v3;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","registerVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z","1","4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, registerVibratorStateListener(Landroid/os/IVibratorStateListener;)Z > 11,3 @21 exception:13,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:3,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorStateListeners, <Application,Landroid/os/RemoteCallbackList> > 1,
8 = invokevirtual < Application, Landroid/os/RemoteCallbackList, register(Landroid/os/IInterface;)Z > 6,2 @9 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mIsVibrating, <Primordial,Z> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, notifyStateListener(Landroid/os/IVibratorStateListener;Z)V > 1,2,10 @23 exception:11,
monitorexit 5,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @28 exception:13,
return 12,
return 14,","depth : 0
-----
depth : 1
-----
","public boolean registerVibratorStateListener(int p1, IVibratorStateListener p2){
	Object v2 = this.mVibrators.get(p1);
	if (v2 != 0) {
		long v4 = Binder.clearCallingIdentity();
		boolean v5 = this.mVibratorStateListeners.register(p2);
		if (v5 != 0) {
			VibratorController.notifyStateListener(p2, this.mIsVibrating);
			Binder.restoreCallingIdentity(v4);
			boolean v3 = 1;
			return v3;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","registerVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z","2","4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, registerVibratorStateListener(Landroid/os/IVibratorStateListener;)Z > 11,3 @21 exception:13,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:3,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorStateListeners, <Application,Landroid/os/RemoteCallbackList> > 1,
8 = invokevirtual < Application, Landroid/os/RemoteCallbackList, register(Landroid/os/IInterface;)Z > 6,2 @9 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mIsVibrating, <Primordial,Z> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, notifyStateListener(Landroid/os/IVibratorStateListener;Z)V > 1,2,10 @23 exception:11,
invokeinterface < Application, Landroid/os/IVibratorStateListener, onVibrating(Z)V > 2,3 @0 exception:4,
goto (from iindex= 1 to iindex = 9),
return,
monitorexit 5,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @28 exception:13,
return 12,
return 14,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public boolean registerVibratorStateListener(int p1, IVibratorStateListener p2){
	Object v2 = this.mVibrators.get(p1);
	if (v2 != 0) {
		long v4 = Binder.clearCallingIdentity();
		boolean v5 = this.mVibratorStateListeners.register(p2);
		if (v5 != 0) {
			p2.onVibrating(this.mIsVibrating);
			Binder.restoreCallingIdentity(v4);
			boolean v3 = 1;
			return v3;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/vibrator/VibratorManagerService","unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z","0","4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 11,12,
return 12,","depth : 0
-----
","public boolean unregisterVibratorStateListener(int p1, IVibratorStateListener p2){
	Object v2 = this.mVibrators.get(p1);
	if (v2 != 0) {
		return 0;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z","0","4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, unregisterVibratorStateListener(Landroid/os/IVibratorStateListener;)Z > 11,3 @21 exception:13,
return 14,","depth : 0
-----
","public boolean unregisterVibratorStateListener(int p1, IVibratorStateListener p2){
	Object v2 = this.mVibrators.get(p1);
	if (v2 != 0) {
		boolean v3 = v2.unregisterVibratorStateListener(p2);
		return v3;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","unregisterVibratorStateListener(ILandroid/os/IVibratorStateListener;)Z","1","4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @6 exception:7,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>10 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 11,12,
14 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, unregisterVibratorStateListener(Landroid/os/IVibratorStateListener;)Z > 11,3 @21 exception:13,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:3,
5 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorStateListeners, <Application,Landroid/os/RemoteCallbackList> > 1,
7 = invokevirtual < Application, Landroid/os/RemoteCallbackList, unregister(Landroid/os/IInterface;)Z > 5,2 @6 exception:6,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @10 exception:12,
return 7,
return 14,","depth : 0
-----
depth : 1
-----
","public boolean unregisterVibratorStateListener(int p1, IVibratorStateListener p2){
	Object v2 = this.mVibrators.get(p1);
	if (v2 != 0) {
		long v4 = Binder.clearCallingIdentity();
		boolean v5 = this.mVibratorStateListeners.unregister(p2);
		Binder.restoreCallingIdentity(v4);
		boolean v3 = v5;
		return v3;
	}
}
","SYS_OR_SIG"

"Lcom/android/server/vibrator/VibratorManagerService","getVibratorInfo(I)Landroid/os/VibratorInfo;","0","3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>5 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 6,7,
return 7,","depth : 0
-----
","public VibratorInfo getVibratorInfo(int p1){
	Object v1 = this.mVibrators.get(p1);
	if (v1 != 0) {
		return 0;
	}
}
","NONE"
"Lcom/android/server/vibrator/VibratorManagerService","getVibratorInfo(I)Landroid/os/VibratorInfo;","0","3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>5 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, getVibratorInfo()Landroid/os/VibratorInfo; > 6 @12 exception:8,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mServiceReady, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 11,7,
monitorexit 10,
13 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, isVibratorInfoLoadSuccessful()Z > 6 @26 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
14 = phi  7,9,
return 14,","depth : 0
-----
","public VibratorInfo getVibratorInfo(int p1){
	Object v1 = this.mVibrators.get(p1);
	if (v1 != 0) {
		VibratorInfo v2 = v1.getVibratorInfo();
		if (this.mServiceReady == 0) {
			boolean v3 = v1.isVibratorInfoLoadSuccessful();
			if (v3 == 0) {
				return 0;
			}
		}
	}
}
","NONE"
"Lcom/android/server/vibrator/VibratorManagerService","getVibratorInfo(I)Landroid/os/VibratorInfo;","1","3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>5 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, getVibratorInfo()Landroid/os/VibratorInfo; > 6 @12 exception:8,
2 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorInfo, <Application,Landroid/os/VibratorInfo> > 1,
return 2,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mServiceReady, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 11,7,
monitorexit 10,
13 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, isVibratorInfoLoadSuccessful()Z > 6 @26 exception:12,
2 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorInfoLoadSuccessful, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 13,7,
14 = phi  7,9,
return 14,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public VibratorInfo getVibratorInfo(int p1){
	Object v1 = this.mVibrators.get(p1);
	if (v1 != 0) {
		VibratorInfo v2 = this.mVibratorInfo;
		if (this.mServiceReady == 0) {
			boolean v3 = this.mVibratorInfoLoadSuccessful;
			if (v3 == 0) {
				return 0;
			}
		}
	}
}
","NONE"

"Lcom/android/server/vibrator/VibratorManagerService","setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z","0","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 8,7 @10 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 10,11,7 @19 exception:12,
conditional branch(ne, to iindex=-1) 5,14,
16 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, isEffectValid(Landroid/os/CombinedVibration;)Z > 5 @49 exception:15,
conditional branch(ne, to iindex=-1) 16,14,
18 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupVibrationAttributes(Landroid/os/VibrationAttributes;Landroid/os/CombinedVibration;)Landroid/os/VibrationAttributes; > 1,6,5 @62 exception:17,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupAlwaysOnEffectsLocked(Landroid/os/CombinedVibration;)Landroid/util/SparseArray; > 1,5 @69 exception:20,
conditional branch(ne, to iindex=-1) 21,14,
22 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration>@80,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, <init>(IILjava/lang/String;Landroid/os/VibrationAttributes;Landroid/util/SparseArray;)V > 22,4,2,3,18,21 @87 exception:23,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mAlwaysOnEffects, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,4,22 @92 exception:25,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, updateAlwaysOnLocked(Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration;)V > 1,22 @95 exception:26,
monitorexit 19,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 8 @99 exception:27,
return 13,","depth : 0
-----
","public boolean setAlwaysOnEffect(int p1, String p2, int p3, CombinedVibration p4, VibrationAttributes p5){
	if (p4 != 0) {
		boolean v3 = VibratorManagerService.isEffectValid(p4);
		if (v3 != 0) {
			VibrationAttributes v4 = p0.fixupVibrationAttributes(p5, p4);
			SparseArray v5 = p0.fixupAlwaysOnEffectsLocked(p4);
			if (v5 != 0) {
				VibratorManagerService$AlwaysOnVibration v6 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v4,v5);
				this.mAlwaysOnEffects.put(p3, v6);
				p0.updateAlwaysOnLocked(v6);
				Trace.traceEnd(8388608);
				return 1;
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z","1","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 8,7 @10 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 10,11,7 @19 exception:12,
conditional branch(ne, to iindex=-1) 5,14,
16 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, isEffectValid(Landroid/os/CombinedVibration;)Z > 5 @49 exception:15,
conditional branch(ne, to iindex=-1) 1,2,
invokevirtual < Application, Landroid/os/CombinedVibration, validate()V > 1 @11 exception:4,
5 = getCaughtException ,
8 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,6,5 @19 exception:7,
return 2,
conditional branch(ne, to iindex=-1) 16,14,
18 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupVibrationAttributes(Landroid/os/VibrationAttributes;Landroid/os/CombinedVibration;)Landroid/os/VibrationAttributes; > 1,6,5 @62 exception:17,
conditional branch(ne, to iindex=-1) 2,4,
5 = getstatic < Application, Lcom/android/server/vibrator/VibratorManagerService, DEFAULT_ATTRIBUTES, <Application,Landroid/os/VibrationAttributes> >,
6 = phi  2,5,
8 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @4 exception:7,
conditional branch(ne, to iindex=-1) 8,4,
conditional branch(eq, to iindex=-1) 3,4,
10 = invokevirtual < Application, Landroid/os/CombinedVibration, isHapticFeedbackCandidate()Z > 3 @12 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
12 = phi  8,8,8,11,
17 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @20 exception:16,
19 = binaryop(and) 17 , 18,
conditional branch(eq, to iindex=-1) 19,4,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,20 @30 exception:21,
conditional branch(ne, to iindex=-1) 22,4,
25 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,23 @38 exception:24,
conditional branch(ne, to iindex=-1) 25,4,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,26 @46 exception:27,
conditional branch(ne, to iindex=-1) 28,4,
30 = binaryop(and) 17 , 29,
33 = phi  17,17,17,17,30,
37 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @54 exception:36,
conditional branch(ne, to iindex=-1) 12,37,
39 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @60 exception:38,
conditional branch(ne, to iindex=-1) 33,39,
43 = new <Application,Landroid/os/VibrationAttributes$Builder>@67,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/os/VibrationAttributes;)V > 43,6 @69 exception:44,
46 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setUsage(I)Landroid/os/VibrationAttributes$Builder; > 43,12 @72 exception:45,
48 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @76 exception:47,
50 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setFlags(II)Landroid/os/VibrationAttributes$Builder; > 46,33,48 @80 exception:49,
52 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 50 @84 exception:51,
return 52,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupAlwaysOnEffectsLocked(Landroid/os/CombinedVibration;)Landroid/util/SparseArray; > 1,5 @69 exception:20,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 3,4 @5 exception:5,
6 = instanceof 2 <Application,Landroid/os/CombinedVibration$Mono>,
conditional branch(eq, to iindex=-1) 6,7,
13 = checkcast <Application,Landroid/os/CombinedVibration$Mono>2 <Application,Landroid/os/CombinedVibration$Mono>,
15 = invokevirtual < Application, Landroid/os/CombinedVibration$Mono, getEffect()Landroid/os/VibrationEffect; > 13 @15 exception:14,
16 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2>@19,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2, <init>(Landroid/os/VibrationEffect;)V > 16,15 @21 exception:17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, transformAllVibratorsLocked(Ljava/util/function/Function;)Landroid/util/SparseArray; > 1,16 @24 exception:18,
goto (from iindex= 13 to iindex = 11),
21 = phi  19,12,
24 = new <Application,Landroid/util/SparseArray>@39,
invokespecial < Application, Landroid/util/SparseArray, <init>()V > 24 @41 exception:25,
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
29 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 21,48 @51 exception:28,
30 = checkcast <Application,Landroid/os/VibrationEffect>29 <Application,Landroid/os/VibrationEffect>,
32 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, extractPrebakedSegment(Landroid/os/VibrationEffect;)Landroid/os/vibrator/PrebakedSegment; > 30 @57 exception:31,
conditional branch(ne, to iindex=-1) 32,7,
34 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 21,48 @74 exception:33,
35 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
37 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 35,34 @80 exception:36,
38 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>37 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(eq, to iindex=-1) 38,7,
41 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, hasCapability(J)Z > 38,39 @90 exception:40,
conditional branch(eq, to iindex=-1) 41,7,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,34,32 @96 exception:42,
47 = binaryop(add) 48 , 46,
goto (from iindex= 49 to iindex = -56),
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
52 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 24 @102 exception:51,
conditional branch(ne, to iindex=-1) 52,7,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 3 @108 exception:54,
return 7,
conditional branch(ne, to iindex=-1) 21,14,
22 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration>@80,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, <init>(IILjava/lang/String;Landroid/os/VibrationAttributes;Landroid/util/SparseArray;)V > 22,4,2,3,18,21 @87 exception:23,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mAlwaysOnEffects, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,4,22 @92 exception:25,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, updateAlwaysOnLocked(Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration;)V > 1,22 @95 exception:26,
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
10 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 8,41 @14 exception:9,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,10 @18 exception:11,
13 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>12 <Application,Lcom/android/server/vibrator/VibratorController>,
14 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
16 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 14,41 @26 exception:15,
17 = checkcast <Application,Landroid/os/vibrator/PrebakedSegment>16 <Application,Landroid/os/vibrator/PrebakedSegment>,
conditional branch(ne, to iindex=-1) 13,3,
18 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, uid, <Primordial,I> > 2,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, opPkg, <Application,Ljava/lang/String> > 2,
20 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationLocked(IILjava/lang/String;Landroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 1,18,3,19,20 @41 exception:21,
conditional branch(ne, to iindex=-1) 22,3,
23 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationScaler, <Application,Lcom/android/server/vibrator/VibrationScaler> > 1,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
26 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 24 @51 exception:25,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationScaler, scale(Landroid/os/vibrator/PrebakedSegment;I)Landroid/os/vibrator/PrebakedSegment; > 23,17,26 @55 exception:27,
goto (from iindex= 31 to iindex = 2),
29 = phi  28,3,
34 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, alwaysOnId, <Primordial,I> > 2,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, updateAlwaysOn(ILandroid/os/vibrator/PrebakedSegment;)V > 13,34,29 @63 exception:35,
40 = binaryop(add) 41 , 39,
goto (from iindex= 36 to iindex = -66),
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
return,
monitorexit 19,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 8 @99 exception:27,
return 13,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public boolean setAlwaysOnEffect(int p1, String p2, int p3, CombinedVibration p4, VibrationAttributes p5){
	if (p4 != 0) {
		if (p4 != 0) {
			p4.validate();
			boolean v3 = 0;
			if (v3 != 0) {
				if (p5 != 0) {
					int v7 = p5.getUsage();
					if (v7 != 0) {
						if (p4 == 0) {
							boolean v8 = p4.isHapticFeedbackCandidate();
							if (v8 == 0) {
								int v9 = p5.getFlags();
								if ((v9 & 3) == 0) {
									if (v10 != 0) {
										if (v11 != 0) {
											if (v12 != 0) {
												int v13 = p5.getUsage();
												if (v7 != v13) {
													int v14 = p5.getFlags();
													if (v9 != v14) {
														VibrationAttributes$Builder v15 = new VibrationAttributes$Builder(p5);
														VibrationAttributes$Builder v17 = v15.setUsage(v7);
														int v18 = p5.getFlags();
														VibrationAttributes$Builder v19 = v17.setFlags(v9, v18);
														VibrationAttributes v20 = v19.build();
														VibrationAttributes v6 = v20;
														Trace.traceBegin(8388608, ""fixupAlwaysOnEffectsLocked"");
														if (p4 instanceof CombinedVibration$Mono == 0) {
															VibrationEffect v23 = p4.getEffect();
															VibratorManagerService$$ExternalSyntheticLambda2 v24 = new VibratorManagerService$$ExternalSyntheticLambda2(v23);
															SparseArray v26 = VibratorManagerService.transformAllVibratorsLocked(v24);
															SparseArray v27 = new SparseArray();
															int v29 = v26.size();
															if (0 >= v29) {
																Object v30 = v26.valueAt(0);
																PrebakedSegment v31 = VibratorManagerService.extractPrebakedSegment(v30);
																if (v31 != 0) {
																	int v32 = v26.keyAt(0);
																	Object v33 = this.mVibrators.get(v32);
																	if (v33 == 0) {
																		boolean v34 = v33.hasCapability(64);
																		if (v34 == 0) {
																			v27.put(v32, v31);
																			int v36 = v26.size();
																			if ((0 + 1) >= v36) {
																				int v37 = v27.size();
																				if (v37 != 0) {
																					Trace.traceEnd(8388608);
																					SparseArray v21 = 0;
																					if (v21 != 0) {
																						VibratorManagerService$AlwaysOnVibration v39 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v6,v21);
																						this.mAlwaysOnEffects.put(p3, v39);
																						int v43 = VibratorManagerService$AlwaysOnVibration.effects.size();
																						if (0 >= v43) {
																							int v44 = VibratorManagerService$AlwaysOnVibration.effects.keyAt(0);
																							Object v45 = this.mVibrators.get(v44);
																							Object v46 = VibratorManagerService$AlwaysOnVibration.effects.valueAt(0);
																							if (v45 != 0) {
																								Vibration$Status v47 = VibratorManagerService.shouldIgnoreVibrationLocked(VibratorManagerService$AlwaysOnVibration.uid, 0, VibratorManagerService$AlwaysOnVibration.opPkg, VibratorManagerService$AlwaysOnVibration.attrs);
																								if (v47 != 0) {
																									int v48 = VibratorManagerService$AlwaysOnVibration.attrs.getUsage();
																									PrebakedSegment v49 = this.mVibrationScaler.scale(v46, v48);
																									v45.updateAlwaysOn(VibratorManagerService$AlwaysOnVibration.alwaysOnId, v49);
																									int v51 = VibratorManagerService$AlwaysOnVibration.effects.size();
																									if ((0 + 1) >= v51) {
																										Trace.traceEnd(8388608);
																										return 1;
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z","1","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 8,7 @10 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 10,11,7 @19 exception:12,
conditional branch(ne, to iindex=-1) 5,14,
16 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, isEffectValid(Landroid/os/CombinedVibration;)Z > 5 @49 exception:15,
conditional branch(ne, to iindex=-1) 1,2,
invokevirtual < Application, Landroid/os/CombinedVibration, validate()V > 1 @11 exception:4,
return 9,
conditional branch(ne, to iindex=-1) 16,14,
18 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupVibrationAttributes(Landroid/os/VibrationAttributes;Landroid/os/CombinedVibration;)Landroid/os/VibrationAttributes; > 1,6,5 @62 exception:17,
conditional branch(ne, to iindex=-1) 2,4,
5 = getstatic < Application, Lcom/android/server/vibrator/VibratorManagerService, DEFAULT_ATTRIBUTES, <Application,Landroid/os/VibrationAttributes> >,
6 = phi  2,5,
8 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @4 exception:7,
conditional branch(ne, to iindex=-1) 8,4,
conditional branch(eq, to iindex=-1) 3,4,
10 = invokevirtual < Application, Landroid/os/CombinedVibration, isHapticFeedbackCandidate()Z > 3 @12 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
12 = phi  8,8,8,11,
17 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @20 exception:16,
19 = binaryop(and) 17 , 18,
conditional branch(eq, to iindex=-1) 19,4,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,20 @30 exception:21,
conditional branch(ne, to iindex=-1) 22,4,
25 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,23 @38 exception:24,
conditional branch(ne, to iindex=-1) 25,4,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,26 @46 exception:27,
conditional branch(ne, to iindex=-1) 28,4,
30 = binaryop(and) 17 , 29,
33 = phi  17,17,17,17,30,
37 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @54 exception:36,
conditional branch(ne, to iindex=-1) 12,37,
39 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @60 exception:38,
conditional branch(ne, to iindex=-1) 33,39,
43 = new <Application,Landroid/os/VibrationAttributes$Builder>@67,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/os/VibrationAttributes;)V > 43,6 @69 exception:44,
46 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setUsage(I)Landroid/os/VibrationAttributes$Builder; > 43,12 @72 exception:45,
48 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @76 exception:47,
50 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setFlags(II)Landroid/os/VibrationAttributes$Builder; > 46,33,48 @80 exception:49,
52 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 50 @84 exception:51,
return 52,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupAlwaysOnEffectsLocked(Landroid/os/CombinedVibration;)Landroid/util/SparseArray; > 1,5 @69 exception:20,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 3,4 @5 exception:5,
6 = instanceof 2 <Application,Landroid/os/CombinedVibration$Mono>,
conditional branch(eq, to iindex=-1) 6,7,
13 = checkcast <Application,Landroid/os/CombinedVibration$Mono>2 <Application,Landroid/os/CombinedVibration$Mono>,
15 = invokevirtual < Application, Landroid/os/CombinedVibration$Mono, getEffect()Landroid/os/VibrationEffect; > 13 @15 exception:14,
16 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2>@19,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2, <init>(Landroid/os/VibrationEffect;)V > 16,15 @21 exception:17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, transformAllVibratorsLocked(Ljava/util/function/Function;)Landroid/util/SparseArray; > 1,16 @24 exception:18,
goto (from iindex= 13 to iindex = 11),
21 = phi  19,12,
24 = new <Application,Landroid/util/SparseArray>@39,
invokespecial < Application, Landroid/util/SparseArray, <init>()V > 24 @41 exception:25,
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
29 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 21,48 @51 exception:28,
30 = checkcast <Application,Landroid/os/VibrationEffect>29 <Application,Landroid/os/VibrationEffect>,
32 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, extractPrebakedSegment(Landroid/os/VibrationEffect;)Landroid/os/vibrator/PrebakedSegment; > 30 @57 exception:31,
conditional branch(ne, to iindex=-1) 32,7,
34 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 21,48 @74 exception:33,
35 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
37 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 35,34 @80 exception:36,
38 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>37 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(eq, to iindex=-1) 38,7,
41 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, hasCapability(J)Z > 38,39 @90 exception:40,
conditional branch(eq, to iindex=-1) 41,7,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,34,32 @96 exception:42,
47 = binaryop(add) 48 , 46,
goto (from iindex= 49 to iindex = -56),
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
52 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 24 @102 exception:51,
conditional branch(ne, to iindex=-1) 52,7,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 3 @108 exception:54,
return 7,
conditional branch(ne, to iindex=-1) 21,14,
22 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration>@80,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, <init>(IILjava/lang/String;Landroid/os/VibrationAttributes;Landroid/util/SparseArray;)V > 22,4,2,3,18,21 @87 exception:23,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mAlwaysOnEffects, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,4,22 @92 exception:25,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, updateAlwaysOnLocked(Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration;)V > 1,22 @95 exception:26,
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
10 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 8,41 @14 exception:9,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,10 @18 exception:11,
13 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>12 <Application,Lcom/android/server/vibrator/VibratorController>,
14 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
16 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 14,41 @26 exception:15,
17 = checkcast <Application,Landroid/os/vibrator/PrebakedSegment>16 <Application,Landroid/os/vibrator/PrebakedSegment>,
conditional branch(ne, to iindex=-1) 13,3,
18 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, uid, <Primordial,I> > 2,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, opPkg, <Application,Ljava/lang/String> > 2,
20 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationLocked(IILjava/lang/String;Landroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 1,18,3,19,20 @41 exception:21,
conditional branch(ne, to iindex=-1) 22,3,
23 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationScaler, <Application,Lcom/android/server/vibrator/VibrationScaler> > 1,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
26 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 24 @51 exception:25,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationScaler, scale(Landroid/os/vibrator/PrebakedSegment;I)Landroid/os/vibrator/PrebakedSegment; > 23,17,26 @55 exception:27,
goto (from iindex= 31 to iindex = 2),
29 = phi  28,3,
34 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, alwaysOnId, <Primordial,I> > 2,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, updateAlwaysOn(ILandroid/os/vibrator/PrebakedSegment;)V > 13,34,29 @63 exception:35,
40 = binaryop(add) 41 , 39,
goto (from iindex= 36 to iindex = -66),
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
return,
monitorexit 19,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 8 @99 exception:27,
return 13,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public boolean setAlwaysOnEffect(int p1, String p2, int p3, CombinedVibration p4, VibrationAttributes p5){
	if (p4 != 0) {
		if (p4 != 0) {
			p4.validate();
			boolean v3 = 1;
			if (v3 != 0) {
				if (p5 != 0) {
					int v6 = p5.getUsage();
					if (v6 != 0) {
						if (p4 == 0) {
							boolean v7 = p4.isHapticFeedbackCandidate();
							if (v7 == 0) {
								int v8 = p5.getFlags();
								if ((v8 & 3) == 0) {
									if (v9 != 0) {
										if (v10 != 0) {
											if (v11 != 0) {
												int v12 = p5.getUsage();
												if (v6 != v12) {
													int v13 = p5.getFlags();
													if (v8 != v13) {
														VibrationAttributes$Builder v14 = new VibrationAttributes$Builder(p5);
														VibrationAttributes$Builder v16 = v14.setUsage(v6);
														int v17 = p5.getFlags();
														VibrationAttributes$Builder v18 = v16.setFlags(v8, v17);
														VibrationAttributes v19 = v18.build();
														VibrationAttributes v5 = v19;
														Trace.traceBegin(8388608, ""fixupAlwaysOnEffectsLocked"");
														if (p4 instanceof CombinedVibration$Mono == 0) {
															VibrationEffect v22 = p4.getEffect();
															VibratorManagerService$$ExternalSyntheticLambda2 v23 = new VibratorManagerService$$ExternalSyntheticLambda2(v22);
															SparseArray v25 = VibratorManagerService.transformAllVibratorsLocked(v23);
															SparseArray v26 = new SparseArray();
															int v28 = v25.size();
															if (0 >= v28) {
																Object v29 = v25.valueAt(0);
																PrebakedSegment v30 = VibratorManagerService.extractPrebakedSegment(v29);
																if (v30 != 0) {
																	int v31 = v25.keyAt(0);
																	Object v32 = this.mVibrators.get(v31);
																	if (v32 == 0) {
																		boolean v33 = v32.hasCapability(64);
																		if (v33 == 0) {
																			v26.put(v31, v30);
																			int v35 = v25.size();
																			if ((0 + 1) >= v35) {
																				int v36 = v26.size();
																				if (v36 != 0) {
																					Trace.traceEnd(8388608);
																					SparseArray v20 = 0;
																					if (v20 != 0) {
																						VibratorManagerService$AlwaysOnVibration v38 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v5,v20);
																						this.mAlwaysOnEffects.put(p3, v38);
																						int v42 = VibratorManagerService$AlwaysOnVibration.effects.size();
																						if (0 >= v42) {
																							int v43 = VibratorManagerService$AlwaysOnVibration.effects.keyAt(0);
																							Object v44 = this.mVibrators.get(v43);
																							Object v45 = VibratorManagerService$AlwaysOnVibration.effects.valueAt(0);
																							if (v44 != 0) {
																								Vibration$Status v46 = VibratorManagerService.shouldIgnoreVibrationLocked(VibratorManagerService$AlwaysOnVibration.uid, 0, VibratorManagerService$AlwaysOnVibration.opPkg, VibratorManagerService$AlwaysOnVibration.attrs);
																								if (v46 != 0) {
																									int v47 = VibratorManagerService$AlwaysOnVibration.attrs.getUsage();
																									PrebakedSegment v48 = this.mVibrationScaler.scale(v45, v47);
																									v44.updateAlwaysOn(VibratorManagerService$AlwaysOnVibration.alwaysOnId, v48);
																									int v50 = VibratorManagerService$AlwaysOnVibration.effects.size();
																									if ((0 + 1) >= v50) {
																										Trace.traceEnd(8388608);
																										return 1;
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z","2","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 8,7 @10 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 10,11,7 @19 exception:12,
conditional branch(ne, to iindex=-1) 5,14,
16 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, isEffectValid(Landroid/os/CombinedVibration;)Z > 5 @49 exception:15,
conditional branch(ne, to iindex=-1) 1,2,
invokevirtual < Application, Landroid/os/CombinedVibration, validate()V > 1 @11 exception:4,
5 = getCaughtException ,
8 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,6,5 @19 exception:7,
return 2,
conditional branch(ne, to iindex=-1) 16,14,
18 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupVibrationAttributes(Landroid/os/VibrationAttributes;Landroid/os/CombinedVibration;)Landroid/os/VibrationAttributes; > 1,6,5 @62 exception:17,
conditional branch(ne, to iindex=-1) 2,4,
5 = getstatic < Application, Lcom/android/server/vibrator/VibratorManagerService, DEFAULT_ATTRIBUTES, <Application,Landroid/os/VibrationAttributes> >,
6 = phi  2,5,
8 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @4 exception:7,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 8,4,
conditional branch(eq, to iindex=-1) 3,4,
10 = invokevirtual < Application, Landroid/os/CombinedVibration, isHapticFeedbackCandidate()Z > 3 @12 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
12 = phi  8,8,8,11,
17 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @20 exception:16,
2 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
return 2,
19 = binaryop(and) 17 , 18,
conditional branch(eq, to iindex=-1) 19,4,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,20 @30 exception:21,
conditional branch(ne, to iindex=-1) 22,4,
25 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,23 @38 exception:24,
conditional branch(ne, to iindex=-1) 25,4,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,26 @46 exception:27,
conditional branch(ne, to iindex=-1) 28,4,
30 = binaryop(and) 17 , 29,
33 = phi  17,17,17,17,30,
37 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @54 exception:36,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 12,37,
39 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @60 exception:38,
2 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 33,39,
43 = new <Application,Landroid/os/VibrationAttributes$Builder>@67,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/os/VibrationAttributes;)V > 43,6 @69 exception:44,
46 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setUsage(I)Landroid/os/VibrationAttributes$Builder; > 43,12 @72 exception:45,
putfield 1.< Application, Landroid/os/VibrationAttributes$Builder, mOriginalAudioUsage, <Primordial,I> > = 3,
putfield 1.< Application, Landroid/os/VibrationAttributes$Builder, mUsage, <Primordial,I> > = 2,
return 1,
48 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @76 exception:47,
2 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
return 2,
50 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setFlags(II)Landroid/os/VibrationAttributes$Builder; > 46,33,48 @80 exception:49,
5 = binaryop(and) 3 , 4,
6 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > 1,
7 = bitnot 5,
8 = binaryop(and) 6 , 7,
9 = binaryop(and) 2 , 5,
10 = binaryop(or) 8 , 9,
putfield 1.< Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > = 10,
return 1,
52 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 50 @84 exception:51,
2 = new <Application,Landroid/os/VibrationAttributes>@0,
3 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mUsage, <Primordial,I> > 1,
4 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mOriginalAudioUsage, <Primordial,I> > 1,
5 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > 1,
invokespecial < Application, Landroid/os/VibrationAttributes, <init>(IIILandroid/os/VibrationAttributes-IA;)V > 2,3,4,5,6 @9 exception:7,
return 2,
return 52,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupAlwaysOnEffectsLocked(Landroid/os/CombinedVibration;)Landroid/util/SparseArray; > 1,5 @69 exception:20,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 3,4 @5 exception:5,
6 = instanceof 2 <Application,Landroid/os/CombinedVibration$Mono>,
conditional branch(eq, to iindex=-1) 6,7,
13 = checkcast <Application,Landroid/os/CombinedVibration$Mono>2 <Application,Landroid/os/CombinedVibration$Mono>,
15 = invokevirtual < Application, Landroid/os/CombinedVibration$Mono, getEffect()Landroid/os/VibrationEffect; > 13 @15 exception:14,
2 = getfield < Application, Landroid/os/CombinedVibration$Mono, mEffect, <Application,Landroid/os/VibrationEffect> > 1,
return 2,
16 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2>@19,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2, <init>(Landroid/os/VibrationEffect;)V > 16,15 @21 exception:17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, transformAllVibratorsLocked(Ljava/util/function/Function;)Landroid/util/SparseArray; > 1,16 @24 exception:18,
3 = new <Application,Landroid/util/SparseArray>@0,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
invokespecial < Application, Landroid/util/SparseArray, <init>(I)V > 3,6 @8 exception:7,
24 = phi  23,8,
9 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 9 @14 exception:10,
conditional branch(ge, to iindex=-1) 24,11,
12 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
14 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 12,24 @22 exception:13,
15 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
17 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,24 @28 exception:16,
18 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>17 <Application,Lcom/android/server/vibrator/VibratorController>,
20 = invokeinterface < Application, Ljava/util/function/Function, apply(Ljava/lang/Object;)Ljava/lang/Object; > 2,18 @34 exception:19,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 3,14,20 @38 exception:21,
23 = binaryop(add) 24 , 22,
goto (from iindex= 21 to iindex = -31),
24 = phi  23,8,
9 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 9 @14 exception:10,
conditional branch(ge, to iindex=-1) 24,11,
return 3,
goto (from iindex= 13 to iindex = 11),
21 = phi  19,12,
24 = new <Application,Landroid/util/SparseArray>@39,
invokespecial < Application, Landroid/util/SparseArray, <init>()V > 24 @41 exception:25,
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
29 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 21,48 @51 exception:28,
30 = checkcast <Application,Landroid/os/VibrationEffect>29 <Application,Landroid/os/VibrationEffect>,
32 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, extractPrebakedSegment(Landroid/os/VibrationEffect;)Landroid/os/vibrator/PrebakedSegment; > 30 @57 exception:31,
2 = instanceof 1 <Application,Landroid/os/VibrationEffect$Composed>,
conditional branch(eq, to iindex=-1) 2,3,
4 = checkcast <Application,Landroid/os/VibrationEffect$Composed>1 <Application,Landroid/os/VibrationEffect$Composed>,
6 = invokevirtual < Application, Landroid/os/VibrationEffect$Composed, getSegments()Ljava/util/List; > 4 @6 exception:5,
8 = invokeinterface < Application, Ljava/util/List, size()I > 6 @10 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Landroid/os/VibrationEffect$Composed, getSegments()Ljava/util/List; > 4 @17 exception:10,
13 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 11,3 @22 exception:12,
14 = checkcast <Application,Landroid/os/vibrator/VibrationEffectSegment>13 <Application,Landroid/os/vibrator/VibrationEffectSegment>,
15 = instanceof 14 <Application,Landroid/os/vibrator/PrebakedSegment>,
conditional branch(eq, to iindex=-1) 15,3,
20 = checkcast <Application,Landroid/os/vibrator/PrebakedSegment>14 <Application,Landroid/os/vibrator/PrebakedSegment>,
return 20,
conditional branch(ne, to iindex=-1) 32,7,
34 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 21,48 @74 exception:33,
35 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
37 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 35,34 @80 exception:36,
38 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>37 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(eq, to iindex=-1) 38,7,
41 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, hasCapability(J)Z > 38,39 @90 exception:40,
3 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorInfo, <Application,Landroid/os/VibratorInfo> > 1,
5 = invokevirtual < Application, Landroid/os/VibratorInfo, hasCapability(J)Z > 3,2 @2 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 41,7,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,34,32 @96 exception:42,
47 = binaryop(add) 48 , 46,
goto (from iindex= 49 to iindex = -56),
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
52 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 24 @102 exception:51,
conditional branch(ne, to iindex=-1) 52,7,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 3 @108 exception:54,
return 7,
conditional branch(ne, to iindex=-1) 21,14,
22 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration>@80,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, <init>(IILjava/lang/String;Landroid/os/VibrationAttributes;Landroid/util/SparseArray;)V > 22,4,2,3,18,21 @87 exception:23,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mAlwaysOnEffects, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,4,22 @92 exception:25,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, updateAlwaysOnLocked(Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration;)V > 1,22 @95 exception:26,
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
10 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 8,41 @14 exception:9,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,10 @18 exception:11,
13 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>12 <Application,Lcom/android/server/vibrator/VibratorController>,
14 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
16 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 14,41 @26 exception:15,
17 = checkcast <Application,Landroid/os/vibrator/PrebakedSegment>16 <Application,Landroid/os/vibrator/PrebakedSegment>,
conditional branch(ne, to iindex=-1) 13,3,
18 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, uid, <Primordial,I> > 2,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, opPkg, <Application,Ljava/lang/String> > 2,
20 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationLocked(IILjava/lang/String;Landroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 1,18,3,19,20 @41 exception:21,
6 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationSettings, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, shouldIgnoreVibration(IILandroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 6,2,3,5 @2 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, checkAppOpModeLocked(ILjava/lang/String;Landroid/os/VibrationAttributes;)I > 1,2,4,5 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(ne, to iindex=-1) 11,12,
14 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, IGNORED_ERROR_APP_OPS, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
return 14,
conditional branch(ne, to iindex=-1) 22,3,
23 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationScaler, <Application,Lcom/android/server/vibrator/VibrationScaler> > 1,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
26 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 24 @51 exception:25,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationScaler, scale(Landroid/os/vibrator/PrebakedSegment;I)Landroid/os/vibrator/PrebakedSegment; > 23,17,26 @55 exception:27,
4 = getfield < Application, Lcom/android/server/vibrator/VibrationScaler, mSettingsController, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
6 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, getCurrentIntensity(I)I > 4,3 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/vibrator/VibrationScaler, mSettingsController, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
10 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, getDefaultIntensity(I)I > 8,3 @10 exception:9,
11 = phi  6,10,
16 = invokestatic < Application, Lcom/android/server/vibrator/VibrationScaler, intensityToEffectStrength(I)I > 11 @14 exception:15,
18 = invokevirtual < Application, Landroid/os/vibrator/PrebakedSegment, applyEffectStrength(I)Landroid/os/vibrator/PrebakedSegment; > 2,16 @18 exception:17,
return 18,
goto (from iindex= 31 to iindex = 2),
29 = phi  28,3,
34 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, alwaysOnId, <Primordial,I> > 2,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, updateAlwaysOn(ILandroid/os/vibrator/PrebakedSegment;)V > 13,34,29 @63 exception:35,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorInfo, <Application,Landroid/os/VibratorInfo> > 1,
7 = invokevirtual < Application, Landroid/os/VibratorInfo, hasCapability(J)Z > 4,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
conditional branch(ne, to iindex=-1) 3,8,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mNativeWrapper, <Application,Lcom/android/server/vibrator/VibratorController$NativeWrapper> > 1,
11 = conversion(J) 2,
13 = invokevirtual < Application, Landroid/os/vibrator/PrebakedSegment, getEffectId()I > 3 @26 exception:12,
14 = conversion(J) 13,
16 = invokevirtual < Application, Landroid/os/vibrator/PrebakedSegment, getEffectStrength()I > 3 @31 exception:15,
17 = conversion(J) 16,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController$NativeWrapper, alwaysOnEnable(JJJ)V > 10,11,14,17 @36 exception:18,
monitorexit 9,
return,
40 = binaryop(add) 41 , 39,
goto (from iindex= 36 to iindex = -66),
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
return,
monitorexit 19,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 8 @99 exception:27,
return 13,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean setAlwaysOnEffect(int p1, String p2, int p3, CombinedVibration p4, VibrationAttributes p5){
	if (p4 != 0) {
		if (p4 != 0) {
			p4.validate();
			boolean v3 = 0;
			if (v3 != 0) {
				if (p5 != 0) {
					int v7 = this.mUsage;
					if (v7 != 0) {
						if (p4 == 0) {
							boolean v8 = p4.isHapticFeedbackCandidate();
							if (v8 == 0) {
								int v9 = this.mFlags;
								if ((v9 & 3) == 0) {
									if (v10 != 0) {
										if (v11 != 0) {
											if (v12 != 0) {
												int v13 = this.mUsage;
												if (v7 != v13) {
													int v14 = this.mFlags;
													if (v9 != v14) {
														VibrationAttributes$Builder v15 = new VibrationAttributes$Builder(p5);
														this.mOriginalAudioUsage = 0;
														this.mUsage = v7;
														VibrationAttributes$Builder v17 = VibrationAttributes$Builder;
														int v18 = this.mFlags;
														this.mFlags = ((this.mFlags & (~(v18 & 3))) | (v9 & (v18 & 3)));
														VibrationAttributes$Builder v19 = VibrationAttributes$Builder;
														VibrationAttributes v21 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
														VibrationAttributes v20 = v21;
														VibrationAttributes v6 = v20;
														Trace.traceBegin(8388608, ""fixupAlwaysOnEffectsLocked"");
														if (p4 instanceof CombinedVibration$Mono == 0) {
															VibrationEffect v25 = this.mEffect;
															VibratorManagerService$$ExternalSyntheticLambda2 v26 = new VibratorManagerService$$ExternalSyntheticLambda2(v25);
															SparseArray v29 = new SparseArray(v30);
															int v30 = this.mVibrators.size();
															int v32 = this.mVibrators.size();
															if (0 >= v32) {
																int v33 = this.mVibrators.keyAt(0);
																Object v34 = this.mVibrators.valueAt(0);
																Object v35 = v26.apply(v34);
																v29.put(v33, v35);
																int v37 = this.mVibrators.size();
																if ((0 + 1) >= v37) {
																	SparseArray v28 = v29;
																	SparseArray v38 = new SparseArray();
																	int v40 = v28.size();
																	if (0 >= v40) {
																		Object v41 = v28.valueAt(0);
																		if (v41 instanceof VibrationEffect$Composed == 0) {
																			List v43 = v41.getSegments();
																			int v44 = v43.size();
																			if (v44 != 1) {
																				List v45 = v41.getSegments();
																				Object v46 = v45.get(0);
																				if (v46 instanceof PrebakedSegment == 0) {
																					PrebakedSegment v42 = v46;
																					if (v42 != 0) {
																						int v47 = v28.keyAt(0);
																						Object v48 = this.mVibrators.get(v47);
																						if (v48 == 0) {
																							boolean v50 = this.mVibratorInfo.hasCapability(64);
																							boolean v49 = v50;
																							if (v49 == 0) {
																								v38.put(v47, v42);
																								int v52 = v28.size();
																								if ((0 + 1) >= v52) {
																									int v53 = v38.size();
																									if (v53 != 0) {
																										Trace.traceEnd(8388608);
																										SparseArray v23 = 0;
																										if (v23 != 0) {
																											VibratorManagerService$AlwaysOnVibration v55 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v6,v23);
																											this.mAlwaysOnEffects.put(p3, v55);
																											int v59 = VibratorManagerService$AlwaysOnVibration.effects.size();
																											if (0 >= v59) {
																												int v60 = VibratorManagerService$AlwaysOnVibration.effects.keyAt(0);
																												Object v61 = this.mVibrators.get(v60);
																												Object v62 = VibratorManagerService$AlwaysOnVibration.effects.valueAt(0);
																												if (v61 != 0) {
																													Vibration$Status v64 = this.mVibrationSettings.shouldIgnoreVibration(VibratorManagerService$AlwaysOnVibration.uid, 0, VibratorManagerService$AlwaysOnVibration.attrs);
																													if (v64 == 0) {
																														int v65 = VibratorManagerService.checkAppOpModeLocked(VibratorManagerService$AlwaysOnVibration.uid, VibratorManagerService$AlwaysOnVibration.opPkg, VibratorManagerService$AlwaysOnVibration.attrs);
																														if (v65 == 0) {
																															if (v65 != 2) {
																																Vibration$Status v63 = Vibration$Status.IGNORED_ERROR_APP_OPS;
																																if (v63 != 0) {
																																	int v66 = this.mUsage;
																																	int v68 = this.mSettingsController.getCurrentIntensity(v66);
																																	if (v68 != 0) {
																																		int v69 = this.mSettingsController.getDefaultIntensity(v66);
																																		int v70 = VibrationScaler.intensityToEffectStrength(v68);
																																		PrebakedSegment v71 = v62.applyEffectStrength(v70);
																																		PrebakedSegment v67 = v71;
																																		boolean v73 = this.mVibratorInfo.hasCapability(64);
																																		if (v73 != 0) {
																																			if (v67 != 0) {
																																				int v74 = v67.getEffectId();
																																				int v75 = v67.getEffectStrength();
																																				this.mNativeWrapper.alwaysOnEnable(VibratorManagerService$AlwaysOnVibration.alwaysOnId, v74, v75);
																																				int v77 = VibratorManagerService$AlwaysOnVibration.effects.size();
																																				if ((0 + 1) >= v77) {
																																					Trace.traceEnd(8388608);
																																					return 1;
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z","2","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 8,7 @10 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 10,11,7 @19 exception:12,
conditional branch(ne, to iindex=-1) 5,14,
16 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, isEffectValid(Landroid/os/CombinedVibration;)Z > 5 @49 exception:15,
conditional branch(ne, to iindex=-1) 1,2,
invokevirtual < Application, Landroid/os/CombinedVibration, validate()V > 1 @11 exception:4,
5 = getCaughtException ,
8 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,6,5 @19 exception:7,
return 2,
conditional branch(ne, to iindex=-1) 16,14,
18 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupVibrationAttributes(Landroid/os/VibrationAttributes;Landroid/os/CombinedVibration;)Landroid/os/VibrationAttributes; > 1,6,5 @62 exception:17,
conditional branch(ne, to iindex=-1) 2,4,
5 = getstatic < Application, Lcom/android/server/vibrator/VibratorManagerService, DEFAULT_ATTRIBUTES, <Application,Landroid/os/VibrationAttributes> >,
6 = phi  2,5,
8 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @4 exception:7,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 8,4,
conditional branch(eq, to iindex=-1) 3,4,
10 = invokevirtual < Application, Landroid/os/CombinedVibration, isHapticFeedbackCandidate()Z > 3 @12 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
12 = phi  8,8,8,11,
17 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @20 exception:16,
2 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
return 2,
19 = binaryop(and) 17 , 18,
conditional branch(eq, to iindex=-1) 19,4,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,20 @30 exception:21,
conditional branch(ne, to iindex=-1) 22,4,
25 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,23 @38 exception:24,
conditional branch(ne, to iindex=-1) 25,4,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,26 @46 exception:27,
conditional branch(ne, to iindex=-1) 28,4,
30 = binaryop(and) 17 , 29,
33 = phi  17,17,17,17,30,
37 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @54 exception:36,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 12,37,
39 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @60 exception:38,
2 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 33,39,
43 = new <Application,Landroid/os/VibrationAttributes$Builder>@67,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/os/VibrationAttributes;)V > 43,6 @69 exception:44,
46 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setUsage(I)Landroid/os/VibrationAttributes$Builder; > 43,12 @72 exception:45,
putfield 1.< Application, Landroid/os/VibrationAttributes$Builder, mOriginalAudioUsage, <Primordial,I> > = 3,
putfield 1.< Application, Landroid/os/VibrationAttributes$Builder, mUsage, <Primordial,I> > = 2,
return 1,
48 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @76 exception:47,
2 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
return 2,
50 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setFlags(II)Landroid/os/VibrationAttributes$Builder; > 46,33,48 @80 exception:49,
5 = binaryop(and) 3 , 4,
6 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > 1,
7 = bitnot 5,
8 = binaryop(and) 6 , 7,
9 = binaryop(and) 2 , 5,
10 = binaryop(or) 8 , 9,
putfield 1.< Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > = 10,
return 1,
52 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 50 @84 exception:51,
2 = new <Application,Landroid/os/VibrationAttributes>@0,
3 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mUsage, <Primordial,I> > 1,
4 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mOriginalAudioUsage, <Primordial,I> > 1,
5 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > 1,
invokespecial < Application, Landroid/os/VibrationAttributes, <init>(IIILandroid/os/VibrationAttributes-IA;)V > 2,3,4,5,6 @9 exception:7,
return 2,
return 52,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupAlwaysOnEffectsLocked(Landroid/os/CombinedVibration;)Landroid/util/SparseArray; > 1,5 @69 exception:20,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 3,4 @5 exception:5,
6 = instanceof 2 <Application,Landroid/os/CombinedVibration$Mono>,
conditional branch(eq, to iindex=-1) 6,7,
13 = checkcast <Application,Landroid/os/CombinedVibration$Mono>2 <Application,Landroid/os/CombinedVibration$Mono>,
15 = invokevirtual < Application, Landroid/os/CombinedVibration$Mono, getEffect()Landroid/os/VibrationEffect; > 13 @15 exception:14,
2 = getfield < Application, Landroid/os/CombinedVibration$Mono, mEffect, <Application,Landroid/os/VibrationEffect> > 1,
return 2,
16 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2>@19,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2, <init>(Landroid/os/VibrationEffect;)V > 16,15 @21 exception:17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, transformAllVibratorsLocked(Ljava/util/function/Function;)Landroid/util/SparseArray; > 1,16 @24 exception:18,
3 = new <Application,Landroid/util/SparseArray>@0,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
invokespecial < Application, Landroid/util/SparseArray, <init>(I)V > 3,6 @8 exception:7,
24 = phi  23,8,
9 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 9 @14 exception:10,
conditional branch(ge, to iindex=-1) 24,11,
12 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
14 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 12,24 @22 exception:13,
15 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
17 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,24 @28 exception:16,
18 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>17 <Application,Lcom/android/server/vibrator/VibratorController>,
20 = invokeinterface < Application, Ljava/util/function/Function, apply(Ljava/lang/Object;)Ljava/lang/Object; > 2,18 @34 exception:19,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 3,14,20 @38 exception:21,
23 = binaryop(add) 24 , 22,
goto (from iindex= 21 to iindex = -31),
24 = phi  23,8,
9 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 9 @14 exception:10,
conditional branch(ge, to iindex=-1) 24,11,
return 3,
goto (from iindex= 13 to iindex = 11),
21 = phi  19,12,
24 = new <Application,Landroid/util/SparseArray>@39,
invokespecial < Application, Landroid/util/SparseArray, <init>()V > 24 @41 exception:25,
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
29 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 21,48 @51 exception:28,
30 = checkcast <Application,Landroid/os/VibrationEffect>29 <Application,Landroid/os/VibrationEffect>,
32 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, extractPrebakedSegment(Landroid/os/VibrationEffect;)Landroid/os/vibrator/PrebakedSegment; > 30 @57 exception:31,
2 = instanceof 1 <Application,Landroid/os/VibrationEffect$Composed>,
conditional branch(eq, to iindex=-1) 2,3,
4 = checkcast <Application,Landroid/os/VibrationEffect$Composed>1 <Application,Landroid/os/VibrationEffect$Composed>,
6 = invokevirtual < Application, Landroid/os/VibrationEffect$Composed, getSegments()Ljava/util/List; > 4 @6 exception:5,
8 = invokeinterface < Application, Ljava/util/List, size()I > 6 @10 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Landroid/os/VibrationEffect$Composed, getSegments()Ljava/util/List; > 4 @17 exception:10,
13 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 11,3 @22 exception:12,
14 = checkcast <Application,Landroid/os/vibrator/VibrationEffectSegment>13 <Application,Landroid/os/vibrator/VibrationEffectSegment>,
15 = instanceof 14 <Application,Landroid/os/vibrator/PrebakedSegment>,
conditional branch(eq, to iindex=-1) 15,3,
20 = checkcast <Application,Landroid/os/vibrator/PrebakedSegment>14 <Application,Landroid/os/vibrator/PrebakedSegment>,
return 20,
conditional branch(ne, to iindex=-1) 32,7,
34 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 21,48 @74 exception:33,
35 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
37 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 35,34 @80 exception:36,
38 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>37 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(eq, to iindex=-1) 38,7,
41 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, hasCapability(J)Z > 38,39 @90 exception:40,
3 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorInfo, <Application,Landroid/os/VibratorInfo> > 1,
5 = invokevirtual < Application, Landroid/os/VibratorInfo, hasCapability(J)Z > 3,2 @2 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 41,7,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,34,32 @96 exception:42,
47 = binaryop(add) 48 , 46,
goto (from iindex= 49 to iindex = -56),
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
52 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 24 @102 exception:51,
conditional branch(ne, to iindex=-1) 52,7,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 3 @112 exception:53,
return 24,
conditional branch(ne, to iindex=-1) 21,14,
22 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration>@80,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, <init>(IILjava/lang/String;Landroid/os/VibrationAttributes;Landroid/util/SparseArray;)V > 22,4,2,3,18,21 @87 exception:23,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mAlwaysOnEffects, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,4,22 @92 exception:25,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, updateAlwaysOnLocked(Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration;)V > 1,22 @95 exception:26,
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
10 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 8,41 @14 exception:9,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,10 @18 exception:11,
13 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>12 <Application,Lcom/android/server/vibrator/VibratorController>,
14 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
16 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 14,41 @26 exception:15,
17 = checkcast <Application,Landroid/os/vibrator/PrebakedSegment>16 <Application,Landroid/os/vibrator/PrebakedSegment>,
conditional branch(ne, to iindex=-1) 13,3,
18 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, uid, <Primordial,I> > 2,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, opPkg, <Application,Ljava/lang/String> > 2,
20 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationLocked(IILjava/lang/String;Landroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 1,18,3,19,20 @41 exception:21,
6 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationSettings, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, shouldIgnoreVibration(IILandroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 6,2,3,5 @2 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, checkAppOpModeLocked(ILjava/lang/String;Landroid/os/VibrationAttributes;)I > 1,2,4,5 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(ne, to iindex=-1) 11,12,
14 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, IGNORED_ERROR_APP_OPS, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
return 14,
conditional branch(ne, to iindex=-1) 22,3,
23 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationScaler, <Application,Lcom/android/server/vibrator/VibrationScaler> > 1,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
26 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 24 @51 exception:25,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationScaler, scale(Landroid/os/vibrator/PrebakedSegment;I)Landroid/os/vibrator/PrebakedSegment; > 23,17,26 @55 exception:27,
4 = getfield < Application, Lcom/android/server/vibrator/VibrationScaler, mSettingsController, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
6 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, getCurrentIntensity(I)I > 4,3 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/vibrator/VibrationScaler, mSettingsController, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
10 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, getDefaultIntensity(I)I > 8,3 @10 exception:9,
11 = phi  6,10,
16 = invokestatic < Application, Lcom/android/server/vibrator/VibrationScaler, intensityToEffectStrength(I)I > 11 @14 exception:15,
18 = invokevirtual < Application, Landroid/os/vibrator/PrebakedSegment, applyEffectStrength(I)Landroid/os/vibrator/PrebakedSegment; > 2,16 @18 exception:17,
return 18,
goto (from iindex= 31 to iindex = 2),
29 = phi  28,3,
34 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, alwaysOnId, <Primordial,I> > 2,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, updateAlwaysOn(ILandroid/os/vibrator/PrebakedSegment;)V > 13,34,29 @63 exception:35,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorInfo, <Application,Landroid/os/VibratorInfo> > 1,
7 = invokevirtual < Application, Landroid/os/VibratorInfo, hasCapability(J)Z > 4,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
conditional branch(ne, to iindex=-1) 3,8,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mNativeWrapper, <Application,Lcom/android/server/vibrator/VibratorController$NativeWrapper> > 1,
11 = conversion(J) 2,
13 = invokevirtual < Application, Landroid/os/vibrator/PrebakedSegment, getEffectId()I > 3 @26 exception:12,
14 = conversion(J) 13,
16 = invokevirtual < Application, Landroid/os/vibrator/PrebakedSegment, getEffectStrength()I > 3 @31 exception:15,
17 = conversion(J) 16,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController$NativeWrapper, alwaysOnEnable(JJJ)V > 10,11,14,17 @36 exception:18,
monitorexit 9,
return,
40 = binaryop(add) 41 , 39,
goto (from iindex= 36 to iindex = -66),
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
return,
monitorexit 19,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 8 @99 exception:27,
return 13,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean setAlwaysOnEffect(int p1, String p2, int p3, CombinedVibration p4, VibrationAttributes p5){
	if (p4 != 0) {
		if (p4 != 0) {
			p4.validate();
			boolean v3 = 0;
			if (v3 != 0) {
				if (p5 != 0) {
					int v7 = this.mUsage;
					if (v7 != 0) {
						if (p4 == 0) {
							boolean v8 = p4.isHapticFeedbackCandidate();
							if (v8 == 0) {
								int v9 = this.mFlags;
								if ((v9 & 3) == 0) {
									if (v10 != 0) {
										if (v11 != 0) {
											if (v12 != 0) {
												int v13 = this.mUsage;
												if (v7 != v13) {
													int v14 = this.mFlags;
													if (v9 != v14) {
														VibrationAttributes$Builder v15 = new VibrationAttributes$Builder(p5);
														this.mOriginalAudioUsage = 0;
														this.mUsage = v7;
														VibrationAttributes$Builder v17 = VibrationAttributes$Builder;
														int v18 = this.mFlags;
														this.mFlags = ((this.mFlags & (~(v18 & 3))) | (v9 & (v18 & 3)));
														VibrationAttributes$Builder v19 = VibrationAttributes$Builder;
														VibrationAttributes v21 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
														VibrationAttributes v20 = v21;
														VibrationAttributes v6 = v20;
														Trace.traceBegin(8388608, ""fixupAlwaysOnEffectsLocked"");
														if (p4 instanceof CombinedVibration$Mono == 0) {
															VibrationEffect v25 = this.mEffect;
															VibratorManagerService$$ExternalSyntheticLambda2 v26 = new VibratorManagerService$$ExternalSyntheticLambda2(v25);
															SparseArray v29 = new SparseArray(v30);
															int v30 = this.mVibrators.size();
															int v32 = this.mVibrators.size();
															if (0 >= v32) {
																int v33 = this.mVibrators.keyAt(0);
																Object v34 = this.mVibrators.valueAt(0);
																Object v35 = v26.apply(v34);
																v29.put(v33, v35);
																int v37 = this.mVibrators.size();
																if ((0 + 1) >= v37) {
																	SparseArray v28 = v29;
																	SparseArray v38 = new SparseArray();
																	int v40 = v28.size();
																	if (0 >= v40) {
																		Object v41 = v28.valueAt(0);
																		if (v41 instanceof VibrationEffect$Composed == 0) {
																			List v43 = v41.getSegments();
																			int v44 = v43.size();
																			if (v44 != 1) {
																				List v45 = v41.getSegments();
																				Object v46 = v45.get(0);
																				if (v46 instanceof PrebakedSegment == 0) {
																					PrebakedSegment v42 = v46;
																					if (v42 != 0) {
																						int v47 = v28.keyAt(0);
																						Object v48 = this.mVibrators.get(v47);
																						if (v48 == 0) {
																							boolean v50 = this.mVibratorInfo.hasCapability(64);
																							boolean v49 = v50;
																							if (v49 == 0) {
																								v38.put(v47, v42);
																								int v52 = v28.size();
																								if ((0 + 1) >= v52) {
																									int v53 = v38.size();
																									if (v53 != 0) {
																										Trace.traceEnd(8388608);
																										SparseArray v23 = v38;
																										if (v23 != 0) {
																											VibratorManagerService$AlwaysOnVibration v55 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v6,v23);
																											this.mAlwaysOnEffects.put(p3, v55);
																											int v59 = VibratorManagerService$AlwaysOnVibration.effects.size();
																											if (0 >= v59) {
																												int v60 = VibratorManagerService$AlwaysOnVibration.effects.keyAt(0);
																												Object v61 = this.mVibrators.get(v60);
																												Object v62 = VibratorManagerService$AlwaysOnVibration.effects.valueAt(0);
																												if (v61 != 0) {
																													Vibration$Status v64 = this.mVibrationSettings.shouldIgnoreVibration(VibratorManagerService$AlwaysOnVibration.uid, 0, VibratorManagerService$AlwaysOnVibration.attrs);
																													if (v64 == 0) {
																														int v65 = VibratorManagerService.checkAppOpModeLocked(VibratorManagerService$AlwaysOnVibration.uid, VibratorManagerService$AlwaysOnVibration.opPkg, VibratorManagerService$AlwaysOnVibration.attrs);
																														if (v65 == 0) {
																															if (v65 != 2) {
																																Vibration$Status v63 = Vibration$Status.IGNORED_ERROR_APP_OPS;
																																if (v63 != 0) {
																																	int v66 = this.mUsage;
																																	int v68 = this.mSettingsController.getCurrentIntensity(v66);
																																	if (v68 != 0) {
																																		int v69 = this.mSettingsController.getDefaultIntensity(v66);
																																		int v70 = VibrationScaler.intensityToEffectStrength(v68);
																																		PrebakedSegment v71 = v62.applyEffectStrength(v70);
																																		PrebakedSegment v67 = v71;
																																		boolean v73 = this.mVibratorInfo.hasCapability(64);
																																		if (v73 != 0) {
																																			if (v67 != 0) {
																																				int v74 = v67.getEffectId();
																																				int v75 = v67.getEffectStrength();
																																				this.mNativeWrapper.alwaysOnEnable(VibratorManagerService$AlwaysOnVibration.alwaysOnId, v74, v75);
																																				int v77 = VibratorManagerService$AlwaysOnVibration.effects.size();
																																				if ((0 + 1) >= v77) {
																																					Trace.traceEnd(8388608);
																																					return 1;
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","setAlwaysOnEffect(ILjava/lang/String;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;)Z","2","invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 8,7 @10 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 10,11,7 @19 exception:12,
conditional branch(ne, to iindex=-1) 5,14,
16 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, isEffectValid(Landroid/os/CombinedVibration;)Z > 5 @49 exception:15,
conditional branch(ne, to iindex=-1) 1,2,
invokevirtual < Application, Landroid/os/CombinedVibration, validate()V > 1 @11 exception:4,
5 = getCaughtException ,
8 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,6,5 @19 exception:7,
return 2,
conditional branch(ne, to iindex=-1) 16,14,
18 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupVibrationAttributes(Landroid/os/VibrationAttributes;Landroid/os/CombinedVibration;)Landroid/os/VibrationAttributes; > 1,6,5 @62 exception:17,
conditional branch(ne, to iindex=-1) 2,4,
5 = getstatic < Application, Lcom/android/server/vibrator/VibratorManagerService, DEFAULT_ATTRIBUTES, <Application,Landroid/os/VibrationAttributes> >,
6 = phi  2,5,
8 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @4 exception:7,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 8,4,
conditional branch(eq, to iindex=-1) 3,4,
10 = invokevirtual < Application, Landroid/os/CombinedVibration, isHapticFeedbackCandidate()Z > 3 @12 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
12 = phi  8,8,8,11,
17 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @20 exception:16,
2 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
return 2,
19 = binaryop(and) 17 , 18,
conditional branch(eq, to iindex=-1) 19,4,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,20 @30 exception:21,
conditional branch(ne, to iindex=-1) 22,4,
25 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,23 @38 exception:24,
conditional branch(ne, to iindex=-1) 25,4,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,26 @46 exception:27,
conditional branch(ne, to iindex=-1) 28,4,
30 = binaryop(and) 17 , 29,
33 = phi  17,17,17,17,30,
37 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @54 exception:36,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 12,37,
39 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @60 exception:38,
2 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 33,39,
43 = new <Application,Landroid/os/VibrationAttributes$Builder>@67,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/os/VibrationAttributes;)V > 43,6 @69 exception:44,
46 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setUsage(I)Landroid/os/VibrationAttributes$Builder; > 43,12 @72 exception:45,
putfield 1.< Application, Landroid/os/VibrationAttributes$Builder, mOriginalAudioUsage, <Primordial,I> > = 3,
putfield 1.< Application, Landroid/os/VibrationAttributes$Builder, mUsage, <Primordial,I> > = 2,
return 1,
48 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @76 exception:47,
2 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
return 2,
50 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setFlags(II)Landroid/os/VibrationAttributes$Builder; > 46,33,48 @80 exception:49,
5 = binaryop(and) 3 , 4,
6 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > 1,
7 = bitnot 5,
8 = binaryop(and) 6 , 7,
9 = binaryop(and) 2 , 5,
10 = binaryop(or) 8 , 9,
putfield 1.< Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > = 10,
return 1,
52 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 50 @84 exception:51,
2 = new <Application,Landroid/os/VibrationAttributes>@0,
3 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mUsage, <Primordial,I> > 1,
4 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mOriginalAudioUsage, <Primordial,I> > 1,
5 = getfield < Application, Landroid/os/VibrationAttributes$Builder, mFlags, <Primordial,I> > 1,
invokespecial < Application, Landroid/os/VibrationAttributes, <init>(IIILandroid/os/VibrationAttributes-IA;)V > 2,3,4,5,6 @9 exception:7,
return 2,
return 52,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupAlwaysOnEffectsLocked(Landroid/os/CombinedVibration;)Landroid/util/SparseArray; > 1,5 @69 exception:20,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 3,4 @5 exception:5,
6 = instanceof 2 <Application,Landroid/os/CombinedVibration$Mono>,
conditional branch(eq, to iindex=-1) 6,7,
13 = checkcast <Application,Landroid/os/CombinedVibration$Mono>2 <Application,Landroid/os/CombinedVibration$Mono>,
15 = invokevirtual < Application, Landroid/os/CombinedVibration$Mono, getEffect()Landroid/os/VibrationEffect; > 13 @15 exception:14,
2 = getfield < Application, Landroid/os/CombinedVibration$Mono, mEffect, <Application,Landroid/os/VibrationEffect> > 1,
return 2,
16 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2>@19,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$$ExternalSyntheticLambda2, <init>(Landroid/os/VibrationEffect;)V > 16,15 @21 exception:17,
19 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, transformAllVibratorsLocked(Ljava/util/function/Function;)Landroid/util/SparseArray; > 1,16 @24 exception:18,
3 = new <Application,Landroid/util/SparseArray>@0,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
invokespecial < Application, Landroid/util/SparseArray, <init>(I)V > 3,6 @8 exception:7,
24 = phi  23,8,
9 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 9 @14 exception:10,
conditional branch(ge, to iindex=-1) 24,11,
12 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
14 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 12,24 @22 exception:13,
15 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
17 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 15,24 @28 exception:16,
18 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>17 <Application,Lcom/android/server/vibrator/VibratorController>,
20 = invokeinterface < Application, Ljava/util/function/Function, apply(Ljava/lang/Object;)Ljava/lang/Object; > 2,18 @34 exception:19,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 3,14,20 @38 exception:21,
23 = binaryop(add) 24 , 22,
goto (from iindex= 21 to iindex = -31),
24 = phi  23,8,
9 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 9 @14 exception:10,
conditional branch(ge, to iindex=-1) 24,11,
return 3,
goto (from iindex= 13 to iindex = 11),
21 = phi  19,12,
24 = new <Application,Landroid/util/SparseArray>@39,
invokespecial < Application, Landroid/util/SparseArray, <init>()V > 24 @41 exception:25,
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
29 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 21,48 @51 exception:28,
30 = checkcast <Application,Landroid/os/VibrationEffect>29 <Application,Landroid/os/VibrationEffect>,
32 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, extractPrebakedSegment(Landroid/os/VibrationEffect;)Landroid/os/vibrator/PrebakedSegment; > 30 @57 exception:31,
2 = instanceof 1 <Application,Landroid/os/VibrationEffect$Composed>,
conditional branch(eq, to iindex=-1) 2,3,
4 = checkcast <Application,Landroid/os/VibrationEffect$Composed>1 <Application,Landroid/os/VibrationEffect$Composed>,
6 = invokevirtual < Application, Landroid/os/VibrationEffect$Composed, getSegments()Ljava/util/List; > 4 @6 exception:5,
8 = invokeinterface < Application, Ljava/util/List, size()I > 6 @10 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Landroid/os/VibrationEffect$Composed, getSegments()Ljava/util/List; > 4 @17 exception:10,
13 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 11,3 @22 exception:12,
14 = checkcast <Application,Landroid/os/vibrator/VibrationEffectSegment>13 <Application,Landroid/os/vibrator/VibrationEffectSegment>,
15 = instanceof 14 <Application,Landroid/os/vibrator/PrebakedSegment>,
conditional branch(eq, to iindex=-1) 15,3,
20 = checkcast <Application,Landroid/os/vibrator/PrebakedSegment>14 <Application,Landroid/os/vibrator/PrebakedSegment>,
return 20,
conditional branch(ne, to iindex=-1) 32,7,
34 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 21,48 @74 exception:33,
35 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
37 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 35,34 @80 exception:36,
38 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>37 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(eq, to iindex=-1) 38,7,
41 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, hasCapability(J)Z > 38,39 @90 exception:40,
3 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorInfo, <Application,Landroid/os/VibratorInfo> > 1,
5 = invokevirtual < Application, Landroid/os/VibratorInfo, hasCapability(J)Z > 3,2 @2 exception:4,
return 5,
conditional branch(eq, to iindex=-1) 41,7,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,34,32 @96 exception:42,
47 = binaryop(add) 48 , 46,
goto (from iindex= 49 to iindex = -56),
48 = phi  47,7,
27 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 21 @45 exception:26,
conditional branch(ge, to iindex=-1) 48,27,
52 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 24 @102 exception:51,
conditional branch(ne, to iindex=-1) 52,7,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 3 @108 exception:54,
return 7,
conditional branch(ne, to iindex=-1) 21,14,
22 = new <Application,Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration>@80,
invokespecial < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, <init>(IILjava/lang/String;Landroid/os/VibrationAttributes;Landroid/util/SparseArray;)V > 22,4,2,3,18,21 @87 exception:23,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mAlwaysOnEffects, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 24,4,22 @92 exception:25,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, updateAlwaysOnLocked(Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration;)V > 1,22 @95 exception:26,
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
8 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
10 = invokevirtual < Application, Landroid/util/SparseArray, keyAt(I)I > 8,41 @14 exception:9,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,10 @18 exception:11,
13 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>12 <Application,Lcom/android/server/vibrator/VibratorController>,
14 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
16 = invokevirtual < Application, Landroid/util/SparseArray, valueAt(I)Ljava/lang/Object; > 14,41 @26 exception:15,
17 = checkcast <Application,Landroid/os/vibrator/PrebakedSegment>16 <Application,Landroid/os/vibrator/PrebakedSegment>,
conditional branch(ne, to iindex=-1) 13,3,
18 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, uid, <Primordial,I> > 2,
19 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, opPkg, <Application,Ljava/lang/String> > 2,
20 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationLocked(IILjava/lang/String;Landroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 1,18,3,19,20 @41 exception:21,
6 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationSettings, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, shouldIgnoreVibration(IILandroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 6,2,3,5 @2 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, checkAppOpModeLocked(ILjava/lang/String;Landroid/os/VibrationAttributes;)I > 1,2,4,5 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(ne, to iindex=-1) 11,12,
13 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, IGNORED_APP_OPS, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
return 13,
conditional branch(ne, to iindex=-1) 22,3,
23 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationScaler, <Application,Lcom/android/server/vibrator/VibrationScaler> > 1,
24 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
26 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 24 @51 exception:25,
2 = getfield < Application, Landroid/os/VibrationAttributes, mUsage, <Primordial,I> > 1,
return 2,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationScaler, scale(Landroid/os/vibrator/PrebakedSegment;I)Landroid/os/vibrator/PrebakedSegment; > 23,17,26 @55 exception:27,
4 = getfield < Application, Lcom/android/server/vibrator/VibrationScaler, mSettingsController, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
6 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, getCurrentIntensity(I)I > 4,3 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/vibrator/VibrationScaler, mSettingsController, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
10 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, getDefaultIntensity(I)I > 8,3 @10 exception:9,
11 = phi  6,10,
16 = invokestatic < Application, Lcom/android/server/vibrator/VibrationScaler, intensityToEffectStrength(I)I > 11 @14 exception:15,
18 = invokevirtual < Application, Landroid/os/vibrator/PrebakedSegment, applyEffectStrength(I)Landroid/os/vibrator/PrebakedSegment; > 2,16 @18 exception:17,
return 18,
goto (from iindex= 31 to iindex = 2),
29 = phi  28,3,
34 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, alwaysOnId, <Primordial,I> > 2,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, updateAlwaysOn(ILandroid/os/vibrator/PrebakedSegment;)V > 13,34,29 @63 exception:35,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mVibratorInfo, <Application,Landroid/os/VibratorInfo> > 1,
7 = invokevirtual < Application, Landroid/os/VibratorInfo, hasCapability(J)Z > 4,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
conditional branch(ne, to iindex=-1) 3,8,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mNativeWrapper, <Application,Lcom/android/server/vibrator/VibratorController$NativeWrapper> > 1,
11 = conversion(J) 2,
13 = invokevirtual < Application, Landroid/os/vibrator/PrebakedSegment, getEffectId()I > 3 @26 exception:12,
14 = conversion(J) 13,
16 = invokevirtual < Application, Landroid/os/vibrator/PrebakedSegment, getEffectStrength()I > 3 @31 exception:15,
17 = conversion(J) 16,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorController$NativeWrapper, alwaysOnEnable(JJJ)V > 10,11,14,17 @36 exception:18,
monitorexit 9,
return,
40 = binaryop(add) 41 , 39,
goto (from iindex= 36 to iindex = -66),
41 = phi  40,3,
4 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService$AlwaysOnVibration, effects, <Application,Landroid/util/SparseArray> > 2,
6 = invokevirtual < Application, Landroid/util/SparseArray, size()I > 4 @4 exception:5,
conditional branch(ge, to iindex=-1) 41,6,
return,
monitorexit 19,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 8 @99 exception:27,
return 13,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean setAlwaysOnEffect(int p1, String p2, int p3, CombinedVibration p4, VibrationAttributes p5){
	if (p4 != 0) {
		if (p4 != 0) {
			p4.validate();
			boolean v3 = 0;
			if (v3 != 0) {
				if (p5 != 0) {
					int v7 = this.mUsage;
					if (v7 != 0) {
						if (p4 == 0) {
							boolean v8 = p4.isHapticFeedbackCandidate();
							if (v8 == 0) {
								int v9 = this.mFlags;
								if ((v9 & 3) == 0) {
									if (v10 != 0) {
										if (v11 != 0) {
											if (v12 != 0) {
												int v13 = this.mUsage;
												if (v7 != v13) {
													int v14 = this.mFlags;
													if (v9 != v14) {
														VibrationAttributes$Builder v15 = new VibrationAttributes$Builder(p5);
														this.mOriginalAudioUsage = 0;
														this.mUsage = v7;
														VibrationAttributes$Builder v17 = VibrationAttributes$Builder;
														int v18 = this.mFlags;
														this.mFlags = ((this.mFlags & (~(v18 & 3))) | (v9 & (v18 & 3)));
														VibrationAttributes$Builder v19 = VibrationAttributes$Builder;
														VibrationAttributes v21 = new VibrationAttributes(this.mUsage,this.mOriginalAudioUsage,this.mFlags,0);
														VibrationAttributes v20 = v21;
														VibrationAttributes v6 = v20;
														Trace.traceBegin(8388608, ""fixupAlwaysOnEffectsLocked"");
														if (p4 instanceof CombinedVibration$Mono == 0) {
															VibrationEffect v25 = this.mEffect;
															VibratorManagerService$$ExternalSyntheticLambda2 v26 = new VibratorManagerService$$ExternalSyntheticLambda2(v25);
															SparseArray v29 = new SparseArray(v30);
															int v30 = this.mVibrators.size();
															int v32 = this.mVibrators.size();
															if (0 >= v32) {
																int v33 = this.mVibrators.keyAt(0);
																Object v34 = this.mVibrators.valueAt(0);
																Object v35 = v26.apply(v34);
																v29.put(v33, v35);
																int v37 = this.mVibrators.size();
																if ((0 + 1) >= v37) {
																	SparseArray v28 = v29;
																	SparseArray v38 = new SparseArray();
																	int v40 = v28.size();
																	if (0 >= v40) {
																		Object v41 = v28.valueAt(0);
																		if (v41 instanceof VibrationEffect$Composed == 0) {
																			List v43 = v41.getSegments();
																			int v44 = v43.size();
																			if (v44 != 1) {
																				List v45 = v41.getSegments();
																				Object v46 = v45.get(0);
																				if (v46 instanceof PrebakedSegment == 0) {
																					PrebakedSegment v42 = v46;
																					if (v42 != 0) {
																						int v47 = v28.keyAt(0);
																						Object v48 = this.mVibrators.get(v47);
																						if (v48 == 0) {
																							boolean v50 = this.mVibratorInfo.hasCapability(64);
																							boolean v49 = v50;
																							if (v49 == 0) {
																								v38.put(v47, v42);
																								int v52 = v28.size();
																								if ((0 + 1) >= v52) {
																									int v53 = v38.size();
																									if (v53 != 0) {
																										Trace.traceEnd(8388608);
																										SparseArray v23 = 0;
																										if (v23 != 0) {
																											VibratorManagerService$AlwaysOnVibration v55 = new VibratorManagerService$AlwaysOnVibration(p3,p1,p2,v6,v23);
																											this.mAlwaysOnEffects.put(p3, v55);
																											int v59 = VibratorManagerService$AlwaysOnVibration.effects.size();
																											if (0 >= v59) {
																												int v60 = VibratorManagerService$AlwaysOnVibration.effects.keyAt(0);
																												Object v61 = this.mVibrators.get(v60);
																												Object v62 = VibratorManagerService$AlwaysOnVibration.effects.valueAt(0);
																												if (v61 != 0) {
																													Vibration$Status v64 = this.mVibrationSettings.shouldIgnoreVibration(VibratorManagerService$AlwaysOnVibration.uid, 0, VibratorManagerService$AlwaysOnVibration.attrs);
																													if (v64 == 0) {
																														int v65 = VibratorManagerService.checkAppOpModeLocked(VibratorManagerService$AlwaysOnVibration.uid, VibratorManagerService$AlwaysOnVibration.opPkg, VibratorManagerService$AlwaysOnVibration.attrs);
																														if (v65 == 0) {
																															if (v65 != 2) {
																																Vibration$Status v63 = Vibration$Status.IGNORED_APP_OPS;
																																if (v63 != 0) {
																																	int v66 = this.mUsage;
																																	int v68 = this.mSettingsController.getCurrentIntensity(v66);
																																	if (v68 != 0) {
																																		int v69 = this.mSettingsController.getDefaultIntensity(v66);
																																		int v70 = VibrationScaler.intensityToEffectStrength(v68);
																																		PrebakedSegment v71 = v62.applyEffectStrength(v70);
																																		PrebakedSegment v67 = v71;
																																		boolean v73 = this.mVibratorInfo.hasCapability(64);
																																		if (v73 != 0) {
																																			if (v67 != 0) {
																																				int v74 = v67.getEffectId();
																																				int v75 = v67.getEffectStrength();
																																				this.mNativeWrapper.alwaysOnEnable(VibratorManagerService$AlwaysOnVibration.alwaysOnId, v74, v75);
																																				int v77 = VibratorManagerService$AlwaysOnVibration.effects.size();
																																				if ((0 + 1) >= v77) {
																																					Trace.traceEnd(8388608);
																																					return 1;
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/vibrator/VibratorManagerService","isVibrating(I)Z","0","3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>9 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, isVibrating()Z > 10 @19 exception:12,
conditional branch(eq, to iindex=-1) 13,11,
goto (from iindex= 13 to iindex = 2),
18 = phi  17,11,
return 18,","depth : 0
-----
","public boolean isVibrating(int p1){
	Object v2 = this.mVibrators.get(p1);
	if (v2 == 0) {
		boolean v3 = v2.isVibrating();
		if (v3 == 0) {
			return 1;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","isVibrating(I)Z","1","3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @6 exception:6,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrators, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/vibrator/VibratorController>9 <Application,Lcom/android/server/vibrator/VibratorController>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorController, isVibrating()Z > 10 @19 exception:12,
2 = getfield < Application, Lcom/android/server/vibrator/VibratorController, mIsVibrating, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 13,11,
goto (from iindex= 13 to iindex = 2),
18 = phi  17,11,
return 18,","depth : 0
-----
depth : 1
-----
","public boolean isVibrating(int p1){
	Object v2 = this.mVibrators.get(p1);
	if (v2 == 0) {
		boolean v3 = this.mIsVibrating;
		if (v3 == 0) {
			return 1;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/vibrator/VibratorManagerService","vibrate(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)V","0","10 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, vibrateInternal(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)Lcom/android/server/vibrator/Vibration; > 1,2,3,4,5,6,7,8 @0 exception:9,
return,","depth : 0
-----
","public void vibrate(int p1, int p2, String p3, CombinedVibration p4, VibrationAttributes p5, String p6, IBinder p7){
	Vibration v1 = p0.vibrateInternal(p1, p2, p3, p4, p5, p6, p7);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","vibrate(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)V","1","10 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, vibrateInternal(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)Lcom/android/server/vibrator/Vibration; > 1,2,3,4,5,6,7,8 @0 exception:9,
9 = new <Application,Ljava/lang/StringBuilder>@3,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 9 @5 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,11 @10 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,7 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 9 @18 exception:16,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 18,17 @25 exception:19,
20 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 20,21,22 @34 exception:23,
conditional branch(ne, to iindex=-1) 8,24,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, enforceUpdateAppOpsStatsPermission(I)V > 1,2 @51 exception:25,
27 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, isEffectValid(Landroid/os/CombinedVibration;)Z > 5 @54 exception:26,
conditional branch(ne, to iindex=-1) 27,24,
29 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupVibrationAttributes(Landroid/os/VibrationAttributes;Landroid/os/CombinedVibration;)Landroid/os/VibrationAttributes; > 1,6,5 @66 exception:28,
30 = new <Application,Lcom/android/server/vibrator/Vibration>@70,
31 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibrationId, <Application,Ljava/util/concurrent/atomic/AtomicInteger> > 1,
33 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicInteger, getAndIncrement()I > 31 @74 exception:32,
invokespecial < Application, Lcom/android/server/vibrator/Vibration, <init>(Landroid/os/IBinder;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;IILjava/lang/String;Ljava/lang/String;)V > 30,8,33,5,29,2,3,4,7 @92 exception:34,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fillVibrationFallbacks(Lcom/android/server/vibrator/Vibration;Landroid/os/CombinedVibration;)V > 1,30,5 @95 exception:35,
38 = invokevirtual < Application, Landroid/os/VibrationAttributes, isFlagSet(I)Z > 29,36 @99 exception:37,
conditional branch(eq, to iindex=-1) 38,24,
39 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationSettings, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
40 = getfield < Application, Lcom/android/server/vibrator/VibrationSettings, mSettingObserver, <Application,Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver> > 39,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver, onChange(Z)V > 40,24 @110 exception:41,
44 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 44,
45 = getfield < Application, Lcom/android/server/vibrator/Vibration, uid, <Primordial,I> > 30,
46 = getfield < Application, Lcom/android/server/vibrator/Vibration, displayId, <Primordial,I> > 30,
47 = getfield < Application, Lcom/android/server/vibrator/Vibration, opPkg, <Application,Ljava/lang/String> > 30,
48 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 30,
50 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationLocked(IILjava/lang/String;Landroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 1,45,46,47,48 @124 exception:49,
conditional branch(ne, to iindex=-1) 50,24,
52 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentExternalVibration, <Application,Lcom/android/server/vibrator/VibratorManagerService$ExternalVibrationHolder> > 1,
conditional branch(eq, to iindex=-1) 52,24,
64 = phi  54,50,
65 = phi  57,51,
66 = phi  63,51,
conditional branch(ne, to iindex=-1) 64,24,
81 = phi  64,70,70,
82 = phi  65,65,74,
83 = phi  66,66,80,
conditional branch(ne, to iindex=-1) 81,24,
126 = phi  81,115,
135 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, RUNNING, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
conditional branch(eq, to iindex=-1) 126,135,
136 = new <Application,Lcom/android/server/vibrator/Vibration$EndInfo>@251,
invokespecial < Application, Lcom/android/server/vibrator/Vibration$EndInfo, <init>(Lcom/android/server/vibrator/Vibration$Status;II)V > 136,126,82,83 @253 exception:137,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationLocked(Lcom/android/server/vibrator/Vibration;Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,30,136,138 @257 exception:139,
monitorexit 44,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 18 @261 exception:157,
return 30,
return,","depth : 0
-----
depth : 1
-----
","public void vibrate(int p1, int p2, String p3, CombinedVibration p4, VibrationAttributes p5, String p6, IBinder p7){
	if (p7 != 0) {
		boolean v10 = VibratorManagerService.isEffectValid(p4);
		if (v10 != 0) {
			VibrationAttributes v11 = VibratorManagerService.fixupVibrationAttributes(p5, p4);
			Vibration v12 = new Vibration(p7,v13,p4,v11,p1,p2,p3,p6);
			int v13 = this.mNextVibrationId.getAndIncrement();
			VibratorManagerService.fillVibrationFallbacks(v12, p4);
			boolean v16 = v11.isFlagSet(3);
			if (v16 == 0) {
				VibrationSettings.mSettingObserver.onChange(0);
				Vibration$Status v18 = VibratorManagerService.shouldIgnoreVibrationLocked(Vibration.uid, Vibration.displayId, Vibration.opPkg, Vibration.attrs);
				if (v18 != 0) {
					if (this.mCurrentExternalVibration == 0) {
						if (IGNORED_FOR_EXTERNAL != 0) {
							if (IGNORED_FOR_EXTERNAL != 0) {
								if (IGNORED_FOR_EXTERNAL == Vibration$Status.RUNNING) {
									Vibration$EndInfo v19 = new Vibration$EndInfo(IGNORED_FOR_EXTERNAL,getUid(),getUsage());
									VibratorManagerService.endVibrationLocked(v12, v19, 1);
									Trace.traceEnd(8388608);
									Vibration v1 = v12;
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","vibrate(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)V","2","10 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, vibrateInternal(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)Lcom/android/server/vibrator/Vibration; > 1,2,3,4,5,6,7,8 @0 exception:9,
9 = new <Application,Ljava/lang/StringBuilder>@3,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 9 @5 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,11 @10 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,7 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 9 @18 exception:16,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 18,17 @25 exception:19,
20 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 20,21,22 @34 exception:23,
conditional branch(ne, to iindex=-1) 8,24,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, enforceUpdateAppOpsStatsPermission(I)V > 1,2 @51 exception:25,
27 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, isEffectValid(Landroid/os/CombinedVibration;)Z > 5 @54 exception:26,
conditional branch(ne, to iindex=-1) 1,2,
invokevirtual < Application, Landroid/os/CombinedVibration, validate()V > 1 @11 exception:4,
5 = getCaughtException ,
8 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,6,5 @19 exception:7,
return 2,
conditional branch(ne, to iindex=-1) 27,24,
29 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupVibrationAttributes(Landroid/os/VibrationAttributes;Landroid/os/CombinedVibration;)Landroid/os/VibrationAttributes; > 1,6,5 @66 exception:28,
conditional branch(ne, to iindex=-1) 2,4,
5 = getstatic < Application, Lcom/android/server/vibrator/VibratorManagerService, DEFAULT_ATTRIBUTES, <Application,Landroid/os/VibrationAttributes> >,
6 = phi  2,5,
8 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @4 exception:7,
conditional branch(ne, to iindex=-1) 8,4,
conditional branch(eq, to iindex=-1) 3,4,
10 = invokevirtual < Application, Landroid/os/CombinedVibration, isHapticFeedbackCandidate()Z > 3 @12 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
12 = phi  8,8,8,11,
17 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @20 exception:16,
19 = binaryop(and) 17 , 18,
conditional branch(eq, to iindex=-1) 19,4,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,20 @30 exception:21,
conditional branch(ne, to iindex=-1) 22,4,
25 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,23 @38 exception:24,
conditional branch(ne, to iindex=-1) 25,4,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,26 @46 exception:27,
conditional branch(ne, to iindex=-1) 28,4,
30 = binaryop(and) 17 , 29,
33 = phi  17,17,17,17,30,
37 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @54 exception:36,
conditional branch(ne, to iindex=-1) 12,37,
39 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @60 exception:38,
conditional branch(ne, to iindex=-1) 33,39,
43 = new <Application,Landroid/os/VibrationAttributes$Builder>@67,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/os/VibrationAttributes;)V > 43,6 @69 exception:44,
46 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setUsage(I)Landroid/os/VibrationAttributes$Builder; > 43,12 @72 exception:45,
48 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @76 exception:47,
50 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setFlags(II)Landroid/os/VibrationAttributes$Builder; > 46,33,48 @80 exception:49,
52 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 50 @84 exception:51,
return 52,
30 = new <Application,Lcom/android/server/vibrator/Vibration>@70,
31 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibrationId, <Application,Ljava/util/concurrent/atomic/AtomicInteger> > 1,
33 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicInteger, getAndIncrement()I > 31 @74 exception:32,
invokespecial < Application, Lcom/android/server/vibrator/Vibration, <init>(Landroid/os/IBinder;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;IILjava/lang/String;Ljava/lang/String;)V > 30,8,33,5,29,2,3,4,7 @92 exception:34,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fillVibrationFallbacks(Lcom/android/server/vibrator/Vibration;Landroid/os/CombinedVibration;)V > 1,30,5 @95 exception:35,
4 = instanceof 3 <Application,Landroid/os/CombinedVibration$Mono>,
conditional branch(eq, to iindex=-1) 4,5,
6 = instanceof 3 <Application,Landroid/os/CombinedVibration$Stereo>,
conditional branch(eq, to iindex=-1) 6,5,
7 = instanceof 3 <Application,Landroid/os/CombinedVibration$Sequential>,
conditional branch(eq, to iindex=-1) 7,5,
8 = checkcast <Application,Landroid/os/CombinedVibration$Sequential>3 <Application,Landroid/os/CombinedVibration$Sequential>,
10 = invokevirtual < Application, Landroid/os/CombinedVibration$Sequential, getEffects()Ljava/util/List; > 8 @49 exception:9,
20 = phi  18,5,
12 = invokeinterface < Application, Ljava/util/List, size()I > 10 @53 exception:11,
conditional branch(ge, to iindex=-1) 20,12,
14 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 10,20 @59 exception:13,
15 = checkcast <Application,Landroid/os/CombinedVibration>14 <Application,Landroid/os/CombinedVibration>,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fillVibrationFallbacks(Lcom/android/server/vibrator/Vibration;Landroid/os/CombinedVibration;)V > 1,2,15 @65 exception:16,
18 = binaryop(add) 20 , 17,
goto (from iindex= 35 to iindex = -17),
20 = phi  18,5,
12 = invokeinterface < Application, Ljava/util/List, size()I > 10 @53 exception:11,
conditional branch(ge, to iindex=-1) 20,12,
return,
38 = invokevirtual < Application, Landroid/os/VibrationAttributes, isFlagSet(I)Z > 29,36 @99 exception:37,
3 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
4 = binaryop(and) 3 , 2,
conditional branch(le, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 38,24,
39 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationSettings, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
40 = getfield < Application, Lcom/android/server/vibrator/VibrationSettings, mSettingObserver, <Application,Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver> > 39,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver, onChange(Z)V > 40,24 @110 exception:41,
3 = getfield < Application, Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver, this$0, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
invokestatic < Application, Lcom/android/server/vibrator/VibrationSettings, -$$Nest$mupdateSettings(Lcom/android/server/vibrator/VibrationSettings;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver, this$0, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
invokestatic < Application, Lcom/android/server/vibrator/VibrationSettings, -$$Nest$mnotifyListeners(Lcom/android/server/vibrator/VibrationSettings;)V > 5 @7 exception:6,
return,
44 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 44,
45 = getfield < Application, Lcom/android/server/vibrator/Vibration, uid, <Primordial,I> > 30,
46 = getfield < Application, Lcom/android/server/vibrator/Vibration, displayId, <Primordial,I> > 30,
47 = getfield < Application, Lcom/android/server/vibrator/Vibration, opPkg, <Application,Ljava/lang/String> > 30,
48 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 30,
50 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationLocked(IILjava/lang/String;Landroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 1,45,46,47,48 @124 exception:49,
6 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationSettings, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, shouldIgnoreVibration(IILandroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 6,2,3,5 @2 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, checkAppOpModeLocked(ILjava/lang/String;Landroid/os/VibrationAttributes;)I > 1,2,4,5 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(ne, to iindex=-1) 11,12,
14 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, IGNORED_ERROR_APP_OPS, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
return 14,
conditional branch(ne, to iindex=-1) 50,24,
64 = phi  54,50,
65 = phi  57,51,
66 = phi  63,51,
conditional branch(ne, to iindex=-1) 64,24,
70 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationForOngoingLocked(Lcom/android/server/vibrator/Vibration;)Lcom/android/server/vibrator/Vibration$Status; > 1,30 @159 exception:69,
3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, isRepeating()Z > 2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
9 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 7 @14 exception:8,
11 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, hasEnded()Z > 9 @18 exception:10,
conditional branch(eq, to iindex=-1) 11,4,
12 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 9,
14 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 12 @27 exception:13,
15 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
17 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 15 @33 exception:16,
19 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, getVibrationImportance(I)I > 14 @37 exception:18,
21 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, getVibrationImportance(I)I > 17 @41 exception:20,
conditional branch(le, to iindex=-1) 19,21,
23 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, isRepeating()Z > 9 @50 exception:22,
conditional branch(eq, to iindex=-1) 23,4,
24 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, IGNORED_FOR_ONGOING, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
return 24,
conditional branch(eq, to iindex=-1) 70,24,
81 = phi  64,70,70,
82 = phi  65,65,74,
83 = phi  66,66,80,
conditional branch(ne, to iindex=-1) 81,24,
126 = phi  81,115,
135 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, RUNNING, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
conditional branch(eq, to iindex=-1) 126,135,
136 = new <Application,Lcom/android/server/vibrator/Vibration$EndInfo>@251,
invokespecial < Application, Lcom/android/server/vibrator/Vibration$EndInfo, <init>(Lcom/android/server/vibrator/Vibration$Status;II)V > 136,126,82,83 @253 exception:137,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationLocked(Lcom/android/server/vibrator/Vibration;Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,30,136,138 @257 exception:139,
invokevirtual < Application, Lcom/android/server/vibrator/Vibration, end(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 2,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, uid, <Primordial,I> > 2,
7 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 3,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, logVibrationStatus(ILandroid/os/VibrationAttributes;Lcom/android/server/vibrator/Vibration$Status;)V > 1,6,7,8 @9 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibratorManagerRecords, <Application,Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords, record(Lcom/android/server/vibrator/Vibration;)V > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 4,12,
13 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mFrameworkStatsLogger, <Application,Lcom/android/server/vibrator/VibratorFrameworkStatsLogger> > 1,
15 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @21 exception:14,
17 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, getStatsInfo(J)Lcom/android/server/vibrator/VibrationStats$StatsInfo; > 2,15 @25 exception:16,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorFrameworkStatsLogger, writeVibrationReportedAsync(Lcom/android/server/vibrator/VibrationStats$StatsInfo;)V > 13,17 @29 exception:18,
return,
monitorexit 44,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 18 @261 exception:157,
return 30,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void vibrate(int p1, int p2, String p3, CombinedVibration p4, VibrationAttributes p5, String p6, IBinder p7){
	if (p7 != 0) {
		if (p4 != 0) {
			p4.validate();
			boolean v10 = 0;
			if (v10 != 0) {
				if (p5 != 0) {
					int v14 = p5.getUsage();
					if (v14 != 0) {
						if (p4 == 0) {
							boolean v15 = p4.isHapticFeedbackCandidate();
							if (v15 == 0) {
								int v16 = p5.getFlags();
								if ((v16 & 3) == 0) {
									if (v17 != 0) {
										if (v18 != 0) {
											if (v19 != 0) {
												int v20 = p5.getUsage();
												if (v14 != v20) {
													int v21 = p5.getFlags();
													if (v16 != v21) {
														VibrationAttributes$Builder v22 = new VibrationAttributes$Builder(p5);
														VibrationAttributes$Builder v24 = v22.setUsage(v14);
														int v25 = p5.getFlags();
														VibrationAttributes$Builder v26 = v24.setFlags(v16, v25);
														VibrationAttributes v27 = v26.build();
														VibrationAttributes v13 = v27;
														Vibration v28 = new Vibration(p7,v29,p4,v13,p1,p2,p3,p6);
														int v29 = this.mNextVibrationId.getAndIncrement();
														if (p4 instanceof CombinedVibration$Mono == 0) {
															if (p4 instanceof CombinedVibration$Stereo == 0) {
																if (p4 instanceof CombinedVibration$Sequential == 0) {
																	List v32 = p4.getEffects();
																	int v33 = v32.size();
																	if (0 >= v33) {
																		Object v34 = v32.get(0);
																		VibratorManagerService.fillVibrationFallbacks(v28, v34);
																		int v36 = v32.size();
																		if ((0 + 1) >= v36) {
																			if ((this.mFlags & 3) <= 0) {
																				boolean v37 = 1;
																				if (v37 == 0) {
																					VibrationSettings.-$$Nest$mupdateSettings(this.this$0);
																					VibrationSettings.-$$Nest$mnotifyListeners(this.this$0);
																					Vibration$Status v42 = this.mVibrationSettings.shouldIgnoreVibration(Vibration.uid, Vibration.displayId, Vibration.attrs);
																					if (v42 == 0) {
																						int v43 = VibratorManagerService.checkAppOpModeLocked(Vibration.uid, Vibration.opPkg, Vibration.attrs);
																						if (v43 == 0) {
																							if (v43 != 2) {
																								Vibration$Status v41 = Vibration$Status.IGNORED_ERROR_APP_OPS;
																								if (v41 != 0) {
																									if (IGNORED_FOR_EXTERNAL != 0) {
																										if (this.mCurrentVibration == 0) {
																											boolean v45 = v28.isRepeating();
																											if (v45 == 0) {
																												Vibration v46 = this.mCurrentVibration.getVibration();
																												boolean v47 = v46.hasEnded();
																												if (v47 == 0) {
																													int v48 = Vibration.attrs.getUsage();
																													int v49 = Vibration.attrs.getUsage();
																													int v50 = VibratorManagerService.getVibrationImportance(v48);
																													int v51 = VibratorManagerService.getVibrationImportance(v49);
																													if (v50 <= v51) {
																														boolean v52 = v46.isRepeating();
																														if (v52 == 0) {
																															Vibration$Status v44 = Vibration$Status.IGNORED_FOR_ONGOING;
																															if (v44 == 0) {
																																if (IGNORED_FOR_EXTERNAL != 0) {
																																	if (IGNORED_FOR_EXTERNAL == Vibration$Status.RUNNING) {
																																		Vibration$EndInfo v53 = new Vibration$EndInfo(IGNORED_FOR_EXTERNAL,getUid(),getUsage());
																																		v28.end(v53);
																																		VibratorManagerService.logVibrationStatus(Vibration.uid, Vibration.attrs, Vibration$EndInfo.status);
																																		this.mVibratorManagerRecords.record(v28);
																																		if (1 == 0) {
																																			long v59 = SystemClock.uptimeMillis();
																																			VibrationStats$StatsInfo v60 = v28.getStatsInfo(v59);
																																			this.mFrameworkStatsLogger.writeVibrationReportedAsync(v60);
																																			Trace.traceEnd(8388608);
																																			Vibration v1 = v28;
																																			return;
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/vibrator/VibratorManagerService","vibrate(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)V","2","10 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, vibrateInternal(IILjava/lang/String;Landroid/os/CombinedVibration;Landroid/os/VibrationAttributes;Ljava/lang/String;Landroid/os/IBinder;)Lcom/android/server/vibrator/Vibration; > 1,2,3,4,5,6,7,8 @0 exception:9,
9 = new <Application,Ljava/lang/StringBuilder>@3,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 9 @5 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,11 @10 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,7 @15 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 9 @18 exception:16,
invokestatic < Application, Landroid/os/Trace, traceBegin(JLjava/lang/String;)V > 18,17 @25 exception:19,
20 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 20,21,22 @34 exception:23,
conditional branch(ne, to iindex=-1) 8,24,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, enforceUpdateAppOpsStatsPermission(I)V > 1,2 @51 exception:25,
27 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, isEffectValid(Landroid/os/CombinedVibration;)Z > 5 @54 exception:26,
conditional branch(ne, to iindex=-1) 1,2,
invokevirtual < Application, Landroid/os/CombinedVibration, validate()V > 1 @11 exception:4,
5 = getCaughtException ,
8 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,6,5 @19 exception:7,
return 2,
conditional branch(ne, to iindex=-1) 27,24,
29 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fixupVibrationAttributes(Landroid/os/VibrationAttributes;Landroid/os/CombinedVibration;)Landroid/os/VibrationAttributes; > 1,6,5 @66 exception:28,
conditional branch(ne, to iindex=-1) 2,4,
5 = getstatic < Application, Lcom/android/server/vibrator/VibratorManagerService, DEFAULT_ATTRIBUTES, <Application,Landroid/os/VibrationAttributes> >,
6 = phi  2,5,
8 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @4 exception:7,
conditional branch(ne, to iindex=-1) 8,4,
conditional branch(eq, to iindex=-1) 3,4,
10 = invokevirtual < Application, Landroid/os/CombinedVibration, isHapticFeedbackCandidate()Z > 3 @12 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
12 = phi  8,8,8,11,
17 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @20 exception:16,
19 = binaryop(and) 17 , 18,
conditional branch(eq, to iindex=-1) 19,4,
22 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,20 @30 exception:21,
conditional branch(ne, to iindex=-1) 22,4,
25 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,23 @38 exception:24,
conditional branch(ne, to iindex=-1) 25,4,
28 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, hasPermission(Ljava/lang/String;)Z > 1,26 @46 exception:27,
conditional branch(ne, to iindex=-1) 28,4,
30 = binaryop(and) 17 , 29,
33 = phi  17,17,17,17,30,
37 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 6 @54 exception:36,
conditional branch(ne, to iindex=-1) 12,37,
39 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @60 exception:38,
conditional branch(ne, to iindex=-1) 33,39,
43 = new <Application,Landroid/os/VibrationAttributes$Builder>@67,
invokespecial < Application, Landroid/os/VibrationAttributes$Builder, <init>(Landroid/os/VibrationAttributes;)V > 43,6 @69 exception:44,
46 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setUsage(I)Landroid/os/VibrationAttributes$Builder; > 43,12 @72 exception:45,
48 = invokevirtual < Application, Landroid/os/VibrationAttributes, getFlags()I > 6 @76 exception:47,
50 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, setFlags(II)Landroid/os/VibrationAttributes$Builder; > 46,33,48 @80 exception:49,
52 = invokevirtual < Application, Landroid/os/VibrationAttributes$Builder, build()Landroid/os/VibrationAttributes; > 50 @84 exception:51,
return 52,
30 = new <Application,Lcom/android/server/vibrator/Vibration>@70,
31 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mNextVibrationId, <Application,Ljava/util/concurrent/atomic/AtomicInteger> > 1,
33 = invokevirtual < Application, Ljava/util/concurrent/atomic/AtomicInteger, getAndIncrement()I > 31 @74 exception:32,
invokespecial < Application, Lcom/android/server/vibrator/Vibration, <init>(Landroid/os/IBinder;ILandroid/os/CombinedVibration;Landroid/os/VibrationAttributes;IILjava/lang/String;Ljava/lang/String;)V > 30,8,33,5,29,2,3,4,7 @92 exception:34,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fillVibrationFallbacks(Lcom/android/server/vibrator/Vibration;Landroid/os/CombinedVibration;)V > 1,30,5 @95 exception:35,
4 = instanceof 3 <Application,Landroid/os/CombinedVibration$Mono>,
conditional branch(eq, to iindex=-1) 4,5,
6 = instanceof 3 <Application,Landroid/os/CombinedVibration$Stereo>,
conditional branch(eq, to iindex=-1) 6,5,
7 = instanceof 3 <Application,Landroid/os/CombinedVibration$Sequential>,
conditional branch(eq, to iindex=-1) 7,5,
8 = checkcast <Application,Landroid/os/CombinedVibration$Sequential>3 <Application,Landroid/os/CombinedVibration$Sequential>,
10 = invokevirtual < Application, Landroid/os/CombinedVibration$Sequential, getEffects()Ljava/util/List; > 8 @49 exception:9,
20 = phi  18,5,
12 = invokeinterface < Application, Ljava/util/List, size()I > 10 @53 exception:11,
conditional branch(ge, to iindex=-1) 20,12,
14 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 10,20 @59 exception:13,
15 = checkcast <Application,Landroid/os/CombinedVibration>14 <Application,Landroid/os/CombinedVibration>,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, fillVibrationFallbacks(Lcom/android/server/vibrator/Vibration;Landroid/os/CombinedVibration;)V > 1,2,15 @65 exception:16,
18 = binaryop(add) 20 , 17,
goto (from iindex= 35 to iindex = -17),
20 = phi  18,5,
12 = invokeinterface < Application, Ljava/util/List, size()I > 10 @53 exception:11,
conditional branch(ge, to iindex=-1) 20,12,
return,
38 = invokevirtual < Application, Landroid/os/VibrationAttributes, isFlagSet(I)Z > 29,36 @99 exception:37,
3 = getfield < Application, Landroid/os/VibrationAttributes, mFlags, <Primordial,I> > 1,
4 = binaryop(and) 3 , 2,
conditional branch(le, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 38,24,
39 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationSettings, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
40 = getfield < Application, Lcom/android/server/vibrator/VibrationSettings, mSettingObserver, <Application,Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver> > 39,
invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver, onChange(Z)V > 40,24 @110 exception:41,
3 = getfield < Application, Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver, this$0, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
invokestatic < Application, Lcom/android/server/vibrator/VibrationSettings, -$$Nest$mupdateSettings(Lcom/android/server/vibrator/VibrationSettings;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/vibrator/VibrationSettings$SettingsContentObserver, this$0, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
invokestatic < Application, Lcom/android/server/vibrator/VibrationSettings, -$$Nest$mnotifyListeners(Lcom/android/server/vibrator/VibrationSettings;)V > 5 @7 exception:6,
return,
44 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 44,
45 = getfield < Application, Lcom/android/server/vibrator/Vibration, uid, <Primordial,I> > 30,
46 = getfield < Application, Lcom/android/server/vibrator/Vibration, displayId, <Primordial,I> > 30,
47 = getfield < Application, Lcom/android/server/vibrator/Vibration, opPkg, <Application,Ljava/lang/String> > 30,
48 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 30,
50 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationLocked(IILjava/lang/String;Landroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 1,45,46,47,48 @124 exception:49,
6 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibrationSettings, <Application,Lcom/android/server/vibrator/VibrationSettings> > 1,
8 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationSettings, shouldIgnoreVibration(IILandroid/os/VibrationAttributes;)Lcom/android/server/vibrator/Vibration$Status; > 6,2,3,5 @2 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, checkAppOpModeLocked(ILjava/lang/String;Landroid/os/VibrationAttributes;)I > 1,2,4,5 @9 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(ne, to iindex=-1) 11,12,
13 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, IGNORED_APP_OPS, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
return 13,
conditional branch(ne, to iindex=-1) 50,24,
64 = phi  54,50,
65 = phi  57,51,
66 = phi  63,51,
conditional branch(ne, to iindex=-1) 64,24,
70 = invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, shouldIgnoreVibrationForOngoingLocked(Lcom/android/server/vibrator/Vibration;)Lcom/android/server/vibrator/Vibration$Status; > 1,30 @159 exception:69,
3 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, isRepeating()Z > 2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
7 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mCurrentVibration, <Application,Lcom/android/server/vibrator/VibrationStepConductor> > 1,
9 = invokevirtual < Application, Lcom/android/server/vibrator/VibrationStepConductor, getVibration()Lcom/android/server/vibrator/Vibration; > 7 @14 exception:8,
11 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, hasEnded()Z > 9 @18 exception:10,
conditional branch(eq, to iindex=-1) 11,4,
12 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 9,
14 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 12 @27 exception:13,
15 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
17 = invokevirtual < Application, Landroid/os/VibrationAttributes, getUsage()I > 15 @33 exception:16,
19 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, getVibrationImportance(I)I > 14 @37 exception:18,
21 = invokestatic < Application, Lcom/android/server/vibrator/VibratorManagerService, getVibrationImportance(I)I > 17 @41 exception:20,
conditional branch(le, to iindex=-1) 19,21,
23 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, isRepeating()Z > 9 @50 exception:22,
conditional branch(eq, to iindex=-1) 23,4,
24 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, IGNORED_FOR_ONGOING, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
return 24,
conditional branch(eq, to iindex=-1) 70,24,
81 = phi  64,70,70,
82 = phi  65,65,74,
83 = phi  66,66,80,
conditional branch(ne, to iindex=-1) 81,24,
126 = phi  81,115,
135 = getstatic < Application, Lcom/android/server/vibrator/Vibration$Status, RUNNING, <Application,Lcom/android/server/vibrator/Vibration$Status> >,
conditional branch(eq, to iindex=-1) 126,135,
136 = new <Application,Lcom/android/server/vibrator/Vibration$EndInfo>@251,
invokespecial < Application, Lcom/android/server/vibrator/Vibration$EndInfo, <init>(Lcom/android/server/vibrator/Vibration$Status;II)V > 136,126,82,83 @253 exception:137,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, endVibrationLocked(Lcom/android/server/vibrator/Vibration;Lcom/android/server/vibrator/Vibration$EndInfo;Z)V > 1,30,136,138 @257 exception:139,
invokevirtual < Application, Lcom/android/server/vibrator/Vibration, end(Lcom/android/server/vibrator/Vibration$EndInfo;)V > 2,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/vibrator/Vibration, uid, <Primordial,I> > 2,
7 = getfield < Application, Lcom/android/server/vibrator/Vibration, attrs, <Application,Landroid/os/VibrationAttributes> > 2,
8 = getfield < Application, Lcom/android/server/vibrator/Vibration$EndInfo, status, <Application,Lcom/android/server/vibrator/Vibration$Status> > 3,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService, logVibrationStatus(ILandroid/os/VibrationAttributes;Lcom/android/server/vibrator/Vibration$Status;)V > 1,6,7,8 @9 exception:9,
10 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibratorManagerRecords, <Application,Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords> > 1,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorManagerService$VibratorManagerRecords, record(Lcom/android/server/vibrator/Vibration;)V > 10,2 @14 exception:11,
conditional branch(eq, to iindex=-1) 4,12,
13 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mFrameworkStatsLogger, <Application,Lcom/android/server/vibrator/VibratorFrameworkStatsLogger> > 1,
15 = invokestatic < Application, Landroid/os/SystemClock, uptimeMillis()J > @21 exception:14,
17 = invokevirtual < Application, Lcom/android/server/vibrator/Vibration, getStatsInfo(J)Lcom/android/server/vibrator/VibrationStats$StatsInfo; > 2,15 @25 exception:16,
invokevirtual < Application, Lcom/android/server/vibrator/VibratorFrameworkStatsLogger, writeVibrationReportedAsync(Lcom/android/server/vibrator/VibrationStats$StatsInfo;)V > 13,17 @29 exception:18,
return,
monitorexit 44,
invokestatic < Application, Landroid/os/Trace, traceEnd(J)V > 18 @261 exception:157,
return 30,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void vibrate(int p1, int p2, String p3, CombinedVibration p4, VibrationAttributes p5, String p6, IBinder p7){
	if (p7 != 0) {
		if (p4 != 0) {
			p4.validate();
			boolean v10 = 0;
			if (v10 != 0) {
				if (p5 != 0) {
					int v14 = p5.getUsage();
					if (v14 != 0) {
						if (p4 == 0) {
							boolean v15 = p4.isHapticFeedbackCandidate();
							if (v15 == 0) {
								int v16 = p5.getFlags();
								if ((v16 & 3) == 0) {
									if (v17 != 0) {
										if (v18 != 0) {
											if (v19 != 0) {
												int v20 = p5.getUsage();
												if (v14 != v20) {
													int v21 = p5.getFlags();
													if (v16 != v21) {
														VibrationAttributes$Builder v22 = new VibrationAttributes$Builder(p5);
														VibrationAttributes$Builder v24 = v22.setUsage(v14);
														int v25 = p5.getFlags();
														VibrationAttributes$Builder v26 = v24.setFlags(v16, v25);
														VibrationAttributes v27 = v26.build();
														VibrationAttributes v13 = v27;
														Vibration v28 = new Vibration(p7,v29,p4,v13,p1,p2,p3,p6);
														int v29 = this.mNextVibrationId.getAndIncrement();
														if (p4 instanceof CombinedVibration$Mono == 0) {
															if (p4 instanceof CombinedVibration$Stereo == 0) {
																if (p4 instanceof CombinedVibration$Sequential == 0) {
																	List v32 = p4.getEffects();
																	int v33 = v32.size();
																	if (0 >= v33) {
																		Object v34 = v32.get(0);
																		VibratorManagerService.fillVibrationFallbacks(v28, v34);
																		int v36 = v32.size();
																		if ((0 + 1) >= v36) {
																			if ((this.mFlags & 3) <= 0) {
																				boolean v37 = 1;
																				if (v37 == 0) {
																					VibrationSettings.-$$Nest$mupdateSettings(this.this$0);
																					VibrationSettings.-$$Nest$mnotifyListeners(this.this$0);
																					Vibration$Status v42 = this.mVibrationSettings.shouldIgnoreVibration(Vibration.uid, Vibration.displayId, Vibration.attrs);
																					if (v42 == 0) {
																						int v43 = VibratorManagerService.checkAppOpModeLocked(Vibration.uid, Vibration.opPkg, Vibration.attrs);
																						if (v43 == 0) {
																							if (v43 != 2) {
																								Vibration$Status v41 = Vibration$Status.IGNORED_APP_OPS;
																								if (v41 != 0) {
																									if (IGNORED_FOR_EXTERNAL != 0) {
																										if (this.mCurrentVibration == 0) {
																											boolean v45 = v28.isRepeating();
																											if (v45 == 0) {
																												Vibration v46 = this.mCurrentVibration.getVibration();
																												boolean v47 = v46.hasEnded();
																												if (v47 == 0) {
																													int v48 = Vibration.attrs.getUsage();
																													int v49 = Vibration.attrs.getUsage();
																													int v50 = VibratorManagerService.getVibrationImportance(v48);
																													int v51 = VibratorManagerService.getVibrationImportance(v49);
																													if (v50 <= v51) {
																														boolean v52 = v46.isRepeating();
																														if (v52 == 0) {
																															Vibration$Status v44 = Vibration$Status.IGNORED_FOR_ONGOING;
																															if (v44 == 0) {
																																if (IGNORED_FOR_EXTERNAL != 0) {
																																	if (IGNORED_FOR_EXTERNAL == Vibration$Status.RUNNING) {
																																		Vibration$EndInfo v53 = new Vibration$EndInfo(IGNORED_FOR_EXTERNAL,getUid(),getUsage());
																																		v28.end(v53);
																																		VibratorManagerService.logVibrationStatus(Vibration.uid, Vibration.attrs, Vibration$EndInfo.status);
																																		this.mVibratorManagerRecords.record(v28);
																																		if (1 == 0) {
																																			long v59 = SystemClock.uptimeMillis();
																																			VibrationStats$StatsInfo v60 = v28.getStatsInfo(v59);
																																			this.mFrameworkStatsLogger.writeVibrationReportedAsync(v60);
																																			Trace.traceEnd(8388608);
																																			Vibration v1 = v28;
																																			return;
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/vibrator/VibratorManagerService","getVibratorIds()[I","0","2 = getfield < Application, Lcom/android/server/vibrator/VibratorManagerService, mVibratorIds, <Primordial,[I> > 1,
3 = arraylength 2,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([II)[I > 2,3 @3 exception:4,
return 5,","depth : 0
-----
","public [I getVibratorIds(){
	[I v1 = Arrays.copyOf(this.mVibratorIds, this.mVibratorIds.length);
	return v1;
}
","NONE"

