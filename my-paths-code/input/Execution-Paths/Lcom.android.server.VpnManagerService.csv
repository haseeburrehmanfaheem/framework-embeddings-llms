"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/VpnManagerService","isAlwaysOnVpnPackageSupported(ILjava/lang/String;)Z","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 10,11,
14 = new <Application,Ljava/lang/StringBuilder>@19,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 14 @21 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,2 @29 exception:19,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,21 @34 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @37 exception:24,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 25 @41 exception:26,
monitorexit 6,
return 11,","depth : 0
public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
","public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	VpnManagerService.logw(v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","isAlwaysOnVpnPackageSupported(ILjava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isAlwaysOnPackageSupported(Ljava/lang/String;)Z > 10,3 @47 exception:12,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceSettingsPermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 2,4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @7 exception:5,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @11 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @22 exception:12,
13 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
15 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 13 @27 exception:14,
16 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
18 = invokevirtual < Application, Landroid/content/pm/PackageManager, getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo; > 15,2,4,16 @34 exception:17,
19 = new <Application,Ljava/lang/StringBuilder>@39,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 19 @41 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,21 @46 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,2 @49 exception:24,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,26 @54 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 19 @57 exception:29,
33 = invokestatic < Application, Landroid/util/Log, w(Ljava/lang/String;Ljava/lang/String;)I > 31,30 @63 exception:32,
34 = phi  18,4,
conditional branch(eq, to iindex=-1) 34,4,
38 = getfield < Application, Landroid/content/pm/ApplicationInfo, targetSdkVersion, <Primordial,I> > 34,
conditional branch(ge, to iindex=-1) 38,39,
40 = new <Application,Landroid/content/Intent>@75,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 40,41 @79 exception:42,
44 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 40,2 @82 exception:43,
46 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
48 = invokevirtual < Application, Landroid/content/pm/PackageManager, queryIntentServicesAsUser(Landroid/content/Intent;II)Ljava/util/List; > 15,40,45,46 @89 exception:47,
conditional branch(eq, to iindex=-1) 48,4,
50 = invokeinterface < Application, Ljava/util/List, size()I > 48 @95 exception:49,
conditional branch(ne, to iindex=-1) 50,4,
52 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 48 @102 exception:51,
54 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 52 @106 exception:53,
conditional branch(eq, to iindex=-1) 54,4,
56 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 52 @112 exception:55,
57 = checkcast <Application,Landroid/content/pm/ResolveInfo>56 <Application,Landroid/content/pm/ResolveInfo>,
58 = getfield < Application, Landroid/content/pm/ResolveInfo, serviceInfo, <Application,Landroid/content/pm/ServiceInfo> > 57,
59 = getfield < Application, Landroid/content/pm/ServiceInfo, metaData, <Application,Landroid/os/Bundle> > 58,
conditional branch(eq, to iindex=-1) 59,4,
65 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 59,63,11 @126 exception:64,
conditional branch(ne, to iindex=-1) 65,4,
return 4,
monitorexit 6,
return 13,","depth : 0
public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.isAlwaysOnPackageSupported(p2);
	return v4;
}
-----
depth : 1
public boolean isAlwaysOnPackageSupported(String p1){
	p0.enforceSettingsPermission();
	long v2 = Binder.clearCallingIdentity();
	VpnProfile v3 = p0.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v2);
	PackageManager v5 = this.mContext.getPackageManager();
	ApplicationInfo v6 = v5.getApplicationInfoAsUser(p1, 0, this.mUserId);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Can't find """");
	StringBuilder v9 = v6.append(p1);
	StringBuilder v10 = v6.append("""" when checking always-on support"");
	String v11 = v6.toString();
	int v12 = Log.w(""Vpn"", v11);
	Intent v12 = new Intent(""android.net.VpnService"");
	Intent v14 = v12.setPackage(p1);
	List v15 = v5.queryIntentServicesAsUser(v12, 128, this.mUserId);
	int v16 = v15.size();
	Iterator v17 = v15.iterator();
	boolean v18 = v17.hasNext();
	Object v19 = v17.next();
	boolean v20 = ServiceInfo.metaData.getBoolean(""android.net.VpnService.SUPPORTS_ALWAYS_ON"", 1);
	return 0;
}
-----
","public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	Vpn.enforceSettingsPermission();
	long v6 = Binder.clearCallingIdentity();
	VpnProfile v7 = Vpn.getVpnProfilePrivileged(p2);
	Binder.restoreCallingIdentity(v6);
	PackageManager v9 = this.mContext.getPackageManager();
	ApplicationInfo v10 = v9.getApplicationInfoAsUser(p2, 0, this.mUserId);
	StringBuilder v11 = new StringBuilder();
	StringBuilder v13 = v11.append(""Can't find """");
	StringBuilder v14 = v11.append(p2);
	StringBuilder v15 = v11.append("""" when checking always-on support"");
	String v16 = v11.toString();
	int v17 = Log.w(""Vpn"", v16);
	Intent v18 = new Intent(""android.net.VpnService"");
	Intent v20 = v18.setPackage(p2);
	List v21 = v9.queryIntentServicesAsUser(v18, 128, this.mUserId);
	int v22 = v21.size();
	Iterator v23 = v21.iterator();
	boolean v24 = v23.hasNext();
	Object v25 = v23.next();
	boolean v26 = ServiceInfo.metaData.getBoolean(""android.net.VpnService.SUPPORTS_ALWAYS_ON"", 1);
	boolean v4 = 0;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","isAlwaysOnVpnPackageSupported(ILjava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 10,11,
14 = new <Application,Ljava/lang/StringBuilder>@19,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 14 @21 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 14,2 @29 exception:19,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,21 @34 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @37 exception:24,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 25 @41 exception:26,
2 = getstatic < Application, Lcom/android/server/VpnManagerService, TAG, <Application,Ljava/lang/String> >,
4 = invokestatic < Application, Landroid/util/Log, w(Ljava/lang/String;Ljava/lang/String;)I > 2,1 @2 exception:3,
return,
monitorexit 6,
return 11,","depth : 0
public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
depth : 1
public void logw(String p1){
	int v1 = Log.w(this.TAG, p1);
	return;
}
-----
","public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	int v11 = Log.w(this.TAG, v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","isAlwaysOnVpnPackageSupported(ILjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isAlwaysOnPackageSupported(Ljava/lang/String;)Z > 10,3 @47 exception:12,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceSettingsPermission()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
conditional branch(ne, to iindex=-1) 2,4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @7 exception:5,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mDeps, <Application,Lcom/android/server/connectivity/Vpn$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn$Dependencies, isCallerSystem()Z > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @17 exception:7,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProfileNameForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @21 exception:9,
12 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 8,10 @25 exception:11,
conditional branch(ne, to iindex=-1) 12,6,
15 = invokestatic < Application, Lcom/android/internal/net/VpnProfile, decode(Ljava/lang/String;[B)Lcom/android/internal/net/VpnProfile; > 13,12 @34 exception:14,
return 15,
conditional branch(eq, to iindex=-1) 8,4,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @22 exception:12,
13 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
15 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 13 @27 exception:14,
16 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
18 = invokevirtual < Application, Landroid/content/pm/PackageManager, getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo; > 15,2,4,16 @34 exception:17,
19 = new <Application,Ljava/lang/StringBuilder>@39,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 19 @41 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,21 @46 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,2 @49 exception:24,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,26 @54 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 19 @57 exception:29,
33 = invokestatic < Application, Landroid/util/Log, w(Ljava/lang/String;Ljava/lang/String;)I > 31,30 @63 exception:32,
34 = phi  18,4,
conditional branch(eq, to iindex=-1) 34,4,
38 = getfield < Application, Landroid/content/pm/ApplicationInfo, targetSdkVersion, <Primordial,I> > 34,
conditional branch(ge, to iindex=-1) 38,39,
40 = new <Application,Landroid/content/Intent>@75,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 40,41 @79 exception:42,
44 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 40,2 @82 exception:43,
46 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
48 = invokevirtual < Application, Landroid/content/pm/PackageManager, queryIntentServicesAsUser(Landroid/content/Intent;II)Ljava/util/List; > 15,40,45,46 @89 exception:47,
conditional branch(eq, to iindex=-1) 48,4,
50 = invokeinterface < Application, Ljava/util/List, size()I > 48 @95 exception:49,
conditional branch(ne, to iindex=-1) 50,4,
52 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 48 @102 exception:51,
54 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 52 @106 exception:53,
conditional branch(eq, to iindex=-1) 54,4,
56 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 52 @112 exception:55,
57 = checkcast <Application,Landroid/content/pm/ResolveInfo>56 <Application,Landroid/content/pm/ResolveInfo>,
58 = getfield < Application, Landroid/content/pm/ResolveInfo, serviceInfo, <Application,Landroid/content/pm/ServiceInfo> > 57,
59 = getfield < Application, Landroid/content/pm/ServiceInfo, metaData, <Application,Landroid/os/Bundle> > 58,
conditional branch(eq, to iindex=-1) 59,4,
65 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 59,63,11 @126 exception:64,
conditional branch(ne, to iindex=-1) 65,4,
return 4,
monitorexit 6,
return 13,","depth : 0
public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.isAlwaysOnPackageSupported(p2);
	return v4;
}
-----
depth : 1
public boolean isAlwaysOnPackageSupported(String p1){
	p0.enforceSettingsPermission();
	long v2 = Binder.clearCallingIdentity();
	VpnProfile v3 = p0.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v2);
	PackageManager v5 = this.mContext.getPackageManager();
	ApplicationInfo v6 = v5.getApplicationInfoAsUser(p1, 0, this.mUserId);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Can't find """");
	StringBuilder v9 = v6.append(p1);
	StringBuilder v10 = v6.append("""" when checking always-on support"");
	String v11 = v6.toString();
	int v12 = Log.w(""Vpn"", v11);
	Intent v12 = new Intent(""android.net.VpnService"");
	Intent v14 = v12.setPackage(p1);
	List v15 = v5.queryIntentServicesAsUser(v12, 128, this.mUserId);
	int v16 = v15.size();
	Iterator v17 = v15.iterator();
	boolean v18 = v17.hasNext();
	Object v19 = v17.next();
	boolean v20 = ServiceInfo.metaData.getBoolean(""android.net.VpnService.SUPPORTS_ALWAYS_ON"", 1);
	return 0;
}
-----
depth : 2
public void enforceSettingsPermission(){
	return;
}
-----
depth : 2
public VpnProfile getVpnProfilePrivileged(String p1){
	boolean v1 = this.mDeps.isCallerSystem();
	VpnProfileStore v2 = p0.getVpnProfileStore();
	String v3 = p0.getProfileNameForPackage(p1);
	byte[] v4 = v2.get(v3);
	VpnProfile v5 = VpnProfile.decode("""", v4);
	return v5;
}
-----
","public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	long v7 = Binder.clearCallingIdentity();
	boolean v9 = this.mDeps.isCallerSystem();
	VpnProfileStore v10 = Vpn.getVpnProfileStore();
	String v11 = Vpn.getProfileNameForPackage(p1);
	byte[] v12 = v10.get(v11);
	VpnProfile v13 = VpnProfile.decode("""", v12);
	VpnProfile v8 = v13;
	Binder.restoreCallingIdentity(v7);
	PackageManager v15 = this.mContext.getPackageManager();
	ApplicationInfo v16 = v15.getApplicationInfoAsUser(p2, 0, this.mUserId);
	StringBuilder v17 = new StringBuilder();
	StringBuilder v19 = v17.append(""Can't find """");
	StringBuilder v20 = v17.append(p2);
	StringBuilder v21 = v17.append("""" when checking always-on support"");
	String v22 = v17.toString();
	int v23 = Log.w(""Vpn"", v22);
	Intent v24 = new Intent(""android.net.VpnService"");
	Intent v26 = v24.setPackage(p2);
	List v27 = v15.queryIntentServicesAsUser(v24, 128, this.mUserId);
	int v28 = v27.size();
	Iterator v29 = v27.iterator();
	boolean v30 = v29.hasNext();
	Object v31 = v29.next();
	boolean v32 = ServiceInfo.metaData.getBoolean(""android.net.VpnService.SUPPORTS_ALWAYS_ON"", 1);
	boolean v4 = 0;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","isAlwaysOnVpnPackageSupported(ILjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isAlwaysOnPackageSupported(Ljava/lang/String;)Z > 10,3 @47 exception:12,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceSettingsPermission()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
conditional branch(ne, to iindex=-1) 2,4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @7 exception:5,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mDeps, <Application,Lcom/android/server/connectivity/Vpn$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn$Dependencies, isCallerSystem()Z > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @17 exception:7,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProfileNameForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @21 exception:9,
12 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 8,10 @25 exception:11,
conditional branch(ne, to iindex=-1) 12,6,
return 6,
conditional branch(eq, to iindex=-1) 8,4,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @22 exception:12,
13 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
15 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 13 @27 exception:14,
16 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
18 = invokevirtual < Application, Landroid/content/pm/PackageManager, getApplicationInfoAsUser(Ljava/lang/String;II)Landroid/content/pm/ApplicationInfo; > 15,2,4,16 @34 exception:17,
19 = new <Application,Ljava/lang/StringBuilder>@39,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 19 @41 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,21 @46 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,2 @49 exception:24,
28 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 19,26 @54 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 19 @57 exception:29,
33 = invokestatic < Application, Landroid/util/Log, w(Ljava/lang/String;Ljava/lang/String;)I > 31,30 @63 exception:32,
34 = phi  18,4,
conditional branch(eq, to iindex=-1) 34,4,
38 = getfield < Application, Landroid/content/pm/ApplicationInfo, targetSdkVersion, <Primordial,I> > 34,
conditional branch(ge, to iindex=-1) 38,39,
40 = new <Application,Landroid/content/Intent>@75,
invokespecial < Application, Landroid/content/Intent, <init>(Ljava/lang/String;)V > 40,41 @79 exception:42,
44 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 40,2 @82 exception:43,
46 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
48 = invokevirtual < Application, Landroid/content/pm/PackageManager, queryIntentServicesAsUser(Landroid/content/Intent;II)Ljava/util/List; > 15,40,45,46 @89 exception:47,
conditional branch(eq, to iindex=-1) 48,4,
50 = invokeinterface < Application, Ljava/util/List, size()I > 48 @95 exception:49,
conditional branch(ne, to iindex=-1) 50,4,
52 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 48 @102 exception:51,
54 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 52 @106 exception:53,
conditional branch(eq, to iindex=-1) 54,4,
56 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 52 @112 exception:55,
57 = checkcast <Application,Landroid/content/pm/ResolveInfo>56 <Application,Landroid/content/pm/ResolveInfo>,
58 = getfield < Application, Landroid/content/pm/ResolveInfo, serviceInfo, <Application,Landroid/content/pm/ServiceInfo> > 57,
59 = getfield < Application, Landroid/content/pm/ServiceInfo, metaData, <Application,Landroid/os/Bundle> > 58,
conditional branch(eq, to iindex=-1) 59,4,
65 = invokevirtual < Application, Landroid/os/Bundle, getBoolean(Ljava/lang/String;Z)Z > 59,63,11 @126 exception:64,
conditional branch(ne, to iindex=-1) 65,4,
return 4,
monitorexit 6,
return 13,","depth : 0
public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.isAlwaysOnPackageSupported(p2);
	return v4;
}
-----
depth : 1
public boolean isAlwaysOnPackageSupported(String p1){
	p0.enforceSettingsPermission();
	long v2 = Binder.clearCallingIdentity();
	VpnProfile v3 = p0.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v2);
	PackageManager v5 = this.mContext.getPackageManager();
	ApplicationInfo v6 = v5.getApplicationInfoAsUser(p1, 0, this.mUserId);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Can't find """");
	StringBuilder v9 = v6.append(p1);
	StringBuilder v10 = v6.append("""" when checking always-on support"");
	String v11 = v6.toString();
	int v12 = Log.w(""Vpn"", v11);
	Intent v12 = new Intent(""android.net.VpnService"");
	Intent v14 = v12.setPackage(p1);
	List v15 = v5.queryIntentServicesAsUser(v12, 128, this.mUserId);
	int v16 = v15.size();
	Iterator v17 = v15.iterator();
	boolean v18 = v17.hasNext();
	Object v19 = v17.next();
	boolean v20 = ServiceInfo.metaData.getBoolean(""android.net.VpnService.SUPPORTS_ALWAYS_ON"", 1);
	return 0;
}
-----
depth : 2
public void enforceSettingsPermission(){
	return;
}
-----
depth : 2
public VpnProfile getVpnProfilePrivileged(String p1){
	boolean v1 = this.mDeps.isCallerSystem();
	VpnProfileStore v2 = p0.getVpnProfileStore();
	String v3 = p0.getProfileNameForPackage(p1);
	byte[] v4 = v2.get(v3);
	return 0;
}
-----
","public boolean isAlwaysOnVpnPackageSupported(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	long v7 = Binder.clearCallingIdentity();
	boolean v9 = this.mDeps.isCallerSystem();
	VpnProfileStore v10 = Vpn.getVpnProfileStore();
	String v11 = Vpn.getProfileNameForPackage(p1);
	byte[] v12 = v10.get(v11);
	VpnProfile v8 = 0;
	Binder.restoreCallingIdentity(v7);
	PackageManager v14 = this.mContext.getPackageManager();
	ApplicationInfo v15 = v14.getApplicationInfoAsUser(p2, 0, this.mUserId);
	StringBuilder v16 = new StringBuilder();
	StringBuilder v18 = v16.append(""Can't find """");
	StringBuilder v19 = v16.append(p2);
	StringBuilder v20 = v16.append("""" when checking always-on support"");
	String v21 = v16.toString();
	int v22 = Log.w(""Vpn"", v21);
	Intent v23 = new Intent(""android.net.VpnService"");
	Intent v25 = v23.setPackage(p2);
	List v26 = v14.queryIntentServicesAsUser(v23, 128, this.mUserId);
	int v27 = v26.size();
	Iterator v28 = v26.iterator();
	boolean v29 = v28.hasNext();
	Object v30 = v28.next();
	boolean v31 = ServiceInfo.metaData.getBoolean(""android.net.VpnService.SUPPORTS_ALWAYS_ON"", 1);
	boolean v4 = 0;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","deleteVpnProfile(Ljava/lang/String;)V","0","3 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 3 @2 exception:4,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @15 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, deleteVpnProfile(Ljava/lang/String;)V > 12,2 @21 exception:13,
monitorexit 8,
return,","depth : 0
public void deleteVpnProfile(String p1){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v3 = this.mVpns.get(v2);
	v3.deleteVpnProfile(p1);
	return;
}
-----
","public void deleteVpnProfile(String p1){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v3 = this.mVpns.get(v2);
	v3.deleteVpnProfile(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","deleteVpnProfile(Ljava/lang/String;)V","1","3 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @15 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, deleteVpnProfile(Ljava/lang/String;)V > 12,2 @21 exception:13,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @6 exception:6,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @9 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @12 exception:8,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentIkev2VpnLocked(Ljava/lang/String;)Z > 1,2 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 13,12,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 1,12,12,12 @28 exception:16,
goto (from iindex= 15 to iindex = 6),
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @37 exception:21,
24 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProfileNameForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @41 exception:23,
26 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, remove(Ljava/lang/String;)Z > 22,24 @45 exception:25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @48 exception:33,
monitorexit 1,
return,
monitorexit 8,
return,","depth : 0
public void deleteVpnProfile(String p1){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v3 = this.mVpns.get(v2);
	v3.deleteVpnProfile(p1);
	return;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public void deleteVpnProfile(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.verifyCallingUidAndPackage(p1);
	p0.enforceNotRestrictedUser();
	long v4 = Binder.clearCallingIdentity();
	boolean v5 = p0.isCurrentIkev2VpnLocked(p1);
	boolean v6 = p0.setAlwaysOnPackage(0, 0, 0);
	VpnProfileStore v7 = p0.getVpnProfileStore();
	String v8 = p0.getProfileNameForPackage(p1);
	boolean v9 = v7.remove(v8);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
","public void deleteVpnProfile(String p1){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	Object v6 = Objects.requireNonNull(p1, ""No package name provided"");
	Vpn.verifyCallingUidAndPackage(p1);
	Vpn.enforceNotRestrictedUser();
	long v9 = Binder.clearCallingIdentity();
	boolean v10 = Vpn.isCurrentIkev2VpnLocked(p1);
	boolean v11 = Vpn.setAlwaysOnPackage(0, 0, 0);
	VpnProfileStore v12 = Vpn.getVpnProfileStore();
	String v13 = Vpn.getProfileNameForPackage(p1);
	boolean v14 = v12.remove(v13);
	Binder.restoreCallingIdentity(v9);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","deleteVpnProfile(Ljava/lang/String;)V","2","3 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @15 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, deleteVpnProfile(Ljava/lang/String;)V > 12,2 @21 exception:13,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @6 exception:6,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,4,
return,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @9 exception:7,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @12 exception:8,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentIkev2VpnLocked(Ljava/lang/String;)Z > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 13,12,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 1,12,12,12 @28 exception:16,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
31 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeDisconnectedVpnProfileState()Landroid/net/VpnProfileState; > 1 @75 exception:30,
goto (from iindex= 48 to iindex = 5),
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
monitorexit 1,
return 10,
goto (from iindex= 15 to iindex = 6),
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @37 exception:21,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
return 2,
24 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProfileNameForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @41 exception:23,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,8 @12 exception:9,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,11 @17 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,2 @20 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @23 exception:16,
return 17,
26 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, remove(Ljava/lang/String;)Z > 22,24 @45 exception:25,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, remove(Ljava/lang/String;)Z > 2 @0 exception:3,
return 4,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @48 exception:33,
monitorexit 1,
return,
monitorexit 8,
return,","depth : 0
public void deleteVpnProfile(String p1){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v3 = this.mVpns.get(v2);
	v3.deleteVpnProfile(p1);
	return;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public void deleteVpnProfile(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.verifyCallingUidAndPackage(p1);
	p0.enforceNotRestrictedUser();
	long v4 = Binder.clearCallingIdentity();
	boolean v5 = p0.isCurrentIkev2VpnLocked(p1);
	boolean v6 = p0.setAlwaysOnPackage(0, 0, 0);
	VpnProfileStore v7 = p0.getVpnProfileStore();
	String v8 = p0.getProfileNameForPackage(p1);
	boolean v9 = v7.remove(v8);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 2
public void verifyCallingUidAndPackage(String p1){
	return;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isCurrentIkev2VpnLocked(String p1){
	boolean v1 = p0.isCurrentPreparedPackage(p1);
	boolean v2 = p0.isIkev2VpnRunner();
	return phiInstruction;
}
-----
depth : 2
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeDisconnectedVpnProfileState();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 2
public VpnProfileStore getVpnProfileStore(){
	return this.mVpnProfileStore;
}
-----
depth : 2
public String getProfileNameForPackage(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""PLATFORM_VPN_"");
	StringBuilder v3 = v0.append(this.mUserId);
	StringBuilder v4 = v0.append(""_"");
	StringBuilder v5 = v0.append(p1);
	String v6 = v0.toString();
	return v6;
}
-----
depth : 2
public boolean remove(String p1){
	boolean v1 = LegacyVpnProfileStore.remove(p1);
	return v1;
}
-----
","public void deleteVpnProfile(String p1){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	Object v6 = Objects.requireNonNull(p1, ""No package name provided"");
	long v11 = Binder.clearCallingIdentity();
	UserInfo v12 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v13 = v12.isRestricted();
	Binder.restoreCallingIdentity(v11);
	long v15 = Binder.clearCallingIdentity();
	boolean v17 = Vpn.isCurrentPreparedPackage(p1);
	boolean v18 = Vpn.isIkev2VpnRunner();
	boolean v16 = phiInstruction;
	Vpn.enforceControlPermissionOrInternalCaller();
	boolean v21 = Objects.equals(0, this.mPackage);
	boolean v22 = Vpn.isVpnApp(this.mPackage);
	boolean v23 = Vpn.isVpnApp(0);
	boolean v24 = Vpn.setAlwaysOnPackageInternal(0, 0, 0);
	Vpn.saveAlwaysOnPackage();
	boolean v26 = SdkLevel.isAtLeastT();
	VpnProfileState v27 = Vpn.makeDisconnectedVpnProfileState();
	boolean v28 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v29 = Vpn.getSessionKeyLocked();
	VpnProfileState v30 = Vpn.makeVpnProfileStateLocked();
	boolean v31 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, 0, v29, v30, 0, 0, 0);
	boolean v19 = 1;
	VpnProfileStore v32 = this.mVpnProfileStore;
	StringBuilder v34 = new StringBuilder();
	StringBuilder v36 = v34.append(""PLATFORM_VPN_"");
	StringBuilder v37 = v34.append(this.mUserId);
	StringBuilder v38 = v34.append(""_"");
	StringBuilder v39 = v34.append(p1);
	String v40 = v34.toString();
	String v33 = v40;
	boolean v42 = LegacyVpnProfileStore.remove(v33);
	boolean v41 = v42;
	Binder.restoreCallingIdentity(v15);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","deleteVpnProfile(Ljava/lang/String;)V","2","3 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @15 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, deleteVpnProfile(Ljava/lang/String;)V > 12,2 @21 exception:13,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @6 exception:6,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,4,
return,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @9 exception:7,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
9 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @12 exception:8,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentIkev2VpnLocked(Ljava/lang/String;)Z > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 13,12,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 1,12,12,12 @28 exception:16,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
31 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeDisconnectedVpnProfileState()Landroid/net/VpnProfileState; > 1 @75 exception:30,
goto (from iindex= 48 to iindex = 5),
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
monitorexit 1,
return 10,
goto (from iindex= 15 to iindex = 6),
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @37 exception:21,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
return 2,
24 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProfileNameForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @41 exception:23,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,8 @12 exception:9,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,11 @17 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,2 @20 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @23 exception:16,
return 17,
26 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, remove(Ljava/lang/String;)Z > 22,24 @45 exception:25,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, remove(Ljava/lang/String;)Z > 2 @0 exception:3,
return 4,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 9 @48 exception:33,
monitorexit 1,
return,
monitorexit 8,
return,","depth : 0
public void deleteVpnProfile(String p1){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	Object v3 = this.mVpns.get(v2);
	v3.deleteVpnProfile(p1);
	return;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public void deleteVpnProfile(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.verifyCallingUidAndPackage(p1);
	p0.enforceNotRestrictedUser();
	long v4 = Binder.clearCallingIdentity();
	boolean v5 = p0.isCurrentIkev2VpnLocked(p1);
	boolean v6 = p0.setAlwaysOnPackage(0, 0, 0);
	VpnProfileStore v7 = p0.getVpnProfileStore();
	String v8 = p0.getProfileNameForPackage(p1);
	boolean v9 = v7.remove(v8);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 2
public void verifyCallingUidAndPackage(String p1){
	return;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isCurrentIkev2VpnLocked(String p1){
	boolean v1 = p0.isCurrentPreparedPackage(p1);
	boolean v2 = p0.isIkev2VpnRunner();
	return phiInstruction;
}
-----
depth : 2
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeDisconnectedVpnProfileState();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 2
public VpnProfileStore getVpnProfileStore(){
	return this.mVpnProfileStore;
}
-----
depth : 2
public String getProfileNameForPackage(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""PLATFORM_VPN_"");
	StringBuilder v3 = v0.append(this.mUserId);
	StringBuilder v4 = v0.append(""_"");
	StringBuilder v5 = v0.append(p1);
	String v6 = v0.toString();
	return v6;
}
-----
depth : 2
public boolean remove(String p1){
	boolean v1 = LegacyVpnProfileStore.remove(p1);
	return v1;
}
-----
","public void deleteVpnProfile(String p1){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	Object v6 = Objects.requireNonNull(p1, ""No package name provided"");
	long v11 = Binder.clearCallingIdentity();
	UserInfo v12 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v13 = v12.isRestricted();
	Binder.restoreCallingIdentity(v11);
	long v15 = Binder.clearCallingIdentity();
	boolean v17 = Vpn.isCurrentPreparedPackage(p1);
	boolean v18 = Vpn.isIkev2VpnRunner();
	boolean v16 = phiInstruction;
	Vpn.enforceControlPermissionOrInternalCaller();
	boolean v21 = Objects.equals(0, this.mPackage);
	boolean v22 = Vpn.isVpnApp(this.mPackage);
	boolean v23 = Vpn.isVpnApp(0);
	boolean v24 = Vpn.setAlwaysOnPackageInternal(0, 0, 0);
	Vpn.saveAlwaysOnPackage();
	boolean v26 = SdkLevel.isAtLeastT();
	VpnProfileState v27 = Vpn.makeDisconnectedVpnProfileState();
	boolean v28 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v29 = Vpn.getSessionKeyLocked();
	VpnProfileState v30 = Vpn.makeVpnProfileStateLocked();
	boolean v31 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, 0, v29, v30, 0, 0, 0);
	boolean v19 = 1;
	VpnProfileStore v32 = this.mVpnProfileStore;
	StringBuilder v34 = new StringBuilder();
	StringBuilder v36 = v34.append(""PLATFORM_VPN_"");
	StringBuilder v37 = v34.append(this.mUserId);
	StringBuilder v38 = v34.append(""_"");
	StringBuilder v39 = v34.append(p1);
	String v40 = v34.toString();
	String v33 = v40;
	boolean v42 = LegacyVpnProfileStore.remove(v33);
	boolean v41 = v42;
	Binder.restoreCallingIdentity(v15);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnApp()Z","0","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOn()Z > 4 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 9 to iindex = 2),
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getAlwaysOn();
	return phiInstruction;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getAlwaysOn();
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnApp()Z","1","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOn()Z > 4 @9 exception:6,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
monitorexit 1,
return 2,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 9 to iindex = 2),
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getAlwaysOn();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 1
public boolean getAlwaysOn(){
	return this.mAlwaysOn;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnApp(){
	int v2 = this.mDeps.getCallingUid();
	Vpn v3 = VpnManagerService.getVpnIfOwner(v2);
	Vpn v1 = v3;
	boolean v4 = this.mAlwaysOn;
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnApp()Z","1","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOn()Z > 4 @9 exception:6,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
monitorexit 1,
return 2,
conditional branch(eq, to iindex=-1) 7,5,
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getAlwaysOn();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 1
public boolean getAlwaysOn(){
	return this.mAlwaysOn;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnApp(){
	int v2 = this.mDeps.getCallingUid();
	Vpn v3 = VpnManagerService.getVpnIfOwner(v2);
	Vpn v1 = v3;
	boolean v4 = this.mAlwaysOn;
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnApp()Z","2","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
4 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,4 @6 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getUnderlyingNetworkInfo()Landroid/net/UnderlyingNetworkInfo; > 8 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
13 = invokevirtual < Application, Landroid/net/UnderlyingNetworkInfo, getOwnerUid()I > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,2,
18 = phi  8,9,
return 18,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOn()Z > 4 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 9 to iindex = 2),
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getAlwaysOn();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 2
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 2
public Vpn getVpnIfOwner(int p1){
	int v1 = UserHandle.getUserId(p1);
	Object v2 = this.mVpns.get(v1);
	UnderlyingNetworkInfo v3 = v2.getUnderlyingNetworkInfo();
	int v4 = v3.getOwnerUid();
	return phiInstruction;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnApp(){
	int v3 = Binder.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	Object v6 = this.mVpns.get(v5);
	UnderlyingNetworkInfo v7 = v6.getUnderlyingNetworkInfo();
	int v8 = v7.getOwnerUid();
	Vpn v4 = phiInstruction;
	Vpn v1 = v4;
	boolean v9 = v1.getAlwaysOn();
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnApp()Z","2","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
4 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,4 @6 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getUnderlyingNetworkInfo()Landroid/net/UnderlyingNetworkInfo; > 8 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
13 = invokevirtual < Application, Landroid/net/UnderlyingNetworkInfo, getOwnerUid()I > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,2,
18 = phi  8,9,
return 18,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOn()Z > 4 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getAlwaysOn();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 2
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 2
public Vpn getVpnIfOwner(int p1){
	int v1 = UserHandle.getUserId(p1);
	Object v2 = this.mVpns.get(v1);
	UnderlyingNetworkInfo v3 = v2.getUnderlyingNetworkInfo();
	int v4 = v3.getOwnerUid();
	return phiInstruction;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnApp(){
	int v3 = Binder.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	Object v6 = this.mVpns.get(v5);
	UnderlyingNetworkInfo v7 = v6.getUnderlyingNetworkInfo();
	int v8 = v7.getOwnerUid();
	Vpn v4 = phiInstruction;
	Vpn v1 = v4;
	boolean v9 = v1.getAlwaysOn();
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnApp()Z","2","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
4 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,4 @6 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getUnderlyingNetworkInfo()Landroid/net/UnderlyingNetworkInfo; > 8 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
18 = phi  8,9,
return 18,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOn()Z > 4 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 9 to iindex = 2),
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getAlwaysOn();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 2
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 2
public Vpn getVpnIfOwner(int p1){
	int v1 = UserHandle.getUserId(p1);
	Object v2 = this.mVpns.get(v1);
	UnderlyingNetworkInfo v3 = v2.getUnderlyingNetworkInfo();
	return phiInstruction;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnApp(){
	int v3 = Binder.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	Object v6 = this.mVpns.get(v5);
	UnderlyingNetworkInfo v7 = v6.getUnderlyingNetworkInfo();
	Vpn v4 = phiInstruction;
	Vpn v1 = v4;
	boolean v8 = v1.getAlwaysOn();
	return phiInstruction;
}
","NONE"

"Lcom/android/server/VpnManagerService","getAppExclusionList(ILjava/lang/String;)Ljava/util/List;","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
12 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 12 @27 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,14 @32 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 12,2 @35 exception:17,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,19 @40 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 12 @43 exception:22,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 23 @47 exception:24,
monitorexit 6,
return 11,","depth : 0
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
","public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	VpnManagerService.logw(v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getAppExclusionList(ILjava/lang/String;)Ljava/util/List;","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
26 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppExclusionList(Ljava/lang/String;)Ljava/util/List; > 10,3 @19 exception:25,
monitorenter 1,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @1 exception:3,
6 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnAppExcludedForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @9 exception:7,
10 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 6,8 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
12 = arraylength 10,
conditional branch(ne, to iindex=-1) 12,11,
goto (from iindex= 12 to iindex = 16),
20 = new <Application,Ljava/util/ArrayList>@38,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 20 @40 exception:21,
26 = getCaughtException ,
30 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 27,28,26 @56 exception:29,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @59 exception:31,
32 = new <Application,Ljava/util/ArrayList>@62,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 32 @64 exception:33,
monitorexit 1,
return 32,
monitorexit 6,
return 26,","depth : 0
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	List v4 = v3.getAppExclusionList(p2);
	return v4;
}
-----
depth : 1
public List getAppExclusionList(String p1){
	long v1 = Binder.clearCallingIdentity();
	VpnProfileStore v2 = p0.getVpnProfileStore();
	String v3 = p0.getVpnAppExcludedForPackage(p1);
	byte[] v4 = v2.get(v3);
	ArrayList v4 = new ArrayList();
	int v6 = Log.e(""Vpn"", ""problem reading from stream"", caughtException);
	Binder.restoreCallingIdentity(v1);
	ArrayList v7 = new ArrayList();
	return v7;
}
-----
","public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	long v5 = Binder.clearCallingIdentity();
	VpnProfileStore v6 = Vpn.getVpnProfileStore();
	String v7 = Vpn.getVpnAppExcludedForPackage(p2);
	byte[] v8 = v6.get(v7);
	ArrayList v9 = new ArrayList();
	int v11 = Log.e(""Vpn"", ""problem reading from stream"", caughtException);
	Binder.restoreCallingIdentity(v5);
	ArrayList v13 = new ArrayList();
	List v4 = v13;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getAppExclusionList(ILjava/lang/String;)Ljava/util/List;","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
12 = new <Application,Ljava/lang/StringBuilder>@25,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 12 @27 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,14 @32 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 12,2 @35 exception:17,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,19 @40 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 12 @43 exception:22,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 23 @47 exception:24,
2 = getstatic < Application, Lcom/android/server/VpnManagerService, TAG, <Application,Ljava/lang/String> >,
4 = invokestatic < Application, Landroid/util/Log, w(Ljava/lang/String;Ljava/lang/String;)I > 2,1 @2 exception:3,
return,
monitorexit 6,
return 11,","depth : 0
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
depth : 1
public void logw(String p1){
	int v1 = Log.w(this.TAG, p1);
	return;
}
-----
","public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	int v11 = Log.w(this.TAG, v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getAppExclusionList(ILjava/lang/String;)Ljava/util/List;","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
26 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppExclusionList(Ljava/lang/String;)Ljava/util/List; > 10,3 @19 exception:25,
monitorenter 1,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @1 exception:3,
6 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @5 exception:5,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
return 2,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnAppExcludedForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @9 exception:7,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,8 @12 exception:9,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,11 @17 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,2 @20 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @23 exception:16,
return 17,
10 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 6,8 @13 exception:9,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,11,
12 = arraylength 10,
conditional branch(ne, to iindex=-1) 12,11,
goto (from iindex= 12 to iindex = 16),
20 = new <Application,Ljava/util/ArrayList>@38,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 20 @40 exception:21,
26 = getCaughtException ,
30 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 27,28,26 @56 exception:29,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @59 exception:31,
32 = new <Application,Ljava/util/ArrayList>@62,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 32 @64 exception:33,
monitorexit 1,
return 32,
monitorexit 6,
return 26,","depth : 0
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	List v4 = v3.getAppExclusionList(p2);
	return v4;
}
-----
depth : 1
public List getAppExclusionList(String p1){
	long v1 = Binder.clearCallingIdentity();
	VpnProfileStore v2 = p0.getVpnProfileStore();
	String v3 = p0.getVpnAppExcludedForPackage(p1);
	byte[] v4 = v2.get(v3);
	ArrayList v4 = new ArrayList();
	int v6 = Log.e(""Vpn"", ""problem reading from stream"", caughtException);
	Binder.restoreCallingIdentity(v1);
	ArrayList v7 = new ArrayList();
	return v7;
}
-----
depth : 2
public VpnProfileStore getVpnProfileStore(){
	return this.mVpnProfileStore;
}
-----
depth : 2
public String getVpnAppExcludedForPackage(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""VPNAPPEXCLUDED_"");
	StringBuilder v3 = v0.append(this.mUserId);
	StringBuilder v4 = v0.append(""_"");
	StringBuilder v5 = v0.append(p1);
	String v6 = v0.toString();
	return v6;
}
-----
depth : 2
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
","public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	long v5 = Binder.clearCallingIdentity();
	VpnProfileStore v6 = this.mVpnProfileStore;
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""VPNAPPEXCLUDED_"");
	StringBuilder v11 = v8.append(this.mUserId);
	StringBuilder v12 = v8.append(""_"");
	StringBuilder v13 = v8.append(p1);
	String v14 = v8.toString();
	String v7 = v14;
	byte[] v16 = LegacyVpnProfileStore.get(v7);
	byte[] v15 = v16;
	ArrayList v17 = new ArrayList();
	int v19 = Log.e(""Vpn"", ""problem reading from stream"", caughtException);
	Binder.restoreCallingIdentity(v5);
	ArrayList v21 = new ArrayList();
	List v4 = v21;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getAppExclusionList(ILjava/lang/String;)Ljava/util/List;","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,2 @11 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
26 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppExclusionList(Ljava/lang/String;)Ljava/util/List; > 10,3 @19 exception:25,
monitorenter 1,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @1 exception:3,
6 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @5 exception:5,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
return 2,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnAppExcludedForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @9 exception:7,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,8 @12 exception:9,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,11 @17 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,2 @20 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @23 exception:16,
return 17,
10 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 6,8 @13 exception:9,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 10,11,
12 = arraylength 10,
conditional branch(ne, to iindex=-1) 12,11,
goto (from iindex= 12 to iindex = 16),
20 = new <Application,Ljava/util/ArrayList>@38,
26 = getCaughtException ,
30 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 27,28,26 @56 exception:29,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @59 exception:31,
32 = new <Application,Ljava/util/ArrayList>@62,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 32 @64 exception:33,
monitorexit 1,
return 32,
monitorexit 6,
return 26,","depth : 0
public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	List v4 = v3.getAppExclusionList(p2);
	return v4;
}
-----
depth : 1
public List getAppExclusionList(String p1){
	long v1 = Binder.clearCallingIdentity();
	VpnProfileStore v2 = p0.getVpnProfileStore();
	String v3 = p0.getVpnAppExcludedForPackage(p1);
	byte[] v4 = v2.get(v3);
	ArrayList v4 = new ArrayList;
	int v5 = Log.e(""Vpn"", ""problem reading from stream"", caughtException);
	Binder.restoreCallingIdentity(v1);
	ArrayList v6 = new ArrayList();
	return v6;
}
-----
depth : 2
public VpnProfileStore getVpnProfileStore(){
	return this.mVpnProfileStore;
}
-----
depth : 2
public String getVpnAppExcludedForPackage(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""VPNAPPEXCLUDED_"");
	StringBuilder v3 = v0.append(this.mUserId);
	StringBuilder v4 = v0.append(""_"");
	StringBuilder v5 = v0.append(p1);
	String v6 = v0.toString();
	return v6;
}
-----
depth : 2
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
","public List getAppExclusionList(int p1, String p2){
	Object v3 = this.mVpns.get(p1);
	long v5 = Binder.clearCallingIdentity();
	VpnProfileStore v6 = this.mVpnProfileStore;
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""VPNAPPEXCLUDED_"");
	StringBuilder v11 = v8.append(this.mUserId);
	StringBuilder v12 = v8.append(""_"");
	StringBuilder v13 = v8.append(p1);
	String v14 = v8.toString();
	String v7 = v14;
	byte[] v16 = LegacyVpnProfileStore.get(v7);
	byte[] v15 = v16;
	ArrayList v17 = new ArrayList;
	int v18 = Log.e(""Vpn"", ""problem reading from stream"", caughtException);
	Binder.restoreCallingIdentity(v5);
	ArrayList v20 = new ArrayList();
	List v4 = v20;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 11,2,3,13 @20 exception:14,
monitorexit 6,
return 15,","depth : 0
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
-----
","public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
monitorexit 6,
return 12,","depth : 0
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	return 0;
}
-----
","public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 11,2,3,13 @20 exception:14,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 5,6 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 2,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @13 exception:10,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,3 @18 exception:12,
conditional branch(eq, to iindex=-1) 2,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,9,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @29 exception:16,
conditional branch(ne, to iindex=-1) 17,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @37 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,23 @68 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
28 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnPreConsented(Landroid/content/Context;Ljava/lang/String;I)Z > 26,2,4 @76 exception:27,
conditional branch(ne, to iindex=-1) 28,9,
conditional branch(eq, to iindex=-1) 3,9,
34 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,23 @93 exception:33,
conditional branch(ne, to iindex=-1) 34,9,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,3 @99 exception:35,
conditional branch(eq, to iindex=-1) 36,9,
goto (from iindex= 56 to iindex = 21),
monitorexit 1,
return 14,
monitorexit 6,
return 15,","depth : 0
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
-----
depth : 1
public boolean prepare(String p1, String p2, int p3){
	p0.verifyCallingUidAndPackage(p1);
	p0.verifyCallingUidAndPackage(p2);
	boolean v4 = p0.isCurrentPreparedPackage(p1);
	boolean v5 = p0.isCurrentPreparedPackage(p1);
	boolean v6 = p1.equals(""[Legacy VPN]"");
	boolean v7 = Vpn.isVpnPreConsented(this.mContext, p1, p3);
	boolean v8 = p2.equals(""[Legacy VPN]"");
	boolean v9 = p0.isCurrentPreparedPackage(p2);
	return 1;
}
-----
","public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	Vpn.verifyCallingUidAndPackage(p1);
	Vpn.verifyCallingUidAndPackage(p2);
	boolean v8 = Vpn.isCurrentPreparedPackage(p1);
	boolean v9 = Vpn.isCurrentPreparedPackage(p1);
	boolean v10 = p1.equals(""[Legacy VPN]"");
	boolean v11 = Vpn.isVpnPreConsented(this.mContext, p1, 1);
	boolean v12 = p2.equals(""[Legacy VPN]"");
	boolean v13 = Vpn.isCurrentPreparedPackage(p2);
	boolean v4 = 1;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 11,2,3,13 @20 exception:14,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 5,6 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 2,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @13 exception:10,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,4,
return,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,3 @18 exception:12,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,4,
return,
conditional branch(eq, to iindex=-1) 2,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,9,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @29 exception:16,
conditional branch(ne, to iindex=-1) 17,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @37 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,23 @68 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
28 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnPreConsented(Landroid/content/Context;Ljava/lang/String;I)Z > 26,2,4 @76 exception:27,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(eq, to iindex=-1) 3,7,
9 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnProfilePreConsented(Landroid/content/Context;Ljava/lang/String;)Z > 1,2 @18 exception:8,
return 9,
conditional branch(ne, to iindex=-1) 28,9,
conditional branch(eq, to iindex=-1) 3,9,
34 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,23 @93 exception:33,
conditional branch(ne, to iindex=-1) 34,9,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,3 @99 exception:35,
conditional branch(eq, to iindex=-1) 36,9,
goto (from iindex= 56 to iindex = 21),
monitorexit 1,
return 14,
monitorexit 6,
return 15,","depth : 0
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
-----
depth : 1
public boolean prepare(String p1, String p2, int p3){
	p0.verifyCallingUidAndPackage(p1);
	p0.verifyCallingUidAndPackage(p2);
	boolean v4 = p0.isCurrentPreparedPackage(p1);
	boolean v5 = p0.isCurrentPreparedPackage(p1);
	boolean v6 = p1.equals(""[Legacy VPN]"");
	boolean v7 = Vpn.isVpnPreConsented(this.mContext, p1, p3);
	boolean v8 = p2.equals(""[Legacy VPN]"");
	boolean v9 = p0.isCurrentPreparedPackage(p2);
	return 1;
}
-----
depth : 2
public void verifyCallingUidAndPackage(String p1){
	return;
}
-----
depth : 2
public void verifyCallingUidAndPackage(String p1){
	return;
}
-----
depth : 2
public boolean isVpnPreConsented(Context p1, String p2, int p3){
	boolean v1 = Vpn.isVpnProfilePreConsented(p1, p2);
	return v1;
}
-----
","public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v12 = Vpn.isCurrentPreparedPackage(p1);
	boolean v13 = Vpn.isCurrentPreparedPackage(p1);
	boolean v14 = p1.equals(""[Legacy VPN]"");
	boolean v16 = Vpn.isVpnProfilePreConsented(this.mContext, p1);
	boolean v15 = v16;
	boolean v17 = p2.equals(""[Legacy VPN]"");
	boolean v18 = Vpn.isCurrentPreparedPackage(p2);
	boolean v4 = 1;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 11,2,3,13 @20 exception:14,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 5,6 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 2,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @13 exception:10,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,4,
return,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,3 @18 exception:12,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,4,
return,
conditional branch(eq, to iindex=-1) 2,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,9,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @29 exception:16,
conditional branch(ne, to iindex=-1) 17,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @37 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,23 @68 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
28 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnPreConsented(Landroid/content/Context;Ljava/lang/String;I)Z > 26,2,4 @76 exception:27,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnServicePreConsented(Landroid/content/Context;Ljava/lang/String;)Z > 1,2 @23 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 28,9,
conditional branch(eq, to iindex=-1) 3,9,
34 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,23 @93 exception:33,
conditional branch(ne, to iindex=-1) 34,9,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,3 @99 exception:35,
conditional branch(eq, to iindex=-1) 36,9,
goto (from iindex= 56 to iindex = 21),
monitorexit 1,
return 14,
monitorexit 6,
return 15,","depth : 0
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
-----
depth : 1
public boolean prepare(String p1, String p2, int p3){
	p0.verifyCallingUidAndPackage(p1);
	p0.verifyCallingUidAndPackage(p2);
	boolean v4 = p0.isCurrentPreparedPackage(p1);
	boolean v5 = p0.isCurrentPreparedPackage(p1);
	boolean v6 = p1.equals(""[Legacy VPN]"");
	boolean v7 = Vpn.isVpnPreConsented(this.mContext, p1, p3);
	boolean v8 = p2.equals(""[Legacy VPN]"");
	boolean v9 = p0.isCurrentPreparedPackage(p2);
	return 1;
}
-----
depth : 2
public void verifyCallingUidAndPackage(String p1){
	return;
}
-----
depth : 2
public void verifyCallingUidAndPackage(String p1){
	return;
}
-----
depth : 2
public boolean isVpnPreConsented(Context p1, String p2, int p3){
	boolean v1 = Vpn.isVpnServicePreConsented(p1, p2);
	return v1;
}
-----
","public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v12 = Vpn.isCurrentPreparedPackage(p1);
	boolean v13 = Vpn.isCurrentPreparedPackage(p1);
	boolean v14 = p1.equals(""[Legacy VPN]"");
	boolean v16 = Vpn.isVpnServicePreConsented(this.mContext, p1);
	boolean v15 = v16;
	boolean v17 = p2.equals(""[Legacy VPN]"");
	boolean v18 = Vpn.isCurrentPreparedPackage(p2);
	boolean v4 = 1;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","establishVpn(Lcom/android/internal/net/VpnConfig;)Landroid/os/ParcelFileDescriptor;","0","3 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 3 @2 exception:4,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:9,
10 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 10,7 @18 exception:11,
13 = checkcast <Application,Lcom/android/server/connectivity/Vpn>12 <Application,Lcom/android/server/connectivity/Vpn>,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, establish(Lcom/android/internal/net/VpnConfig;)Landroid/os/ParcelFileDescriptor; > 13,2 @24 exception:14,
monitorexit 8,
return 15,","depth : 0
public ParcelFileDescriptor establishVpn(VpnConfig p1){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	ParcelFileDescriptor v5 = v4.establish(p1);
	return v5;
}
-----
","public ParcelFileDescriptor establishVpn(VpnConfig p1){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	ParcelFileDescriptor v5 = v4.establish(p1);
	return v5;
}
","NONE"
"Lcom/android/server/VpnManagerService","establishVpn(Lcom/android/internal/net/VpnConfig;)Landroid/os/ParcelFileDescriptor;","1","3 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:9,
10 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 10,7 @18 exception:11,
13 = checkcast <Application,Lcom/android/server/connectivity/Vpn>12 <Application,Lcom/android/server/connectivity/Vpn>,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, establish(Lcom/android/internal/net/VpnConfig;)Landroid/os/ParcelFileDescriptor; > 13,2 @24 exception:14,
monitorenter 1,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @1 exception:3,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mOwnerUID, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 4,5,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
10 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnServicePreConsented(Landroid/content/Context;Ljava/lang/String;)Z > 7,8 @16 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
monitorexit 1,
return 6,
monitorexit 8,
return 15,","depth : 0
public ParcelFileDescriptor establishVpn(VpnConfig p1){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	ParcelFileDescriptor v5 = v4.establish(p1);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public ParcelFileDescriptor establish(VpnConfig p1){
	boolean v2 = Vpn.isVpnServicePreConsented(this.mContext, this.mPackage);
	return 0;
}
-----
","public ParcelFileDescriptor establishVpn(VpnConfig p1){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isVpnServicePreConsented(this.mContext, this.mPackage);
	ParcelFileDescriptor v6 = 0;
	return v6;
}
","NONE"
"Lcom/android/server/VpnManagerService","establishVpn(Lcom/android/internal/net/VpnConfig;)Landroid/os/ParcelFileDescriptor;","2","3 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 3 @2 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 5 @6 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:9,
10 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 10,7 @18 exception:11,
13 = checkcast <Application,Lcom/android/server/connectivity/Vpn>12 <Application,Lcom/android/server/connectivity/Vpn>,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, establish(Lcom/android/internal/net/VpnConfig;)Landroid/os/ParcelFileDescriptor; > 13,2 @24 exception:14,
monitorenter 1,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @1 exception:3,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mOwnerUID, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 4,5,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
10 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnServicePreConsented(Landroid/content/Context;Ljava/lang/String;)Z > 7,8 @16 exception:9,
5 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, doesPackageHaveAppop(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @2 exception:4,
return 5,
conditional branch(ne, to iindex=-1) 10,6,
monitorexit 1,
return 6,
monitorexit 8,
return 15,","depth : 0
public ParcelFileDescriptor establishVpn(VpnConfig p1){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	ParcelFileDescriptor v5 = v4.establish(p1);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public ParcelFileDescriptor establish(VpnConfig p1){
	boolean v2 = Vpn.isVpnServicePreConsented(this.mContext, this.mPackage);
	return 0;
}
-----
depth : 2
public boolean isVpnServicePreConsented(Context p1, String p2){
	boolean v1 = Vpn.doesPackageHaveAppop(p1, p2, ""android:activate_vpn"");
	return v1;
}
-----
","public ParcelFileDescriptor establishVpn(VpnConfig p1){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v9 = Vpn.doesPackageHaveAppop(this.mContext, this.mPackage, ""android:activate_vpn"");
	boolean v8 = v9;
	ParcelFileDescriptor v6 = 0;
	return v6;
}
","NONE"

"Lcom/android/server/VpnManagerService","getVpnConfig(I)Lcom/android/internal/net/VpnConfig;","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnConfig()Lcom/android/internal/net/VpnConfig; > 8 @16 exception:10,
monitorexit 4,
return 11,","depth : 0
public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	VpnConfig v3 = v2.getVpnConfig();
	return v3;
}
-----
","public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	VpnConfig v3 = v2.getVpnConfig();
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getVpnConfig(I)Lcom/android/internal/net/VpnConfig;","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 8,9,
monitorexit 4,
return 9,","depth : 0
public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	return 0;
}
-----
","public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getVpnConfig(I)Lcom/android/internal/net/VpnConfig;","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnConfig()Lcom/android/internal/net/VpnConfig; > 8 @16 exception:10,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermission()V > 1 @1 exception:2,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mConfig, <Application,Lcom/android/internal/net/VpnConfig> > 1,
monitorexit 1,
return 3,
monitorexit 4,
return 11,","depth : 0
public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	VpnConfig v3 = v2.getVpnConfig();
	return v3;
}
-----
depth : 1
public VpnConfig getVpnConfig(){
	p0.enforceControlPermission();
	return this.mConfig;
}
-----
","public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	Vpn.enforceControlPermission();
	VpnConfig v3 = this.mConfig;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getVpnConfig(I)Lcom/android/internal/net/VpnConfig;","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnConfig()Lcom/android/internal/net/VpnConfig; > 8 @16 exception:10,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermission()V > 1 @1 exception:2,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mConfig, <Application,Lcom/android/internal/net/VpnConfig> > 1,
monitorexit 1,
return 3,
monitorexit 4,
return 11,","depth : 0
public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	VpnConfig v3 = v2.getVpnConfig();
	return v3;
}
-----
depth : 1
public VpnConfig getVpnConfig(){
	p0.enforceControlPermission();
	return this.mConfig;
}
-----
depth : 2
public void enforceControlPermission(){
	return;
}
-----
","public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	VpnConfig v3 = this.mConfig;
	return v3;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","getProvisionedVpnProfileState(Ljava/lang/String;)Landroid/net/VpnProfileState;","0","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @16 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProvisionedVpnProfileState(Ljava/lang/String;)Landroid/net/VpnProfileState; > 12,2 @22 exception:13,
monitorexit 8,
return 14,","depth : 0
public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	VpnProfileState v5 = v4.getProvisionedVpnProfileState(p1);
	return v5;
}
-----
","public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	VpnProfileState v5 = v4.getProvisionedVpnProfileState(p1);
	return v5;
}
","NONE"
"Lcom/android/server/VpnManagerService","getProvisionedVpnProfileState(Ljava/lang/String;)Landroid/net/VpnProfileState;","1","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAppUid(Ljava/lang/String;I)I > 1,2,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,3,
return,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @16 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProvisionedVpnProfileState(Ljava/lang/String;)Landroid/net/VpnProfileState; > 12,2 @22 exception:13,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @6 exception:6,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentIkev2VpnLocked(Ljava/lang/String;)Z > 1,2 @9 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @15 exception:10,
goto (from iindex= 9 to iindex = 2),
16 = phi  11,9,
monitorexit 1,
return 16,
monitorexit 8,
return 14,","depth : 0
public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	VpnProfileState v5 = v4.getProvisionedVpnProfileState(p1);
	return v5;
}
-----
depth : 1
public void verifyCallingUidAndPackage(String p1, int p2){
	return;
}
-----
depth : 1
public VpnProfileState getProvisionedVpnProfileState(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.enforceNotRestrictedUser();
	boolean v3 = p0.isCurrentIkev2VpnLocked(p1);
	VpnProfileState v4 = p0.makeVpnProfileStateLocked();
	return phiInstruction;
}
-----
","public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, ""No package name provided"");
	Vpn.enforceNotRestrictedUser();
	boolean v10 = Vpn.isCurrentIkev2VpnLocked(p1);
	VpnProfileState v11 = Vpn.makeVpnProfileStateLocked();
	VpnProfileState v7 = phiInstruction;
	return v7;
}
","NONE"
"Lcom/android/server/VpnManagerService","getProvisionedVpnProfileState(Ljava/lang/String;)Landroid/net/VpnProfileState;","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAppUid(Ljava/lang/String;I)I > 1,2,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,3,
return,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @16 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProvisionedVpnProfileState(Ljava/lang/String;)Landroid/net/VpnProfileState; > 12,2 @22 exception:13,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @6 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentIkev2VpnLocked(Ljava/lang/String;)Z > 1,2 @9 exception:7,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @15 exception:10,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
goto (from iindex= 9 to iindex = 2),
16 = phi  11,9,
monitorexit 1,
return 16,
monitorexit 8,
return 14,","depth : 0
public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	VpnProfileState v5 = v4.getProvisionedVpnProfileState(p1);
	return v5;
}
-----
depth : 1
public void verifyCallingUidAndPackage(String p1, int p2){
	return;
}
-----
depth : 1
public VpnProfileState getProvisionedVpnProfileState(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.enforceNotRestrictedUser();
	boolean v3 = p0.isCurrentIkev2VpnLocked(p1);
	VpnProfileState v4 = p0.makeVpnProfileStateLocked();
	return phiInstruction;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isCurrentIkev2VpnLocked(String p1){
	boolean v1 = p0.isCurrentPreparedPackage(p1);
	boolean v2 = p0.isIkev2VpnRunner();
	return phiInstruction;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
","public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, ""No package name provided"");
	long v10 = Binder.clearCallingIdentity();
	UserInfo v11 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v12 = v11.isRestricted();
	Binder.restoreCallingIdentity(v10);
	boolean v15 = Vpn.isCurrentPreparedPackage(p1);
	boolean v16 = Vpn.isIkev2VpnRunner();
	boolean v14 = phiInstruction;
	VpnProfileState v18 = new VpnProfileState(v19,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v19 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v20 = Vpn.isIkev2VpnRunner();
	String v21 = Vpn.getSessionKeyLocked();
	VpnProfileState v17 = v18;
	VpnProfileState v7 = phiInstruction;
	return v7;
}
","NONE"
"Lcom/android/server/VpnManagerService","getProvisionedVpnProfileState(Ljava/lang/String;)Landroid/net/VpnProfileState;","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAppUid(Ljava/lang/String;I)I > 1,2,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,3,
return,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @16 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProvisionedVpnProfileState(Ljava/lang/String;)Landroid/net/VpnProfileState; > 12,2 @22 exception:13,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @6 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentIkev2VpnLocked(Ljava/lang/String;)Z > 1,2 @9 exception:7,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @15 exception:10,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
goto (from iindex= 9 to iindex = 2),
16 = phi  11,9,
monitorexit 1,
return 16,
monitorexit 8,
return 14,","depth : 0
public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	VpnProfileState v5 = v4.getProvisionedVpnProfileState(p1);
	return v5;
}
-----
depth : 1
public void verifyCallingUidAndPackage(String p1, int p2){
	return;
}
-----
depth : 1
public VpnProfileState getProvisionedVpnProfileState(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.enforceNotRestrictedUser();
	boolean v3 = p0.isCurrentIkev2VpnLocked(p1);
	VpnProfileState v4 = p0.makeVpnProfileStateLocked();
	return phiInstruction;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isCurrentIkev2VpnLocked(String p1){
	boolean v1 = p0.isCurrentPreparedPackage(p1);
	boolean v2 = p0.isIkev2VpnRunner();
	return phiInstruction;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
","public VpnProfileState getProvisionedVpnProfileState(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, ""No package name provided"");
	long v10 = Binder.clearCallingIdentity();
	UserInfo v11 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v12 = v11.isRestricted();
	Binder.restoreCallingIdentity(v10);
	boolean v15 = Vpn.isCurrentPreparedPackage(p1);
	boolean v16 = Vpn.isIkev2VpnRunner();
	boolean v14 = phiInstruction;
	VpnProfileState v18 = new VpnProfileState(v19,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v19 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v20 = Vpn.isIkev2VpnRunner();
	String v21 = Vpn.getSessionKeyLocked();
	VpnProfileState v17 = v18;
	VpnProfileState v7 = phiInstruction;
	return v7;
}
","NONE"

"Lcom/android/server/VpnManagerService","getAlwaysOnVpnPackage(I)Ljava/lang/String;","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
13 = new <Application,Ljava/lang/StringBuilder>@19,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @21 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @26 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,2 @29 exception:18,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,20 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @37 exception:23,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 24 @41 exception:25,
monitorexit 5,
return 10,","depth : 0
public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
","public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	VpnManagerService.logw(v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getAlwaysOnVpnPackage(I)Ljava/lang/String;","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 9 @47 exception:11,
monitorexit 5,
return 12,","depth : 0
public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	String v4 = v3.getAlwaysOnPackage();
	return v4;
}
-----
","public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	String v4 = v3.getAlwaysOnPackage();
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getAlwaysOnVpnPackage(I)Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
13 = new <Application,Ljava/lang/StringBuilder>@19,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @21 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @26 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,2 @29 exception:18,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,20 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @37 exception:23,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 24 @41 exception:25,
2 = getstatic < Application, Lcom/android/server/VpnManagerService, TAG, <Application,Ljava/lang/String> >,
4 = invokestatic < Application, Landroid/util/Log, w(Ljava/lang/String;Ljava/lang/String;)I > 2,1 @2 exception:3,
return,
monitorexit 5,
return 10,","depth : 0
public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
depth : 1
public void logw(String p1){
	int v1 = Log.w(this.TAG, p1);
	return;
}
-----
","public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	int v11 = Log.w(this.TAG, v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getAlwaysOnVpnPackage(I)Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 9 @47 exception:11,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:2,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
goto (from iindex= 5 to iindex = 2),
8 = phi  5,4,
monitorexit 1,
return 8,
monitorexit 5,
return 12,","depth : 0
public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	String v4 = v3.getAlwaysOnPackage();
	return v4;
}
-----
depth : 1
public String getAlwaysOnPackage(){
	p0.enforceControlPermissionOrInternalCaller();
	return phiInstruction;
}
-----
","public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	Vpn.enforceControlPermissionOrInternalCaller();
	String v4 = phiInstruction;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getAlwaysOnVpnPackage(I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 9 @47 exception:11,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:2,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
goto (from iindex= 5 to iindex = 2),
8 = phi  5,4,
monitorexit 1,
return 8,
monitorexit 5,
return 12,","depth : 0
public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	String v4 = v3.getAlwaysOnPackage();
	return v4;
}
-----
depth : 1
public String getAlwaysOnPackage(){
	p0.enforceControlPermissionOrInternalCaller();
	return phiInstruction;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
","public String getAlwaysOnVpnPackage(int p1){
	Object v3 = this.mVpns.get(p1);
	String v4 = phiInstruction;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","getVpnLockdownAllowlist(I)Ljava/util/List;","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
13 = new <Application,Ljava/lang/StringBuilder>@19,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @21 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @26 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,2 @29 exception:18,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,20 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @37 exception:23,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 24 @41 exception:25,
monitorexit 5,
return 10,","depth : 0
public List getVpnLockdownAllowlist(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
","public List getVpnLockdownAllowlist(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	VpnManagerService.logw(v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getVpnLockdownAllowlist(I)Ljava/util/List;","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdownAllowlist()Ljava/util/List; > 9 @47 exception:11,
monitorexit 5,
return 12,","depth : 0
public List getVpnLockdownAllowlist(int p1){
	Object v3 = this.mVpns.get(p1);
	List v4 = v3.getLockdownAllowlist();
	return v4;
}
-----
","public List getVpnLockdownAllowlist(int p1){
	Object v3 = this.mVpns.get(p1);
	List v4 = v3.getLockdownAllowlist();
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getVpnLockdownAllowlist(I)Ljava/util/List;","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
13 = new <Application,Ljava/lang/StringBuilder>@19,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @21 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @26 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,2 @29 exception:18,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,20 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @37 exception:23,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 24 @41 exception:25,
2 = getstatic < Application, Lcom/android/server/VpnManagerService, TAG, <Application,Ljava/lang/String> >,
4 = invokestatic < Application, Landroid/util/Log, w(Ljava/lang/String;Ljava/lang/String;)I > 2,1 @2 exception:3,
return,
monitorexit 5,
return 10,","depth : 0
public List getVpnLockdownAllowlist(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
depth : 1
public void logw(String p1){
	int v1 = Log.w(this.TAG, p1);
	return;
}
-----
","public List getVpnLockdownAllowlist(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	int v11 = Log.w(this.TAG, v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getVpnLockdownAllowlist(I)Ljava/util/List;","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdownAllowlist()Ljava/util/List; > 9 @47 exception:11,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > 1,
goto (from iindex= 4 to iindex = 2),
7 = phi  4,3,
monitorexit 1,
return 7,
monitorexit 5,
return 12,","depth : 0
public List getVpnLockdownAllowlist(int p1){
	Object v3 = this.mVpns.get(p1);
	List v4 = v3.getLockdownAllowlist();
	return v4;
}
-----
depth : 1
public List getLockdownAllowlist(){
	return phiInstruction;
}
-----
","public List getVpnLockdownAllowlist(int p1){
	Object v3 = this.mVpns.get(p1);
	List v4 = phiInstruction;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","removeVpnAddress(Ljava/lang/String;I)Z","0","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, removeAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorexit 9,
return 16,","depth : 0
public boolean removeVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.removeAddress(p1, p2);
	return v5;
}
-----
","public boolean removeVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.removeAddress(p1, p2);
	return v5;
}
","NONE"
"Lcom/android/server/VpnManagerService","removeVpnAddress(Ljava/lang/String;I)Z","1","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, removeAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mInterface, <Application,Ljava/lang/String> > 1,
9 = invokespecial < Application, Lcom/android/server/connectivity/Vpn, jniDelAddress(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,2,3 @12 exception:8,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeLinkProperties()Landroid/net/LinkProperties; > 1 @18 exception:11,
invokestatic < Application, Lcom/android/server/connectivity/Vpn, doSendLinkProperties(Landroid/net/NetworkAgent;Landroid/net/LinkProperties;)V > 10,12 @22 exception:13,
monitorexit 1,
return 9,
monitorexit 9,
return 16,","depth : 0
public boolean removeVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.removeAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean removeAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	boolean v2 = p0.jniDelAddress(this.mInterface, p1, p2);
	LinkProperties v3 = p0.makeLinkProperties();
	Vpn.doSendLinkProperties(this.mNetworkAgent, v3);
	return v2;
}
-----
","public boolean removeVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v7 = Vpn.isCallerEstablishedOwnerLocked();
	boolean v8 = Vpn.jniDelAddress(this.mInterface, p1, p2);
	LinkProperties v9 = Vpn.makeLinkProperties();
	Vpn.doSendLinkProperties(this.mNetworkAgent, v9);
	boolean v6 = v8;
	return v6;
}
","NONE"
"Lcom/android/server/VpnManagerService","removeVpnAddress(Ljava/lang/String;I)Z","1","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, removeAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
monitorexit 1,
return 6,
monitorexit 9,
return 16,","depth : 0
public boolean removeVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.removeAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean removeAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	return 0;
}
-----
","public boolean removeVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v7 = Vpn.isCallerEstablishedOwnerLocked();
	boolean v6 = 0;
	return v6;
}
","NONE"
"Lcom/android/server/VpnManagerService","removeVpnAddress(Ljava/lang/String;I)Z","2","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, removeAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isRunningLocked()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
14 = phi  12,4,
return 14,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mInterface, <Application,Ljava/lang/String> > 1,
9 = invokespecial < Application, Lcom/android/server/connectivity/Vpn, jniDelAddress(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,2,3 @12 exception:8,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeLinkProperties()Landroid/net/LinkProperties; > 1 @18 exception:11,
invokestatic < Application, Lcom/android/server/connectivity/Vpn, doSendLinkProperties(Landroid/net/NetworkAgent;Landroid/net/LinkProperties;)V > 10,12 @22 exception:13,
3 = instanceof 1 <Application,Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper>,
conditional branch(eq, to iindex=-1) 3,4,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper>1 <Application,Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper, doSendLinkProperties(Landroid/net/LinkProperties;)V > 6,2 @6 exception:7,
goto (from iindex= 4 to iindex = 4),
return,
monitorexit 1,
return 9,
monitorexit 9,
return 16,","depth : 0
public boolean removeVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.removeAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean removeAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	boolean v2 = p0.jniDelAddress(this.mInterface, p1, p2);
	LinkProperties v3 = p0.makeLinkProperties();
	Vpn.doSendLinkProperties(this.mNetworkAgent, v3);
	return v2;
}
-----
depth : 2
public boolean isCallerEstablishedOwnerLocked(){
	boolean v1 = p0.isRunningLocked();
	return phiInstruction;
}
-----
depth : 2
public void doSendLinkProperties(NetworkAgent p1, LinkProperties p2){
	p1.doSendLinkProperties(p2);
	return;
}
-----
","public boolean removeVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isRunningLocked();
	boolean v7 = phiInstruction;
	boolean v9 = Vpn.jniDelAddress(this.mInterface, p1, p2);
	LinkProperties v10 = Vpn.makeLinkProperties();
	this.mNetworkAgent.doSendLinkProperties(v10);
	boolean v6 = v9;
	return v6;
}
","NONE"
"Lcom/android/server/VpnManagerService","removeVpnAddress(Ljava/lang/String;I)Z","2","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, removeAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isRunningLocked()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
14 = phi  12,4,
return 14,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mInterface, <Application,Ljava/lang/String> > 1,
9 = invokespecial < Application, Lcom/android/server/connectivity/Vpn, jniDelAddress(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,2,3 @12 exception:8,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeLinkProperties()Landroid/net/LinkProperties; > 1 @18 exception:11,
invokestatic < Application, Lcom/android/server/connectivity/Vpn, doSendLinkProperties(Landroid/net/NetworkAgent;Landroid/net/LinkProperties;)V > 10,12 @22 exception:13,
3 = instanceof 1 <Application,Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper>,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Landroid/net/NetworkAgent, sendLinkProperties(Landroid/net/LinkProperties;)V > 1,2 @10 exception:5,
return,
monitorexit 1,
return 9,
monitorexit 9,
return 16,","depth : 0
public boolean removeVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.removeAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean removeAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	boolean v2 = p0.jniDelAddress(this.mInterface, p1, p2);
	LinkProperties v3 = p0.makeLinkProperties();
	Vpn.doSendLinkProperties(this.mNetworkAgent, v3);
	return v2;
}
-----
depth : 2
public boolean isCallerEstablishedOwnerLocked(){
	boolean v1 = p0.isRunningLocked();
	return phiInstruction;
}
-----
depth : 2
public void doSendLinkProperties(NetworkAgent p1, LinkProperties p2){
	p1.sendLinkProperties(p2);
	return;
}
-----
","public boolean removeVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isRunningLocked();
	boolean v7 = phiInstruction;
	boolean v9 = Vpn.jniDelAddress(this.mInterface, p1, p2);
	LinkProperties v10 = Vpn.makeLinkProperties();
	this.mNetworkAgent.sendLinkProperties(v10);
	boolean v6 = v9;
	return v6;
}
","NONE"
"Lcom/android/server/VpnManagerService","removeVpnAddress(Ljava/lang/String;I)Z","2","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, removeAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isRunningLocked()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
14 = phi  12,4,
return 14,
conditional branch(ne, to iindex=-1) 5,6,
monitorexit 1,
return 6,
monitorexit 9,
return 16,","depth : 0
public boolean removeVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.removeAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean removeAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	return 0;
}
-----
depth : 2
public boolean isCallerEstablishedOwnerLocked(){
	boolean v1 = p0.isRunningLocked();
	return phiInstruction;
}
-----
","public boolean removeVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isRunningLocked();
	boolean v7 = phiInstruction;
	boolean v6 = 0;
	return v6;
}
","NONE"

"Lcom/android/server/VpnManagerService","factoryReset()V","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
6 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 3,4 @8 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 8,9 @19 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
13 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @26 exception:12,
14 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 14,
16 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAlwaysOnVpnPackage(I)Ljava/lang/String; > 1,13 @33 exception:15,
conditional branch(eq, to iindex=-1) 16,7,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z > 1,13,7,7,7 @42 exception:18,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,16,13,17 @45 exception:20,
23 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 23,7,
conditional branch(ne, to iindex=-1) 13,7,
25 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @54 exception:24,
26 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
29 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, remove(Ljava/lang/String;)Z > 26,27 @62 exception:28,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 7,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,7 @67 exception:30,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 25 @70 exception:35,
goto (from iindex= 35 to iindex = 6),
40 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnConfig(I)Lcom/android/internal/net/VpnConfig; > 1,13 @79 exception:39,
conditional branch(eq, to iindex=-1) 40,7,
41 = getfield < Application, Lcom/android/internal/net/VpnConfig, legacy, <Primordial,Z> > 40,
conditional branch(eq, to iindex=-1) 41,7,
42 = getfield < Application, Lcom/android/internal/net/VpnConfig, user, <Application,Ljava/lang/String> > 40,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,42,13,17 @99 exception:43,
46 = invokevirtual < Application, Lcom/android/server/VpnManagerService, prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,44,13 @104 exception:45,
monitorexit 14,
return,","depth : 0
public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	boolean v9 = this.mVpnProfileStore.remove(""LOCKDOWN_VPN"");
	this.mLockdownEnabled = 0;
	p0.setLockdownTracker(0);
	Binder.restoreCallingIdentity(v8);
	VpnConfig v12 = p0.getVpnConfig(v4);
	p0.setVpnPackageAuthorization(VpnConfig.user, v4, -1);
	boolean v14 = p0.prepareVpn(0, ""[Legacy VPN]"", v4);
	return;
}
-----
","public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	boolean v9 = this.mVpnProfileStore.remove(""LOCKDOWN_VPN"");
	this.mLockdownEnabled = 0;
	p0.setLockdownTracker(0);
	Binder.restoreCallingIdentity(v8);
	VpnConfig v12 = p0.getVpnConfig(v4);
	p0.setVpnPackageAuthorization(VpnConfig.user, v4, -1);
	boolean v14 = p0.prepareVpn(0, ""[Legacy VPN]"", v4);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","factoryReset()V","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
6 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 3,4 @8 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 8,9 @19 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
13 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @26 exception:12,
14 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 14,
16 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAlwaysOnVpnPackage(I)Ljava/lang/String; > 1,13 @33 exception:15,
conditional branch(eq, to iindex=-1) 16,7,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z > 1,13,7,7,7 @42 exception:18,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,16,13,17 @45 exception:20,
23 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 23,7,
conditional branch(ne, to iindex=-1) 13,7,
25 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @54 exception:24,
26 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
29 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, remove(Ljava/lang/String;)Z > 26,27 @62 exception:28,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, remove(Ljava/lang/String;)Z > 2 @0 exception:3,
return 4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 7,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,7 @67 exception:30,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdown()V > 3 @7 exception:5,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 25 @70 exception:35,
goto (from iindex= 35 to iindex = 6),
40 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnConfig(I)Lcom/android/internal/net/VpnConfig; > 1,13 @79 exception:39,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnConfig()Lcom/android/internal/net/VpnConfig; > 8 @16 exception:10,
monitorexit 4,
return 11,
conditional branch(eq, to iindex=-1) 40,7,
41 = getfield < Application, Lcom/android/internal/net/VpnConfig, legacy, <Primordial,Z> > 40,
conditional branch(eq, to iindex=-1) 41,7,
42 = getfield < Application, Lcom/android/internal/net/VpnConfig, user, <Application,Ljava/lang/String> > 40,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,42,13,17 @99 exception:43,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,3 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 10,2,4 @16 exception:12,
monitorexit 6,
return,
46 = invokevirtual < Application, Lcom/android/server/VpnManagerService, prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,44,13 @104 exception:45,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 11,2,3,13 @20 exception:14,
monitorexit 6,
return 15,
monitorexit 14,
return,","depth : 0
public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	boolean v9 = this.mVpnProfileStore.remove(""LOCKDOWN_VPN"");
	this.mLockdownEnabled = 0;
	p0.setLockdownTracker(0);
	Binder.restoreCallingIdentity(v8);
	VpnConfig v12 = p0.getVpnConfig(v4);
	p0.setVpnPackageAuthorization(VpnConfig.user, v4, -1);
	boolean v14 = p0.prepareVpn(0, ""[Legacy VPN]"", v4);
	return;
}
-----
depth : 1
public boolean remove(String p1){
	boolean v1 = LegacyVpnProfileStore.remove(p1);
	return v1;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
depth : 1
public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	VpnConfig v3 = v2.getVpnConfig();
	return v3;
}
-----
depth : 1
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
-----
depth : 1
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
-----
","public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	boolean v10 = LegacyVpnProfileStore.remove(""LOCKDOWN_VPN"");
	boolean v9 = v10;
	this.mLockdownEnabled = 0;
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = 0;
	0.init();
	Binder.restoreCallingIdentity(v8);
	Object v17 = this.mVpns.get(v4);
	VpnConfig v18 = v17.getVpnConfig();
	VpnConfig v15 = v18;
	Object v21 = this.mVpns.get(v4);
	boolean v22 = v21.setPackageAuthorization(VpnConfig.user, -1);
	VpnManagerService.throwIfLockdownEnabled();
	Object v26 = this.mVpns.get(v4);
	boolean v27 = v26.prepare(0, ""[Legacy VPN]"", 1);
	boolean v23 = v27;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","factoryReset()V","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
6 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 3,4 @8 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 8,9 @19 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
13 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @26 exception:12,
14 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 14,
16 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAlwaysOnVpnPackage(I)Ljava/lang/String; > 1,13 @33 exception:15,
conditional branch(eq, to iindex=-1) 16,7,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z > 1,13,7,7,7 @42 exception:18,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,16,13,17 @45 exception:20,
23 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 23,7,
conditional branch(ne, to iindex=-1) 13,7,
25 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @54 exception:24,
26 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
29 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, remove(Ljava/lang/String;)Z > 26,27 @62 exception:28,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, remove(Ljava/lang/String;)Z > 2 @0 exception:3,
return 4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 7,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,7 @67 exception:30,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdown()V > 3 @7 exception:5,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 25 @70 exception:35,
goto (from iindex= 35 to iindex = 6),
40 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnConfig(I)Lcom/android/internal/net/VpnConfig; > 1,13 @79 exception:39,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 8,9,
monitorexit 4,
return 9,
conditional branch(eq, to iindex=-1) 40,7,
41 = getfield < Application, Lcom/android/internal/net/VpnConfig, legacy, <Primordial,Z> > 40,
conditional branch(eq, to iindex=-1) 41,7,
42 = getfield < Application, Lcom/android/internal/net/VpnConfig, user, <Application,Ljava/lang/String> > 40,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,42,13,17 @99 exception:43,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,3 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 10,2,4 @16 exception:12,
monitorexit 6,
return,
46 = invokevirtual < Application, Lcom/android/server/VpnManagerService, prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,44,13 @104 exception:45,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 11,2,3,13 @20 exception:14,
monitorexit 6,
return 15,
monitorexit 14,
return,","depth : 0
public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	boolean v9 = this.mVpnProfileStore.remove(""LOCKDOWN_VPN"");
	this.mLockdownEnabled = 0;
	p0.setLockdownTracker(0);
	Binder.restoreCallingIdentity(v8);
	VpnConfig v12 = p0.getVpnConfig(v4);
	p0.setVpnPackageAuthorization(VpnConfig.user, v4, -1);
	boolean v14 = p0.prepareVpn(0, ""[Legacy VPN]"", v4);
	return;
}
-----
depth : 1
public boolean remove(String p1){
	boolean v1 = LegacyVpnProfileStore.remove(p1);
	return v1;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
depth : 1
public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	return 0;
}
-----
depth : 1
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
-----
depth : 1
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
-----
","public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	boolean v10 = LegacyVpnProfileStore.remove(""LOCKDOWN_VPN"");
	boolean v9 = v10;
	this.mLockdownEnabled = 0;
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = 0;
	0.init();
	Binder.restoreCallingIdentity(v8);
	Object v17 = this.mVpns.get(v4);
	VpnConfig v15 = 0;
	Object v20 = this.mVpns.get(v4);
	boolean v21 = v20.setPackageAuthorization(VpnConfig.user, -1);
	VpnManagerService.throwIfLockdownEnabled();
	Object v25 = this.mVpns.get(v4);
	boolean v26 = v25.prepare(0, ""[Legacy VPN]"", 1);
	boolean v22 = v26;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","factoryReset()V","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
6 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 3,4 @8 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 8,9 @19 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
13 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @26 exception:12,
14 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 14,
16 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAlwaysOnVpnPackage(I)Ljava/lang/String; > 1,13 @33 exception:15,
conditional branch(eq, to iindex=-1) 16,7,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z > 1,13,7,7,7 @42 exception:18,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,16,13,17 @45 exception:20,
23 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 23,7,
conditional branch(ne, to iindex=-1) 13,7,
25 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @54 exception:24,
26 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
29 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, remove(Ljava/lang/String;)Z > 26,27 @62 exception:28,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, remove(Ljava/lang/String;)Z > 2 @0 exception:3,
5 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, getService()Landroid/security/legacykeystore/ILegacyKeystore; > @4 exception:4,
invokeinterface < Application, Landroid/security/legacykeystore/ILegacyKeystore, remove(Ljava/lang/String;I)V > 5,1,6 @9 exception:7,
9 = getCaughtException ,
10 = getfield < Application, Landroid/os/ServiceSpecificException, errorCode, <Primordial,I> > 9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,2,9 @25 exception:12,
return 24,
return 4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 7,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,7 @67 exception:30,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdown()V > 3 @7 exception:5,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdownLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, initLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 25 @70 exception:35,
goto (from iindex= 35 to iindex = 6),
40 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnConfig(I)Lcom/android/internal/net/VpnConfig; > 1,13 @79 exception:39,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnConfig()Lcom/android/internal/net/VpnConfig; > 8 @16 exception:10,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermission()V > 1 @1 exception:2,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mConfig, <Application,Lcom/android/internal/net/VpnConfig> > 1,
monitorexit 1,
return 3,
monitorexit 4,
return 11,
conditional branch(eq, to iindex=-1) 40,7,
41 = getfield < Application, Lcom/android/internal/net/VpnConfig, legacy, <Primordial,Z> > 40,
conditional branch(eq, to iindex=-1) 41,7,
42 = getfield < Application, Lcom/android/internal/net/VpnConfig, user, <Application,Ljava/lang/String> > 40,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,42,13,17 @99 exception:43,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,3 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 10,2,4 @16 exception:12,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 10,2 @15 exception:11,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 11 to iindex = 113),
return 9,
monitorexit 6,
return,
46 = invokevirtual < Application, Lcom/android/server/VpnManagerService, prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,44,13 @104 exception:45,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 11,2,3,13 @20 exception:14,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 5,6 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 2,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @13 exception:10,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,3 @18 exception:12,
conditional branch(eq, to iindex=-1) 2,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,9,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @29 exception:16,
conditional branch(ne, to iindex=-1) 17,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @37 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,23 @68 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
28 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnPreConsented(Landroid/content/Context;Ljava/lang/String;I)Z > 26,2,4 @76 exception:27,
conditional branch(ne, to iindex=-1) 28,9,
conditional branch(eq, to iindex=-1) 3,9,
34 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,23 @93 exception:33,
conditional branch(ne, to iindex=-1) 34,9,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,3 @99 exception:35,
conditional branch(eq, to iindex=-1) 36,9,
goto (from iindex= 56 to iindex = 21),
monitorexit 1,
return 14,
monitorexit 6,
return 15,
monitorexit 14,
return,","depth : 0
public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	boolean v9 = this.mVpnProfileStore.remove(""LOCKDOWN_VPN"");
	this.mLockdownEnabled = 0;
	p0.setLockdownTracker(0);
	Binder.restoreCallingIdentity(v8);
	VpnConfig v12 = p0.getVpnConfig(v4);
	p0.setVpnPackageAuthorization(VpnConfig.user, v4, -1);
	boolean v14 = p0.prepareVpn(0, ""[Legacy VPN]"", v4);
	return;
}
-----
depth : 1
public boolean remove(String p1){
	boolean v1 = LegacyVpnProfileStore.remove(p1);
	return v1;
}
-----
depth : 2
public boolean remove(String p1){
	ILegacyKeystore v1 = LegacyVpnProfileStore.getService();
	v1.remove(p1, -1);
	int v3 = Log.e(""LegacyVpnProfileStore"", ""Failed to remove vpn profile."", caughtException);
	return 0;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
depth : 2
public void shutdown(){
	p0.shutdownLocked();
	return;
}
-----
depth : 2
public void init(){
	p0.initLocked();
	return;
}
-----
depth : 1
public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	VpnConfig v3 = v2.getVpnConfig();
	return v3;
}
-----
depth : 2
public VpnConfig getVpnConfig(){
	p0.enforceControlPermission();
	return this.mConfig;
}
-----
depth : 1
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
-----
depth : 2
public boolean setPackageAuthorization(String p1, int p2){
	p0.enforceControlPermissionOrInternalCaller();
	int v2 = p0.getAppUid(p1, this.mUserId);
	boolean v3 = ""[Legacy VPN]"".equals(p1);
	return 0;
}
-----
depth : 1
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
-----
depth : 2
public boolean prepare(String p1, String p2, int p3){
	p0.verifyCallingUidAndPackage(p1);
	p0.verifyCallingUidAndPackage(p2);
	boolean v4 = p0.isCurrentPreparedPackage(p1);
	boolean v5 = p0.isCurrentPreparedPackage(p1);
	boolean v6 = p1.equals(""[Legacy VPN]"");
	boolean v7 = Vpn.isVpnPreConsented(this.mContext, p1, p3);
	boolean v8 = p2.equals(""[Legacy VPN]"");
	boolean v9 = p0.isCurrentPreparedPackage(p2);
	return 1;
}
-----
","public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	ILegacyKeystore v11 = LegacyVpnProfileStore.getService();
	v11.remove(p1, -1);
	int v13 = Log.e(""LegacyVpnProfileStore"", ""Failed to remove vpn profile."", caughtException);
	boolean v10 = 0;
	boolean v9 = v10;
	this.mLockdownEnabled = 0;
	this.mLockdownTracker = 0;
	LockdownVpnTracker.shutdownLocked();
	this.mLockdownTracker = 0;
	LockdownVpnTracker.initLocked();
	Binder.restoreCallingIdentity(v8);
	Object v22 = this.mVpns.get(v4);
	Vpn.enforceControlPermission();
	VpnConfig v23 = this.mConfig;
	VpnConfig v20 = v23;
	Object v27 = this.mVpns.get(v4);
	Vpn.enforceControlPermissionOrInternalCaller();
	int v30 = Vpn.getAppUid(p1, this.mUserId);
	boolean v31 = ""[Legacy VPN]"".equals(p1);
	boolean v28 = 0;
	VpnManagerService.throwIfLockdownEnabled();
	Object v35 = this.mVpns.get(v4);
	Vpn.verifyCallingUidAndPackage(p1);
	Vpn.verifyCallingUidAndPackage(p2);
	boolean v40 = Vpn.isCurrentPreparedPackage(p1);
	boolean v41 = Vpn.isCurrentPreparedPackage(p1);
	boolean v42 = p1.equals(""[Legacy VPN]"");
	boolean v43 = Vpn.isVpnPreConsented(this.mContext, p1, 1);
	boolean v44 = p2.equals(""[Legacy VPN]"");
	boolean v45 = Vpn.isCurrentPreparedPackage(p2);
	boolean v36 = 1;
	boolean v32 = v36;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","factoryReset()V","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
6 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 3,4 @8 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 8,9 @19 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
13 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @26 exception:12,
14 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 14,
16 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAlwaysOnVpnPackage(I)Ljava/lang/String; > 1,13 @33 exception:15,
conditional branch(eq, to iindex=-1) 16,7,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z > 1,13,7,7,7 @42 exception:18,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,16,13,17 @45 exception:20,
23 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 23,7,
conditional branch(ne, to iindex=-1) 13,7,
25 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @54 exception:24,
26 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
29 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, remove(Ljava/lang/String;)Z > 26,27 @62 exception:28,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, remove(Ljava/lang/String;)Z > 2 @0 exception:3,
5 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, getService()Landroid/security/legacykeystore/ILegacyKeystore; > @4 exception:4,
invokeinterface < Application, Landroid/security/legacykeystore/ILegacyKeystore, remove(Ljava/lang/String;I)V > 5,1,6 @9 exception:7,
9 = getCaughtException ,
10 = getfield < Application, Landroid/os/ServiceSpecificException, errorCode, <Primordial,I> > 9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,2,9 @25 exception:12,
return 24,
return 4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 7,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,7 @67 exception:30,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, initLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 25 @70 exception:35,
goto (from iindex= 35 to iindex = 6),
40 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnConfig(I)Lcom/android/internal/net/VpnConfig; > 1,13 @79 exception:39,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnConfig()Lcom/android/internal/net/VpnConfig; > 8 @16 exception:10,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermission()V > 1 @1 exception:2,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mConfig, <Application,Lcom/android/internal/net/VpnConfig> > 1,
monitorexit 1,
return 3,
monitorexit 4,
return 11,
conditional branch(eq, to iindex=-1) 40,7,
41 = getfield < Application, Lcom/android/internal/net/VpnConfig, legacy, <Primordial,Z> > 40,
conditional branch(eq, to iindex=-1) 41,7,
42 = getfield < Application, Lcom/android/internal/net/VpnConfig, user, <Application,Ljava/lang/String> > 40,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,42,13,17 @99 exception:43,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,3 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 10,2,4 @16 exception:12,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 10,2 @15 exception:11,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 11 to iindex = 113),
return 9,
monitorexit 6,
return,
46 = invokevirtual < Application, Lcom/android/server/VpnManagerService, prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,44,13 @104 exception:45,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 11,2,3,13 @20 exception:14,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 5,6 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 2,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @13 exception:10,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,3 @18 exception:12,
conditional branch(eq, to iindex=-1) 2,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,9,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @29 exception:16,
conditional branch(ne, to iindex=-1) 17,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @37 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,23 @68 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
28 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnPreConsented(Landroid/content/Context;Ljava/lang/String;I)Z > 26,2,4 @76 exception:27,
conditional branch(ne, to iindex=-1) 28,9,
conditional branch(eq, to iindex=-1) 3,9,
34 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,23 @93 exception:33,
conditional branch(ne, to iindex=-1) 34,9,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,3 @99 exception:35,
conditional branch(eq, to iindex=-1) 36,9,
goto (from iindex= 56 to iindex = 21),
monitorexit 1,
return 14,
monitorexit 6,
return 15,
monitorexit 14,
return,","depth : 0
public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	boolean v9 = this.mVpnProfileStore.remove(""LOCKDOWN_VPN"");
	this.mLockdownEnabled = 0;
	p0.setLockdownTracker(0);
	Binder.restoreCallingIdentity(v8);
	VpnConfig v12 = p0.getVpnConfig(v4);
	p0.setVpnPackageAuthorization(VpnConfig.user, v4, -1);
	boolean v14 = p0.prepareVpn(0, ""[Legacy VPN]"", v4);
	return;
}
-----
depth : 1
public boolean remove(String p1){
	boolean v1 = LegacyVpnProfileStore.remove(p1);
	return v1;
}
-----
depth : 2
public boolean remove(String p1){
	ILegacyKeystore v1 = LegacyVpnProfileStore.getService();
	v1.remove(p1, -1);
	int v3 = Log.e(""LegacyVpnProfileStore"", ""Failed to remove vpn profile."", caughtException);
	return 0;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
depth : 2
public void init(){
	p0.initLocked();
	return;
}
-----
depth : 1
public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	VpnConfig v3 = v2.getVpnConfig();
	return v3;
}
-----
depth : 2
public VpnConfig getVpnConfig(){
	p0.enforceControlPermission();
	return this.mConfig;
}
-----
depth : 1
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
-----
depth : 2
public boolean setPackageAuthorization(String p1, int p2){
	p0.enforceControlPermissionOrInternalCaller();
	int v2 = p0.getAppUid(p1, this.mUserId);
	boolean v3 = ""[Legacy VPN]"".equals(p1);
	return 0;
}
-----
depth : 1
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
-----
depth : 2
public boolean prepare(String p1, String p2, int p3){
	p0.verifyCallingUidAndPackage(p1);
	p0.verifyCallingUidAndPackage(p2);
	boolean v4 = p0.isCurrentPreparedPackage(p1);
	boolean v5 = p0.isCurrentPreparedPackage(p1);
	boolean v6 = p1.equals(""[Legacy VPN]"");
	boolean v7 = Vpn.isVpnPreConsented(this.mContext, p1, p3);
	boolean v8 = p2.equals(""[Legacy VPN]"");
	boolean v9 = p0.isCurrentPreparedPackage(p2);
	return 1;
}
-----
","public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	ILegacyKeystore v11 = LegacyVpnProfileStore.getService();
	v11.remove(p1, -1);
	int v13 = Log.e(""LegacyVpnProfileStore"", ""Failed to remove vpn profile."", caughtException);
	boolean v10 = 0;
	boolean v9 = v10;
	this.mLockdownEnabled = 0;
	this.mLockdownTracker = 0;
	this.mLockdownTracker = 0;
	LockdownVpnTracker.initLocked();
	Binder.restoreCallingIdentity(v8);
	Object v20 = this.mVpns.get(v4);
	Vpn.enforceControlPermission();
	VpnConfig v21 = this.mConfig;
	VpnConfig v18 = v21;
	Object v25 = this.mVpns.get(v4);
	Vpn.enforceControlPermissionOrInternalCaller();
	int v28 = Vpn.getAppUid(p1, this.mUserId);
	boolean v29 = ""[Legacy VPN]"".equals(p1);
	boolean v26 = 0;
	VpnManagerService.throwIfLockdownEnabled();
	Object v33 = this.mVpns.get(v4);
	Vpn.verifyCallingUidAndPackage(p1);
	Vpn.verifyCallingUidAndPackage(p2);
	boolean v38 = Vpn.isCurrentPreparedPackage(p1);
	boolean v39 = Vpn.isCurrentPreparedPackage(p1);
	boolean v40 = p1.equals(""[Legacy VPN]"");
	boolean v41 = Vpn.isVpnPreConsented(this.mContext, p1, 1);
	boolean v42 = p2.equals(""[Legacy VPN]"");
	boolean v43 = Vpn.isCurrentPreparedPackage(p2);
	boolean v34 = 1;
	boolean v30 = v34;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","factoryReset()V","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
6 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 3,4 @8 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, hasUserRestriction(Ljava/lang/String;)Z > 8,9 @19 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
13 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @26 exception:12,
14 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 14,
16 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAlwaysOnVpnPackage(I)Ljava/lang/String; > 1,13 @33 exception:15,
conditional branch(eq, to iindex=-1) 16,7,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z > 1,13,7,7,7 @42 exception:18,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setVpnPackageAuthorization(Ljava/lang/String;II)V > 1,16,13,17 @45 exception:20,
23 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 23,7,
conditional branch(ne, to iindex=-1) 13,7,
25 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @54 exception:24,
26 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
29 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, remove(Ljava/lang/String;)Z > 26,27 @62 exception:28,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, remove(Ljava/lang/String;)Z > 2 @0 exception:3,
5 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, getService()Landroid/security/legacykeystore/ILegacyKeystore; > @4 exception:4,
invokeinterface < Application, Landroid/security/legacykeystore/ILegacyKeystore, remove(Ljava/lang/String;I)V > 5,1,6 @9 exception:7,
9 = getCaughtException ,
10 = getfield < Application, Landroid/os/ServiceSpecificException, errorCode, <Primordial,I> > 9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,2,9 @25 exception:12,
return 24,
return 4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 7,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,7 @67 exception:30,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdown()V > 3 @7 exception:5,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdownLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, initLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 25 @70 exception:35,
goto (from iindex= 35 to iindex = 6),
40 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnConfig(I)Lcom/android/internal/net/VpnConfig; > 1,13 @79 exception:39,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnConfig()Lcom/android/internal/net/VpnConfig; > 8 @16 exception:10,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermission()V > 1 @1 exception:2,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mConfig, <Application,Lcom/android/internal/net/VpnConfig> > 1,
monitorexit 1,
return 3,
monitorexit 4,
return 11,
conditional branch(eq, to iindex=-1) 40,7,
41 = getfield < Application, Lcom/android/internal/net/VpnConfig, legacy, <Primordial,Z> > 40,
conditional branch(eq, to iindex=-1) 41,7,
48 = invokevirtual < Application, Lcom/android/server/VpnManagerService, prepareVpn(Ljava/lang/String;Ljava/lang/String;I)Z > 1,44,44,13 @93 exception:47,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @6 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,4 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 11,2,3,13 @20 exception:14,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 5,6 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 2,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @13 exception:10,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,3 @18 exception:12,
conditional branch(eq, to iindex=-1) 2,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,9,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @29 exception:16,
conditional branch(ne, to iindex=-1) 17,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @37 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,23 @68 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
28 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnPreConsented(Landroid/content/Context;Ljava/lang/String;I)Z > 26,2,4 @76 exception:27,
conditional branch(ne, to iindex=-1) 28,9,
conditional branch(eq, to iindex=-1) 3,9,
34 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,23 @93 exception:33,
conditional branch(ne, to iindex=-1) 34,9,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,3 @99 exception:35,
conditional branch(eq, to iindex=-1) 36,9,
goto (from iindex= 56 to iindex = 21),
monitorexit 1,
return 14,
monitorexit 6,
return 15,
goto (from iindex= 47 to iindex = 11),
monitorexit 14,
return,","depth : 0
public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	boolean v9 = this.mVpnProfileStore.remove(""LOCKDOWN_VPN"");
	this.mLockdownEnabled = 0;
	p0.setLockdownTracker(0);
	Binder.restoreCallingIdentity(v8);
	VpnConfig v12 = p0.getVpnConfig(v4);
	boolean v13 = p0.prepareVpn(""[Legacy VPN]"", ""[Legacy VPN]"", v4);
	return;
}
-----
depth : 1
public boolean remove(String p1){
	boolean v1 = LegacyVpnProfileStore.remove(p1);
	return v1;
}
-----
depth : 2
public boolean remove(String p1){
	ILegacyKeystore v1 = LegacyVpnProfileStore.getService();
	v1.remove(p1, -1);
	int v3 = Log.e(""LegacyVpnProfileStore"", ""Failed to remove vpn profile."", caughtException);
	return 0;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
depth : 2
public void shutdown(){
	p0.shutdownLocked();
	return;
}
-----
depth : 2
public void init(){
	p0.initLocked();
	return;
}
-----
depth : 1
public VpnConfig getVpnConfig(int p1){
	Object v2 = this.mVpns.get(p1);
	VpnConfig v3 = v2.getVpnConfig();
	return v3;
}
-----
depth : 2
public VpnConfig getVpnConfig(){
	p0.enforceControlPermission();
	return this.mConfig;
}
-----
depth : 1
public boolean prepareVpn(String p1, String p2, int p3){
	p0.throwIfLockdownEnabled();
	Object v3 = this.mVpns.get(p3);
	boolean v4 = v3.prepare(p1, p2, 1);
	return v4;
}
-----
depth : 2
public boolean prepare(String p1, String p2, int p3){
	p0.verifyCallingUidAndPackage(p1);
	p0.verifyCallingUidAndPackage(p2);
	boolean v4 = p0.isCurrentPreparedPackage(p1);
	boolean v5 = p0.isCurrentPreparedPackage(p1);
	boolean v6 = p1.equals(""[Legacy VPN]"");
	boolean v7 = Vpn.isVpnPreConsented(this.mContext, p1, p3);
	boolean v8 = p2.equals(""[Legacy VPN]"");
	boolean v9 = p0.isCurrentPreparedPackage(p2);
	return 1;
}
-----
","public void factoryReset(){
	long v8 = Binder.clearCallingIdentity();
	ILegacyKeystore v11 = LegacyVpnProfileStore.getService();
	v11.remove(p1, -1);
	int v13 = Log.e(""LegacyVpnProfileStore"", ""Failed to remove vpn profile."", caughtException);
	boolean v10 = 0;
	boolean v9 = v10;
	this.mLockdownEnabled = 0;
	this.mLockdownTracker = 0;
	LockdownVpnTracker.shutdownLocked();
	this.mLockdownTracker = 0;
	LockdownVpnTracker.initLocked();
	Binder.restoreCallingIdentity(v8);
	Object v22 = this.mVpns.get(v4);
	Vpn.enforceControlPermission();
	VpnConfig v23 = this.mConfig;
	VpnConfig v20 = v23;
	VpnManagerService.throwIfLockdownEnabled();
	Object v28 = this.mVpns.get(v4);
	Vpn.verifyCallingUidAndPackage(p1);
	Vpn.verifyCallingUidAndPackage(p2);
	boolean v33 = Vpn.isCurrentPreparedPackage(p1);
	boolean v34 = Vpn.isCurrentPreparedPackage(p1);
	boolean v35 = p1.equals(""[Legacy VPN]"");
	boolean v36 = Vpn.isVpnPreConsented(this.mContext, p1, 1);
	boolean v37 = p2.equals(""[Legacy VPN]"");
	boolean v38 = Vpn.isCurrentPreparedPackage(p2);
	boolean v29 = 1;
	boolean v25 = v29;
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","getLegacyVpnInfo(I)Lcom/android/internal/net/LegacyVpnInfo;","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLegacyVpnInfo()Lcom/android/internal/net/LegacyVpnInfo; > 8 @14 exception:9,
monitorexit 4,
return 10,","depth : 0
public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	LegacyVpnInfo v3 = v2.getLegacyVpnInfo();
	return v3;
}
-----
","public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	LegacyVpnInfo v3 = v2.getLegacyVpnInfo();
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getLegacyVpnInfo(I)Lcom/android/internal/net/LegacyVpnInfo;","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLegacyVpnInfo()Lcom/android/internal/net/LegacyVpnInfo; > 8 @14 exception:9,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermission()V > 1 @1 exception:2,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLegacyVpnInfoPrivileged()Lcom/android/internal/net/LegacyVpnInfo; > 1 @4 exception:3,
monitorexit 1,
return 4,
monitorexit 4,
return 10,","depth : 0
public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	LegacyVpnInfo v3 = v2.getLegacyVpnInfo();
	return v3;
}
-----
depth : 1
public LegacyVpnInfo getLegacyVpnInfo(){
	p0.enforceControlPermission();
	LegacyVpnInfo v2 = p0.getLegacyVpnInfoPrivileged();
	return v2;
}
-----
","public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	Vpn.enforceControlPermission();
	LegacyVpnInfo v5 = Vpn.getLegacyVpnInfoPrivileged();
	LegacyVpnInfo v3 = v5;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getLegacyVpnInfo(I)Lcom/android/internal/net/LegacyVpnInfo;","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLegacyVpnInfo()Lcom/android/internal/net/LegacyVpnInfo; > 8 @14 exception:9,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermission()V > 1 @1 exception:2,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLegacyVpnInfoPrivileged()Lcom/android/internal/net/LegacyVpnInfo; > 1 @4 exception:3,
monitorenter 1,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isSettingsVpnLocked()Z > 1 @1 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
monitorexit 1,
return 4,
monitorexit 1,
return 4,
monitorexit 4,
return 10,","depth : 0
public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	LegacyVpnInfo v3 = v2.getLegacyVpnInfo();
	return v3;
}
-----
depth : 1
public LegacyVpnInfo getLegacyVpnInfo(){
	p0.enforceControlPermission();
	LegacyVpnInfo v2 = p0.getLegacyVpnInfoPrivileged();
	return v2;
}
-----
depth : 2
public void enforceControlPermission(){
	return;
}
-----
depth : 2
public LegacyVpnInfo getLegacyVpnInfoPrivileged(){
	boolean v1 = p0.isSettingsVpnLocked();
	return 0;
}
-----
","public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	boolean v7 = Vpn.isSettingsVpnLocked();
	LegacyVpnInfo v6 = 0;
	LegacyVpnInfo v3 = v6;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getLegacyVpnInfo(I)Lcom/android/internal/net/LegacyVpnInfo;","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLegacyVpnInfo()Lcom/android/internal/net/LegacyVpnInfo; > 8 @14 exception:9,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermission()V > 1 @1 exception:2,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLegacyVpnInfoPrivileged()Lcom/android/internal/net/LegacyVpnInfo; > 1 @4 exception:3,
monitorenter 1,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isSettingsVpnLocked()Z > 1 @1 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Lcom/android/internal/net/LegacyVpnInfo>@10,
invokespecial < Application, Lcom/android/internal/net/LegacyVpnInfo, <init>()V > 5 @12 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mConfig, <Application,Lcom/android/internal/net/VpnConfig> > 1,
8 = getfield < Application, Lcom/android/internal/net/VpnConfig, user, <Application,Ljava/lang/String> > 7,
putfield 5.< Application, Lcom/android/internal/net/LegacyVpnInfo, key, <Application,Ljava/lang/String> > = 8,
9 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
putfield 5.< Application, Lcom/android/internal/net/LegacyVpnInfo, state, <Primordial,I> > = 9,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkInfo, <Application,Landroid/net/NetworkInfo> > 1,
12 = invokevirtual < Application, Landroid/net/NetworkInfo, isConnected()Z > 10 @27 exception:11,
conditional branch(eq, to iindex=-1) 12,4,
13 = getfield < Application, Lcom/android/server/connectivity/Vpn, mStatusIntent, <Application,Landroid/app/PendingIntent> > 1,
putfield 5.< Application, Lcom/android/internal/net/LegacyVpnInfo, intent, <Application,Landroid/app/PendingIntent> > = 13,
monitorexit 1,
return 5,
monitorexit 1,
return 4,
monitorexit 4,
return 10,","depth : 0
public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	LegacyVpnInfo v3 = v2.getLegacyVpnInfo();
	return v3;
}
-----
depth : 1
public LegacyVpnInfo getLegacyVpnInfo(){
	p0.enforceControlPermission();
	LegacyVpnInfo v2 = p0.getLegacyVpnInfoPrivileged();
	return v2;
}
-----
depth : 2
public void enforceControlPermission(){
	return;
}
-----
depth : 2
public LegacyVpnInfo getLegacyVpnInfoPrivileged(){
	boolean v1 = p0.isSettingsVpnLocked();
	LegacyVpnInfo v1 = new LegacyVpnInfo();
	LegacyVpnInfo.key = VpnConfig.user;
	LegacyVpnInfo.state = this.mLegacyState;
	boolean v3 = this.mNetworkInfo.isConnected();
	LegacyVpnInfo.intent = this.mStatusIntent;
	return v1;
}
-----
","public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	boolean v7 = Vpn.isSettingsVpnLocked();
	LegacyVpnInfo v8 = new LegacyVpnInfo();
	LegacyVpnInfo.key = VpnConfig.user;
	LegacyVpnInfo.state = this.mLegacyState;
	boolean v10 = this.mNetworkInfo.isConnected();
	LegacyVpnInfo.intent = this.mStatusIntent;
	LegacyVpnInfo v6 = v8;
	LegacyVpnInfo v3 = v6;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","getLegacyVpnInfo(I)Lcom/android/internal/net/LegacyVpnInfo;","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,2 @8 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLegacyVpnInfo()Lcom/android/internal/net/LegacyVpnInfo; > 8 @14 exception:9,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermission()V > 1 @1 exception:2,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLegacyVpnInfoPrivileged()Lcom/android/internal/net/LegacyVpnInfo; > 1 @4 exception:3,
monitorenter 1,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isSettingsVpnLocked()Z > 1 @1 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Lcom/android/internal/net/LegacyVpnInfo>@10,
invokespecial < Application, Lcom/android/internal/net/LegacyVpnInfo, <init>()V > 5 @12 exception:6,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mConfig, <Application,Lcom/android/internal/net/VpnConfig> > 1,
8 = getfield < Application, Lcom/android/internal/net/VpnConfig, user, <Application,Ljava/lang/String> > 7,
putfield 5.< Application, Lcom/android/internal/net/LegacyVpnInfo, key, <Application,Ljava/lang/String> > = 8,
9 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
putfield 5.< Application, Lcom/android/internal/net/LegacyVpnInfo, state, <Primordial,I> > = 9,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkInfo, <Application,Landroid/net/NetworkInfo> > 1,
12 = invokevirtual < Application, Landroid/net/NetworkInfo, isConnected()Z > 10 @27 exception:11,
conditional branch(eq, to iindex=-1) 12,4,
monitorexit 1,
return 5,
monitorexit 1,
return 4,
monitorexit 4,
return 10,","depth : 0
public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	LegacyVpnInfo v3 = v2.getLegacyVpnInfo();
	return v3;
}
-----
depth : 1
public LegacyVpnInfo getLegacyVpnInfo(){
	p0.enforceControlPermission();
	LegacyVpnInfo v2 = p0.getLegacyVpnInfoPrivileged();
	return v2;
}
-----
depth : 2
public void enforceControlPermission(){
	return;
}
-----
depth : 2
public LegacyVpnInfo getLegacyVpnInfoPrivileged(){
	boolean v1 = p0.isSettingsVpnLocked();
	LegacyVpnInfo v1 = new LegacyVpnInfo();
	LegacyVpnInfo.key = VpnConfig.user;
	LegacyVpnInfo.state = this.mLegacyState;
	boolean v3 = this.mNetworkInfo.isConnected();
	return v1;
}
-----
","public LegacyVpnInfo getLegacyVpnInfo(int p1){
	Object v2 = this.mVpns.get(p1);
	boolean v7 = Vpn.isSettingsVpnLocked();
	LegacyVpnInfo v8 = new LegacyVpnInfo();
	LegacyVpnInfo.key = VpnConfig.user;
	LegacyVpnInfo.state = this.mLegacyState;
	boolean v10 = this.mNetworkInfo.isConnected();
	LegacyVpnInfo v6 = v8;
	LegacyVpnInfo v3 = v6;
	return v3;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","isVpnLockdownEnabled(I)Z","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
13 = new <Application,Ljava/lang/StringBuilder>@19,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @21 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @26 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,2 @29 exception:18,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,20 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @37 exception:23,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 24 @41 exception:25,
monitorexit 5,
return 10,","depth : 0
public boolean isVpnLockdownEnabled(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
","public boolean isVpnLockdownEnabled(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	VpnManagerService.logw(v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","isVpnLockdownEnabled(I)Z","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdown()Z > 9 @47 exception:11,
monitorexit 5,
return 12,","depth : 0
public boolean isVpnLockdownEnabled(int p1){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.getLockdown();
	return v4;
}
-----
","public boolean isVpnLockdownEnabled(int p1){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.getLockdown();
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","isVpnLockdownEnabled(I)Z","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
13 = new <Application,Ljava/lang/StringBuilder>@19,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 13 @21 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,15 @26 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 13,2 @29 exception:18,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 13,20 @34 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 13 @37 exception:23,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 24 @41 exception:25,
2 = getstatic < Application, Lcom/android/server/VpnManagerService, TAG, <Application,Ljava/lang/String> >,
4 = invokestatic < Application, Landroid/util/Log, w(Ljava/lang/String;Ljava/lang/String;)I > 2,1 @2 exception:3,
return,
monitorexit 5,
return 10,","depth : 0
public boolean isVpnLockdownEnabled(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""User "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" has no Vpn configuration"");
	String v8 = v3.toString();
	VpnManagerService.logw(v8);
	return 0;
}
-----
depth : 1
public void logw(String p1){
	int v1 = Log.w(this.TAG, p1);
	return;
}
-----
","public boolean isVpnLockdownEnabled(int p1){
	Object v3 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	int v11 = Log.w(this.TAG, v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","isVpnLockdownEnabled(I)Z","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:4,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
8 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 6,2 @11 exception:7,
9 = checkcast <Application,Lcom/android/server/connectivity/Vpn>8 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdown()Z > 9 @47 exception:11,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
monitorexit 1,
return 2,
monitorexit 5,
return 12,","depth : 0
public boolean isVpnLockdownEnabled(int p1){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.getLockdown();
	return v4;
}
-----
depth : 1
public boolean getLockdown(){
	return this.mLockdown;
}
-----
","public boolean isVpnLockdownEnabled(int p1){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = this.mLockdown;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","stopVpnProfile(Ljava/lang/String;)V","0","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @16 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, stopVpnProfile(Ljava/lang/String;)V > 12,2 @22 exception:13,
monitorexit 8,
return,","depth : 0
public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	v4.stopVpnProfile(p1);
	return;
}
-----
","public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	v4.stopVpnProfile(p1);
	return;
}
","NONE"
"Lcom/android/server/VpnManagerService","stopVpnProfile(Ljava/lang/String;)V","1","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAppUid(Ljava/lang/String;I)I > 1,2,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,3,
return,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @16 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, stopVpnProfile(Ljava/lang/String;)V > 12,2 @22 exception:13,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @6 exception:6,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentIkev2VpnLocked(Ljava/lang/String;)Z > 1,2 @9 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, stopVpnRunnerAndNotifyAppLocked(Ljava/lang/String;)V > 1,2 @15 exception:10,
monitorexit 1,
return,
monitorexit 8,
return,","depth : 0
public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	v4.stopVpnProfile(p1);
	return;
}
-----
depth : 1
public void verifyCallingUidAndPackage(String p1, int p2){
	return;
}
-----
depth : 1
public void stopVpnProfile(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.enforceNotRestrictedUser();
	boolean v3 = p0.isCurrentIkev2VpnLocked(p1);
	p0.stopVpnRunnerAndNotifyAppLocked(p1);
	return;
}
-----
","public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, ""No package name provided"");
	Vpn.enforceNotRestrictedUser();
	boolean v10 = Vpn.isCurrentIkev2VpnLocked(p1);
	Vpn.stopVpnRunnerAndNotifyAppLocked(p1);
	return;
}
","NONE"
"Lcom/android/server/VpnManagerService","stopVpnProfile(Ljava/lang/String;)V","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAppUid(Ljava/lang/String;I)I > 1,2,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,3,
return,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @16 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, stopVpnProfile(Ljava/lang/String;)V > 12,2 @22 exception:13,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @6 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentIkev2VpnLocked(Ljava/lang/String;)Z > 1,2 @9 exception:7,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, stopVpnRunnerAndNotifyAppLocked(Ljava/lang/String;)V > 1,2 @15 exception:10,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mOwnerUID, <Primordial,I> > 1,
5 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @16 exception:13,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @20 exception:15,
19 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,17,12,12,2,14,16,6,6,6 @31 exception:18,
goto (from iindex= 21 to iindex = 2),
20 = phi  19,6,
23 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$VpnRunner, exit()V > 23 @39 exception:24,
conditional branch(eq, to iindex=-1) 20,6,
26 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @44 exception:25,
conditional branch(eq, to iindex=-1) 26,6,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, notifyVpnManagerVpnStopped(Ljava/lang/String;ILandroid/content/Intent;)V > 1,2,3,20 @50 exception:27,
return,
monitorexit 1,
return,
monitorexit 8,
return,","depth : 0
public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	v4.stopVpnProfile(p1);
	return;
}
-----
depth : 1
public void verifyCallingUidAndPackage(String p1, int p2){
	return;
}
-----
depth : 1
public void stopVpnProfile(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.enforceNotRestrictedUser();
	boolean v3 = p0.isCurrentIkev2VpnLocked(p1);
	p0.stopVpnRunnerAndNotifyAppLocked(p1);
	return;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isCurrentIkev2VpnLocked(String p1){
	boolean v1 = p0.isCurrentPreparedPackage(p1);
	boolean v2 = p0.isIkev2VpnRunner();
	return phiInstruction;
}
-----
depth : 2
public void stopVpnRunnerAndNotifyAppLocked(String p1){
	boolean v1 = SdkLevel.isAtLeastT();
	boolean v2 = Vpn.isVpnApp(p1);
	String v3 = p0.getSessionKeyLocked();
	VpnProfileState v4 = p0.makeVpnProfileStateLocked();
	Intent v5 = p0.buildVpnManagerEventIntent(""android.net.category.EVENT_DEACTIVATED_BY_USER"", -1, -1, p1, v3, v4, 0, 0, 0);
	this.mVpnRunner.exit();
	boolean v7 = Vpn.isVpnApp(p1);
	p0.notifyVpnManagerVpnStopped(p1, this.mOwnerUID, phiInstruction);
	return;
}
-----
","public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, ""No package name provided"");
	long v10 = Binder.clearCallingIdentity();
	UserInfo v11 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v12 = v11.isRestricted();
	Binder.restoreCallingIdentity(v10);
	boolean v15 = Vpn.isCurrentPreparedPackage(p1);
	boolean v16 = Vpn.isIkev2VpnRunner();
	boolean v14 = phiInstruction;
	boolean v18 = SdkLevel.isAtLeastT();
	boolean v19 = Vpn.isVpnApp(p1);
	String v20 = Vpn.getSessionKeyLocked();
	VpnProfileState v21 = Vpn.makeVpnProfileStateLocked();
	Intent v22 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_DEACTIVATED_BY_USER"", -1, -1, p1, v20, v21, 0, 0, 0);
	this.mVpnRunner.exit();
	boolean v24 = Vpn.isVpnApp(p1);
	Vpn.notifyVpnManagerVpnStopped(p1, this.mOwnerUID, phiInstruction);
	return;
}
","NONE"
"Lcom/android/server/VpnManagerService","stopVpnProfile(Ljava/lang/String;)V","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAppUid(Ljava/lang/String;I)I > 1,2,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,3,
return,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
11 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 9,7 @16 exception:10,
12 = checkcast <Application,Lcom/android/server/connectivity/Vpn>11 <Application,Lcom/android/server/connectivity/Vpn>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, stopVpnProfile(Ljava/lang/String;)V > 12,2 @22 exception:13,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @6 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentIkev2VpnLocked(Ljava/lang/String;)Z > 1,2 @9 exception:7,
4 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, stopVpnRunnerAndNotifyAppLocked(Ljava/lang/String;)V > 1,2 @15 exception:10,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mOwnerUID, <Primordial,I> > 1,
5 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @16 exception:13,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @20 exception:15,
19 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,17,12,12,2,14,16,6,6,6 @31 exception:18,
goto (from iindex= 21 to iindex = 2),
20 = phi  19,6,
23 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$VpnRunner, exit()V > 23 @39 exception:24,
conditional branch(eq, to iindex=-1) 20,6,
26 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @44 exception:25,
conditional branch(eq, to iindex=-1) 26,6,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, notifyVpnManagerVpnStopped(Ljava/lang/String;ILandroid/content/Intent;)V > 1,2,3,20 @50 exception:27,
return,
monitorexit 1,
return,
monitorexit 8,
return,","depth : 0
public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	Object v4 = this.mVpns.get(v3);
	v4.stopVpnProfile(p1);
	return;
}
-----
depth : 1
public void verifyCallingUidAndPackage(String p1, int p2){
	return;
}
-----
depth : 1
public void stopVpnProfile(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.enforceNotRestrictedUser();
	boolean v3 = p0.isCurrentIkev2VpnLocked(p1);
	p0.stopVpnRunnerAndNotifyAppLocked(p1);
	return;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isCurrentIkev2VpnLocked(String p1){
	boolean v1 = p0.isCurrentPreparedPackage(p1);
	boolean v2 = p0.isIkev2VpnRunner();
	return phiInstruction;
}
-----
depth : 2
public void stopVpnRunnerAndNotifyAppLocked(String p1){
	boolean v1 = SdkLevel.isAtLeastT();
	boolean v2 = Vpn.isVpnApp(p1);
	String v3 = p0.getSessionKeyLocked();
	VpnProfileState v4 = p0.makeVpnProfileStateLocked();
	Intent v5 = p0.buildVpnManagerEventIntent(""android.net.category.EVENT_DEACTIVATED_BY_USER"", -1, -1, p1, v3, v4, 0, 0, 0);
	this.mVpnRunner.exit();
	boolean v7 = Vpn.isVpnApp(p1);
	p0.notifyVpnManagerVpnStopped(p1, this.mOwnerUID, phiInstruction);
	return;
}
-----
","public void stopVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	Object v6 = this.mVpns.get(v5);
	Object v8 = Objects.requireNonNull(p1, ""No package name provided"");
	long v10 = Binder.clearCallingIdentity();
	UserInfo v11 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v12 = v11.isRestricted();
	Binder.restoreCallingIdentity(v10);
	boolean v15 = Vpn.isCurrentPreparedPackage(p1);
	boolean v16 = Vpn.isIkev2VpnRunner();
	boolean v14 = phiInstruction;
	boolean v18 = SdkLevel.isAtLeastT();
	boolean v19 = Vpn.isVpnApp(p1);
	String v20 = Vpn.getSessionKeyLocked();
	VpnProfileState v21 = Vpn.makeVpnProfileStateLocked();
	Intent v22 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_DEACTIVATED_BY_USER"", -1, -1, p1, v20, v21, 0, 0, 0);
	this.mVpnRunner.exit();
	boolean v24 = Vpn.isVpnApp(p1);
	Vpn.notifyVpnManagerVpnStopped(p1, this.mOwnerUID, phiInstruction);
	return;
}
","NONE"

"Lcom/android/server/VpnManagerService","setAppExclusionList(ILjava/lang/String;Ljava/util/List;)Z","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:5,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
41 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAppExclusionList(Ljava/lang/String;Ljava/util/List;)Z > 11,3,4 @19 exception:40,
monitorexit 7,
return 41,","depth : 0
public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.setAppExclusionList(p2, p3);
	return v4;
}
-----
","public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.setAppExclusionList(p2, p3);
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setAppExclusionList(ILjava/lang/String;Ljava/util/List;)Z","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:5,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
41 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAppExclusionList(Ljava/lang/String;Ljava/util/List;)Z > 11,3,4 @19 exception:40,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @1 exception:4,
6 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, storeAppExclusionList(Ljava/lang/String;Ljava/util/List;)Z > 1,2,3 @4 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, updateAppExclusionList(Ljava/util/List;)V > 1,3 @13 exception:8,
monitorexit 1,
return 12,
monitorexit 7,
return 41,","depth : 0
public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.setAppExclusionList(p2, p3);
	return v4;
}
-----
depth : 1
public boolean setAppExclusionList(String p1, List p2){
	p0.enforceNotRestrictedUser();
	boolean v2 = p0.storeAppExclusionList(p1, p2);
	p0.updateAppExclusionList(p2);
	return 1;
}
-----
","public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	Vpn.enforceNotRestrictedUser();
	boolean v6 = Vpn.storeAppExclusionList(p2, p3);
	Vpn.updateAppExclusionList(p3);
	boolean v4 = 1;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setAppExclusionList(ILjava/lang/String;Ljava/util/List;)Z","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:5,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
41 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAppExclusionList(Ljava/lang/String;Ljava/util/List;)Z > 11,3,4 @19 exception:40,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @1 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
6 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, storeAppExclusionList(Ljava/lang/String;Ljava/util/List;)Z > 1,2,3 @4 exception:5,
4 = getstatic < Application, Lcom/android/server/vcn/util/PersistableBundleUtils, STRING_SERIALIZER, <Application,Lcom/android/server/vcn/util/PersistableBundleUtils$Serializer> >,
6 = invokestatic < Application, Lcom/android/server/vcn/util/PersistableBundleUtils, fromList(Ljava/util/List;Lcom/android/server/vcn/util/PersistableBundleUtils$Serializer;)Landroid/os/PersistableBundle; > 3,4 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/vcn/util/PersistableBundleUtils, toDiskStableBytes(Landroid/os/PersistableBundle;)[B > 6 @6 exception:7,
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @10 exception:18,
21 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @14 exception:20,
23 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnAppExcludedForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @18 exception:22,
25 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, put(Ljava/lang/String;[B)Z > 21,23,8 @22 exception:24,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @25 exception:31,
return 32,
conditional branch(ne, to iindex=-1) 6,7,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, updateAppExclusionList(Ljava/util/List;)V > 1,3 @13 exception:8,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mConfig, <Application,Lcom/android/internal/net/VpnConfig> > 1,
9 = invokestatic < Application, Ljava/util/List, copyOf(Ljava/util/Collection;)Ljava/util/List; > 2 @13 exception:8,
putfield 7.< Application, Lcom/android/internal/net/VpnConfig, disallowedApplications, <Application,Ljava/util/List> > = 9,
10 = new <Application,Landroid/net/NetworkCapabilities$Builder>@19,
11 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkCapabilities, <Application,Landroid/net/NetworkCapabilities> > 1,
invokespecial < Application, Landroid/net/NetworkCapabilities$Builder, <init>(Landroid/net/NetworkCapabilities;)V > 10,11 @23 exception:12,
13 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, createUserAndRestrictedProfilesRanges(ILjava/util/List;Ljava/util/List;)Ljava/util/Set; > 1,13,4,2 @29 exception:14,
17 = invokevirtual < Application, Landroid/net/NetworkCapabilities$Builder, setUids(Ljava/util/Set;)Landroid/net/NetworkCapabilities$Builder; > 10,15 @33 exception:16,
19 = invokevirtual < Application, Landroid/net/NetworkCapabilities$Builder, build()Landroid/net/NetworkCapabilities; > 17 @37 exception:18,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mNetworkCapabilities, <Application,Landroid/net/NetworkCapabilities> > = 19,
20 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
invokestatic < Application, Lcom/android/server/connectivity/Vpn, doSendNetworkCapabilities(Landroid/net/NetworkAgent;Landroid/net/NetworkCapabilities;)V > 20,19 @45 exception:21,
monitorexit 1,
return,
monitorexit 1,
return 12,
monitorexit 7,
return 41,","depth : 0
public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.setAppExclusionList(p2, p3);
	return v4;
}
-----
depth : 1
public boolean setAppExclusionList(String p1, List p2){
	p0.enforceNotRestrictedUser();
	boolean v2 = p0.storeAppExclusionList(p1, p2);
	p0.updateAppExclusionList(p2);
	return 1;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean storeAppExclusionList(String p1, List p2){
	PersistableBundle v1 = PersistableBundleUtils.fromList(p2, PersistableBundleUtils.STRING_SERIALIZER);
	byte[] v2 = PersistableBundleUtils.toDiskStableBytes(v1);
	long v3 = Binder.clearCallingIdentity();
	VpnProfileStore v4 = p0.getVpnProfileStore();
	String v5 = p0.getVpnAppExcludedForPackage(p1);
	boolean v6 = v4.put(v5, v2);
	Binder.restoreCallingIdentity(v3);
	return 1;
}
-----
depth : 2
public void updateAppExclusionList(List p1){
	boolean v1 = p0.isIkev2VpnRunner();
	List v2 = List.copyOf(p1);
	VpnConfig.disallowedApplications = v2;
	NetworkCapabilities$Builder v2 = new NetworkCapabilities$Builder(this.mNetworkCapabilities);
	Set v4 = p0.createUserAndRestrictedProfilesRanges(this.mUserId, 0, p1);
	NetworkCapabilities$Builder v5 = v2.setUids(v4);
	NetworkCapabilities v6 = v5.build();
	this.mNetworkCapabilities = v6;
	Vpn.doSendNetworkCapabilities(this.mNetworkAgent, v6);
	return;
}
-----
","public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	long v6 = Binder.clearCallingIdentity();
	UserInfo v7 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v8 = v7.isRestricted();
	Binder.restoreCallingIdentity(v6);
	PersistableBundle v11 = PersistableBundleUtils.fromList(p2, PersistableBundleUtils.STRING_SERIALIZER);
	byte[] v12 = PersistableBundleUtils.toDiskStableBytes(v11);
	long v13 = Binder.clearCallingIdentity();
	VpnProfileStore v14 = Vpn.getVpnProfileStore();
	String v15 = Vpn.getVpnAppExcludedForPackage(p1);
	boolean v16 = v14.put(v15, v12);
	Binder.restoreCallingIdentity(v13);
	boolean v10 = 1;
	boolean v19 = Vpn.isIkev2VpnRunner();
	List v20 = List.copyOf(p2);
	VpnConfig.disallowedApplications = v20;
	NetworkCapabilities$Builder v21 = new NetworkCapabilities$Builder(this.mNetworkCapabilities);
	Set v23 = Vpn.createUserAndRestrictedProfilesRanges(this.mUserId, 0, p2);
	NetworkCapabilities$Builder v24 = v21.setUids(v23);
	NetworkCapabilities v25 = v24.build();
	this.mNetworkCapabilities = v25;
	Vpn.doSendNetworkCapabilities(this.mNetworkAgent, v25);
	boolean v4 = 1;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setAppExclusionList(ILjava/lang/String;Ljava/util/List;)Z","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceSettingsPermission()V > 1 @0 exception:5,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Lcom/android/server/connectivity/Vpn>10 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 11,12,
41 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAppExclusionList(Ljava/lang/String;Ljava/util/List;)Z > 11,3,4 @19 exception:40,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @1 exception:4,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
6 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, storeAppExclusionList(Ljava/lang/String;Ljava/util/List;)Z > 1,2,3 @4 exception:5,
4 = getstatic < Application, Lcom/android/server/vcn/util/PersistableBundleUtils, STRING_SERIALIZER, <Application,Lcom/android/server/vcn/util/PersistableBundleUtils$Serializer> >,
6 = invokestatic < Application, Lcom/android/server/vcn/util/PersistableBundleUtils, fromList(Ljava/util/List;Lcom/android/server/vcn/util/PersistableBundleUtils$Serializer;)Landroid/os/PersistableBundle; > 3,4 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/vcn/util/PersistableBundleUtils, toDiskStableBytes(Landroid/os/PersistableBundle;)[B > 6 @6 exception:7,
12 = getCaughtException ,
16 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 13,14,12 @41 exception:15,
return 17,
conditional branch(ne, to iindex=-1) 6,7,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, updateAppExclusionList(Ljava/util/List;)V > 1,3 @13 exception:8,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mConfig, <Application,Lcom/android/internal/net/VpnConfig> > 1,
9 = invokestatic < Application, Ljava/util/List, copyOf(Ljava/util/Collection;)Ljava/util/List; > 2 @13 exception:8,
putfield 7.< Application, Lcom/android/internal/net/VpnConfig, disallowedApplications, <Application,Ljava/util/List> > = 9,
10 = new <Application,Landroid/net/NetworkCapabilities$Builder>@19,
11 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkCapabilities, <Application,Landroid/net/NetworkCapabilities> > 1,
invokespecial < Application, Landroid/net/NetworkCapabilities$Builder, <init>(Landroid/net/NetworkCapabilities;)V > 10,11 @23 exception:12,
13 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, createUserAndRestrictedProfilesRanges(ILjava/util/List;Ljava/util/List;)Ljava/util/Set; > 1,13,4,2 @29 exception:14,
17 = invokevirtual < Application, Landroid/net/NetworkCapabilities$Builder, setUids(Ljava/util/Set;)Landroid/net/NetworkCapabilities$Builder; > 10,15 @33 exception:16,
19 = invokevirtual < Application, Landroid/net/NetworkCapabilities$Builder, build()Landroid/net/NetworkCapabilities; > 17 @37 exception:18,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mNetworkCapabilities, <Application,Landroid/net/NetworkCapabilities> > = 19,
20 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
invokestatic < Application, Lcom/android/server/connectivity/Vpn, doSendNetworkCapabilities(Landroid/net/NetworkAgent;Landroid/net/NetworkCapabilities;)V > 20,19 @45 exception:21,
monitorexit 1,
return,
monitorexit 1,
return 12,
monitorexit 7,
return 41,","depth : 0
public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	boolean v4 = v3.setAppExclusionList(p2, p3);
	return v4;
}
-----
depth : 1
public boolean setAppExclusionList(String p1, List p2){
	p0.enforceNotRestrictedUser();
	boolean v2 = p0.storeAppExclusionList(p1, p2);
	p0.updateAppExclusionList(p2);
	return 1;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean storeAppExclusionList(String p1, List p2){
	PersistableBundle v1 = PersistableBundleUtils.fromList(p2, PersistableBundleUtils.STRING_SERIALIZER);
	byte[] v2 = PersistableBundleUtils.toDiskStableBytes(v1);
	int v3 = Log.e(""Vpn"", ""problem writing into stream"", caughtException);
	return 0;
}
-----
depth : 2
public void updateAppExclusionList(List p1){
	boolean v1 = p0.isIkev2VpnRunner();
	List v2 = List.copyOf(p1);
	VpnConfig.disallowedApplications = v2;
	NetworkCapabilities$Builder v2 = new NetworkCapabilities$Builder(this.mNetworkCapabilities);
	Set v4 = p0.createUserAndRestrictedProfilesRanges(this.mUserId, 0, p1);
	NetworkCapabilities$Builder v5 = v2.setUids(v4);
	NetworkCapabilities v6 = v5.build();
	this.mNetworkCapabilities = v6;
	Vpn.doSendNetworkCapabilities(this.mNetworkAgent, v6);
	return;
}
-----
","public boolean setAppExclusionList(int p1, String p2, List p3){
	Object v3 = this.mVpns.get(p1);
	long v6 = Binder.clearCallingIdentity();
	UserInfo v7 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v8 = v7.isRestricted();
	Binder.restoreCallingIdentity(v6);
	PersistableBundle v11 = PersistableBundleUtils.fromList(p2, PersistableBundleUtils.STRING_SERIALIZER);
	byte[] v12 = PersistableBundleUtils.toDiskStableBytes(v11);
	int v13 = Log.e(""Vpn"", ""problem writing into stream"", caughtException);
	boolean v10 = 0;
	boolean v15 = Vpn.isIkev2VpnRunner();
	List v16 = List.copyOf(p2);
	VpnConfig.disallowedApplications = v16;
	NetworkCapabilities$Builder v17 = new NetworkCapabilities$Builder(this.mNetworkCapabilities);
	Set v19 = Vpn.createUserAndRestrictedProfilesRanges(this.mUserId, 0, p2);
	NetworkCapabilities$Builder v20 = v17.setUids(v19);
	NetworkCapabilities v21 = v20.build();
	this.mNetworkCapabilities = v21;
	Vpn.doSendNetworkCapabilities(this.mNetworkAgent, v21);
	boolean v4 = 1;
	return v4;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","addVpnAddress(Ljava/lang/String;I)Z","0","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, addAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorexit 9,
return 16,","depth : 0
public boolean addVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.addAddress(p1, p2);
	return v5;
}
-----
","public boolean addVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.addAddress(p1, p2);
	return v5;
}
","NONE"
"Lcom/android/server/VpnManagerService","addVpnAddress(Ljava/lang/String;I)Z","1","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, addAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mInterface, <Application,Ljava/lang/String> > 1,
9 = invokespecial < Application, Lcom/android/server/connectivity/Vpn, jniAddAddress(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,2,3 @12 exception:8,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeLinkProperties()Landroid/net/LinkProperties; > 1 @18 exception:11,
invokestatic < Application, Lcom/android/server/connectivity/Vpn, doSendLinkProperties(Landroid/net/NetworkAgent;Landroid/net/LinkProperties;)V > 10,12 @22 exception:13,
monitorexit 1,
return 9,
monitorexit 9,
return 16,","depth : 0
public boolean addVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.addAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean addAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	boolean v2 = p0.jniAddAddress(this.mInterface, p1, p2);
	LinkProperties v3 = p0.makeLinkProperties();
	Vpn.doSendLinkProperties(this.mNetworkAgent, v3);
	return v2;
}
-----
","public boolean addVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v7 = Vpn.isCallerEstablishedOwnerLocked();
	boolean v8 = Vpn.jniAddAddress(this.mInterface, p1, p2);
	LinkProperties v9 = Vpn.makeLinkProperties();
	Vpn.doSendLinkProperties(this.mNetworkAgent, v9);
	boolean v6 = v8;
	return v6;
}
","NONE"
"Lcom/android/server/VpnManagerService","addVpnAddress(Ljava/lang/String;I)Z","1","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, addAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
monitorexit 1,
return 6,
monitorexit 9,
return 16,","depth : 0
public boolean addVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.addAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean addAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	return 0;
}
-----
","public boolean addVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v7 = Vpn.isCallerEstablishedOwnerLocked();
	boolean v6 = 0;
	return v6;
}
","NONE"
"Lcom/android/server/VpnManagerService","addVpnAddress(Ljava/lang/String;I)Z","2","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, addAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isRunningLocked()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
14 = phi  12,4,
return 14,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mInterface, <Application,Ljava/lang/String> > 1,
9 = invokespecial < Application, Lcom/android/server/connectivity/Vpn, jniAddAddress(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,2,3 @12 exception:8,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeLinkProperties()Landroid/net/LinkProperties; > 1 @18 exception:11,
invokestatic < Application, Lcom/android/server/connectivity/Vpn, doSendLinkProperties(Landroid/net/NetworkAgent;Landroid/net/LinkProperties;)V > 10,12 @22 exception:13,
3 = instanceof 1 <Application,Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper>,
conditional branch(eq, to iindex=-1) 3,4,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper>1 <Application,Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper>,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper, doSendLinkProperties(Landroid/net/LinkProperties;)V > 6,2 @6 exception:7,
goto (from iindex= 4 to iindex = 4),
return,
monitorexit 1,
return 9,
monitorexit 9,
return 16,","depth : 0
public boolean addVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.addAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean addAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	boolean v2 = p0.jniAddAddress(this.mInterface, p1, p2);
	LinkProperties v3 = p0.makeLinkProperties();
	Vpn.doSendLinkProperties(this.mNetworkAgent, v3);
	return v2;
}
-----
depth : 2
public boolean isCallerEstablishedOwnerLocked(){
	boolean v1 = p0.isRunningLocked();
	return phiInstruction;
}
-----
depth : 2
public void doSendLinkProperties(NetworkAgent p1, LinkProperties p2){
	p1.doSendLinkProperties(p2);
	return;
}
-----
","public boolean addVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isRunningLocked();
	boolean v7 = phiInstruction;
	boolean v9 = Vpn.jniAddAddress(this.mInterface, p1, p2);
	LinkProperties v10 = Vpn.makeLinkProperties();
	this.mNetworkAgent.doSendLinkProperties(v10);
	boolean v6 = v9;
	return v6;
}
","NONE"
"Lcom/android/server/VpnManagerService","addVpnAddress(Ljava/lang/String;I)Z","2","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, addAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isRunningLocked()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
14 = phi  12,4,
return 14,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/connectivity/Vpn, mInterface, <Application,Ljava/lang/String> > 1,
9 = invokespecial < Application, Lcom/android/server/connectivity/Vpn, jniAddAddress(Ljava/lang/String;Ljava/lang/String;I)Z > 1,7,2,3 @12 exception:8,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkAgent, <Application,Landroid/net/NetworkAgent> > 1,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeLinkProperties()Landroid/net/LinkProperties; > 1 @18 exception:11,
invokestatic < Application, Lcom/android/server/connectivity/Vpn, doSendLinkProperties(Landroid/net/NetworkAgent;Landroid/net/LinkProperties;)V > 10,12 @22 exception:13,
3 = instanceof 1 <Application,Lcom/android/server/connectivity/Vpn$VpnNetworkAgentWrapper>,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Landroid/net/NetworkAgent, sendLinkProperties(Landroid/net/LinkProperties;)V > 1,2 @10 exception:5,
return,
monitorexit 1,
return 9,
monitorexit 9,
return 16,","depth : 0
public boolean addVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.addAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean addAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	boolean v2 = p0.jniAddAddress(this.mInterface, p1, p2);
	LinkProperties v3 = p0.makeLinkProperties();
	Vpn.doSendLinkProperties(this.mNetworkAgent, v3);
	return v2;
}
-----
depth : 2
public boolean isCallerEstablishedOwnerLocked(){
	boolean v1 = p0.isRunningLocked();
	return phiInstruction;
}
-----
depth : 2
public void doSendLinkProperties(NetworkAgent p1, LinkProperties p2){
	p1.sendLinkProperties(p2);
	return;
}
-----
","public boolean addVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isRunningLocked();
	boolean v7 = phiInstruction;
	boolean v9 = Vpn.jniAddAddress(this.mInterface, p1, p2);
	LinkProperties v10 = Vpn.makeLinkProperties();
	this.mNetworkAgent.sendLinkProperties(v10);
	boolean v6 = v9;
	return v6;
}
","NONE"
"Lcom/android/server/VpnManagerService","addVpnAddress(Ljava/lang/String;I)Z","2","4 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 4 @2 exception:5,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
8 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 6 @6 exception:7,
9 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 9,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @13 exception:10,
11 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
13 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 11,8 @18 exception:12,
14 = checkcast <Application,Lcom/android/server/connectivity/Vpn>13 <Application,Lcom/android/server/connectivity/Vpn>,
16 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, addAddress(Ljava/lang/String;I)Z > 14,2,3 @24 exception:15,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCallerEstablishedOwnerLocked()Z > 1 @1 exception:4,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isRunningLocked()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
14 = phi  12,4,
return 14,
conditional branch(ne, to iindex=-1) 5,6,
monitorexit 1,
return 6,
monitorexit 9,
return 16,","depth : 0
public boolean addVpnAddress(String p1, int p2){
	int v1 = this.mDeps.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v4 = this.mVpns.get(v2);
	boolean v5 = v4.addAddress(p1, p2);
	return v5;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public boolean addAddress(String p1, int p2){
	boolean v1 = p0.isCallerEstablishedOwnerLocked();
	return 0;
}
-----
depth : 2
public boolean isCallerEstablishedOwnerLocked(){
	boolean v1 = p0.isRunningLocked();
	return phiInstruction;
}
-----
","public boolean addVpnAddress(String p1, int p2){
	int v2 = Binder.getCallingUid();
	int v1 = v2;
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	boolean v8 = Vpn.isRunningLocked();
	boolean v7 = phiInstruction;
	boolean v6 = 0;
	return v6;
}
","NONE"

"Lcom/android/server/VpnManagerService","setVpnPackageAuthorization(Ljava/lang/String;II)V","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,3 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 10,2,4 @16 exception:12,
monitorexit 6,
return,","depth : 0
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
-----
","public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setVpnPackageAuthorization(Ljava/lang/String;II)V","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,3 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 10,2,4 @16 exception:12,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 10,2 @15 exception:11,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 11 to iindex = 113),
return 9,
monitorexit 6,
return,","depth : 0
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
-----
depth : 1
public boolean setPackageAuthorization(String p1, int p2){
	p0.enforceControlPermissionOrInternalCaller();
	int v2 = p0.getAppUid(p1, this.mUserId);
	boolean v3 = ""[Legacy VPN]"".equals(p1);
	return 0;
}
-----
","public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	Vpn.enforceControlPermissionOrInternalCaller();
	int v5 = Vpn.getAppUid(p1, this.mUserId);
	boolean v6 = ""[Legacy VPN]"".equals(p1);
	boolean v3 = 0;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setVpnPackageAuthorization(Ljava/lang/String;II)V","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,3 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 10,2,4 @16 exception:12,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @5 exception:6,
6 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 4,2 @2 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 8 @15 exception:9,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @19 exception:11,
14 = invokevirtual < Application, Landroid/content/pm/PackageManager, getPackageUidAsUser(Ljava/lang/String;I)I > 10,2,3 @23 exception:13,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @37 exception:16,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 10,2 @15 exception:11,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 11 to iindex = 113),
return 9,
monitorexit 6,
return,","depth : 0
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
-----
depth : 1
public boolean setPackageAuthorization(String p1, int p2){
	p0.enforceControlPermissionOrInternalCaller();
	int v2 = p0.getAppUid(p1, this.mUserId);
	boolean v3 = ""[Legacy VPN]"".equals(p1);
	return 0;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
depth : 2
public int getAppUid(String p1, int p2){
	boolean v1 = ""[Legacy VPN]"".equals(p1);
	PackageManager v2 = this.mContext.getPackageManager();
	long v3 = Binder.clearCallingIdentity();
	int v4 = v2.getPackageUidAsUser(p1, p2);
	Binder.restoreCallingIdentity(v3);
	return -1;
}
-----
","public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v7 = ""[Legacy VPN]"".equals(p1);
	PackageManager v8 = this.mContext.getPackageManager();
	long v9 = Binder.clearCallingIdentity();
	int v10 = v8.getPackageUidAsUser(p1, this.mUserId);
	Binder.restoreCallingIdentity(v9);
	int v6 = -1;
	boolean v12 = ""[Legacy VPN]"".equals(p1);
	boolean v3 = 0;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setVpnPackageAuthorization(Ljava/lang/String;II)V","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,3 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 10,2,4 @16 exception:12,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @5 exception:6,
6 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 4,2 @2 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 8 @15 exception:9,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @19 exception:11,
14 = invokevirtual < Application, Landroid/content/pm/PackageManager, getPackageUidAsUser(Ljava/lang/String;I)I > 10,2,3 @23 exception:13,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @27 exception:19,
return 14,
conditional branch(eq, to iindex=-1) 7,8,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 10,2 @15 exception:11,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 11 to iindex = 113),
return 9,
monitorexit 6,
return,","depth : 0
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
-----
depth : 1
public boolean setPackageAuthorization(String p1, int p2){
	p0.enforceControlPermissionOrInternalCaller();
	int v2 = p0.getAppUid(p1, this.mUserId);
	boolean v3 = ""[Legacy VPN]"".equals(p1);
	return 0;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
depth : 2
public int getAppUid(String p1, int p2){
	boolean v1 = ""[Legacy VPN]"".equals(p1);
	PackageManager v2 = this.mContext.getPackageManager();
	long v3 = Binder.clearCallingIdentity();
	int v4 = v2.getPackageUidAsUser(p1, p2);
	Binder.restoreCallingIdentity(v3);
	return v4;
}
-----
","public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v7 = ""[Legacy VPN]"".equals(p1);
	PackageManager v8 = this.mContext.getPackageManager();
	long v9 = Binder.clearCallingIdentity();
	int v10 = v8.getPackageUidAsUser(p1, this.mUserId);
	Binder.restoreCallingIdentity(v9);
	int v6 = v10;
	boolean v12 = ""[Legacy VPN]"".equals(p1);
	boolean v3 = 0;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setVpnPackageAuthorization(Ljava/lang/String;II)V","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,3 @0 exception:5,
6 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 7,3 @8 exception:8,
10 = checkcast <Application,Lcom/android/server/connectivity/Vpn>9 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 10,2,4 @16 exception:12,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAppUid(Ljava/lang/String;I)I > 1,2,5 @5 exception:6,
6 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 4,2 @2 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
21 = invokestatic < Application, Landroid/os/Process, myUid()I > @8 exception:20,
return 21,
conditional branch(eq, to iindex=-1) 7,8,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 10,2 @15 exception:11,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 11 to iindex = 113),
return 9,
monitorexit 6,
return,","depth : 0
public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v3 = v2.setPackageAuthorization(p1, p3);
	return;
}
-----
depth : 1
public boolean setPackageAuthorization(String p1, int p2){
	p0.enforceControlPermissionOrInternalCaller();
	int v2 = p0.getAppUid(p1, this.mUserId);
	boolean v3 = ""[Legacy VPN]"".equals(p1);
	return 0;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
depth : 2
public int getAppUid(String p1, int p2){
	boolean v1 = ""[Legacy VPN]"".equals(p1);
	int v2 = Process.myUid();
	return v2;
}
-----
","public void setVpnPackageAuthorization(String p1, int p2, int p3){
	Object v2 = this.mVpns.get(p2);
	boolean v7 = ""[Legacy VPN]"".equals(p1);
	int v8 = Process.myUid();
	int v6 = v8;
	boolean v9 = ""[Legacy VPN]"".equals(p1);
	boolean v3 = 0;
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnLockdownApp()Z","0","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdown()Z > 4 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 9 to iindex = 2),
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getLockdown();
	return phiInstruction;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getLockdown();
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnLockdownApp()Z","1","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdown()Z > 4 @9 exception:6,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
monitorexit 1,
return 2,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 9 to iindex = 2),
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getLockdown();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 1
public boolean getLockdown(){
	return this.mLockdown;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	int v2 = this.mDeps.getCallingUid();
	Vpn v3 = VpnManagerService.getVpnIfOwner(v2);
	Vpn v1 = v3;
	boolean v4 = this.mLockdown;
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnLockdownApp()Z","1","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdown()Z > 4 @9 exception:6,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
monitorexit 1,
return 2,
conditional branch(eq, to iindex=-1) 7,5,
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getLockdown();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 1
public boolean getLockdown(){
	return this.mLockdown;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	int v2 = this.mDeps.getCallingUid();
	Vpn v3 = VpnManagerService.getVpnIfOwner(v2);
	Vpn v1 = v3;
	boolean v4 = this.mLockdown;
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnLockdownApp()Z","2","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
4 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,4 @6 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getUnderlyingNetworkInfo()Landroid/net/UnderlyingNetworkInfo; > 8 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
13 = invokevirtual < Application, Landroid/net/UnderlyingNetworkInfo, getOwnerUid()I > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,2,
18 = phi  8,9,
return 18,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdown()Z > 4 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 9 to iindex = 2),
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getLockdown();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 2
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 2
public Vpn getVpnIfOwner(int p1){
	int v1 = UserHandle.getUserId(p1);
	Object v2 = this.mVpns.get(v1);
	UnderlyingNetworkInfo v3 = v2.getUnderlyingNetworkInfo();
	int v4 = v3.getOwnerUid();
	return phiInstruction;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	int v3 = Binder.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	Object v6 = this.mVpns.get(v5);
	UnderlyingNetworkInfo v7 = v6.getUnderlyingNetworkInfo();
	int v8 = v7.getOwnerUid();
	Vpn v4 = phiInstruction;
	Vpn v1 = v4;
	boolean v9 = v1.getLockdown();
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnLockdownApp()Z","2","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
4 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,4 @6 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getUnderlyingNetworkInfo()Landroid/net/UnderlyingNetworkInfo; > 8 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
13 = invokevirtual < Application, Landroid/net/UnderlyingNetworkInfo, getOwnerUid()I > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,2,
18 = phi  8,9,
return 18,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdown()Z > 4 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getLockdown();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 2
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 2
public Vpn getVpnIfOwner(int p1){
	int v1 = UserHandle.getUserId(p1);
	Object v2 = this.mVpns.get(v1);
	UnderlyingNetworkInfo v3 = v2.getUnderlyingNetworkInfo();
	int v4 = v3.getOwnerUid();
	return phiInstruction;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	int v3 = Binder.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	Object v6 = this.mVpns.get(v5);
	UnderlyingNetworkInfo v7 = v6.getUnderlyingNetworkInfo();
	int v8 = v7.getOwnerUid();
	Vpn v4 = phiInstruction;
	Vpn v1 = v4;
	boolean v9 = v1.getLockdown();
	return phiInstruction;
}
","NONE"
"Lcom/android/server/VpnManagerService","isCallerCurrentAlwaysOnVpnLockdownApp()Z","2","2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 2,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner()Lcom/android/server/connectivity/Vpn; > 1 @3 exception:3,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
6 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getVpnIfOwner(I)Lcom/android/server/connectivity/Vpn; > 1,4 @6 exception:5,
4 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 5,4 @6 exception:6,
8 = checkcast <Application,Lcom/android/server/connectivity/Vpn>7 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getUnderlyingNetworkInfo()Landroid/net/UnderlyingNetworkInfo; > 8 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
18 = phi  8,9,
return 18,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getLockdown()Z > 4 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 9 to iindex = 2),
12 = phi  11,5,
monitorexit 2,
return 12,","depth : 0
public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	Vpn v1 = p0.getVpnIfOwner();
	boolean v2 = v1.getLockdown();
	return phiInstruction;
}
-----
depth : 1
public Vpn getVpnIfOwner(){
	int v1 = this.mDeps.getCallingUid();
	Vpn v2 = p0.getVpnIfOwner(v1);
	return v2;
}
-----
depth : 2
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 2
public Vpn getVpnIfOwner(int p1){
	int v1 = UserHandle.getUserId(p1);
	Object v2 = this.mVpns.get(v1);
	UnderlyingNetworkInfo v3 = v2.getUnderlyingNetworkInfo();
	return phiInstruction;
}
-----
","public boolean isCallerCurrentAlwaysOnVpnLockdownApp(){
	int v3 = Binder.getCallingUid();
	int v2 = v3;
	int v5 = UserHandle.getUserId(v2);
	Object v6 = this.mVpns.get(v5);
	UnderlyingNetworkInfo v7 = v6.getUnderlyingNetworkInfo();
	Vpn v4 = phiInstruction;
	Vpn v1 = v4;
	boolean v8 = v1.getLockdown();
	return phiInstruction;
}
","NONE"

"Lcom/android/server/VpnManagerService","updateLockdownVpn()Z","0","2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @11 exception:7,
10 = invokestatic < Application, Landroid/os/Process, myPid()I > @15 exception:9,
conditional branch(eq, to iindex=-1) 8,10,
15 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 15,
17 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @30 exception:16,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 17,
conditional branch(ne, to iindex=-1) 17,5,
19 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
22 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 19,20 @49 exception:21,
conditional branch(ne, to iindex=-1) 22,5,
23 = new <Application,Ljava/lang/String>@62,
invokespecial < Application, Ljava/lang/String, <init>([B)V > 23,22 @64 exception:24,
25 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
26 = new <Application,Ljava/lang/StringBuilder>@69,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @71 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @76 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,23 @79 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @82 exception:33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 25,34 @86 exception:35,
38 = invokestatic < Application, Lcom/android/internal/net/VpnProfile, decode(Ljava/lang/String;[B)Lcom/android/internal/net/VpnProfile; > 23,36 @90 exception:37,
conditional branch(ne, to iindex=-1) 38,5,
39 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
41 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 39 @123 exception:40,
43 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 41 @127 exception:42,
44 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
46 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 44,43 @133 exception:45,
47 = checkcast <Application,Lcom/android/server/connectivity/Vpn>46 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 47,5,
53 = new <Application,Ljava/lang/StringBuilder>@141,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 53 @143 exception:54,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 53,55 @148 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 53,43 @151 exception:58,
62 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 53,60 @156 exception:61,
64 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 53 @159 exception:63,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 64 @163 exception:65,
monitorexit 15,
return 5,","depth : 0
public boolean updateLockdownVpn(){
	boolean v4 = p0.isLockdownVpnEnabled();
	this.mLockdownEnabled = v4;
	byte[] v5 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	String v5 = new String(v5);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""VPN_"");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	byte[] v11 = this.mVpnProfileStore.get(v10);
	VpnProfile v12 = VpnProfile.decode(v5, v11);
	int v13 = this.mDeps.getCallingUid();
	int v14 = UserHandle.getUserId(v13);
	Object v15 = this.mVpns.get(v14);
	StringBuilder v15 = new StringBuilder();
	StringBuilder v17 = v15.append(""VPN for user "");
	StringBuilder v18 = v15.append(v14);
	StringBuilder v19 = v15.append("" not ready yet. Skipping lockdown"");
	String v20 = v15.toString();
	VpnManagerService.logw(v20);
	return 0;
}
-----
","public boolean updateLockdownVpn(){
	boolean v4 = p0.isLockdownVpnEnabled();
	this.mLockdownEnabled = v4;
	byte[] v5 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	String v6 = new String(v5);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""VPN_"");
	StringBuilder v11 = v8.append(v6);
	String v12 = v8.toString();
	byte[] v13 = this.mVpnProfileStore.get(v12);
	VpnProfile v14 = VpnProfile.decode(v6, v13);
	int v15 = this.mDeps.getCallingUid();
	int v16 = UserHandle.getUserId(v15);
	Object v17 = this.mVpns.get(v16);
	StringBuilder v18 = new StringBuilder();
	StringBuilder v20 = v18.append(""VPN for user "");
	StringBuilder v21 = v18.append(v16);
	StringBuilder v22 = v18.append("" not ready yet. Skipping lockdown"");
	String v23 = v18.toString();
	VpnManagerService.logw(v23);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","updateLockdownVpn()Z","1","2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @11 exception:7,
10 = invokestatic < Application, Landroid/os/Process, myPid()I > @15 exception:9,
conditional branch(eq, to iindex=-1) 8,10,
15 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 15,
17 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @30 exception:16,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
return 8,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 17,
conditional branch(ne, to iindex=-1) 17,5,
19 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
22 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 19,20 @49 exception:21,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 22,5,
23 = new <Application,Ljava/lang/String>@62,
invokespecial < Application, Ljava/lang/String, <init>([B)V > 23,22 @64 exception:24,
25 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
26 = new <Application,Ljava/lang/StringBuilder>@69,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @71 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @76 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,23 @79 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @82 exception:33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 25,34 @86 exception:35,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
38 = invokestatic < Application, Lcom/android/internal/net/VpnProfile, decode(Ljava/lang/String;[B)Lcom/android/internal/net/VpnProfile; > 23,36 @90 exception:37,
conditional branch(ne, to iindex=-1) 38,5,
39 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
41 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 39 @123 exception:40,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
43 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 41 @127 exception:42,
44 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
46 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 44,43 @133 exception:45,
47 = checkcast <Application,Lcom/android/server/connectivity/Vpn>46 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 47,5,
48 = new <Application,Lcom/android/server/net/LockdownVpnTracker>@168,
49 = getfield < Application, Lcom/android/server/VpnManagerService, mContext, <Application,Landroid/content/Context> > 1,
50 = getfield < Application, Lcom/android/server/VpnManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokespecial < Application, Lcom/android/server/net/LockdownVpnTracker, <init>(Landroid/content/Context;Landroid/os/Handler;Lcom/android/server/connectivity/Vpn;Lcom/android/internal/net/VpnProfile;)V > 48,49,50,47,38 @174 exception:51,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,48 @177 exception:52,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdown()V > 3 @7 exception:5,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
return,
monitorexit 15,
return 18,","depth : 0
public boolean updateLockdownVpn(){
	boolean v4 = p0.isLockdownVpnEnabled();
	this.mLockdownEnabled = v4;
	byte[] v5 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	String v5 = new String(v5);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""VPN_"");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	byte[] v11 = this.mVpnProfileStore.get(v10);
	VpnProfile v12 = VpnProfile.decode(v5, v11);
	int v13 = this.mDeps.getCallingUid();
	int v14 = UserHandle.getUserId(v13);
	Object v15 = this.mVpns.get(v14);
	LockdownVpnTracker v15 = new LockdownVpnTracker(this.mContext,this.mHandler,v15,v12);
	p0.setLockdownTracker(v15);
	return 1;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
","public boolean updateLockdownVpn(){
	byte[] v5 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	boolean v4 = phiInstruction;
	this.mLockdownEnabled = v4;
	byte[] v7 = LegacyVpnProfileStore.get(""LOCKDOWN_VPN"");
	byte[] v6 = v7;
	String v8 = new String(v6);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""VPN_"");
	StringBuilder v13 = v10.append(v8);
	String v14 = v10.toString();
	byte[] v16 = LegacyVpnProfileStore.get(v14);
	byte[] v15 = v16;
	VpnProfile v17 = VpnProfile.decode(v8, v15);
	int v19 = Binder.getCallingUid();
	int v18 = v19;
	int v20 = UserHandle.getUserId(v18);
	Object v21 = this.mVpns.get(v20);
	LockdownVpnTracker v22 = new LockdownVpnTracker(this.mContext,this.mHandler,v21,v17);
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = v22;
	v22.init();
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","updateLockdownVpn()Z","1","2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @11 exception:7,
10 = invokestatic < Application, Landroid/os/Process, myPid()I > @15 exception:9,
conditional branch(eq, to iindex=-1) 8,10,
15 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 15,
17 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @30 exception:16,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = phi  7,6,
return 8,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 17,
conditional branch(ne, to iindex=-1) 17,5,
19 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
22 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 19,20 @49 exception:21,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(ne, to iindex=-1) 22,5,
23 = new <Application,Ljava/lang/String>@62,
invokespecial < Application, Ljava/lang/String, <init>([B)V > 23,22 @64 exception:24,
25 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
26 = new <Application,Ljava/lang/StringBuilder>@69,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @71 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @76 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,23 @79 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @82 exception:33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 25,34 @86 exception:35,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
38 = invokestatic < Application, Lcom/android/internal/net/VpnProfile, decode(Ljava/lang/String;[B)Lcom/android/internal/net/VpnProfile; > 23,36 @90 exception:37,
conditional branch(ne, to iindex=-1) 38,5,
39 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
41 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 39 @123 exception:40,
3 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:2,
return 3,
43 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 41 @127 exception:42,
44 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
46 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 44,43 @133 exception:45,
47 = checkcast <Application,Lcom/android/server/connectivity/Vpn>46 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 47,5,
48 = new <Application,Lcom/android/server/net/LockdownVpnTracker>@168,
49 = getfield < Application, Lcom/android/server/VpnManagerService, mContext, <Application,Landroid/content/Context> > 1,
50 = getfield < Application, Lcom/android/server/VpnManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokespecial < Application, Lcom/android/server/net/LockdownVpnTracker, <init>(Landroid/content/Context;Landroid/os/Handler;Lcom/android/server/connectivity/Vpn;Lcom/android/internal/net/VpnProfile;)V > 48,49,50,47,38 @174 exception:51,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,48 @177 exception:52,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdown()V > 3 @7 exception:5,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
return,
monitorexit 15,
return 18,","depth : 0
public boolean updateLockdownVpn(){
	boolean v4 = p0.isLockdownVpnEnabled();
	this.mLockdownEnabled = v4;
	byte[] v5 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	String v5 = new String(v5);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""VPN_"");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	byte[] v11 = this.mVpnProfileStore.get(v10);
	VpnProfile v12 = VpnProfile.decode(v5, v11);
	int v13 = this.mDeps.getCallingUid();
	int v14 = UserHandle.getUserId(v13);
	Object v15 = this.mVpns.get(v14);
	LockdownVpnTracker v15 = new LockdownVpnTracker(this.mContext,this.mHandler,v15,v12);
	p0.setLockdownTracker(v15);
	return 1;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public int getCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
","public boolean updateLockdownVpn(){
	byte[] v5 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	boolean v4 = phiInstruction;
	this.mLockdownEnabled = v4;
	byte[] v7 = LegacyVpnProfileStore.get(""LOCKDOWN_VPN"");
	byte[] v6 = v7;
	String v8 = new String(v6);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""VPN_"");
	StringBuilder v13 = v10.append(v8);
	String v14 = v10.toString();
	byte[] v16 = LegacyVpnProfileStore.get(v14);
	byte[] v15 = v16;
	VpnProfile v17 = VpnProfile.decode(v8, v15);
	int v19 = Binder.getCallingUid();
	int v18 = v19;
	int v20 = UserHandle.getUserId(v18);
	Object v21 = this.mVpns.get(v20);
	LockdownVpnTracker v22 = new LockdownVpnTracker(this.mContext,this.mHandler,v21,v17);
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = v22;
	v22.init();
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","updateLockdownVpn()Z","2","2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @11 exception:7,
10 = invokestatic < Application, Landroid/os/Process, myPid()I > @15 exception:9,
conditional branch(eq, to iindex=-1) 8,10,
15 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 15,
17 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @30 exception:16,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
return 8,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 17,
conditional branch(ne, to iindex=-1) 17,5,
19 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
22 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 19,20 @49 exception:21,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
5 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, getService()Landroid/security/legacykeystore/ILegacyKeystore; > @4 exception:4,
8 = invokeinterface < Application, Landroid/security/legacykeystore/ILegacyKeystore, get(Ljava/lang/String;I)[B > 5,1,6 @9 exception:7,
11 = getCaughtException ,
12 = getfield < Application, Landroid/os/ServiceSpecificException, errorCode, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,2,11 @25 exception:14,
return 27,
return 4,
conditional branch(ne, to iindex=-1) 22,5,
23 = new <Application,Ljava/lang/String>@62,
invokespecial < Application, Ljava/lang/String, <init>([B)V > 23,22 @64 exception:24,
25 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
26 = new <Application,Ljava/lang/StringBuilder>@69,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @71 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @76 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,23 @79 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @82 exception:33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 25,34 @86 exception:35,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
5 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, getService()Landroid/security/legacykeystore/ILegacyKeystore; > @4 exception:4,
8 = invokeinterface < Application, Landroid/security/legacykeystore/ILegacyKeystore, get(Ljava/lang/String;I)[B > 5,1,6 @9 exception:7,
11 = getCaughtException ,
12 = getfield < Application, Landroid/os/ServiceSpecificException, errorCode, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,2,11 @25 exception:14,
return 27,
return 4,
38 = invokestatic < Application, Lcom/android/internal/net/VpnProfile, decode(Ljava/lang/String;[B)Lcom/android/internal/net/VpnProfile; > 23,36 @90 exception:37,
conditional branch(ne, to iindex=-1) 38,5,
39 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
41 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 39 @123 exception:40,
43 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 41 @127 exception:42,
44 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
46 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 44,43 @133 exception:45,
47 = checkcast <Application,Lcom/android/server/connectivity/Vpn>46 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 47,5,
48 = new <Application,Lcom/android/server/net/LockdownVpnTracker>@168,
49 = getfield < Application, Lcom/android/server/VpnManagerService, mContext, <Application,Landroid/content/Context> > 1,
50 = getfield < Application, Lcom/android/server/VpnManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokespecial < Application, Lcom/android/server/net/LockdownVpnTracker, <init>(Landroid/content/Context;Landroid/os/Handler;Lcom/android/server/connectivity/Vpn;Lcom/android/internal/net/VpnProfile;)V > 48,49,50,47,38 @174 exception:51,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,48 @177 exception:52,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdown()V > 3 @7 exception:5,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdownLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, initLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
return,
monitorexit 15,
return 18,","depth : 0
public boolean updateLockdownVpn(){
	boolean v4 = p0.isLockdownVpnEnabled();
	this.mLockdownEnabled = v4;
	byte[] v5 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	String v5 = new String(v5);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""VPN_"");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	byte[] v11 = this.mVpnProfileStore.get(v10);
	VpnProfile v12 = VpnProfile.decode(v5, v11);
	int v13 = this.mDeps.getCallingUid();
	int v14 = UserHandle.getUserId(v13);
	Object v15 = this.mVpns.get(v14);
	LockdownVpnTracker v15 = new LockdownVpnTracker(this.mContext,this.mHandler,v15,v12);
	p0.setLockdownTracker(v15);
	return 1;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 2
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 2
public byte[] get(String p1){
	ILegacyKeystore v1 = LegacyVpnProfileStore.getService();
	byte[] v2 = v1.get(p1, -1);
	int v3 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	return 0;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 2
public byte[] get(String p1){
	ILegacyKeystore v1 = LegacyVpnProfileStore.getService();
	byte[] v2 = v1.get(p1, -1);
	int v3 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	return 0;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
depth : 2
public void shutdown(){
	p0.shutdownLocked();
	return;
}
-----
depth : 2
public void init(){
	p0.initLocked();
	return;
}
-----
","public boolean updateLockdownVpn(){
	byte[] v6 = LegacyVpnProfileStore.get(""LOCKDOWN_VPN"");
	byte[] v5 = v6;
	boolean v4 = phiInstruction;
	this.mLockdownEnabled = v4;
	ILegacyKeystore v9 = LegacyVpnProfileStore.getService();
	byte[] v10 = v9.get(p1, -1);
	int v11 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	byte[] v8 = 0;
	byte[] v7 = v8;
	String v12 = new String(v7);
	StringBuilder v14 = new StringBuilder();
	StringBuilder v16 = v14.append(""VPN_"");
	StringBuilder v17 = v14.append(v12);
	String v18 = v14.toString();
	ILegacyKeystore v21 = LegacyVpnProfileStore.getService();
	byte[] v22 = v21.get(p1, -1);
	int v23 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	byte[] v20 = 0;
	byte[] v19 = v20;
	VpnProfile v24 = VpnProfile.decode(v12, v19);
	int v25 = this.mDeps.getCallingUid();
	int v26 = UserHandle.getUserId(v25);
	Object v27 = this.mVpns.get(v26);
	LockdownVpnTracker v28 = new LockdownVpnTracker(this.mContext,this.mHandler,v27,v24);
	this.mLockdownTracker = 0;
	LockdownVpnTracker.shutdownLocked();
	this.mLockdownTracker = v28;
	LockdownVpnTracker.initLocked();
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","updateLockdownVpn()Z","2","2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @11 exception:7,
10 = invokestatic < Application, Landroid/os/Process, myPid()I > @15 exception:9,
conditional branch(eq, to iindex=-1) 8,10,
15 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 15,
17 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @30 exception:16,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
8 = phi  7,6,
return 8,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 17,
conditional branch(ne, to iindex=-1) 17,5,
19 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
22 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 19,20 @49 exception:21,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
5 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, getService()Landroid/security/legacykeystore/ILegacyKeystore; > @4 exception:4,
8 = invokeinterface < Application, Landroid/security/legacykeystore/ILegacyKeystore, get(Ljava/lang/String;I)[B > 5,1,6 @9 exception:7,
11 = getCaughtException ,
12 = getfield < Application, Landroid/os/ServiceSpecificException, errorCode, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,2,11 @25 exception:14,
return 27,
return 4,
conditional branch(ne, to iindex=-1) 22,5,
23 = new <Application,Ljava/lang/String>@62,
invokespecial < Application, Ljava/lang/String, <init>([B)V > 23,22 @64 exception:24,
25 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
26 = new <Application,Ljava/lang/StringBuilder>@69,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @71 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @76 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,23 @79 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @82 exception:33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 25,34 @86 exception:35,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
5 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, getService()Landroid/security/legacykeystore/ILegacyKeystore; > @4 exception:4,
8 = invokeinterface < Application, Landroid/security/legacykeystore/ILegacyKeystore, get(Ljava/lang/String;I)[B > 5,1,6 @9 exception:7,
11 = getCaughtException ,
12 = getfield < Application, Landroid/os/ServiceSpecificException, errorCode, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,2,11 @25 exception:14,
return 27,
return 4,
38 = invokestatic < Application, Lcom/android/internal/net/VpnProfile, decode(Ljava/lang/String;[B)Lcom/android/internal/net/VpnProfile; > 23,36 @90 exception:37,
conditional branch(ne, to iindex=-1) 38,5,
39 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
41 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 39 @123 exception:40,
43 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 41 @127 exception:42,
44 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
46 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 44,43 @133 exception:45,
47 = checkcast <Application,Lcom/android/server/connectivity/Vpn>46 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 47,5,
48 = new <Application,Lcom/android/server/net/LockdownVpnTracker>@168,
49 = getfield < Application, Lcom/android/server/VpnManagerService, mContext, <Application,Landroid/content/Context> > 1,
50 = getfield < Application, Lcom/android/server/VpnManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
invokespecial < Application, Lcom/android/server/net/LockdownVpnTracker, <init>(Landroid/content/Context;Landroid/os/Handler;Lcom/android/server/connectivity/Vpn;Lcom/android/internal/net/VpnProfile;)V > 48,49,50,47,38 @174 exception:51,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,48 @177 exception:52,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdown()V > 3 @7 exception:5,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdownLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, initLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
return,
monitorexit 15,
return 18,","depth : 0
public boolean updateLockdownVpn(){
	boolean v4 = p0.isLockdownVpnEnabled();
	this.mLockdownEnabled = v4;
	byte[] v5 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	String v5 = new String(v5);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""VPN_"");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	byte[] v11 = this.mVpnProfileStore.get(v10);
	VpnProfile v12 = VpnProfile.decode(v5, v11);
	int v13 = this.mDeps.getCallingUid();
	int v14 = UserHandle.getUserId(v13);
	Object v15 = this.mVpns.get(v14);
	LockdownVpnTracker v15 = new LockdownVpnTracker(this.mContext,this.mHandler,v15,v12);
	p0.setLockdownTracker(v15);
	return 1;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 2
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 2
public byte[] get(String p1){
	ILegacyKeystore v1 = LegacyVpnProfileStore.getService();
	byte[] v2 = v1.get(p1, -1);
	int v3 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	return 0;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 2
public byte[] get(String p1){
	ILegacyKeystore v1 = LegacyVpnProfileStore.getService();
	byte[] v2 = v1.get(p1, -1);
	int v3 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	return 0;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
depth : 2
public void shutdown(){
	p0.shutdownLocked();
	return;
}
-----
depth : 2
public void init(){
	p0.initLocked();
	return;
}
-----
","public boolean updateLockdownVpn(){
	byte[] v6 = LegacyVpnProfileStore.get(""LOCKDOWN_VPN"");
	byte[] v5 = v6;
	boolean v4 = phiInstruction;
	this.mLockdownEnabled = v4;
	ILegacyKeystore v9 = LegacyVpnProfileStore.getService();
	byte[] v10 = v9.get(p1, -1);
	int v11 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	byte[] v8 = 0;
	byte[] v7 = v8;
	String v12 = new String(v7);
	StringBuilder v14 = new StringBuilder();
	StringBuilder v16 = v14.append(""VPN_"");
	StringBuilder v17 = v14.append(v12);
	String v18 = v14.toString();
	ILegacyKeystore v21 = LegacyVpnProfileStore.getService();
	byte[] v22 = v21.get(p1, -1);
	int v23 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	byte[] v20 = 0;
	byte[] v19 = v20;
	VpnProfile v24 = VpnProfile.decode(v12, v19);
	int v25 = this.mDeps.getCallingUid();
	int v26 = UserHandle.getUserId(v25);
	Object v27 = this.mVpns.get(v26);
	LockdownVpnTracker v28 = new LockdownVpnTracker(this.mContext,this.mHandler,v27,v24);
	this.mLockdownTracker = 0;
	LockdownVpnTracker.shutdownLocked();
	this.mLockdownTracker = v28;
	LockdownVpnTracker.initLocked();
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","updateLockdownVpn()Z","2","2 = getfield < Application, Lcom/android/server/VpnManagerService, mDeps, <Application,Lcom/android/server/VpnManagerService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VpnManagerService$Dependencies, getCallingUid()I > 2 @2 exception:3,
conditional branch(eq, to iindex=-1) 4,6,
8 = invokestatic < Application, Landroid/os/Binder, getCallingPid()I > @11 exception:7,
10 = invokestatic < Application, Landroid/os/Process, myPid()I > @15 exception:9,
conditional branch(eq, to iindex=-1) 8,10,
15 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 15,
17 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @30 exception:16,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
return 8,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownEnabled, <Primordial,Z> > = 17,
conditional branch(ne, to iindex=-1) 17,5,
19 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
22 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 19,20 @49 exception:21,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
5 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, getService()Landroid/security/legacykeystore/ILegacyKeystore; > @4 exception:4,
8 = invokeinterface < Application, Landroid/security/legacykeystore/ILegacyKeystore, get(Ljava/lang/String;I)[B > 5,1,6 @9 exception:7,
11 = getCaughtException ,
12 = getfield < Application, Landroid/os/ServiceSpecificException, errorCode, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,2,11 @25 exception:14,
return 27,
return 4,
conditional branch(ne, to iindex=-1) 22,5,
23 = new <Application,Ljava/lang/String>@62,
invokespecial < Application, Ljava/lang/String, <init>([B)V > 23,22 @64 exception:24,
25 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
26 = new <Application,Ljava/lang/StringBuilder>@69,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @71 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @76 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,23 @79 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @82 exception:33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 25,34 @86 exception:35,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
5 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, getService()Landroid/security/legacykeystore/ILegacyKeystore; > @4 exception:4,
8 = invokeinterface < Application, Landroid/security/legacykeystore/ILegacyKeystore, get(Ljava/lang/String;I)[B > 5,1,6 @9 exception:7,
11 = getCaughtException ,
12 = getfield < Application, Landroid/os/ServiceSpecificException, errorCode, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 3,2,11 @25 exception:14,
return 27,
return 4,
38 = invokestatic < Application, Lcom/android/internal/net/VpnProfile, decode(Ljava/lang/String;[B)Lcom/android/internal/net/VpnProfile; > 23,36 @90 exception:37,
conditional branch(ne, to iindex=-1) 38,5,
66 = new <Application,Ljava/lang/StringBuilder>@96,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 66 @98 exception:67,
70 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 66,68 @103 exception:69,
72 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 66,23 @106 exception:71,
74 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 66 @109 exception:73,
invokestatic < Application, Lcom/android/server/VpnManagerService, loge(Ljava/lang/String;)V > 74 @113 exception:75,
invokevirtual < Application, Lcom/android/server/VpnManagerService, setLockdownTracker(Lcom/android/server/net/LockdownVpnTracker;)V > 1,5 @116 exception:76,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > 1,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 4,
conditional branch(eq, to iindex=-1) 3,4,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdown()V > 3 @7 exception:5,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, shutdownLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
conditional branch(eq, to iindex=-1) 2,4,
putfield 1.< Application, Lcom/android/server/VpnManagerService, mLockdownTracker, <Application,Lcom/android/server/net/LockdownVpnTracker> > = 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, init()V > 2 @14 exception:6,
2 = getfield < Application, Lcom/android/server/net/LockdownVpnTracker, mStateLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
invokevirtual < Application, Lcom/android/server/net/LockdownVpnTracker, initLocked()V > 1 @3 exception:3,
monitorexit 2,
return,
return,
monitorexit 15,
return 18,","depth : 0
public boolean updateLockdownVpn(){
	boolean v4 = p0.isLockdownVpnEnabled();
	this.mLockdownEnabled = v4;
	byte[] v5 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	String v5 = new String(v5);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""VPN_"");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	byte[] v11 = this.mVpnProfileStore.get(v10);
	VpnProfile v12 = VpnProfile.decode(v5, v11);
	StringBuilder v12 = new StringBuilder();
	StringBuilder v14 = v12.append(""Lockdown VPN configured invalid profile "");
	StringBuilder v15 = v12.append(v5);
	String v16 = v12.toString();
	VpnManagerService.loge(v16);
	p0.setLockdownTracker(0);
	return 1;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 2
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 2
public byte[] get(String p1){
	ILegacyKeystore v1 = LegacyVpnProfileStore.getService();
	byte[] v2 = v1.get(p1, -1);
	int v3 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	return 0;
}
-----
depth : 1
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 2
public byte[] get(String p1){
	ILegacyKeystore v1 = LegacyVpnProfileStore.getService();
	byte[] v2 = v1.get(p1, -1);
	int v3 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	return 0;
}
-----
depth : 1
public void setLockdownTracker(LockdownVpnTracker p1){
	this.mLockdownTracker = 0;
	this.mLockdownTracker.shutdown();
	this.mLockdownTracker = p1;
	p1.init();
	return;
}
-----
depth : 2
public void shutdown(){
	p0.shutdownLocked();
	return;
}
-----
depth : 2
public void init(){
	p0.initLocked();
	return;
}
-----
","public boolean updateLockdownVpn(){
	byte[] v6 = LegacyVpnProfileStore.get(""LOCKDOWN_VPN"");
	byte[] v5 = v6;
	boolean v4 = phiInstruction;
	this.mLockdownEnabled = v4;
	ILegacyKeystore v9 = LegacyVpnProfileStore.getService();
	byte[] v10 = v9.get(p1, -1);
	int v11 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	byte[] v8 = 0;
	byte[] v7 = v8;
	String v12 = new String(v7);
	StringBuilder v14 = new StringBuilder();
	StringBuilder v16 = v14.append(""VPN_"");
	StringBuilder v17 = v14.append(v12);
	String v18 = v14.toString();
	ILegacyKeystore v21 = LegacyVpnProfileStore.getService();
	byte[] v22 = v21.get(p1, -1);
	int v23 = Log.e(""LegacyVpnProfileStore"", ""Failed to get vpn profile."", caughtException);
	byte[] v20 = 0;
	byte[] v19 = v20;
	VpnProfile v24 = VpnProfile.decode(v12, v19);
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append(""Lockdown VPN configured invalid profile "");
	StringBuilder v28 = v25.append(v12);
	String v29 = v25.toString();
	VpnManagerService.loge(v29);
	this.mLockdownTracker = 0;
	LockdownVpnTracker.shutdownLocked();
	this.mLockdownTracker = 0;
	LockdownVpnTracker.initLocked();
	return 1;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","startVpnProfile(Ljava/lang/String;)Ljava/lang/String;","0","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @14 exception:9,
10 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 10,7 @19 exception:11,
13 = checkcast <Application,Lcom/android/server/connectivity/Vpn>12 <Application,Lcom/android/server/connectivity/Vpn>,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfile(Ljava/lang/String;)Ljava/lang/String; > 13,2 @25 exception:14,
monitorexit 8,
return 15,","depth : 0
public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	String v6 = v5.startVpnProfile(p1);
	return v6;
}
-----
","public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	String v6 = v5.startVpnProfile(p1);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","startVpnProfile(Ljava/lang/String;)Ljava/lang/String;","1","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAppUid(Ljava/lang/String;I)I > 1,2,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,3,
return,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @14 exception:9,
10 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 10,7 @19 exception:11,
13 = checkcast <Application,Lcom/android/server/connectivity/Vpn>12 <Application,Lcom/android/server/connectivity/Vpn>,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfile(Ljava/lang/String;)Ljava/lang/String; > 13,2 @25 exception:14,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @6 exception:6,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 1,2,7,8 @11 exception:9,
conditional branch(eq, to iindex=-1) 10,7,
23 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @17 exception:22,
25 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @21 exception:24,
conditional branch(eq, to iindex=-1) 25,7,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfilePrivileged(Lcom/android/internal/net/VpnProfile;Ljava/lang/String;)V > 1,25,2 @27 exception:37,
39 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @30 exception:38,
conditional branch(eq, to iindex=-1) 39,7,
44 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @36 exception:43,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 23 @40 exception:51,
monitorexit 1,
return 44,
monitorexit 8,
return 15,","depth : 0
public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	String v6 = v5.startVpnProfile(p1);
	return v6;
}
-----
depth : 1
public void verifyCallingUidAndPackage(String p1, int p2){
	return;
}
-----
depth : 1
public String startVpnProfile(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.enforceNotRestrictedUser();
	boolean v3 = p0.prepare(p1, 0, 2);
	long v4 = Binder.clearCallingIdentity();
	VpnProfile v5 = p0.getVpnProfilePrivileged(p1);
	p0.startVpnProfilePrivileged(v5, p1);
	boolean v7 = p0.isIkev2VpnRunner();
	String v8 = p0.getSessionKeyLocked();
	Binder.restoreCallingIdentity(v4);
	return v8;
}
-----
","public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v7 = this.mVpns.get(v5);
	Object v9 = Objects.requireNonNull(p1, ""No package name provided"");
	Vpn.enforceNotRestrictedUser();
	boolean v11 = Vpn.prepare(p1, 0, 2);
	long v12 = Binder.clearCallingIdentity();
	VpnProfile v13 = Vpn.getVpnProfilePrivileged(p1);
	Vpn.startVpnProfilePrivileged(v13, p1);
	boolean v15 = Vpn.isIkev2VpnRunner();
	String v16 = Vpn.getSessionKeyLocked();
	Binder.restoreCallingIdentity(v12);
	String v8 = v16;
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","startVpnProfile(Ljava/lang/String;)Ljava/lang/String;","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAppUid(Ljava/lang/String;I)I > 1,2,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,3,
return,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @14 exception:9,
10 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 10,7 @19 exception:11,
13 = checkcast <Application,Lcom/android/server/connectivity/Vpn>12 <Application,Lcom/android/server/connectivity/Vpn>,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfile(Ljava/lang/String;)Ljava/lang/String; > 13,2 @25 exception:14,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @6 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 1,2,7,8 @11 exception:9,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 5,6 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 2,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @13 exception:10,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,3 @18 exception:12,
conditional branch(eq, to iindex=-1) 2,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,9,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @29 exception:16,
conditional branch(ne, to iindex=-1) 17,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @37 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,23 @68 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
28 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnPreConsented(Landroid/content/Context;Ljava/lang/String;I)Z > 26,2,4 @76 exception:27,
conditional branch(ne, to iindex=-1) 28,9,
conditional branch(eq, to iindex=-1) 3,9,
34 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,23 @93 exception:33,
conditional branch(ne, to iindex=-1) 34,9,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,3 @99 exception:35,
conditional branch(eq, to iindex=-1) 36,9,
goto (from iindex= 56 to iindex = 21),
monitorexit 1,
return 14,
conditional branch(eq, to iindex=-1) 10,7,
23 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @17 exception:22,
25 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @21 exception:24,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mDeps, <Application,Lcom/android/server/connectivity/Vpn$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn$Dependencies, isCallerSystem()Z > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @17 exception:7,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProfileNameForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @21 exception:9,
12 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 8,10 @25 exception:11,
conditional branch(ne, to iindex=-1) 12,6,
15 = invokestatic < Application, Lcom/android/internal/net/VpnProfile, decode(Ljava/lang/String;[B)Lcom/android/internal/net/VpnProfile; > 13,12 @34 exception:14,
return 15,
conditional branch(eq, to iindex=-1) 25,7,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfilePrivileged(Lcom/android/internal/net/VpnProfile;Ljava/lang/String;)V > 1,25,2 @27 exception:37,
39 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @30 exception:38,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
3 = instanceof 2 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
return 3,
conditional branch(eq, to iindex=-1) 39,7,
44 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @36 exception:43,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>5 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner, -$$Nest$fgetmSessionKey(Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner;)Ljava/lang/String; > 6 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 23 @40 exception:51,
monitorexit 1,
return 44,
monitorexit 8,
return 15,","depth : 0
public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	String v6 = v5.startVpnProfile(p1);
	return v6;
}
-----
depth : 1
public void verifyCallingUidAndPackage(String p1, int p2){
	return;
}
-----
depth : 1
public String startVpnProfile(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.enforceNotRestrictedUser();
	boolean v3 = p0.prepare(p1, 0, 2);
	long v4 = Binder.clearCallingIdentity();
	VpnProfile v5 = p0.getVpnProfilePrivileged(p1);
	p0.startVpnProfilePrivileged(v5, p1);
	boolean v7 = p0.isIkev2VpnRunner();
	String v8 = p0.getSessionKeyLocked();
	Binder.restoreCallingIdentity(v4);
	return v8;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean prepare(String p1, String p2, int p3){
	p0.verifyCallingUidAndPackage(p1);
	p0.verifyCallingUidAndPackage(p2);
	boolean v4 = p0.isCurrentPreparedPackage(p1);
	boolean v5 = p0.isCurrentPreparedPackage(p1);
	boolean v6 = p1.equals(""[Legacy VPN]"");
	boolean v7 = Vpn.isVpnPreConsented(this.mContext, p1, p3);
	boolean v8 = p2.equals(""[Legacy VPN]"");
	boolean v9 = p0.isCurrentPreparedPackage(p2);
	return 1;
}
-----
depth : 2
public VpnProfile getVpnProfilePrivileged(String p1){
	boolean v1 = this.mDeps.isCallerSystem();
	VpnProfileStore v2 = p0.getVpnProfileStore();
	String v3 = p0.getProfileNameForPackage(p1);
	byte[] v4 = v2.get(v3);
	VpnProfile v5 = VpnProfile.decode("""", v4);
	return v5;
}
-----
depth : 2
public boolean isIkev2VpnRunner(){
	return this.mVpnRunner instanceof Vpn$IkeV2VpnRunner;
}
-----
depth : 2
public String getSessionKeyLocked(){
	boolean v1 = p0.isIkev2VpnRunner();
	String v2 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	return phiInstruction;
}
-----
","public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v7 = this.mVpns.get(v5);
	Object v9 = Objects.requireNonNull(p1, ""No package name provided"");
	long v11 = Binder.clearCallingIdentity();
	UserInfo v12 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v13 = v12.isRestricted();
	Binder.restoreCallingIdentity(v11);
	Vpn.verifyCallingUidAndPackage(p1);
	Vpn.verifyCallingUidAndPackage(0);
	boolean v19 = Vpn.isCurrentPreparedPackage(p1);
	boolean v20 = Vpn.isCurrentPreparedPackage(p1);
	boolean v21 = p1.equals(""[Legacy VPN]"");
	boolean v22 = Vpn.isVpnPreConsented(this.mContext, p1, 2);
	boolean v23 = 0.equals(""[Legacy VPN]"");
	boolean v24 = Vpn.isCurrentPreparedPackage(0);
	boolean v15 = 1;
	long v25 = Binder.clearCallingIdentity();
	boolean v27 = this.mDeps.isCallerSystem();
	VpnProfileStore v28 = Vpn.getVpnProfileStore();
	String v29 = Vpn.getProfileNameForPackage(p1);
	byte[] v30 = v28.get(v29);
	VpnProfile v31 = VpnProfile.decode("""", v30);
	VpnProfile v26 = v31;
	Vpn.startVpnProfilePrivileged(v26, p1);
	boolean v33 = this.mVpnRunner instanceof Vpn$IkeV2VpnRunner;
	boolean v35 = Vpn.isIkev2VpnRunner();
	String v36 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	String v34 = phiInstruction;
	Binder.restoreCallingIdentity(v25);
	String v8 = v34;
	return v8;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","startVpnProfile(Ljava/lang/String;)Ljava/lang/String;","2","4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @0 exception:3,
invokevirtual < Application, Lcom/android/server/VpnManagerService, verifyCallingUidAndPackage(Ljava/lang/String;I)V > 1,2,4 @4 exception:5,
5 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 3 @0 exception:4,
7 = invokevirtual < Application, Lcom/android/server/VpnManagerService, getAppUid(Ljava/lang/String;I)I > 1,2,5 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,3,
return,
7 = invokestatic < Application, Landroid/os/UserHandle, getUserId(I)I > 4 @7 exception:6,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
invokevirtual < Application, Lcom/android/server/VpnManagerService, throwIfLockdownEnabled()V > 1 @14 exception:9,
10 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
12 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 10,7 @19 exception:11,
13 = checkcast <Application,Lcom/android/server/connectivity/Vpn>12 <Application,Lcom/android/server/connectivity/Vpn>,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfile(Ljava/lang/String;)Ljava/lang/String; > 13,2 @25 exception:14,
monitorenter 1,
5 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,3 @3 exception:4,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceNotRestrictedUser()V > 1 @6 exception:6,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserManager, <Application,Landroid/os/UserManager> > 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
7 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,5 @8 exception:6,
9 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @18 exception:20,
return,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, prepare(Ljava/lang/String;Ljava/lang/String;I)Z > 1,2,7,8 @11 exception:9,
monitorenter 1,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 5,6 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 2,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,2 @13 exception:10,
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, verifyCallingUidAndPackage(Ljava/lang/String;)V > 1,3 @18 exception:12,
conditional branch(eq, to iindex=-1) 2,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 15,9,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @29 exception:16,
conditional branch(ne, to iindex=-1) 17,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,2 @37 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 2,23 @68 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
28 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnPreConsented(Landroid/content/Context;Ljava/lang/String;I)Z > 26,2,4 @76 exception:27,
conditional branch(ne, to iindex=-1) 28,9,
conditional branch(eq, to iindex=-1) 3,9,
34 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,23 @93 exception:33,
conditional branch(ne, to iindex=-1) 34,9,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,3 @99 exception:35,
conditional branch(eq, to iindex=-1) 36,9,
goto (from iindex= 56 to iindex = 21),
monitorexit 1,
return 14,
conditional branch(eq, to iindex=-1) 10,7,
23 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @17 exception:22,
25 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @21 exception:24,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mDeps, <Application,Lcom/android/server/connectivity/Vpn$Dependencies> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn$Dependencies, isCallerSystem()Z > 3 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfileStore()Lcom/android/server/connectivity/VpnProfileStore; > 1 @17 exception:7,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getProfileNameForPackage(Ljava/lang/String;)Ljava/lang/String; > 1,2 @21 exception:9,
12 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 8,10 @25 exception:11,
conditional branch(ne, to iindex=-1) 12,6,
return 6,
conditional branch(eq, to iindex=-1) 25,7,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfilePrivileged(Lcom/android/internal/net/VpnProfile;Ljava/lang/String;)V > 1,25,2 @27 exception:37,
39 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @30 exception:38,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
3 = instanceof 2 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
return 3,
conditional branch(eq, to iindex=-1) 39,7,
44 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @36 exception:43,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>5 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner, -$$Nest$fgetmSessionKey(Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner;)Ljava/lang/String; > 6 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 23 @40 exception:51,
monitorexit 1,
return 44,
monitorexit 8,
return 15,","depth : 0
public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	p0.verifyCallingUidAndPackage(p1, v1);
	int v3 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v5 = this.mVpns.get(v3);
	String v6 = v5.startVpnProfile(p1);
	return v6;
}
-----
depth : 1
public void verifyCallingUidAndPackage(String p1, int p2){
	return;
}
-----
depth : 1
public String startVpnProfile(String p1){
	Object v1 = Objects.requireNonNull(p1, ""No package name provided"");
	p0.enforceNotRestrictedUser();
	boolean v3 = p0.prepare(p1, 0, 2);
	long v4 = Binder.clearCallingIdentity();
	VpnProfile v5 = p0.getVpnProfilePrivileged(p1);
	p0.startVpnProfilePrivileged(v5, p1);
	boolean v7 = p0.isIkev2VpnRunner();
	String v8 = p0.getSessionKeyLocked();
	Binder.restoreCallingIdentity(v4);
	return v8;
}
-----
depth : 2
public void enforceNotRestrictedUser(){
	long v1 = Binder.clearCallingIdentity();
	UserInfo v2 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v3 = v2.isRestricted();
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean prepare(String p1, String p2, int p3){
	p0.verifyCallingUidAndPackage(p1);
	p0.verifyCallingUidAndPackage(p2);
	boolean v4 = p0.isCurrentPreparedPackage(p1);
	boolean v5 = p0.isCurrentPreparedPackage(p1);
	boolean v6 = p1.equals(""[Legacy VPN]"");
	boolean v7 = Vpn.isVpnPreConsented(this.mContext, p1, p3);
	boolean v8 = p2.equals(""[Legacy VPN]"");
	boolean v9 = p0.isCurrentPreparedPackage(p2);
	return 1;
}
-----
depth : 2
public VpnProfile getVpnProfilePrivileged(String p1){
	boolean v1 = this.mDeps.isCallerSystem();
	VpnProfileStore v2 = p0.getVpnProfileStore();
	String v3 = p0.getProfileNameForPackage(p1);
	byte[] v4 = v2.get(v3);
	return 0;
}
-----
depth : 2
public boolean isIkev2VpnRunner(){
	return this.mVpnRunner instanceof Vpn$IkeV2VpnRunner;
}
-----
depth : 2
public String getSessionKeyLocked(){
	boolean v1 = p0.isIkev2VpnRunner();
	String v2 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	return phiInstruction;
}
-----
","public String startVpnProfile(String p1){
	int v1 = Binder.getCallingUid();
	int v5 = UserHandle.getUserId(v1);
	p0.throwIfLockdownEnabled();
	Object v7 = this.mVpns.get(v5);
	Object v9 = Objects.requireNonNull(p1, ""No package name provided"");
	long v11 = Binder.clearCallingIdentity();
	UserInfo v12 = this.mUserManager.getUserInfo(this.mUserId);
	boolean v13 = v12.isRestricted();
	Binder.restoreCallingIdentity(v11);
	Vpn.verifyCallingUidAndPackage(p1);
	Vpn.verifyCallingUidAndPackage(0);
	boolean v19 = Vpn.isCurrentPreparedPackage(p1);
	boolean v20 = Vpn.isCurrentPreparedPackage(p1);
	boolean v21 = p1.equals(""[Legacy VPN]"");
	boolean v22 = Vpn.isVpnPreConsented(this.mContext, p1, 2);
	boolean v23 = 0.equals(""[Legacy VPN]"");
	boolean v24 = Vpn.isCurrentPreparedPackage(0);
	boolean v15 = 1;
	long v25 = Binder.clearCallingIdentity();
	boolean v27 = this.mDeps.isCallerSystem();
	VpnProfileStore v28 = Vpn.getVpnProfileStore();
	String v29 = Vpn.getProfileNameForPackage(p1);
	byte[] v30 = v28.get(v29);
	VpnProfile v26 = 0;
	Vpn.startVpnProfilePrivileged(v26, p1);
	boolean v32 = this.mVpnRunner instanceof Vpn$IkeV2VpnRunner;
	boolean v34 = Vpn.isIkev2VpnRunner();
	String v35 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	String v33 = phiInstruction;
	Binder.restoreCallingIdentity(v25);
	String v8 = v33;
	return v8;
}
","SYS_OR_SIG"

"Lcom/android/server/VpnManagerService","setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z","0","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
10 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @9 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
14 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 12,2 @20 exception:13,
15 = checkcast <Application,Lcom/android/server/connectivity/Vpn>14 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 15,11,
23 = new <Application,Ljava/lang/StringBuilder>@28,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 23 @30 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 23,25 @35 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 23,2 @38 exception:28,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 23,30 @43 exception:31,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 23 @46 exception:33,
invokestatic < Application, Lcom/android/server/VpnManagerService, logw(Ljava/lang/String;)V > 34 @50 exception:35,
monitorexit 8,
return 11,","depth : 0
public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	boolean v3 = p0.isLockdownVpnEnabled();
	Object v4 = this.mVpns.get(p1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""User "");
	StringBuilder v7 = v4.append(p1);
	StringBuilder v8 = v4.append("" has no Vpn configuration"");
	String v9 = v4.toString();
	VpnManagerService.logw(v9);
	return 0;
}
-----
","public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	boolean v3 = p0.isLockdownVpnEnabled();
	Object v4 = this.mVpns.get(p1);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""User "");
	StringBuilder v8 = v5.append(p1);
	StringBuilder v9 = v5.append("" has no Vpn configuration"");
	String v10 = v5.toString();
	VpnManagerService.logw(v10);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
10 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @9 exception:9,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
return 8,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
14 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 12,2 @20 exception:13,
15 = checkcast <Application,Lcom/android/server/connectivity/Vpn>14 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 15,11,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,3,4,5 @55 exception:16,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
31 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeDisconnectedVpnProfileState()Landroid/net/VpnProfileState; > 1 @75 exception:30,
goto (from iindex= 48 to iindex = 5),
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
monitorexit 1,
return 10,
conditional branch(ne, to iindex=-1) 17,11,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, startAlwaysOnVpn(I)Z > 1,2 @63 exception:18,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/connectivity/Vpn>6 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 7,8,
11 = getstatic < Application, Lcom/android/server/VpnManagerService, TAG, <Application,Ljava/lang/String> >,
12 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 12 @17 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,14 @22 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 12,2 @25 exception:17,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 12 @33 exception:22,
25 = invokestatic < Application, Landroid/util/Log, wtf(Ljava/lang/String;Ljava/lang/String;)I > 11,23 @37 exception:24,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 19,11,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,11,11,11 @70 exception:21,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
31 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeDisconnectedVpnProfileState()Landroid/net/VpnProfileState; > 1 @75 exception:30,
goto (from iindex= 48 to iindex = 5),
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
monitorexit 1,
return 10,
monitorexit 8,
return 11,","depth : 0
public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	boolean v3 = p0.isLockdownVpnEnabled();
	Object v4 = this.mVpns.get(p1);
	boolean v5 = v4.setAlwaysOnPackage(p2, p3, p4);
	boolean v6 = p0.startAlwaysOnVpn(p1);
	boolean v7 = v4.setAlwaysOnPackage(0, 0, 0);
	return 0;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeDisconnectedVpnProfileState();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 1
public boolean startAlwaysOnVpn(int p1){
	Object v1 = this.mVpns.get(p1);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""User "");
	StringBuilder v4 = v1.append(p1);
	StringBuilder v5 = v1.append("" has no Vpn configuration"");
	String v6 = v1.toString();
	int v7 = Log.wtf(this.TAG, v6);
	return 0;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeDisconnectedVpnProfileState();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
","public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	byte[] v4 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	boolean v3 = phiInstruction;
	Object v5 = this.mVpns.get(p1);
	Vpn.enforceControlPermissionOrInternalCaller();
	boolean v8 = Objects.equals(p2, this.mPackage);
	boolean v9 = Vpn.isVpnApp(this.mPackage);
	boolean v10 = Vpn.isVpnApp(p2);
	boolean v11 = Vpn.setAlwaysOnPackageInternal(p2, p3, p4);
	Vpn.saveAlwaysOnPackage();
	boolean v13 = SdkLevel.isAtLeastT();
	VpnProfileState v14 = Vpn.makeDisconnectedVpnProfileState();
	boolean v15 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v16 = Vpn.getSessionKeyLocked();
	VpnProfileState v17 = Vpn.makeVpnProfileStateLocked();
	boolean v18 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p2, v16, v17, 0, 0, 0);
	boolean v6 = 1;
	Object v20 = this.mVpns.get(p1);
	StringBuilder v21 = new StringBuilder();
	StringBuilder v23 = v21.append(""User "");
	StringBuilder v24 = v21.append(p1);
	StringBuilder v25 = v21.append("" has no Vpn configuration"");
	String v26 = v21.toString();
	int v27 = Log.wtf(this.TAG, v26);
	boolean v19 = 0;
	Vpn.enforceControlPermissionOrInternalCaller();
	boolean v30 = Objects.equals(0, this.mPackage);
	boolean v31 = Vpn.isVpnApp(this.mPackage);
	boolean v32 = Vpn.isVpnApp(0);
	boolean v33 = Vpn.setAlwaysOnPackageInternal(0, 0, 0);
	Vpn.saveAlwaysOnPackage();
	boolean v35 = SdkLevel.isAtLeastT();
	VpnProfileState v36 = Vpn.makeDisconnectedVpnProfileState();
	boolean v37 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v38 = Vpn.getSessionKeyLocked();
	VpnProfileState v39 = Vpn.makeVpnProfileStateLocked();
	boolean v40 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, 0, v38, v39, 0, 0, 0);
	boolean v28 = 1;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z","1","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
10 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @9 exception:9,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = phi  7,6,
return 8,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
14 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 12,2 @20 exception:13,
15 = checkcast <Application,Lcom/android/server/connectivity/Vpn>14 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 15,11,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,3,4,5 @55 exception:16,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
31 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeDisconnectedVpnProfileState()Landroid/net/VpnProfileState; > 1 @75 exception:30,
goto (from iindex= 48 to iindex = 5),
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
monitorexit 1,
return 10,
conditional branch(ne, to iindex=-1) 17,11,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, startAlwaysOnVpn(I)Z > 1,2 @63 exception:18,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/connectivity/Vpn>6 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 7,8,
11 = getstatic < Application, Lcom/android/server/VpnManagerService, TAG, <Application,Ljava/lang/String> >,
12 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 12 @17 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,14 @22 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 12,2 @25 exception:17,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 12,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 12 @33 exception:22,
25 = invokestatic < Application, Landroid/util/Log, wtf(Ljava/lang/String;Ljava/lang/String;)I > 11,23 @37 exception:24,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 19,11,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,11,11,11 @70 exception:21,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
31 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeDisconnectedVpnProfileState()Landroid/net/VpnProfileState; > 1 @75 exception:30,
goto (from iindex= 48 to iindex = 5),
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
monitorexit 1,
return 10,
monitorexit 8,
return 11,","depth : 0
public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	boolean v3 = p0.isLockdownVpnEnabled();
	Object v4 = this.mVpns.get(p1);
	boolean v5 = v4.setAlwaysOnPackage(p2, p3, p4);
	boolean v6 = p0.startAlwaysOnVpn(p1);
	boolean v7 = v4.setAlwaysOnPackage(0, 0, 0);
	return 0;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeDisconnectedVpnProfileState();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 1
public boolean startAlwaysOnVpn(int p1){
	Object v1 = this.mVpns.get(p1);
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""User "");
	StringBuilder v4 = v1.append(p1);
	StringBuilder v5 = v1.append("" has no Vpn configuration"");
	String v6 = v1.toString();
	int v7 = Log.wtf(this.TAG, v6);
	return 0;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeDisconnectedVpnProfileState();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
","public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	byte[] v4 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	boolean v3 = phiInstruction;
	Object v5 = this.mVpns.get(p1);
	Vpn.enforceControlPermissionOrInternalCaller();
	boolean v8 = Objects.equals(p2, this.mPackage);
	boolean v9 = Vpn.isVpnApp(this.mPackage);
	boolean v10 = Vpn.isVpnApp(p2);
	boolean v11 = Vpn.setAlwaysOnPackageInternal(p2, p3, p4);
	Vpn.saveAlwaysOnPackage();
	boolean v13 = SdkLevel.isAtLeastT();
	VpnProfileState v14 = Vpn.makeDisconnectedVpnProfileState();
	boolean v15 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v16 = Vpn.getSessionKeyLocked();
	VpnProfileState v17 = Vpn.makeVpnProfileStateLocked();
	boolean v18 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p2, v16, v17, 0, 0, 0);
	boolean v6 = 1;
	Object v20 = this.mVpns.get(p1);
	StringBuilder v21 = new StringBuilder();
	StringBuilder v23 = v21.append(""User "");
	StringBuilder v24 = v21.append(p1);
	StringBuilder v25 = v21.append("" has no Vpn configuration"");
	String v26 = v21.toString();
	int v27 = Log.wtf(this.TAG, v26);
	boolean v19 = 0;
	Vpn.enforceControlPermissionOrInternalCaller();
	boolean v30 = Objects.equals(0, this.mPackage);
	boolean v31 = Vpn.isVpnApp(this.mPackage);
	boolean v32 = Vpn.isVpnApp(0);
	boolean v33 = Vpn.setAlwaysOnPackageInternal(0, 0, 0);
	Vpn.saveAlwaysOnPackage();
	boolean v35 = SdkLevel.isAtLeastT();
	VpnProfileState v36 = Vpn.makeDisconnectedVpnProfileState();
	boolean v37 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v38 = Vpn.getSessionKeyLocked();
	VpnProfileState v39 = Vpn.makeVpnProfileStateLocked();
	boolean v40 = Vpn.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, 0, v38, v39, 0, 0, 0);
	boolean v28 = 1;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
10 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @9 exception:9,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
return 8,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
14 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 12,2 @20 exception:13,
15 = checkcast <Application,Lcom/android/server/connectivity/Vpn>14 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 15,11,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,3,4,5 @55 exception:16,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
7 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 5,2 @2 exception:6,
conditional branch(eq, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 4,9,
11 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 4 @39 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @43 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
conditional branch(eq, to iindex=-1) 2,9,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @87 exception:26,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @91 exception:28,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @95 exception:32,
conditional branch(ne, to iindex=-1) 29,9,
goto (from iindex= 48 to iindex = 2),
34 = phi  25,33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 1,2,34 @103 exception:35,
conditional branch(ne, to iindex=-1) 36,9,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > = 25,
goto (from iindex= 55 to iindex = 9),
40 = phi  2,5,
43 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 43,9,
conditional branch(eq, to iindex=-1) 3,9,
44 = phi  9,9,25,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > = 44,
conditional branch(eq, to iindex=-1) 44,9,
conditional branch(eq, to iindex=-1) 4,9,
47 = new <Application,Ljava/util/ArrayList>@134,
invokespecial < Application, Ljava/util/ArrayList, <init>(Ljava/util/Collection;)V > 47,4 @136 exception:48,
50 = invokestatic < Application, Ljava/util/Collections, unmodifiableList(Ljava/util/List;)Ljava/util/List; > 47 @139 exception:49,
goto (from iindex= 72 to iindex = 5),
51 = phi  50,46,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > = 51,
55 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,40 @150 exception:54,
conditional branch(eq, to iindex=-1) 55,9,
57 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkInfo, <Application,Landroid/net/NetworkInfo> > 1,
59 = invokevirtual < Application, Landroid/net/NetworkInfo, getDetailedState()Landroid/net/NetworkInfo$DetailedState; > 57 @158 exception:58,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, updateAlwaysOnNotification(Landroid/net/NetworkInfo$DetailedState;)V > 1,59 @162 exception:60,
61 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setVpnForcedLocked(Z)V > 1,61 @167 exception:62,
goto (from iindex= 85 to iindex = 4),
return 25,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 1 @8 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 4,5,7,8 @14 exception:9,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
12 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 12,13,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,13,
goto (from iindex= 15 to iindex = 2),
17 = phi  16,13,
18 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutIntForUser(Ljava/lang/String;II)V > 10,11,17,18 @34 exception:19,
20 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
23 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > 1,
25 = invokestatic < Application, Ljava/lang/String, join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String; > 22,23 @45 exception:24,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 20,21,25,26 @51 exception:27,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @54 exception:37,
return,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
return 1,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @80 exception:28,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>5 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner, -$$Nest$fgetmSessionKey(Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner;)Ljava/lang/String; > 6 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
monitorexit 1,
return 10,
conditional branch(ne, to iindex=-1) 17,11,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, startAlwaysOnVpn(I)Z > 1,2 @63 exception:18,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/connectivity/Vpn>6 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startAlwaysOnVpn()Z > 7 @43 exception:9,
monitorenter 1,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 1 @1 exception:2,
conditional branch(ne, to iindex=-1) 3,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isAlwaysOnPackageSupported(Ljava/lang/String;)Z > 1,3 @10 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getNetworkInfo()Landroid/net/NetworkInfo; > 1 @23 exception:8,
11 = invokevirtual < Application, Landroid/net/NetworkInfo, isConnected()Z > 9 @27 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
monitorexit 1,
13 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @36 exception:12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,3 @40 exception:14,
conditional branch(eq, to iindex=-1) 15,5,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfilePrivileged(Lcom/android/internal/net/VpnProfile;Ljava/lang/String;)V > 1,15,3 @46 exception:55,
63 = getCaughtException ,
66 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 37,64,63 @141 exception:65,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 13 @144 exception:67,
return 5,
monitorexit 3,
return 10,
conditional branch(ne, to iindex=-1) 19,11,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,11,11,11 @70 exception:21,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
7 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 5,2 @2 exception:6,
conditional branch(eq, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 4,9,
11 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 4 @39 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @43 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
conditional branch(eq, to iindex=-1) 2,9,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @87 exception:26,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @91 exception:28,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @95 exception:32,
conditional branch(ne, to iindex=-1) 29,9,
goto (from iindex= 48 to iindex = 2),
34 = phi  25,33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 1,2,34 @103 exception:35,
conditional branch(ne, to iindex=-1) 36,9,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > = 25,
goto (from iindex= 55 to iindex = 9),
40 = phi  2,5,
43 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 43,9,
conditional branch(eq, to iindex=-1) 3,9,
44 = phi  9,9,25,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > = 44,
conditional branch(eq, to iindex=-1) 44,9,
conditional branch(eq, to iindex=-1) 4,9,
47 = new <Application,Ljava/util/ArrayList>@134,
invokespecial < Application, Ljava/util/ArrayList, <init>(Ljava/util/Collection;)V > 47,4 @136 exception:48,
50 = invokestatic < Application, Ljava/util/Collections, unmodifiableList(Ljava/util/List;)Ljava/util/List; > 47 @139 exception:49,
goto (from iindex= 72 to iindex = 5),
51 = phi  50,46,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > = 51,
55 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,40 @150 exception:54,
conditional branch(eq, to iindex=-1) 55,9,
57 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkInfo, <Application,Landroid/net/NetworkInfo> > 1,
59 = invokevirtual < Application, Landroid/net/NetworkInfo, getDetailedState()Landroid/net/NetworkInfo$DetailedState; > 57 @158 exception:58,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, updateAlwaysOnNotification(Landroid/net/NetworkInfo$DetailedState;)V > 1,59 @162 exception:60,
61 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setVpnForcedLocked(Z)V > 1,61 @167 exception:62,
goto (from iindex= 85 to iindex = 4),
return 25,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 1 @8 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 4,5,7,8 @14 exception:9,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
12 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 12,13,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,13,
goto (from iindex= 15 to iindex = 2),
17 = phi  16,13,
18 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutIntForUser(Ljava/lang/String;II)V > 10,11,17,18 @34 exception:19,
20 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
23 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > 1,
25 = invokestatic < Application, Ljava/lang/String, join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String; > 22,23 @45 exception:24,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 20,21,25,26 @51 exception:27,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @54 exception:37,
return,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
return 1,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @80 exception:28,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>5 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner, -$$Nest$fgetmSessionKey(Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner;)Ljava/lang/String; > 6 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
monitorexit 1,
return 10,
monitorexit 8,
return 11,","depth : 0
public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	boolean v3 = p0.isLockdownVpnEnabled();
	Object v4 = this.mVpns.get(p1);
	boolean v5 = v4.setAlwaysOnPackage(p2, p3, p4);
	boolean v6 = p0.startAlwaysOnVpn(p1);
	boolean v7 = v4.setAlwaysOnPackage(0, 0, 0);
	return 0;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 2
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeVpnProfileStateLocked();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
depth : 2
public boolean setAlwaysOnPackageInternal(String p1, boolean p2, List p3){
	boolean v1 = ""[Legacy VPN]"".equals(p1);
	Iterator v2 = p3.iterator();
	boolean v3 = v2.hasNext();
	long v4 = Binder.clearCallingIdentity();
	VpnProfile v5 = p0.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v4);
	boolean v7 = p0.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v7 = new ArrayList(p3);
	List v9 = Collections.unmodifiableList(v7);
	this.mLockdownAllowlist = phiInstruction;
	boolean v10 = p0.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v11 = this.mNetworkInfo.getDetailedState();
	p0.updateAlwaysOnNotification(v11);
	p0.setVpnForcedLocked(this.mLockdown);
	return 1;
}
-----
depth : 2
public void saveAlwaysOnPackage(){
	long v1 = Binder.clearCallingIdentity();
	String v2 = p0.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v2, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v5 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v5, this.mUserId);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isAtLeastT(){
	return 1;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
depth : 2
public String getSessionKeyLocked(){
	boolean v1 = p0.isIkev2VpnRunner();
	String v2 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	return phiInstruction;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
depth : 1
public boolean startAlwaysOnVpn(int p1){
	Object v1 = this.mVpns.get(p1);
	boolean v2 = v1.startAlwaysOnVpn();
	return v2;
}
-----
depth : 2
public boolean startAlwaysOnVpn(){
	String v1 = p0.getAlwaysOnPackage();
	boolean v2 = p0.isAlwaysOnPackageSupported(v1);
	NetworkInfo v3 = p0.getNetworkInfo();
	boolean v4 = v3.isConnected();
	long v5 = Binder.clearCallingIdentity();
	VpnProfile v6 = p0.getVpnProfilePrivileged(v1);
	p0.startVpnProfilePrivileged(v6, v1);
	int v8 = Log.e(""Vpn"", ""Error starting always-on VPN"", caughtException);
	Binder.restoreCallingIdentity(v5);
	return 0;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeVpnProfileStateLocked();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
depth : 2
public boolean setAlwaysOnPackageInternal(String p1, boolean p2, List p3){
	boolean v1 = ""[Legacy VPN]"".equals(p1);
	Iterator v2 = p3.iterator();
	boolean v3 = v2.hasNext();
	long v4 = Binder.clearCallingIdentity();
	VpnProfile v5 = p0.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v4);
	boolean v7 = p0.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v7 = new ArrayList(p3);
	List v9 = Collections.unmodifiableList(v7);
	this.mLockdownAllowlist = phiInstruction;
	boolean v10 = p0.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v11 = this.mNetworkInfo.getDetailedState();
	p0.updateAlwaysOnNotification(v11);
	p0.setVpnForcedLocked(this.mLockdown);
	return 1;
}
-----
depth : 2
public void saveAlwaysOnPackage(){
	long v1 = Binder.clearCallingIdentity();
	String v2 = p0.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v2, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v5 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v5, this.mUserId);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isAtLeastT(){
	return 1;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
depth : 2
public String getSessionKeyLocked(){
	boolean v1 = p0.isIkev2VpnRunner();
	String v2 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	return phiInstruction;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
","public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	byte[] v5 = LegacyVpnProfileStore.get(""LOCKDOWN_VPN"");
	byte[] v4 = v5;
	boolean v3 = phiInstruction;
	Object v6 = this.mVpns.get(p1);
	boolean v10 = Objects.equals(p2, this.mPackage);
	boolean v11 = Vpn.isVpnApp(this.mPackage);
	boolean v12 = Vpn.isVpnApp(p2);
	boolean v14 = ""[Legacy VPN]"".equals(p1);
	Iterator v15 = p3.iterator();
	boolean v16 = v15.hasNext();
	long v17 = Binder.clearCallingIdentity();
	VpnProfile v18 = Vpn.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v17);
	boolean v20 = Vpn.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v21 = new ArrayList(p3);
	List v23 = Collections.unmodifiableList(v21);
	this.mLockdownAllowlist = phiInstruction;
	boolean v24 = Vpn.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v25 = this.mNetworkInfo.getDetailedState();
	Vpn.updateAlwaysOnNotification(v25);
	Vpn.setVpnForcedLocked(this.mLockdown);
	boolean v13 = 1;
	long v29 = Binder.clearCallingIdentity();
	String v30 = Vpn.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v30, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v33 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v33, this.mUserId);
	Binder.restoreCallingIdentity(v29);
	boolean v36 = 1;
	VpnProfileState v38 = new VpnProfileState(v39,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v39 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v40 = Vpn.isIkev2VpnRunner();
	String v41 = Vpn.getSessionKeyLocked();
	VpnProfileState v37 = v38;
	Intent v44 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	boolean v45 = Vpn.sendEventToVpnManagerApp(v44, this.mPackage);
	boolean v43 = v45;
	boolean v47 = Vpn.isIkev2VpnRunner();
	String v48 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	String v46 = phiInstruction;
	VpnProfileState v50 = new VpnProfileState(v51,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v51 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v52 = Vpn.isIkev2VpnRunner();
	String v53 = Vpn.getSessionKeyLocked();
	VpnProfileState v49 = v50;
	Intent v56 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v46, v49, 0, 0, 0);
	boolean v57 = Vpn.sendEventToVpnManagerApp(v56, p1);
	boolean v55 = v57;
	boolean v7 = 1;
	Object v59 = this.mVpns.get(p1);
	String v61 = Vpn.getAlwaysOnPackage();
	boolean v62 = Vpn.isAlwaysOnPackageSupported(v61);
	NetworkInfo v63 = Vpn.getNetworkInfo();
	boolean v64 = v63.isConnected();
	long v65 = Binder.clearCallingIdentity();
	VpnProfile v66 = Vpn.getVpnProfilePrivileged(v61);
	Vpn.startVpnProfilePrivileged(v66, v61);
	int v68 = Log.e(""Vpn"", ""Error starting always-on VPN"", caughtException);
	Binder.restoreCallingIdentity(v65);
	boolean v60 = 0;
	boolean v58 = v60;
	boolean v73 = Objects.equals(0, this.mPackage);
	boolean v74 = Vpn.isVpnApp(this.mPackage);
	boolean v75 = Vpn.isVpnApp(0);
	boolean v77 = ""[Legacy VPN]"".equals(p1);
	Iterator v78 = p3.iterator();
	boolean v79 = v78.hasNext();
	long v80 = Binder.clearCallingIdentity();
	VpnProfile v81 = Vpn.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v80);
	boolean v83 = Vpn.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v84 = new ArrayList(p3);
	List v86 = Collections.unmodifiableList(v84);
	this.mLockdownAllowlist = phiInstruction;
	boolean v87 = Vpn.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v88 = this.mNetworkInfo.getDetailedState();
	Vpn.updateAlwaysOnNotification(v88);
	Vpn.setVpnForcedLocked(this.mLockdown);
	boolean v76 = 1;
	long v92 = Binder.clearCallingIdentity();
	String v93 = Vpn.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v93, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v96 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v96, this.mUserId);
	Binder.restoreCallingIdentity(v92);
	boolean v99 = 1;
	VpnProfileState v101 = new VpnProfileState(v102,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v102 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v103 = Vpn.isIkev2VpnRunner();
	String v104 = Vpn.getSessionKeyLocked();
	VpnProfileState v100 = v101;
	Intent v107 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	boolean v108 = Vpn.sendEventToVpnManagerApp(v107, this.mPackage);
	boolean v106 = v108;
	boolean v110 = Vpn.isIkev2VpnRunner();
	String v111 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	String v109 = phiInstruction;
	VpnProfileState v113 = new VpnProfileState(v114,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v114 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v115 = Vpn.isIkev2VpnRunner();
	String v116 = Vpn.getSessionKeyLocked();
	VpnProfileState v112 = v113;
	Intent v119 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v109, v112, 0, 0, 0);
	boolean v120 = Vpn.sendEventToVpnManagerApp(v119, p1);
	boolean v118 = v120;
	boolean v70 = 1;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
10 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @9 exception:9,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
8 = phi  7,6,
return 8,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
14 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 12,2 @20 exception:13,
15 = checkcast <Application,Lcom/android/server/connectivity/Vpn>14 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 15,11,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,3,4,5 @55 exception:16,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
7 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 5,2 @2 exception:6,
conditional branch(eq, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 4,9,
11 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 4 @39 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @43 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
conditional branch(eq, to iindex=-1) 2,9,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @87 exception:26,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @91 exception:28,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @95 exception:32,
conditional branch(ne, to iindex=-1) 29,9,
goto (from iindex= 48 to iindex = 2),
34 = phi  25,33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 1,2,34 @103 exception:35,
conditional branch(ne, to iindex=-1) 36,9,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > = 25,
goto (from iindex= 55 to iindex = 9),
40 = phi  2,5,
43 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 43,9,
conditional branch(eq, to iindex=-1) 3,9,
44 = phi  9,9,25,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > = 44,
conditional branch(eq, to iindex=-1) 44,9,
conditional branch(eq, to iindex=-1) 4,9,
47 = new <Application,Ljava/util/ArrayList>@134,
invokespecial < Application, Ljava/util/ArrayList, <init>(Ljava/util/Collection;)V > 47,4 @136 exception:48,
50 = invokestatic < Application, Ljava/util/Collections, unmodifiableList(Ljava/util/List;)Ljava/util/List; > 47 @139 exception:49,
goto (from iindex= 72 to iindex = 5),
51 = phi  50,46,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > = 51,
55 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,40 @150 exception:54,
conditional branch(eq, to iindex=-1) 55,9,
57 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkInfo, <Application,Landroid/net/NetworkInfo> > 1,
59 = invokevirtual < Application, Landroid/net/NetworkInfo, getDetailedState()Landroid/net/NetworkInfo$DetailedState; > 57 @158 exception:58,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, updateAlwaysOnNotification(Landroid/net/NetworkInfo$DetailedState;)V > 1,59 @162 exception:60,
61 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setVpnForcedLocked(Z)V > 1,61 @167 exception:62,
goto (from iindex= 85 to iindex = 4),
return 25,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 1 @8 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 4,5,7,8 @14 exception:9,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
12 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 12,13,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,13,
goto (from iindex= 15 to iindex = 2),
17 = phi  16,13,
18 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutIntForUser(Ljava/lang/String;II)V > 10,11,17,18 @34 exception:19,
20 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
23 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > 1,
25 = invokestatic < Application, Ljava/lang/String, join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String; > 22,23 @45 exception:24,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 20,21,25,26 @51 exception:27,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @54 exception:37,
return,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
return 1,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @80 exception:28,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>5 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner, -$$Nest$fgetmSessionKey(Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner;)Ljava/lang/String; > 6 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
monitorexit 1,
return 10,
conditional branch(ne, to iindex=-1) 17,11,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, startAlwaysOnVpn(I)Z > 1,2 @63 exception:18,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/connectivity/Vpn>6 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startAlwaysOnVpn()Z > 7 @43 exception:9,
monitorenter 1,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 1 @1 exception:2,
conditional branch(ne, to iindex=-1) 3,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isAlwaysOnPackageSupported(Ljava/lang/String;)Z > 1,3 @10 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getNetworkInfo()Landroid/net/NetworkInfo; > 1 @23 exception:8,
11 = invokevirtual < Application, Landroid/net/NetworkInfo, isConnected()Z > 9 @27 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
monitorexit 1,
13 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @36 exception:12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,3 @40 exception:14,
conditional branch(eq, to iindex=-1) 15,5,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfilePrivileged(Lcom/android/internal/net/VpnProfile;Ljava/lang/String;)V > 1,15,3 @46 exception:55,
63 = getCaughtException ,
66 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 37,64,63 @141 exception:65,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 13 @144 exception:67,
return 5,
monitorexit 3,
return 10,
conditional branch(ne, to iindex=-1) 19,11,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,11,11,11 @70 exception:21,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
7 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 5,2 @2 exception:6,
conditional branch(eq, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 4,9,
11 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 4 @39 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @43 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
conditional branch(eq, to iindex=-1) 2,9,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @87 exception:26,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @91 exception:28,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @95 exception:32,
conditional branch(ne, to iindex=-1) 29,9,
goto (from iindex= 48 to iindex = 2),
34 = phi  25,33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 1,2,34 @103 exception:35,
conditional branch(ne, to iindex=-1) 36,9,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > = 25,
goto (from iindex= 55 to iindex = 9),
40 = phi  2,5,
43 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 43,9,
conditional branch(eq, to iindex=-1) 3,9,
44 = phi  9,9,25,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > = 44,
conditional branch(eq, to iindex=-1) 44,9,
conditional branch(eq, to iindex=-1) 4,9,
47 = new <Application,Ljava/util/ArrayList>@134,
invokespecial < Application, Ljava/util/ArrayList, <init>(Ljava/util/Collection;)V > 47,4 @136 exception:48,
50 = invokestatic < Application, Ljava/util/Collections, unmodifiableList(Ljava/util/List;)Ljava/util/List; > 47 @139 exception:49,
goto (from iindex= 72 to iindex = 5),
51 = phi  50,46,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > = 51,
55 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,40 @150 exception:54,
conditional branch(eq, to iindex=-1) 55,9,
57 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkInfo, <Application,Landroid/net/NetworkInfo> > 1,
59 = invokevirtual < Application, Landroid/net/NetworkInfo, getDetailedState()Landroid/net/NetworkInfo$DetailedState; > 57 @158 exception:58,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, updateAlwaysOnNotification(Landroid/net/NetworkInfo$DetailedState;)V > 1,59 @162 exception:60,
61 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setVpnForcedLocked(Z)V > 1,61 @167 exception:62,
goto (from iindex= 85 to iindex = 4),
return 25,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 1 @8 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 4,5,7,8 @14 exception:9,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
12 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 12,13,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,13,
goto (from iindex= 15 to iindex = 2),
17 = phi  16,13,
18 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutIntForUser(Ljava/lang/String;II)V > 10,11,17,18 @34 exception:19,
20 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
23 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > 1,
25 = invokestatic < Application, Ljava/lang/String, join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String; > 22,23 @45 exception:24,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 20,21,25,26 @51 exception:27,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @54 exception:37,
return,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
return 1,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @80 exception:28,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>5 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner, -$$Nest$fgetmSessionKey(Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner;)Ljava/lang/String; > 6 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
monitorexit 1,
return 10,
monitorexit 8,
return 11,","depth : 0
public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	boolean v3 = p0.isLockdownVpnEnabled();
	Object v4 = this.mVpns.get(p1);
	boolean v5 = v4.setAlwaysOnPackage(p2, p3, p4);
	boolean v6 = p0.startAlwaysOnVpn(p1);
	boolean v7 = v4.setAlwaysOnPackage(0, 0, 0);
	return 0;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 2
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeVpnProfileStateLocked();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
depth : 2
public boolean setAlwaysOnPackageInternal(String p1, boolean p2, List p3){
	boolean v1 = ""[Legacy VPN]"".equals(p1);
	Iterator v2 = p3.iterator();
	boolean v3 = v2.hasNext();
	long v4 = Binder.clearCallingIdentity();
	VpnProfile v5 = p0.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v4);
	boolean v7 = p0.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v7 = new ArrayList(p3);
	List v9 = Collections.unmodifiableList(v7);
	this.mLockdownAllowlist = phiInstruction;
	boolean v10 = p0.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v11 = this.mNetworkInfo.getDetailedState();
	p0.updateAlwaysOnNotification(v11);
	p0.setVpnForcedLocked(this.mLockdown);
	return 1;
}
-----
depth : 2
public void saveAlwaysOnPackage(){
	long v1 = Binder.clearCallingIdentity();
	String v2 = p0.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v2, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v5 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v5, this.mUserId);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isAtLeastT(){
	return 1;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
depth : 2
public String getSessionKeyLocked(){
	boolean v1 = p0.isIkev2VpnRunner();
	String v2 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	return phiInstruction;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
depth : 1
public boolean startAlwaysOnVpn(int p1){
	Object v1 = this.mVpns.get(p1);
	boolean v2 = v1.startAlwaysOnVpn();
	return v2;
}
-----
depth : 2
public boolean startAlwaysOnVpn(){
	String v1 = p0.getAlwaysOnPackage();
	boolean v2 = p0.isAlwaysOnPackageSupported(v1);
	NetworkInfo v3 = p0.getNetworkInfo();
	boolean v4 = v3.isConnected();
	long v5 = Binder.clearCallingIdentity();
	VpnProfile v6 = p0.getVpnProfilePrivileged(v1);
	p0.startVpnProfilePrivileged(v6, v1);
	int v8 = Log.e(""Vpn"", ""Error starting always-on VPN"", caughtException);
	Binder.restoreCallingIdentity(v5);
	return 0;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeVpnProfileStateLocked();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
depth : 2
public boolean setAlwaysOnPackageInternal(String p1, boolean p2, List p3){
	boolean v1 = ""[Legacy VPN]"".equals(p1);
	Iterator v2 = p3.iterator();
	boolean v3 = v2.hasNext();
	long v4 = Binder.clearCallingIdentity();
	VpnProfile v5 = p0.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v4);
	boolean v7 = p0.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v7 = new ArrayList(p3);
	List v9 = Collections.unmodifiableList(v7);
	this.mLockdownAllowlist = phiInstruction;
	boolean v10 = p0.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v11 = this.mNetworkInfo.getDetailedState();
	p0.updateAlwaysOnNotification(v11);
	p0.setVpnForcedLocked(this.mLockdown);
	return 1;
}
-----
depth : 2
public void saveAlwaysOnPackage(){
	long v1 = Binder.clearCallingIdentity();
	String v2 = p0.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v2, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v5 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v5, this.mUserId);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isAtLeastT(){
	return 1;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
depth : 2
public String getSessionKeyLocked(){
	boolean v1 = p0.isIkev2VpnRunner();
	String v2 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	return phiInstruction;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
","public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	byte[] v5 = LegacyVpnProfileStore.get(""LOCKDOWN_VPN"");
	byte[] v4 = v5;
	boolean v3 = phiInstruction;
	Object v6 = this.mVpns.get(p1);
	boolean v10 = Objects.equals(p2, this.mPackage);
	boolean v11 = Vpn.isVpnApp(this.mPackage);
	boolean v12 = Vpn.isVpnApp(p2);
	boolean v14 = ""[Legacy VPN]"".equals(p1);
	Iterator v15 = p3.iterator();
	boolean v16 = v15.hasNext();
	long v17 = Binder.clearCallingIdentity();
	VpnProfile v18 = Vpn.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v17);
	boolean v20 = Vpn.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v21 = new ArrayList(p3);
	List v23 = Collections.unmodifiableList(v21);
	this.mLockdownAllowlist = phiInstruction;
	boolean v24 = Vpn.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v25 = this.mNetworkInfo.getDetailedState();
	Vpn.updateAlwaysOnNotification(v25);
	Vpn.setVpnForcedLocked(this.mLockdown);
	boolean v13 = 1;
	long v29 = Binder.clearCallingIdentity();
	String v30 = Vpn.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v30, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v33 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v33, this.mUserId);
	Binder.restoreCallingIdentity(v29);
	boolean v36 = 1;
	VpnProfileState v38 = new VpnProfileState(v39,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v39 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v40 = Vpn.isIkev2VpnRunner();
	String v41 = Vpn.getSessionKeyLocked();
	VpnProfileState v37 = v38;
	Intent v44 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	boolean v45 = Vpn.sendEventToVpnManagerApp(v44, this.mPackage);
	boolean v43 = v45;
	boolean v47 = Vpn.isIkev2VpnRunner();
	String v48 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	String v46 = phiInstruction;
	VpnProfileState v50 = new VpnProfileState(v51,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v51 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v52 = Vpn.isIkev2VpnRunner();
	String v53 = Vpn.getSessionKeyLocked();
	VpnProfileState v49 = v50;
	Intent v56 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v46, v49, 0, 0, 0);
	boolean v57 = Vpn.sendEventToVpnManagerApp(v56, p1);
	boolean v55 = v57;
	boolean v7 = 1;
	Object v59 = this.mVpns.get(p1);
	String v61 = Vpn.getAlwaysOnPackage();
	boolean v62 = Vpn.isAlwaysOnPackageSupported(v61);
	NetworkInfo v63 = Vpn.getNetworkInfo();
	boolean v64 = v63.isConnected();
	long v65 = Binder.clearCallingIdentity();
	VpnProfile v66 = Vpn.getVpnProfilePrivileged(v61);
	Vpn.startVpnProfilePrivileged(v66, v61);
	int v68 = Log.e(""Vpn"", ""Error starting always-on VPN"", caughtException);
	Binder.restoreCallingIdentity(v65);
	boolean v60 = 0;
	boolean v58 = v60;
	boolean v73 = Objects.equals(0, this.mPackage);
	boolean v74 = Vpn.isVpnApp(this.mPackage);
	boolean v75 = Vpn.isVpnApp(0);
	boolean v77 = ""[Legacy VPN]"".equals(p1);
	Iterator v78 = p3.iterator();
	boolean v79 = v78.hasNext();
	long v80 = Binder.clearCallingIdentity();
	VpnProfile v81 = Vpn.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v80);
	boolean v83 = Vpn.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v84 = new ArrayList(p3);
	List v86 = Collections.unmodifiableList(v84);
	this.mLockdownAllowlist = phiInstruction;
	boolean v87 = Vpn.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v88 = this.mNetworkInfo.getDetailedState();
	Vpn.updateAlwaysOnNotification(v88);
	Vpn.setVpnForcedLocked(this.mLockdown);
	boolean v76 = 1;
	long v92 = Binder.clearCallingIdentity();
	String v93 = Vpn.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v93, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v96 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v96, this.mUserId);
	Binder.restoreCallingIdentity(v92);
	boolean v99 = 1;
	VpnProfileState v101 = new VpnProfileState(v102,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v102 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v103 = Vpn.isIkev2VpnRunner();
	String v104 = Vpn.getSessionKeyLocked();
	VpnProfileState v100 = v101;
	Intent v107 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	boolean v108 = Vpn.sendEventToVpnManagerApp(v107, this.mPackage);
	boolean v106 = v108;
	boolean v110 = Vpn.isIkev2VpnRunner();
	String v111 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	String v109 = phiInstruction;
	VpnProfileState v113 = new VpnProfileState(v114,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v114 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v115 = Vpn.isIkev2VpnRunner();
	String v116 = Vpn.getSessionKeyLocked();
	VpnProfileState v112 = v113;
	Intent v119 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v109, v112, 0, 0, 0);
	boolean v120 = Vpn.sendEventToVpnManagerApp(v119, p1);
	boolean v118 = v120;
	boolean v70 = 1;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/VpnManagerService","setAlwaysOnVpnPackage(ILjava/lang/String;ZLjava/util/List;)Z","2","invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceControlAlwaysOnVpnPermission()V > 1 @0 exception:6,
invokevirtual < Application, Lcom/android/server/VpnManagerService, enforceCrossUserPermission(I)V > 1,2 @3 exception:7,
8 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 8,
10 = invokevirtual < Application, Lcom/android/server/VpnManagerService, isLockdownVpnEnabled()Z > 1 @9 exception:9,
2 = getfield < Application, Lcom/android/server/VpnManagerService, mVpnProfileStore, <Application,Lcom/android/server/connectivity/VpnProfileStore> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/VpnProfileStore, get(Ljava/lang/String;)[B > 2,3 @4 exception:4,
4 = invokestatic < Application, Landroid/security/LegacyVpnProfileStore, get(Ljava/lang/String;)[B > 2 @0 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
return 8,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
14 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 12,2 @20 exception:13,
15 = checkcast <Application,Lcom/android/server/connectivity/Vpn>14 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 15,11,
17 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,3,4,5 @55 exception:16,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
7 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 5,2 @2 exception:6,
conditional branch(eq, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 4,9,
11 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 4 @39 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @43 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
conditional branch(eq, to iindex=-1) 2,9,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @87 exception:26,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @91 exception:28,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @95 exception:32,
conditional branch(ne, to iindex=-1) 29,9,
goto (from iindex= 48 to iindex = 2),
34 = phi  25,33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 1,2,34 @103 exception:35,
conditional branch(ne, to iindex=-1) 36,9,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > = 25,
goto (from iindex= 55 to iindex = 9),
40 = phi  2,5,
43 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 43,9,
conditional branch(eq, to iindex=-1) 3,9,
44 = phi  9,9,25,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > = 44,
conditional branch(eq, to iindex=-1) 44,9,
conditional branch(eq, to iindex=-1) 4,9,
47 = new <Application,Ljava/util/ArrayList>@134,
invokespecial < Application, Ljava/util/ArrayList, <init>(Ljava/util/Collection;)V > 47,4 @136 exception:48,
50 = invokestatic < Application, Ljava/util/Collections, unmodifiableList(Ljava/util/List;)Ljava/util/List; > 47 @139 exception:49,
goto (from iindex= 72 to iindex = 5),
51 = phi  50,46,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > = 51,
55 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,40 @150 exception:54,
conditional branch(eq, to iindex=-1) 55,9,
57 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkInfo, <Application,Landroid/net/NetworkInfo> > 1,
59 = invokevirtual < Application, Landroid/net/NetworkInfo, getDetailedState()Landroid/net/NetworkInfo$DetailedState; > 57 @158 exception:58,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, updateAlwaysOnNotification(Landroid/net/NetworkInfo$DetailedState;)V > 1,59 @162 exception:60,
61 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setVpnForcedLocked(Z)V > 1,61 @167 exception:62,
goto (from iindex= 85 to iindex = 4),
return 25,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 1 @8 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 4,5,7,8 @14 exception:9,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
12 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 12,13,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,13,
17 = phi  16,13,
18 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutIntForUser(Ljava/lang/String;II)V > 10,11,17,18 @34 exception:19,
20 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
23 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > 1,
25 = invokestatic < Application, Ljava/lang/String, join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String; > 22,23 @45 exception:24,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 20,21,25,26 @51 exception:27,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @54 exception:37,
return,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
return 1,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @80 exception:28,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>5 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner, -$$Nest$fgetmSessionKey(Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner;)Ljava/lang/String; > 6 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
monitorexit 1,
return 10,
conditional branch(ne, to iindex=-1) 17,11,
19 = invokevirtual < Application, Lcom/android/server/VpnManagerService, startAlwaysOnVpn(I)Z > 1,2 @63 exception:18,
3 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/VpnManagerService, mVpns, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Application,Lcom/android/server/connectivity/Vpn>6 <Application,Lcom/android/server/connectivity/Vpn>,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startAlwaysOnVpn()Z > 7 @43 exception:9,
monitorenter 1,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 1 @1 exception:2,
conditional branch(ne, to iindex=-1) 3,5,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isAlwaysOnPackageSupported(Ljava/lang/String;)Z > 1,3 @10 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getNetworkInfo()Landroid/net/NetworkInfo; > 1 @23 exception:8,
11 = invokevirtual < Application, Landroid/net/NetworkInfo, isConnected()Z > 9 @27 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
monitorexit 1,
13 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @36 exception:12,
15 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,3 @40 exception:14,
conditional branch(eq, to iindex=-1) 15,5,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, startVpnProfilePrivileged(Lcom/android/internal/net/VpnProfile;Ljava/lang/String;)V > 1,15,3 @46 exception:55,
63 = getCaughtException ,
66 = invokestatic < Application, Landroid/util/Log, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 37,64,63 @141 exception:65,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 13 @144 exception:67,
return 5,
monitorexit 3,
return 10,
conditional branch(ne, to iindex=-1) 19,11,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackage(Ljava/lang/String;ZLjava/util/List;)Z > 15,11,11,11 @70 exception:21,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, enforceControlPermissionOrInternalCaller()V > 1 @1 exception:5,
2 = getfield < Application, Lcom/android/server/connectivity/Vpn, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
return,
6 = getfield < Application, Lcom/android/server/connectivity/Vpn, mPackage, <Application,Ljava/lang/String> > 1,
8 = invokestatic < Application, Ljava/util/Objects, equals(Ljava/lang/Object;Ljava/lang/Object;)Z > 2,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,9,
13 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 6 @17 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,9,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 3,15,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 20 to iindex = 2),
17 = phi  10,9,
19 = invokestatic < Application, Lcom/android/server/connectivity/Vpn, isVpnApp(Ljava/lang/String;)Z > 2 @36 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 27 to iindex = 2),
20 = phi  10,9,
22 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setAlwaysOnPackageInternal(Ljava/lang/String;ZLjava/util/List;)Z > 1,2,3,4 @47 exception:21,
7 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 5,2 @2 exception:6,
conditional branch(eq, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 4,9,
11 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 4 @39 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @43 exception:12,
conditional branch(eq, to iindex=-1) 13,9,
conditional branch(eq, to iindex=-1) 2,9,
27 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @87 exception:26,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getVpnProfilePrivileged(Ljava/lang/String;)Lcom/android/internal/net/VpnProfile; > 1,2 @91 exception:28,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 27 @95 exception:32,
conditional branch(ne, to iindex=-1) 29,9,
goto (from iindex= 48 to iindex = 2),
34 = phi  25,33,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setPackageAuthorization(Ljava/lang/String;I)Z > 1,2,34 @103 exception:35,
conditional branch(ne, to iindex=-1) 36,9,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > = 25,
goto (from iindex= 55 to iindex = 9),
40 = phi  2,5,
43 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 43,9,
conditional branch(eq, to iindex=-1) 3,9,
44 = phi  9,9,25,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > = 44,
conditional branch(eq, to iindex=-1) 44,9,
conditional branch(eq, to iindex=-1) 4,9,
47 = new <Application,Ljava/util/ArrayList>@134,
invokespecial < Application, Ljava/util/ArrayList, <init>(Ljava/util/Collection;)V > 47,4 @136 exception:48,
50 = invokestatic < Application, Ljava/util/Collections, unmodifiableList(Ljava/util/List;)Ljava/util/List; > 47 @139 exception:49,
goto (from iindex= 72 to iindex = 5),
51 = phi  50,46,
putfield 1.< Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > = 51,
55 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isCurrentPreparedPackage(Ljava/lang/String;)Z > 1,40 @150 exception:54,
conditional branch(eq, to iindex=-1) 55,9,
57 = getfield < Application, Lcom/android/server/connectivity/Vpn, mNetworkInfo, <Application,Landroid/net/NetworkInfo> > 1,
59 = invokevirtual < Application, Landroid/net/NetworkInfo, getDetailedState()Landroid/net/NetworkInfo$DetailedState; > 57 @158 exception:58,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, updateAlwaysOnNotification(Landroid/net/NetworkInfo$DetailedState;)V > 1,59 @162 exception:60,
61 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, setVpnForcedLocked(Z)V > 1,61 @167 exception:62,
goto (from iindex= 85 to iindex = 4),
return 25,
conditional branch(ne, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn, saveAlwaysOnPackage()V > 1 @55 exception:23,
3 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:2,
4 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getAlwaysOnPackage()Ljava/lang/String; > 1 @8 exception:6,
8 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 4,5,7,8 @14 exception:9,
10 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
12 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 12,13,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 14,13,
goto (from iindex= 15 to iindex = 2),
17 = phi  16,13,
18 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutIntForUser(Ljava/lang/String;II)V > 10,11,17,18 @34 exception:19,
20 = getfield < Application, Lcom/android/server/connectivity/Vpn, mSystemServices, <Application,Lcom/android/server/connectivity/Vpn$SystemServices> > 1,
23 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdownAllowlist, <Application,Ljava/util/List> > 1,
25 = invokestatic < Application, Ljava/lang/String, join(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String; > 22,23 @45 exception:24,
26 = getfield < Application, Lcom/android/server/connectivity/Vpn, mUserId, <Primordial,I> > 1,
invokevirtual < Application, Lcom/android/server/connectivity/Vpn$SystemServices, settingsSecurePutStringForUser(Ljava/lang/String;Ljava/lang/String;I)V > 20,21,25,26 @51 exception:27,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 3 @54 exception:37,
return,
25 = invokestatic < Application, Lcom/android/modules/utils/build/SdkLevel, isAtLeastT()Z > @58 exception:24,
return 1,
conditional branch(ne, to iindex=-1) 25,9,
conditional branch(eq, to iindex=-1) 17,9,
conditional branch(eq, to iindex=-1) 11,9,
29 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @80 exception:28,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
32 = phi  31,29,
36 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,6,9,32,9,9,9 @89 exception:35,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
conditional branch(eq, to iindex=-1) 20,9,
45 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @98 exception:44,
3 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/connectivity/Vpn, mVpnRunner, <Application,Lcom/android/server/connectivity/Vpn$VpnRunner> > 1,
6 = checkcast <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>5 <Application,Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner>,
8 = invokestatic < Application, Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner, -$$Nest$fgetmSessionKey(Lcom/android/server/connectivity/Vpn$IkeV2VpnRunner;)Ljava/lang/String; > 6 @10 exception:7,
goto (from iindex= 7 to iindex = 2),
9 = phi  8,4,
return 9,
47 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, makeVpnProfileStateLocked()Landroid/net/VpnProfileState; > 1 @102 exception:46,
2 = new <Application,Landroid/net/VpnProfileState>@0,
3 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLegacyState, <Primordial,I> > 1,
5 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getStateFromLegacyState(I)I > 1,3 @4 exception:4,
7 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, isIkev2VpnRunner()Z > 1 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, getSessionKeyLocked()Ljava/lang/String; > 1 @14 exception:9,
goto (from iindex= 9 to iindex = 2),
11 = phi  10,8,
14 = getfield < Application, Lcom/android/server/connectivity/Vpn, mAlwaysOn, <Primordial,Z> > 1,
15 = getfield < Application, Lcom/android/server/connectivity/Vpn, mLockdown, <Primordial,Z> > 1,
invokespecial < Application, Landroid/net/VpnProfileState, <init>(ILjava/lang/String;ZZ)V > 2,5,11,14,15 @24 exception:16,
return 2,
49 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Z > 1,26,27,27,2,45,47,9,9,9 @111 exception:48,
12 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, buildVpnManagerEventIntent(Ljava/lang/String;IILjava/lang/String;Ljava/lang/String;Landroid/net/VpnProfileState;Landroid/net/Network;Landroid/net/NetworkCapabilities;Landroid/net/LinkProperties;)Landroid/content/Intent; > 1,2,3,4,5,6,7,8,9,10 @0 exception:11,
14 = invokevirtual < Application, Lcom/android/server/connectivity/Vpn, sendEventToVpnManagerApp(Landroid/content/Intent;Ljava/lang/String;)Z > 1,12,5 @4 exception:13,
return 14,
monitorexit 1,
return 10,
monitorexit 8,
return 11,","depth : 0
public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	boolean v3 = p0.isLockdownVpnEnabled();
	Object v4 = this.mVpns.get(p1);
	boolean v5 = v4.setAlwaysOnPackage(p2, p3, p4);
	boolean v6 = p0.startAlwaysOnVpn(p1);
	boolean v7 = v4.setAlwaysOnPackage(0, 0, 0);
	return 0;
}
-----
depth : 1
public boolean isLockdownVpnEnabled(){
	byte[] v1 = this.mVpnProfileStore.get(""LOCKDOWN_VPN"");
	return phiInstruction;
}
-----
depth : 2
public byte[] get(String p1){
	byte[] v1 = LegacyVpnProfileStore.get(p1);
	return v1;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeVpnProfileStateLocked();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
depth : 2
public boolean setAlwaysOnPackageInternal(String p1, boolean p2, List p3){
	boolean v1 = ""[Legacy VPN]"".equals(p1);
	Iterator v2 = p3.iterator();
	boolean v3 = v2.hasNext();
	long v4 = Binder.clearCallingIdentity();
	VpnProfile v5 = p0.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v4);
	boolean v7 = p0.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v7 = new ArrayList(p3);
	List v9 = Collections.unmodifiableList(v7);
	this.mLockdownAllowlist = phiInstruction;
	boolean v10 = p0.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v11 = this.mNetworkInfo.getDetailedState();
	p0.updateAlwaysOnNotification(v11);
	p0.setVpnForcedLocked(this.mLockdown);
	return 1;
}
-----
depth : 2
public void saveAlwaysOnPackage(){
	long v1 = Binder.clearCallingIdentity();
	String v2 = p0.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v2, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v5 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v5, this.mUserId);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isAtLeastT(){
	return 1;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
depth : 2
public String getSessionKeyLocked(){
	boolean v1 = p0.isIkev2VpnRunner();
	String v2 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	return phiInstruction;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
depth : 1
public boolean startAlwaysOnVpn(int p1){
	Object v1 = this.mVpns.get(p1);
	boolean v2 = v1.startAlwaysOnVpn();
	return v2;
}
-----
depth : 2
public boolean startAlwaysOnVpn(){
	String v1 = p0.getAlwaysOnPackage();
	boolean v2 = p0.isAlwaysOnPackageSupported(v1);
	NetworkInfo v3 = p0.getNetworkInfo();
	boolean v4 = v3.isConnected();
	long v5 = Binder.clearCallingIdentity();
	VpnProfile v6 = p0.getVpnProfilePrivileged(v1);
	p0.startVpnProfilePrivileged(v6, v1);
	int v8 = Log.e(""Vpn"", ""Error starting always-on VPN"", caughtException);
	Binder.restoreCallingIdentity(v5);
	return 0;
}
-----
depth : 1
public boolean setAlwaysOnPackage(String p1, boolean p2, List p3){
	p0.enforceControlPermissionOrInternalCaller();
	boolean v2 = Objects.equals(p1, this.mPackage);
	boolean v3 = Vpn.isVpnApp(this.mPackage);
	boolean v4 = Vpn.isVpnApp(p1);
	boolean v5 = p0.setAlwaysOnPackageInternal(p1, p2, p3);
	p0.saveAlwaysOnPackage();
	boolean v7 = SdkLevel.isAtLeastT();
	VpnProfileState v8 = p0.makeVpnProfileStateLocked();
	boolean v9 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	String v10 = p0.getSessionKeyLocked();
	VpnProfileState v11 = p0.makeVpnProfileStateLocked();
	boolean v12 = p0.sendEventToVpnManagerApp(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v10, v11, 0, 0, 0);
	return 1;
}
-----
depth : 2
public void enforceControlPermissionOrInternalCaller(){
	return;
}
-----
depth : 2
public boolean setAlwaysOnPackageInternal(String p1, boolean p2, List p3){
	boolean v1 = ""[Legacy VPN]"".equals(p1);
	Iterator v2 = p3.iterator();
	boolean v3 = v2.hasNext();
	long v4 = Binder.clearCallingIdentity();
	VpnProfile v5 = p0.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v4);
	boolean v7 = p0.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v7 = new ArrayList(p3);
	List v9 = Collections.unmodifiableList(v7);
	this.mLockdownAllowlist = phiInstruction;
	boolean v10 = p0.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v11 = this.mNetworkInfo.getDetailedState();
	p0.updateAlwaysOnNotification(v11);
	p0.setVpnForcedLocked(this.mLockdown);
	return 1;
}
-----
depth : 2
public void saveAlwaysOnPackage(){
	long v1 = Binder.clearCallingIdentity();
	String v2 = p0.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v2, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v5 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v5, this.mUserId);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public boolean isAtLeastT(){
	return 1;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
depth : 2
public String getSessionKeyLocked(){
	boolean v1 = p0.isIkev2VpnRunner();
	String v2 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	return phiInstruction;
}
-----
depth : 2
public VpnProfileState makeVpnProfileStateLocked(){
	VpnProfileState v0 = new VpnProfileState(v1,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v1 = p0.getStateFromLegacyState(this.mLegacyState);
	boolean v2 = p0.isIkev2VpnRunner();
	String v3 = p0.getSessionKeyLocked();
	return v0;
}
-----
depth : 2
public boolean sendEventToVpnManagerApp(String p1, int p2, int p3, String p4, String p5, VpnProfileState p6, Network p7, NetworkCapabilities p8, LinkProperties p9){
	Intent v1 = p0.buildVpnManagerEventIntent(p1, p2, p3, p4, p5, p6, p7, p8, p9);
	boolean v2 = p0.sendEventToVpnManagerApp(v1, p4);
	return v2;
}
-----
","public boolean setAlwaysOnVpnPackage(int p1, String p2, boolean p3, List p4){
	byte[] v5 = LegacyVpnProfileStore.get(""LOCKDOWN_VPN"");
	byte[] v4 = v5;
	boolean v3 = phiInstruction;
	Object v6 = this.mVpns.get(p1);
	boolean v10 = Objects.equals(p2, this.mPackage);
	boolean v11 = Vpn.isVpnApp(this.mPackage);
	boolean v12 = Vpn.isVpnApp(p2);
	boolean v14 = ""[Legacy VPN]"".equals(p1);
	Iterator v15 = p3.iterator();
	boolean v16 = v15.hasNext();
	long v17 = Binder.clearCallingIdentity();
	VpnProfile v18 = Vpn.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v17);
	boolean v20 = Vpn.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v21 = new ArrayList(p3);
	List v23 = Collections.unmodifiableList(v21);
	this.mLockdownAllowlist = phiInstruction;
	boolean v24 = Vpn.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v25 = this.mNetworkInfo.getDetailedState();
	Vpn.updateAlwaysOnNotification(v25);
	Vpn.setVpnForcedLocked(this.mLockdown);
	boolean v13 = 1;
	long v29 = Binder.clearCallingIdentity();
	String v30 = Vpn.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v30, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v33 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v33, this.mUserId);
	Binder.restoreCallingIdentity(v29);
	boolean v36 = 1;
	VpnProfileState v38 = new VpnProfileState(v39,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v39 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v40 = Vpn.isIkev2VpnRunner();
	String v41 = Vpn.getSessionKeyLocked();
	VpnProfileState v37 = v38;
	Intent v44 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	boolean v45 = Vpn.sendEventToVpnManagerApp(v44, this.mPackage);
	boolean v43 = v45;
	boolean v47 = Vpn.isIkev2VpnRunner();
	String v48 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	String v46 = phiInstruction;
	VpnProfileState v50 = new VpnProfileState(v51,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v51 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v52 = Vpn.isIkev2VpnRunner();
	String v53 = Vpn.getSessionKeyLocked();
	VpnProfileState v49 = v50;
	Intent v56 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v46, v49, 0, 0, 0);
	boolean v57 = Vpn.sendEventToVpnManagerApp(v56, p1);
	boolean v55 = v57;
	boolean v7 = 1;
	Object v59 = this.mVpns.get(p1);
	String v61 = Vpn.getAlwaysOnPackage();
	boolean v62 = Vpn.isAlwaysOnPackageSupported(v61);
	NetworkInfo v63 = Vpn.getNetworkInfo();
	boolean v64 = v63.isConnected();
	long v65 = Binder.clearCallingIdentity();
	VpnProfile v66 = Vpn.getVpnProfilePrivileged(v61);
	Vpn.startVpnProfilePrivileged(v66, v61);
	int v68 = Log.e(""Vpn"", ""Error starting always-on VPN"", caughtException);
	Binder.restoreCallingIdentity(v65);
	boolean v60 = 0;
	boolean v58 = v60;
	boolean v73 = Objects.equals(0, this.mPackage);
	boolean v74 = Vpn.isVpnApp(this.mPackage);
	boolean v75 = Vpn.isVpnApp(0);
	boolean v77 = ""[Legacy VPN]"".equals(p1);
	Iterator v78 = p3.iterator();
	boolean v79 = v78.hasNext();
	long v80 = Binder.clearCallingIdentity();
	VpnProfile v81 = Vpn.getVpnProfilePrivileged(p1);
	Binder.restoreCallingIdentity(v80);
	boolean v83 = Vpn.setPackageAuthorization(p1, phiInstruction);
	this.mAlwaysOn = 1;
	this.mLockdown = phiInstruction;
	ArrayList v84 = new ArrayList(p3);
	List v86 = Collections.unmodifiableList(v84);
	this.mLockdownAllowlist = phiInstruction;
	boolean v87 = Vpn.isCurrentPreparedPackage(phiInstruction);
	NetworkInfo$DetailedState v88 = this.mNetworkInfo.getDetailedState();
	Vpn.updateAlwaysOnNotification(v88);
	Vpn.setVpnForcedLocked(this.mLockdown);
	boolean v76 = 1;
	long v92 = Binder.clearCallingIdentity();
	String v93 = Vpn.getAlwaysOnPackage();
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_app"", v93, this.mUserId);
	this.mSystemServices.settingsSecurePutIntForUser(""always_on_vpn_lockdown"", phiInstruction, this.mUserId);
	String v96 = String.join("","", this.mLockdownAllowlist);
	this.mSystemServices.settingsSecurePutStringForUser(""always_on_vpn_lockdown_whitelist"", v96, this.mUserId);
	Binder.restoreCallingIdentity(v92);
	boolean v99 = 1;
	VpnProfileState v101 = new VpnProfileState(v102,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v102 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v103 = Vpn.isIkev2VpnRunner();
	String v104 = Vpn.getSessionKeyLocked();
	VpnProfileState v100 = v101;
	Intent v107 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, this.mPackage, 0, phiInstruction, 0, 0, 0);
	boolean v108 = Vpn.sendEventToVpnManagerApp(v107, this.mPackage);
	boolean v106 = v108;
	boolean v110 = Vpn.isIkev2VpnRunner();
	String v111 = Vpn$IkeV2VpnRunner.-$$Nest$fgetmSessionKey(this.mVpnRunner);
	String v109 = phiInstruction;
	VpnProfileState v113 = new VpnProfileState(v114,phiInstruction,this.mAlwaysOn,this.mLockdown);
	int v114 = Vpn.getStateFromLegacyState(this.mLegacyState);
	boolean v115 = Vpn.isIkev2VpnRunner();
	String v116 = Vpn.getSessionKeyLocked();
	VpnProfileState v112 = v113;
	Intent v119 = Vpn.buildVpnManagerEventIntent(""android.net.category.EVENT_ALWAYS_ON_STATE_CHANGED"", -1, -1, p1, v109, v112, 0, 0, 0);
	boolean v120 = Vpn.sendEventToVpnManagerApp(v119, p1);
	boolean v118 = v120;
	boolean v70 = 1;
	return 0;
}
","SYS_OR_SIG"

