"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canConfigureInteractAcrossProfiles(Ljava/lang/String;)Z","0","3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,5 @6 exception:6,
return 7,","depth : 0
public boolean canConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.canConfigureInteractAcrossProfiles(p1, v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canConfigureInteractAcrossProfiles(Ljava/lang/String;)Z","1","3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,5 @6 exception:6,
5 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,3 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasOtherProfileWithPackageInstalled(Ljava/lang/String;I)Z > 1,2,3 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
13 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasRequestedAppOpPermission(Ljava/lang/String;Ljava/lang/String;)Z > 1,11,2 @21 exception:12,
conditional branch(ne, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isCrossProfilePackageAllowlisted(Ljava/lang/String;)Z > 1,2 @28 exception:14,
return 15,
return 7,","depth : 0
public boolean canConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.canConfigureInteractAcrossProfiles(p1, v1);
	return v2;
}
-----
depth : 1
public boolean canConfigureInteractAcrossProfiles(String p1, int p2){
	boolean v1 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, p2);
	boolean v2 = p0.hasOtherProfileWithPackageInstalled(p1, p2);
	String v3 = AppOpsManager.opToPermission(93);
	boolean v4 = p0.hasRequestedAppOpPermission(v3, p1);
	boolean v5 = p0.isCrossProfilePackageAllowlisted(p1);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canConfigureInteractAcrossProfiles(Ljava/lang/String;)Z","2","3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,5 @6 exception:6,
5 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,3 @0 exception:4,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = arraylength 9,
conditional branch(ge, to iindex=-1) 10,11,
conditional branch(eq, to iindex=-1) 13,7,
conditional branch(ne, to iindex=-1) 18,7,
22 = binaryop(xor) 20 , 21,
return 22,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasOtherProfileWithPackageInstalled(Ljava/lang/String;I)Z > 1,2,3 @8 exception:7,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda10>@2,
9 = checkcast <Application,Ljava/lang/Boolean>8 <Application,Ljava/lang/Boolean>,
return 11,
conditional branch(ne, to iindex=-1) 8,6,
13 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasRequestedAppOpPermission(Ljava/lang/String;Ljava/lang/String;)Z > 1,11,2 @21 exception:12,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return 18,
conditional branch(ne, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isCrossProfilePackageAllowlisted(Ljava/lang/String;)Z > 1,2 @28 exception:14,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
4 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda9>@2,
8 = checkcast <Application,Ljava/lang/Boolean>7 <Application,Ljava/lang/Boolean>,
return 10,
return 15,
return 7,","depth : 0
public boolean canConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.canConfigureInteractAcrossProfiles(p1, v1);
	return v2;
}
-----
depth : 1
public boolean canConfigureInteractAcrossProfiles(String p1, int p2){
	boolean v1 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, p2);
	boolean v2 = p0.hasOtherProfileWithPackageInstalled(p1, p2);
	String v3 = AppOpsManager.opToPermission(93);
	boolean v4 = p0.hasRequestedAppOpPermission(v3, p1);
	boolean v5 = p0.isCrossProfilePackageAllowlisted(p1);
	return v5;
}
-----
depth : 2
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1, int p2){
	UserManager v1 = this.mInjector.getUserManager();
	[I v2 = v1.getProfileIds(p2, 0);
	boolean v3 = p0.isProfileOwner(p1, v2);
	String v4 = AppOpsManager.opToPermission(93);
	boolean v5 = p0.hasRequestedAppOpPermission(v4, p1);
	boolean v6 = p0.isPlatformSignedAppWithNonUserConfigurablePermission(p1, v2);
	return (v6 ^ 1);
}
-----
depth : 2
public boolean hasOtherProfileWithPackageInstalled(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda10 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda10(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	boolean v3 = v2.booleanValue();
	return v3;
}
-----
depth : 2
public boolean hasRequestedAppOpPermission(String p1, String p2){
	IPackageManager v1 = this.mInjector.getIPackageManager();
	String v2 = v1.getAppOpPermissionPackages(p1);
	int v3 = Slog.e(""CrossProfileAppsService"", ""PackageManager dead. Cannot get permission info"");
	return 0;
}
-----
depth : 2
public boolean isCrossProfilePackageAllowlisted(String p1){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda9 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda9(p0,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	boolean v3 = v2.booleanValue();
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canConfigureInteractAcrossProfiles(Ljava/lang/String;)Z","2","3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,5 @6 exception:6,
5 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,3 @0 exception:4,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = arraylength 9,
conditional branch(ge, to iindex=-1) 10,11,
conditional branch(eq, to iindex=-1) 13,7,
conditional branch(ne, to iindex=-1) 18,7,
22 = binaryop(xor) 20 , 21,
return 22,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasOtherProfileWithPackageInstalled(Ljava/lang/String;I)Z > 1,2,3 @8 exception:7,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda10>@2,
9 = checkcast <Application,Ljava/lang/Boolean>8 <Application,Ljava/lang/Boolean>,
return 11,
conditional branch(ne, to iindex=-1) 8,6,
13 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasRequestedAppOpPermission(Ljava/lang/String;Ljava/lang/String;)Z > 1,11,2 @21 exception:12,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return 18,
conditional branch(ne, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isCrossProfilePackageAllowlisted(Ljava/lang/String;)Z > 1,2 @28 exception:14,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
4 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda9>@2,
8 = checkcast <Application,Ljava/lang/Boolean>7 <Application,Ljava/lang/Boolean>,
return 10,
return 15,
return 7,","depth : 0
public boolean canConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.canConfigureInteractAcrossProfiles(p1, v1);
	return v2;
}
-----
depth : 1
public boolean canConfigureInteractAcrossProfiles(String p1, int p2){
	boolean v1 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, p2);
	boolean v2 = p0.hasOtherProfileWithPackageInstalled(p1, p2);
	String v3 = AppOpsManager.opToPermission(93);
	boolean v4 = p0.hasRequestedAppOpPermission(v3, p1);
	boolean v5 = p0.isCrossProfilePackageAllowlisted(p1);
	return v5;
}
-----
depth : 2
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1, int p2){
	UserManager v1 = this.mInjector.getUserManager();
	[I v2 = v1.getProfileIds(p2, 0);
	boolean v3 = p0.isProfileOwner(p1, v2);
	String v4 = AppOpsManager.opToPermission(93);
	boolean v5 = p0.hasRequestedAppOpPermission(v4, p1);
	boolean v6 = p0.isPlatformSignedAppWithNonUserConfigurablePermission(p1, v2);
	return (v6 ^ 1);
}
-----
depth : 2
public boolean hasOtherProfileWithPackageInstalled(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda10 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda10(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	boolean v3 = v2.booleanValue();
	return v3;
}
-----
depth : 2
public boolean hasRequestedAppOpPermission(String p1, String p2){
	IPackageManager v1 = this.mInjector.getIPackageManager();
	String v2 = v1.getAppOpPermissionPackages(p1);
	boolean v3 = ArrayUtils.contains(v2, p2);
	int v4 = Slog.e(""CrossProfileAppsService"", ""PackageManager dead. Cannot get permission info"");
	return 0;
}
-----
depth : 2
public boolean isCrossProfilePackageAllowlisted(String p1){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda9 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda9(p0,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	boolean v3 = v2.booleanValue();
	return v3;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canInteractAcrossProfiles(Ljava/lang/String;)Z","0","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,8 @12 exception:9,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,2 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,13,
17 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, haveProfilesGotInteractAcrossProfilesPermission(Ljava/lang/String;Ljava/util/List;)Z > 1,2,10 @30 exception:16,
conditional branch(eq, to iindex=-1) 17,13,
19 = phi  13,13,18,
return 19,","depth : 0
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	int v3 = this.mInjector.getCallingUserId();
	List v4 = p0.getTargetUserProfilesUnchecked(p1, v3);
	boolean v5 = v4.isEmpty();
	boolean v6 = p0.hasCallerGotInteractAcrossProfilesPermission(p1);
	boolean v7 = p0.haveProfilesGotInteractAcrossProfilesPermission(p1, v4);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canInteractAcrossProfiles(Ljava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,8 @12 exception:9,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7>@2,
9 = checkcast <Application,Ljava/util/List>8 <Application,Ljava/util/List>,
return 9,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,2 @24 exception:14,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
return 10,
conditional branch(eq, to iindex=-1) 15,13,
17 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, haveProfilesGotInteractAcrossProfilesPermission(Ljava/lang/String;Ljava/util/List;)Z > 1,2,10 @30 exception:16,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Landroid/os/UserHandle>10 <Application,Landroid/os/UserHandle>,
12 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
13 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5>@18,
17 = checkcast <Application,Ljava/lang/Integer>16 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 19,20,
22 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,19,20 @38 exception:21,
conditional branch(ne, to iindex=-1) 22,8,
return 8,
conditional branch(eq, to iindex=-1) 17,13,
19 = phi  13,13,18,
return 19,","depth : 0
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	int v3 = this.mInjector.getCallingUserId();
	List v4 = p0.getTargetUserProfilesUnchecked(p1, v3);
	boolean v5 = v4.isEmpty();
	boolean v6 = p0.hasCallerGotInteractAcrossProfilesPermission(p1);
	boolean v7 = p0.haveProfilesGotInteractAcrossProfilesPermission(p1, v4);
	return phiInstruction;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public List getTargetUserProfilesUnchecked(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	return v2;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
depth : 1
public boolean haveProfilesGotInteractAcrossProfilesPermission(String p1, List p2){
	Iterator v1 = p2.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5 v3 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5(p0,p1,v3);
	Object v5 = this.mInjector.withCleanCallingIdentity(v3);
	int v6 = v5.intValue();
	boolean v7 = p0.hasInteractAcrossProfilesPermission(p1, v6, -1);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canInteractAcrossProfiles(Ljava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,8 @12 exception:9,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7>@2,
9 = checkcast <Application,Ljava/util/List>8 <Application,Ljava/util/List>,
return 9,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,2 @24 exception:14,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
return 10,
conditional branch(eq, to iindex=-1) 15,13,
19 = phi  13,13,18,
return 19,","depth : 0
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	int v3 = this.mInjector.getCallingUserId();
	List v4 = p0.getTargetUserProfilesUnchecked(p1, v3);
	boolean v5 = v4.isEmpty();
	boolean v6 = p0.hasCallerGotInteractAcrossProfilesPermission(p1);
	return phiInstruction;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public List getTargetUserProfilesUnchecked(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	return v2;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canInteractAcrossProfiles(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,8 @12 exception:9,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7>@2,
9 = checkcast <Application,Ljava/util/List>8 <Application,Ljava/util/List>,
return 9,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,2 @24 exception:14,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
conditional branch(ne, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 12,9,
13 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 16,9,
goto (from iindex= 15 to iindex = 2),
18 = phi  8,8,8,9,
return 18,
return 10,
conditional branch(eq, to iindex=-1) 15,13,
17 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, haveProfilesGotInteractAcrossProfilesPermission(Ljava/lang/String;Ljava/util/List;)Z > 1,2,10 @30 exception:16,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Landroid/os/UserHandle>10 <Application,Landroid/os/UserHandle>,
12 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
13 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5>@18,
17 = checkcast <Application,Ljava/lang/Integer>16 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 19,20,
22 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,19,20 @38 exception:21,
conditional branch(ne, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 12,9,
13 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 16,9,
goto (from iindex= 15 to iindex = 2),
18 = phi  8,8,8,9,
return 18,
conditional branch(ne, to iindex=-1) 22,8,
return 8,
conditional branch(eq, to iindex=-1) 17,13,
19 = phi  13,13,18,
return 19,","depth : 0
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	int v3 = this.mInjector.getCallingUserId();
	List v4 = p0.getTargetUserProfilesUnchecked(p1, v3);
	boolean v5 = v4.isEmpty();
	boolean v6 = p0.hasCallerGotInteractAcrossProfilesPermission(p1);
	boolean v7 = p0.haveProfilesGotInteractAcrossProfilesPermission(p1, v4);
	return phiInstruction;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public List getTargetUserProfilesUnchecked(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	return v2;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
depth : 2
public boolean hasInteractAcrossProfilesPermission(String p1, int p2, int p3){
	boolean v1 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", p2);
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", p2);
	int v3 = PermissionChecker.checkPermissionForPreflight(this.mContext, ""android.permission.INTERACT_ACROSS_PROFILES"", p3, p2, p1);
	return phiInstruction;
}
-----
depth : 1
public boolean haveProfilesGotInteractAcrossProfilesPermission(String p1, List p2){
	Iterator v1 = p2.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5 v3 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5(p0,p1,v3);
	Object v5 = this.mInjector.withCleanCallingIdentity(v3);
	int v6 = v5.intValue();
	boolean v7 = p0.hasInteractAcrossProfilesPermission(p1, v6, -1);
	return 0;
}
-----
depth : 2
public boolean hasInteractAcrossProfilesPermission(String p1, int p2, int p3){
	boolean v1 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", p2);
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", p2);
	int v3 = PermissionChecker.checkPermissionForPreflight(this.mContext, ""android.permission.INTERACT_ACROSS_PROFILES"", p3, p2, p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canInteractAcrossProfiles(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,8 @12 exception:9,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7>@2,
9 = checkcast <Application,Ljava/util/List>8 <Application,Ljava/util/List>,
return 9,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,2 @24 exception:14,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
conditional branch(ne, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 12,9,
13 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 16,9,
18 = phi  8,8,8,9,
return 18,
return 10,
conditional branch(eq, to iindex=-1) 15,13,
17 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, haveProfilesGotInteractAcrossProfilesPermission(Ljava/lang/String;Ljava/util/List;)Z > 1,2,10 @30 exception:16,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Landroid/os/UserHandle>10 <Application,Landroid/os/UserHandle>,
12 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
13 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5>@18,
17 = checkcast <Application,Ljava/lang/Integer>16 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 19,20,
22 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,19,20 @38 exception:21,
conditional branch(ne, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 12,9,
13 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 16,9,
goto (from iindex= 15 to iindex = 2),
18 = phi  8,8,8,9,
return 18,
conditional branch(ne, to iindex=-1) 22,8,
return 8,
conditional branch(eq, to iindex=-1) 17,13,
19 = phi  13,13,18,
return 19,","depth : 0
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	int v3 = this.mInjector.getCallingUserId();
	List v4 = p0.getTargetUserProfilesUnchecked(p1, v3);
	boolean v5 = v4.isEmpty();
	boolean v6 = p0.hasCallerGotInteractAcrossProfilesPermission(p1);
	boolean v7 = p0.haveProfilesGotInteractAcrossProfilesPermission(p1, v4);
	return phiInstruction;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public List getTargetUserProfilesUnchecked(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	return v2;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
depth : 2
public boolean hasInteractAcrossProfilesPermission(String p1, int p2, int p3){
	boolean v1 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", p2);
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", p2);
	int v3 = PermissionChecker.checkPermissionForPreflight(this.mContext, ""android.permission.INTERACT_ACROSS_PROFILES"", p3, p2, p1);
	return phiInstruction;
}
-----
depth : 1
public boolean haveProfilesGotInteractAcrossProfilesPermission(String p1, List p2){
	Iterator v1 = p2.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5 v3 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5(p0,p1,v3);
	Object v5 = this.mInjector.withCleanCallingIdentity(v3);
	int v6 = v5.intValue();
	boolean v7 = p0.hasInteractAcrossProfilesPermission(p1, v6, -1);
	return 0;
}
-----
depth : 2
public boolean hasInteractAcrossProfilesPermission(String p1, int p2, int p3){
	boolean v1 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", p2);
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", p2);
	int v3 = PermissionChecker.checkPermissionForPreflight(this.mContext, ""android.permission.INTERACT_ACROSS_PROFILES"", p3, p2, p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canInteractAcrossProfiles(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,8 @12 exception:9,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7>@2,
9 = checkcast <Application,Ljava/util/List>8 <Application,Ljava/util/List>,
return 9,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,2 @24 exception:14,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
conditional branch(ne, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 12,9,
13 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 16,9,
goto (from iindex= 15 to iindex = 2),
18 = phi  8,8,8,9,
return 18,
return 10,
conditional branch(eq, to iindex=-1) 15,13,
17 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, haveProfilesGotInteractAcrossProfilesPermission(Ljava/lang/String;Ljava/util/List;)Z > 1,2,10 @30 exception:16,
conditional branch(eq, to iindex=-1) 7,8,
11 = checkcast <Application,Landroid/os/UserHandle>10 <Application,Landroid/os/UserHandle>,
12 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
13 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5>@18,
17 = checkcast <Application,Ljava/lang/Integer>16 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 19,20,
22 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,19,20 @38 exception:21,
conditional branch(ne, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 12,9,
13 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 16,9,
18 = phi  8,8,8,9,
return 18,
conditional branch(ne, to iindex=-1) 22,8,
return 8,
conditional branch(eq, to iindex=-1) 17,13,
19 = phi  13,13,18,
return 19,","depth : 0
public boolean canInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	int v3 = this.mInjector.getCallingUserId();
	List v4 = p0.getTargetUserProfilesUnchecked(p1, v3);
	boolean v5 = v4.isEmpty();
	boolean v6 = p0.hasCallerGotInteractAcrossProfilesPermission(p1);
	boolean v7 = p0.haveProfilesGotInteractAcrossProfilesPermission(p1, v4);
	return phiInstruction;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public List getTargetUserProfilesUnchecked(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	return v2;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
depth : 2
public boolean hasInteractAcrossProfilesPermission(String p1, int p2, int p3){
	boolean v1 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", p2);
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", p2);
	int v3 = PermissionChecker.checkPermissionForPreflight(this.mContext, ""android.permission.INTERACT_ACROSS_PROFILES"", p3, p2, p1);
	return phiInstruction;
}
-----
depth : 1
public boolean haveProfilesGotInteractAcrossProfilesPermission(String p1, List p2){
	Iterator v1 = p2.iterator();
	boolean v2 = v1.hasNext();
	Object v3 = v1.next();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5 v3 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda5(p0,p1,v3);
	Object v5 = this.mInjector.withCleanCallingIdentity(v3);
	int v6 = v5.intValue();
	boolean v7 = p0.hasInteractAcrossProfilesPermission(p1, v6, -1);
	return 0;
}
-----
depth : 2
public boolean hasInteractAcrossProfilesPermission(String p1, int p2, int p3){
	boolean v1 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", p2);
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", p2);
	int v3 = PermissionChecker.checkPermissionForPreflight(this.mContext, ""android.permission.INTERACT_ACROSS_PROFILES"", p3, p2, p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/CrossProfileAppsServiceImpl","clearInteractAcrossProfilesAppOps()V","0","8 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, findAllPackageNames()Ljava/util/List; > 1 @10 exception:7,
9 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda0>@14,
return,","depth : 0
public void clearInteractAcrossProfilesAppOps(){
	String v1 = AppOpsManager.permissionToOp(""android.permission.INTERACT_ACROSS_PROFILES"");
	int v2 = AppOpsManager.opToDefaultMode(v1);
	List v3 = p0.findAllPackageNames();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda0 v3 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda0(p0,v2);
	v3.forEach(v3);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","clearInteractAcrossProfilesAppOps()V","1","8 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, findAllPackageNames()Ljava/util/List; > 1 @10 exception:7,
2 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
8 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
16 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda4>@28,
24 = checkcast <Application,Ljava/util/List>23 <Application,Ljava/util/List>,
return 24,
9 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda0>@14,
return,","depth : 0
public void clearInteractAcrossProfilesAppOps(){
	String v1 = AppOpsManager.permissionToOp(""android.permission.INTERACT_ACROSS_PROFILES"");
	int v2 = AppOpsManager.opToDefaultMode(v1);
	List v3 = p0.findAllPackageNames();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda0 v3 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda0(p0,v2);
	v3.forEach(v3);
	return;
}
-----
depth : 1
public List findAllPackageNames(){
	PackageManagerInternal v1 = this.mInjector.getPackageManagerInternal();
	int v2 = this.mInjector.getCallingUserId();
	int v3 = this.mInjector.getCallingUid();
	List v4 = v1.getInstalledApplications(0, v2, v3);
	Stream v5 = v4.stream();
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda4 v5 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda4();
	Stream v7 = v5.map(v5);
	Collector v8 = Collectors.toList();
	Object v9 = v7.collect(v8);
	return v9;
}
-----
","NONE"

"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;IZLandroid/os/IBinder;Landroid/os/Bundle;)V","0","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,3 @12 exception:14,
17 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 15 @17 exception:16,
19 = new <Application,[Ljava/lang/String>@2218 ,
arraystore 19[20] = 3,
22 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 17,19 @27 exception:21,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 22 @31 exception:23,
24 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
27 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
30 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,3,26 @52 exception:33,
conditional branch(eq, to iindex=-1) 38,20,
53 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @66 exception:52,
conditional branch(eq, to iindex=-1) 55,20,
71 = new <Application,Landroid/content/Intent>@76,
conditional branch(eq, to iindex=-1) 7,20,
97 = invokevirtual < Application, Landroid/content/Intent, setAction(Ljava/lang/String;)Landroid/content/Intent; > 71,95 @85 exception:96,
100 = invokevirtual < Application, Landroid/content/Intent, addCategory(Ljava/lang/String;)Landroid/content/Intent; > 71,98 @90 exception:99,
conditional branch(ne, to iindex=-1) 8,20,
106 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 71,104 @97 exception:105,
goto (from iindex= 49 to iindex = 6),
111 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @106 exception:110,
113 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,111 @110 exception:112,
goto (from iindex= 55 to iindex = 44),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntentAndExported(Landroid/content/Intent;Landroid/content/ComponentName;II)V > 1,71,5,29,6 @157 exception:118,
conditional branch(ne, to iindex=-1) 9,20,
125 = invokestatic < Application, Landroid/app/ActivityOptions, makeOpenCrossProfileAppsAnimation()Landroid/app/ActivityOptions; > @162 exception:124,
127 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 125 @166 exception:126,
goto (from iindex= 84 to iindex = 12),
128 = phi  127,9,
133 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,20 @184 exception:132,
135 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 71,5 @187 exception:134,
136 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return,","depth : 0
public void startActivityAsUser(IApplicationThread p1, String p2, String p3, ComponentName p4, int p5, boolean p6, IBinder p7, Bundle p8){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = Objects.requireNonNull(p4);
	p0.verifyCallingPackage(p2);
	DevicePolicyEventLogger v4 = DevicePolicyEventLogger.createEvent(126);
	String v4 = new String(1);
	DevicePolicyEventLogger v5 = v4.setStrings(v4);
	v5.write();
	int v7 = this.mInjector.getCallingUserId();
	int v8 = this.mInjector.getCallingUid();
	int v9 = this.mInjector.getCallingPid();
	List v10 = p0.getTargetUserProfilesUnchecked(p2, v7);
	UserHandle v11 = UserHandle.of(p5);
	boolean v12 = v10.contains(v11);
	String v13 = p4.getPackageName();
	boolean v14 = p2.equals(v13);
	Intent v14 = new Intent();
	Intent v16 = v14.setAction(""android.intent.action.MAIN"");
	Intent v17 = v14.addCategory(""android.intent.category.LAUNCHER"");
	Intent v18 = v14.addFlags(270532608);
	String v19 = p4.getPackageName();
	Intent v20 = v14.setPackage(v19);
	p0.verifyActivityCanHandleIntentAndExported(v14, p4, v8, p5);
	ActivityOptions v22 = ActivityOptions.makeOpenCrossProfileAppsAnimation();
	Bundle v23 = v22.toBundle();
	Intent v24 = v14.setPackage(0);
	Intent v25 = v14.setComponent(p4);
	ActivityTaskManagerInternal v26 = this.mInjector.getActivityTaskManagerInternal();
	int v27 = v26.startActivityAsUser(p1, p2, p3, v14, p7, 0, phiInstruction, p5);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;IZLandroid/os/IBinder;Landroid/os/Bundle;)V","1","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,3 @12 exception:14,
return,
17 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 15 @17 exception:16,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
19 = new <Application,[Ljava/lang/String>@2218 ,
arraystore 19[20] = 3,
22 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 17,19 @27 exception:21,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 22 @31 exception:23,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, stringArrayValueToBytes([Ljava/lang/String;)[B > 2 @2 exception:3,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IILjava/lang/String;IZJ[B)V > 10,5,6,7,8,9,4 @19 exception:11,
return,
24 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
27 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
30 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,3,26 @52 exception:33,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7>@2,
9 = checkcast <Application,Ljava/util/List>8 <Application,Ljava/util/List>,
return 9,
conditional branch(eq, to iindex=-1) 38,20,
53 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @66 exception:52,
conditional branch(eq, to iindex=-1) 55,20,
71 = new <Application,Landroid/content/Intent>@76,
conditional branch(eq, to iindex=-1) 7,20,
97 = invokevirtual < Application, Landroid/content/Intent, setAction(Ljava/lang/String;)Landroid/content/Intent; > 71,95 @85 exception:96,
100 = invokevirtual < Application, Landroid/content/Intent, addCategory(Ljava/lang/String;)Landroid/content/Intent; > 71,98 @90 exception:99,
conditional branch(ne, to iindex=-1) 8,20,
106 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 71,104 @97 exception:105,
goto (from iindex= 49 to iindex = 6),
111 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @106 exception:110,
113 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,111 @110 exception:112,
goto (from iindex= 55 to iindex = 44),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntentAndExported(Landroid/content/Intent;Landroid/content/ComponentName;II)V > 1,71,5,29,6 @157 exception:118,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda2>@2,
return,
conditional branch(ne, to iindex=-1) 9,20,
125 = invokestatic < Application, Landroid/app/ActivityOptions, makeOpenCrossProfileAppsAnimation()Landroid/app/ActivityOptions; > @162 exception:124,
1 = new <Application,Landroid/app/ActivityOptions>@0,
putfield 1.< Application, Landroid/app/ActivityOptions, mAnimationType, <Primordial,I> > = 3,
return 1,
127 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 125 @166 exception:126,
goto (from iindex= 84 to iindex = 12),
128 = phi  127,9,
133 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,20 @184 exception:132,
135 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 71,5 @187 exception:134,
136 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return,","depth : 0
public void startActivityAsUser(IApplicationThread p1, String p2, String p3, ComponentName p4, int p5, boolean p6, IBinder p7, Bundle p8){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = Objects.requireNonNull(p4);
	p0.verifyCallingPackage(p2);
	DevicePolicyEventLogger v4 = DevicePolicyEventLogger.createEvent(126);
	String v4 = new String(1);
	DevicePolicyEventLogger v5 = v4.setStrings(v4);
	v5.write();
	int v7 = this.mInjector.getCallingUserId();
	int v8 = this.mInjector.getCallingUid();
	int v9 = this.mInjector.getCallingPid();
	List v10 = p0.getTargetUserProfilesUnchecked(p2, v7);
	UserHandle v11 = UserHandle.of(p5);
	boolean v12 = v10.contains(v11);
	String v13 = p4.getPackageName();
	boolean v14 = p2.equals(v13);
	Intent v14 = new Intent();
	Intent v16 = v14.setAction(""android.intent.action.MAIN"");
	Intent v17 = v14.addCategory(""android.intent.category.LAUNCHER"");
	Intent v18 = v14.addFlags(270532608);
	String v19 = p4.getPackageName();
	Intent v20 = v14.setPackage(v19);
	p0.verifyActivityCanHandleIntentAndExported(v14, p4, v8, p5);
	ActivityOptions v22 = ActivityOptions.makeOpenCrossProfileAppsAnimation();
	Bundle v23 = v22.toBundle();
	Intent v24 = v14.setPackage(0);
	Intent v25 = v14.setComponent(p4);
	ActivityTaskManagerInternal v26 = this.mInjector.getActivityTaskManagerInternal();
	int v27 = v26.startActivityAsUser(p1, p2, p3, v14, p7, 0, phiInstruction, p5);
	return;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 1
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 1
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
depth : 1
public List getTargetUserProfilesUnchecked(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	return v2;
}
-----
depth : 1
public void verifyActivityCanHandleIntentAndExported(Intent p1, ComponentName p2, int p3, int p4){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda2 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda2(p0,p1,p3,p4,p2);
	this.mInjector.withCleanCallingIdentity(v0);
	return;
}
-----
depth : 1
public ActivityOptions makeOpenCrossProfileAppsAnimation(){
	ActivityOptions v0 = new ActivityOptions();
	this.mAnimationType = 12;
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;IZLandroid/os/IBinder;Landroid/os/Bundle;)V","1","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,3 @12 exception:14,
return,
17 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 15 @17 exception:16,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
19 = new <Application,[Ljava/lang/String>@2218 ,
arraystore 19[20] = 3,
22 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 17,19 @27 exception:21,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 22 @31 exception:23,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, stringArrayValueToBytes([Ljava/lang/String;)[B > 2 @2 exception:3,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IILjava/lang/String;IZJ[B)V > 10,5,6,7,8,9,4 @19 exception:11,
return,
24 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
27 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
30 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,3,26 @52 exception:33,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7>@2,
9 = checkcast <Application,Ljava/util/List>8 <Application,Ljava/util/List>,
return 9,
conditional branch(eq, to iindex=-1) 38,20,
53 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @66 exception:52,
conditional branch(eq, to iindex=-1) 55,20,
71 = new <Application,Landroid/content/Intent>@76,
conditional branch(eq, to iindex=-1) 7,20,
97 = invokevirtual < Application, Landroid/content/Intent, setAction(Ljava/lang/String;)Landroid/content/Intent; > 71,95 @85 exception:96,
100 = invokevirtual < Application, Landroid/content/Intent, addCategory(Ljava/lang/String;)Landroid/content/Intent; > 71,98 @90 exception:99,
conditional branch(ne, to iindex=-1) 8,20,
106 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 71,104 @97 exception:105,
goto (from iindex= 49 to iindex = 6),
111 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @106 exception:110,
113 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,111 @110 exception:112,
goto (from iindex= 55 to iindex = 44),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntentAndExported(Landroid/content/Intent;Landroid/content/ComponentName;II)V > 1,71,5,29,6 @157 exception:118,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda2>@2,
return,
conditional branch(ne, to iindex=-1) 9,20,
120 = invokestatic < Application, Landroid/app/ActivityOptions, makeOpenCrossProfileAppsAnimation()Landroid/app/ActivityOptions; > @171 exception:119,
1 = new <Application,Landroid/app/ActivityOptions>@0,
putfield 1.< Application, Landroid/app/ActivityOptions, mAnimationType, <Primordial,I> > = 3,
return 1,
122 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 120 @175 exception:121,
128 = phi  127,9,
133 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,20 @184 exception:132,
135 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 71,5 @187 exception:134,
136 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return,","depth : 0
public void startActivityAsUser(IApplicationThread p1, String p2, String p3, ComponentName p4, int p5, boolean p6, IBinder p7, Bundle p8){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = Objects.requireNonNull(p4);
	p0.verifyCallingPackage(p2);
	DevicePolicyEventLogger v4 = DevicePolicyEventLogger.createEvent(126);
	String v4 = new String(1);
	DevicePolicyEventLogger v5 = v4.setStrings(v4);
	v5.write();
	int v7 = this.mInjector.getCallingUserId();
	int v8 = this.mInjector.getCallingUid();
	int v9 = this.mInjector.getCallingPid();
	List v10 = p0.getTargetUserProfilesUnchecked(p2, v7);
	UserHandle v11 = UserHandle.of(p5);
	boolean v12 = v10.contains(v11);
	String v13 = p4.getPackageName();
	boolean v14 = p2.equals(v13);
	Intent v14 = new Intent();
	Intent v16 = v14.setAction(""android.intent.action.MAIN"");
	Intent v17 = v14.addCategory(""android.intent.category.LAUNCHER"");
	Intent v18 = v14.addFlags(270532608);
	String v19 = p4.getPackageName();
	Intent v20 = v14.setPackage(v19);
	p0.verifyActivityCanHandleIntentAndExported(v14, p4, v8, p5);
	ActivityOptions v22 = ActivityOptions.makeOpenCrossProfileAppsAnimation();
	Bundle v23 = v22.toBundle();
	p8.putAll(v23);
	Intent v25 = v14.setPackage(0);
	Intent v26 = v14.setComponent(p4);
	ActivityTaskManagerInternal v27 = this.mInjector.getActivityTaskManagerInternal();
	int v28 = v27.startActivityAsUser(p1, p2, p3, v14, p7, 0, phiInstruction, p5);
	return;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 1
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 1
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
depth : 1
public List getTargetUserProfilesUnchecked(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	return v2;
}
-----
depth : 1
public void verifyActivityCanHandleIntentAndExported(Intent p1, ComponentName p2, int p3, int p4){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda2 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda2(p0,p1,p3,p4,p2);
	this.mInjector.withCleanCallingIdentity(v0);
	return;
}
-----
depth : 1
public ActivityOptions makeOpenCrossProfileAppsAnimation(){
	ActivityOptions v0 = new ActivityOptions();
	this.mAnimationType = 12;
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;IZLandroid/os/IBinder;Landroid/os/Bundle;)V","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,3 @12 exception:14,
return,
17 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 15 @17 exception:16,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
19 = new <Application,[Ljava/lang/String>@2218 ,
arraystore 19[20] = 3,
22 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 17,19 @27 exception:21,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 22 @31 exception:23,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, stringArrayValueToBytes([Ljava/lang/String;)[B > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 1,2,
3 = new <Application,Landroid/stats/devicepolicy/nano/StringList>@4,
putfield 3.< Application, Landroid/stats/devicepolicy/nano/StringList, stringValue, <Application,[Ljava/lang/String> > = 1,
return 6,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IILjava/lang/String;IZJ[B)V > 10,5,6,7,8,9,4 @19 exception:11,
conditional branch(ne, to iindex=-1) 7,22,
23 = new <Primordial,[B>@2522 ,
25 = phi  7,23,
return,
return,
24 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
27 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
30 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,3,26 @52 exception:33,
conditional branch(eq, to iindex=-1) 38,20,
53 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @66 exception:52,
conditional branch(eq, to iindex=-1) 55,20,
71 = new <Application,Landroid/content/Intent>@76,
conditional branch(eq, to iindex=-1) 7,20,
97 = invokevirtual < Application, Landroid/content/Intent, setAction(Ljava/lang/String;)Landroid/content/Intent; > 71,95 @85 exception:96,
100 = invokevirtual < Application, Landroid/content/Intent, addCategory(Ljava/lang/String;)Landroid/content/Intent; > 71,98 @90 exception:99,
conditional branch(ne, to iindex=-1) 8,20,
106 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 71,104 @97 exception:105,
goto (from iindex= 49 to iindex = 6),
111 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @106 exception:110,
113 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,111 @110 exception:112,
goto (from iindex= 55 to iindex = 44),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntentAndExported(Landroid/content/Intent;Landroid/content/ComponentName;II)V > 1,71,5,29,6 @157 exception:118,
conditional branch(ne, to iindex=-1) 9,20,
125 = invokestatic < Application, Landroid/app/ActivityOptions, makeOpenCrossProfileAppsAnimation()Landroid/app/ActivityOptions; > @162 exception:124,
127 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 125 @166 exception:126,
goto (from iindex= 84 to iindex = 12),
128 = phi  127,9,
133 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,20 @184 exception:132,
135 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 71,5 @187 exception:134,
136 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return,","depth : 0
public void startActivityAsUser(IApplicationThread p1, String p2, String p3, ComponentName p4, int p5, boolean p6, IBinder p7, Bundle p8){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = Objects.requireNonNull(p4);
	p0.verifyCallingPackage(p2);
	DevicePolicyEventLogger v4 = DevicePolicyEventLogger.createEvent(126);
	String v4 = new String(1);
	DevicePolicyEventLogger v5 = v4.setStrings(v4);
	v5.write();
	int v7 = this.mInjector.getCallingUserId();
	int v8 = this.mInjector.getCallingUid();
	int v9 = this.mInjector.getCallingPid();
	List v10 = p0.getTargetUserProfilesUnchecked(p2, v7);
	UserHandle v11 = UserHandle.of(p5);
	boolean v12 = v10.contains(v11);
	String v13 = p4.getPackageName();
	boolean v14 = p2.equals(v13);
	Intent v14 = new Intent();
	Intent v16 = v14.setAction(""android.intent.action.MAIN"");
	Intent v17 = v14.addCategory(""android.intent.category.LAUNCHER"");
	Intent v18 = v14.addFlags(270532608);
	String v19 = p4.getPackageName();
	Intent v20 = v14.setPackage(v19);
	p0.verifyActivityCanHandleIntentAndExported(v14, p4, v8, p5);
	ActivityOptions v22 = ActivityOptions.makeOpenCrossProfileAppsAnimation();
	Bundle v23 = v22.toBundle();
	Intent v24 = v14.setPackage(0);
	Intent v25 = v14.setComponent(p4);
	ActivityTaskManagerInternal v26 = this.mInjector.getActivityTaskManagerInternal();
	int v27 = v26.startActivityAsUser(p1, p2, p3, v14, p7, 0, phiInstruction, p5);
	return;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 1
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 1
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
depth : 2
public byte[] stringArrayValueToBytes(String p1){
	StringList v0 = new StringList();
	StringList.stringValue = p1;
	byte[] v2 = MessageNano.toByteArray(v0);
	return v2;
}
-----
depth : 2
public void write(int p1, int p2, String p3, int p4, boolean p5, long p6, byte[] p7){
	StatsEvent$Builder v1 = StatsEvent.newBuilder();
	StatsEvent$Builder v2 = v1.setAtomId(p1);
	StatsEvent$Builder v3 = v1.writeInt(p2);
	StatsEvent$Builder v4 = v1.writeString(p3);
	StatsEvent$Builder v5 = v1.writeInt(p4);
	StatsEvent$Builder v6 = v1.writeBoolean(p5);
	StatsEvent$Builder v7 = v1.writeLong(p6);
	[B v7 = new [B(0);
	StatsEvent$Builder v8 = v1.writeByteArray(phiInstruction);
	StatsEvent$Builder v9 = v1.usePooledBuffer();
	StatsEvent v10 = v1.build();
	StatsLog.write(v10);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;IZLandroid/os/IBinder;Landroid/os/Bundle;)V","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,3 @12 exception:14,
return,
17 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 15 @17 exception:16,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
19 = new <Application,[Ljava/lang/String>@2218 ,
arraystore 19[20] = 3,
22 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 17,19 @27 exception:21,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 22 @31 exception:23,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, stringArrayValueToBytes([Ljava/lang/String;)[B > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 1,2,
3 = new <Application,Landroid/stats/devicepolicy/nano/StringList>@4,
putfield 3.< Application, Landroid/stats/devicepolicy/nano/StringList, stringValue, <Application,[Ljava/lang/String> > = 1,
return 6,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IILjava/lang/String;IZJ[B)V > 10,5,6,7,8,9,4 @19 exception:11,
conditional branch(ne, to iindex=-1) 7,22,
25 = phi  7,23,
return,
return,
24 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
27 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
30 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,3,26 @52 exception:33,
conditional branch(eq, to iindex=-1) 38,20,
53 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @66 exception:52,
conditional branch(eq, to iindex=-1) 55,20,
71 = new <Application,Landroid/content/Intent>@76,
conditional branch(eq, to iindex=-1) 7,20,
97 = invokevirtual < Application, Landroid/content/Intent, setAction(Ljava/lang/String;)Landroid/content/Intent; > 71,95 @85 exception:96,
100 = invokevirtual < Application, Landroid/content/Intent, addCategory(Ljava/lang/String;)Landroid/content/Intent; > 71,98 @90 exception:99,
conditional branch(ne, to iindex=-1) 8,20,
106 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 71,104 @97 exception:105,
goto (from iindex= 49 to iindex = 6),
111 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @106 exception:110,
113 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,111 @110 exception:112,
goto (from iindex= 55 to iindex = 44),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntentAndExported(Landroid/content/Intent;Landroid/content/ComponentName;II)V > 1,71,5,29,6 @157 exception:118,
conditional branch(ne, to iindex=-1) 9,20,
125 = invokestatic < Application, Landroid/app/ActivityOptions, makeOpenCrossProfileAppsAnimation()Landroid/app/ActivityOptions; > @162 exception:124,
127 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 125 @166 exception:126,
goto (from iindex= 84 to iindex = 12),
128 = phi  127,9,
133 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,20 @184 exception:132,
135 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 71,5 @187 exception:134,
136 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return,","depth : 0
public void startActivityAsUser(IApplicationThread p1, String p2, String p3, ComponentName p4, int p5, boolean p6, IBinder p7, Bundle p8){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = Objects.requireNonNull(p4);
	p0.verifyCallingPackage(p2);
	DevicePolicyEventLogger v4 = DevicePolicyEventLogger.createEvent(126);
	String v4 = new String(1);
	DevicePolicyEventLogger v5 = v4.setStrings(v4);
	v5.write();
	int v7 = this.mInjector.getCallingUserId();
	int v8 = this.mInjector.getCallingUid();
	int v9 = this.mInjector.getCallingPid();
	List v10 = p0.getTargetUserProfilesUnchecked(p2, v7);
	UserHandle v11 = UserHandle.of(p5);
	boolean v12 = v10.contains(v11);
	String v13 = p4.getPackageName();
	boolean v14 = p2.equals(v13);
	Intent v14 = new Intent();
	Intent v16 = v14.setAction(""android.intent.action.MAIN"");
	Intent v17 = v14.addCategory(""android.intent.category.LAUNCHER"");
	Intent v18 = v14.addFlags(270532608);
	String v19 = p4.getPackageName();
	Intent v20 = v14.setPackage(v19);
	p0.verifyActivityCanHandleIntentAndExported(v14, p4, v8, p5);
	ActivityOptions v22 = ActivityOptions.makeOpenCrossProfileAppsAnimation();
	Bundle v23 = v22.toBundle();
	Intent v24 = v14.setPackage(0);
	Intent v25 = v14.setComponent(p4);
	ActivityTaskManagerInternal v26 = this.mInjector.getActivityTaskManagerInternal();
	int v27 = v26.startActivityAsUser(p1, p2, p3, v14, p7, 0, phiInstruction, p5);
	return;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 1
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 1
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
depth : 2
public byte[] stringArrayValueToBytes(String p1){
	StringList v0 = new StringList();
	StringList.stringValue = p1;
	byte[] v2 = MessageNano.toByteArray(v0);
	return v2;
}
-----
depth : 2
public void write(int p1, int p2, String p3, int p4, boolean p5, long p6, byte[] p7){
	StatsEvent$Builder v1 = StatsEvent.newBuilder();
	StatsEvent$Builder v2 = v1.setAtomId(p1);
	StatsEvent$Builder v3 = v1.writeInt(p2);
	StatsEvent$Builder v4 = v1.writeString(p3);
	StatsEvent$Builder v5 = v1.writeInt(p4);
	StatsEvent$Builder v6 = v1.writeBoolean(p5);
	StatsEvent$Builder v7 = v1.writeLong(p6);
	StatsEvent$Builder v8 = v1.writeByteArray(phiInstruction);
	StatsEvent$Builder v9 = v1.usePooledBuffer();
	StatsEvent v10 = v1.build();
	StatsLog.write(v10);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUser(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/ComponentName;IZLandroid/os/IBinder;Landroid/os/Bundle;)V","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,3 @12 exception:14,
return,
17 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 15 @17 exception:16,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
19 = new <Application,[Ljava/lang/String>@2218 ,
arraystore 19[20] = 3,
22 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 17,19 @27 exception:21,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 22 @31 exception:23,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, stringArrayValueToBytes([Ljava/lang/String;)[B > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 1,2,
3 = new <Application,Landroid/stats/devicepolicy/nano/StringList>@4,
putfield 3.< Application, Landroid/stats/devicepolicy/nano/StringList, stringValue, <Application,[Ljava/lang/String> > = 1,
return 6,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IILjava/lang/String;IZJ[B)V > 10,5,6,7,8,9,4 @19 exception:11,
conditional branch(ne, to iindex=-1) 7,22,
23 = new <Primordial,[B>@2522 ,
25 = phi  7,23,
return,
return,
24 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
27 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
30 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,3,26 @52 exception:33,
conditional branch(eq, to iindex=-1) 38,20,
53 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @66 exception:52,
conditional branch(eq, to iindex=-1) 55,20,
71 = new <Application,Landroid/content/Intent>@76,
conditional branch(eq, to iindex=-1) 7,20,
97 = invokevirtual < Application, Landroid/content/Intent, setAction(Ljava/lang/String;)Landroid/content/Intent; > 71,95 @85 exception:96,
100 = invokevirtual < Application, Landroid/content/Intent, addCategory(Ljava/lang/String;)Landroid/content/Intent; > 71,98 @90 exception:99,
conditional branch(ne, to iindex=-1) 8,20,
106 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 71,104 @97 exception:105,
goto (from iindex= 49 to iindex = 6),
111 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 5 @106 exception:110,
113 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,111 @110 exception:112,
goto (from iindex= 55 to iindex = 44),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntentAndExported(Landroid/content/Intent;Landroid/content/ComponentName;II)V > 1,71,5,29,6 @157 exception:118,
conditional branch(ne, to iindex=-1) 9,20,
120 = invokestatic < Application, Landroid/app/ActivityOptions, makeOpenCrossProfileAppsAnimation()Landroid/app/ActivityOptions; > @171 exception:119,
122 = invokevirtual < Application, Landroid/app/ActivityOptions, toBundle()Landroid/os/Bundle; > 120 @175 exception:121,
128 = phi  127,9,
133 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 71,20 @184 exception:132,
135 = invokevirtual < Application, Landroid/content/Intent, setComponent(Landroid/content/ComponentName;)Landroid/content/Intent; > 71,5 @187 exception:134,
136 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return,","depth : 0
public void startActivityAsUser(IApplicationThread p1, String p2, String p3, ComponentName p4, int p5, boolean p6, IBinder p7, Bundle p8){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = Objects.requireNonNull(p4);
	p0.verifyCallingPackage(p2);
	DevicePolicyEventLogger v4 = DevicePolicyEventLogger.createEvent(126);
	String v4 = new String(1);
	DevicePolicyEventLogger v5 = v4.setStrings(v4);
	v5.write();
	int v7 = this.mInjector.getCallingUserId();
	int v8 = this.mInjector.getCallingUid();
	int v9 = this.mInjector.getCallingPid();
	List v10 = p0.getTargetUserProfilesUnchecked(p2, v7);
	UserHandle v11 = UserHandle.of(p5);
	boolean v12 = v10.contains(v11);
	String v13 = p4.getPackageName();
	boolean v14 = p2.equals(v13);
	Intent v14 = new Intent();
	Intent v16 = v14.setAction(""android.intent.action.MAIN"");
	Intent v17 = v14.addCategory(""android.intent.category.LAUNCHER"");
	Intent v18 = v14.addFlags(270532608);
	String v19 = p4.getPackageName();
	Intent v20 = v14.setPackage(v19);
	p0.verifyActivityCanHandleIntentAndExported(v14, p4, v8, p5);
	ActivityOptions v22 = ActivityOptions.makeOpenCrossProfileAppsAnimation();
	Bundle v23 = v22.toBundle();
	p8.putAll(v23);
	Intent v25 = v14.setPackage(0);
	Intent v26 = v14.setComponent(p4);
	ActivityTaskManagerInternal v27 = this.mInjector.getActivityTaskManagerInternal();
	int v28 = v27.startActivityAsUser(p1, p2, p3, v14, p7, 0, phiInstruction, p5);
	return;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 1
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 1
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
depth : 2
public byte[] stringArrayValueToBytes(String p1){
	StringList v0 = new StringList();
	StringList.stringValue = p1;
	byte[] v2 = MessageNano.toByteArray(v0);
	return v2;
}
-----
depth : 2
public void write(int p1, int p2, String p3, int p4, boolean p5, long p6, byte[] p7){
	StatsEvent$Builder v1 = StatsEvent.newBuilder();
	StatsEvent$Builder v2 = v1.setAtomId(p1);
	StatsEvent$Builder v3 = v1.writeInt(p2);
	StatsEvent$Builder v4 = v1.writeString(p3);
	StatsEvent$Builder v5 = v1.writeInt(p4);
	StatsEvent$Builder v6 = v1.writeBoolean(p5);
	StatsEvent$Builder v7 = v1.writeLong(p6);
	[B v7 = new [B(0);
	StatsEvent$Builder v8 = v1.writeByteArray(phiInstruction);
	StatsEvent$Builder v9 = v1.usePooledBuffer();
	StatsEvent v10 = v1.build();
	StatsLog.write(v10);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;)Z","0","3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,5 @6 exception:6,
return 7,","depth : 0
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;)Z","1","3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,5 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = arraylength 9,
conditional branch(ge, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isProfileOwner(Ljava/lang/String;[I)Z > 1,2,9 @16 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
18 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasRequestedAppOpPermission(Ljava/lang/String;Ljava/lang/String;)Z > 1,16,2 @29 exception:17,
conditional branch(ne, to iindex=-1) 18,7,
20 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPlatformSignedAppWithNonUserConfigurablePermission(Ljava/lang/String;[I)Z > 1,2,9 @36 exception:19,
22 = binaryop(xor) 20 , 21,
return 22,
return 7,","depth : 0
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);
	return v2;
}
-----
depth : 1
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1, int p2){
	UserManager v1 = this.mInjector.getUserManager();
	[I v2 = v1.getProfileIds(p2, 0);
	boolean v3 = p0.isProfileOwner(p1, v2);
	String v4 = AppOpsManager.opToPermission(93);
	boolean v5 = p0.hasRequestedAppOpPermission(v4, p1);
	boolean v6 = p0.isPlatformSignedAppWithNonUserConfigurablePermission(p1, v2);
	return (v6 ^ 1);
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;)Z","2","3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,5 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = arraylength 9,
conditional branch(ge, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isProfileOwner(Ljava/lang/String;[I)Z > 1,2,9 @16 exception:12,
4 = arraylength 3,
11 = phi  10,5,
conditional branch(ge, to iindex=-1) 11,4,
6 = arrayload 3[11],
conditional branch(eq, to iindex=-1) 8,5,
return 12,
conditional branch(eq, to iindex=-1) 13,7,
18 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasRequestedAppOpPermission(Ljava/lang/String;Ljava/lang/String;)Z > 1,16,2 @29 exception:17,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return 18,
conditional branch(ne, to iindex=-1) 18,7,
20 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPlatformSignedAppWithNonUserConfigurablePermission(Ljava/lang/String;[I)Z > 1,2,9 @36 exception:19,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,6,
return 13,
22 = binaryop(xor) 20 , 21,
return 22,
return 7,","depth : 0
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);
	return v2;
}
-----
depth : 1
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1, int p2){
	UserManager v1 = this.mInjector.getUserManager();
	[I v2 = v1.getProfileIds(p2, 0);
	boolean v3 = p0.isProfileOwner(p1, v2);
	String v4 = AppOpsManager.opToPermission(93);
	boolean v5 = p0.hasRequestedAppOpPermission(v4, p1);
	boolean v6 = p0.isPlatformSignedAppWithNonUserConfigurablePermission(p1, v2);
	return (v6 ^ 1);
}
-----
depth : 2
public boolean isProfileOwner(String p1, [I p2){
	boolean v1 = p0.isProfileOwner(p1, p2[phiInstruction]);
	return 1;
}
-----
depth : 2
public boolean hasRequestedAppOpPermission(String p1, String p2){
	IPackageManager v1 = this.mInjector.getIPackageManager();
	String v2 = v1.getAppOpPermissionPackages(p1);
	int v3 = Slog.e(""CrossProfileAppsService"", ""PackageManager dead. Cannot get permission info"");
	return 0;
}
-----
depth : 2
public boolean isPlatformSignedAppWithNonUserConfigurablePermission(String p1, [I p2){
	boolean v1 = p0.isCrossProfilePackageAllowlistedByDefault(p1);
	boolean v2 = p0.isPlatformSignedAppWithAutomaticProfilesPermission(p1, p2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;)Z","2","3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canUserAttemptToConfigureInteractAcrossProfiles(Ljava/lang/String;I)Z > 1,2,5 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = arraylength 9,
conditional branch(ge, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isProfileOwner(Ljava/lang/String;[I)Z > 1,2,9 @16 exception:12,
4 = arraylength 3,
11 = phi  10,5,
conditional branch(ge, to iindex=-1) 11,4,
6 = arrayload 3[11],
conditional branch(eq, to iindex=-1) 8,5,
return 12,
conditional branch(eq, to iindex=-1) 13,7,
18 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasRequestedAppOpPermission(Ljava/lang/String;Ljava/lang/String;)Z > 1,16,2 @29 exception:17,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return 18,
conditional branch(ne, to iindex=-1) 18,7,
20 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPlatformSignedAppWithNonUserConfigurablePermission(Ljava/lang/String;[I)Z > 1,2,9 @36 exception:19,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 7 to iindex = 2),
13 = phi  12,6,
return 13,
22 = binaryop(xor) 20 , 21,
return 22,
return 7,","depth : 0
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.canUserAttemptToConfigureInteractAcrossProfiles(p1, v1);
	return v2;
}
-----
depth : 1
public boolean canUserAttemptToConfigureInteractAcrossProfiles(String p1, int p2){
	UserManager v1 = this.mInjector.getUserManager();
	[I v2 = v1.getProfileIds(p2, 0);
	boolean v3 = p0.isProfileOwner(p1, v2);
	String v4 = AppOpsManager.opToPermission(93);
	boolean v5 = p0.hasRequestedAppOpPermission(v4, p1);
	boolean v6 = p0.isPlatformSignedAppWithNonUserConfigurablePermission(p1, v2);
	return (v6 ^ 1);
}
-----
depth : 2
public boolean isProfileOwner(String p1, [I p2){
	boolean v1 = p0.isProfileOwner(p1, p2[phiInstruction]);
	return 1;
}
-----
depth : 2
public boolean hasRequestedAppOpPermission(String p1, String p2){
	IPackageManager v1 = this.mInjector.getIPackageManager();
	String v2 = v1.getAppOpPermissionPackages(p1);
	boolean v3 = ArrayUtils.contains(v2, p2);
	int v4 = Slog.e(""CrossProfileAppsService"", ""PackageManager dead. Cannot get permission info"");
	return 0;
}
-----
depth : 2
public boolean isPlatformSignedAppWithNonUserConfigurablePermission(String p1, [I p2){
	boolean v1 = p0.isCrossProfilePackageAllowlistedByDefault(p1);
	boolean v2 = p0.isPlatformSignedAppWithAutomaticProfilesPermission(p1, p2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/CrossProfileAppsServiceImpl","getTargetUserProfiles(Ljava/lang/String;)Ljava/util/List;","0","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
8 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 6 @8 exception:7,
10 = new <Application,[Ljava/lang/String>@139 ,
arraystore 10[11] = 2,
13 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 8,10 @18 exception:12,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 13 @22 exception:14,
15 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,17 @31 exception:18,
return 19,","depth : 0
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	DevicePolicyEventLogger v3 = DevicePolicyEventLogger.createEvent(125);
	String v3 = new String(1);
	DevicePolicyEventLogger v4 = v3.setStrings(v3);
	v4.write();
	int v6 = this.mInjector.getCallingUserId();
	List v7 = p0.getTargetUserProfilesUnchecked(p1, v6);
	return v7;
}
-----
","NONE"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","getTargetUserProfiles(Ljava/lang/String;)Ljava/util/List;","1","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
8 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 6 @8 exception:7,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
10 = new <Application,[Ljava/lang/String>@139 ,
arraystore 10[11] = 2,
13 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 8,10 @18 exception:12,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 13 @22 exception:14,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, stringArrayValueToBytes([Ljava/lang/String;)[B > 2 @2 exception:3,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IILjava/lang/String;IZJ[B)V > 10,5,6,7,8,9,4 @19 exception:11,
return,
15 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,17 @31 exception:18,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
5 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7>@2,
9 = checkcast <Application,Ljava/util/List>8 <Application,Ljava/util/List>,
return 9,
return 19,","depth : 0
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	DevicePolicyEventLogger v3 = DevicePolicyEventLogger.createEvent(125);
	String v3 = new String(1);
	DevicePolicyEventLogger v4 = v3.setStrings(v3);
	v4.write();
	int v6 = this.mInjector.getCallingUserId();
	List v7 = p0.getTargetUserProfilesUnchecked(p1, v6);
	return v7;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 1
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 1
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
depth : 1
public List getTargetUserProfilesUnchecked(String p1, int p2){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda7(p0,p2,p1);
	Object v2 = this.mInjector.withCleanCallingIdentity(v0);
	return v2;
}
-----
","NONE"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","getTargetUserProfiles(Ljava/lang/String;)Ljava/util/List;","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
8 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 6 @8 exception:7,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
10 = new <Application,[Ljava/lang/String>@139 ,
arraystore 10[11] = 2,
13 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 8,10 @18 exception:12,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 13 @22 exception:14,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, stringArrayValueToBytes([Ljava/lang/String;)[B > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 1,2,
3 = new <Application,Landroid/stats/devicepolicy/nano/StringList>@4,
putfield 3.< Application, Landroid/stats/devicepolicy/nano/StringList, stringValue, <Application,[Ljava/lang/String> > = 1,
return 6,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IILjava/lang/String;IZJ[B)V > 10,5,6,7,8,9,4 @19 exception:11,
conditional branch(ne, to iindex=-1) 7,22,
23 = new <Primordial,[B>@2522 ,
25 = phi  7,23,
return,
return,
15 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,17 @31 exception:18,
return 19,","depth : 0
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	DevicePolicyEventLogger v3 = DevicePolicyEventLogger.createEvent(125);
	String v3 = new String(1);
	DevicePolicyEventLogger v4 = v3.setStrings(v3);
	v4.write();
	int v6 = this.mInjector.getCallingUserId();
	List v7 = p0.getTargetUserProfilesUnchecked(p1, v6);
	return v7;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 1
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 1
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
depth : 2
public byte[] stringArrayValueToBytes(String p1){
	StringList v0 = new StringList();
	StringList.stringValue = p1;
	byte[] v2 = MessageNano.toByteArray(v0);
	return v2;
}
-----
depth : 2
public void write(int p1, int p2, String p3, int p4, boolean p5, long p6, byte[] p7){
	StatsEvent$Builder v1 = StatsEvent.newBuilder();
	StatsEvent$Builder v2 = v1.setAtomId(p1);
	StatsEvent$Builder v3 = v1.writeInt(p2);
	StatsEvent$Builder v4 = v1.writeString(p3);
	StatsEvent$Builder v5 = v1.writeInt(p4);
	StatsEvent$Builder v6 = v1.writeBoolean(p5);
	StatsEvent$Builder v7 = v1.writeLong(p6);
	[B v7 = new [B(0);
	StatsEvent$Builder v8 = v1.writeByteArray(phiInstruction);
	StatsEvent$Builder v9 = v1.usePooledBuffer();
	StatsEvent v10 = v1.build();
	StatsLog.write(v10);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","getTargetUserProfiles(Ljava/lang/String;)Ljava/util/List;","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
8 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 6 @8 exception:7,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
10 = new <Application,[Ljava/lang/String>@139 ,
arraystore 10[11] = 2,
13 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 8,10 @18 exception:12,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 13 @22 exception:14,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, stringArrayValueToBytes([Ljava/lang/String;)[B > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 1,2,
3 = new <Application,Landroid/stats/devicepolicy/nano/StringList>@4,
putfield 3.< Application, Landroid/stats/devicepolicy/nano/StringList, stringValue, <Application,[Ljava/lang/String> > = 1,
return 6,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IILjava/lang/String;IZJ[B)V > 10,5,6,7,8,9,4 @19 exception:11,
conditional branch(ne, to iindex=-1) 7,22,
25 = phi  7,23,
return,
return,
15 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,17 @31 exception:18,
return 19,","depth : 0
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	DevicePolicyEventLogger v3 = DevicePolicyEventLogger.createEvent(125);
	String v3 = new String(1);
	DevicePolicyEventLogger v4 = v3.setStrings(v3);
	v4.write();
	int v6 = this.mInjector.getCallingUserId();
	List v7 = p0.getTargetUserProfilesUnchecked(p1, v6);
	return v7;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 1
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 1
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
depth : 2
public byte[] stringArrayValueToBytes(String p1){
	StringList v0 = new StringList();
	StringList.stringValue = p1;
	byte[] v2 = MessageNano.toByteArray(v0);
	return v2;
}
-----
depth : 2
public void write(int p1, int p2, String p3, int p4, boolean p5, long p6, byte[] p7){
	StatsEvent$Builder v1 = StatsEvent.newBuilder();
	StatsEvent$Builder v2 = v1.setAtomId(p1);
	StatsEvent$Builder v3 = v1.writeInt(p2);
	StatsEvent$Builder v4 = v1.writeString(p3);
	StatsEvent$Builder v5 = v1.writeInt(p4);
	StatsEvent$Builder v6 = v1.writeBoolean(p5);
	StatsEvent$Builder v7 = v1.writeLong(p6);
	StatsEvent$Builder v8 = v1.writeByteArray(phiInstruction);
	StatsEvent$Builder v9 = v1.usePooledBuffer();
	StatsEvent v10 = v1.build();
	StatsLog.write(v10);
	return;
}
-----
","NONE"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","getTargetUserProfiles(Ljava/lang/String;)Ljava/util/List;","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
8 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 6 @8 exception:7,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
10 = new <Application,[Ljava/lang/String>@139 ,
arraystore 10[11] = 2,
13 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 8,10 @18 exception:12,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 13 @22 exception:14,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
4 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, stringArrayValueToBytes([Ljava/lang/String;)[B > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 1,2,
return 2,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IILjava/lang/String;IZJ[B)V > 10,5,6,7,8,9,4 @19 exception:11,
conditional branch(ne, to iindex=-1) 7,22,
23 = new <Primordial,[B>@2522 ,
25 = phi  7,23,
return,
return,
15 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, getTargetUserProfilesUnchecked(Ljava/lang/String;I)Ljava/util/List; > 1,2,17 @31 exception:18,
return 19,","depth : 0
public List getTargetUserProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	DevicePolicyEventLogger v3 = DevicePolicyEventLogger.createEvent(125);
	String v3 = new String(1);
	DevicePolicyEventLogger v4 = v3.setStrings(v3);
	v4.write();
	int v6 = this.mInjector.getCallingUserId();
	List v7 = p0.getTargetUserProfilesUnchecked(p1, v6);
	return v7;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 1
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 1
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
depth : 2
public byte[] stringArrayValueToBytes(String p1){
	return 0;
}
-----
depth : 2
public void write(int p1, int p2, String p3, int p4, boolean p5, long p6, byte[] p7){
	StatsEvent$Builder v1 = StatsEvent.newBuilder();
	StatsEvent$Builder v2 = v1.setAtomId(p1);
	StatsEvent$Builder v3 = v1.writeInt(p2);
	StatsEvent$Builder v4 = v1.writeString(p3);
	StatsEvent$Builder v5 = v1.writeInt(p4);
	StatsEvent$Builder v6 = v1.writeBoolean(p5);
	StatsEvent$Builder v7 = v1.writeLong(p6);
	[B v7 = new [B(0);
	StatsEvent$Builder v8 = v1.writeByteArray(phiInstruction);
	StatsEvent$Builder v9 = v1.usePooledBuffer();
	StatsEvent v10 = v1.build();
	StatsLog.write(v10);
	return;
}
-----
","NONE"

"Lcom/android/server/pm/CrossProfileAppsServiceImpl","resetInteractAcrossProfilesAppOps(Ljava/util/List;)V","0","3 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda1>@0,
return,","depth : 0
public void resetInteractAcrossProfilesAppOps(List p1){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda1 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda1(p0);
	p1.forEach(v0);
	return;
}
-----
","NONE"

"Lcom/android/server/pm/CrossProfileAppsServiceImpl","setInteractAcrossProfilesAppOp(Ljava/lang/String;I)V","0","4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, setInteractAcrossProfilesAppOp(Ljava/lang/String;II)V > 1,2,3,6 @6 exception:7,
return,","depth : 0
public void setInteractAcrossProfilesAppOp(String p1, int p2){
	int v1 = this.mInjector.getCallingUserId();
	p0.setInteractAcrossProfilesAppOp(p1, p2, v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","setInteractAcrossProfilesAppOp(Ljava/lang/String;I)V","1","4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, setInteractAcrossProfilesAppOp(Ljava/lang/String;II)V > 1,2,3,6 @6 exception:7,
5 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,8,7 @8 exception:9,
conditional branch(ne, to iindex=-1) 10,11,
14 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,12,7 @16 exception:13,
conditional branch(eq, to iindex=-1) 14,11,
goto (from iindex= 11 to iindex = 9),
23 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,21,7 @33 exception:22,
conditional branch(ne, to iindex=-1) 23,11,
26 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,24,7 @41 exception:25,
conditional branch(eq, to iindex=-1) 26,11,
goto (from iindex= 24 to iindex = 9),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, setInteractAcrossProfilesAppOpUnchecked(Ljava/lang/String;II)V > 1,2,3,4 @56 exception:34,
return,
return,","depth : 0
public void setInteractAcrossProfilesAppOp(String p1, int p2){
	int v1 = this.mInjector.getCallingUserId();
	p0.setInteractAcrossProfilesAppOp(p1, p2, v1);
	return;
}
-----
depth : 1
public void setInteractAcrossProfilesAppOp(String p1, int p2, int p3){
	int v1 = this.mInjector.getCallingUid();
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	boolean v3 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v1);
	boolean v4 = p0.isPermissionGranted(""android.permission.MANAGE_APP_OPS_MODES"", v1);
	boolean v5 = p0.isPermissionGranted(""android.permission.CONFIGURE_INTERACT_ACROSS_PROFILES"", v1);
	p0.setInteractAcrossProfilesAppOpUnchecked(p1, p2, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","setInteractAcrossProfilesAppOp(Ljava/lang/String;I)V","2","4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, setInteractAcrossProfilesAppOp(Ljava/lang/String;II)V > 1,2,3,6 @6 exception:7,
5 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,8,7 @8 exception:9,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 6 to iindex = 2),
10 = phi  6,9,
return 10,
conditional branch(ne, to iindex=-1) 10,11,
14 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,12,7 @16 exception:13,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 6 to iindex = 2),
10 = phi  6,9,
return 10,
conditional branch(eq, to iindex=-1) 14,11,
goto (from iindex= 11 to iindex = 9),
23 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,21,7 @33 exception:22,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 6 to iindex = 2),
10 = phi  6,9,
return 10,
conditional branch(ne, to iindex=-1) 23,11,
26 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,24,7 @41 exception:25,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 6 to iindex = 2),
10 = phi  6,9,
return 10,
conditional branch(eq, to iindex=-1) 26,11,
goto (from iindex= 24 to iindex = 9),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, setInteractAcrossProfilesAppOpUnchecked(Ljava/lang/String;II)V > 1,2,3,4 @56 exception:34,
conditional branch(ne, to iindex=-1) 3,5,
conditional branch(ne, to iindex=-1) 7,5,
8 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
13 = arraylength 12,
24 = phi  23,5,
conditional branch(ge, to iindex=-1) 24,13,
return,
return,
return,","depth : 0
public void setInteractAcrossProfilesAppOp(String p1, int p2){
	int v1 = this.mInjector.getCallingUserId();
	p0.setInteractAcrossProfilesAppOp(p1, p2, v1);
	return;
}
-----
depth : 1
public void setInteractAcrossProfilesAppOp(String p1, int p2, int p3){
	int v1 = this.mInjector.getCallingUid();
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	boolean v3 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v1);
	boolean v4 = p0.isPermissionGranted(""android.permission.MANAGE_APP_OPS_MODES"", v1);
	boolean v5 = p0.isPermissionGranted(""android.permission.CONFIGURE_INTERACT_ACROSS_PROFILES"", v1);
	p0.setInteractAcrossProfilesAppOpUnchecked(p1, p2, p3);
	return;
}
-----
depth : 2
public boolean isPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean isPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean isPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean isPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public void setInteractAcrossProfilesAppOpUnchecked(String p1, int p2, int p3){
	boolean v1 = p0.canConfigureInteractAcrossProfiles(p1, p3);
	UserManager v2 = this.mInjector.getUserManager();
	[I v3 = v2.getProfileIds(p3, 0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","setInteractAcrossProfilesAppOp(Ljava/lang/String;I)V","2","4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, setInteractAcrossProfilesAppOp(Ljava/lang/String;II)V > 1,2,3,6 @6 exception:7,
5 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,8,7 @8 exception:9,
conditional branch(ne, to iindex=-1) 8,9,
10 = phi  6,9,
return 10,
conditional branch(ne, to iindex=-1) 10,11,
14 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,12,7 @16 exception:13,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 6 to iindex = 2),
10 = phi  6,9,
return 10,
conditional branch(eq, to iindex=-1) 14,11,
goto (from iindex= 11 to iindex = 9),
23 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,21,7 @33 exception:22,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 6 to iindex = 2),
10 = phi  6,9,
return 10,
conditional branch(ne, to iindex=-1) 23,11,
26 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isPermissionGranted(Ljava/lang/String;I)Z > 1,24,7 @41 exception:25,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 6 to iindex = 2),
10 = phi  6,9,
return 10,
conditional branch(eq, to iindex=-1) 26,11,
goto (from iindex= 24 to iindex = 9),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, setInteractAcrossProfilesAppOpUnchecked(Ljava/lang/String;II)V > 1,2,3,4 @56 exception:34,
conditional branch(ne, to iindex=-1) 3,5,
conditional branch(ne, to iindex=-1) 7,5,
8 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
13 = arraylength 12,
24 = phi  23,5,
conditional branch(ge, to iindex=-1) 24,13,
return,
return,
return,","depth : 0
public void setInteractAcrossProfilesAppOp(String p1, int p2){
	int v1 = this.mInjector.getCallingUserId();
	p0.setInteractAcrossProfilesAppOp(p1, p2, v1);
	return;
}
-----
depth : 1
public void setInteractAcrossProfilesAppOp(String p1, int p2, int p3){
	int v1 = this.mInjector.getCallingUid();
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	boolean v3 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v1);
	boolean v4 = p0.isPermissionGranted(""android.permission.MANAGE_APP_OPS_MODES"", v1);
	boolean v5 = p0.isPermissionGranted(""android.permission.CONFIGURE_INTERACT_ACROSS_PROFILES"", v1);
	p0.setInteractAcrossProfilesAppOpUnchecked(p1, p2, p3);
	return;
}
-----
depth : 2
public boolean isPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean isPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean isPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean isPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public void setInteractAcrossProfilesAppOpUnchecked(String p1, int p2, int p3){
	boolean v1 = p0.canConfigureInteractAcrossProfiles(p1, p3);
	UserManager v2 = this.mInjector.getUserManager();
	[I v3 = v2.getProfileIds(p3, 0);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canRequestInteractAcrossProfiles(Ljava/lang/String;)Z","0","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canRequestInteractAcrossProfilesUnchecked(Ljava/lang/String;)Z > 1,2 @6 exception:6,
return 7,","depth : 0
public boolean canRequestInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	boolean v3 = p0.canRequestInteractAcrossProfilesUnchecked(p1);
	return v3;
}
-----
","NONE"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canRequestInteractAcrossProfiles(Ljava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canRequestInteractAcrossProfilesUnchecked(Ljava/lang/String;)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
11 = arraylength 10,
conditional branch(ge, to iindex=-1) 11,13,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isProfileOwner(Ljava/lang/String;[I)Z > 1,2,10 @22 exception:14,
conditional branch(eq, to iindex=-1) 15,12,
20 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasRequestedAppOpPermission(Ljava/lang/String;Ljava/lang/String;)Z > 1,18,2 @35 exception:19,
return 20,
return 7,","depth : 0
public boolean canRequestInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	boolean v3 = p0.canRequestInteractAcrossProfilesUnchecked(p1);
	return v3;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public boolean canRequestInteractAcrossProfilesUnchecked(String p1){
	UserManager v1 = this.mInjector.getUserManager();
	int v2 = this.mInjector.getCallingUserId();
	[I v3 = v1.getEnabledProfileIds(v2);
	boolean v4 = p0.isProfileOwner(p1, v3);
	String v5 = AppOpsManager.opToPermission(93);
	boolean v6 = p0.hasRequestedAppOpPermission(v5, p1);
	return v6;
}
-----
","NONE"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canRequestInteractAcrossProfiles(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canRequestInteractAcrossProfilesUnchecked(Ljava/lang/String;)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
11 = arraylength 10,
conditional branch(ge, to iindex=-1) 11,13,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isProfileOwner(Ljava/lang/String;[I)Z > 1,2,10 @22 exception:14,
4 = arraylength 3,
11 = phi  10,5,
conditional branch(ge, to iindex=-1) 11,4,
6 = arrayload 3[11],
conditional branch(eq, to iindex=-1) 8,5,
return 12,
conditional branch(eq, to iindex=-1) 15,12,
20 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasRequestedAppOpPermission(Ljava/lang/String;Ljava/lang/String;)Z > 1,18,2 @35 exception:19,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return 18,
return 20,
return 7,","depth : 0
public boolean canRequestInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	boolean v3 = p0.canRequestInteractAcrossProfilesUnchecked(p1);
	return v3;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public boolean canRequestInteractAcrossProfilesUnchecked(String p1){
	UserManager v1 = this.mInjector.getUserManager();
	int v2 = this.mInjector.getCallingUserId();
	[I v3 = v1.getEnabledProfileIds(v2);
	boolean v4 = p0.isProfileOwner(p1, v3);
	String v5 = AppOpsManager.opToPermission(93);
	boolean v6 = p0.hasRequestedAppOpPermission(v5, p1);
	return v6;
}
-----
depth : 2
public boolean isProfileOwner(String p1, [I p2){
	boolean v1 = p0.isProfileOwner(p1, p2[phiInstruction]);
	return 1;
}
-----
depth : 2
public boolean hasRequestedAppOpPermission(String p1, String p2){
	IPackageManager v1 = this.mInjector.getIPackageManager();
	String v2 = v1.getAppOpPermissionPackages(p1);
	int v3 = Slog.e(""CrossProfileAppsService"", ""PackageManager dead. Cannot get permission info"");
	return 0;
}
-----
","NONE"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","canRequestInteractAcrossProfiles(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyCallingPackage(Ljava/lang/String;)V > 1,2 @3 exception:5,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, canRequestInteractAcrossProfilesUnchecked(Ljava/lang/String;)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
11 = arraylength 10,
conditional branch(ge, to iindex=-1) 11,13,
15 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isProfileOwner(Ljava/lang/String;[I)Z > 1,2,10 @22 exception:14,
4 = arraylength 3,
11 = phi  10,5,
conditional branch(ge, to iindex=-1) 11,4,
6 = arrayload 3[11],
conditional branch(eq, to iindex=-1) 8,5,
return 12,
conditional branch(eq, to iindex=-1) 15,12,
20 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasRequestedAppOpPermission(Ljava/lang/String;Ljava/lang/String;)Z > 1,18,2 @35 exception:19,
4 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return 18,
return 20,
return 7,","depth : 0
public boolean canRequestInteractAcrossProfiles(String p1){
	Object v1 = Objects.requireNonNull(p1);
	p0.verifyCallingPackage(p1);
	boolean v3 = p0.canRequestInteractAcrossProfilesUnchecked(p1);
	return v3;
}
-----
depth : 1
public void verifyCallingPackage(String p1){
	return;
}
-----
depth : 1
public boolean canRequestInteractAcrossProfilesUnchecked(String p1){
	UserManager v1 = this.mInjector.getUserManager();
	int v2 = this.mInjector.getCallingUserId();
	[I v3 = v1.getEnabledProfileIds(v2);
	boolean v4 = p0.isProfileOwner(p1, v3);
	String v5 = AppOpsManager.opToPermission(93);
	boolean v6 = p0.hasRequestedAppOpPermission(v5, p1);
	return v6;
}
-----
depth : 2
public boolean isProfileOwner(String p1, [I p2){
	boolean v1 = p0.isProfileOwner(p1, p2[phiInstruction]);
	return 1;
}
-----
depth : 2
public boolean hasRequestedAppOpPermission(String p1, String p2){
	IPackageManager v1 = this.mInjector.getIPackageManager();
	String v2 = v1.getAppOpPermissionPackages(p1);
	boolean v3 = ArrayUtils.contains(v2, p2);
	int v4 = Slog.e(""CrossProfileAppsService"", ""PackageManager dead. Cannot get permission info"");
	return 0;
}
-----
","NONE"

"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V","0","76 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,3 @102 exception:75,
conditional branch(eq, to iindex=-1) 76,31,
goto (from iindex= 51 to iindex = 9),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntent(Landroid/content/Intent;II)V > 1,48,24,6 @117 exception:83,
84 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, logStartActivityByIntent(Ljava/lang/String;)V > 1,3 @139 exception:89,
return,","depth : 0
public void startActivityAsUserByIntent(IApplicationThread p1, String p2, String p3, Intent p4, int p5, IBinder p6, Bundle p7){
	boolean v16 = p0.hasCallerGotInteractAcrossProfilesPermission(p2);
	p0.verifyActivityCanHandleIntent(v10, v7, p5);
	ActivityTaskManagerInternal v18 = this.mInjector.getActivityTaskManagerInternal();
	int v19 = v18.startActivityAsUser(p1, p2, p3, v10, p6, 0, p7, p5);
	p0.logStartActivityByIntent(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V","1","76 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,3 @102 exception:75,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
return 10,
conditional branch(eq, to iindex=-1) 76,31,
goto (from iindex= 51 to iindex = 9),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntent(Landroid/content/Intent;II)V > 1,48,24,6 @117 exception:83,
5 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6>@2,
return,
84 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, logStartActivityByIntent(Ljava/lang/String;)V > 1,3 @139 exception:89,
5 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 3 @2 exception:4,
7 = new <Application,[Ljava/lang/String>@76 ,
arraystore 7[8] = 2,
10 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 5,7 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isCallingUserAManagedProfile()Z > 1 @16 exception:11,
14 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger; > 10,12 @20 exception:13,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 14 @24 exception:15,
return,
return,","depth : 0
public void startActivityAsUserByIntent(IApplicationThread p1, String p2, String p3, Intent p4, int p5, IBinder p6, Bundle p7){
	boolean v16 = p0.hasCallerGotInteractAcrossProfilesPermission(p2);
	p0.verifyActivityCanHandleIntent(v10, v7, p5);
	ActivityTaskManagerInternal v18 = this.mInjector.getActivityTaskManagerInternal();
	int v19 = v18.startActivityAsUser(p1, p2, p3, v10, p6, 0, p7, p5);
	p0.logStartActivityByIntent(p2);
	return;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
depth : 1
public void verifyActivityCanHandleIntent(Intent p1, int p2, int p3){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6(p0,p1,p2,p3);
	this.mInjector.withCleanCallingIdentity(v0);
	return;
}
-----
depth : 1
public void logStartActivityByIntent(String p1){
	DevicePolicyEventLogger v1 = DevicePolicyEventLogger.createEvent(150);
	String v1 = new String(1);
	DevicePolicyEventLogger v2 = v1.setStrings(v1);
	boolean v3 = p0.isCallingUserAManagedProfile();
	DevicePolicyEventLogger v4 = v2.setBoolean(v3);
	v4.write();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V","1","76 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,3 @102 exception:75,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
return 10,
conditional branch(eq, to iindex=-1) 76,31,
goto (from iindex= 51 to iindex = 9),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntent(Landroid/content/Intent;II)V > 1,48,24,6 @117 exception:83,
5 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = new <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6>@2,
return,
84 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, logStartActivityByIntent(Ljava/lang/String;)V > 1,3 @139 exception:89,
5 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 3 @2 exception:4,
7 = new <Application,[Ljava/lang/String>@76 ,
arraystore 7[8] = 2,
10 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 5,7 @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isCallingUserAManagedProfile()Z > 1 @16 exception:11,
14 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger; > 10,12 @20 exception:13,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 14 @24 exception:15,
return,
return,","depth : 0
public void startActivityAsUserByIntent(IApplicationThread p1, String p2, String p3, Intent p4, int p5, IBinder p6, Bundle p7){
	boolean v14 = p0.hasCallerGotInteractAcrossProfilesPermission(p2);
	p0.verifyActivityCanHandleIntent(v8, v7, p5);
	ActivityTaskManagerInternal v16 = this.mInjector.getActivityTaskManagerInternal();
	int v17 = v16.startActivityAsUser(p1, p2, p3, v8, p6, 0, p7, p5);
	p0.logStartActivityByIntent(p2);
	return;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
depth : 1
public void verifyActivityCanHandleIntent(Intent p1, int p2, int p3){
	CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6 v0 = new CrossProfileAppsServiceImpl$$ExternalSyntheticLambda6(p0,p1,p2,p3);
	this.mInjector.withCleanCallingIdentity(v0);
	return;
}
-----
depth : 1
public void logStartActivityByIntent(String p1){
	DevicePolicyEventLogger v1 = DevicePolicyEventLogger.createEvent(150);
	String v1 = new String(1);
	DevicePolicyEventLogger v2 = v1.setStrings(v1);
	boolean v3 = p0.isCallingUserAManagedProfile();
	DevicePolicyEventLogger v4 = v2.setBoolean(v3);
	v4.write();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V","2","76 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,3 @102 exception:75,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
conditional branch(ne, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 12,9,
13 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 16,9,
goto (from iindex= 15 to iindex = 2),
18 = phi  8,8,8,9,
return 18,
return 10,
conditional branch(eq, to iindex=-1) 76,31,
goto (from iindex= 51 to iindex = 9),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntent(Landroid/content/Intent;II)V > 1,48,24,6 @117 exception:83,
84 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, logStartActivityByIntent(Ljava/lang/String;)V > 1,3 @139 exception:89,
5 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 3 @2 exception:4,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
7 = new <Application,[Ljava/lang/String>@76 ,
arraystore 7[8] = 2,
10 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 5,7 @12 exception:9,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
12 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isCallingUserAManagedProfile()Z > 1 @16 exception:11,
2 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return 6,
14 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger; > 10,12 @20 exception:13,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 14 @24 exception:15,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
return,
return,
return,","depth : 0
public void startActivityAsUserByIntent(IApplicationThread p1, String p2, String p3, Intent p4, int p5, IBinder p6, Bundle p7){
	boolean v16 = p0.hasCallerGotInteractAcrossProfilesPermission(p2);
	p0.verifyActivityCanHandleIntent(v10, v7, p5);
	ActivityTaskManagerInternal v18 = this.mInjector.getActivityTaskManagerInternal();
	int v19 = v18.startActivityAsUser(p1, p2, p3, v10, p6, 0, p7, p5);
	p0.logStartActivityByIntent(p2);
	return;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
depth : 2
public boolean hasInteractAcrossProfilesPermission(String p1, int p2, int p3){
	boolean v1 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", p2);
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", p2);
	int v3 = PermissionChecker.checkPermissionForPreflight(this.mContext, ""android.permission.INTERACT_ACROSS_PROFILES"", p3, p2, p1);
	return phiInstruction;
}
-----
depth : 1
public void logStartActivityByIntent(String p1){
	DevicePolicyEventLogger v1 = DevicePolicyEventLogger.createEvent(150);
	String v1 = new String(1);
	DevicePolicyEventLogger v2 = v1.setStrings(v1);
	boolean v3 = p0.isCallingUserAManagedProfile();
	DevicePolicyEventLogger v4 = v2.setBoolean(v3);
	v4.write();
	return;
}
-----
depth : 2
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 2
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 2
public boolean isCallingUserAManagedProfile(){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.isManagedProfile(v1);
	return v2;
}
-----
depth : 2
public DevicePolicyEventLogger setBoolean(boolean p1){
	this.mBooleanValue = p1;
	return p0;
}
-----
depth : 2
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V","2","76 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,3 @102 exception:75,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
conditional branch(ne, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 12,9,
13 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 16,9,
goto (from iindex= 15 to iindex = 2),
18 = phi  8,8,8,9,
return 18,
return 10,
conditional branch(eq, to iindex=-1) 76,31,
goto (from iindex= 51 to iindex = 9),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntent(Landroid/content/Intent;II)V > 1,48,24,6 @117 exception:83,
84 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, logStartActivityByIntent(Ljava/lang/String;)V > 1,3 @139 exception:89,
5 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 3 @2 exception:4,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
7 = new <Application,[Ljava/lang/String>@76 ,
arraystore 7[8] = 2,
10 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 5,7 @12 exception:9,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
12 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isCallingUserAManagedProfile()Z > 1 @16 exception:11,
2 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return 6,
14 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger; > 10,12 @20 exception:13,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 14 @24 exception:15,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
return,
return,
return,","depth : 0
public void startActivityAsUserByIntent(IApplicationThread p1, String p2, String p3, Intent p4, int p5, IBinder p6, Bundle p7){
	boolean v14 = p0.hasCallerGotInteractAcrossProfilesPermission(p2);
	p0.verifyActivityCanHandleIntent(v8, v7, p5);
	ActivityTaskManagerInternal v16 = this.mInjector.getActivityTaskManagerInternal();
	int v17 = v16.startActivityAsUser(p1, p2, p3, v8, p6, 0, p7, p5);
	p0.logStartActivityByIntent(p2);
	return;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
depth : 2
public boolean hasInteractAcrossProfilesPermission(String p1, int p2, int p3){
	boolean v1 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", p2);
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", p2);
	int v3 = PermissionChecker.checkPermissionForPreflight(this.mContext, ""android.permission.INTERACT_ACROSS_PROFILES"", p3, p2, p1);
	return phiInstruction;
}
-----
depth : 1
public void logStartActivityByIntent(String p1){
	DevicePolicyEventLogger v1 = DevicePolicyEventLogger.createEvent(150);
	String v1 = new String(1);
	DevicePolicyEventLogger v2 = v1.setStrings(v1);
	boolean v3 = p0.isCallingUserAManagedProfile();
	DevicePolicyEventLogger v4 = v2.setBoolean(v3);
	v4.write();
	return;
}
-----
depth : 2
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 2
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 2
public boolean isCallingUserAManagedProfile(){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.isManagedProfile(v1);
	return v2;
}
-----
depth : 2
public DevicePolicyEventLogger setBoolean(boolean p1){
	this.mBooleanValue = p1;
	return p0;
}
-----
depth : 2
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/CrossProfileAppsServiceImpl","startActivityAsUserByIntent(Landroid/app/IApplicationThread;Ljava/lang/String;Ljava/lang/String;Landroid/content/Intent;ILandroid/os/IBinder;Landroid/os/Bundle;)V","2","76 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasCallerGotInteractAcrossProfilesPermission(Ljava/lang/String;)Z > 1,3 @102 exception:75,
3 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
6 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, hasInteractAcrossProfilesPermission(Ljava/lang/String;II)Z > 1,2,5,8 @12 exception:9,
conditional branch(ne, to iindex=-1) 7,9,
conditional branch(eq, to iindex=-1) 12,9,
13 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 16,9,
18 = phi  8,8,8,9,
return 18,
return 10,
conditional branch(eq, to iindex=-1) 76,31,
goto (from iindex= 51 to iindex = 9),
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, verifyActivityCanHandleIntent(Landroid/content/Intent;II)V > 1,48,24,6 @117 exception:83,
84 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, logStartActivityByIntent(Ljava/lang/String;)V > 1,3 @139 exception:89,
5 = invokestatic < Application, Landroid/app/admin/DevicePolicyEventLogger, createEvent(I)Landroid/app/admin/DevicePolicyEventLogger; > 3 @2 exception:4,
2 = new <Application,Landroid/app/admin/DevicePolicyEventLogger>@0,
return 2,
7 = new <Application,[Ljava/lang/String>@76 ,
arraystore 7[8] = 2,
10 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setStrings([Ljava/lang/String;)Landroid/app/admin/DevicePolicyEventLogger; > 5,7 @12 exception:9,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > = 2,
return 1,
12 = invokevirtual < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, isCallingUserAManagedProfile()Z > 1 @16 exception:11,
2 = getfield < Application, Lcom/android/server/pm/CrossProfileAppsServiceImpl, mInjector, <Application,Lcom/android/server/pm/CrossProfileAppsServiceImpl$Injector> > 1,
return 6,
14 = invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, setBoolean(Z)Landroid/app/admin/DevicePolicyEventLogger; > 10,12 @20 exception:13,
putfield 1.< Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > = 2,
return 1,
invokevirtual < Application, Landroid/app/admin/DevicePolicyEventLogger, write()V > 14 @24 exception:15,
2 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mStringArrayValue, <Application,[Ljava/lang/String> > 1,
5 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mEventId, <Primordial,I> > 1,
6 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mAdminPackageName, <Application,Ljava/lang/String> > 1,
7 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mIntValue, <Primordial,I> > 1,
8 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mBooleanValue, <Primordial,Z> > 1,
9 = getfield < Application, Landroid/app/admin/DevicePolicyEventLogger, mTimePeriodMs, <Primordial,J> > 1,
return,
return,
return,","depth : 0
public void startActivityAsUserByIntent(IApplicationThread p1, String p2, String p3, Intent p4, int p5, IBinder p6, Bundle p7){
	boolean v16 = p0.hasCallerGotInteractAcrossProfilesPermission(p2);
	p0.verifyActivityCanHandleIntent(v10, v7, p5);
	ActivityTaskManagerInternal v18 = this.mInjector.getActivityTaskManagerInternal();
	int v19 = v18.startActivityAsUser(p1, p2, p3, v10, p6, 0, p7, p5);
	p0.logStartActivityByIntent(p2);
	return;
}
-----
depth : 1
public boolean hasCallerGotInteractAcrossProfilesPermission(String p1){
	int v1 = this.mInjector.getCallingUid();
	int v2 = this.mInjector.getCallingPid();
	boolean v3 = p0.hasInteractAcrossProfilesPermission(p1, v1, v2);
	return v3;
}
-----
depth : 2
public boolean hasInteractAcrossProfilesPermission(String p1, int p2, int p3){
	boolean v1 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", p2);
	boolean v2 = p0.isPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", p2);
	int v3 = PermissionChecker.checkPermissionForPreflight(this.mContext, ""android.permission.INTERACT_ACROSS_PROFILES"", p3, p2, p1);
	return phiInstruction;
}
-----
depth : 1
public void logStartActivityByIntent(String p1){
	DevicePolicyEventLogger v1 = DevicePolicyEventLogger.createEvent(150);
	String v1 = new String(1);
	DevicePolicyEventLogger v2 = v1.setStrings(v1);
	boolean v3 = p0.isCallingUserAManagedProfile();
	DevicePolicyEventLogger v4 = v2.setBoolean(v3);
	v4.write();
	return;
}
-----
depth : 2
public DevicePolicyEventLogger createEvent(int p1){
	DevicePolicyEventLogger v0 = new DevicePolicyEventLogger(p1);
	return v0;
}
-----
depth : 2
public DevicePolicyEventLogger setStrings(String p1){
	this.mStringArrayValue = p1;
	return p0;
}
-----
depth : 2
public boolean isCallingUserAManagedProfile(){
	int v1 = this.mInjector.getCallingUserId();
	boolean v2 = p0.isManagedProfile(v1);
	return v2;
}
-----
depth : 2
public DevicePolicyEventLogger setBoolean(boolean p1){
	this.mBooleanValue = p1;
	return p0;
}
-----
depth : 2
public void write(){
	byte[] v1 = DevicePolicyEventLogger.stringArrayValueToBytes(this.mStringArrayValue);
	FrameworkStatsLog.write(103, this.mEventId, this.mAdminPackageName, this.mIntValue, this.mBooleanValue, this.mTimePeriodMs, v1);
	return;
}
-----
","SYS_OR_SIG"

