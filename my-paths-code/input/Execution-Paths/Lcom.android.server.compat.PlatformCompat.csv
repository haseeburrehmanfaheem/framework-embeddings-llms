"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/compat/PlatformCompat","reportChange(JLandroid/content/pm/ApplicationInfo;)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
5 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,5,6 @6 exception:7,
return,","depth : 0
public void reportChange(long p1, ApplicationInfo p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChange(JLandroid/content/pm/ApplicationInfo;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,5,6 @6 exception:7,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
return,
return,","depth : 0
public void reportChange(long p1, ApplicationInfo p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChange(JLandroid/content/pm/ApplicationInfo;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,5,6 @6 exception:7,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
return,
return,","depth : 0
public void reportChange(long p1, ApplicationInfo p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChange(JLandroid/content/pm/ApplicationInfo;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,5,6 @6 exception:7,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
9 = getfield < Application, Lcom/android/internal/compat/ChangeReporter, mSource, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 13,7,
16 = new <Application,Lcom/android/internal/compat/ChangeReporter$ChangeReport>@25,
return,
return,
return,","depth : 0
public void reportChange(long p1, ApplicationInfo p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
depth : 2
public void reportChange(int p1, long p2, int p3){
	boolean v1 = p0.shouldWriteToStatsLog(p1, p2, p3);
	FrameworkStatsLog.write(228, p1, p2, p3, this.mSource);
	boolean v3 = p0.shouldWriteToDebug(p1, p2, p3);
	ChangeReporter$ChangeReport v4 = new ChangeReporter$ChangeReport(p2,p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChange(JLandroid/content/pm/ApplicationInfo;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,5,6 @6 exception:7,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
9 = getfield < Application, Lcom/android/internal/compat/ChangeReporter, mSource, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 13,7,
16 = new <Application,Lcom/android/internal/compat/ChangeReporter$ChangeReport>@25,
return,
return,
return,","depth : 0
public void reportChange(long p1, ApplicationInfo p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
depth : 2
public void reportChange(int p1, long p2, int p3){
	boolean v1 = p0.shouldWriteToStatsLog(p1, p2, p3);
	FrameworkStatsLog.write(228, p1, p2, p3, this.mSource);
	boolean v3 = p0.shouldWriteToDebug(p1, p2, p3);
	ChangeReporter$ChangeReport v3 = new ChangeReporter$ChangeReport(p2,p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChange(JLandroid/content/pm/ApplicationInfo;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,5,6 @6 exception:7,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
9 = getfield < Application, Lcom/android/internal/compat/ChangeReporter, mSource, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 13,7,
16 = new <Application,Lcom/android/internal/compat/ChangeReporter$ChangeReport>@25,
return,
return,
return,","depth : 0
public void reportChange(long p1, ApplicationInfo p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
depth : 2
public void reportChange(int p1, long p2, int p3){
	boolean v1 = p0.shouldWriteToStatsLog(p1, p2, p3);
	FrameworkStatsLog.write(228, p1, p2, p3, this.mSource);
	boolean v3 = p0.shouldWriteToDebug(p1, p2, p3);
	ChangeReporter$ChangeReport v4 = new ChangeReporter$ChangeReport(p2,p3);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","isChangeEnabled(JLandroid/content/pm/ApplicationInfo;)Z","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternal(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @3 exception:5,
return 6,","depth : 0
public boolean isChangeEnabled(long p1, ApplicationInfo p2){
	p0.checkCompatChangeReadAndLogPermission();
	boolean v2 = p0.isChangeEnabledInternal(p1, p2);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabled(JLandroid/content/pm/ApplicationInfo;)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
6 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternal(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @3 exception:5,
5 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternalNoLogging(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @0 exception:4,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,8,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,7,10 @13 exception:11,
return 5,
return 6,","depth : 0
public boolean isChangeEnabled(long p1, ApplicationInfo p2){
	p0.checkCompatChangeReadAndLogPermission();
	boolean v2 = p0.isChangeEnabledInternal(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 1
public boolean isChangeEnabledInternal(long p1, ApplicationInfo p2){
	boolean v1 = p0.isChangeEnabledInternalNoLogging(p1, p2);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, phiInstruction);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabled(JLandroid/content/pm/ApplicationInfo;)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
6 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternal(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @3 exception:5,
5 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternalNoLogging(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @0 exception:4,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
conditional branch(eq, to iindex=-1) 5,6,
10 = phi  9,8,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,7,10 @13 exception:11,
return 5,
return 6,","depth : 0
public boolean isChangeEnabled(long p1, ApplicationInfo p2){
	p0.checkCompatChangeReadAndLogPermission();
	boolean v2 = p0.isChangeEnabledInternal(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 1
public boolean isChangeEnabledInternal(long p1, ApplicationInfo p2){
	boolean v1 = p0.isChangeEnabledInternalNoLogging(p1, p2);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, phiInstruction);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabled(JLandroid/content/pm/ApplicationInfo;)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
return,
6 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternal(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @3 exception:5,
5 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternalNoLogging(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @0 exception:4,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
return 6,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,8,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,7,10 @13 exception:11,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
return,
return 5,
return 6,","depth : 0
public boolean isChangeEnabled(long p1, ApplicationInfo p2){
	p0.checkCompatChangeReadAndLogPermission();
	boolean v2 = p0.isChangeEnabledInternal(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public boolean isChangeEnabledInternal(long p1, ApplicationInfo p2){
	boolean v1 = p0.isChangeEnabledInternalNoLogging(p1, p2);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, phiInstruction);
	return v1;
}
-----
depth : 2
public boolean isChangeEnabledInternalNoLogging(long p1, ApplicationInfo p2){
	boolean v1 = this.mCompatConfig.isChangeEnabled(p1, p2);
	return v1;
}
-----
depth : 2
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabled(JLandroid/content/pm/ApplicationInfo;)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
return,
6 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternal(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @3 exception:5,
5 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternalNoLogging(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @0 exception:4,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
return 6,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,8,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,7,10 @13 exception:11,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
return,
return 5,
return 6,","depth : 0
public boolean isChangeEnabled(long p1, ApplicationInfo p2){
	p0.checkCompatChangeReadAndLogPermission();
	boolean v2 = p0.isChangeEnabledInternal(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public boolean isChangeEnabledInternal(long p1, ApplicationInfo p2){
	boolean v1 = p0.isChangeEnabledInternalNoLogging(p1, p2);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, phiInstruction);
	return v1;
}
-----
depth : 2
public boolean isChangeEnabledInternalNoLogging(long p1, ApplicationInfo p2){
	boolean v1 = this.mCompatConfig.isChangeEnabled(p1, p2);
	return v1;
}
-----
depth : 2
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabled(JLandroid/content/pm/ApplicationInfo;)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
return,
6 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternal(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @3 exception:5,
5 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternalNoLogging(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @0 exception:4,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
return 6,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,8,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,7,10 @13 exception:11,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
return,
return 5,
return 6,","depth : 0
public boolean isChangeEnabled(long p1, ApplicationInfo p2){
	p0.checkCompatChangeReadAndLogPermission();
	boolean v2 = p0.isChangeEnabledInternal(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public boolean isChangeEnabledInternal(long p1, ApplicationInfo p2){
	boolean v1 = p0.isChangeEnabledInternalNoLogging(p1, p2);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, phiInstruction);
	return v1;
}
-----
depth : 2
public boolean isChangeEnabledInternalNoLogging(long p1, ApplicationInfo p2){
	boolean v1 = this.mCompatConfig.isChangeEnabled(p1, p2);
	return v1;
}
-----
depth : 2
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","listAllChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo;","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, dumpChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 3 @5 exception:4,
return 5,","depth : 0
public CompatibilityChangeInfo listAllChanges(){
	p0.checkCompatChangeReadPermission();
	CompatibilityChangeInfo v2 = this.mCompatConfig.dumpChanges();
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","listAllChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo;","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
return,
3 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, dumpChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 3 @5 exception:4,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
5 = new <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>@64 ,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
21 = phi  18,11,
conditional branch(eq, to iindex=-1) 13,11,
return 5,
return 5,","depth : 0
public CompatibilityChangeInfo listAllChanges(){
	p0.checkCompatChangeReadPermission();
	CompatibilityChangeInfo v2 = this.mCompatConfig.dumpChanges();
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 1
public CompatibilityChangeInfo dumpChanges(){
	int v1 = this.mChanges.size();
	CompatibilityChangeInfo v1 = new CompatibilityChangeInfo(v1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","listAllChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo;","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
3 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, dumpChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 3 @5 exception:4,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
5 = new <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>@64 ,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
21 = phi  18,11,
conditional branch(eq, to iindex=-1) 13,11,
return 5,
return 5,","depth : 0
public CompatibilityChangeInfo listAllChanges(){
	p0.checkCompatChangeReadPermission();
	CompatibilityChangeInfo v2 = this.mCompatConfig.dumpChanges();
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 1
public CompatibilityChangeInfo dumpChanges(){
	int v1 = this.mChanges.size();
	CompatibilityChangeInfo v1 = new CompatibilityChangeInfo(v1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","setOverridesForTest(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
return,","depth : 0
public void setOverridesForTest(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverridesForTest(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
monitorexit 1,
return,
return,","depth : 0
public void setOverridesForTest(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverridesForTest(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
monitorexit 1,
return,
return,","depth : 0
public void setOverridesForTest(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverridesForTest(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 11,12,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
return,
monitorexit 1,
return,
return,","depth : 0
public void setOverridesForTest(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void addPackageOverridesWithoutSaving(CompatibilityOverrideConfig p1, String p2, boolean p3){
	Set v1 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverridesForTest(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 11,12,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
return,
monitorexit 1,
return,
return,","depth : 0
public void setOverridesForTest(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void addPackageOverridesWithoutSaving(CompatibilityOverrideConfig p1, String p2, boolean p3){
	Set v1 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverridesForTest(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 11,12,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
return,
monitorexit 1,
return,
return,","depth : 0
public void setOverridesForTest(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void addPackageOverridesWithoutSaving(CompatibilityOverrideConfig p1, String p2, boolean p3){
	Set v1 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","disableTargetSdkChanges(Ljava/lang/String;I)I","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, disableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
return 7,","depth : 0
public int disableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.disableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","disableTargetSdkChanges(Ljava/lang/String;I)I","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, disableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
6 = arraylength 5,
20 = phi  19,7,
21 = phi  17,7,
conditional branch(ge, to iindex=-1) 20,6,
conditional branch(eq, to iindex=-1) 21,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:24,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:25,
27 = arraylength 5,
return 27,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return 7,","depth : 0
public int disableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.disableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int disableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","disableTargetSdkChanges(Ljava/lang/String;I)I","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, disableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
6 = arraylength 5,
20 = phi  19,7,
21 = phi  17,7,
conditional branch(ge, to iindex=-1) 20,6,
conditional branch(eq, to iindex=-1) 21,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:24,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:25,
27 = arraylength 5,
return 27,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return 7,","depth : 0
public int disableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.disableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int disableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","disableTargetSdkChanges(Ljava/lang/String;I)I","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, disableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
4 = new <Application,Landroid/util/LongArray>@0,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 12,13,
return 33,
6 = arraylength 5,
20 = phi  19,7,
21 = phi  17,7,
conditional branch(ge, to iindex=-1) 20,6,
conditional branch(eq, to iindex=-1) 21,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:24,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:25,
return,
27 = arraylength 5,
return 27,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return 7,","depth : 0
public int disableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.disableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int disableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 2
public [J getAllowedChangesSinceTargetSdkForPackage(String p1, int p2){
	LongArray v0 = new LongArray();
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	[J v5 = v0.toArray();
	return v5;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","disableTargetSdkChanges(Ljava/lang/String;I)I","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, disableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
4 = new <Application,Landroid/util/LongArray>@0,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 12,13,
return 33,
6 = arraylength 5,
20 = phi  19,7,
21 = phi  17,7,
conditional branch(ge, to iindex=-1) 20,6,
conditional branch(eq, to iindex=-1) 21,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:24,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:25,
return,
27 = arraylength 5,
return 27,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return 7,","depth : 0
public int disableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.disableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int disableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 2
public [J getAllowedChangesSinceTargetSdkForPackage(String p1, int p2){
	LongArray v0 = new LongArray();
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	[J v5 = v0.toArray();
	return v5;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","disableTargetSdkChanges(Ljava/lang/String;I)I","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, disableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
4 = new <Application,Landroid/util/LongArray>@0,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 12,13,
return 33,
6 = arraylength 5,
20 = phi  19,7,
21 = phi  17,7,
conditional branch(ge, to iindex=-1) 20,6,
conditional branch(eq, to iindex=-1) 21,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:24,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:25,
return,
27 = arraylength 5,
return 27,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return 7,","depth : 0
public int disableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.disableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int disableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 2
public [J getAllowedChangesSinceTargetSdkForPackage(String p1, int p2){
	LongArray v0 = new LongArray();
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	[J v5 = v0.toArray();
	return v5;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,7 @9 exception:8,
9 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 9,2,3,10 @15 exception:11,
return,","depth : 0
public void putOverridesOnReleaseBuilds(CompatibilityOverrideConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	Set v2 = CompatibilityOverrideConfig.overrides.keySet();
	p0.checkAllCompatOverridesAreOverridable(v2);
	this.mCompatConfig.addPackageOverrides(p1, p2, 1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,7 @9 exception:8,
conditional branch(eq, to iindex=-1) 6,7,
return,
9 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 9,2,3,10 @15 exception:11,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
monitorexit 1,
return,
return,","depth : 0
public void putOverridesOnReleaseBuilds(CompatibilityOverrideConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	Set v2 = CompatibilityOverrideConfig.overrides.keySet();
	p0.checkAllCompatOverridesAreOverridable(v2);
	this.mCompatConfig.addPackageOverrides(p1, p2, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,7 @9 exception:8,
conditional branch(eq, to iindex=-1) 6,7,
return,
9 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 9,2,3,10 @15 exception:11,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
monitorexit 1,
return,
return,","depth : 0
public void putOverridesOnReleaseBuilds(CompatibilityOverrideConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	Set v2 = CompatibilityOverrideConfig.overrides.keySet();
	p0.checkAllCompatOverridesAreOverridable(v2);
	this.mCompatConfig.addPackageOverrides(p1, p2, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,7 @9 exception:8,
conditional branch(eq, to iindex=-1) 6,7,
return,
9 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 9,2,3,10 @15 exception:11,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 11,12,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
return,
monitorexit 1,
return,
return,","depth : 0
public void putOverridesOnReleaseBuilds(CompatibilityOverrideConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	Set v2 = CompatibilityOverrideConfig.overrides.keySet();
	p0.checkAllCompatOverridesAreOverridable(v2);
	this.mCompatConfig.addPackageOverrides(p1, p2, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void addPackageOverridesWithoutSaving(CompatibilityOverrideConfig p1, String p2, boolean p3){
	Set v1 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,7 @9 exception:8,
conditional branch(eq, to iindex=-1) 6,7,
return,
9 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 9,2,3,10 @15 exception:11,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 11,12,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
return,
monitorexit 1,
return,
return,","depth : 0
public void putOverridesOnReleaseBuilds(CompatibilityOverrideConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	Set v2 = CompatibilityOverrideConfig.overrides.keySet();
	p0.checkAllCompatOverridesAreOverridable(v2);
	this.mCompatConfig.addPackageOverrides(p1, p2, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void addPackageOverridesWithoutSaving(CompatibilityOverrideConfig p1, String p2, boolean p3){
	Set v1 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,7 @9 exception:8,
conditional branch(eq, to iindex=-1) 6,7,
return,
9 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 9,2,3,10 @15 exception:11,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 11,12,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
return,
monitorexit 1,
return,
return,","depth : 0
public void putOverridesOnReleaseBuilds(CompatibilityOverrideConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	Set v2 = CompatibilityOverrideConfig.overrides.keySet();
	p0.checkAllCompatOverridesAreOverridable(v2);
	this.mCompatConfig.addPackageOverrides(p1, p2, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void addPackageOverridesWithoutSaving(CompatibilityOverrideConfig p1, String p2, boolean p3){
	Set v1 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig, changeIds, <Application,Ljava/util/Set> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,5 @5 exception:6,
7 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V > 7,2,3 @10 exception:8,
return,","depth : 0
public void removeOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	p0.checkAllCompatOverridesAreOverridable(CompatibilityOverridesToRemoveConfig.changeIds);
	this.mCompatConfig.removePackageOverrides(p1, p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig, changeIds, <Application,Ljava/util/Set> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,5 @5 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
return,
7 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V > 7,2,3 @10 exception:8,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)Z > 1,2,3 @1 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
monitorexit 1,
return,
return,","depth : 0
public void removeOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	p0.checkAllCompatOverridesAreOverridable(CompatibilityOverridesToRemoveConfig.changeIds);
	this.mCompatConfig.removePackageOverrides(p1, p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void removePackageOverrides(CompatibilityOverridesToRemoveConfig p1, String p2){
	boolean v1 = p0.removePackageOverridesWithoutSaving(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig, changeIds, <Application,Ljava/util/Set> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,5 @5 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
return,
7 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V > 7,2,3 @10 exception:8,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)Z > 1,2,3 @1 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
monitorexit 1,
return,
return,","depth : 0
public void removeOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	p0.checkAllCompatOverridesAreOverridable(CompatibilityOverridesToRemoveConfig.changeIds);
	this.mCompatConfig.removePackageOverrides(p1, p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void removePackageOverrides(CompatibilityOverridesToRemoveConfig p1, String p2){
	boolean v1 = p0.removePackageOverridesWithoutSaving(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig, changeIds, <Application,Ljava/util/Set> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,5 @5 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
return,
7 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V > 7,2,3 @10 exception:8,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)Z > 1,2,3 @1 exception:4,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig, changeIds, <Application,Ljava/util/Set> > 2,
39 = phi  39,38,7,
conditional branch(eq, to iindex=-1) 9,7,
return 39,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
return,
monitorexit 1,
return,
return,","depth : 0
public void removeOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	p0.checkAllCompatOverridesAreOverridable(CompatibilityOverridesToRemoveConfig.changeIds);
	this.mCompatConfig.removePackageOverrides(p1, p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void removePackageOverrides(CompatibilityOverridesToRemoveConfig p1, String p2){
	boolean v1 = p0.removePackageOverridesWithoutSaving(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public boolean removePackageOverridesWithoutSaving(CompatibilityOverridesToRemoveConfig p1, String p2){
	Iterator v1 = CompatibilityOverridesToRemoveConfig.changeIds.iterator();
	boolean v2 = v1.hasNext();
	return phiInstruction;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig, changeIds, <Application,Ljava/util/Set> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,5 @5 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
return,
7 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V > 7,2,3 @10 exception:8,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)Z > 1,2,3 @1 exception:4,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig, changeIds, <Application,Ljava/util/Set> > 2,
39 = phi  39,38,7,
conditional branch(eq, to iindex=-1) 9,7,
return 39,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
return,
monitorexit 1,
return,
return,","depth : 0
public void removeOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	p0.checkAllCompatOverridesAreOverridable(CompatibilityOverridesToRemoveConfig.changeIds);
	this.mCompatConfig.removePackageOverrides(p1, p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void removePackageOverrides(CompatibilityOverridesToRemoveConfig p1, String p2){
	boolean v1 = p0.removePackageOverridesWithoutSaving(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public boolean removePackageOverridesWithoutSaving(CompatibilityOverridesToRemoveConfig p1, String p2){
	Iterator v1 = CompatibilityOverridesToRemoveConfig.changeIds.iterator();
	boolean v2 = v1.hasNext();
	return phiInstruction;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig, changeIds, <Application,Ljava/util/Set> > 2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkAllCompatOverridesAreOverridable(Ljava/util/Collection;)V > 1,5 @5 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
return,
7 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)V > 7,2,3 @10 exception:8,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig;Ljava/lang/String;)Z > 1,2,3 @1 exception:4,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveConfig, changeIds, <Application,Ljava/util/Set> > 2,
39 = phi  39,38,7,
conditional branch(eq, to iindex=-1) 9,7,
return 39,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
return,
monitorexit 1,
return,
return,","depth : 0
public void removeOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveConfig p1, String p2){
	p0.checkCompatChangeOverrideOverridablePermission();
	p0.checkAllCompatOverridesAreOverridable(CompatibilityOverridesToRemoveConfig.changeIds);
	this.mCompatConfig.removePackageOverrides(p1, p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void checkAllCompatOverridesAreOverridable(Collection p1){
	Iterator v1 = p1.iterator();
	boolean v2 = v1.hasNext();
	return;
}
-----
depth : 1
public void removePackageOverrides(CompatibilityOverridesToRemoveConfig p1, String p2){
	boolean v1 = p0.removePackageOverridesWithoutSaving(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public boolean removePackageOverridesWithoutSaving(CompatibilityOverridesToRemoveConfig p1, String p2){
	Iterator v1 = CompatibilityOverridesToRemoveConfig.changeIds.iterator();
	boolean v2 = v1.hasNext();
	return phiInstruction;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","enableTargetSdkChanges(Ljava/lang/String;I)I","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, enableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
return 7,","depth : 0
public int enableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.enableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","enableTargetSdkChanges(Ljava/lang/String;I)I","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, enableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
6 = arraylength 5,
21 = phi  20,7,
22 = phi  18,7,
conditional branch(ge, to iindex=-1) 21,6,
conditional branch(eq, to iindex=-1) 22,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:25,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:26,
28 = arraylength 5,
return 28,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return 7,","depth : 0
public int enableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.enableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int enableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","enableTargetSdkChanges(Ljava/lang/String;I)I","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, enableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
6 = arraylength 5,
21 = phi  20,7,
22 = phi  18,7,
conditional branch(ge, to iindex=-1) 21,6,
conditional branch(eq, to iindex=-1) 22,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:25,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:26,
28 = arraylength 5,
return 28,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return 7,","depth : 0
public int enableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.enableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int enableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","enableTargetSdkChanges(Ljava/lang/String;I)I","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, enableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
4 = new <Application,Landroid/util/LongArray>@0,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 12,13,
return 33,
6 = arraylength 5,
21 = phi  20,7,
22 = phi  18,7,
conditional branch(ge, to iindex=-1) 21,6,
conditional branch(eq, to iindex=-1) 22,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:25,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:26,
return,
28 = arraylength 5,
return 28,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return 7,","depth : 0
public int enableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.enableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int enableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 2
public [J getAllowedChangesSinceTargetSdkForPackage(String p1, int p2){
	LongArray v0 = new LongArray();
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	[J v5 = v0.toArray();
	return v5;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","enableTargetSdkChanges(Ljava/lang/String;I)I","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, enableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
4 = new <Application,Landroid/util/LongArray>@0,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 12,13,
return 33,
6 = arraylength 5,
21 = phi  20,7,
22 = phi  18,7,
conditional branch(ge, to iindex=-1) 21,6,
conditional branch(eq, to iindex=-1) 22,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:25,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:26,
return,
28 = arraylength 5,
return 28,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return 7,","depth : 0
public int enableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.enableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int enableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 2
public [J getAllowedChangesSinceTargetSdkForPackage(String p1, int p2){
	LongArray v0 = new LongArray();
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	[J v5 = v0.toArray();
	return v5;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","enableTargetSdkChanges(Ljava/lang/String;I)I","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, enableTargetSdkChangesForPackage(Ljava/lang/String;I)I > 5,2,3 @5 exception:6,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAllowedChangesSinceTargetSdkForPackage(Ljava/lang/String;I)[J > 1,2,3 @0 exception:4,
4 = new <Application,Landroid/util/LongArray>@0,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 12,13,
return 33,
6 = arraylength 5,
21 = phi  20,7,
22 = phi  18,7,
conditional branch(ge, to iindex=-1) 21,6,
conditional branch(eq, to iindex=-1) 22,7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:25,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:26,
return,
28 = arraylength 5,
return 28,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return 7,","depth : 0
public int enableTargetSdkChanges(String p1, int p2){
	p0.checkCompatChangeOverridePermission();
	int v2 = this.mCompatConfig.enableTargetSdkChangesForPackage(p1, p2);
	p0.killPackage(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public int enableTargetSdkChangesForPackage(String p1, int p2){
	[J v1 = p0.getAllowedChangesSinceTargetSdkForPackage(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1.length;
}
-----
depth : 2
public [J getAllowedChangesSinceTargetSdkForPackage(String p1, int p2){
	LongArray v0 = new LongArray();
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	[J v5 = v0.toArray();
	return v5;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","listUIChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo;","0","3 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, listAllChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 1 @0 exception:2,
6 = new <Application,Lcom/android/server/compat/PlatformCompat$$ExternalSyntheticLambda0>@8,
10 = new <Application,Lcom/android/server/compat/PlatformCompat$$ExternalSyntheticLambda1>@17,
14 = checkcast <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>13 <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>,
return 14,","depth : 0
public CompatibilityChangeInfo listUIChanges(){
	CompatibilityChangeInfo v1 = p0.listAllChanges();
	Stream v2 = Arrays.stream(v1);
	PlatformCompat$$ExternalSyntheticLambda0 v2 = new PlatformCompat$$ExternalSyntheticLambda0(p0);
	Stream v4 = v2.filter(v2);
	PlatformCompat$$ExternalSyntheticLambda1 v4 = new PlatformCompat$$ExternalSyntheticLambda1();
	Object v6 = v4.toArray(v4);
	return v6;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","listUIChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo;","1","3 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, listAllChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, dumpChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 3 @5 exception:4,
return 5,
6 = new <Application,Lcom/android/server/compat/PlatformCompat$$ExternalSyntheticLambda0>@8,
10 = new <Application,Lcom/android/server/compat/PlatformCompat$$ExternalSyntheticLambda1>@17,
14 = checkcast <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>13 <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>,
return 14,","depth : 0
public CompatibilityChangeInfo listUIChanges(){
	CompatibilityChangeInfo v1 = p0.listAllChanges();
	Stream v2 = Arrays.stream(v1);
	PlatformCompat$$ExternalSyntheticLambda0 v2 = new PlatformCompat$$ExternalSyntheticLambda0(p0);
	Stream v4 = v2.filter(v2);
	PlatformCompat$$ExternalSyntheticLambda1 v4 = new PlatformCompat$$ExternalSyntheticLambda1();
	Object v6 = v4.toArray(v4);
	return v6;
}
-----
depth : 1
public CompatibilityChangeInfo listAllChanges(){
	p0.checkCompatChangeReadPermission();
	CompatibilityChangeInfo v2 = this.mCompatConfig.dumpChanges();
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","listUIChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo;","2","3 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, listAllChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
return,
3 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, dumpChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 3 @5 exception:4,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
5 = new <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>@64 ,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
21 = phi  18,11,
conditional branch(eq, to iindex=-1) 13,11,
return 5,
return 5,
6 = new <Application,Lcom/android/server/compat/PlatformCompat$$ExternalSyntheticLambda0>@8,
10 = new <Application,Lcom/android/server/compat/PlatformCompat$$ExternalSyntheticLambda1>@17,
14 = checkcast <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>13 <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>,
return 14,","depth : 0
public CompatibilityChangeInfo listUIChanges(){
	CompatibilityChangeInfo v1 = p0.listAllChanges();
	Stream v2 = Arrays.stream(v1);
	PlatformCompat$$ExternalSyntheticLambda0 v2 = new PlatformCompat$$ExternalSyntheticLambda0(p0);
	Stream v4 = v2.filter(v2);
	PlatformCompat$$ExternalSyntheticLambda1 v4 = new PlatformCompat$$ExternalSyntheticLambda1();
	Object v6 = v4.toArray(v4);
	return v6;
}
-----
depth : 1
public CompatibilityChangeInfo listAllChanges(){
	p0.checkCompatChangeReadPermission();
	CompatibilityChangeInfo v2 = this.mCompatConfig.dumpChanges();
	return v2;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public CompatibilityChangeInfo dumpChanges(){
	int v1 = this.mChanges.size();
	CompatibilityChangeInfo v1 = new CompatibilityChangeInfo(v1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","listUIChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo;","2","3 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, listAllChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
3 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, dumpChanges()[Lcom/android/internal/compat/CompatibilityChangeInfo; > 3 @5 exception:4,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
5 = new <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>@64 ,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
21 = phi  18,11,
conditional branch(eq, to iindex=-1) 13,11,
return 5,
return 5,
6 = new <Application,Lcom/android/server/compat/PlatformCompat$$ExternalSyntheticLambda0>@8,
10 = new <Application,Lcom/android/server/compat/PlatformCompat$$ExternalSyntheticLambda1>@17,
14 = checkcast <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>13 <Application,[Lcom/android/internal/compat/CompatibilityChangeInfo>,
return 14,","depth : 0
public CompatibilityChangeInfo listUIChanges(){
	CompatibilityChangeInfo v1 = p0.listAllChanges();
	Stream v2 = Arrays.stream(v1);
	PlatformCompat$$ExternalSyntheticLambda0 v2 = new PlatformCompat$$ExternalSyntheticLambda0(p0);
	Stream v4 = v2.filter(v2);
	PlatformCompat$$ExternalSyntheticLambda1 v4 = new PlatformCompat$$ExternalSyntheticLambda1();
	Object v6 = v4.toArray(v4);
	return v6;
}
-----
depth : 1
public CompatibilityChangeInfo listAllChanges(){
	p0.checkCompatChangeReadPermission();
	CompatibilityChangeInfo v2 = this.mCompatConfig.dumpChanges();
	return v2;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public CompatibilityChangeInfo dumpChanges(){
	int v1 = this.mChanges.size();
	CompatibilityChangeInfo v1 = new CompatibilityChangeInfo(v1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","reportChangeByUid(JI)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,3,5 @4 exception:6,
return,","depth : 0
public void reportChangeByUid(long p1, int p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, p2, 3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByUid(JI)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,3,5 @4 exception:6,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
return,
return,","depth : 0
public void reportChangeByUid(long p1, int p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, p2, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByUid(JI)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,3,5 @4 exception:6,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
return,
return,","depth : 0
public void reportChangeByUid(long p1, int p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, p2, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByUid(JI)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,3,5 @4 exception:6,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
9 = getfield < Application, Lcom/android/internal/compat/ChangeReporter, mSource, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 13,7,
16 = new <Application,Lcom/android/internal/compat/ChangeReporter$ChangeReport>@25,
return,
return,
return,","depth : 0
public void reportChangeByUid(long p1, int p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, p2, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
depth : 2
public void reportChange(int p1, long p2, int p3){
	boolean v1 = p0.shouldWriteToStatsLog(p1, p2, p3);
	FrameworkStatsLog.write(228, p1, p2, p3, this.mSource);
	boolean v3 = p0.shouldWriteToDebug(p1, p2, p3);
	ChangeReporter$ChangeReport v4 = new ChangeReporter$ChangeReport(p2,p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByUid(JI)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,3,5 @4 exception:6,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
9 = getfield < Application, Lcom/android/internal/compat/ChangeReporter, mSource, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 13,7,
16 = new <Application,Lcom/android/internal/compat/ChangeReporter$ChangeReport>@25,
return,
return,
return,","depth : 0
public void reportChangeByUid(long p1, int p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, p2, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
depth : 2
public void reportChange(int p1, long p2, int p3){
	boolean v1 = p0.shouldWriteToStatsLog(p1, p2, p3);
	FrameworkStatsLog.write(228, p1, p2, p3, this.mSource);
	boolean v3 = p0.shouldWriteToDebug(p1, p2, p3);
	ChangeReporter$ChangeReport v3 = new ChangeReporter$ChangeReport(p2,p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByUid(JI)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:4,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,3,5 @4 exception:6,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
9 = getfield < Application, Lcom/android/internal/compat/ChangeReporter, mSource, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 13,7,
16 = new <Application,Lcom/android/internal/compat/ChangeReporter$ChangeReport>@25,
return,
return,
return,","depth : 0
public void reportChangeByUid(long p1, int p2){
	p0.checkCompatChangeLogPermission();
	p0.reportChangeInternal(p1, p2, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
depth : 2
public void reportChange(int p1, long p2, int p3){
	boolean v1 = p0.shouldWriteToStatsLog(p1, p2, p3);
	FrameworkStatsLog.write(228, p1, p2, p3, this.mSource);
	boolean v3 = p0.shouldWriteToDebug(p1, p2, p3);
	ChangeReporter$ChangeReport v4 = new ChangeReporter$ChangeReport(p2,p3);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","clearOverridesForTest(Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
return,","depth : 0
public void clearOverridesForTest(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverridesForTest(Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
monitorexit 1,
return,
return,","depth : 0
public void clearOverridesForTest(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverridesForTest(Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
monitorexit 1,
return,
return,","depth : 0
public void clearOverridesForTest(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverridesForTest(Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mContext, <Application,Landroid/content/Context> > 1,
10 = getfield < Application, Landroid/content/pm/ApplicationInfo, longVersionCode, <Primordial,J> > 8,
return 12,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
return,
monitorexit 1,
return,
return,","depth : 0
public void clearOverridesForTest(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public Long getVersionCodeOrNull(String p1){
	PackageManager v1 = this.mContext.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 4194304);
	Long v3 = Long.valueOf(ApplicationInfo.longVersionCode);
	return v3;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverridesForTest(Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mContext, <Application,Landroid/content/Context> > 1,
10 = getfield < Application, Landroid/content/pm/ApplicationInfo, longVersionCode, <Primordial,J> > 8,
return 12,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
return,
monitorexit 1,
return,
return,","depth : 0
public void clearOverridesForTest(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public Long getVersionCodeOrNull(String p1){
	PackageManager v1 = this.mContext.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 4194304);
	Long v3 = Long.valueOf(ApplicationInfo.longVersionCode);
	return v3;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverridesForTest(Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mContext, <Application,Landroid/content/Context> > 1,
10 = getfield < Application, Landroid/content/pm/ApplicationInfo, longVersionCode, <Primordial,J> > 8,
return 12,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
return,
monitorexit 1,
return,
return,","depth : 0
public void clearOverridesForTest(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public Long getVersionCodeOrNull(String p1){
	PackageManager v1 = this.mContext.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 4194304);
	Long v3 = Long.valueOf(ApplicationInfo.longVersionCode);
	return v3;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","removeAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
19 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V > 19,2 @33 exception:20,
return,","depth : 0
public void removeAllOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.removeAllPackageOverrides(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
19 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V > 19,2 @33 exception:20,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
21 = phi  20,3,
conditional branch(eq, to iindex=-1) 10,3,
conditional branch(eq, to iindex=-1) 21,3,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @40 exception:24,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @43 exception:25,
monitorexit 1,
return,
return,","depth : 0
public void removeAllOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.removeAllPackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void removeAllPackageOverrides(CompatibilityOverridesToRemoveByPackageConfig p1){
	Set v1 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
19 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V > 19,2 @33 exception:20,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
21 = phi  20,3,
conditional branch(eq, to iindex=-1) 10,3,
conditional branch(eq, to iindex=-1) 21,3,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @40 exception:24,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @43 exception:25,
monitorexit 1,
return,
return,","depth : 0
public void removeAllOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.removeAllPackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void removeAllPackageOverrides(CompatibilityOverridesToRemoveByPackageConfig p1){
	Set v1 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
19 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V > 19,2 @33 exception:20,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
21 = phi  20,3,
conditional branch(eq, to iindex=-1) 10,3,
conditional branch(eq, to iindex=-1) 21,3,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @40 exception:24,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @43 exception:25,
return,
monitorexit 1,
return,
return,","depth : 0
public void removeAllOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.removeAllPackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void removeAllPackageOverrides(CompatibilityOverridesToRemoveByPackageConfig p1){
	Set v1 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
19 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V > 19,2 @33 exception:20,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
21 = phi  20,3,
conditional branch(eq, to iindex=-1) 10,3,
conditional branch(eq, to iindex=-1) 21,3,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @40 exception:24,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @43 exception:25,
return,
monitorexit 1,
return,
return,","depth : 0
public void removeAllOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.removeAllPackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void removeAllPackageOverrides(CompatibilityOverridesToRemoveByPackageConfig p1){
	Set v1 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","removeAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
19 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig;)V > 19,2 @33 exception:20,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesToRemoveByPackageConfig, packageNameToOverridesToRemove, <Application,Ljava/util/Map> > 2,
21 = phi  20,3,
conditional branch(eq, to iindex=-1) 10,3,
conditional branch(eq, to iindex=-1) 21,3,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @40 exception:24,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @43 exception:25,
return,
monitorexit 1,
return,
return,","depth : 0
public void removeAllOverridesOnReleaseBuilds(CompatibilityOverridesToRemoveByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.removeAllPackageOverrides(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void removeAllPackageOverrides(CompatibilityOverridesToRemoveByPackageConfig p1){
	Set v1 = CompatibilityOverridesToRemoveByPackageConfig.packageNameToOverridesToRemove.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","clearOverrideForTest(JLjava/lang/String;)Z","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
return 7,","depth : 0
public boolean clearOverrideForTest(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrideForTest(JLjava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
monitorexit 1,
return 5,
return 7,","depth : 0
public boolean clearOverrideForTest(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrideForTest(JLjava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
monitorexit 1,
return 5,
return 7,","depth : 0
public boolean clearOverrideForTest(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrideForTest(JLjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
11 = checkcast <Application,Lcom/android/server/compat/CompatChange>10 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(eq, to iindex=-1) 11,12,
return 14,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
return,
monitorexit 1,
return 5,
return 7,","depth : 0
public boolean clearOverrideForTest(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
depth : 2
public boolean removeOverrideUnsafe(long p1, String p2){
	Long v1 = p0.getVersionCodeOrNull(p2);
	Long v2 = Long.valueOf(p1);
	Object v3 = this.mChanges.get(v2);
	boolean v4 = p0.removeOverrideUnsafe(v3, p2, v1);
	return v4;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrideForTest(JLjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
11 = checkcast <Application,Lcom/android/server/compat/CompatChange>10 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(eq, to iindex=-1) 11,12,
return 12,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
return,
monitorexit 1,
return 5,
return 7,","depth : 0
public boolean clearOverrideForTest(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
depth : 2
public boolean removeOverrideUnsafe(long p1, String p2){
	Long v1 = p0.getVersionCodeOrNull(p2);
	Long v2 = Long.valueOf(p1);
	Object v3 = this.mChanges.get(v2);
	return 0;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrideForTest(JLjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
11 = checkcast <Application,Lcom/android/server/compat/CompatChange>10 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(eq, to iindex=-1) 11,12,
return 14,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
return,
monitorexit 1,
return 5,
return 7,","depth : 0
public boolean clearOverrideForTest(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
depth : 2
public boolean removeOverrideUnsafe(long p1, String p2){
	Long v1 = p0.getVersionCodeOrNull(p2);
	Long v2 = Long.valueOf(p1);
	Object v3 = this.mChanges.get(v2);
	boolean v4 = p0.removeOverrideUnsafe(v3, p2, v1);
	return v4;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","putAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
21 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;Z)V > 21,2,22 @38 exception:23,
return,","depth : 0
public void putAllOverridesOnReleaseBuilds(CompatibilityOverridesByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.addAllPackageOverrides(p1, 1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
21 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;Z)V > 21,2,22 @38 exception:23,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:22,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:23,
monitorexit 1,
return,
return,","depth : 0
public void putAllOverridesOnReleaseBuilds(CompatibilityOverridesByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.addAllPackageOverrides(p1, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void addAllPackageOverrides(CompatibilityOverridesByPackageConfig p1, boolean p2){
	Set v1 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
21 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;Z)V > 21,2,22 @38 exception:23,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:22,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:23,
monitorexit 1,
return,
return,","depth : 0
public void putAllOverridesOnReleaseBuilds(CompatibilityOverridesByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.addAllPackageOverrides(p1, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void addAllPackageOverrides(CompatibilityOverridesByPackageConfig p1, boolean p2){
	Set v1 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
21 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;Z)V > 21,2,22 @38 exception:23,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:22,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:23,
return,
monitorexit 1,
return,
return,","depth : 0
public void putAllOverridesOnReleaseBuilds(CompatibilityOverridesByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.addAllPackageOverrides(p1, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void addAllPackageOverrides(CompatibilityOverridesByPackageConfig p1, boolean p2){
	Set v1 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
21 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;Z)V > 21,2,22 @38 exception:23,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:22,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:23,
return,
monitorexit 1,
return,
return,","depth : 0
public void putAllOverridesOnReleaseBuilds(CompatibilityOverridesByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.addAllPackageOverrides(p1, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void addAllPackageOverrides(CompatibilityOverridesByPackageConfig p1, boolean p2){
	Set v1 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","putAllOverridesOnReleaseBuilds(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverrideOverridablePermission()V > 1 @0 exception:3,
return,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
21 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addAllPackageOverrides(Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig;Z)V > 21,2,22 @38 exception:23,
monitorenter 1,
4 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverridesByPackageConfig, packageNameToOverrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 10,11,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @35 exception:22,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @38 exception:23,
return,
monitorexit 1,
return,
return,","depth : 0
public void putAllOverridesOnReleaseBuilds(CompatibilityOverridesByPackageConfig p1){
	p0.checkCompatChangeOverrideOverridablePermission();
	Collection v2 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	this.mCompatConfig.addAllPackageOverrides(p1, 1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverrideOverridablePermission(){
	return;
}
-----
depth : 1
public void addAllPackageOverrides(CompatibilityOverridesByPackageConfig p1, boolean p2){
	Set v1 = CompatibilityOverridesByPackageConfig.packageNameToOverrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","clearOverrides(Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @8 exception:6,
return,","depth : 0
public void clearOverrides(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	p0.killPackage(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrides(Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @8 exception:6,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return,","depth : 0
public void clearOverrides(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	p0.killPackage(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrides(Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @8 exception:6,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return,","depth : 0
public void clearOverrides(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	p0.killPackage(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrides(Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mContext, <Application,Landroid/content/Context> > 1,
10 = getfield < Application, Landroid/content/pm/ApplicationInfo, longVersionCode, <Primordial,J> > 8,
return 12,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
return,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @8 exception:6,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return,","depth : 0
public void clearOverrides(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	p0.killPackage(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public Long getVersionCodeOrNull(String p1){
	PackageManager v1 = this.mContext.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 4194304);
	Long v3 = Long.valueOf(ApplicationInfo.longVersionCode);
	return v3;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrides(Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mContext, <Application,Landroid/content/Context> > 1,
10 = getfield < Application, Landroid/content/pm/ApplicationInfo, longVersionCode, <Primordial,J> > 8,
return 12,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
return,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @8 exception:6,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return,","depth : 0
public void clearOverrides(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	p0.killPackage(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public Long getVersionCodeOrNull(String p1){
	PackageManager v1 = this.mContext.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 4194304);
	Long v3 = Long.valueOf(ApplicationInfo.longVersionCode);
	return v3;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverrides(Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:3,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removePackageOverrides(Ljava/lang/String;)V > 4,2 @5 exception:5,
monitorenter 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getVersionCodeOrNull(Ljava/lang/String;)Ljava/lang/Long; > 1,2 @1 exception:3,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mContext, <Application,Landroid/content/Context> > 1,
10 = getfield < Application, Landroid/content/pm/ApplicationInfo, longVersionCode, <Primordial,J> > 8,
return 12,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
19 = phi  18,5,
conditional branch(eq, to iindex=-1) 12,5,
conditional branch(eq, to iindex=-1) 19,5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @36 exception:22,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @39 exception:23,
return,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,2 @8 exception:6,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return,","depth : 0
public void clearOverrides(String p1){
	p0.checkCompatChangeOverridePermission();
	this.mCompatConfig.removePackageOverrides(p1);
	p0.killPackage(p1);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public void removePackageOverrides(String p1){
	Long v1 = p0.getVersionCodeOrNull(p1);
	Collection v2 = this.mChanges.values();
	Iterator v3 = v2.iterator();
	boolean v4 = v3.hasNext();
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public Long getVersionCodeOrNull(String p1){
	PackageManager v1 = this.mContext.getPackageManager();
	ApplicationInfo v2 = v1.getApplicationInfo(p1, 4194304);
	Long v3 = Long.valueOf(ApplicationInfo.longVersionCode);
	return v3;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","getOverrideValidator()Lcom/android/internal/compat/IOverrideValidator;","0","2 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getOverrideValidator()Lcom/android/internal/compat/IOverrideValidator; > 2 @2 exception:3,
return 4,","depth : 0
public IOverrideValidator getOverrideValidator(){
	IOverrideValidator v1 = this.mCompatConfig.getOverrideValidator();
	return v1;
}
-----
","NONE"
"Lcom/android/server/compat/PlatformCompat","getOverrideValidator()Lcom/android/internal/compat/IOverrideValidator;","1","2 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
4 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getOverrideValidator()Lcom/android/internal/compat/IOverrideValidator; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverrideValidator, <Application,Lcom/android/server/compat/OverrideValidatorImpl> > 1,
return 2,
return 4,","depth : 0
public IOverrideValidator getOverrideValidator(){
	IOverrideValidator v1 = this.mCompatConfig.getOverrideValidator();
	return v1;
}
-----
depth : 1
public IOverrideValidator getOverrideValidator(){
	return this.mOverrideValidator;
}
-----
","NONE"

"Lcom/android/server/compat/PlatformCompat","clearOverride(JLjava/lang/String;)Z","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @9 exception:8,
return 7,","depth : 0
public boolean clearOverride(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	p0.killPackage(p2);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverride(JLjava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
monitorexit 1,
return 5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return 7,","depth : 0
public boolean clearOverride(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	p0.killPackage(p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverride(JLjava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
monitorexit 1,
return 5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return 7,","depth : 0
public boolean clearOverride(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	p0.killPackage(p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverride(JLjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
11 = checkcast <Application,Lcom/android/server/compat/CompatChange>10 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(eq, to iindex=-1) 11,12,
return 14,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
return,
monitorexit 1,
return 5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return 7,","depth : 0
public boolean clearOverride(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	p0.killPackage(p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
depth : 2
public boolean removeOverrideUnsafe(long p1, String p2){
	Long v1 = p0.getVersionCodeOrNull(p2);
	Long v2 = Long.valueOf(p1);
	Object v3 = this.mChanges.get(v2);
	boolean v4 = p0.removeOverrideUnsafe(v3, p2, v1);
	return v4;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverride(JLjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
11 = checkcast <Application,Lcom/android/server/compat/CompatChange>10 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(eq, to iindex=-1) 11,12,
return 12,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
return,
monitorexit 1,
return 5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return 7,","depth : 0
public boolean clearOverride(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	p0.killPackage(p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
depth : 2
public boolean removeOverrideUnsafe(long p1, String p2){
	Long v1 = p0.getVersionCodeOrNull(p2);
	Long v2 = Long.valueOf(p1);
	Object v3 = this.mChanges.get(v2);
	return 0;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","clearOverride(JLjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
7 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverride(JLjava/lang/String;)Z > 5,2,3 @5 exception:6,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, removeOverrideUnsafe(JLjava/lang/String;)Z > 1,2,3 @1 exception:4,
6 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
11 = checkcast <Application,Lcom/android/server/compat/CompatChange>10 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(eq, to iindex=-1) 11,12,
return 14,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @7 exception:7,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @10 exception:8,
return,
monitorexit 1,
return 5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @9 exception:8,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return 7,","depth : 0
public boolean clearOverride(long p1, String p2){
	p0.checkCompatChangeOverridePermission();
	boolean v2 = this.mCompatConfig.removeOverride(p1, p2);
	p0.killPackage(p2);
	return v2;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public boolean removeOverride(long p1, String p2){
	boolean v1 = p0.removeOverrideUnsafe(p1, p2);
	p0.saveOverrides();
	p0.invalidateCache();
	return v1;
}
-----
depth : 2
public boolean removeOverrideUnsafe(long p1, String p2){
	Long v1 = p0.getVersionCodeOrNull(p2);
	Long v2 = Long.valueOf(p1);
	Object v3 = this.mChanges.get(v2);
	boolean v4 = p0.removeOverrideUnsafe(v3, p2, v1);
	return v4;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByUid(JI)Z","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 9,10,
11 = arraylength 9,
conditional branch(ne, to iindex=-1) 11,10,
12 = arraylength 9,
22 = phi  21,10,
23 = phi  19,13,
conditional branch(ge, to iindex=-1) 22,12,
return 23,","depth : 0
public boolean isChangeEnabledByUid(long p1, int p2){
	p0.checkCompatChangeReadAndLogPermission();
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByUid(JI)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 9,10,
11 = arraylength 9,
conditional branch(ne, to iindex=-1) 11,10,
goto (from iindex= 9 to iindex = 21),
26 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
28 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, defaultChangeIdValue(J)Z > 26,2 @41 exception:27,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
8 = checkcast <Application,Lcom/android/server/compat/CompatChange>7 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/compat/CompatChange, defaultValue()Z > 8 @16 exception:10,
return 11,
return 28,","depth : 0
public boolean isChangeEnabledByUid(long p1, int p2){
	p0.checkCompatChangeReadAndLogPermission();
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	boolean v4 = this.mCompatConfig.defaultChangeIdValue(p1);
	return v4;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 1
public boolean defaultChangeIdValue(long p1){
	Long v1 = Long.valueOf(p1);
	Object v2 = this.mChanges.get(v1);
	boolean v3 = v2.defaultValue();
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByUid(JI)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 9,10,
11 = arraylength 9,
conditional branch(ne, to iindex=-1) 11,10,
goto (from iindex= 9 to iindex = 21),
26 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
28 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, defaultChangeIdValue(J)Z > 26,2 @41 exception:27,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
8 = checkcast <Application,Lcom/android/server/compat/CompatChange>7 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(ne, to iindex=-1) 8,9,
return 12,
return 28,","depth : 0
public boolean isChangeEnabledByUid(long p1, int p2){
	p0.checkCompatChangeReadAndLogPermission();
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	boolean v4 = this.mCompatConfig.defaultChangeIdValue(p1);
	return v4;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 1
public boolean defaultChangeIdValue(long p1){
	Long v1 = Long.valueOf(p1);
	Object v2 = this.mChanges.get(v1);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByUid(JI)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 9,10,
11 = arraylength 9,
conditional branch(ne, to iindex=-1) 11,10,
goto (from iindex= 9 to iindex = 21),
26 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
28 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, defaultChangeIdValue(J)Z > 26,2 @41 exception:27,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
8 = checkcast <Application,Lcom/android/server/compat/CompatChange>7 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/compat/CompatChange, defaultValue()Z > 8 @16 exception:10,
5 = binaryop(xor) 3 , 4,
return 5,
return 11,
return 28,","depth : 0
public boolean isChangeEnabledByUid(long p1, int p2){
	p0.checkCompatChangeReadAndLogPermission();
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	boolean v4 = this.mCompatConfig.defaultChangeIdValue(p1);
	return v4;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public boolean defaultChangeIdValue(long p1){
	Long v1 = Long.valueOf(p1);
	Object v2 = this.mChanges.get(v1);
	boolean v3 = v2.defaultValue();
	return v3;
}
-----
depth : 2
public boolean defaultValue(){
	boolean v1 = p0.getDisabled();
	return (v1 ^ 1);
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByUid(JI)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 9,10,
11 = arraylength 9,
conditional branch(ne, to iindex=-1) 11,10,
goto (from iindex= 9 to iindex = 21),
26 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
28 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, defaultChangeIdValue(J)Z > 26,2 @41 exception:27,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
8 = checkcast <Application,Lcom/android/server/compat/CompatChange>7 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/compat/CompatChange, defaultValue()Z > 8 @16 exception:10,
5 = binaryop(xor) 3 , 4,
return 5,
return 11,
return 28,","depth : 0
public boolean isChangeEnabledByUid(long p1, int p2){
	p0.checkCompatChangeReadAndLogPermission();
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	boolean v4 = this.mCompatConfig.defaultChangeIdValue(p1);
	return v4;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public boolean defaultChangeIdValue(long p1){
	Long v1 = Long.valueOf(p1);
	Object v2 = this.mChanges.get(v1);
	boolean v3 = v2.defaultValue();
	return v3;
}
-----
depth : 2
public boolean defaultValue(){
	boolean v1 = p0.getDisabled();
	return (v1 ^ 1);
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByUid(JI)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:4,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
return,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(eq, to iindex=-1) 9,10,
11 = arraylength 9,
conditional branch(ne, to iindex=-1) 11,10,
goto (from iindex= 9 to iindex = 21),
26 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
28 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, defaultChangeIdValue(J)Z > 26,2 @41 exception:27,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
8 = checkcast <Application,Lcom/android/server/compat/CompatChange>7 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/compat/CompatChange, defaultValue()Z > 8 @16 exception:10,
5 = binaryop(xor) 3 , 4,
return 5,
return 11,
return 28,","depth : 0
public boolean isChangeEnabledByUid(long p1, int p2){
	p0.checkCompatChangeReadAndLogPermission();
	PackageManager v2 = this.mContext.getPackageManager();
	String v3 = v2.getPackagesForUid(p2);
	boolean v4 = this.mCompatConfig.defaultChangeIdValue(p1);
	return v4;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public boolean defaultChangeIdValue(long p1){
	Long v1 = Long.valueOf(p1);
	Object v2 = this.mChanges.get(v1);
	boolean v3 = v2.defaultValue();
	return v3;
}
-----
depth : 2
public boolean defaultValue(){
	boolean v1 = p0.getDisabled();
	return (v1 ^ 1);
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","reportChangeByPackageName(JLjava/lang/String;I)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:5,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 7,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,9,10 @12 exception:11,
return,","depth : 0
public void reportChangeByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByPackageName(JLjava/lang/String;I)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:5,
conditional branch(ne, to iindex=-1) 8,9,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 7,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,9,10 @12 exception:11,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
return,
return,","depth : 0
public void reportChangeByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByPackageName(JLjava/lang/String;I)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:5,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 7,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,9,10 @12 exception:11,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
return,
return,","depth : 0
public void reportChangeByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByPackageName(JLjava/lang/String;I)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:5,
conditional branch(ne, to iindex=-1) 8,9,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 7,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,9,10 @12 exception:11,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
9 = getfield < Application, Lcom/android/internal/compat/ChangeReporter, mSource, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 13,7,
16 = new <Application,Lcom/android/internal/compat/ChangeReporter$ChangeReport>@25,
return,
return,
return,","depth : 0
public void reportChangeByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
depth : 2
public void reportChange(int p1, long p2, int p3){
	boolean v1 = p0.shouldWriteToStatsLog(p1, p2, p3);
	FrameworkStatsLog.write(228, p1, p2, p3, this.mSource);
	boolean v3 = p0.shouldWriteToDebug(p1, p2, p3);
	ChangeReporter$ChangeReport v4 = new ChangeReporter$ChangeReport(p2,p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByPackageName(JLjava/lang/String;I)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:5,
conditional branch(ne, to iindex=-1) 8,9,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 7,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,9,10 @12 exception:11,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
9 = getfield < Application, Lcom/android/internal/compat/ChangeReporter, mSource, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 13,7,
16 = new <Application,Lcom/android/internal/compat/ChangeReporter$ChangeReport>@25,
return,
return,
return,","depth : 0
public void reportChangeByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
depth : 2
public void reportChange(int p1, long p2, int p3){
	boolean v1 = p0.shouldWriteToStatsLog(p1, p2, p3);
	FrameworkStatsLog.write(228, p1, p2, p3, this.mSource);
	boolean v3 = p0.shouldWriteToDebug(p1, p2, p3);
	ChangeReporter$ChangeReport v3 = new ChangeReporter$ChangeReport(p2,p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","reportChangeByPackageName(JLjava/lang/String;I)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @0 exception:5,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 7,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,9,10 @12 exception:11,
5 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mChangeReporter, <Application,Lcom/android/internal/compat/ChangeReporter> > 1,
invokevirtual < Application, Lcom/android/internal/compat/ChangeReporter, reportChange(IJI)V > 5,3,2,4 @2 exception:6,
conditional branch(eq, to iindex=-1) 6,7,
9 = getfield < Application, Lcom/android/internal/compat/ChangeReporter, mSource, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 13,7,
16 = new <Application,Lcom/android/internal/compat/ChangeReporter$ChangeReport>@25,
return,
return,
return,","depth : 0
public void reportChangeByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, 3);
	return;
}
-----
depth : 1
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public void reportChangeInternal(long p1, int p2, int p3){
	this.mChangeReporter.reportChange(p2, p1, p3);
	return;
}
-----
depth : 2
public void reportChange(int p1, long p2, int p3){
	boolean v1 = p0.shouldWriteToStatsLog(p1, p2, p3);
	FrameworkStatsLog.write(228, p1, p2, p3, this.mSource);
	boolean v3 = p0.shouldWriteToDebug(p1, p2, p3);
	ChangeReporter$ChangeReport v4 = new ChangeReporter$ChangeReport(p2,p3);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig;","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
6 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig; > 4,2 @5 exception:5,
return 6,","depth : 0
public CompatibilityChangeConfig getAppConfig(ApplicationInfo p1){
	p0.checkCompatChangeReadAndLogPermission();
	CompatibilityChangeConfig v2 = this.mCompatConfig.getAppConfig(p1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig;","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
6 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig; > 4,2 @5 exception:5,
3 = new <Application,Ljava/util/HashSet>@0,
5 = new <Application,Ljava/util/HashSet>@5,
7 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 13,14,
37 = new <Application,Lcom/android/internal/compat/CompatibilityChangeConfig>@64,
38 = new <Application,Landroid/compat/Compatibility$ChangeConfig>@66,
return 37,
return 6,","depth : 0
public CompatibilityChangeConfig getAppConfig(ApplicationInfo p1){
	p0.checkCompatChangeReadAndLogPermission();
	CompatibilityChangeConfig v2 = this.mCompatConfig.getAppConfig(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 1
public CompatibilityChangeConfig getAppConfig(ApplicationInfo p1){
	HashSet v0 = new HashSet();
	HashSet v1 = new HashSet();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	CompatibilityChangeConfig v5 = new CompatibilityChangeConfig(v5);
	Compatibility$ChangeConfig v5 = new Compatibility$ChangeConfig(v0,v1);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig;","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
6 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig; > 4,2 @5 exception:5,
return 6,","depth : 0
public CompatibilityChangeConfig getAppConfig(ApplicationInfo p1){
	p0.checkCompatChangeReadAndLogPermission();
	CompatibilityChangeConfig v2 = this.mCompatConfig.getAppConfig(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig;","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
6 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig; > 4,2 @5 exception:5,
return 6,","depth : 0
public CompatibilityChangeConfig getAppConfig(ApplicationInfo p1){
	p0.checkCompatChangeReadAndLogPermission();
	CompatibilityChangeConfig v2 = this.mCompatConfig.getAppConfig(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig;","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:3,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
return,
4 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
6 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, getAppConfig(Landroid/content/pm/ApplicationInfo;)Lcom/android/internal/compat/CompatibilityChangeConfig; > 4,2 @5 exception:5,
return 6,","depth : 0
public CompatibilityChangeConfig getAppConfig(ApplicationInfo p1){
	p0.checkCompatChangeReadAndLogPermission();
	CompatibilityChangeConfig v2 = this.mCompatConfig.getAppConfig(p1);
	return v2;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","setOverrides(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @110 exception:63,
return,","depth : 0
public void setOverrides(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	p0.killPackage(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverrides(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @110 exception:63,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return,","depth : 0
public void setOverrides(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	p0.killPackage(p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverrides(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @110 exception:63,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
return,
return,","depth : 0
public void setOverrides(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	p0.killPackage(p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverrides(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 11,12,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
return,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @110 exception:63,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return,","depth : 0
public void setOverrides(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	p0.killPackage(p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void addPackageOverridesWithoutSaving(CompatibilityOverrideConfig p1, String p2, boolean p3){
	Set v1 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverrides(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 8,9,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 11,12,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
return,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @110 exception:63,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return,","depth : 0
public void setOverrides(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	p0.killPackage(p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void addPackageOverridesWithoutSaving(CompatibilityOverrideConfig p1, String p2, boolean p3){
	Set v1 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter(this.mOverridesFile);
	String v11 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v12 = Slog.e(""CompatConfig"", v11);
	boolean v13 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","setOverrides(Lcom/android/internal/compat/CompatibilityChangeConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeOverridePermission()V > 1 @0 exception:4,
return,
5 = new <Application,Ljava/util/HashMap>@3,
8 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, enabledChanges()Ljava/util/Set; > 2 @8 exception:7,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 12,13,
33 = invokevirtual < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, disabledChanges()Ljava/util/Set; > 2 @54 exception:32,
2 = getfield < Application, Lcom/android/internal/compat/CompatibilityChangeConfig, mChangeConfig, <Application,Landroid/compat/Compatibility$ChangeConfig> > 1,
return 4,
conditional branch(eq, to iindex=-1) 37,13,
59 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
60 = new <Application,Lcom/android/internal/compat/CompatibilityOverrideConfig>@102,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverrides(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 59,60,3,13 @107 exception:62,
monitorenter 1,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, addPackageOverridesWithoutSaving(Lcom/android/internal/compat/CompatibilityOverrideConfig;Ljava/lang/String;Z)V > 1,2,3,4 @1 exception:5,
5 = getfield < Application, Lcom/android/internal/compat/CompatibilityOverrideConfig, overrides, <Application,Ljava/util/Map> > 2,
conditional branch(eq, to iindex=-1) 11,12,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, saveOverrides()V > 1 @4 exception:6,
2 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFileLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(ne, to iindex=-1) 5,4,
6 = new <Application,Lcom/android/server/compat/overrides/Overrides>@13,
10 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
conditional branch(eq, to iindex=-1) 16,4,
26 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 28,4,
29 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
conditional branch(eq, to iindex=-1) 31,4,
55 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
goto (from iindex= 37 to iindex = 47),
62 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
81 = new <Application,Ljava/io/PrintWriter>@127,
82 = getfield < Application, Lcom/android/server/compat/CompatConfig, mOverridesFile, <Application,Ljava/io/File> > 1,
99 = getCaughtException ,
109 = getfield < Application, Lcom/android/server/compat/CompatConfig, mBackupOverridesFile, <Application,Ljava/io/File> > 1,
monitorexit 2,
return,
invokevirtual < Application, Lcom/android/server/compat/CompatConfig, invalidateCache()V > 1 @7 exception:7,
return,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killPackage(Ljava/lang/String;)V > 1,3 @110 exception:63,
14 = new <Application,Ljava/lang/StringBuilder>@48,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, killUid(I)V > 1,34 @85 exception:35,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 8 to iindex = 6),
return,
return,
return,","depth : 0
public void setOverrides(CompatibilityChangeConfig p1, String p2){
	p0.checkCompatChangeOverridePermission();
	HashMap v1 = new HashMap();
	Set v3 = p1.enabledChanges();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	Set v6 = p1.disabledChanges();
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	CompatibilityOverrideConfig v8 = new CompatibilityOverrideConfig(v1);
	this.mCompatConfig.addPackageOverrides(v8, p2, 0);
	p0.killPackage(p2);
	return;
}
-----
depth : 1
public void checkCompatChangeOverridePermission(){
	return;
}
-----
depth : 1
public Set enabledChanges(){
	Set v1 = this.mChangeConfig.getEnabledSet();
	return v1;
}
-----
depth : 1
public Set disabledChanges(){
	Set v1 = this.mChangeConfig.getDisabledSet();
	return v1;
}
-----
depth : 1
public void addPackageOverrides(CompatibilityOverrideConfig p1, String p2, boolean p3){
	p0.addPackageOverridesWithoutSaving(p1, p2, p3);
	p0.saveOverrides();
	p0.invalidateCache();
	return;
}
-----
depth : 2
public void addPackageOverridesWithoutSaving(CompatibilityOverrideConfig p1, String p2, boolean p3){
	Set v1 = CompatibilityOverrideConfig.overrides.keySet();
	Iterator v2 = v1.iterator();
	boolean v3 = v2.hasNext();
	return;
}
-----
depth : 2
public void saveOverrides(){
	Overrides v0 = new Overrides();
	List v2 = v0.getChangeOverrides();
	Collection v3 = this.mChanges.values();
	Iterator v4 = v3.iterator();
	boolean v5 = v4.hasNext();
	boolean v6 = this.mOverridesFile.exists();
	boolean v7 = this.mBackupOverridesFile.exists();
	boolean v8 = this.mOverridesFile.delete();
	boolean v9 = this.mOverridesFile.createNewFile();
	PrintWriter v9 = new PrintWriter;
	String v10 = [resolveCodeAbst] + 99 = getCaughtException .toString();
	int v11 = Slog.e(""CompatConfig"", v10);
	boolean v12 = this.mBackupOverridesFile.delete();
	return;
}
-----
depth : 2
public void invalidateCache(){
	ChangeIdStateCache.invalidate();
	return;
}
-----
depth : 1
public void killPackage(String p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Killing package "");
	StringBuilder v6 = v3.append(p1);
	StringBuilder v7 = v3.append("" (UID "");
	StringBuilder v8 = v3.append(v3);
	StringBuilder v9 = v3.append("")."");
	String v10 = v3.toString();
	int v11 = Slog.d(""Compatibility"", v10);
	int v12 = UserHandle.getAppId(v3);
	p0.killUid(v12);
	return;
}
-----
depth : 2
public void killUid(int p1){
	long v1 = Binder.clearCallingIdentity();
	IActivityManager v2 = ActivityManager.getService();
	v2.killUid(p1, -1, ""PlatformCompat overrides"");
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByPackageName(JLjava/lang/String;I)Z","0","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:5,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
13 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, willChangeBeEnabled(JLjava/lang/String;)Z > 11,2,3 @11 exception:12,
return 13,","depth : 0
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeReadAndLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	boolean v3 = this.mCompatConfig.willChangeBeEnabled(p1, p2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByPackageName(JLjava/lang/String;I)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternal(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,7 @16 exception:9,
5 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, isChangeEnabledInternalNoLogging(JLandroid/content/pm/ApplicationInfo;)Z > 1,2,3 @0 exception:4,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Landroid/content/pm/ApplicationInfo, uid, <Primordial,I> > 3,
conditional branch(eq, to iindex=-1) 5,6,
goto (from iindex= 6 to iindex = 2),
10 = phi  9,8,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, reportChangeInternal(JII)V > 1,2,7,10 @13 exception:11,
return 5,
return 10,","depth : 0
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeReadAndLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	boolean v3 = p0.isChangeEnabledInternal(p1, v2);
	return v3;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 1
public boolean isChangeEnabledInternal(long p1, ApplicationInfo p2){
	boolean v1 = p0.isChangeEnabledInternalNoLogging(p1, p2);
	p0.reportChangeInternal(p1, ApplicationInfo.uid, phiInstruction);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByPackageName(JLjava/lang/String;I)Z","1","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(ne, to iindex=-1) 7,8,
11 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
13 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, willChangeBeEnabled(JLjava/lang/String;)Z > 11,2,3 @11 exception:12,
4 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
9 = checkcast <Application,Lcom/android/server/compat/CompatChange>8 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/compat/CompatChange, willBeEnabled(Ljava/lang/String;)Z > 9,3 @16 exception:11,
return 12,
return 13,","depth : 0
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeReadAndLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	boolean v3 = this.mCompatConfig.willChangeBeEnabled(p1, p2);
	return v3;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 1
public boolean willChangeBeEnabled(long p1, String p2){
	Long v1 = Long.valueOf(p1);
	Object v2 = this.mChanges.get(v1);
	boolean v3 = v2.willBeEnabled(p2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByPackageName(JLjava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(ne, to iindex=-1) 7,8,
11 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
13 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, willChangeBeEnabled(JLjava/lang/String;)Z > 11,2,3 @11 exception:12,
4 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
9 = checkcast <Application,Lcom/android/server/compat/CompatChange>8 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/compat/CompatChange, willBeEnabled(Ljava/lang/String;)Z > 9,3 @16 exception:11,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/compat/CompatChange, mRawOverrides, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
7 = checkcast <Application,Landroid/app/compat/PackageOverride>6 <Application,Landroid/app/compat/PackageOverride>,
conditional branch(eq, to iindex=-1) 7,3,
conditional branch(eq, to iindex=-1) 9,3,
conditional branch(eq, to iindex=-1) 9,12,
conditional branch(eq, to iindex=-1) 9,13,
goto (from iindex= 16 to iindex = 9),
return 19,
return 12,
return 13,","depth : 0
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeReadAndLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	boolean v3 = this.mCompatConfig.willChangeBeEnabled(p1, p2);
	return v3;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public boolean willChangeBeEnabled(long p1, String p2){
	Long v1 = Long.valueOf(p1);
	Object v2 = this.mChanges.get(v1);
	boolean v3 = v2.willBeEnabled(p2);
	return v3;
}
-----
depth : 2
public boolean willBeEnabled(String p1){
	Object v1 = this.mRawOverrides.get(p1);
	int v2 = v1.evaluateForAllVersions();
	boolean v3 = p0.defaultValue();
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByPackageName(JLjava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 8,9,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
return,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(ne, to iindex=-1) 7,8,
11 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
13 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, willChangeBeEnabled(JLjava/lang/String;)Z > 11,2,3 @11 exception:12,
4 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
9 = checkcast <Application,Lcom/android/server/compat/CompatChange>8 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/compat/CompatChange, willBeEnabled(Ljava/lang/String;)Z > 9,3 @16 exception:11,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/compat/CompatChange, mRawOverrides, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
7 = checkcast <Application,Landroid/app/compat/PackageOverride>6 <Application,Landroid/app/compat/PackageOverride>,
conditional branch(eq, to iindex=-1) 7,3,
conditional branch(eq, to iindex=-1) 9,3,
conditional branch(eq, to iindex=-1) 9,12,
conditional branch(eq, to iindex=-1) 9,13,
goto (from iindex= 16 to iindex = 9),
return 19,
return 12,
return 13,","depth : 0
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeReadAndLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	boolean v3 = this.mCompatConfig.willChangeBeEnabled(p1, p2);
	return v3;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public boolean willChangeBeEnabled(long p1, String p2){
	Long v1 = Long.valueOf(p1);
	Object v2 = this.mChanges.get(v1);
	boolean v3 = v2.willBeEnabled(p2);
	return v3;
}
-----
depth : 2
public boolean willBeEnabled(String p1){
	Object v1 = this.mRawOverrides.get(p1);
	int v2 = v1.evaluateForAllVersions();
	boolean v3 = p0.defaultValue();
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/compat/PlatformCompat","isChangeEnabledByPackageName(JLjava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadAndLogPermission()V > 1 @0 exception:5,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeReadPermission()V > 1 @0 exception:2,
return,
invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, checkCompatChangeLogPermission()V > 1 @3 exception:3,
conditional branch(ne, to iindex=-1) 8,9,
return,
return,
7 = invokevirtual < Application, Lcom/android/server/compat/PlatformCompat, getApplicationInfo(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo; > 1,3,4 @3 exception:6,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @2 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
9 = invokestatic < Application, Landroid/os/Process, myUid()I > @9 exception:8,
return 12,
conditional branch(ne, to iindex=-1) 7,8,
11 = getfield < Application, Lcom/android/server/compat/PlatformCompat, mCompatConfig, <Application,Lcom/android/server/compat/CompatConfig> > 1,
13 = invokevirtual < Application, Lcom/android/server/compat/CompatConfig, willChangeBeEnabled(JLjava/lang/String;)Z > 11,2,3 @11 exception:12,
4 = getfield < Application, Lcom/android/server/compat/CompatConfig, mChanges, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
9 = checkcast <Application,Lcom/android/server/compat/CompatChange>8 <Application,Lcom/android/server/compat/CompatChange>,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokevirtual < Application, Lcom/android/server/compat/CompatChange, willBeEnabled(Ljava/lang/String;)Z > 9,3 @16 exception:11,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/compat/CompatChange, mRawOverrides, <Application,Ljava/util/concurrent/ConcurrentHashMap> > 1,
7 = checkcast <Application,Landroid/app/compat/PackageOverride>6 <Application,Landroid/app/compat/PackageOverride>,
conditional branch(eq, to iindex=-1) 7,3,
conditional branch(eq, to iindex=-1) 9,3,
conditional branch(eq, to iindex=-1) 9,12,
conditional branch(eq, to iindex=-1) 9,13,
goto (from iindex= 16 to iindex = 9),
return 19,
return 12,
return 13,","depth : 0
public boolean isChangeEnabledByPackageName(long p1, String p2, int p3){
	p0.checkCompatChangeReadAndLogPermission();
	ApplicationInfo v2 = p0.getApplicationInfo(p2, p3);
	boolean v3 = this.mCompatConfig.willChangeBeEnabled(p1, p2);
	return v3;
}
-----
depth : 1
public void checkCompatChangeReadAndLogPermission(){
	p0.checkCompatChangeReadPermission();
	p0.checkCompatChangeLogPermission();
	return;
}
-----
depth : 2
public void checkCompatChangeReadPermission(){
	return;
}
-----
depth : 2
public void checkCompatChangeLogPermission(){
	return;
}
-----
depth : 1
public ApplicationInfo getApplicationInfo(String p1, int p2){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	int v2 = Process.myUid();
	ApplicationInfo v3 = v1.getApplicationInfo(p1, 0, v2, p2);
	return v3;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public boolean willChangeBeEnabled(long p1, String p2){
	Long v1 = Long.valueOf(p1);
	Object v2 = this.mChanges.get(v1);
	boolean v3 = v2.willBeEnabled(p2);
	return v3;
}
-----
depth : 2
public boolean willBeEnabled(String p1){
	Object v1 = this.mRawOverrides.get(p1);
	int v2 = v1.evaluateForAllVersions();
	boolean v3 = p0.defaultValue();
	return v3;
}
-----
","SYS_OR_SIG"

