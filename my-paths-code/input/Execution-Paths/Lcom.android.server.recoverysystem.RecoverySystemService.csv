"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/recoverysystem/RecoverySystemService","clearBcb()Z","0","2 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 2,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,3,3 @5 exception:4,
monitorexit 2,
return 5,","depth : 0
public boolean clearBcb(){
	boolean v1 = p0.setupOrClearBcb(0, 0);
	return v1;
}
-----
","public boolean clearBcb(){
	boolean v1 = p0.setupOrClearBcb(0, 0);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","clearBcb()Z","1","2 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 2,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,3,3 @5 exception:4,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
return 6,
monitorexit 2,
return 5,","depth : 0
public boolean clearBcb(){
	boolean v1 = p0.setupOrClearBcb(0, 0);
	return v1;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
","public boolean clearBcb(){
	boolean v3 = RecoverySystemService.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v5 = this.mInjector.connectService();
	v5.sendCommand(0);
	int v7 = v5.getPercentageUncrypted();
	v5.sendAck();
	StringBuilder v9 = new StringBuilder;
	v5.close();
	boolean v1 = 0;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","clearBcb()Z","2","2 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 2,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,3,3 @5 exception:4,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 27 to iindex = 3),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
invokestatic < Application, Landroid/os/SystemProperties, set(Ljava/lang/String;Ljava/lang/String;)V > 2,3 @0 exception:4,
return,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
2 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket>@0,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, connectService()Z > 2 @5 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 2 @11 exception:7,
8 = phi  2,6,
return 8,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
3 = getstatic < Application, Ljava/nio/charset/StandardCharsets, UTF_8, <Application,Ljava/nio/charset/Charset> >,
5 = invokevirtual < Application, Ljava/lang/String, getBytes(Ljava/nio/charset/Charset;)[B > 2,3 @2 exception:4,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
7 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 6,7 @9 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
10 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, write([BII)V > 9,5,11,10 @16 exception:12,
return,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
4 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 2,3 @3 exception:4,
return,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 4 @7 exception:5,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mLocalSocket, <Application,Landroid/net/LocalSocket> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 6 @12 exception:7,
return,
return 6,
monitorexit 2,
return 5,","depth : 0
public boolean clearBcb(){
	boolean v1 = p0.setupOrClearBcb(0, 0);
	return v1;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
depth : 2
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public void systemPropertiesSet(String p1, String p2){
	SystemProperties.set(p1, p2);
	return;
}
-----
depth : 2
public RecoverySystemService$UncryptSocket connectService(){
	RecoverySystemService$UncryptSocket v0 = new RecoverySystemService$UncryptSocket();
	boolean v2 = v0.connectService();
	v0.close();
	return phiInstruction;
}
-----
depth : 2
public void sendCommand(String p1){
	byte[] v1 = p1.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v1.length);
	this.mOutputStream.write(v1, 0, v1.length);
	return;
}
-----
depth : 2
public int getPercentageUncrypted(){
	int v1 = this.mInputStream.readInt();
	return v1;
}
-----
depth : 2
public void sendAck(){
	this.mOutputStream.writeInt(0);
	return;
}
-----
depth : 2
public void close(){
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	return;
}
-----
","public boolean clearBcb(){
	String v4 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v5 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v6 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v7 = ""running"".equals(v4);
	boolean v8 = ""running"".equals(v5);
	boolean v9 = ""running"".equals(v6);
	boolean v3 = 1;
	SystemProperties.set(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v13 = new RecoverySystemService$UncryptSocket();
	boolean v15 = v13.connectService();
	v13.close();
	RecoverySystemService$UncryptSocket v12 = phiInstruction;
	byte[] v18 = p2.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v18.length);
	this.mOutputStream.write(v18, 0, v18.length);
	int v22 = this.mInputStream.readInt();
	int v21 = v22;
	this.mOutputStream.writeInt(0);
	StringBuilder v25 = new StringBuilder;
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	boolean v1 = 0;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","clearBcb()Z","2","2 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 2,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,3,3 @5 exception:4,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 29 to iindex = 2),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
invokestatic < Application, Landroid/os/SystemProperties, set(Ljava/lang/String;Ljava/lang/String;)V > 2,3 @0 exception:4,
return,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
2 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket>@0,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, connectService()Z > 2 @5 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 2 @11 exception:7,
8 = phi  2,6,
return 8,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
3 = getstatic < Application, Ljava/nio/charset/StandardCharsets, UTF_8, <Application,Ljava/nio/charset/Charset> >,
5 = invokevirtual < Application, Ljava/lang/String, getBytes(Ljava/nio/charset/Charset;)[B > 2,3 @2 exception:4,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
7 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 6,7 @9 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
10 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, write([BII)V > 9,5,11,10 @16 exception:12,
return,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
4 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 2,3 @3 exception:4,
return,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 4 @7 exception:5,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mLocalSocket, <Application,Landroid/net/LocalSocket> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 6 @12 exception:7,
return,
return 6,
monitorexit 2,
return 5,","depth : 0
public boolean clearBcb(){
	boolean v1 = p0.setupOrClearBcb(0, 0);
	return v1;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
depth : 2
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public void systemPropertiesSet(String p1, String p2){
	SystemProperties.set(p1, p2);
	return;
}
-----
depth : 2
public RecoverySystemService$UncryptSocket connectService(){
	RecoverySystemService$UncryptSocket v0 = new RecoverySystemService$UncryptSocket();
	boolean v2 = v0.connectService();
	v0.close();
	return phiInstruction;
}
-----
depth : 2
public void sendCommand(String p1){
	byte[] v1 = p1.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v1.length);
	this.mOutputStream.write(v1, 0, v1.length);
	return;
}
-----
depth : 2
public int getPercentageUncrypted(){
	int v1 = this.mInputStream.readInt();
	return v1;
}
-----
depth : 2
public void sendAck(){
	this.mOutputStream.writeInt(0);
	return;
}
-----
depth : 2
public void close(){
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	return;
}
-----
","public boolean clearBcb(){
	String v4 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v5 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v6 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v7 = ""running"".equals(v4);
	boolean v8 = ""running"".equals(v5);
	boolean v9 = ""running"".equals(v6);
	boolean v3 = 1;
	SystemProperties.set(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v13 = new RecoverySystemService$UncryptSocket();
	boolean v15 = v13.connectService();
	v13.close();
	RecoverySystemService$UncryptSocket v12 = phiInstruction;
	byte[] v18 = p2.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v18.length);
	this.mOutputStream.write(v18, 0, v18.length);
	int v22 = this.mInputStream.readInt();
	int v21 = v22;
	this.mOutputStream.writeInt(0);
	StringBuilder v25 = new StringBuilder;
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	boolean v1 = 0;
	return v1;
}
","SYS_OR_SIG"

"Lcom/android/server/recoverysystem/RecoverySystemService","rebootRecoveryWithCommand(Ljava/lang/String;)V","0","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 8 @14 exception:9,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 10,11 @20 exception:12,
monitorexit 3,
return,","depth : 0
public void rebootRecoveryWithCommand(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	PowerManager v2 = this.mInjector.getPowerManager();
	v2.reboot(""recovery"");
	return;
}
-----
","public void rebootRecoveryWithCommand(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	PowerManager v2 = this.mInjector.getPowerManager();
	v2.reboot(""recovery"");
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootRecoveryWithCommand(Ljava/lang/String;)V","1","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 8 @14 exception:9,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 2,3 @4 exception:4,
6 = checkcast <Application,Landroid/os/PowerManager>5 <Application,Landroid/os/PowerManager>,
return 6,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 10,11 @20 exception:12,
monitorexit 3,
return,","depth : 0
public void rebootRecoveryWithCommand(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	PowerManager v2 = this.mInjector.getPowerManager();
	v2.reboot(""recovery"");
	return;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
depth : 1
public PowerManager getPowerManager(){
	Object v1 = this.mContext.getSystemService(""power"");
	return v1;
}
-----
","public void rebootRecoveryWithCommand(String p1){
	boolean v3 = RecoverySystemService.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v5 = this.mInjector.connectService();
	v5.sendCommand(p1);
	int v7 = v5.getPercentageUncrypted();
	v5.sendAck();
	StringBuilder v9 = new StringBuilder;
	v5.close();
	boolean v1 = 0;
	Object v13 = this.mContext.getSystemService(""power"");
	PowerManager v12 = v13;
	v12.reboot(""recovery"");
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootRecoveryWithCommand(Ljava/lang/String;)V","1","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
monitorexit 3,
return,","depth : 0
public void rebootRecoveryWithCommand(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	return;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
","public void rebootRecoveryWithCommand(String p1){
	boolean v3 = RecoverySystemService.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v5 = this.mInjector.connectService();
	v5.sendCommand(p1);
	int v7 = v5.getPercentageUncrypted();
	v5.sendAck();
	StringBuilder v9 = new StringBuilder;
	v5.close();
	boolean v1 = 0;
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootRecoveryWithCommand(Ljava/lang/String;)V","2","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 27 to iindex = 3),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
invokestatic < Application, Landroid/os/SystemProperties, set(Ljava/lang/String;Ljava/lang/String;)V > 2,3 @0 exception:4,
return,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
2 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket>@0,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, connectService()Z > 2 @5 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 2 @11 exception:7,
8 = phi  2,6,
return 8,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
3 = getstatic < Application, Ljava/nio/charset/StandardCharsets, UTF_8, <Application,Ljava/nio/charset/Charset> >,
5 = invokevirtual < Application, Ljava/lang/String, getBytes(Ljava/nio/charset/Charset;)[B > 2,3 @2 exception:4,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
7 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 6,7 @9 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
10 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, write([BII)V > 9,5,11,10 @16 exception:12,
return,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
4 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 2,3 @3 exception:4,
return,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 4 @7 exception:5,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mLocalSocket, <Application,Landroid/net/LocalSocket> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 6 @12 exception:7,
return,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 8 @14 exception:9,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 10,11 @20 exception:12,
monitorexit 3,
return,","depth : 0
public void rebootRecoveryWithCommand(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	PowerManager v2 = this.mInjector.getPowerManager();
	v2.reboot(""recovery"");
	return;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
depth : 2
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public void systemPropertiesSet(String p1, String p2){
	SystemProperties.set(p1, p2);
	return;
}
-----
depth : 2
public RecoverySystemService$UncryptSocket connectService(){
	RecoverySystemService$UncryptSocket v0 = new RecoverySystemService$UncryptSocket();
	boolean v2 = v0.connectService();
	v0.close();
	return phiInstruction;
}
-----
depth : 2
public void sendCommand(String p1){
	byte[] v1 = p1.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v1.length);
	this.mOutputStream.write(v1, 0, v1.length);
	return;
}
-----
depth : 2
public int getPercentageUncrypted(){
	int v1 = this.mInputStream.readInt();
	return v1;
}
-----
depth : 2
public void sendAck(){
	this.mOutputStream.writeInt(0);
	return;
}
-----
depth : 2
public void close(){
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	return;
}
-----
","public void rebootRecoveryWithCommand(String p1){
	String v4 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v5 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v6 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v7 = ""running"".equals(v4);
	boolean v8 = ""running"".equals(v5);
	boolean v9 = ""running"".equals(v6);
	boolean v3 = 1;
	SystemProperties.set(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v13 = new RecoverySystemService$UncryptSocket();
	boolean v15 = v13.connectService();
	v13.close();
	RecoverySystemService$UncryptSocket v12 = phiInstruction;
	byte[] v18 = p2.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v18.length);
	this.mOutputStream.write(v18, 0, v18.length);
	int v22 = this.mInputStream.readInt();
	int v21 = v22;
	this.mOutputStream.writeInt(0);
	StringBuilder v25 = new StringBuilder;
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	boolean v1 = 0;
	PowerManager v31 = this.mInjector.getPowerManager();
	v31.reboot(""recovery"");
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootRecoveryWithCommand(Ljava/lang/String;)V","2","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 29 to iindex = 2),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
invokestatic < Application, Landroid/os/SystemProperties, set(Ljava/lang/String;Ljava/lang/String;)V > 2,3 @0 exception:4,
return,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
2 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket>@0,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, connectService()Z > 2 @5 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 2 @11 exception:7,
8 = phi  2,6,
return 8,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
3 = getstatic < Application, Ljava/nio/charset/StandardCharsets, UTF_8, <Application,Ljava/nio/charset/Charset> >,
5 = invokevirtual < Application, Ljava/lang/String, getBytes(Ljava/nio/charset/Charset;)[B > 2,3 @2 exception:4,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
7 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 6,7 @9 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
10 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, write([BII)V > 9,5,11,10 @16 exception:12,
return,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
4 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 2,3 @3 exception:4,
return,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 4 @7 exception:5,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mLocalSocket, <Application,Landroid/net/LocalSocket> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 6 @12 exception:7,
return,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 8 @14 exception:9,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 10,11 @20 exception:12,
monitorexit 3,
return,","depth : 0
public void rebootRecoveryWithCommand(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	PowerManager v2 = this.mInjector.getPowerManager();
	v2.reboot(""recovery"");
	return;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
depth : 2
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public void systemPropertiesSet(String p1, String p2){
	SystemProperties.set(p1, p2);
	return;
}
-----
depth : 2
public RecoverySystemService$UncryptSocket connectService(){
	RecoverySystemService$UncryptSocket v0 = new RecoverySystemService$UncryptSocket();
	boolean v2 = v0.connectService();
	v0.close();
	return phiInstruction;
}
-----
depth : 2
public void sendCommand(String p1){
	byte[] v1 = p1.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v1.length);
	this.mOutputStream.write(v1, 0, v1.length);
	return;
}
-----
depth : 2
public int getPercentageUncrypted(){
	int v1 = this.mInputStream.readInt();
	return v1;
}
-----
depth : 2
public void sendAck(){
	this.mOutputStream.writeInt(0);
	return;
}
-----
depth : 2
public void close(){
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	return;
}
-----
","public void rebootRecoveryWithCommand(String p1){
	String v4 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v5 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v6 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v7 = ""running"".equals(v4);
	boolean v8 = ""running"".equals(v5);
	boolean v9 = ""running"".equals(v6);
	boolean v3 = 1;
	SystemProperties.set(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v13 = new RecoverySystemService$UncryptSocket();
	boolean v15 = v13.connectService();
	v13.close();
	RecoverySystemService$UncryptSocket v12 = phiInstruction;
	byte[] v18 = p2.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v18.length);
	this.mOutputStream.write(v18, 0, v18.length);
	int v22 = this.mInputStream.readInt();
	int v21 = v22;
	this.mOutputStream.writeInt(0);
	StringBuilder v25 = new StringBuilder;
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	boolean v1 = 0;
	PowerManager v31 = this.mInjector.getPowerManager();
	v31.reboot(""recovery"");
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootRecoveryWithCommand(Ljava/lang/String;)V","2","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 27 to iindex = 3),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
invokestatic < Application, Landroid/os/SystemProperties, set(Ljava/lang/String;Ljava/lang/String;)V > 2,3 @0 exception:4,
return,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
2 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket>@0,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, connectService()Z > 2 @5 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 2 @11 exception:7,
8 = phi  2,6,
return 8,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
3 = getstatic < Application, Ljava/nio/charset/StandardCharsets, UTF_8, <Application,Ljava/nio/charset/Charset> >,
5 = invokevirtual < Application, Ljava/lang/String, getBytes(Ljava/nio/charset/Charset;)[B > 2,3 @2 exception:4,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
7 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 6,7 @9 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
10 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, write([BII)V > 9,5,11,10 @16 exception:12,
return,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
4 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 2,3 @3 exception:4,
return,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 4 @7 exception:5,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mLocalSocket, <Application,Landroid/net/LocalSocket> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 6 @12 exception:7,
return,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
monitorexit 3,
return,","depth : 0
public void rebootRecoveryWithCommand(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	return;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
depth : 2
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public void systemPropertiesSet(String p1, String p2){
	SystemProperties.set(p1, p2);
	return;
}
-----
depth : 2
public RecoverySystemService$UncryptSocket connectService(){
	RecoverySystemService$UncryptSocket v0 = new RecoverySystemService$UncryptSocket();
	boolean v2 = v0.connectService();
	v0.close();
	return phiInstruction;
}
-----
depth : 2
public void sendCommand(String p1){
	byte[] v1 = p1.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v1.length);
	this.mOutputStream.write(v1, 0, v1.length);
	return;
}
-----
depth : 2
public int getPercentageUncrypted(){
	int v1 = this.mInputStream.readInt();
	return v1;
}
-----
depth : 2
public void sendAck(){
	this.mOutputStream.writeInt(0);
	return;
}
-----
depth : 2
public void close(){
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	return;
}
-----
","public void rebootRecoveryWithCommand(String p1){
	String v4 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v5 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v6 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v7 = ""running"".equals(v4);
	boolean v8 = ""running"".equals(v5);
	boolean v9 = ""running"".equals(v6);
	boolean v3 = 1;
	SystemProperties.set(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v13 = new RecoverySystemService$UncryptSocket();
	boolean v15 = v13.connectService();
	v13.close();
	RecoverySystemService$UncryptSocket v12 = phiInstruction;
	byte[] v18 = p2.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v18.length);
	this.mOutputStream.write(v18, 0, v18.length);
	int v22 = this.mInputStream.readInt();
	int v21 = v22;
	this.mOutputStream.writeInt(0);
	StringBuilder v25 = new StringBuilder;
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	boolean v1 = 0;
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskf(Ljava/lang/String;Ljava/lang/String;Z)I","0","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:5,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,4 @3 exception:6,
return 7,","depth : 0
public int rebootWithLskf(String p1, String p2, boolean p3){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.rebootWithLskfImpl(p1, p2, p3);
	return v2;
}
-----
","public int rebootWithLskf(String p1, String p2, boolean p3){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.rebootWithLskfImpl(p1, p2, p3);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskf(Ljava/lang/String;Ljava/lang/String;Z)I","1","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,4 @3 exception:6,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, armRebootEscrow(Ljava/lang/String;Z)Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError; > 1,2,4 @0 exception:5,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRebootWithLskf(Ljava/lang/String;ZLcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,2,4,6 @4 exception:7,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationStateOnRebootFailure(Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,6 @7 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mRebootErrorCode, <Primordial,I> > 6,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 11 @17 exception:12,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, deletePrefsFile()V > 13 @21 exception:14,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 15 @26 exception:16,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 17,3 @30 exception:18,
return 19,
return 7,","depth : 0
public int rebootWithLskf(String p1, String p2, boolean p3){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.rebootWithLskfImpl(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int rebootWithLskfImpl(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v1 = p0.armRebootEscrow(p1, p3);
	p0.reportMetricsOnRebootWithLskf(p1, p3, v1);
	p0.clearRoRPreparationStateOnRebootFailure(v1);
	RecoverySystemService$PreferencesManager v4 = this.mInjector.getMetricsPrefs();
	v4.deletePrefsFile();
	PowerManager v6 = this.mInjector.getPowerManager();
	v6.reboot(p2);
	return 1000;
}
-----
","public int rebootWithLskf(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v5 = RecoverySystemService.armRebootEscrow(p1, p3);
	RecoverySystemService.reportMetricsOnRebootWithLskf(p1, p3, v5);
	RecoverySystemService.clearRoRPreparationStateOnRebootFailure(v5);
	RecoverySystemService$PreferencesManager v8 = this.mInjector.getMetricsPrefs();
	v8.deletePrefsFile();
	PowerManager v10 = this.mInjector.getPowerManager();
	v10.reboot(p2);
	int v4 = 1000;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskf(Ljava/lang/String;Ljava/lang/String;Z)I","1","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
return,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,4 @3 exception:6,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, armRebootEscrow(Ljava/lang/String;Z)Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError; > 1,2,4 @0 exception:5,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRebootWithLskf(Ljava/lang/String;ZLcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,2,4,6 @4 exception:7,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationStateOnRebootFailure(Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,6 @7 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mRebootErrorCode, <Primordial,I> > 6,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 11 @17 exception:12,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, deletePrefsFile()V > 13 @21 exception:14,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 15 @26 exception:16,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 17,3 @30 exception:18,
return 19,
return 7,","depth : 0
public int rebootWithLskf(String p1, String p2, boolean p3){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.rebootWithLskfImpl(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int rebootWithLskfImpl(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v1 = p0.armRebootEscrow(p1, p3);
	p0.reportMetricsOnRebootWithLskf(p1, p3, v1);
	p0.clearRoRPreparationStateOnRebootFailure(v1);
	RecoverySystemService$PreferencesManager v4 = this.mInjector.getMetricsPrefs();
	v4.deletePrefsFile();
	PowerManager v6 = this.mInjector.getPowerManager();
	v6.reboot(p2);
	return 1000;
}
-----
","public int rebootWithLskf(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v4 = RecoverySystemService.armRebootEscrow(p1, p3);
	RecoverySystemService.reportMetricsOnRebootWithLskf(p1, p3, v4);
	RecoverySystemService.clearRoRPreparationStateOnRebootFailure(v4);
	RecoverySystemService$PreferencesManager v7 = this.mInjector.getMetricsPrefs();
	v7.deletePrefsFile();
	PowerManager v9 = this.mInjector.getPowerManager();
	v9.reboot(p2);
	int v3 = 1000;
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskf(Ljava/lang/String;Ljava/lang/String;Z)I","2","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,4 @3 exception:6,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, armRebootEscrow(Ljava/lang/String;Z)Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError; > 1,2,4 @0 exception:5,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isLskfCaptured(Ljava/lang/String;)Z > 1,2 @18 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, verifySlotForNextBoot(Z)Z > 1,3 @32 exception:8,
conditional branch(ne, to iindex=-1) 9,5,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @46 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
14 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 12 @52 exception:13,
conditional branch(ne, to iindex=-1) 14,5,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, armRebootEscrow()I > 14 @75 exception:16,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @79 exception:18,
conditional branch(eq, to iindex=-1) 17,5,
21 = new <Application,Ljava/lang/StringBuilder>@84,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 21 @86 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 21,23 @91 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 21,17 @94 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 21 @97 exception:28,
31 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 4,29 @101 exception:30,
32 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError>@104,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, <init>(II)V > 32,15,17 @106 exception:33,
return 32,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRebootWithLskf(Ljava/lang/String;ZLcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,2,4,6 @4 exception:7,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 5,2 @2 exception:6,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, useServerBasedRoR()Z > 1 @6 exception:8,
monitorenter 1,
10 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
12 = invokevirtual < Application, Landroid/util/ArraySet, size()I > 10 @13 exception:11,
monitorexit 1,
17 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 17 @20 exception:18,
20 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
22 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 20 @26 exception:21,
26 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getLong(Ljava/lang/String;J)J > 22,23,24 @34 exception:25,
27 = binaryop(lt) 26 , 24,
conditional branch(eq, to iindex=-1) 27,29,
30 = binaryop(lt) 19 , 26,
conditional branch(le, to iindex=-1) 30,29,
32 = binaryop(sub) 19 , 26,
33 = conversion(I) 32,
35 = binaryop(div) 33 , 34,
goto (from iindex= 29 to iindex = 2),
37 = phi  35,28,
38 = new <Application,Ljava/lang/StringBuilder>@54,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @56 exception:39,
41 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,2 @59 exception:40,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,42 @64 exception:43,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @67 exception:45,
48 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,46,28 @71 exception:47,
51 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,49,28 @77 exception:50,
55 = new <Application,[Ljava/lang/Object>@8654 ,
arraystore 55[29] = 2,
58 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 12 @92 exception:57,
arraystore 55[56] = 58,
61 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 48 @99 exception:60,
arraystore 55[59] = 61,
64 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 51 @106 exception:63,
arraystore 55[62] = 64,
67 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 37 @113 exception:66,
arraystore 55[65] = 67,
69 = invokestatic < Application, Ljava/lang/String, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 53,55 @119 exception:68,
71 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 52,69 @123 exception:70,
72 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
74 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, getErrorCodeForMetrics()I > 4 @128 exception:73,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowRebootMetrics(IIIIZZII)V > 72,74,7,12,48,3,9,37,51 @133 exception:75,
return,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationStateOnRebootFailure(Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,6 @7 exception:8,
3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, FATAL_ARM_ESCROW_ERRORS, <Application,Landroid/util/FastImmutableArraySet> >,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
6 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @4 exception:5,
8 = invokevirtual < Application, Landroid/util/FastImmutableArraySet, contains(Ljava/lang/Object;)Z > 3,6 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @17 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @22 exception:13,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,15 @27 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:18,
22 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 20,19 @36 exception:21,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationState()V > 1 @39 exception:23,
return,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mRebootErrorCode, <Primordial,I> > 6,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 11 @17 exception:12,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mPrefs, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, deletePrefsFile()V > 13 @21 exception:14,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, mMetricsPrefsFile, <Application,Ljava/io/File> > 1,
4 = invokevirtual < Application, Ljava/io/File, delete()Z > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
9 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 6,7 @12 exception:8,
return,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 15 @26 exception:16,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 2,3 @4 exception:4,
6 = checkcast <Application,Landroid/os/PowerManager>5 <Application,Landroid/os/PowerManager>,
return 6,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 17,3 @30 exception:18,
return 19,
return 7,","depth : 0
public int rebootWithLskf(String p1, String p2, boolean p3){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.rebootWithLskfImpl(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int rebootWithLskfImpl(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v1 = p0.armRebootEscrow(p1, p3);
	p0.reportMetricsOnRebootWithLskf(p1, p3, v1);
	p0.clearRoRPreparationStateOnRebootFailure(v1);
	RecoverySystemService$PreferencesManager v4 = this.mInjector.getMetricsPrefs();
	v4.deletePrefsFile();
	PowerManager v6 = this.mInjector.getPowerManager();
	v6.reboot(p2);
	return 1000;
}
-----
depth : 2
public RecoverySystemService$RebootPreparationError armRebootEscrow(String p1, boolean p2){
	boolean v1 = p0.isLskfCaptured(p1);
	boolean v2 = p0.verifySlotForNextBoot(p2);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	int v5 = v4.armRebootEscrow();
	Binder.restoreCallingIdentity(v3);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Failure to escrow key for reboot, providerErrorCode: "");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	int v11 = Slog.w(""RecoverySystemService"", v10);
	RecoverySystemService$RebootPreparationError v11 = new RecoverySystemService$RebootPreparationError(5000,v5);
	return v11;
}
-----
depth : 2
public void reportMetricsOnRebootWithLskf(String p1, boolean p2, RecoverySystemService$RebootPreparationError p3){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	boolean v2 = p0.useServerBasedRoR();
	int v3 = this.mCallerPreparedForReboot.size();
	long v4 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v5 = this.mInjector.getMetricsPrefs();
	long v6 = v5.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(p1);
	StringBuilder v9 = v6.append(""_request_lskf_count"");
	String v10 = v6.toString();
	int v11 = v5.getInt(v10, -1);
	int v12 = v5.getInt(""lskf_captured_count"", -1);
	Object v12 = new Object(5);
	Integer v13 = Integer.valueOf(v3);
	Integer v14 = Integer.valueOf(v11);
	Integer v15 = Integer.valueOf(v12);
	Integer v16 = Integer.valueOf(phiInstruction);
	String v17 = String.format(""Reporting reboot with lskf, package name %s, client count %d, request count %d, lskf captured count %d, duration since lskf captured %d seconds."", v12);
	int v18 = Slog.i(""RecoverySystemService"", v17);
	int v19 = p3.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v19, v1, v3, v11, p2, v2, phiInstruction, v12);
	return;
}
-----
depth : 2
public void clearRoRPreparationStateOnRebootFailure(RecoverySystemService$RebootPreparationError p1){
	Integer v1 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v2 = this.FATAL_ARM_ESCROW_ERRORS.contains(v1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Clearing resume on reboot states for all clients on arm escrow error: "");
	StringBuilder v5 = v2.append(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	String v6 = v2.toString();
	int v7 = Slog.w(""RecoverySystemService"", v6);
	p0.clearRoRPreparationState();
	return;
}
-----
depth : 2
public RecoverySystemService$PreferencesManager getMetricsPrefs(){
	return this.mPrefs;
}
-----
depth : 2
public void deletePrefsFile(){
	boolean v1 = this.mMetricsPrefsFile.delete();
	int v2 = Slog.w(""RecoverySystemService"", ""Failed to delete metrics prefs"");
	return;
}
-----
depth : 2
public PowerManager getPowerManager(){
	Object v1 = this.mContext.getSystemService(""power"");
	return v1;
}
-----
","public int rebootWithLskf(String p1, String p2, boolean p3){
	boolean v6 = RecoverySystemService.isLskfCaptured(p1);
	boolean v7 = RecoverySystemService.verifySlotForNextBoot(p3);
	long v8 = Binder.clearCallingIdentity();
	LockSettingsInternal v9 = this.mInjector.getLockSettingsService();
	int v10 = v9.armRebootEscrow();
	Binder.restoreCallingIdentity(v8);
	RecoverySystemService$RebootPreparationError v18 = new RecoverySystemService$RebootPreparationError(5000,v10);
	RecoverySystemService$RebootPreparationError v5 = v18;
	int v21 = this.mInjector.getUidFromPackageName(p1);
	boolean v22 = RecoverySystemService.useServerBasedRoR();
	int v23 = this.mCallerPreparedForReboot.size();
	long v24 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v25 = this.mInjector.getMetricsPrefs();
	long v26 = v25.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v27 = new StringBuilder();
	StringBuilder v29 = v27.append(p1);
	StringBuilder v30 = v27.append(""_request_lskf_count"");
	String v31 = v27.toString();
	int v32 = v25.getInt(v31, -1);
	int v33 = v25.getInt(""lskf_captured_count"", -1);
	Integer v35 = Integer.valueOf(v23);
	Integer v36 = Integer.valueOf(v32);
	Integer v37 = Integer.valueOf(v33);
	Integer v38 = Integer.valueOf(phiInstruction);
	int v41 = v5.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v41, v21, v23, v32, p3, v22, phiInstruction, v33);
	Integer v44 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v45 = this.FATAL_ARM_ESCROW_ERRORS.contains(v44);
	RecoverySystemService.clearRoRPreparationState();
	RecoverySystemService$PreferencesManager v53 = this.mPrefs;
	boolean v55 = this.mMetricsPrefsFile.delete();
	Object v58 = this.mContext.getSystemService(""power"");
	PowerManager v57 = v58;
	v57.reboot(p2);
	int v4 = 1000;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskf(Ljava/lang/String;Ljava/lang/String;Z)I","2","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,4 @3 exception:6,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, armRebootEscrow(Ljava/lang/String;Z)Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError; > 1,2,4 @0 exception:5,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isLskfCaptured(Ljava/lang/String;)Z > 1,2 @18 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, verifySlotForNextBoot(Z)Z > 1,3 @32 exception:8,
conditional branch(ne, to iindex=-1) 9,5,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @46 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
14 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 12 @52 exception:13,
conditional branch(ne, to iindex=-1) 14,5,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, armRebootEscrow()I > 14 @75 exception:16,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @79 exception:18,
conditional branch(eq, to iindex=-1) 17,5,
21 = new <Application,Ljava/lang/StringBuilder>@84,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 21 @86 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 21,23 @91 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 21,17 @94 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 21 @97 exception:28,
31 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 4,29 @101 exception:30,
32 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError>@104,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, <init>(II)V > 32,15,17 @106 exception:33,
return 32,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRebootWithLskf(Ljava/lang/String;ZLcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,2,4,6 @4 exception:7,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 5,2 @2 exception:6,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, useServerBasedRoR()Z > 1 @6 exception:8,
monitorenter 1,
10 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
12 = invokevirtual < Application, Landroid/util/ArraySet, size()I > 10 @13 exception:11,
monitorexit 1,
17 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 17 @20 exception:18,
20 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
22 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 20 @26 exception:21,
26 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getLong(Ljava/lang/String;J)J > 22,23,24 @34 exception:25,
27 = binaryop(lt) 26 , 24,
conditional branch(eq, to iindex=-1) 27,29,
30 = binaryop(lt) 19 , 26,
conditional branch(le, to iindex=-1) 30,29,
32 = binaryop(sub) 19 , 26,
33 = conversion(I) 32,
35 = binaryop(div) 33 , 34,
goto (from iindex= 29 to iindex = 2),
37 = phi  35,28,
38 = new <Application,Ljava/lang/StringBuilder>@54,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @56 exception:39,
41 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,2 @59 exception:40,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,42 @64 exception:43,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @67 exception:45,
48 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,46,28 @71 exception:47,
51 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,49,28 @77 exception:50,
55 = new <Application,[Ljava/lang/Object>@8654 ,
arraystore 55[29] = 2,
58 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 12 @92 exception:57,
arraystore 55[56] = 58,
61 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 48 @99 exception:60,
arraystore 55[59] = 61,
64 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 51 @106 exception:63,
arraystore 55[62] = 64,
67 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 37 @113 exception:66,
arraystore 55[65] = 67,
69 = invokestatic < Application, Ljava/lang/String, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 53,55 @119 exception:68,
71 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 52,69 @123 exception:70,
72 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
74 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, getErrorCodeForMetrics()I > 4 @128 exception:73,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowRebootMetrics(IIIIZZII)V > 72,74,7,12,48,3,9,37,51 @133 exception:75,
return,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationStateOnRebootFailure(Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,6 @7 exception:8,
3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, FATAL_ARM_ESCROW_ERRORS, <Application,Landroid/util/FastImmutableArraySet> >,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
6 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @4 exception:5,
8 = invokevirtual < Application, Landroid/util/FastImmutableArraySet, contains(Ljava/lang/Object;)Z > 3,6 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @17 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @22 exception:13,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,15 @27 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:18,
22 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 20,19 @36 exception:21,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationState()V > 1 @39 exception:23,
return,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mRebootErrorCode, <Primordial,I> > 6,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 11 @17 exception:12,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mPrefs, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, deletePrefsFile()V > 13 @21 exception:14,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, mMetricsPrefsFile, <Application,Ljava/io/File> > 1,
4 = invokevirtual < Application, Ljava/io/File, delete()Z > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 15 @26 exception:16,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 2,3 @4 exception:4,
6 = checkcast <Application,Landroid/os/PowerManager>5 <Application,Landroid/os/PowerManager>,
return 6,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 17,3 @30 exception:18,
return 19,
return 7,","depth : 0
public int rebootWithLskf(String p1, String p2, boolean p3){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.rebootWithLskfImpl(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int rebootWithLskfImpl(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v1 = p0.armRebootEscrow(p1, p3);
	p0.reportMetricsOnRebootWithLskf(p1, p3, v1);
	p0.clearRoRPreparationStateOnRebootFailure(v1);
	RecoverySystemService$PreferencesManager v4 = this.mInjector.getMetricsPrefs();
	v4.deletePrefsFile();
	PowerManager v6 = this.mInjector.getPowerManager();
	v6.reboot(p2);
	return 1000;
}
-----
depth : 2
public RecoverySystemService$RebootPreparationError armRebootEscrow(String p1, boolean p2){
	boolean v1 = p0.isLskfCaptured(p1);
	boolean v2 = p0.verifySlotForNextBoot(p2);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	int v5 = v4.armRebootEscrow();
	Binder.restoreCallingIdentity(v3);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Failure to escrow key for reboot, providerErrorCode: "");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	int v11 = Slog.w(""RecoverySystemService"", v10);
	RecoverySystemService$RebootPreparationError v11 = new RecoverySystemService$RebootPreparationError(5000,v5);
	return v11;
}
-----
depth : 2
public void reportMetricsOnRebootWithLskf(String p1, boolean p2, RecoverySystemService$RebootPreparationError p3){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	boolean v2 = p0.useServerBasedRoR();
	int v3 = this.mCallerPreparedForReboot.size();
	long v4 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v5 = this.mInjector.getMetricsPrefs();
	long v6 = v5.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(p1);
	StringBuilder v9 = v6.append(""_request_lskf_count"");
	String v10 = v6.toString();
	int v11 = v5.getInt(v10, -1);
	int v12 = v5.getInt(""lskf_captured_count"", -1);
	Object v12 = new Object(5);
	Integer v13 = Integer.valueOf(v3);
	Integer v14 = Integer.valueOf(v11);
	Integer v15 = Integer.valueOf(v12);
	Integer v16 = Integer.valueOf(phiInstruction);
	String v17 = String.format(""Reporting reboot with lskf, package name %s, client count %d, request count %d, lskf captured count %d, duration since lskf captured %d seconds."", v12);
	int v18 = Slog.i(""RecoverySystemService"", v17);
	int v19 = p3.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v19, v1, v3, v11, p2, v2, phiInstruction, v12);
	return;
}
-----
depth : 2
public void clearRoRPreparationStateOnRebootFailure(RecoverySystemService$RebootPreparationError p1){
	Integer v1 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v2 = this.FATAL_ARM_ESCROW_ERRORS.contains(v1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Clearing resume on reboot states for all clients on arm escrow error: "");
	StringBuilder v5 = v2.append(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	String v6 = v2.toString();
	int v7 = Slog.w(""RecoverySystemService"", v6);
	p0.clearRoRPreparationState();
	return;
}
-----
depth : 2
public RecoverySystemService$PreferencesManager getMetricsPrefs(){
	return this.mPrefs;
}
-----
depth : 2
public void deletePrefsFile(){
	boolean v1 = this.mMetricsPrefsFile.delete();
	return;
}
-----
depth : 2
public PowerManager getPowerManager(){
	Object v1 = this.mContext.getSystemService(""power"");
	return v1;
}
-----
","public int rebootWithLskf(String p1, String p2, boolean p3){
	boolean v6 = RecoverySystemService.isLskfCaptured(p1);
	boolean v7 = RecoverySystemService.verifySlotForNextBoot(p3);
	long v8 = Binder.clearCallingIdentity();
	LockSettingsInternal v9 = this.mInjector.getLockSettingsService();
	int v10 = v9.armRebootEscrow();
	Binder.restoreCallingIdentity(v8);
	RecoverySystemService$RebootPreparationError v18 = new RecoverySystemService$RebootPreparationError(5000,v10);
	RecoverySystemService$RebootPreparationError v5 = v18;
	int v21 = this.mInjector.getUidFromPackageName(p1);
	boolean v22 = RecoverySystemService.useServerBasedRoR();
	int v23 = this.mCallerPreparedForReboot.size();
	long v24 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v25 = this.mInjector.getMetricsPrefs();
	long v26 = v25.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v27 = new StringBuilder();
	StringBuilder v29 = v27.append(p1);
	StringBuilder v30 = v27.append(""_request_lskf_count"");
	String v31 = v27.toString();
	int v32 = v25.getInt(v31, -1);
	int v33 = v25.getInt(""lskf_captured_count"", -1);
	Integer v35 = Integer.valueOf(v23);
	Integer v36 = Integer.valueOf(v32);
	Integer v37 = Integer.valueOf(v33);
	Integer v38 = Integer.valueOf(phiInstruction);
	int v41 = v5.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v41, v21, v23, v32, p3, v22, phiInstruction, v33);
	Integer v44 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v45 = this.FATAL_ARM_ESCROW_ERRORS.contains(v44);
	RecoverySystemService.clearRoRPreparationState();
	RecoverySystemService$PreferencesManager v53 = this.mPrefs;
	boolean v55 = this.mMetricsPrefsFile.delete();
	Object v57 = this.mContext.getSystemService(""power"");
	PowerManager v56 = v57;
	v56.reboot(p2);
	int v4 = 1000;
	return v4;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskf(Ljava/lang/String;Ljava/lang/String;Z)I","2","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
return,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,4 @3 exception:6,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, armRebootEscrow(Ljava/lang/String;Z)Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError; > 1,2,4 @0 exception:5,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isLskfCaptured(Ljava/lang/String;)Z > 1,2 @18 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, verifySlotForNextBoot(Z)Z > 1,3 @32 exception:8,
conditional branch(ne, to iindex=-1) 9,5,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @46 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
14 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 12 @52 exception:13,
conditional branch(ne, to iindex=-1) 14,5,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, armRebootEscrow()I > 14 @75 exception:16,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @79 exception:18,
conditional branch(eq, to iindex=-1) 17,5,
21 = new <Application,Ljava/lang/StringBuilder>@84,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 21 @86 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 21,23 @91 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 21,17 @94 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 21 @97 exception:28,
31 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 4,29 @101 exception:30,
32 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError>@104,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, <init>(II)V > 32,15,17 @106 exception:33,
return 32,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRebootWithLskf(Ljava/lang/String;ZLcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,2,4,6 @4 exception:7,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 5,2 @2 exception:6,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, useServerBasedRoR()Z > 1 @6 exception:8,
monitorenter 1,
10 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
12 = invokevirtual < Application, Landroid/util/ArraySet, size()I > 10 @13 exception:11,
monitorexit 1,
17 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 17 @20 exception:18,
20 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
22 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 20 @26 exception:21,
26 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getLong(Ljava/lang/String;J)J > 22,23,24 @34 exception:25,
27 = binaryop(lt) 26 , 24,
conditional branch(eq, to iindex=-1) 27,29,
30 = binaryop(lt) 19 , 26,
conditional branch(le, to iindex=-1) 30,29,
32 = binaryop(sub) 19 , 26,
33 = conversion(I) 32,
35 = binaryop(div) 33 , 34,
goto (from iindex= 29 to iindex = 2),
37 = phi  35,28,
38 = new <Application,Ljava/lang/StringBuilder>@54,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @56 exception:39,
41 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,2 @59 exception:40,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,42 @64 exception:43,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @67 exception:45,
48 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,46,28 @71 exception:47,
51 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,49,28 @77 exception:50,
55 = new <Application,[Ljava/lang/Object>@8654 ,
arraystore 55[29] = 2,
58 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 12 @92 exception:57,
arraystore 55[56] = 58,
61 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 48 @99 exception:60,
arraystore 55[59] = 61,
64 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 51 @106 exception:63,
arraystore 55[62] = 64,
67 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 37 @113 exception:66,
arraystore 55[65] = 67,
69 = invokestatic < Application, Ljava/lang/String, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 53,55 @119 exception:68,
71 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 52,69 @123 exception:70,
72 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
74 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, getErrorCodeForMetrics()I > 4 @128 exception:73,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowRebootMetrics(IIIIZZII)V > 72,74,7,12,48,3,9,37,51 @133 exception:75,
return,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationStateOnRebootFailure(Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,6 @7 exception:8,
3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, FATAL_ARM_ESCROW_ERRORS, <Application,Landroid/util/FastImmutableArraySet> >,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
6 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @4 exception:5,
8 = invokevirtual < Application, Landroid/util/FastImmutableArraySet, contains(Ljava/lang/Object;)Z > 3,6 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @17 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @22 exception:13,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,15 @27 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:18,
22 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 20,19 @36 exception:21,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationState()V > 1 @39 exception:23,
return,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mRebootErrorCode, <Primordial,I> > 6,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 11 @17 exception:12,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mPrefs, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, deletePrefsFile()V > 13 @21 exception:14,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, mMetricsPrefsFile, <Application,Ljava/io/File> > 1,
4 = invokevirtual < Application, Ljava/io/File, delete()Z > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
9 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 6,7 @12 exception:8,
return,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 15 @26 exception:16,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 2,3 @4 exception:4,
6 = checkcast <Application,Landroid/os/PowerManager>5 <Application,Landroid/os/PowerManager>,
return 6,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 17,3 @30 exception:18,
return 19,
return 7,","depth : 0
public int rebootWithLskf(String p1, String p2, boolean p3){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.rebootWithLskfImpl(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int rebootWithLskfImpl(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v1 = p0.armRebootEscrow(p1, p3);
	p0.reportMetricsOnRebootWithLskf(p1, p3, v1);
	p0.clearRoRPreparationStateOnRebootFailure(v1);
	RecoverySystemService$PreferencesManager v4 = this.mInjector.getMetricsPrefs();
	v4.deletePrefsFile();
	PowerManager v6 = this.mInjector.getPowerManager();
	v6.reboot(p2);
	return 1000;
}
-----
depth : 2
public RecoverySystemService$RebootPreparationError armRebootEscrow(String p1, boolean p2){
	boolean v1 = p0.isLskfCaptured(p1);
	boolean v2 = p0.verifySlotForNextBoot(p2);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	int v5 = v4.armRebootEscrow();
	Binder.restoreCallingIdentity(v3);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Failure to escrow key for reboot, providerErrorCode: "");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	int v11 = Slog.w(""RecoverySystemService"", v10);
	RecoverySystemService$RebootPreparationError v11 = new RecoverySystemService$RebootPreparationError(5000,v5);
	return v11;
}
-----
depth : 2
public void reportMetricsOnRebootWithLskf(String p1, boolean p2, RecoverySystemService$RebootPreparationError p3){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	boolean v2 = p0.useServerBasedRoR();
	int v3 = this.mCallerPreparedForReboot.size();
	long v4 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v5 = this.mInjector.getMetricsPrefs();
	long v6 = v5.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(p1);
	StringBuilder v9 = v6.append(""_request_lskf_count"");
	String v10 = v6.toString();
	int v11 = v5.getInt(v10, -1);
	int v12 = v5.getInt(""lskf_captured_count"", -1);
	Object v12 = new Object(5);
	Integer v13 = Integer.valueOf(v3);
	Integer v14 = Integer.valueOf(v11);
	Integer v15 = Integer.valueOf(v12);
	Integer v16 = Integer.valueOf(phiInstruction);
	String v17 = String.format(""Reporting reboot with lskf, package name %s, client count %d, request count %d, lskf captured count %d, duration since lskf captured %d seconds."", v12);
	int v18 = Slog.i(""RecoverySystemService"", v17);
	int v19 = p3.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v19, v1, v3, v11, p2, v2, phiInstruction, v12);
	return;
}
-----
depth : 2
public void clearRoRPreparationStateOnRebootFailure(RecoverySystemService$RebootPreparationError p1){
	Integer v1 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v2 = this.FATAL_ARM_ESCROW_ERRORS.contains(v1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Clearing resume on reboot states for all clients on arm escrow error: "");
	StringBuilder v5 = v2.append(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	String v6 = v2.toString();
	int v7 = Slog.w(""RecoverySystemService"", v6);
	p0.clearRoRPreparationState();
	return;
}
-----
depth : 2
public RecoverySystemService$PreferencesManager getMetricsPrefs(){
	return this.mPrefs;
}
-----
depth : 2
public void deletePrefsFile(){
	boolean v1 = this.mMetricsPrefsFile.delete();
	int v2 = Slog.w(""RecoverySystemService"", ""Failed to delete metrics prefs"");
	return;
}
-----
depth : 2
public PowerManager getPowerManager(){
	Object v1 = this.mContext.getSystemService(""power"");
	return v1;
}
-----
","public int rebootWithLskf(String p1, String p2, boolean p3){
	boolean v5 = RecoverySystemService.isLskfCaptured(p1);
	boolean v6 = RecoverySystemService.verifySlotForNextBoot(p3);
	long v7 = Binder.clearCallingIdentity();
	LockSettingsInternal v8 = this.mInjector.getLockSettingsService();
	int v9 = v8.armRebootEscrow();
	Binder.restoreCallingIdentity(v7);
	RecoverySystemService$RebootPreparationError v17 = new RecoverySystemService$RebootPreparationError(5000,v9);
	RecoverySystemService$RebootPreparationError v4 = v17;
	int v20 = this.mInjector.getUidFromPackageName(p1);
	boolean v21 = RecoverySystemService.useServerBasedRoR();
	int v22 = this.mCallerPreparedForReboot.size();
	long v23 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v24 = this.mInjector.getMetricsPrefs();
	long v25 = v24.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v26 = new StringBuilder();
	StringBuilder v28 = v26.append(p1);
	StringBuilder v29 = v26.append(""_request_lskf_count"");
	String v30 = v26.toString();
	int v31 = v24.getInt(v30, -1);
	int v32 = v24.getInt(""lskf_captured_count"", -1);
	Integer v34 = Integer.valueOf(v22);
	Integer v35 = Integer.valueOf(v31);
	Integer v36 = Integer.valueOf(v32);
	Integer v37 = Integer.valueOf(phiInstruction);
	int v40 = v4.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v40, v20, v22, v31, p3, v21, phiInstruction, v32);
	Integer v43 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v44 = this.FATAL_ARM_ESCROW_ERRORS.contains(v43);
	RecoverySystemService.clearRoRPreparationState();
	RecoverySystemService$PreferencesManager v52 = this.mPrefs;
	boolean v54 = this.mMetricsPrefsFile.delete();
	Object v57 = this.mContext.getSystemService(""power"");
	PowerManager v56 = v57;
	v56.reboot(p2);
	int v3 = 1000;
	return v3;
}
","SYS_OR_SIG"

"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskfAssumeSlotSwitch(Ljava/lang/String;Ljava/lang/String;)I","0","4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,8 @9 exception:9,
return 10,","depth : 0
public int rebootWithLskfAssumeSlotSwitch(String p1, String p2){
	int v2 = p0.rebootWithLskfImpl(p1, p2, 1);
	return v2;
}
-----
","public int rebootWithLskfAssumeSlotSwitch(String p1, String p2){
	int v2 = p0.rebootWithLskfImpl(p1, p2, 1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskfAssumeSlotSwitch(Ljava/lang/String;Ljava/lang/String;)I","1","4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,8 @9 exception:9,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, armRebootEscrow(Ljava/lang/String;Z)Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError; > 1,2,4 @0 exception:5,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRebootWithLskf(Ljava/lang/String;ZLcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,2,4,6 @4 exception:7,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationStateOnRebootFailure(Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,6 @7 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mRebootErrorCode, <Primordial,I> > 6,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 11 @17 exception:12,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, deletePrefsFile()V > 13 @21 exception:14,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 15 @26 exception:16,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 17,3 @30 exception:18,
return 19,
return 10,","depth : 0
public int rebootWithLskfAssumeSlotSwitch(String p1, String p2){
	int v2 = p0.rebootWithLskfImpl(p1, p2, 1);
	return v2;
}
-----
depth : 1
public int rebootWithLskfImpl(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v1 = p0.armRebootEscrow(p1, p3);
	p0.reportMetricsOnRebootWithLskf(p1, p3, v1);
	p0.clearRoRPreparationStateOnRebootFailure(v1);
	RecoverySystemService$PreferencesManager v4 = this.mInjector.getMetricsPrefs();
	v4.deletePrefsFile();
	PowerManager v6 = this.mInjector.getPowerManager();
	v6.reboot(p2);
	return 1000;
}
-----
","public int rebootWithLskfAssumeSlotSwitch(String p1, String p2){
	RecoverySystemService$RebootPreparationError v3 = RecoverySystemService.armRebootEscrow(p1, 1);
	RecoverySystemService.reportMetricsOnRebootWithLskf(p1, 1, v3);
	RecoverySystemService.clearRoRPreparationStateOnRebootFailure(v3);
	RecoverySystemService$PreferencesManager v6 = this.mInjector.getMetricsPrefs();
	v6.deletePrefsFile();
	PowerManager v8 = this.mInjector.getPowerManager();
	v8.reboot(p2);
	int v2 = 1000;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskfAssumeSlotSwitch(Ljava/lang/String;Ljava/lang/String;)I","2","4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,8 @9 exception:9,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, armRebootEscrow(Ljava/lang/String;Z)Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError; > 1,2,4 @0 exception:5,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isLskfCaptured(Ljava/lang/String;)Z > 1,2 @18 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, verifySlotForNextBoot(Z)Z > 1,3 @32 exception:8,
conditional branch(ne, to iindex=-1) 9,5,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @46 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
14 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 12 @52 exception:13,
conditional branch(ne, to iindex=-1) 14,5,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, armRebootEscrow()I > 14 @75 exception:16,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @79 exception:18,
conditional branch(eq, to iindex=-1) 17,5,
21 = new <Application,Ljava/lang/StringBuilder>@84,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 21 @86 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 21,23 @91 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 21,17 @94 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 21 @97 exception:28,
31 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 4,29 @101 exception:30,
32 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError>@104,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, <init>(II)V > 32,15,17 @106 exception:33,
return 32,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRebootWithLskf(Ljava/lang/String;ZLcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,2,4,6 @4 exception:7,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 5,2 @2 exception:6,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, useServerBasedRoR()Z > 1 @6 exception:8,
monitorenter 1,
10 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
12 = invokevirtual < Application, Landroid/util/ArraySet, size()I > 10 @13 exception:11,
monitorexit 1,
17 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 17 @20 exception:18,
20 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
22 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 20 @26 exception:21,
26 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getLong(Ljava/lang/String;J)J > 22,23,24 @34 exception:25,
27 = binaryop(lt) 26 , 24,
conditional branch(eq, to iindex=-1) 27,29,
30 = binaryop(lt) 19 , 26,
conditional branch(le, to iindex=-1) 30,29,
32 = binaryop(sub) 19 , 26,
33 = conversion(I) 32,
35 = binaryop(div) 33 , 34,
goto (from iindex= 29 to iindex = 2),
37 = phi  35,28,
38 = new <Application,Ljava/lang/StringBuilder>@54,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @56 exception:39,
41 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,2 @59 exception:40,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,42 @64 exception:43,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @67 exception:45,
48 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,46,28 @71 exception:47,
51 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,49,28 @77 exception:50,
55 = new <Application,[Ljava/lang/Object>@8654 ,
arraystore 55[29] = 2,
58 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 12 @92 exception:57,
arraystore 55[56] = 58,
61 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 48 @99 exception:60,
arraystore 55[59] = 61,
64 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 51 @106 exception:63,
arraystore 55[62] = 64,
67 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 37 @113 exception:66,
arraystore 55[65] = 67,
69 = invokestatic < Application, Ljava/lang/String, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 53,55 @119 exception:68,
71 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 52,69 @123 exception:70,
72 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
74 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, getErrorCodeForMetrics()I > 4 @128 exception:73,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowRebootMetrics(IIIIZZII)V > 72,74,7,12,48,3,9,37,51 @133 exception:75,
return,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationStateOnRebootFailure(Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,6 @7 exception:8,
3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, FATAL_ARM_ESCROW_ERRORS, <Application,Landroid/util/FastImmutableArraySet> >,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
6 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @4 exception:5,
8 = invokevirtual < Application, Landroid/util/FastImmutableArraySet, contains(Ljava/lang/Object;)Z > 3,6 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @17 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @22 exception:13,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,15 @27 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:18,
22 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 20,19 @36 exception:21,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationState()V > 1 @39 exception:23,
return,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mRebootErrorCode, <Primordial,I> > 6,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 11 @17 exception:12,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mPrefs, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, deletePrefsFile()V > 13 @21 exception:14,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, mMetricsPrefsFile, <Application,Ljava/io/File> > 1,
4 = invokevirtual < Application, Ljava/io/File, delete()Z > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
9 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 6,7 @12 exception:8,
return,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 15 @26 exception:16,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 2,3 @4 exception:4,
6 = checkcast <Application,Landroid/os/PowerManager>5 <Application,Landroid/os/PowerManager>,
return 6,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 17,3 @30 exception:18,
return 19,
return 10,","depth : 0
public int rebootWithLskfAssumeSlotSwitch(String p1, String p2){
	int v2 = p0.rebootWithLskfImpl(p1, p2, 1);
	return v2;
}
-----
depth : 1
public int rebootWithLskfImpl(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v1 = p0.armRebootEscrow(p1, p3);
	p0.reportMetricsOnRebootWithLskf(p1, p3, v1);
	p0.clearRoRPreparationStateOnRebootFailure(v1);
	RecoverySystemService$PreferencesManager v4 = this.mInjector.getMetricsPrefs();
	v4.deletePrefsFile();
	PowerManager v6 = this.mInjector.getPowerManager();
	v6.reboot(p2);
	return 1000;
}
-----
depth : 2
public RecoverySystemService$RebootPreparationError armRebootEscrow(String p1, boolean p2){
	boolean v1 = p0.isLskfCaptured(p1);
	boolean v2 = p0.verifySlotForNextBoot(p2);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	int v5 = v4.armRebootEscrow();
	Binder.restoreCallingIdentity(v3);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Failure to escrow key for reboot, providerErrorCode: "");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	int v11 = Slog.w(""RecoverySystemService"", v10);
	RecoverySystemService$RebootPreparationError v11 = new RecoverySystemService$RebootPreparationError(5000,v5);
	return v11;
}
-----
depth : 2
public void reportMetricsOnRebootWithLskf(String p1, boolean p2, RecoverySystemService$RebootPreparationError p3){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	boolean v2 = p0.useServerBasedRoR();
	int v3 = this.mCallerPreparedForReboot.size();
	long v4 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v5 = this.mInjector.getMetricsPrefs();
	long v6 = v5.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(p1);
	StringBuilder v9 = v6.append(""_request_lskf_count"");
	String v10 = v6.toString();
	int v11 = v5.getInt(v10, -1);
	int v12 = v5.getInt(""lskf_captured_count"", -1);
	Object v12 = new Object(5);
	Integer v13 = Integer.valueOf(v3);
	Integer v14 = Integer.valueOf(v11);
	Integer v15 = Integer.valueOf(v12);
	Integer v16 = Integer.valueOf(phiInstruction);
	String v17 = String.format(""Reporting reboot with lskf, package name %s, client count %d, request count %d, lskf captured count %d, duration since lskf captured %d seconds."", v12);
	int v18 = Slog.i(""RecoverySystemService"", v17);
	int v19 = p3.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v19, v1, v3, v11, p2, v2, phiInstruction, v12);
	return;
}
-----
depth : 2
public void clearRoRPreparationStateOnRebootFailure(RecoverySystemService$RebootPreparationError p1){
	Integer v1 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v2 = this.FATAL_ARM_ESCROW_ERRORS.contains(v1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Clearing resume on reboot states for all clients on arm escrow error: "");
	StringBuilder v5 = v2.append(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	String v6 = v2.toString();
	int v7 = Slog.w(""RecoverySystemService"", v6);
	p0.clearRoRPreparationState();
	return;
}
-----
depth : 2
public RecoverySystemService$PreferencesManager getMetricsPrefs(){
	return this.mPrefs;
}
-----
depth : 2
public void deletePrefsFile(){
	boolean v1 = this.mMetricsPrefsFile.delete();
	int v2 = Slog.w(""RecoverySystemService"", ""Failed to delete metrics prefs"");
	return;
}
-----
depth : 2
public PowerManager getPowerManager(){
	Object v1 = this.mContext.getSystemService(""power"");
	return v1;
}
-----
","public int rebootWithLskfAssumeSlotSwitch(String p1, String p2){
	boolean v4 = RecoverySystemService.isLskfCaptured(p1);
	boolean v5 = RecoverySystemService.verifySlotForNextBoot(p3);
	long v6 = Binder.clearCallingIdentity();
	LockSettingsInternal v7 = this.mInjector.getLockSettingsService();
	int v8 = v7.armRebootEscrow();
	Binder.restoreCallingIdentity(v6);
	RecoverySystemService$RebootPreparationError v16 = new RecoverySystemService$RebootPreparationError(5000,v8);
	RecoverySystemService$RebootPreparationError v3 = v16;
	int v19 = this.mInjector.getUidFromPackageName(p1);
	boolean v20 = RecoverySystemService.useServerBasedRoR();
	int v21 = this.mCallerPreparedForReboot.size();
	long v22 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v23 = this.mInjector.getMetricsPrefs();
	long v24 = v23.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append(p1);
	StringBuilder v28 = v25.append(""_request_lskf_count"");
	String v29 = v25.toString();
	int v30 = v23.getInt(v29, -1);
	int v31 = v23.getInt(""lskf_captured_count"", -1);
	Integer v33 = Integer.valueOf(v21);
	Integer v34 = Integer.valueOf(v30);
	Integer v35 = Integer.valueOf(v31);
	Integer v36 = Integer.valueOf(phiInstruction);
	int v39 = v3.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v39, v19, v21, v30, p3, v20, phiInstruction, v31);
	Integer v42 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v43 = this.FATAL_ARM_ESCROW_ERRORS.contains(v42);
	RecoverySystemService.clearRoRPreparationState();
	RecoverySystemService$PreferencesManager v51 = this.mPrefs;
	boolean v53 = this.mMetricsPrefsFile.delete();
	Object v56 = this.mContext.getSystemService(""power"");
	PowerManager v55 = v56;
	v55.reboot(p2);
	int v2 = 1000;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","rebootWithLskfAssumeSlotSwitch(Ljava/lang/String;Ljava/lang/String;)I","2","4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, rebootWithLskfImpl(Ljava/lang/String;Ljava/lang/String;Z)I > 1,2,3,8 @9 exception:9,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, armRebootEscrow(Ljava/lang/String;Z)Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError; > 1,2,4 @0 exception:5,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isLskfCaptured(Ljava/lang/String;)Z > 1,2 @18 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, verifySlotForNextBoot(Z)Z > 1,3 @32 exception:8,
conditional branch(ne, to iindex=-1) 9,5,
11 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @46 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
14 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 12 @52 exception:13,
conditional branch(ne, to iindex=-1) 14,5,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, armRebootEscrow()I > 14 @75 exception:16,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 11 @79 exception:18,
conditional branch(eq, to iindex=-1) 17,5,
21 = new <Application,Ljava/lang/StringBuilder>@84,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 21 @86 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 21,23 @91 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 21,17 @94 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 21 @97 exception:28,
31 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 4,29 @101 exception:30,
32 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError>@104,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, <init>(II)V > 32,15,17 @106 exception:33,
return 32,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRebootWithLskf(Ljava/lang/String;ZLcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,2,4,6 @4 exception:7,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 5,2 @2 exception:6,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, useServerBasedRoR()Z > 1 @6 exception:8,
monitorenter 1,
10 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
12 = invokevirtual < Application, Landroid/util/ArraySet, size()I > 10 @13 exception:11,
monitorexit 1,
17 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
19 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 17 @20 exception:18,
20 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
22 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 20 @26 exception:21,
26 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getLong(Ljava/lang/String;J)J > 22,23,24 @34 exception:25,
27 = binaryop(lt) 26 , 24,
conditional branch(eq, to iindex=-1) 27,29,
30 = binaryop(lt) 19 , 26,
conditional branch(le, to iindex=-1) 30,29,
32 = binaryop(sub) 19 , 26,
33 = conversion(I) 32,
35 = binaryop(div) 33 , 34,
goto (from iindex= 29 to iindex = 2),
37 = phi  35,28,
38 = new <Application,Ljava/lang/StringBuilder>@54,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 38 @56 exception:39,
41 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,2 @59 exception:40,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 38,42 @64 exception:43,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 38 @67 exception:45,
48 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,46,28 @71 exception:47,
51 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 22,49,28 @77 exception:50,
55 = new <Application,[Ljava/lang/Object>@8654 ,
arraystore 55[29] = 2,
58 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 12 @92 exception:57,
arraystore 55[56] = 58,
61 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 48 @99 exception:60,
arraystore 55[59] = 61,
64 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 51 @106 exception:63,
arraystore 55[62] = 64,
67 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 37 @113 exception:66,
arraystore 55[65] = 67,
69 = invokestatic < Application, Ljava/lang/String, format(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 53,55 @119 exception:68,
71 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 52,69 @123 exception:70,
72 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
74 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, getErrorCodeForMetrics()I > 4 @128 exception:73,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowRebootMetrics(IIIIZZII)V > 72,74,7,12,48,3,9,37,51 @133 exception:75,
return,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationStateOnRebootFailure(Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError;)V > 1,6 @7 exception:8,
3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, FATAL_ARM_ESCROW_ERRORS, <Application,Landroid/util/FastImmutableArraySet> >,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
6 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @4 exception:5,
8 = invokevirtual < Application, Landroid/util/FastImmutableArraySet, contains(Ljava/lang/Object;)Z > 3,6 @8 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @17 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @22 exception:13,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mProviderErrorCode, <Primordial,I> > 2,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,15 @27 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:18,
22 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 20,19 @36 exception:21,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationState()V > 1 @39 exception:23,
return,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$RebootPreparationError, mRebootErrorCode, <Primordial,I> > 6,
conditional branch(eq, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 11 @17 exception:12,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mPrefs, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, deletePrefsFile()V > 13 @21 exception:14,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, mMetricsPrefsFile, <Application,Ljava/io/File> > 1,
4 = invokevirtual < Application, Ljava/io/File, delete()Z > 2 @2 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getPowerManager()Landroid/os/PowerManager; > 15 @26 exception:16,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 2,3 @4 exception:4,
6 = checkcast <Application,Landroid/os/PowerManager>5 <Application,Landroid/os/PowerManager>,
return 6,
invokevirtual < Application, Landroid/os/PowerManager, reboot(Ljava/lang/String;)V > 17,3 @30 exception:18,
return 19,
return 10,","depth : 0
public int rebootWithLskfAssumeSlotSwitch(String p1, String p2){
	int v2 = p0.rebootWithLskfImpl(p1, p2, 1);
	return v2;
}
-----
depth : 1
public int rebootWithLskfImpl(String p1, String p2, boolean p3){
	RecoverySystemService$RebootPreparationError v1 = p0.armRebootEscrow(p1, p3);
	p0.reportMetricsOnRebootWithLskf(p1, p3, v1);
	p0.clearRoRPreparationStateOnRebootFailure(v1);
	RecoverySystemService$PreferencesManager v4 = this.mInjector.getMetricsPrefs();
	v4.deletePrefsFile();
	PowerManager v6 = this.mInjector.getPowerManager();
	v6.reboot(p2);
	return 1000;
}
-----
depth : 2
public RecoverySystemService$RebootPreparationError armRebootEscrow(String p1, boolean p2){
	boolean v1 = p0.isLskfCaptured(p1);
	boolean v2 = p0.verifySlotForNextBoot(p2);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	int v5 = v4.armRebootEscrow();
	Binder.restoreCallingIdentity(v3);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""Failure to escrow key for reboot, providerErrorCode: "");
	StringBuilder v9 = v6.append(v5);
	String v10 = v6.toString();
	int v11 = Slog.w(""RecoverySystemService"", v10);
	RecoverySystemService$RebootPreparationError v11 = new RecoverySystemService$RebootPreparationError(5000,v5);
	return v11;
}
-----
depth : 2
public void reportMetricsOnRebootWithLskf(String p1, boolean p2, RecoverySystemService$RebootPreparationError p3){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	boolean v2 = p0.useServerBasedRoR();
	int v3 = this.mCallerPreparedForReboot.size();
	long v4 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v5 = this.mInjector.getMetricsPrefs();
	long v6 = v5.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(p1);
	StringBuilder v9 = v6.append(""_request_lskf_count"");
	String v10 = v6.toString();
	int v11 = v5.getInt(v10, -1);
	int v12 = v5.getInt(""lskf_captured_count"", -1);
	Object v12 = new Object(5);
	Integer v13 = Integer.valueOf(v3);
	Integer v14 = Integer.valueOf(v11);
	Integer v15 = Integer.valueOf(v12);
	Integer v16 = Integer.valueOf(phiInstruction);
	String v17 = String.format(""Reporting reboot with lskf, package name %s, client count %d, request count %d, lskf captured count %d, duration since lskf captured %d seconds."", v12);
	int v18 = Slog.i(""RecoverySystemService"", v17);
	int v19 = p3.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v19, v1, v3, v11, p2, v2, phiInstruction, v12);
	return;
}
-----
depth : 2
public void clearRoRPreparationStateOnRebootFailure(RecoverySystemService$RebootPreparationError p1){
	Integer v1 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v2 = this.FATAL_ARM_ESCROW_ERRORS.contains(v1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Clearing resume on reboot states for all clients on arm escrow error: "");
	StringBuilder v5 = v2.append(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	String v6 = v2.toString();
	int v7 = Slog.w(""RecoverySystemService"", v6);
	p0.clearRoRPreparationState();
	return;
}
-----
depth : 2
public RecoverySystemService$PreferencesManager getMetricsPrefs(){
	return this.mPrefs;
}
-----
depth : 2
public void deletePrefsFile(){
	boolean v1 = this.mMetricsPrefsFile.delete();
	return;
}
-----
depth : 2
public PowerManager getPowerManager(){
	Object v1 = this.mContext.getSystemService(""power"");
	return v1;
}
-----
","public int rebootWithLskfAssumeSlotSwitch(String p1, String p2){
	boolean v4 = RecoverySystemService.isLskfCaptured(p1);
	boolean v5 = RecoverySystemService.verifySlotForNextBoot(p3);
	long v6 = Binder.clearCallingIdentity();
	LockSettingsInternal v7 = this.mInjector.getLockSettingsService();
	int v8 = v7.armRebootEscrow();
	Binder.restoreCallingIdentity(v6);
	RecoverySystemService$RebootPreparationError v16 = new RecoverySystemService$RebootPreparationError(5000,v8);
	RecoverySystemService$RebootPreparationError v3 = v16;
	int v19 = this.mInjector.getUidFromPackageName(p1);
	boolean v20 = RecoverySystemService.useServerBasedRoR();
	int v21 = this.mCallerPreparedForReboot.size();
	long v22 = this.mInjector.getCurrentTimeMillis();
	RecoverySystemService$PreferencesManager v23 = this.mInjector.getMetricsPrefs();
	long v24 = v23.getLong(""lskf_captured_timestamp"", -1);
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append(p1);
	StringBuilder v28 = v25.append(""_request_lskf_count"");
	String v29 = v25.toString();
	int v30 = v23.getInt(v29, -1);
	int v31 = v23.getInt(""lskf_captured_count"", -1);
	Integer v33 = Integer.valueOf(v21);
	Integer v34 = Integer.valueOf(v30);
	Integer v35 = Integer.valueOf(v31);
	Integer v36 = Integer.valueOf(phiInstruction);
	int v39 = v3.getErrorCodeForMetrics();
	this.mInjector.reportRebootEscrowRebootMetrics(v39, v19, v21, v30, p3, v20, phiInstruction, v31);
	Integer v42 = Integer.valueOf(RecoverySystemService$RebootPreparationError.mProviderErrorCode);
	boolean v43 = this.FATAL_ARM_ESCROW_ERRORS.contains(v42);
	RecoverySystemService.clearRoRPreparationState();
	RecoverySystemService$PreferencesManager v51 = this.mPrefs;
	boolean v53 = this.mMetricsPrefsFile.delete();
	Object v55 = this.mContext.getSystemService(""power"");
	PowerManager v54 = v55;
	v54.reboot(p2);
	int v2 = 1000;
	return v2;
}
","SYS_OR_SIG"

"Lcom/android/server/recoverysystem/RecoverySystemService","allocateSpaceForUpdate(Ljava/lang/String;)Z","0","3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @5 exception:6,
8 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isUpdatableApexSupported()Z > @8 exception:7,
conditional branch(ne, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @23 exception:11,
14 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, getCompressedApexInfoList(Ljava/lang/String;)Landroid/apex/CompressedApexInfoList; > 2 @27 exception:13,
conditional branch(ne, to iindex=-1) 14,5,
28 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 10,26 @35 exception:27,
33 = getCaughtException ,
36 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,34,33 @58 exception:35,
goto (from iindex= 31 to iindex = 5),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @66 exception:41,
return 5,","depth : 0
public boolean allocateSpaceForUpdate(String p1){
	boolean v2 = RecoverySystemService.isUpdatableApexSupported();
	long v3 = Binder.clearCallingIdentity();
	CompressedApexInfoList v4 = RecoverySystemService.getCompressedApexInfoList(p1);
	int v5 = Log.i(""RecoverySystemService"", ""apex_info.pb not present in OTA package. Assuming device doesn't support compressedAPEX, continueing without allocating space."");
	int v6 = Slog.e(""RecoverySystemService"", ""Failed to reserve space for compressed apex: "", caughtException);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
","public boolean allocateSpaceForUpdate(String p1){
	boolean v2 = RecoverySystemService.isUpdatableApexSupported();
	long v3 = Binder.clearCallingIdentity();
	CompressedApexInfoList v4 = RecoverySystemService.getCompressedApexInfoList(p1);
	int v5 = Log.i(""RecoverySystemService"", ""apex_info.pb not present in OTA package. Assuming device doesn't support compressedAPEX, continueing without allocating space."");
	Binder.restoreCallingIdentity(v3);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","allocateSpaceForUpdate(Ljava/lang/String;)Z","1","3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @5 exception:6,
8 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isUpdatableApexSupported()Z > @8 exception:7,
2 = invokestatic < Application, Landroid/sysprop/ApexProperties, updatable()Ljava/util/Optional; > @0 exception:1,
3 = getstatic < Application, Ljava/lang/Boolean, FALSE, <Application,Ljava/lang/Boolean> >,
5 = invokevirtual < Application, Ljava/util/Optional, orElse(Ljava/lang/Object;)Ljava/lang/Object; > 2,3 @6 exception:4,
6 = checkcast <Application,Ljava/lang/Boolean>5 <Application,Ljava/lang/Boolean>,
8 = invokevirtual < Application, Ljava/lang/Boolean, booleanValue()Z > 6 @12 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @23 exception:11,
14 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, getCompressedApexInfoList(Ljava/lang/String;)Landroid/apex/CompressedApexInfoList; > 2 @27 exception:13,
3 = new <Application,Ljava/util/zip/ZipFile>@2,
invokespecial < Application, Ljava/util/zip/ZipFile, <init>(Ljava/lang/String;)V > 3,1 @4 exception:4,
7 = invokevirtual < Application, Ljava/util/zip/ZipFile, getEntry(Ljava/lang/String;)Ljava/util/zip/ZipEntry; > 3,5 @9 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Ljava/util/zip/ZipEntry, getSize()J > 7 @20 exception:9,
12 = binaryop(lt) 10 , 11,
conditional branch(ge, to iindex=-1) 12,8,
32 = invokevirtual < Application, Ljava/util/zip/ZipEntry, getSize()J > 7 @31 exception:31,
34 = binaryop(lt) 32 , 33,
conditional branch(ne, to iindex=-1) 34,8,
111 = new <Application,Landroid/apex/CompressedApexInfoList>@41,
invokespecial < Application, Landroid/apex/CompressedApexInfoList, <init>()V > 111 @43 exception:112,
113 = new <Application,[Landroid/apex/CompressedApexInfo>@478 ,
putfield 111.< Application, Landroid/apex/CompressedApexInfoList, apexInfos, <Application,[Landroid/apex/CompressedApexInfo> > = 113,
invokevirtual < Application, Ljava/util/zip/ZipFile, close()V > 3 @51 exception:129,
return 111,
conditional branch(ne, to iindex=-1) 14,5,
28 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 10,26 @35 exception:27,
33 = getCaughtException ,
36 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,34,33 @58 exception:35,
goto (from iindex= 31 to iindex = 5),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @66 exception:41,
return 5,","depth : 0
public boolean allocateSpaceForUpdate(String p1){
	boolean v2 = RecoverySystemService.isUpdatableApexSupported();
	long v3 = Binder.clearCallingIdentity();
	CompressedApexInfoList v4 = RecoverySystemService.getCompressedApexInfoList(p1);
	int v5 = Log.i(""RecoverySystemService"", ""apex_info.pb not present in OTA package. Assuming device doesn't support compressedAPEX, continueing without allocating space."");
	int v6 = Slog.e(""RecoverySystemService"", ""Failed to reserve space for compressed apex: "", caughtException);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public boolean isUpdatableApexSupported(){
	Optional v1 = ApexProperties.updatable();
	Object v2 = v1.orElse(Boolean.FALSE);
	boolean v3 = v2.booleanValue();
	return v3;
}
-----
depth : 1
public CompressedApexInfoList getCompressedApexInfoList(String p1){
	ZipFile v0 = new ZipFile(p1);
	ZipEntry v2 = v0.getEntry(""apex_info.pb"");
	long v3 = v2.getSize();
	long v4 = v2.getSize();
	CompressedApexInfoList v4 = new CompressedApexInfoList();
	CompressedApexInfo v5 = new CompressedApexInfo(0);
	CompressedApexInfoList.apexInfos = v5;
	v0.close();
	return v4;
}
-----
","public boolean allocateSpaceForUpdate(String p1){
	Optional v3 = ApexProperties.updatable();
	Object v4 = v3.orElse(Boolean.FALSE);
	boolean v5 = v4.booleanValue();
	boolean v2 = v5;
	long v6 = Binder.clearCallingIdentity();
	ZipFile v8 = new ZipFile(p1);
	ZipEntry v10 = v8.getEntry(""apex_info.pb"");
	long v11 = v10.getSize();
	long v12 = v10.getSize();
	CompressedApexInfoList v13 = new CompressedApexInfoList();
	CompressedApexInfo v15 = new CompressedApexInfo(0);
	CompressedApexInfoList.apexInfos = v15;
	v8.close();
	CompressedApexInfoList v7 = v13;
	int v17 = Log.i(""RecoverySystemService"", ""apex_info.pb not present in OTA package. Assuming device doesn't support compressedAPEX, continueing without allocating space."");
	Binder.restoreCallingIdentity(v6);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","allocateSpaceForUpdate(Ljava/lang/String;)Z","1","3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @5 exception:6,
8 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isUpdatableApexSupported()Z > @8 exception:7,
2 = invokestatic < Application, Landroid/sysprop/ApexProperties, updatable()Ljava/util/Optional; > @0 exception:1,
3 = getstatic < Application, Ljava/lang/Boolean, FALSE, <Application,Ljava/lang/Boolean> >,
5 = invokevirtual < Application, Ljava/util/Optional, orElse(Ljava/lang/Object;)Ljava/lang/Object; > 2,3 @6 exception:4,
6 = checkcast <Application,Ljava/lang/Boolean>5 <Application,Ljava/lang/Boolean>,
8 = invokevirtual < Application, Ljava/lang/Boolean, booleanValue()Z > 6 @12 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @23 exception:11,
14 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, getCompressedApexInfoList(Ljava/lang/String;)Landroid/apex/CompressedApexInfoList; > 2 @27 exception:13,
3 = new <Application,Ljava/util/zip/ZipFile>@2,
invokespecial < Application, Ljava/util/zip/ZipFile, <init>(Ljava/lang/String;)V > 3,1 @4 exception:4,
7 = invokevirtual < Application, Ljava/util/zip/ZipFile, getEntry(Ljava/lang/String;)Ljava/util/zip/ZipEntry; > 3,5 @9 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Ljava/util/zip/ZipEntry, getSize()J > 7 @20 exception:9,
12 = binaryop(lt) 10 , 11,
conditional branch(ge, to iindex=-1) 12,8,
32 = invokevirtual < Application, Ljava/util/zip/ZipEntry, getSize()J > 7 @31 exception:31,
34 = binaryop(lt) 32 , 33,
conditional branch(ne, to iindex=-1) 34,8,
111 = new <Application,Landroid/apex/CompressedApexInfoList>@41,
invokespecial < Application, Landroid/apex/CompressedApexInfoList, <init>()V > 111 @43 exception:112,
113 = new <Application,[Landroid/apex/CompressedApexInfo>@478 ,
putfield 111.< Application, Landroid/apex/CompressedApexInfoList, apexInfos, <Application,[Landroid/apex/CompressedApexInfo> > = 113,
invokevirtual < Application, Ljava/util/zip/ZipFile, close()V > 3 @51 exception:129,
return 111,
conditional branch(ne, to iindex=-1) 14,5,
33 = getCaughtException ,
36 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,34,33 @58 exception:35,
goto (from iindex= 31 to iindex = 5),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @66 exception:41,
return 5,","depth : 0
public boolean allocateSpaceForUpdate(String p1){
	boolean v2 = RecoverySystemService.isUpdatableApexSupported();
	long v3 = Binder.clearCallingIdentity();
	CompressedApexInfoList v4 = RecoverySystemService.getCompressedApexInfoList(p1);
	int v5 = Slog.e(""RecoverySystemService"", ""Failed to reserve space for compressed apex: "", caughtException);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public boolean isUpdatableApexSupported(){
	Optional v1 = ApexProperties.updatable();
	Object v2 = v1.orElse(Boolean.FALSE);
	boolean v3 = v2.booleanValue();
	return v3;
}
-----
depth : 1
public CompressedApexInfoList getCompressedApexInfoList(String p1){
	ZipFile v0 = new ZipFile(p1);
	ZipEntry v2 = v0.getEntry(""apex_info.pb"");
	long v3 = v2.getSize();
	long v4 = v2.getSize();
	CompressedApexInfoList v4 = new CompressedApexInfoList();
	CompressedApexInfo v5 = new CompressedApexInfo(0);
	CompressedApexInfoList.apexInfos = v5;
	v0.close();
	return v4;
}
-----
","public boolean allocateSpaceForUpdate(String p1){
	Optional v3 = ApexProperties.updatable();
	Object v4 = v3.orElse(Boolean.FALSE);
	boolean v5 = v4.booleanValue();
	boolean v2 = v5;
	long v6 = Binder.clearCallingIdentity();
	ZipFile v8 = new ZipFile(p1);
	ZipEntry v10 = v8.getEntry(""apex_info.pb"");
	long v11 = v10.getSize();
	long v12 = v10.getSize();
	CompressedApexInfoList v13 = new CompressedApexInfoList();
	CompressedApexInfo v15 = new CompressedApexInfo(0);
	CompressedApexInfoList.apexInfos = v15;
	v8.close();
	CompressedApexInfoList v7 = v13;
	Binder.restoreCallingIdentity(v6);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","allocateSpaceForUpdate(Ljava/lang/String;)Z","2","3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @5 exception:6,
8 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isUpdatableApexSupported()Z > @8 exception:7,
2 = invokestatic < Application, Landroid/sysprop/ApexProperties, updatable()Ljava/util/Optional; > @0 exception:1,
3 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 1 @3 exception:2,
5 = invokestatic < Application, Landroid/sysprop/ApexProperties, tryParseBoolean(Ljava/lang/String;)Ljava/lang/Boolean; > 3 @7 exception:4,
7 = invokestatic < Application, Ljava/util/Optional, ofNullable(Ljava/lang/Object;)Ljava/util/Optional; > 5 @11 exception:6,
return 7,
3 = getstatic < Application, Ljava/lang/Boolean, FALSE, <Application,Ljava/lang/Boolean> >,
5 = invokevirtual < Application, Ljava/util/Optional, orElse(Ljava/lang/Object;)Ljava/lang/Object; > 2,3 @6 exception:4,
6 = checkcast <Application,Ljava/lang/Boolean>5 <Application,Ljava/lang/Boolean>,
8 = invokevirtual < Application, Ljava/lang/Boolean, booleanValue()Z > 6 @12 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @23 exception:11,
14 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, getCompressedApexInfoList(Ljava/lang/String;)Landroid/apex/CompressedApexInfoList; > 2 @27 exception:13,
conditional branch(ne, to iindex=-1) 14,5,
28 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 10,26 @35 exception:27,
33 = getCaughtException ,
36 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,34,33 @58 exception:35,
goto (from iindex= 31 to iindex = 5),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @66 exception:41,
return 5,","depth : 0
public boolean allocateSpaceForUpdate(String p1){
	boolean v2 = RecoverySystemService.isUpdatableApexSupported();
	long v3 = Binder.clearCallingIdentity();
	CompressedApexInfoList v4 = RecoverySystemService.getCompressedApexInfoList(p1);
	int v5 = Log.i(""RecoverySystemService"", ""apex_info.pb not present in OTA package. Assuming device doesn't support compressedAPEX, continueing without allocating space."");
	int v6 = Slog.e(""RecoverySystemService"", ""Failed to reserve space for compressed apex: "", caughtException);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public boolean isUpdatableApexSupported(){
	Optional v1 = ApexProperties.updatable();
	Object v2 = v1.orElse(Boolean.FALSE);
	boolean v3 = v2.booleanValue();
	return v3;
}
-----
depth : 2
public Optional updatable(){
	String v1 = SystemProperties.get(""ro.apex.updatable"");
	Boolean v2 = ApexProperties.tryParseBoolean(v1);
	Optional v3 = Optional.ofNullable(v2);
	return v3;
}
-----
","public boolean allocateSpaceForUpdate(String p1){
	String v4 = SystemProperties.get(""ro.apex.updatable"");
	Boolean v5 = ApexProperties.tryParseBoolean(v4);
	Optional v6 = Optional.ofNullable(v5);
	Optional v3 = v6;
	Object v7 = v3.orElse(Boolean.FALSE);
	boolean v8 = v7.booleanValue();
	boolean v2 = v8;
	long v9 = Binder.clearCallingIdentity();
	CompressedApexInfoList v10 = RecoverySystemService.getCompressedApexInfoList(p1);
	int v11 = Log.i(""RecoverySystemService"", ""apex_info.pb not present in OTA package. Assuming device doesn't support compressedAPEX, continueing without allocating space."");
	Binder.restoreCallingIdentity(v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","allocateSpaceForUpdate(Ljava/lang/String;)Z","2","3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @5 exception:6,
8 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isUpdatableApexSupported()Z > @8 exception:7,
2 = invokestatic < Application, Landroid/sysprop/ApexProperties, updatable()Ljava/util/Optional; > @0 exception:1,
3 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 1 @3 exception:2,
5 = invokestatic < Application, Landroid/sysprop/ApexProperties, tryParseBoolean(Ljava/lang/String;)Ljava/lang/Boolean; > 3 @7 exception:4,
7 = invokestatic < Application, Ljava/util/Optional, ofNullable(Ljava/lang/Object;)Ljava/util/Optional; > 5 @11 exception:6,
return 7,
3 = getstatic < Application, Ljava/lang/Boolean, FALSE, <Application,Ljava/lang/Boolean> >,
5 = invokevirtual < Application, Ljava/util/Optional, orElse(Ljava/lang/Object;)Ljava/lang/Object; > 2,3 @6 exception:4,
6 = checkcast <Application,Ljava/lang/Boolean>5 <Application,Ljava/lang/Boolean>,
8 = invokevirtual < Application, Ljava/lang/Boolean, booleanValue()Z > 6 @12 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @23 exception:11,
14 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, getCompressedApexInfoList(Ljava/lang/String;)Landroid/apex/CompressedApexInfoList; > 2 @27 exception:13,
conditional branch(ne, to iindex=-1) 14,5,
33 = getCaughtException ,
36 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,34,33 @58 exception:35,
goto (from iindex= 31 to iindex = 5),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @66 exception:41,
return 5,","depth : 0
public boolean allocateSpaceForUpdate(String p1){
	boolean v2 = RecoverySystemService.isUpdatableApexSupported();
	long v3 = Binder.clearCallingIdentity();
	CompressedApexInfoList v4 = RecoverySystemService.getCompressedApexInfoList(p1);
	int v5 = Slog.e(""RecoverySystemService"", ""Failed to reserve space for compressed apex: "", caughtException);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public boolean isUpdatableApexSupported(){
	Optional v1 = ApexProperties.updatable();
	Object v2 = v1.orElse(Boolean.FALSE);
	boolean v3 = v2.booleanValue();
	return v3;
}
-----
depth : 2
public Optional updatable(){
	String v1 = SystemProperties.get(""ro.apex.updatable"");
	Boolean v2 = ApexProperties.tryParseBoolean(v1);
	Optional v3 = Optional.ofNullable(v2);
	return v3;
}
-----
","public boolean allocateSpaceForUpdate(String p1){
	String v4 = SystemProperties.get(""ro.apex.updatable"");
	Boolean v5 = ApexProperties.tryParseBoolean(v4);
	Optional v6 = Optional.ofNullable(v5);
	Optional v3 = v6;
	Object v7 = v3.orElse(Boolean.FALSE);
	boolean v8 = v7.booleanValue();
	boolean v2 = v8;
	long v9 = Binder.clearCallingIdentity();
	CompressedApexInfoList v10 = RecoverySystemService.getCompressedApexInfoList(p1);
	Binder.restoreCallingIdentity(v9);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","allocateSpaceForUpdate(Ljava/lang/String;)Z","2","3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 3,4,5 @5 exception:6,
8 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, isUpdatableApexSupported()Z > @8 exception:7,
2 = invokestatic < Application, Landroid/sysprop/ApexProperties, updatable()Ljava/util/Optional; > @0 exception:1,
3 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 1 @3 exception:2,
5 = invokestatic < Application, Landroid/sysprop/ApexProperties, tryParseBoolean(Ljava/lang/String;)Ljava/lang/Boolean; > 3 @7 exception:4,
7 = invokestatic < Application, Ljava/util/Optional, ofNullable(Ljava/lang/Object;)Ljava/util/Optional; > 5 @11 exception:6,
return 7,
3 = getstatic < Application, Ljava/lang/Boolean, FALSE, <Application,Ljava/lang/Boolean> >,
5 = invokevirtual < Application, Ljava/util/Optional, orElse(Ljava/lang/Object;)Ljava/lang/Object; > 2,3 @6 exception:4,
6 = checkcast <Application,Ljava/lang/Boolean>5 <Application,Ljava/lang/Boolean>,
8 = invokevirtual < Application, Ljava/lang/Boolean, booleanValue()Z > 6 @12 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 8,5,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @23 exception:11,
14 = invokestatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, getCompressedApexInfoList(Ljava/lang/String;)Landroid/apex/CompressedApexInfoList; > 2 @27 exception:13,
33 = getCaughtException ,
36 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,34,33 @58 exception:35,
goto (from iindex= 31 to iindex = 5),
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @66 exception:41,
return 5,","depth : 0
public boolean allocateSpaceForUpdate(String p1){
	boolean v2 = RecoverySystemService.isUpdatableApexSupported();
	long v3 = Binder.clearCallingIdentity();
	CompressedApexInfoList v4 = RecoverySystemService.getCompressedApexInfoList(p1);
	int v5 = Slog.e(""RecoverySystemService"", ""Failed to reserve space for compressed apex: "", caughtException);
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public boolean isUpdatableApexSupported(){
	Optional v1 = ApexProperties.updatable();
	Object v2 = v1.orElse(Boolean.FALSE);
	boolean v3 = v2.booleanValue();
	return v3;
}
-----
depth : 2
public Optional updatable(){
	String v1 = SystemProperties.get(""ro.apex.updatable"");
	Boolean v2 = ApexProperties.tryParseBoolean(v1);
	Optional v3 = Optional.ofNullable(v2);
	return v3;
}
-----
","public boolean allocateSpaceForUpdate(String p1){
	String v4 = SystemProperties.get(""ro.apex.updatable"");
	Boolean v5 = ApexProperties.tryParseBoolean(v4);
	Optional v6 = Optional.ofNullable(v5);
	Optional v3 = v6;
	Object v7 = v3.orElse(Boolean.FALSE);
	boolean v8 = v7.booleanValue();
	boolean v2 = v8;
	long v9 = Binder.clearCallingIdentity();
	CompressedApexInfoList v10 = RecoverySystemService.getCompressedApexInfoList(p1);
	Binder.restoreCallingIdentity(v9);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/recoverysystem/RecoverySystemService","uncrypt(Ljava/lang/String;Landroid/os/IRecoverySystemProgressListener;)Z","0","4 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @8 exception:8,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @11 exception:9,
conditional branch(ne, to iindex=-1) 10,7,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, uncryptPackageFileDelete()Z > 11 @29 exception:12,
14 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
16 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileWriter()Ljava/io/FileWriter; > 14 @34 exception:15,
17 = new <Application,Ljava/lang/StringBuilder>@38,
30 = getCaughtException ,
conditional branch(eq, to iindex=-1) 16,7,
invokevirtual < Application, Ljava/io/FileWriter, close()V > 16 @212 exception:31,
32 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Throwable, addSuppressed(Ljava/lang/Throwable;)V > 30,32 @217 exception:33,
throw 30,
43 = getCaughtException ,
45 = new <Application,Ljava/lang/StringBuilder>@224,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 45 @226 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,47 @231 exception:48,
50 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
52 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileName()Ljava/lang/String; > 50 @236 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,52 @240 exception:53,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,55 @245 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 45 @248 exception:58,
61 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 44,59,43 @252 exception:60,
monitorexit 4,
return 7,","depth : 0
public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	boolean v3 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v4 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v4 = new StringBuilder;
	v4.close();
	caughtException.addSuppressed(caughtException);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""IOException when writing """");
	String v9 = this.mInjector.getUncryptPackageFileName();
	StringBuilder v10 = v6.append(v9);
	StringBuilder v11 = v6.append("""":"");
	String v12 = v6.toString();
	int v13 = Slog.e(""RecoverySystemService"", v12, caughtException);
	return 0;
}
-----
","public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	boolean v3 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v4 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v5 = new StringBuilder;
	v4.close();
	caughtException.addSuppressed(caughtException);
	String v11 = this.mInjector.getUncryptPackageFileName();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","uncrypt(Ljava/lang/String;Landroid/os/IRecoverySystemProgressListener;)Z","1","4 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @8 exception:8,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @11 exception:9,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 27 to iindex = 3),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 10,7,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, uncryptPackageFileDelete()Z > 11 @29 exception:12,
2 = getstatic < Application, Landroid/os/RecoverySystem, UNCRYPT_PACKAGE_FILE, <Application,Ljava/io/File> >,
4 = invokevirtual < Application, Ljava/io/File, delete()Z > 2 @2 exception:3,
return 4,
14 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
16 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileWriter()Ljava/io/FileWriter; > 14 @34 exception:15,
2 = new <Application,Ljava/io/FileWriter>@0,
3 = getstatic < Application, Landroid/os/RecoverySystem, UNCRYPT_PACKAGE_FILE, <Application,Ljava/io/File> >,
invokespecial < Application, Ljava/io/FileWriter, <init>(Ljava/io/File;)V > 2,3 @4 exception:4,
return 2,
17 = new <Application,Ljava/lang/StringBuilder>@38,
30 = getCaughtException ,
conditional branch(eq, to iindex=-1) 16,7,
invokevirtual < Application, Ljava/io/FileWriter, close()V > 16 @212 exception:31,
32 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Throwable, addSuppressed(Ljava/lang/Throwable;)V > 30,32 @217 exception:33,
throw 30,
43 = getCaughtException ,
45 = new <Application,Ljava/lang/StringBuilder>@224,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 45 @226 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,47 @231 exception:48,
50 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
52 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileName()Ljava/lang/String; > 50 @236 exception:51,
2 = getstatic < Application, Landroid/os/RecoverySystem, UNCRYPT_PACKAGE_FILE, <Application,Ljava/io/File> >,
4 = invokevirtual < Application, Ljava/io/File, getName()Ljava/lang/String; > 2 @2 exception:3,
return 4,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,52 @240 exception:53,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,55 @245 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 45 @248 exception:58,
61 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 44,59,43 @252 exception:60,
monitorexit 4,
return 7,","depth : 0
public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	boolean v3 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v4 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v4 = new StringBuilder;
	v4.close();
	caughtException.addSuppressed(caughtException);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""IOException when writing """");
	String v9 = this.mInjector.getUncryptPackageFileName();
	StringBuilder v10 = v6.append(v9);
	StringBuilder v11 = v6.append("""":"");
	String v12 = v6.toString();
	int v13 = Slog.e(""RecoverySystemService"", v12, caughtException);
	return 0;
}
-----
depth : 1
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 1
public boolean uncryptPackageFileDelete(){
	boolean v1 = RecoverySystem.UNCRYPT_PACKAGE_FILE.delete();
	return v1;
}
-----
depth : 1
public FileWriter getUncryptPackageFileWriter(){
	FileWriter v0 = new FileWriter(RecoverySystem.UNCRYPT_PACKAGE_FILE);
	return v0;
}
-----
depth : 1
public String getUncryptPackageFileName(){
	String v1 = RecoverySystem.UNCRYPT_PACKAGE_FILE.getName();
	return v1;
}
-----
","public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v4 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v5 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v6 = ""running"".equals(v3);
	boolean v7 = ""running"".equals(v4);
	boolean v8 = ""running"".equals(v5);
	boolean v2 = 1;
	boolean v10 = RecoverySystem.UNCRYPT_PACKAGE_FILE.delete();
	boolean v9 = v10;
	FileWriter v12 = new FileWriter(RecoverySystem.UNCRYPT_PACKAGE_FILE);
	FileWriter v11 = v12;
	StringBuilder v14 = new StringBuilder;
	v11.close();
	caughtException.addSuppressed(caughtException);
	String v21 = RecoverySystem.UNCRYPT_PACKAGE_FILE.getName();
	String v20 = v21;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","uncrypt(Ljava/lang/String;Landroid/os/IRecoverySystemProgressListener;)Z","1","4 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @8 exception:8,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @11 exception:9,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 27 to iindex = 3),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 10,7,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, uncryptPackageFileDelete()Z > 11 @29 exception:12,
2 = getstatic < Application, Landroid/os/RecoverySystem, UNCRYPT_PACKAGE_FILE, <Application,Ljava/io/File> >,
4 = invokevirtual < Application, Ljava/io/File, delete()Z > 2 @2 exception:3,
return 4,
14 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
16 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileWriter()Ljava/io/FileWriter; > 14 @34 exception:15,
2 = new <Application,Ljava/io/FileWriter>@0,
3 = getstatic < Application, Landroid/os/RecoverySystem, UNCRYPT_PACKAGE_FILE, <Application,Ljava/io/File> >,
invokespecial < Application, Ljava/io/FileWriter, <init>(Ljava/io/File;)V > 2,3 @4 exception:4,
return 2,
17 = new <Application,Ljava/lang/StringBuilder>@38,
30 = getCaughtException ,
conditional branch(eq, to iindex=-1) 16,7,
invokevirtual < Application, Ljava/io/FileWriter, close()V > 16 @212 exception:31,
32 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Throwable, addSuppressed(Ljava/lang/Throwable;)V > 30,32 @217 exception:33,
43 = getCaughtException ,
45 = new <Application,Ljava/lang/StringBuilder>@224,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 45 @226 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,47 @231 exception:48,
50 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
52 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileName()Ljava/lang/String; > 50 @236 exception:51,
2 = getstatic < Application, Landroid/os/RecoverySystem, UNCRYPT_PACKAGE_FILE, <Application,Ljava/io/File> >,
4 = invokevirtual < Application, Ljava/io/File, getName()Ljava/lang/String; > 2 @2 exception:3,
return 4,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,52 @240 exception:53,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,55 @245 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 45 @248 exception:58,
61 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 44,59,43 @252 exception:60,
monitorexit 4,
return 7,","depth : 0
public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	boolean v3 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v4 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v4 = new StringBuilder;
	v4.close();
	caughtException.addSuppressed(caughtException);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""IOException when writing """");
	String v9 = this.mInjector.getUncryptPackageFileName();
	StringBuilder v10 = v6.append(v9);
	StringBuilder v11 = v6.append("""":"");
	String v12 = v6.toString();
	int v13 = Slog.e(""RecoverySystemService"", v12, caughtException);
	return 0;
}
-----
depth : 1
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 1
public boolean uncryptPackageFileDelete(){
	boolean v1 = RecoverySystem.UNCRYPT_PACKAGE_FILE.delete();
	return v1;
}
-----
depth : 1
public FileWriter getUncryptPackageFileWriter(){
	FileWriter v0 = new FileWriter(RecoverySystem.UNCRYPT_PACKAGE_FILE);
	return v0;
}
-----
depth : 1
public String getUncryptPackageFileName(){
	String v1 = RecoverySystem.UNCRYPT_PACKAGE_FILE.getName();
	return v1;
}
-----
","public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v4 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v5 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v6 = ""running"".equals(v3);
	boolean v7 = ""running"".equals(v4);
	boolean v8 = ""running"".equals(v5);
	boolean v2 = 1;
	boolean v10 = RecoverySystem.UNCRYPT_PACKAGE_FILE.delete();
	boolean v9 = v10;
	FileWriter v12 = new FileWriter(RecoverySystem.UNCRYPT_PACKAGE_FILE);
	FileWriter v11 = v12;
	StringBuilder v14 = new StringBuilder;
	v11.close();
	caughtException.addSuppressed(caughtException);
	String v21 = RecoverySystem.UNCRYPT_PACKAGE_FILE.getName();
	String v20 = v21;
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","uncrypt(Ljava/lang/String;Landroid/os/IRecoverySystemProgressListener;)Z","2","4 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @8 exception:8,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @11 exception:9,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
4 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 2 @0 exception:3,
return 4,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
4 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 2 @0 exception:3,
return 4,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
4 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 2 @0 exception:3,
return 4,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 27 to iindex = 3),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 10,7,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, uncryptPackageFileDelete()Z > 11 @29 exception:12,
14 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
16 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileWriter()Ljava/io/FileWriter; > 14 @34 exception:15,
17 = new <Application,Ljava/lang/StringBuilder>@38,
30 = getCaughtException ,
conditional branch(eq, to iindex=-1) 16,7,
invokevirtual < Application, Ljava/io/FileWriter, close()V > 16 @212 exception:31,
32 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Throwable, addSuppressed(Ljava/lang/Throwable;)V > 30,32 @217 exception:33,
throw 30,
43 = getCaughtException ,
45 = new <Application,Ljava/lang/StringBuilder>@224,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 45 @226 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,47 @231 exception:48,
50 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
52 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileName()Ljava/lang/String; > 50 @236 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,52 @240 exception:53,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,55 @245 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 45 @248 exception:58,
61 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 44,59,43 @252 exception:60,
monitorexit 4,
return 7,","depth : 0
public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	boolean v3 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v4 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v4 = new StringBuilder;
	v4.close();
	caughtException.addSuppressed(caughtException);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""IOException when writing """");
	String v9 = this.mInjector.getUncryptPackageFileName();
	StringBuilder v10 = v6.append(v9);
	StringBuilder v11 = v6.append("""":"");
	String v12 = v6.toString();
	int v13 = Slog.e(""RecoverySystemService"", v12, caughtException);
	return 0;
}
-----
depth : 1
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public String systemPropertiesGet(String p1){
	String v1 = SystemProperties.get(p1);
	return v1;
}
-----
depth : 2
public String systemPropertiesGet(String p1){
	String v1 = SystemProperties.get(p1);
	return v1;
}
-----
depth : 2
public String systemPropertiesGet(String p1){
	String v1 = SystemProperties.get(p1);
	return v1;
}
-----
","public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	String v4 = SystemProperties.get(""init.svc.uncrypt"");
	String v3 = v4;
	String v6 = SystemProperties.get(""init.svc.setup-bcb"");
	String v5 = v6;
	String v8 = SystemProperties.get(""init.svc.clear-bcb"");
	String v7 = v8;
	boolean v9 = ""running"".equals(v3);
	boolean v10 = ""running"".equals(v5);
	boolean v11 = ""running"".equals(v7);
	boolean v2 = 1;
	boolean v12 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v13 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v14 = new StringBuilder;
	v13.close();
	caughtException.addSuppressed(caughtException);
	String v20 = this.mInjector.getUncryptPackageFileName();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","uncrypt(Ljava/lang/String;Landroid/os/IRecoverySystemProgressListener;)Z","2","4 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @8 exception:8,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @11 exception:9,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
4 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 2 @0 exception:3,
return 4,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
4 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 2 @0 exception:3,
return 4,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
4 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 2 @0 exception:3,
return 4,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 29 to iindex = 2),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 10,7,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, uncryptPackageFileDelete()Z > 11 @29 exception:12,
14 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
16 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileWriter()Ljava/io/FileWriter; > 14 @34 exception:15,
17 = new <Application,Ljava/lang/StringBuilder>@38,
30 = getCaughtException ,
conditional branch(eq, to iindex=-1) 16,7,
invokevirtual < Application, Ljava/io/FileWriter, close()V > 16 @212 exception:31,
32 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Throwable, addSuppressed(Ljava/lang/Throwable;)V > 30,32 @217 exception:33,
throw 30,
43 = getCaughtException ,
45 = new <Application,Ljava/lang/StringBuilder>@224,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 45 @226 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,47 @231 exception:48,
50 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
52 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileName()Ljava/lang/String; > 50 @236 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,52 @240 exception:53,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,55 @245 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 45 @248 exception:58,
61 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 44,59,43 @252 exception:60,
monitorexit 4,
return 7,","depth : 0
public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	boolean v3 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v4 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v4 = new StringBuilder;
	v4.close();
	caughtException.addSuppressed(caughtException);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""IOException when writing """");
	String v9 = this.mInjector.getUncryptPackageFileName();
	StringBuilder v10 = v6.append(v9);
	StringBuilder v11 = v6.append("""":"");
	String v12 = v6.toString();
	int v13 = Slog.e(""RecoverySystemService"", v12, caughtException);
	return 0;
}
-----
depth : 1
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public String systemPropertiesGet(String p1){
	String v1 = SystemProperties.get(p1);
	return v1;
}
-----
depth : 2
public String systemPropertiesGet(String p1){
	String v1 = SystemProperties.get(p1);
	return v1;
}
-----
depth : 2
public String systemPropertiesGet(String p1){
	String v1 = SystemProperties.get(p1);
	return v1;
}
-----
","public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	String v4 = SystemProperties.get(""init.svc.uncrypt"");
	String v3 = v4;
	String v6 = SystemProperties.get(""init.svc.setup-bcb"");
	String v5 = v6;
	String v8 = SystemProperties.get(""init.svc.clear-bcb"");
	String v7 = v8;
	boolean v9 = ""running"".equals(v3);
	boolean v10 = ""running"".equals(v5);
	boolean v11 = ""running"".equals(v7);
	boolean v2 = 1;
	boolean v12 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v13 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v14 = new StringBuilder;
	v13.close();
	caughtException.addSuppressed(caughtException);
	String v20 = this.mInjector.getUncryptPackageFileName();
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","uncrypt(Ljava/lang/String;Landroid/os/IRecoverySystemProgressListener;)Z","2","4 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 5,6,7 @8 exception:8,
10 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @11 exception:9,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
4 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 2 @0 exception:3,
return 4,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
4 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 2 @0 exception:3,
return 4,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
4 = invokestatic < Application, Landroid/os/SystemProperties, get(Ljava/lang/String;)Ljava/lang/String; > 2 @0 exception:3,
return 4,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 27 to iindex = 3),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 10,7,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
13 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, uncryptPackageFileDelete()Z > 11 @29 exception:12,
14 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
16 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileWriter()Ljava/io/FileWriter; > 14 @34 exception:15,
17 = new <Application,Ljava/lang/StringBuilder>@38,
30 = getCaughtException ,
conditional branch(eq, to iindex=-1) 16,7,
invokevirtual < Application, Ljava/io/FileWriter, close()V > 16 @212 exception:31,
32 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Throwable, addSuppressed(Ljava/lang/Throwable;)V > 30,32 @217 exception:33,
43 = getCaughtException ,
45 = new <Application,Ljava/lang/StringBuilder>@224,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 45 @226 exception:46,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,47 @231 exception:48,
50 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
52 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUncryptPackageFileName()Ljava/lang/String; > 50 @236 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,52 @240 exception:53,
57 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 45,55 @245 exception:56,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 45 @248 exception:58,
61 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 44,59,43 @252 exception:60,
monitorexit 4,
return 7,","depth : 0
public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	boolean v3 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v4 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v4 = new StringBuilder;
	v4.close();
	caughtException.addSuppressed(caughtException);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""IOException when writing """");
	String v9 = this.mInjector.getUncryptPackageFileName();
	StringBuilder v10 = v6.append(v9);
	StringBuilder v11 = v6.append("""":"");
	String v12 = v6.toString();
	int v13 = Slog.e(""RecoverySystemService"", v12, caughtException);
	return 0;
}
-----
depth : 1
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public String systemPropertiesGet(String p1){
	String v1 = SystemProperties.get(p1);
	return v1;
}
-----
depth : 2
public String systemPropertiesGet(String p1){
	String v1 = SystemProperties.get(p1);
	return v1;
}
-----
depth : 2
public String systemPropertiesGet(String p1){
	String v1 = SystemProperties.get(p1);
	return v1;
}
-----
","public boolean uncrypt(String p1, IRecoverySystemProgressListener p2){
	String v4 = SystemProperties.get(""init.svc.uncrypt"");
	String v3 = v4;
	String v6 = SystemProperties.get(""init.svc.setup-bcb"");
	String v5 = v6;
	String v8 = SystemProperties.get(""init.svc.clear-bcb"");
	String v7 = v8;
	boolean v9 = ""running"".equals(v3);
	boolean v10 = ""running"".equals(v5);
	boolean v11 = ""running"".equals(v7);
	boolean v2 = 1;
	boolean v12 = this.mInjector.uncryptPackageFileDelete();
	FileWriter v13 = this.mInjector.getUncryptPackageFileWriter();
	StringBuilder v14 = new StringBuilder;
	v13.close();
	caughtException.addSuppressed(caughtException);
	String v20 = this.mInjector.getUncryptPackageFileName();
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/recoverysystem/RecoverySystemService","clearLskf(Ljava/lang/String;)Z","0","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:3,
conditional branch(ne, to iindex=-1) 2,4,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnClear(Ljava/lang/String;)I > 1,2 @14 exception:6,
conditional branch(eq, to iindex=-1) 7,4,
conditional branch(eq, to iindex=-1) 7,8,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @50 exception:20,
22 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
24 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 22 @56 exception:23,
conditional branch(ne, to iindex=-1) 24,4,
30 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 5,28 @64 exception:29,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @67 exception:36,
return 4,","depth : 0
public boolean clearLskf(String p1){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnClear(p1);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	int v5 = Slog.e(""RecoverySystemService"", ""Failed to get lock settings service, skipping clearRebootEscrow"");
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
","public boolean clearLskf(String p1){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnClear(p1);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	Binder.restoreCallingIdentity(v3);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","clearLskf(Ljava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
conditional branch(ne, to iindex=-1) 2,4,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnClear(Ljava/lang/String;)I > 1,2 @14 exception:6,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
5 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 3,2 @3 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 7,2 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,6,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
15 = invokevirtual < Application, Landroid/util/ArrayMap, remove(Ljava/lang/Object;)Ljava/lang/Object; > 13,2 @44 exception:14,
16 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
18 = invokevirtual < Application, Landroid/util/ArraySet, remove(Ljava/lang/Object;)Z > 16,2 @49 exception:17,
19 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
21 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 19 @54 exception:20,
conditional branch(eq, to iindex=-1) 21,6,
23 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
25 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 23 @63 exception:24,
conditional branch(eq, to iindex=-1) 25,6,
26 = phi  6,6,22,
conditional branch(eq, to iindex=-1) 26,6,
goto (from iindex= 36 to iindex = 2),
31 = phi  22,30,
monitorexit 1,
return 31,
conditional branch(eq, to iindex=-1) 7,4,
conditional branch(eq, to iindex=-1) 7,8,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @50 exception:20,
22 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
24 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 22 @56 exception:23,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 24,4,
30 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 5,28 @64 exception:29,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @67 exception:36,
return 4,","depth : 0
public boolean clearLskf(String p1){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnClear(p1);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	int v5 = Slog.e(""RecoverySystemService"", ""Failed to get lock settings service, skipping clearRebootEscrow"");
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnClear(String p1){
	boolean v1 = this.mCallerPreparedForReboot.contains(p1);
	boolean v2 = this.mCallerPendingRequest.containsKey(p1);
	Object v3 = this.mCallerPendingRequest.remove(p1);
	boolean v4 = this.mCallerPreparedForReboot.remove(p1);
	boolean v5 = this.mCallerPendingRequest.isEmpty();
	boolean v6 = this.mCallerPreparedForReboot.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
","public boolean clearLskf(String p1){
	boolean v5 = this.mCallerPreparedForReboot.contains(p1);
	boolean v6 = this.mCallerPendingRequest.containsKey(p1);
	Object v7 = this.mCallerPendingRequest.remove(p1);
	boolean v8 = this.mCallerPreparedForReboot.remove(p1);
	boolean v9 = this.mCallerPendingRequest.isEmpty();
	boolean v10 = this.mCallerPreparedForReboot.isEmpty();
	int v4 = phiInstruction;
	long v11 = Binder.clearCallingIdentity();
	Object v13 = LocalServices.getService(LockSettingsInterna.class);
	LockSettingsInternal v12 = v13;
	Binder.restoreCallingIdentity(v11);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","clearLskf(Ljava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
conditional branch(ne, to iindex=-1) 2,4,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnClear(Ljava/lang/String;)I > 1,2 @14 exception:6,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
5 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 3,2 @3 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 7,2 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,6,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
15 = invokevirtual < Application, Landroid/util/ArrayMap, remove(Ljava/lang/Object;)Ljava/lang/Object; > 13,2 @44 exception:14,
16 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
18 = invokevirtual < Application, Landroid/util/ArraySet, remove(Ljava/lang/Object;)Z > 16,2 @49 exception:17,
19 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
21 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 19 @54 exception:20,
conditional branch(eq, to iindex=-1) 21,6,
23 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
25 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 23 @63 exception:24,
conditional branch(eq, to iindex=-1) 25,6,
26 = phi  6,6,22,
conditional branch(eq, to iindex=-1) 26,6,
goto (from iindex= 36 to iindex = 2),
31 = phi  22,30,
monitorexit 1,
return 31,
conditional branch(eq, to iindex=-1) 7,4,
conditional branch(eq, to iindex=-1) 7,8,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @50 exception:20,
22 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
24 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 22 @56 exception:23,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 24,4,
26 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, clearRebootEscrow()Z > 24 @71 exception:25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @75 exception:27,
return 26,","depth : 0
public boolean clearLskf(String p1){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnClear(p1);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	boolean v5 = v4.clearRebootEscrow();
	Binder.restoreCallingIdentity(v3);
	return v5;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnClear(String p1){
	boolean v1 = this.mCallerPreparedForReboot.contains(p1);
	boolean v2 = this.mCallerPendingRequest.containsKey(p1);
	Object v3 = this.mCallerPendingRequest.remove(p1);
	boolean v4 = this.mCallerPreparedForReboot.remove(p1);
	boolean v5 = this.mCallerPendingRequest.isEmpty();
	boolean v6 = this.mCallerPreparedForReboot.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
","public boolean clearLskf(String p1){
	boolean v5 = this.mCallerPreparedForReboot.contains(p1);
	boolean v6 = this.mCallerPendingRequest.containsKey(p1);
	Object v7 = this.mCallerPendingRequest.remove(p1);
	boolean v8 = this.mCallerPreparedForReboot.remove(p1);
	boolean v9 = this.mCallerPendingRequest.isEmpty();
	boolean v10 = this.mCallerPreparedForReboot.isEmpty();
	int v4 = phiInstruction;
	long v11 = Binder.clearCallingIdentity();
	Object v13 = LocalServices.getService(LockSettingsInterna.class);
	LockSettingsInternal v12 = v13;
	boolean v14 = v12.clearRebootEscrow();
	Binder.restoreCallingIdentity(v11);
	return v14;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","clearLskf(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
conditional branch(ne, to iindex=-1) 2,4,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnClear(Ljava/lang/String;)I > 1,2 @14 exception:6,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
5 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 3,2 @3 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 7,2 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,6,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
15 = invokevirtual < Application, Landroid/util/ArrayMap, remove(Ljava/lang/Object;)Ljava/lang/Object; > 13,2 @44 exception:14,
16 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
18 = invokevirtual < Application, Landroid/util/ArraySet, remove(Ljava/lang/Object;)Z > 16,2 @49 exception:17,
19 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
21 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 19 @54 exception:20,
conditional branch(eq, to iindex=-1) 21,6,
23 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
25 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 23 @63 exception:24,
conditional branch(eq, to iindex=-1) 25,6,
26 = phi  6,6,22,
conditional branch(eq, to iindex=-1) 26,6,
goto (from iindex= 36 to iindex = 2),
31 = phi  22,30,
monitorexit 1,
return 31,
conditional branch(eq, to iindex=-1) 7,4,
conditional branch(eq, to iindex=-1) 7,8,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @50 exception:20,
22 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
24 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 22 @56 exception:23,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 24,4,
30 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 5,28 @64 exception:29,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @67 exception:36,
return 4,","depth : 0
public boolean clearLskf(String p1){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnClear(p1);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	int v5 = Slog.e(""RecoverySystemService"", ""Failed to get lock settings service, skipping clearRebootEscrow"");
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnClear(String p1){
	boolean v1 = this.mCallerPreparedForReboot.contains(p1);
	boolean v2 = this.mCallerPendingRequest.containsKey(p1);
	Object v3 = this.mCallerPendingRequest.remove(p1);
	boolean v4 = this.mCallerPreparedForReboot.remove(p1);
	boolean v5 = this.mCallerPendingRequest.isEmpty();
	boolean v6 = this.mCallerPreparedForReboot.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public boolean clearLskf(String p1){
	boolean v5 = this.mCallerPreparedForReboot.contains(p1);
	boolean v6 = this.mCallerPendingRequest.containsKey(p1);
	Object v7 = this.mCallerPendingRequest.remove(p1);
	boolean v8 = this.mCallerPreparedForReboot.remove(p1);
	boolean v9 = this.mCallerPendingRequest.isEmpty();
	boolean v10 = this.mCallerPreparedForReboot.isEmpty();
	int v4 = phiInstruction;
	long v11 = Binder.clearCallingIdentity();
	Object v14 = this.sLocalServiceObjects.get(LockSettingsInterna.class);
	Object v13 = v14;
	LockSettingsInternal v12 = v13;
	Binder.restoreCallingIdentity(v11);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","clearLskf(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
conditional branch(ne, to iindex=-1) 2,4,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnClear(Ljava/lang/String;)I > 1,2 @14 exception:6,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
5 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 3,2 @3 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 7,2 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,6,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
15 = invokevirtual < Application, Landroid/util/ArrayMap, remove(Ljava/lang/Object;)Ljava/lang/Object; > 13,2 @44 exception:14,
16 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
18 = invokevirtual < Application, Landroid/util/ArraySet, remove(Ljava/lang/Object;)Z > 16,2 @49 exception:17,
19 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
21 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 19 @54 exception:20,
conditional branch(eq, to iindex=-1) 21,6,
23 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
25 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 23 @63 exception:24,
conditional branch(eq, to iindex=-1) 25,6,
26 = phi  6,6,22,
conditional branch(eq, to iindex=-1) 26,6,
goto (from iindex= 36 to iindex = 2),
31 = phi  22,30,
monitorexit 1,
return 31,
conditional branch(eq, to iindex=-1) 7,4,
conditional branch(eq, to iindex=-1) 7,8,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @50 exception:20,
22 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
24 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 22 @56 exception:23,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 24,4,
26 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, clearRebootEscrow()Z > 24 @71 exception:25,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @75 exception:27,
return 26,","depth : 0
public boolean clearLskf(String p1){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnClear(p1);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	boolean v5 = v4.clearRebootEscrow();
	Binder.restoreCallingIdentity(v3);
	return v5;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnClear(String p1){
	boolean v1 = this.mCallerPreparedForReboot.contains(p1);
	boolean v2 = this.mCallerPendingRequest.containsKey(p1);
	Object v3 = this.mCallerPendingRequest.remove(p1);
	boolean v4 = this.mCallerPreparedForReboot.remove(p1);
	boolean v5 = this.mCallerPendingRequest.isEmpty();
	boolean v6 = this.mCallerPreparedForReboot.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public boolean clearLskf(String p1){
	boolean v5 = this.mCallerPreparedForReboot.contains(p1);
	boolean v6 = this.mCallerPendingRequest.containsKey(p1);
	Object v7 = this.mCallerPendingRequest.remove(p1);
	boolean v8 = this.mCallerPreparedForReboot.remove(p1);
	boolean v9 = this.mCallerPendingRequest.isEmpty();
	boolean v10 = this.mCallerPreparedForReboot.isEmpty();
	int v4 = phiInstruction;
	long v11 = Binder.clearCallingIdentity();
	Object v14 = this.sLocalServiceObjects.get(LockSettingsInterna.class);
	Object v13 = v14;
	LockSettingsInternal v12 = v13;
	boolean v15 = v12.clearRebootEscrow();
	Binder.restoreCallingIdentity(v11);
	return v15;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","clearLskf(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
return,
conditional branch(ne, to iindex=-1) 2,4,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnClear(Ljava/lang/String;)I > 1,2 @14 exception:6,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
5 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 3,2 @3 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 7,2 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,6,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
15 = invokevirtual < Application, Landroid/util/ArrayMap, remove(Ljava/lang/Object;)Ljava/lang/Object; > 13,2 @44 exception:14,
16 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
18 = invokevirtual < Application, Landroid/util/ArraySet, remove(Ljava/lang/Object;)Z > 16,2 @49 exception:17,
19 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
21 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 19 @54 exception:20,
conditional branch(eq, to iindex=-1) 21,6,
23 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
25 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 23 @63 exception:24,
conditional branch(eq, to iindex=-1) 25,6,
26 = phi  6,6,22,
conditional branch(eq, to iindex=-1) 26,6,
goto (from iindex= 36 to iindex = 2),
31 = phi  22,30,
monitorexit 1,
return 31,
conditional branch(eq, to iindex=-1) 7,4,
conditional branch(eq, to iindex=-1) 7,8,
21 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @50 exception:20,
22 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
24 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 22 @56 exception:23,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 24,4,
30 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 5,28 @64 exception:29,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 21 @67 exception:36,
return 4,","depth : 0
public boolean clearLskf(String p1){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnClear(p1);
	long v3 = Binder.clearCallingIdentity();
	LockSettingsInternal v4 = this.mInjector.getLockSettingsService();
	int v5 = Slog.e(""RecoverySystemService"", ""Failed to get lock settings service, skipping clearRebootEscrow"");
	Binder.restoreCallingIdentity(v3);
	return 0;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnClear(String p1){
	boolean v1 = this.mCallerPreparedForReboot.contains(p1);
	boolean v2 = this.mCallerPendingRequest.containsKey(p1);
	Object v3 = this.mCallerPendingRequest.remove(p1);
	boolean v4 = this.mCallerPreparedForReboot.remove(p1);
	boolean v5 = this.mCallerPendingRequest.isEmpty();
	boolean v6 = this.mCallerPreparedForReboot.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public boolean clearLskf(String p1){
	boolean v4 = this.mCallerPreparedForReboot.contains(p1);
	boolean v5 = this.mCallerPendingRequest.containsKey(p1);
	Object v6 = this.mCallerPendingRequest.remove(p1);
	boolean v7 = this.mCallerPreparedForReboot.remove(p1);
	boolean v8 = this.mCallerPendingRequest.isEmpty();
	boolean v9 = this.mCallerPreparedForReboot.isEmpty();
	int v3 = phiInstruction;
	long v10 = Binder.clearCallingIdentity();
	Object v13 = this.sLocalServiceObjects.get(LockSettingsInterna.class);
	Object v12 = v13;
	LockSettingsInternal v11 = v12;
	Binder.restoreCallingIdentity(v10);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/recoverysystem/RecoverySystemService","isLskfCaptured(Ljava/lang/String;)Z","0","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:3,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
6 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 4,2 @6 exception:5,
monitorexit 1,
conditional branch(ne, to iindex=-1) 6,11,
14 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 14 @17 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,2 @25 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @28 exception:21,
24 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 13,22 @32 exception:23,
return 11,","depth : 0
public boolean isLskfCaptured(String p1){
	p0.enforcePermissionForResumeOnReboot();
	boolean v2 = this.mCallerPreparedForReboot.contains(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Reboot requested before prepare completed for caller "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.i(""RecoverySystemService"", v6);
	return 0;
}
-----
","public boolean isLskfCaptured(String p1){
	p0.enforcePermissionForResumeOnReboot();
	boolean v2 = this.mCallerPreparedForReboot.contains(p1);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","isLskfCaptured(Ljava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
6 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 4,2 @6 exception:5,
monitorexit 1,
conditional branch(ne, to iindex=-1) 6,11,
14 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 14 @17 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,2 @25 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @28 exception:21,
24 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 13,22 @32 exception:23,
return 11,","depth : 0
public boolean isLskfCaptured(String p1){
	p0.enforcePermissionForResumeOnReboot();
	boolean v2 = this.mCallerPreparedForReboot.contains(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Reboot requested before prepare completed for caller "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.i(""RecoverySystemService"", v6);
	return 0;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
","public boolean isLskfCaptured(String p1){
	boolean v4 = this.mCallerPreparedForReboot.contains(p1);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","isLskfCaptured(Ljava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
return,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
6 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 4,2 @6 exception:5,
monitorexit 1,
conditional branch(ne, to iindex=-1) 6,11,
14 = new <Application,Ljava/lang/StringBuilder>@15,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 14 @17 exception:15,
18 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,16 @22 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 14,2 @25 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 14 @28 exception:21,
24 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 13,22 @32 exception:23,
return 11,","depth : 0
public boolean isLskfCaptured(String p1){
	p0.enforcePermissionForResumeOnReboot();
	boolean v2 = this.mCallerPreparedForReboot.contains(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Reboot requested before prepare completed for caller "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.i(""RecoverySystemService"", v6);
	return 0;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
","public boolean isLskfCaptured(String p1){
	boolean v3 = this.mCallerPreparedForReboot.contains(p1);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/recoverysystem/RecoverySystemService","requestLskf(Ljava/lang/String;Landroid/content/IntentSender;)Z","0","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:4,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnNewRequest(Ljava/lang/String;Landroid/content/IntentSender;)I > 1,2,3 @14 exception:7,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRequestLskf(Ljava/lang/String;I)V > 1,2,8 @18 exception:9,
conditional branch(eq, to iindex=-1) 8,6,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @57 exception:11,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 13 @63 exception:14,
conditional branch(ne, to iindex=-1) 15,6,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, prepareRebootEscrow()Z > 15 @78 exception:16,
conditional branch(ne, to iindex=-1) 17,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationState()V > 1 @84 exception:19,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @87 exception:20,
return 6,","depth : 0
public boolean requestLskf(String p1, IntentSender p2){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnNewRequest(p1, p2);
	p0.reportMetricsOnRequestLskf(p1, v2);
	long v4 = Binder.clearCallingIdentity();
	LockSettingsInternal v5 = this.mInjector.getLockSettingsService();
	boolean v6 = v5.prepareRebootEscrow();
	p0.clearRoRPreparationState();
	Binder.restoreCallingIdentity(v4);
	return 0;
}
-----
","public boolean requestLskf(String p1, IntentSender p2){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnNewRequest(p1, p2);
	p0.reportMetricsOnRequestLskf(p1, v2);
	long v4 = Binder.clearCallingIdentity();
	LockSettingsInternal v5 = this.mInjector.getLockSettingsService();
	boolean v6 = v5.prepareRebootEscrow();
	p0.clearRoRPreparationState();
	Binder.restoreCallingIdentity(v4);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","requestLskf(Ljava/lang/String;Landroid/content/IntentSender;)Z","1","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnNewRequest(Ljava/lang/String;Landroid/content/IntentSender;)I > 1,2,3 @14 exception:7,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
6 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 4 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
10 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 8 @49 exception:9,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
13 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 11,2 @55 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
15 = new <Application,Ljava/lang/StringBuilder>@63,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @65 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @70 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,2 @73 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @76 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 14,23 @80 exception:24,
29 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
31 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 29,2,3 @85 exception:30,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 43 to iindex = 2),
33 = phi  7,32,
monitorexit 1,
return 33,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRequestLskf(Ljava/lang/String;I)V > 1,2,8 @18 exception:9,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 4,2 @2 exception:5,
monitorenter 1,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 7 @9 exception:8,
monitorexit 1,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 15 @16 exception:16,
18 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @22 exception:19,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,2 @25 exception:20,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,22 @30 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @33 exception:25,
27 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
29 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 27 @39 exception:28,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, putLong(Ljava/lang/String;J)V > 17,26,29 @43 exception:30,
31 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 31 @48 exception:32,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,2 @51 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,35 @56 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 31 @59 exception:38,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, incrementIntKey(Ljava/lang/String;I)V > 17,39,40 @64 exception:41,
42 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowPreparationMetrics(III)V > 42,6,3,9 @69 exception:43,
return,
conditional branch(eq, to iindex=-1) 8,6,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @57 exception:11,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 13 @63 exception:14,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 15,6,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, prepareRebootEscrow()Z > 15 @78 exception:16,
conditional branch(ne, to iindex=-1) 17,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationState()V > 1 @84 exception:19,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
invokevirtual < Application, Landroid/util/ArrayMap, clear()V > 2 @3 exception:3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
invokevirtual < Application, Landroid/util/ArraySet, clear()V > 4 @8 exception:5,
monitorexit 1,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @87 exception:20,
return 6,","depth : 0
public boolean requestLskf(String p1, IntentSender p2){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnNewRequest(p1, p2);
	p0.reportMetricsOnRequestLskf(p1, v2);
	long v4 = Binder.clearCallingIdentity();
	LockSettingsInternal v5 = this.mInjector.getLockSettingsService();
	boolean v6 = v5.prepareRebootEscrow();
	p0.clearRoRPreparationState();
	Binder.restoreCallingIdentity(v4);
	return 0;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnNewRequest(String p1, IntentSender p2){
	boolean v1 = this.mCallerPreparedForReboot.isEmpty();
	boolean v2 = this.mCallerPendingRequest.isEmpty();
	boolean v3 = this.mCallerPendingRequest.containsKey(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Duplicate RoR preparation request for "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.i(""RecoverySystemService"", v7);
	Object v9 = this.mCallerPendingRequest.put(p1, p2);
	return phiInstruction;
}
-----
depth : 1
public void reportMetricsOnRequestLskf(String p1, int p2){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	int v2 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v3 = this.mInjector.getMetricsPrefs();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(p1);
	StringBuilder v6 = v3.append(""_request_lskf_timestamp"");
	String v7 = v3.toString();
	long v8 = this.mInjector.getCurrentTimeMillis();
	v3.putLong(v7, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(p1);
	StringBuilder v12 = v9.append(""_request_lskf_count"");
	String v13 = v9.toString();
	v3.incrementIntKey(v13, 0);
	this.mInjector.reportRebootEscrowPreparationMetrics(v1, p2, v2);
	return;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
depth : 1
public void clearRoRPreparationState(){
	this.mCallerPendingRequest.clear();
	this.mCallerPreparedForReboot.clear();
	return;
}
-----
","public boolean requestLskf(String p1, IntentSender p2){
	boolean v5 = this.mCallerPreparedForReboot.isEmpty();
	boolean v6 = this.mCallerPendingRequest.isEmpty();
	boolean v7 = this.mCallerPendingRequest.containsKey(p1);
	Object v14 = this.mCallerPendingRequest.put(p1, p2);
	int v4 = phiInstruction;
	int v16 = this.mInjector.getUidFromPackageName(p1);
	int v17 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v18 = this.mInjector.getMetricsPrefs();
	StringBuilder v19 = new StringBuilder();
	StringBuilder v21 = v19.append(p1);
	StringBuilder v22 = v19.append(""_request_lskf_timestamp"");
	String v23 = v19.toString();
	long v24 = this.mInjector.getCurrentTimeMillis();
	v18.putLong(v23, v24);
	StringBuilder v26 = new StringBuilder();
	StringBuilder v28 = v26.append(p1);
	StringBuilder v29 = v26.append(""_request_lskf_count"");
	String v30 = v26.toString();
	v18.incrementIntKey(v30, 0);
	this.mInjector.reportRebootEscrowPreparationMetrics(v16, v4, v17);
	long v33 = Binder.clearCallingIdentity();
	Object v35 = LocalServices.getService(LockSettingsInterna.class);
	LockSettingsInternal v34 = v35;
	boolean v36 = v34.prepareRebootEscrow();
	this.mCallerPendingRequest.clear();
	this.mCallerPreparedForReboot.clear();
	Binder.restoreCallingIdentity(v33);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","requestLskf(Ljava/lang/String;Landroid/content/IntentSender;)Z","1","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
return,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnNewRequest(Ljava/lang/String;Landroid/content/IntentSender;)I > 1,2,3 @14 exception:7,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
6 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 4 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
10 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 8 @49 exception:9,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
13 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 11,2 @55 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
15 = new <Application,Ljava/lang/StringBuilder>@63,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @65 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @70 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,2 @73 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @76 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 14,23 @80 exception:24,
29 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
31 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 29,2,3 @85 exception:30,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 43 to iindex = 2),
33 = phi  7,32,
monitorexit 1,
return 33,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRequestLskf(Ljava/lang/String;I)V > 1,2,8 @18 exception:9,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 4,2 @2 exception:5,
monitorenter 1,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 7 @9 exception:8,
monitorexit 1,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 15 @16 exception:16,
18 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @22 exception:19,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,2 @25 exception:20,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,22 @30 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @33 exception:25,
27 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
29 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 27 @39 exception:28,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, putLong(Ljava/lang/String;J)V > 17,26,29 @43 exception:30,
31 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 31 @48 exception:32,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,2 @51 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,35 @56 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 31 @59 exception:38,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, incrementIntKey(Ljava/lang/String;I)V > 17,39,40 @64 exception:41,
42 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowPreparationMetrics(III)V > 42,6,3,9 @69 exception:43,
return,
conditional branch(eq, to iindex=-1) 8,6,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @57 exception:11,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 13 @63 exception:14,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 15,6,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, prepareRebootEscrow()Z > 15 @78 exception:16,
conditional branch(ne, to iindex=-1) 17,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationState()V > 1 @84 exception:19,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
invokevirtual < Application, Landroid/util/ArrayMap, clear()V > 2 @3 exception:3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
invokevirtual < Application, Landroid/util/ArraySet, clear()V > 4 @8 exception:5,
monitorexit 1,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @87 exception:20,
return 6,","depth : 0
public boolean requestLskf(String p1, IntentSender p2){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnNewRequest(p1, p2);
	p0.reportMetricsOnRequestLskf(p1, v2);
	long v4 = Binder.clearCallingIdentity();
	LockSettingsInternal v5 = this.mInjector.getLockSettingsService();
	boolean v6 = v5.prepareRebootEscrow();
	p0.clearRoRPreparationState();
	Binder.restoreCallingIdentity(v4);
	return 0;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnNewRequest(String p1, IntentSender p2){
	boolean v1 = this.mCallerPreparedForReboot.isEmpty();
	boolean v2 = this.mCallerPendingRequest.isEmpty();
	boolean v3 = this.mCallerPendingRequest.containsKey(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Duplicate RoR preparation request for "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.i(""RecoverySystemService"", v7);
	Object v9 = this.mCallerPendingRequest.put(p1, p2);
	return phiInstruction;
}
-----
depth : 1
public void reportMetricsOnRequestLskf(String p1, int p2){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	int v2 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v3 = this.mInjector.getMetricsPrefs();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(p1);
	StringBuilder v6 = v3.append(""_request_lskf_timestamp"");
	String v7 = v3.toString();
	long v8 = this.mInjector.getCurrentTimeMillis();
	v3.putLong(v7, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(p1);
	StringBuilder v12 = v9.append(""_request_lskf_count"");
	String v13 = v9.toString();
	v3.incrementIntKey(v13, 0);
	this.mInjector.reportRebootEscrowPreparationMetrics(v1, p2, v2);
	return;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
depth : 1
public void clearRoRPreparationState(){
	this.mCallerPendingRequest.clear();
	this.mCallerPreparedForReboot.clear();
	return;
}
-----
","public boolean requestLskf(String p1, IntentSender p2){
	boolean v4 = this.mCallerPreparedForReboot.isEmpty();
	boolean v5 = this.mCallerPendingRequest.isEmpty();
	boolean v6 = this.mCallerPendingRequest.containsKey(p1);
	Object v13 = this.mCallerPendingRequest.put(p1, p2);
	int v3 = phiInstruction;
	int v15 = this.mInjector.getUidFromPackageName(p1);
	int v16 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v17 = this.mInjector.getMetricsPrefs();
	StringBuilder v18 = new StringBuilder();
	StringBuilder v20 = v18.append(p1);
	StringBuilder v21 = v18.append(""_request_lskf_timestamp"");
	String v22 = v18.toString();
	long v23 = this.mInjector.getCurrentTimeMillis();
	v17.putLong(v22, v23);
	StringBuilder v25 = new StringBuilder();
	StringBuilder v27 = v25.append(p1);
	StringBuilder v28 = v25.append(""_request_lskf_count"");
	String v29 = v25.toString();
	v17.incrementIntKey(v29, 0);
	this.mInjector.reportRebootEscrowPreparationMetrics(v15, v3, v16);
	long v32 = Binder.clearCallingIdentity();
	Object v34 = LocalServices.getService(LockSettingsInterna.class);
	LockSettingsInternal v33 = v34;
	boolean v35 = v33.prepareRebootEscrow();
	this.mCallerPendingRequest.clear();
	this.mCallerPreparedForReboot.clear();
	Binder.restoreCallingIdentity(v32);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","requestLskf(Ljava/lang/String;Landroid/content/IntentSender;)Z","2","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnNewRequest(Ljava/lang/String;Landroid/content/IntentSender;)I > 1,2,3 @14 exception:7,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
6 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 4 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
10 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 8 @49 exception:9,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
13 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 11,2 @55 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
15 = new <Application,Ljava/lang/StringBuilder>@63,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @65 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @70 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,2 @73 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @76 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 14,23 @80 exception:24,
29 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
31 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 29,2,3 @85 exception:30,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 43 to iindex = 2),
33 = phi  7,32,
monitorexit 1,
return 33,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRequestLskf(Ljava/lang/String;I)V > 1,2,8 @18 exception:9,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 4,2 @2 exception:5,
3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 3 @2 exception:4,
8 = invokevirtual < Application, Landroid/content/pm/PackageManager, getPackageUidAsUser(Ljava/lang/String;I)I > 5,2,6 @7 exception:7,
9 = new <Application,Ljava/lang/StringBuilder>@12,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 9 @14 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,11 @19 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,2 @22 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 9 @25 exception:16,
20 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 18,17 @31 exception:19,
return 21,
monitorenter 1,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 7 @9 exception:8,
monitorexit 1,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 15 @16 exception:16,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mPrefs, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager> > 1,
return 2,
18 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @22 exception:19,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,2 @25 exception:20,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,22 @30 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @33 exception:25,
27 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
29 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 27 @39 exception:28,
3 = invokestatic < Application, Ljava/lang/System, currentTimeMillis()J > @0 exception:2,
return 3,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, putLong(Ljava/lang/String;J)V > 17,26,29 @43 exception:30,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, mSharedPreferences, <Application,Landroid/content/SharedPreferences> > 1,
6 = invokeinterface < Application, Landroid/content/SharedPreferences, edit()Landroid/content/SharedPreferences$Editor; > 4 @2 exception:5,
8 = invokeinterface < Application, Landroid/content/SharedPreferences$Editor, putLong(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor; > 6,2,3 @6 exception:7,
10 = invokeinterface < Application, Landroid/content/SharedPreferences$Editor, commit()Z > 8 @10 exception:9,
return,
31 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 31 @48 exception:32,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,2 @51 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,35 @56 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 31 @59 exception:38,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, incrementIntKey(Ljava/lang/String;I)V > 17,39,40 @64 exception:41,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 1,2,3 @1 exception:4,
7 = binaryop(add) 5 , 6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, putInt(Ljava/lang/String;I)V > 1,2,7 @7 exception:8,
monitorexit 1,
return,
42 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowPreparationMetrics(III)V > 42,6,3,9 @69 exception:43,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IIII)V > 5,2,3,4 @2 exception:6,
return,
return,
conditional branch(eq, to iindex=-1) 8,6,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @57 exception:11,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 13 @63 exception:14,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 15,6,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, prepareRebootEscrow()Z > 15 @78 exception:16,
conditional branch(ne, to iindex=-1) 17,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, clearRoRPreparationState()V > 1 @84 exception:19,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @87 exception:20,
return 6,","depth : 0
public boolean requestLskf(String p1, IntentSender p2){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnNewRequest(p1, p2);
	p0.reportMetricsOnRequestLskf(p1, v2);
	long v4 = Binder.clearCallingIdentity();
	LockSettingsInternal v5 = this.mInjector.getLockSettingsService();
	boolean v6 = v5.prepareRebootEscrow();
	p0.clearRoRPreparationState();
	Binder.restoreCallingIdentity(v4);
	return 0;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnNewRequest(String p1, IntentSender p2){
	boolean v1 = this.mCallerPreparedForReboot.isEmpty();
	boolean v2 = this.mCallerPendingRequest.isEmpty();
	boolean v3 = this.mCallerPendingRequest.containsKey(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Duplicate RoR preparation request for "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.i(""RecoverySystemService"", v7);
	Object v9 = this.mCallerPendingRequest.put(p1, p2);
	return phiInstruction;
}
-----
depth : 1
public void reportMetricsOnRequestLskf(String p1, int p2){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	int v2 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v3 = this.mInjector.getMetricsPrefs();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(p1);
	StringBuilder v6 = v3.append(""_request_lskf_timestamp"");
	String v7 = v3.toString();
	long v8 = this.mInjector.getCurrentTimeMillis();
	v3.putLong(v7, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(p1);
	StringBuilder v12 = v9.append(""_request_lskf_count"");
	String v13 = v9.toString();
	v3.incrementIntKey(v13, 0);
	this.mInjector.reportRebootEscrowPreparationMetrics(v1, p2, v2);
	return;
}
-----
depth : 2
public int getUidFromPackageName(String p1){
	PackageManager v1 = this.mContext.getPackageManager();
	int v2 = v1.getPackageUidAsUser(p1, 0);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Failed to find uid for "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""RecoverySystemService"", v6);
	return -1;
}
-----
depth : 2
public RecoverySystemService$PreferencesManager getMetricsPrefs(){
	return this.mPrefs;
}
-----
depth : 2
public long getCurrentTimeMillis(){
	long v1 = System.currentTimeMillis();
	return v1;
}
-----
depth : 2
public void putLong(String p1, long p2){
	SharedPreferences$Editor v1 = this.mSharedPreferences.edit();
	SharedPreferences$Editor v2 = v1.putLong(p1, p2);
	boolean v3 = v2.commit();
	return;
}
-----
depth : 2
public void incrementIntKey(String p1, int p2){
	int v1 = p0.getInt(p1, p2);
	p0.putInt(p1, (v1 + 1));
	return;
}
-----
depth : 2
public void reportRebootEscrowPreparationMetrics(int p1, int p2, int p3){
	FrameworkStatsLog.write(339, p1, p2, p3);
	return;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public boolean requestLskf(String p1, IntentSender p2){
	boolean v5 = this.mCallerPreparedForReboot.isEmpty();
	boolean v6 = this.mCallerPendingRequest.isEmpty();
	boolean v7 = this.mCallerPendingRequest.containsKey(p1);
	Object v14 = this.mCallerPendingRequest.put(p1, p2);
	int v4 = phiInstruction;
	PackageManager v17 = this.mContext.getPackageManager();
	int v18 = v17.getPackageUidAsUser(p1, 0);
	int v16 = -1;
	int v25 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v26 = this.mPrefs;
	StringBuilder v27 = new StringBuilder();
	StringBuilder v29 = v27.append(p1);
	StringBuilder v30 = v27.append(""_request_lskf_timestamp"");
	String v31 = v27.toString();
	long v33 = System.currentTimeMillis();
	long v32 = v33;
	SharedPreferences$Editor v35 = this.mSharedPreferences.edit();
	SharedPreferences$Editor v36 = v35.putLong(v31, v32);
	boolean v37 = v36.commit();
	StringBuilder v38 = new StringBuilder();
	StringBuilder v40 = v38.append(p1);
	StringBuilder v41 = v38.append(""_request_lskf_count"");
	String v42 = v38.toString();
	int v44 = RecoverySystemService$PreferencesManager.getInt(v42, 0);
	RecoverySystemService$PreferencesManager.putInt(v42, (v44 + 1));
	FrameworkStatsLog.write(339, v16, p2, v25);
	long v48 = Binder.clearCallingIdentity();
	Object v51 = this.sLocalServiceObjects.get(LockSettingsInterna.class);
	Object v50 = v51;
	LockSettingsInternal v49 = v50;
	boolean v52 = v49.prepareRebootEscrow();
	p0.clearRoRPreparationState();
	Binder.restoreCallingIdentity(v48);
	return 0;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","requestLskf(Ljava/lang/String;Landroid/content/IntentSender;)Z","2","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnNewRequest(Ljava/lang/String;Landroid/content/IntentSender;)I > 1,2,3 @14 exception:7,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
6 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 4 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
10 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 8 @49 exception:9,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
13 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 11,2 @55 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
15 = new <Application,Ljava/lang/StringBuilder>@63,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @65 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @70 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,2 @73 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @76 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 14,23 @80 exception:24,
29 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
31 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 29,2,3 @85 exception:30,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 43 to iindex = 2),
33 = phi  7,32,
monitorexit 1,
return 33,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRequestLskf(Ljava/lang/String;I)V > 1,2,8 @18 exception:9,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 4,2 @2 exception:5,
3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 3 @2 exception:4,
8 = invokevirtual < Application, Landroid/content/pm/PackageManager, getPackageUidAsUser(Ljava/lang/String;I)I > 5,2,6 @7 exception:7,
9 = new <Application,Ljava/lang/StringBuilder>@12,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 9 @14 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,11 @19 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,2 @22 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 9 @25 exception:16,
20 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 18,17 @31 exception:19,
return 21,
monitorenter 1,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 7 @9 exception:8,
monitorexit 1,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 15 @16 exception:16,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mPrefs, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager> > 1,
return 2,
18 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @22 exception:19,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,2 @25 exception:20,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,22 @30 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @33 exception:25,
27 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
29 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 27 @39 exception:28,
3 = invokestatic < Application, Ljava/lang/System, currentTimeMillis()J > @0 exception:2,
return 3,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, putLong(Ljava/lang/String;J)V > 17,26,29 @43 exception:30,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, mSharedPreferences, <Application,Landroid/content/SharedPreferences> > 1,
6 = invokeinterface < Application, Landroid/content/SharedPreferences, edit()Landroid/content/SharedPreferences$Editor; > 4 @2 exception:5,
8 = invokeinterface < Application, Landroid/content/SharedPreferences$Editor, putLong(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor; > 6,2,3 @6 exception:7,
10 = invokeinterface < Application, Landroid/content/SharedPreferences$Editor, commit()Z > 8 @10 exception:9,
return,
31 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 31 @48 exception:32,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,2 @51 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,35 @56 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 31 @59 exception:38,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, incrementIntKey(Ljava/lang/String;I)V > 17,39,40 @64 exception:41,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 1,2,3 @1 exception:4,
7 = binaryop(add) 5 , 6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, putInt(Ljava/lang/String;I)V > 1,2,7 @7 exception:8,
monitorexit 1,
return,
42 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowPreparationMetrics(III)V > 42,6,3,9 @69 exception:43,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IIII)V > 5,2,3,4 @2 exception:6,
return,
return,
conditional branch(eq, to iindex=-1) 8,6,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @57 exception:11,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 13 @63 exception:14,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 15,6,
17 = invokevirtual < Application, Lcom/android/internal/widget/LockSettingsInternal, prepareRebootEscrow()Z > 15 @78 exception:16,
conditional branch(ne, to iindex=-1) 17,6,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @91 exception:18,
return 10,","depth : 0
public boolean requestLskf(String p1, IntentSender p2){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnNewRequest(p1, p2);
	p0.reportMetricsOnRequestLskf(p1, v2);
	long v4 = Binder.clearCallingIdentity();
	LockSettingsInternal v5 = this.mInjector.getLockSettingsService();
	boolean v6 = v5.prepareRebootEscrow();
	Binder.restoreCallingIdentity(v4);
	return 1;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnNewRequest(String p1, IntentSender p2){
	boolean v1 = this.mCallerPreparedForReboot.isEmpty();
	boolean v2 = this.mCallerPendingRequest.isEmpty();
	boolean v3 = this.mCallerPendingRequest.containsKey(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Duplicate RoR preparation request for "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.i(""RecoverySystemService"", v7);
	Object v9 = this.mCallerPendingRequest.put(p1, p2);
	return phiInstruction;
}
-----
depth : 1
public void reportMetricsOnRequestLskf(String p1, int p2){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	int v2 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v3 = this.mInjector.getMetricsPrefs();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(p1);
	StringBuilder v6 = v3.append(""_request_lskf_timestamp"");
	String v7 = v3.toString();
	long v8 = this.mInjector.getCurrentTimeMillis();
	v3.putLong(v7, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(p1);
	StringBuilder v12 = v9.append(""_request_lskf_count"");
	String v13 = v9.toString();
	v3.incrementIntKey(v13, 0);
	this.mInjector.reportRebootEscrowPreparationMetrics(v1, p2, v2);
	return;
}
-----
depth : 2
public int getUidFromPackageName(String p1){
	PackageManager v1 = this.mContext.getPackageManager();
	int v2 = v1.getPackageUidAsUser(p1, 0);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Failed to find uid for "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""RecoverySystemService"", v6);
	return -1;
}
-----
depth : 2
public RecoverySystemService$PreferencesManager getMetricsPrefs(){
	return this.mPrefs;
}
-----
depth : 2
public long getCurrentTimeMillis(){
	long v1 = System.currentTimeMillis();
	return v1;
}
-----
depth : 2
public void putLong(String p1, long p2){
	SharedPreferences$Editor v1 = this.mSharedPreferences.edit();
	SharedPreferences$Editor v2 = v1.putLong(p1, p2);
	boolean v3 = v2.commit();
	return;
}
-----
depth : 2
public void incrementIntKey(String p1, int p2){
	int v1 = p0.getInt(p1, p2);
	p0.putInt(p1, (v1 + 1));
	return;
}
-----
depth : 2
public void reportRebootEscrowPreparationMetrics(int p1, int p2, int p3){
	FrameworkStatsLog.write(339, p1, p2, p3);
	return;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public boolean requestLskf(String p1, IntentSender p2){
	boolean v5 = this.mCallerPreparedForReboot.isEmpty();
	boolean v6 = this.mCallerPendingRequest.isEmpty();
	boolean v7 = this.mCallerPendingRequest.containsKey(p1);
	Object v14 = this.mCallerPendingRequest.put(p1, p2);
	int v4 = phiInstruction;
	PackageManager v17 = this.mContext.getPackageManager();
	int v18 = v17.getPackageUidAsUser(p1, 0);
	int v16 = -1;
	int v25 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v26 = this.mPrefs;
	StringBuilder v27 = new StringBuilder();
	StringBuilder v29 = v27.append(p1);
	StringBuilder v30 = v27.append(""_request_lskf_timestamp"");
	String v31 = v27.toString();
	long v33 = System.currentTimeMillis();
	long v32 = v33;
	SharedPreferences$Editor v35 = this.mSharedPreferences.edit();
	SharedPreferences$Editor v36 = v35.putLong(v31, v32);
	boolean v37 = v36.commit();
	StringBuilder v38 = new StringBuilder();
	StringBuilder v40 = v38.append(p1);
	StringBuilder v41 = v38.append(""_request_lskf_count"");
	String v42 = v38.toString();
	int v44 = RecoverySystemService$PreferencesManager.getInt(v42, 0);
	RecoverySystemService$PreferencesManager.putInt(v42, (v44 + 1));
	FrameworkStatsLog.write(339, v16, p2, v25);
	long v48 = Binder.clearCallingIdentity();
	Object v51 = this.sLocalServiceObjects.get(LockSettingsInterna.class);
	Object v50 = v51;
	LockSettingsInternal v49 = v50;
	boolean v52 = v49.prepareRebootEscrow();
	Binder.restoreCallingIdentity(v48);
	return 1;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","requestLskf(Ljava/lang/String;Landroid/content/IntentSender;)Z","2","invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, enforcePermissionForResumeOnReboot()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
10 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 7,8 @14 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
goto (from iindex= 10 to iindex = 9),
return,
conditional branch(ne, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, updateRoRPreparationStateOnNewRequest(Ljava/lang/String;Landroid/content/IntentSender;)I > 1,2,3 @14 exception:7,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPreparedForReboot, <Application,Landroid/util/ArraySet> > 1,
6 = invokevirtual < Application, Landroid/util/ArraySet, isEmpty()Z > 4 @3 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
10 = invokevirtual < Application, Landroid/util/ArrayMap, isEmpty()Z > 8 @49 exception:9,
11 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
13 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 11,2 @55 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
15 = new <Application,Ljava/lang/StringBuilder>@63,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 15 @65 exception:16,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,17 @70 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 15,2 @73 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 15 @76 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 14,23 @80 exception:24,
29 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
31 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 29,2,3 @85 exception:30,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 43 to iindex = 2),
33 = phi  7,32,
monitorexit 1,
return 33,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, reportMetricsOnRequestLskf(Ljava/lang/String;I)V > 1,2,8 @18 exception:9,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getUidFromPackageName(Ljava/lang/String;)I > 4,2 @2 exception:5,
3 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 3 @2 exception:4,
8 = invokevirtual < Application, Landroid/content/pm/PackageManager, getPackageUidAsUser(Ljava/lang/String;I)I > 5,2,6 @7 exception:7,
9 = new <Application,Ljava/lang/StringBuilder>@12,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 9 @14 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,11 @19 exception:12,
15 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 9,2 @22 exception:14,
17 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 9 @25 exception:16,
20 = invokestatic < Application, Landroid/util/Slog, w(Ljava/lang/String;Ljava/lang/String;)I > 18,17 @31 exception:19,
return 21,
monitorenter 1,
7 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mCallerPendingRequest, <Application,Landroid/util/ArrayMap> > 1,
9 = invokevirtual < Application, Landroid/util/ArrayMap, size()I > 7 @9 exception:8,
monitorexit 1,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
17 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getMetricsPrefs()Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager; > 15 @16 exception:16,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, mPrefs, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager> > 1,
return 2,
18 = new <Application,Ljava/lang/StringBuilder>@20,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 18 @22 exception:19,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,2 @25 exception:20,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 18,22 @30 exception:23,
26 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 18 @33 exception:25,
27 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
29 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getCurrentTimeMillis()J > 27 @39 exception:28,
3 = invokestatic < Application, Ljava/lang/System, currentTimeMillis()J > @0 exception:2,
return 3,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, putLong(Ljava/lang/String;J)V > 17,26,29 @43 exception:30,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, mSharedPreferences, <Application,Landroid/content/SharedPreferences> > 1,
6 = invokeinterface < Application, Landroid/content/SharedPreferences, edit()Landroid/content/SharedPreferences$Editor; > 4 @2 exception:5,
8 = invokeinterface < Application, Landroid/content/SharedPreferences$Editor, putLong(Ljava/lang/String;J)Landroid/content/SharedPreferences$Editor; > 6,2,3 @6 exception:7,
10 = invokeinterface < Application, Landroid/content/SharedPreferences$Editor, commit()Z > 8 @10 exception:9,
return,
31 = new <Application,Ljava/lang/StringBuilder>@46,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 31 @48 exception:32,
34 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,2 @51 exception:33,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 31,35 @56 exception:36,
39 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 31 @59 exception:38,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, incrementIntKey(Ljava/lang/String;I)V > 17,39,40 @64 exception:41,
monitorenter 1,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, getInt(Ljava/lang/String;I)I > 1,2,3 @1 exception:4,
7 = binaryop(add) 5 , 6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$PreferencesManager, putInt(Ljava/lang/String;I)V > 1,2,7 @7 exception:8,
monitorexit 1,
return,
42 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, reportRebootEscrowPreparationMetrics(III)V > 42,6,3,9 @69 exception:43,
invokestatic < Application, Lcom/android/internal/util/FrameworkStatsLog, write(IIII)V > 5,2,3,4 @2 exception:6,
return,
return,
conditional branch(eq, to iindex=-1) 8,6,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @57 exception:11,
13 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, getLockSettingsService()Lcom/android/internal/widget/LockSettingsInternal; > 13 @63 exception:14,
2 = load_metadata: <Application,Lcom/android/internal/widget/LockSettingsInternal>, <Primordial,Ljava/lang/Class>,
4 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 2 @2 exception:3,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
4 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 2,1 @3 exception:3,
monitorexit 2,
return 4,
5 = checkcast <Application,Lcom/android/internal/widget/LockSettingsInternal>4 <Application,Lcom/android/internal/widget/LockSettingsInternal>,
return 5,
conditional branch(ne, to iindex=-1) 15,6,
23 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;)I > 5,21 @71 exception:22,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @74 exception:30,
return 6,","depth : 0
public boolean requestLskf(String p1, IntentSender p2){
	p0.enforcePermissionForResumeOnReboot();
	int v2 = p0.updateRoRPreparationStateOnNewRequest(p1, p2);
	p0.reportMetricsOnRequestLskf(p1, v2);
	long v4 = Binder.clearCallingIdentity();
	LockSettingsInternal v5 = this.mInjector.getLockSettingsService();
	int v6 = Slog.e(""RecoverySystemService"", ""Failed to get lock settings service, skipping prepareRebootEscrow"");
	Binder.restoreCallingIdentity(v4);
	return 0;
}
-----
depth : 1
public void enforcePermissionForResumeOnReboot(){
	return;
}
-----
depth : 1
public int updateRoRPreparationStateOnNewRequest(String p1, IntentSender p2){
	boolean v1 = this.mCallerPreparedForReboot.isEmpty();
	boolean v2 = this.mCallerPendingRequest.isEmpty();
	boolean v3 = this.mCallerPendingRequest.containsKey(p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Duplicate RoR preparation request for "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.i(""RecoverySystemService"", v7);
	Object v9 = this.mCallerPendingRequest.put(p1, p2);
	return phiInstruction;
}
-----
depth : 1
public void reportMetricsOnRequestLskf(String p1, int p2){
	int v1 = this.mInjector.getUidFromPackageName(p1);
	int v2 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v3 = this.mInjector.getMetricsPrefs();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(p1);
	StringBuilder v6 = v3.append(""_request_lskf_timestamp"");
	String v7 = v3.toString();
	long v8 = this.mInjector.getCurrentTimeMillis();
	v3.putLong(v7, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(p1);
	StringBuilder v12 = v9.append(""_request_lskf_count"");
	String v13 = v9.toString();
	v3.incrementIntKey(v13, 0);
	this.mInjector.reportRebootEscrowPreparationMetrics(v1, p2, v2);
	return;
}
-----
depth : 2
public int getUidFromPackageName(String p1){
	PackageManager v1 = this.mContext.getPackageManager();
	int v2 = v1.getPackageUidAsUser(p1, 0);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""Failed to find uid for "");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""RecoverySystemService"", v6);
	return -1;
}
-----
depth : 2
public RecoverySystemService$PreferencesManager getMetricsPrefs(){
	return this.mPrefs;
}
-----
depth : 2
public long getCurrentTimeMillis(){
	long v1 = System.currentTimeMillis();
	return v1;
}
-----
depth : 2
public void putLong(String p1, long p2){
	SharedPreferences$Editor v1 = this.mSharedPreferences.edit();
	SharedPreferences$Editor v2 = v1.putLong(p1, p2);
	boolean v3 = v2.commit();
	return;
}
-----
depth : 2
public void incrementIntKey(String p1, int p2){
	int v1 = p0.getInt(p1, p2);
	p0.putInt(p1, (v1 + 1));
	return;
}
-----
depth : 2
public void reportRebootEscrowPreparationMetrics(int p1, int p2, int p3){
	FrameworkStatsLog.write(339, p1, p2, p3);
	return;
}
-----
depth : 1
public LockSettingsInternal getLockSettingsService(){
	Object v1 = LocalServices.getService(LockSettingsInterna.class);
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","public boolean requestLskf(String p1, IntentSender p2){
	boolean v5 = this.mCallerPreparedForReboot.isEmpty();
	boolean v6 = this.mCallerPendingRequest.isEmpty();
	boolean v7 = this.mCallerPendingRequest.containsKey(p1);
	Object v14 = this.mCallerPendingRequest.put(p1, p2);
	int v4 = phiInstruction;
	PackageManager v17 = this.mContext.getPackageManager();
	int v18 = v17.getPackageUidAsUser(p1, 0);
	int v16 = -1;
	int v25 = this.mCallerPendingRequest.size();
	RecoverySystemService$PreferencesManager v26 = this.mPrefs;
	StringBuilder v27 = new StringBuilder();
	StringBuilder v29 = v27.append(p1);
	StringBuilder v30 = v27.append(""_request_lskf_timestamp"");
	String v31 = v27.toString();
	long v33 = System.currentTimeMillis();
	long v32 = v33;
	SharedPreferences$Editor v35 = this.mSharedPreferences.edit();
	SharedPreferences$Editor v36 = v35.putLong(v31, v32);
	boolean v37 = v36.commit();
	StringBuilder v38 = new StringBuilder();
	StringBuilder v40 = v38.append(p1);
	StringBuilder v41 = v38.append(""_request_lskf_count"");
	String v42 = v38.toString();
	int v44 = RecoverySystemService$PreferencesManager.getInt(v42, 0);
	RecoverySystemService$PreferencesManager.putInt(v42, (v44 + 1));
	FrameworkStatsLog.write(339, v16, p2, v25);
	long v48 = Binder.clearCallingIdentity();
	Object v51 = this.sLocalServiceObjects.get(LockSettingsInterna.class);
	Object v50 = v51;
	LockSettingsInternal v49 = v50;
	Binder.restoreCallingIdentity(v48);
	return 0;
}
","SYS_OR_SIG"

"Lcom/android/server/recoverysystem/RecoverySystemService","setupBcb(Ljava/lang/String;)Z","0","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
monitorexit 3,
return 6,","depth : 0
public boolean setupBcb(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	return v1;
}
-----
","public boolean setupBcb(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","setupBcb(Ljava/lang/String;)Z","1","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
return 6,
monitorexit 3,
return 6,","depth : 0
public boolean setupBcb(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	return v1;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
","public boolean setupBcb(String p1){
	boolean v3 = RecoverySystemService.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v5 = this.mInjector.connectService();
	v5.sendCommand(p1);
	int v7 = v5.getPercentageUncrypted();
	v5.sendAck();
	StringBuilder v9 = new StringBuilder;
	v5.close();
	boolean v1 = 0;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","setupBcb(Ljava/lang/String;)Z","2","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 27 to iindex = 3),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
invokestatic < Application, Landroid/os/SystemProperties, set(Ljava/lang/String;Ljava/lang/String;)V > 2,3 @0 exception:4,
return,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
2 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket>@0,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, connectService()Z > 2 @5 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 2 @11 exception:7,
8 = phi  2,6,
return 8,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
3 = getstatic < Application, Ljava/nio/charset/StandardCharsets, UTF_8, <Application,Ljava/nio/charset/Charset> >,
5 = invokevirtual < Application, Ljava/lang/String, getBytes(Ljava/nio/charset/Charset;)[B > 2,3 @2 exception:4,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
7 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 6,7 @9 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
10 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, write([BII)V > 9,5,11,10 @16 exception:12,
return,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
4 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 2,3 @3 exception:4,
return,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 4 @7 exception:5,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mLocalSocket, <Application,Landroid/net/LocalSocket> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 6 @12 exception:7,
return,
return 6,
monitorexit 3,
return 6,","depth : 0
public boolean setupBcb(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	return v1;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
depth : 2
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public void systemPropertiesSet(String p1, String p2){
	SystemProperties.set(p1, p2);
	return;
}
-----
depth : 2
public RecoverySystemService$UncryptSocket connectService(){
	RecoverySystemService$UncryptSocket v0 = new RecoverySystemService$UncryptSocket();
	boolean v2 = v0.connectService();
	v0.close();
	return phiInstruction;
}
-----
depth : 2
public void sendCommand(String p1){
	byte[] v1 = p1.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v1.length);
	this.mOutputStream.write(v1, 0, v1.length);
	return;
}
-----
depth : 2
public int getPercentageUncrypted(){
	int v1 = this.mInputStream.readInt();
	return v1;
}
-----
depth : 2
public void sendAck(){
	this.mOutputStream.writeInt(0);
	return;
}
-----
depth : 2
public void close(){
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	return;
}
-----
","public boolean setupBcb(String p1){
	String v4 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v5 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v6 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v7 = ""running"".equals(v4);
	boolean v8 = ""running"".equals(v5);
	boolean v9 = ""running"".equals(v6);
	boolean v3 = 1;
	SystemProperties.set(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v13 = new RecoverySystemService$UncryptSocket();
	boolean v15 = v13.connectService();
	v13.close();
	RecoverySystemService$UncryptSocket v12 = phiInstruction;
	byte[] v18 = p2.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v18.length);
	this.mOutputStream.write(v18, 0, v18.length);
	int v22 = this.mInputStream.readInt();
	int v21 = v22;
	this.mOutputStream.writeInt(0);
	StringBuilder v25 = new StringBuilder;
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	boolean v1 = 0;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/recoverysystem/RecoverySystemService","setupBcb(Ljava/lang/String;)Z","2","3 = getstatic < Application, Lcom/android/server/recoverysystem/RecoverySystemService, sRequestLock, <Application,Ljava/lang/Object> >,
monitorenter 3,
6 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, setupOrClearBcb(ZLjava/lang/String;)Z > 1,4,2 @4 exception:5,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 4,5,6 @5 exception:7,
9 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService, checkAndWaitForUncryptService()Z > 1 @8 exception:8,
45 = phi  44,2,
conditional branch(ge, to iindex=-1) 45,3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
7 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 4,5 @10 exception:6,
8 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
11 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 8,9 @18 exception:10,
12 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesGet(Ljava/lang/String;)Ljava/lang/String; > 12,13 @26 exception:14,
18 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,7 @32 exception:17,
conditional branch(ne, to iindex=-1) 18,2,
21 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,11 @39 exception:20,
conditional branch(ne, to iindex=-1) 21,2,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 16,15 @45 exception:22,
conditional branch(eq, to iindex=-1) 23,2,
goto (from iindex= 29 to iindex = 2),
27 = phi  2,19,
conditional branch(ne, to iindex=-1) 27,2,
return 19,
conditional branch(ne, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 2,6,
15 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, systemPropertiesSet(Ljava/lang/String;Ljava/lang/String;)V > 15,11,16 @31 exception:17,
invokestatic < Application, Landroid/os/SystemProperties, set(Ljava/lang/String;Ljava/lang/String;)V > 2,3 @0 exception:4,
return,
goto (from iindex= 17 to iindex = 8),
21 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService, mInjector, <Application,Lcom/android/server/recoverysystem/RecoverySystemService$Injector> > 1,
23 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$Injector, connectService()Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket; > 21 @44 exception:22,
2 = new <Application,Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket>@0,
invokespecial < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, <init>()V > 2 @2 exception:3,
5 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, connectService()Z > 2 @5 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 2 @11 exception:7,
8 = phi  2,6,
return 8,
conditional branch(ne, to iindex=-1) 23,6,
conditional branch(eq, to iindex=-1) 2,6,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendCommand(Ljava/lang/String;)V > 23,3 @58 exception:24,
3 = getstatic < Application, Ljava/nio/charset/StandardCharsets, UTF_8, <Application,Ljava/nio/charset/Charset> >,
5 = invokevirtual < Application, Ljava/lang/String, getBytes(Ljava/nio/charset/Charset;)[B > 2,3 @2 exception:4,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
7 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 6,7 @9 exception:8,
9 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
10 = arraylength 5,
invokevirtual < Application, Ljava/io/DataOutputStream, write([BII)V > 9,5,11,10 @16 exception:12,
return,
27 = invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, getPercentageUncrypted()I > 23 @61 exception:26,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
4 = invokevirtual < Application, Ljava/io/DataInputStream, readInt()I > 2 @2 exception:3,
return 4,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, sendAck()V > 23 @65 exception:28,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokevirtual < Application, Ljava/io/DataOutputStream, writeInt(I)V > 2,3 @3 exception:4,
return,
conditional branch(ne, to iindex=-1) 27,29,
42 = new <Application,Ljava/lang/StringBuilder>@72,
64 = getCaughtException ,
67 = invokestatic < Application, Landroid/util/Slog, e(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 10,65,64 @138 exception:66,
invokevirtual < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, close()V > 23 @141 exception:68,
2 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mInputStream, <Application,Ljava/io/DataInputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mOutputStream, <Application,Ljava/io/DataOutputStream> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 4 @7 exception:5,
6 = getfield < Application, Lcom/android/server/recoverysystem/RecoverySystemService$UncryptSocket, mLocalSocket, <Application,Landroid/net/LocalSocket> > 1,
invokestatic < Application, Llibcore/io/IoUtils, closeQuietly(Ljava/lang/AutoCloseable;)V > 6 @12 exception:7,
return,
return 6,
monitorexit 3,
return 6,","depth : 0
public boolean setupBcb(String p1){
	boolean v1 = p0.setupOrClearBcb(1, p1);
	return v1;
}
-----
depth : 1
public boolean setupOrClearBcb(boolean p1, String p2){
	boolean v2 = p0.checkAndWaitForUncryptService();
	this.mInjector.systemPropertiesSet(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v4 = this.mInjector.connectService();
	v4.sendCommand(p2);
	int v6 = v4.getPercentageUncrypted();
	v4.sendAck();
	StringBuilder v7 = new StringBuilder;
	int v8 = Slog.e(""RecoverySystemService"", ""IOException when communicating with uncrypt:"", caughtException);
	v4.close();
	return 0;
}
-----
depth : 2
public boolean checkAndWaitForUncryptService(){
	String v1 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v2 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v3 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v4 = ""running"".equals(v1);
	boolean v5 = ""running"".equals(v2);
	boolean v6 = ""running"".equals(v3);
	return 1;
}
-----
depth : 2
public void systemPropertiesSet(String p1, String p2){
	SystemProperties.set(p1, p2);
	return;
}
-----
depth : 2
public RecoverySystemService$UncryptSocket connectService(){
	RecoverySystemService$UncryptSocket v0 = new RecoverySystemService$UncryptSocket();
	boolean v2 = v0.connectService();
	v0.close();
	return phiInstruction;
}
-----
depth : 2
public void sendCommand(String p1){
	byte[] v1 = p1.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v1.length);
	this.mOutputStream.write(v1, 0, v1.length);
	return;
}
-----
depth : 2
public int getPercentageUncrypted(){
	int v1 = this.mInputStream.readInt();
	return v1;
}
-----
depth : 2
public void sendAck(){
	this.mOutputStream.writeInt(0);
	return;
}
-----
depth : 2
public void close(){
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	return;
}
-----
","public boolean setupBcb(String p1){
	String v4 = this.mInjector.systemPropertiesGet(""init.svc.uncrypt"");
	String v5 = this.mInjector.systemPropertiesGet(""init.svc.setup-bcb"");
	String v6 = this.mInjector.systemPropertiesGet(""init.svc.clear-bcb"");
	boolean v7 = ""running"".equals(v4);
	boolean v8 = ""running"".equals(v5);
	boolean v9 = ""running"".equals(v6);
	boolean v3 = 1;
	SystemProperties.set(""ctl.start"", ""setup-bcb"");
	RecoverySystemService$UncryptSocket v13 = new RecoverySystemService$UncryptSocket();
	boolean v15 = v13.connectService();
	v13.close();
	RecoverySystemService$UncryptSocket v12 = phiInstruction;
	byte[] v18 = p2.getBytes(StandardCharsets.UTF_8);
	this.mOutputStream.writeInt(v18.length);
	this.mOutputStream.write(v18, 0, v18.length);
	int v22 = this.mInputStream.readInt();
	int v21 = v22;
	this.mOutputStream.writeInt(0);
	StringBuilder v25 = new StringBuilder;
	IoUtils.closeQuietly(this.mInputStream);
	IoUtils.closeQuietly(this.mOutputStream);
	IoUtils.closeQuietly(this.mLocalSocket);
	boolean v1 = 0;
	return v1;
}
","SYS_OR_SIG"

