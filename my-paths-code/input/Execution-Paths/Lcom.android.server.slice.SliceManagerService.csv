"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/slice/SliceManagerService","getPinnedSlices(Ljava/lang/String;)[Landroid/net/Uri;","0","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:3,
8 = new <Application,Ljava/util/ArrayList>@11,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(eq, to iindex=-1) 17,18,
monitorexit 10,
40 = new <Application,[Landroid/net/Uri>@7439 ,
43 = checkcast <Application,[Landroid/net/Uri>42 <Application,[Landroid/net/Uri>,
return 43,","depth : 0
public Uri getPinnedSlices(String p1){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	ArrayList v3 = new ArrayList();
	Collection v5 = this.mPinnedSlicesByUri.values();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	int v8 = v3.size();
	Uri v8 = new Uri(v8);
	Object v9 = v3.toArray(v8);
	return v9;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","getPinnedSlices(Ljava/lang/String;)[Landroid/net/Uri;","1","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
8 = new <Application,Ljava/util/ArrayList>@11,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(eq, to iindex=-1) 17,18,
monitorexit 10,
40 = new <Application,[Landroid/net/Uri>@7439 ,
43 = checkcast <Application,[Landroid/net/Uri>42 <Application,[Landroid/net/Uri>,
return 43,","depth : 0
public Uri getPinnedSlices(String p1){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	ArrayList v3 = new ArrayList();
	Collection v5 = this.mPinnedSlicesByUri.values();
	Iterator v6 = v5.iterator();
	boolean v7 = v6.hasNext();
	int v8 = v3.size();
	Uri v8 = new Uri(v8);
	Object v9 = v3.toArray(v8);
	return v9;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
","NONE"

"Lcom/android/server/slice/SliceManagerService","revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V","0","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,2,4,9 @11 exception:10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, revokeSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 11,3,9,2,9,4 @20 exception:12,
return,","depth : 0
public void revokeSlicePermission(String p1, String p2, Uri p3){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	p0.enforceOwner(p1, p3, v3);
	this.mPermissions.revokeSliceAccess(p2, v3, p1, v3, p3);
	return;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V","1","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,2,4,9 @11 exception:10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, revokeSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 11,3,9,2,9,4 @20 exception:12,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, revokeUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
return,
return,","depth : 0
public void revokeSlicePermission(String p1, String p2, Uri p3){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	p0.enforceOwner(p1, p3, v3);
	this.mPermissions.revokeSliceAccess(p2, v3, p1, v3, p3);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void revokeSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.revokeUri(p5, v1);
	return;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","revokeSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,2,4,9 @11 exception:10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, revokeSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 11,3,9,2,9,4 @20 exception:12,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, revokeUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
return,
return,","depth : 0
public void revokeSlicePermission(String p1, String p2, Uri p3){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	p0.enforceOwner(p1, p3, v3);
	this.mPermissions.revokeSliceAccess(p2, v3, p1, v3, p3);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void revokeSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.revokeUri(p5, v1);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void revokeUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.removePath(v5);
	return;
}
-----
","NONE"

"Lcom/android/server/slice/SliceManagerService","grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V","0","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,2,4,9 @11 exception:10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 11,3,9,2,9,4 @20 exception:12,
return,","depth : 0
public void grantSlicePermission(String p1, String p2, Uri p3){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	p0.enforceOwner(p1, p3, v3);
	this.mPermissions.grantSliceAccess(p2, v3, p1, v3, p3);
	return;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V","1","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,2,4,9 @11 exception:10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 11,3,9,2,9,4 @20 exception:12,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
return,
return,","depth : 0
public void grantSlicePermission(String p1, String p2, Uri p3){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	p0.enforceOwner(p1, p3, v3);
	this.mPermissions.grantSliceAccess(p2, v3, p1, v3, p3);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,2,4,9 @11 exception:10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 11,3,9,2,9,4 @20 exception:12,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions>6 <Application,Lcom/android/server/slice/SliceProviderPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceProviderPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>5 <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>@11,
10 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
18 = phi  6,8,
monitorexit 1,
return 18,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mTracker, <Application,Lcom/android/server/slice/DirtyTracker> > 1,
monitorexit 1,
return,
return,
return,","depth : 0
public void grantSlicePermission(String p1, String p2, Uri p3){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	p0.enforceOwner(p1, p3, v3);
	this.mPermissions.grantSliceAccess(p2, v3, p1, v3, p3);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void grantUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.addPath(v5);
	return;
}
-----
depth : 2
public SliceProviderPermissions getProvider(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedProviders.get(p1);
	String v2 = SliceProviderPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException);
	SliceProviderPermissions v7 = new SliceProviderPermissions(p1,p0);
	Object v9 = this.mCachedProviders.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public SliceProviderPermissions$SliceAuthority getOrCreateAuthority(String p1){
	Object v1 = this.mAuths.get(p1);
	SliceProviderPermissions$SliceAuthority v1 = new SliceProviderPermissions$SliceAuthority(p1,p0);
	Object v3 = this.mAuths.put(p1, v1);
	p0.onPersistableDirty(v1);
	return phiInstruction;
}
-----
depth : 2
public void addPkg(SlicePermissionManager$PkgUser p1){
	boolean v1 = this.mPkgs.add(p1);
	this.mTracker.onPersistableDirty(p0);
	return;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,2,4,9 @11 exception:10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 11,3,9,2,9,4 @20 exception:12,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions>6 <Application,Lcom/android/server/slice/SliceProviderPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceProviderPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>5 <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>@11,
10 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
18 = phi  6,8,
monitorexit 1,
return 18,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
monitorexit 1,
return,
return,
return,","depth : 0
public void grantSlicePermission(String p1, String p2, Uri p3){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	p0.enforceOwner(p1, p3, v3);
	this.mPermissions.grantSliceAccess(p2, v3, p1, v3, p3);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void grantUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.addPath(v5);
	return;
}
-----
depth : 2
public SliceProviderPermissions getProvider(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedProviders.get(p1);
	String v2 = SliceProviderPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException);
	SliceProviderPermissions v7 = new SliceProviderPermissions(p1,p0);
	Object v9 = this.mCachedProviders.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public SliceProviderPermissions$SliceAuthority getOrCreateAuthority(String p1){
	Object v1 = this.mAuths.get(p1);
	SliceProviderPermissions$SliceAuthority v1 = new SliceProviderPermissions$SliceAuthority(p1,p0);
	Object v3 = this.mAuths.put(p1, v1);
	p0.onPersistableDirty(v1);
	return phiInstruction;
}
-----
depth : 2
public void addPkg(SlicePermissionManager$PkgUser p1){
	boolean v1 = this.mPkgs.add(p1);
	return;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","grantSlicePermission(Ljava/lang/String;Ljava/lang/String;Landroid/net/Uri;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,2,4,9 @11 exception:10,
11 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 11,3,9,2,9,4 @20 exception:12,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions>6 <Application,Lcom/android/server/slice/SliceProviderPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceProviderPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>5 <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>,
conditional branch(ne, to iindex=-1) 6,7,
18 = phi  6,8,
monitorexit 1,
return 18,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mTracker, <Application,Lcom/android/server/slice/DirtyTracker> > 1,
monitorexit 1,
return,
return,
return,","depth : 0
public void grantSlicePermission(String p1, String p2, Uri p3){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	p0.enforceOwner(p1, p3, v3);
	this.mPermissions.grantSliceAccess(p2, v3, p1, v3, p3);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void grantUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.addPath(v5);
	return;
}
-----
depth : 2
public SliceProviderPermissions getProvider(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedProviders.get(p1);
	String v2 = SliceProviderPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException);
	SliceProviderPermissions v7 = new SliceProviderPermissions(p1,p0);
	Object v9 = this.mCachedProviders.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public SliceProviderPermissions$SliceAuthority getOrCreateAuthority(String p1){
	Object v1 = this.mAuths.get(p1);
	return phiInstruction;
}
-----
depth : 2
public void addPkg(SlicePermissionManager$PkgUser p1){
	boolean v1 = this.mPkgs.add(p1);
	this.mTracker.onPersistableDirty(p0);
	return;
}
-----
","NONE"

"Lcom/android/server/slice/SliceManagerService","checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I","0","conditional branch(ne, to iindex=-1) 4,11,
13 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, hasFullSliceAccess(Ljava/lang/String;I)Z > 1,4,9 @61 exception:12,
conditional branch(eq, to iindex=-1) 13,11,
14 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
16 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, hasPermission(Ljava/lang/String;ILandroid/net/Uri;)Z > 14,4,9,2 @70 exception:15,
conditional branch(eq, to iindex=-1) 16,11,
conditional branch(eq, to iindex=-1) 7,11,
conditional branch(eq, to iindex=-1) 3,11,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,3,2,9 @81 exception:17,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,3 @84 exception:18,
19 = arraylength 7,
26 = phi  25,11,
conditional branch(ge, to iindex=-1) 26,19,
return 10,","depth : 0
public int checkSlicePermission(Uri p1, String p2, String p3, int p4, int p5, String p6){
	int v1 = UserHandle.getUserId(p5);
	boolean v2 = p0.hasFullSliceAccess(p3, v1);
	boolean v3 = this.mPermissions.hasPermission(p3, v1, p1);
	p0.enforceOwner(p2, p1, v1);
	p0.verifyCaller(p2);
	return -1;
}
-----
","NORMAL"
"Lcom/android/server/slice/SliceManagerService","checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I","1","conditional branch(ne, to iindex=-1) 4,11,
13 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, hasFullSliceAccess(Ljava/lang/String;I)Z > 1,4,9 @61 exception:12,
7 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isDefaultHomeApp(Ljava/lang/String;I)Z > 1,2,3 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isAssistant(Ljava/lang/String;I)Z > 1,2,3 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isGrantedFullAccess(Ljava/lang/String;I)Z > 1,2,3 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 11 to iindex = 3),
24 = phi  8,22,
return 24,
conditional branch(eq, to iindex=-1) 13,11,
14 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
16 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, hasPermission(Ljava/lang/String;ILandroid/net/Uri;)Z > 14,4,9,2 @70 exception:15,
5 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
8 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,5 @5 exception:7,
12 = invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, hasFullAccess()Z > 8 @13 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
17 = invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, hasPermission(Landroid/net/Uri;I)Z > 8,15,10 @23 exception:16,
conditional branch(eq, to iindex=-1) 17,13,
goto (from iindex= 14 to iindex = 3),
23 = phi  13,22,
return 23,
conditional branch(eq, to iindex=-1) 16,11,
conditional branch(eq, to iindex=-1) 7,11,
conditional branch(eq, to iindex=-1) 3,11,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceOwner(Ljava/lang/String;Landroid/net/Uri;I)V > 1,3,2,9 @81 exception:17,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,3 @84 exception:18,
return,
19 = arraylength 7,
26 = phi  25,11,
conditional branch(ge, to iindex=-1) 26,19,
return 10,","depth : 0
public int checkSlicePermission(Uri p1, String p2, String p3, int p4, int p5, String p6){
	int v1 = UserHandle.getUserId(p5);
	boolean v2 = p0.hasFullSliceAccess(p3, v1);
	boolean v3 = this.mPermissions.hasPermission(p3, v1, p1);
	p0.enforceOwner(p2, p1, v1);
	p0.verifyCaller(p2);
	return -1;
}
-----
depth : 1
public boolean hasFullSliceAccess(String p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	boolean v2 = p0.isDefaultHomeApp(p1, p2);
	boolean v3 = p0.isAssistant(p1, p2);
	boolean v4 = p0.isGrantedFullAccess(p1, p2);
	Binder.restoreCallingIdentity(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasPermission(String p1, int p2, Uri p3){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SliceClientPermissions v2 = p0.getClient(v0);
	int v3 = ContentProvider.getUserIdFromUri(p3, p2);
	boolean v4 = v2.hasFullAccess();
	Uri v5 = ContentProvider.getUriWithoutUserId(p3);
	boolean v6 = v2.hasPermission(v5, v3);
	return phiInstruction;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
","NORMAL"
"Lcom/android/server/slice/SliceManagerService","checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I","1","conditional branch(ne, to iindex=-1) 4,11,
13 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, hasFullSliceAccess(Ljava/lang/String;I)Z > 1,4,9 @61 exception:12,
7 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isDefaultHomeApp(Ljava/lang/String;I)Z > 1,2,3 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isAssistant(Ljava/lang/String;I)Z > 1,2,3 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isGrantedFullAccess(Ljava/lang/String;I)Z > 1,2,3 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 11 to iindex = 3),
24 = phi  8,22,
return 24,
conditional branch(eq, to iindex=-1) 13,11,
14 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
16 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, hasPermission(Ljava/lang/String;ILandroid/net/Uri;)Z > 14,4,9,2 @70 exception:15,
5 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
8 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,5 @5 exception:7,
12 = invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, hasFullAccess()Z > 8 @13 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
17 = invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, hasPermission(Landroid/net/Uri;I)Z > 8,15,10 @23 exception:16,
conditional branch(eq, to iindex=-1) 17,13,
goto (from iindex= 14 to iindex = 3),
23 = phi  13,22,
return 23,
conditional branch(eq, to iindex=-1) 16,11,
return 11,","depth : 0
public int checkSlicePermission(Uri p1, String p2, String p3, int p4, int p5, String p6){
	int v1 = UserHandle.getUserId(p5);
	boolean v2 = p0.hasFullSliceAccess(p3, v1);
	boolean v3 = this.mPermissions.hasPermission(p3, v1, p1);
	return 0;
}
-----
depth : 1
public boolean hasFullSliceAccess(String p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	boolean v2 = p0.isDefaultHomeApp(p1, p2);
	boolean v3 = p0.isAssistant(p1, p2);
	boolean v4 = p0.isGrantedFullAccess(p1, p2);
	Binder.restoreCallingIdentity(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasPermission(String p1, int p2, Uri p3){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SliceClientPermissions v2 = p0.getClient(v0);
	int v3 = ContentProvider.getUserIdFromUri(p3, p2);
	boolean v4 = v2.hasFullAccess();
	Uri v5 = ContentProvider.getUriWithoutUserId(p3);
	boolean v6 = v2.hasPermission(v5, v3);
	return phiInstruction;
}
-----
","NORMAL"
"Lcom/android/server/slice/SliceManagerService","checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I","2","conditional branch(ne, to iindex=-1) 23,11,
35 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,2,33 @107 exception:34,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
36 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 36,4,9,35,33,2 @117 exception:37,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions>6 <Application,Lcom/android/server/slice/SliceProviderPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceProviderPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>5 <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>@11,
10 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
18 = phi  6,8,
monitorexit 1,
return 18,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mTracker, <Application,Lcom/android/server/slice/DirtyTracker> > 1,
monitorexit 1,
return,
return,
return 11,","depth : 0
public int checkSlicePermission(Uri p1, String p2, String p3, int p4, int p5, String p6){
	int v7 = ContentProvider.getUserIdFromUri(p1, v1);
	String v8 = p0.getProviderPkg(p1, v7);
	this.mPermissions.grantSliceAccess(p3, v1, v8, v7, p1);
	return 0;
}
-----
depth : 1
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void grantUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.addPath(v5);
	return;
}
-----
depth : 2
public SliceProviderPermissions getProvider(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedProviders.get(p1);
	String v2 = SliceProviderPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException);
	SliceProviderPermissions v7 = new SliceProviderPermissions(p1,p0);
	Object v9 = this.mCachedProviders.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public SliceProviderPermissions$SliceAuthority getOrCreateAuthority(String p1){
	Object v1 = this.mAuths.get(p1);
	SliceProviderPermissions$SliceAuthority v1 = new SliceProviderPermissions$SliceAuthority(p1,p0);
	Object v3 = this.mAuths.put(p1, v1);
	p0.onPersistableDirty(v1);
	return phiInstruction;
}
-----
depth : 2
public void addPkg(SlicePermissionManager$PkgUser p1){
	boolean v1 = this.mPkgs.add(p1);
	this.mTracker.onPersistableDirty(p0);
	return;
}
-----
","NORMAL"
"Lcom/android/server/slice/SliceManagerService","checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I","2","conditional branch(ne, to iindex=-1) 23,11,
35 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,2,33 @107 exception:34,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
36 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 36,4,9,35,33,2 @117 exception:37,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions>6 <Application,Lcom/android/server/slice/SliceProviderPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceProviderPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>5 <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>@11,
10 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
18 = phi  6,8,
monitorexit 1,
return 18,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
monitorexit 1,
return,
return,
return 11,","depth : 0
public int checkSlicePermission(Uri p1, String p2, String p3, int p4, int p5, String p6){
	int v7 = ContentProvider.getUserIdFromUri(p1, v1);
	String v8 = p0.getProviderPkg(p1, v7);
	this.mPermissions.grantSliceAccess(p3, v1, v8, v7, p1);
	return 0;
}
-----
depth : 1
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void grantUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.addPath(v5);
	return;
}
-----
depth : 2
public SliceProviderPermissions getProvider(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedProviders.get(p1);
	String v2 = SliceProviderPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException);
	SliceProviderPermissions v7 = new SliceProviderPermissions(p1,p0);
	Object v9 = this.mCachedProviders.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public SliceProviderPermissions$SliceAuthority getOrCreateAuthority(String p1){
	Object v1 = this.mAuths.get(p1);
	SliceProviderPermissions$SliceAuthority v1 = new SliceProviderPermissions$SliceAuthority(p1,p0);
	Object v3 = this.mAuths.put(p1, v1);
	p0.onPersistableDirty(v1);
	return phiInstruction;
}
-----
depth : 2
public void addPkg(SlicePermissionManager$PkgUser p1){
	boolean v1 = this.mPkgs.add(p1);
	return;
}
-----
","NORMAL"
"Lcom/android/server/slice/SliceManagerService","checkSlicePermission(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)I","2","conditional branch(ne, to iindex=-1) 23,11,
35 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,2,33 @107 exception:34,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
36 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 36,4,9,35,33,2 @117 exception:37,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions>6 <Application,Lcom/android/server/slice/SliceProviderPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceProviderPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>5 <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>,
conditional branch(ne, to iindex=-1) 6,7,
18 = phi  6,8,
monitorexit 1,
return 18,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mTracker, <Application,Lcom/android/server/slice/DirtyTracker> > 1,
monitorexit 1,
return,
return,
return 11,","depth : 0
public int checkSlicePermission(Uri p1, String p2, String p3, int p4, int p5, String p6){
	int v7 = ContentProvider.getUserIdFromUri(p1, v1);
	String v8 = p0.getProviderPkg(p1, v7);
	this.mPermissions.grantSliceAccess(p3, v1, v8, v7, p1);
	return 0;
}
-----
depth : 1
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void grantUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.addPath(v5);
	return;
}
-----
depth : 2
public SliceProviderPermissions getProvider(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedProviders.get(p1);
	String v2 = SliceProviderPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException);
	SliceProviderPermissions v7 = new SliceProviderPermissions(p1,p0);
	Object v9 = this.mCachedProviders.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public SliceProviderPermissions$SliceAuthority getOrCreateAuthority(String p1){
	Object v1 = this.mAuths.get(p1);
	return phiInstruction;
}
-----
depth : 2
public void addPkg(SlicePermissionManager$PkgUser p1){
	boolean v1 = this.mPkgs.add(p1);
	this.mTracker.onPersistableDirty(p0);
	return;
}
-----
","NORMAL"

"Lcom/android/server/slice/SliceManagerService","hasSliceAccess(Ljava/lang/String;)Z","0","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:3,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, hasFullSliceAccess(Ljava/lang/String;I)Z > 1,2,7 @11 exception:8,
return 9,","depth : 0
public boolean hasSliceAccess(String p1){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	boolean v4 = p0.hasFullSliceAccess(p1, v3);
	return v4;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","hasSliceAccess(Ljava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, hasFullSliceAccess(Ljava/lang/String;I)Z > 1,2,7 @11 exception:8,
7 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isDefaultHomeApp(Ljava/lang/String;I)Z > 1,2,3 @4 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isAssistant(Ljava/lang/String;I)Z > 1,2,3 @10 exception:9,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isGrantedFullAccess(Ljava/lang/String;I)Z > 1,2,3 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 11 to iindex = 3),
24 = phi  8,22,
return 24,
return 9,","depth : 0
public boolean hasSliceAccess(String p1){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	boolean v4 = p0.hasFullSliceAccess(p1, v3);
	return v4;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public boolean hasFullSliceAccess(String p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	boolean v2 = p0.isDefaultHomeApp(p1, p2);
	boolean v3 = p0.isAssistant(p1, p2);
	boolean v4 = p0.isGrantedFullAccess(p1, p2);
	Binder.restoreCallingIdentity(v1);
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","hasSliceAccess(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, hasFullSliceAccess(Ljava/lang/String;I)Z > 1,2,7 @11 exception:8,
7 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isDefaultHomeApp(Ljava/lang/String;I)Z > 1,2,3 @4 exception:6,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isAssistant(Ljava/lang/String;I)Z > 1,2,3 @10 exception:9,
return 7,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isGrantedFullAccess(Ljava/lang/String;I)Z > 1,2,3 @16 exception:11,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 11 to iindex = 3),
24 = phi  8,22,
return 24,
return 9,","depth : 0
public boolean hasSliceAccess(String p1){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	boolean v4 = p0.hasFullSliceAccess(p1, v3);
	return v4;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public boolean hasFullSliceAccess(String p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	boolean v2 = p0.isDefaultHomeApp(p1, p2);
	boolean v3 = p0.isAssistant(p1, p2);
	boolean v4 = p0.isGrantedFullAccess(p1, p2);
	Binder.restoreCallingIdentity(v1);
	return phiInstruction;
}
-----
depth : 2
public boolean isDefaultHomeApp(String p1, int p2){
	SliceManagerService$PackageMatchingCache v1 = p0.getHomeMatcher(p2);
	boolean v2 = v1.matches(p1);
	return v2;
}
-----
depth : 2
public boolean isAssistant(String p1, int p2){
	SliceManagerService$PackageMatchingCache v1 = p0.getAssistantMatcher(p2);
	boolean v2 = v1.matches(p1);
	return v2;
}
-----
depth : 2
public boolean isGrantedFullAccess(String p1, int p2){
	boolean v1 = this.mPermissions.hasFullAccess(p1, p2);
	return v1;
}
-----
","NONE"
"Lcom/android/server/slice/SliceManagerService","hasSliceAccess(Ljava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:3,
return,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, hasFullSliceAccess(Ljava/lang/String;I)Z > 1,2,7 @11 exception:8,
7 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isDefaultHomeApp(Ljava/lang/String;I)Z > 1,2,3 @4 exception:6,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isAssistant(Ljava/lang/String;I)Z > 1,2,3 @10 exception:9,
return 7,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, isGrantedFullAccess(Ljava/lang/String;I)Z > 1,2,3 @16 exception:11,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 13 to iindex = 2),
24 = phi  8,22,
return 24,
return 9,","depth : 0
public boolean hasSliceAccess(String p1){
	p0.verifyCaller(p1);
	UserHandle v2 = Binder.getCallingUserHandle();
	int v3 = v2.getIdentifier();
	boolean v4 = p0.hasFullSliceAccess(p1, v3);
	return v4;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public boolean hasFullSliceAccess(String p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	boolean v2 = p0.isDefaultHomeApp(p1, p2);
	boolean v3 = p0.isAssistant(p1, p2);
	boolean v4 = p0.isGrantedFullAccess(p1, p2);
	Binder.restoreCallingIdentity(v1);
	return phiInstruction;
}
-----
depth : 2
public boolean isDefaultHomeApp(String p1, int p2){
	SliceManagerService$PackageMatchingCache v1 = p0.getHomeMatcher(p2);
	boolean v2 = v1.matches(p1);
	return v2;
}
-----
depth : 2
public boolean isAssistant(String p1, int p2){
	SliceManagerService$PackageMatchingCache v1 = p0.getAssistantMatcher(p2);
	boolean v2 = v1.matches(p1);
	return v2;
}
-----
depth : 2
public boolean isGrantedFullAccess(String p1, int p2){
	boolean v1 = this.mPermissions.hasFullAccess(p1, p2);
	return v1;
}
-----
","NONE"

"Lcom/android/server/slice/SliceManagerService","applyRestore([BI)V","0","conditional branch(ne, to iindex=-1) 2,11,
conditional branch(eq, to iindex=-1) 3,11,
12 = new <Application,Ljava/io/ByteArrayInputStream>@56,
29 = getCaughtException ,
return,","depth : 0
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v1 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	int v4 = Slog.w(""SliceManagerService"", ""applyRestore: error reading payload"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","applyRestore([BI)V","0","conditional branch(ne, to iindex=-1) 2,11,
conditional branch(eq, to iindex=-1) 3,11,
12 = new <Application,Ljava/io/ByteArrayInputStream>@56,
29 = getCaughtException ,
return,","depth : 0
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v1 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlPullParser v4 = v3.newPullParser();
	int v5 = Slog.w(""SliceManagerService"", ""applyRestore: error reading payload"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","applyRestore([BI)V","0","conditional branch(ne, to iindex=-1) 2,11,
conditional branch(eq, to iindex=-1) 3,11,
12 = new <Application,Ljava/io/ByteArrayInputStream>@56,
18 = getstatic < Application, Landroid/util/Xml$Encoding, UTF_8, <Application,Landroid/util/Xml$Encoding> >,
29 = getCaughtException ,
return,","depth : 0
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v1 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlPullParser v4 = v3.newPullParser();
	int v5 = Slog.w(""SliceManagerService"", ""applyRestore: error reading payload"", caughtException);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","applyRestore([BI)V","0","conditional branch(ne, to iindex=-1) 2,11,
conditional branch(eq, to iindex=-1) 3,11,
12 = new <Application,Ljava/io/ByteArrayInputStream>@56,
18 = getstatic < Application, Landroid/util/Xml$Encoding, UTF_8, <Application,Landroid/util/Xml$Encoding> >,
29 = getCaughtException ,
return,","depth : 0
public void applyRestore(byte[] p1, int p2){
	ByteArrayInputStream v1 = new ByteArrayInputStream(p1);
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlPullParser v4 = v3.newPullParser();
	String v5 = Xml$Encoding.UTF_8.name();
	int v6 = Slog.w(""SliceManagerService"", ""applyRestore: error reading payload"", caughtException);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/slice/SliceManagerService","getPinnedSpecs(Landroid/net/Uri;Ljava/lang/String;)[Landroid/app/slice/SliceSpec;","0","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,3 @0 exception:4,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,3,2 @3 exception:5,
13 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,11 @18 exception:12,
15 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, getSpecs()[Landroid/app/slice/SliceSpec; > 13 @22 exception:14,
return 15,","depth : 0
public SliceSpec getPinnedSpecs(Uri p1, String p2){
	p0.verifyCaller(p2);
	p0.enforceAccess(p2, p1);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p1, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	SliceSpec v7 = v6.getSpecs();
	return v7;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","getPinnedSpecs(Landroid/net/Uri;Ljava/lang/String;)[Landroid/app/slice/SliceSpec;","1","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,3 @0 exception:4,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,3,2 @3 exception:5,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
13 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,11 @18 exception:12,
3 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>6 <Application,Lcom/android/server/slice/PinnedSliceState>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
15 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, getSpecs()[Landroid/app/slice/SliceSpec; > 13 @22 exception:14,
2 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mSupportedSpecs, <Application,[Landroid/app/slice/SliceSpec> > 1,
return 2,
return 15,","depth : 0
public SliceSpec getPinnedSpecs(Uri p1, String p2){
	p0.verifyCaller(p2);
	p0.enforceAccess(p2, p1);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p1, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	SliceSpec v7 = v6.getSpecs();
	return v7;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 1
public PinnedSliceState getPinnedSlice(Uri p1){
	Object v1 = this.mPinnedSlicesByUri.get(p1);
	return v1;
}
-----
depth : 1
public SliceSpec getSpecs(){
	return this.mSupportedSpecs;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","getPinnedSpecs(Landroid/net/Uri;Ljava/lang/String;)[Landroid/app/slice/SliceSpec;","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,3 @0 exception:4,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,3,2 @3 exception:5,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
return 8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
return,
13 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,11 @18 exception:12,
15 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, getSpecs()[Landroid/app/slice/SliceSpec; > 13 @22 exception:14,
return 15,","depth : 0
public SliceSpec getPinnedSpecs(Uri p1, String p2){
	p0.verifyCaller(p2);
	p0.enforceAccess(p2, p1);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p1, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	SliceSpec v7 = v6.getSpecs();
	return v7;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 2
public int checkAccess(String p1, Uri p2, int p3, int p4){
	int v1 = p0.checkSlicePermission(p2, 0, p1, p4, p3, 0);
	return v1;
}
-----
depth : 2
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 2
public void enforceCrossUser(String p1, Uri p2){
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","getPinnedSpecs(Landroid/net/Uri;Ljava/lang/String;)[Landroid/app/slice/SliceSpec;","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,3 @0 exception:4,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,3,2 @3 exception:5,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
return 8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
return,
13 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,11 @18 exception:12,
15 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, getSpecs()[Landroid/app/slice/SliceSpec; > 13 @22 exception:14,
return 15,","depth : 0
public SliceSpec getPinnedSpecs(Uri p1, String p2){
	p0.verifyCaller(p2);
	p0.enforceAccess(p2, p1);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p1, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	SliceSpec v7 = v6.getSpecs();
	return v7;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 2
public int checkAccess(String p1, Uri p2, int p3, int p4){
	int v1 = p0.checkSlicePermission(p2, 0, p1, p4, p3, 0);
	return v1;
}
-----
depth : 2
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 2
public void enforceCrossUser(String p1, Uri p2){
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/slice/SliceManagerService","unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V","0","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:6,
14 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,12 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, unpin(Ljava/lang/String;Landroid/os/IBinder;)Z > 14,2,4 @24 exception:16,
conditional branch(eq, to iindex=-1) 17,15,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, removePinnedSlice(Landroid/net/Uri;)V > 1,12 @30 exception:18,
23 = getCaughtException ,
return,","depth : 0
public void unpinSlice(String p1, Uri p2, IBinder p3){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	boolean v7 = v6.unpin(p1, p3);
	p0.removePinnedSlice(v5);
	String v9 = [resolveCodeAbst] + 23 = getCaughtException .getMessage();
	int v10 = Slog.w(""SliceManagerService"", v9);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V","1","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
14 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,12 @18 exception:13,
3 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>6 <Application,Lcom/android/server/slice/PinnedSliceState>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, unpin(Ljava/lang/String;Landroid/os/IBinder;)Z > 14,2,4 @24 exception:16,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
9 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 4,
18 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, hasPinOrListener()Z > 1 @15 exception:17,
20 = binaryop(xor) 18 , 19,
return 20,
conditional branch(eq, to iindex=-1) 17,15,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, removePinnedSlice(Landroid/net/Uri;)V > 1,12 @30 exception:18,
3 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>6 <Application,Lcom/android/server/slice/PinnedSliceState>,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, destroy()V > 7 @11 exception:8,
monitorexit 3,
return,
23 = getCaughtException ,
return,","depth : 0
public void unpinSlice(String p1, Uri p2, IBinder p3){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	boolean v7 = v6.unpin(p1, p3);
	p0.removePinnedSlice(v5);
	String v9 = [resolveCodeAbst] + 23 = getCaughtException .getMessage();
	int v10 = Slog.w(""SliceManagerService"", v9);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 1
public PinnedSliceState getPinnedSlice(Uri p1){
	Object v1 = this.mPinnedSlicesByUri.get(p1);
	return v1;
}
-----
depth : 1
public boolean unpin(String p1, IBinder p2){
	boolean v1 = p2.unlinkToDeath(this.mDeathRecipient, 0);
	Object v2 = this.mListeners.remove(p2);
	boolean v3 = p0.hasPinOrListener();
	return (v3 ^ 1);
}
-----
depth : 1
public void removePinnedSlice(Uri p1){
	Object v1 = this.mPinnedSlicesByUri.remove(p1);
	v1.destroy();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V","1","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
14 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,12 @18 exception:13,
3 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>6 <Application,Lcom/android/server/slice/PinnedSliceState>,
conditional branch(eq, to iindex=-1) 7,8,
monitorexit 3,
return 7,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, unpin(Ljava/lang/String;Landroid/os/IBinder;)Z > 14,2,4 @24 exception:16,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
9 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 4,
18 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, hasPinOrListener()Z > 1 @15 exception:17,
20 = binaryop(xor) 18 , 19,
return 20,
conditional branch(eq, to iindex=-1) 17,15,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, removePinnedSlice(Landroid/net/Uri;)V > 1,12 @30 exception:18,
3 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>6 <Application,Lcom/android/server/slice/PinnedSliceState>,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, destroy()V > 7 @11 exception:8,
monitorexit 3,
return,
goto (from iindex= 15 to iindex = 11),
return,","depth : 0
public void unpinSlice(String p1, Uri p2, IBinder p3){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	boolean v7 = v6.unpin(p1, p3);
	p0.removePinnedSlice(v5);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 1
public PinnedSliceState getPinnedSlice(Uri p1){
	Object v1 = this.mPinnedSlicesByUri.get(p1);
	return v1;
}
-----
depth : 1
public boolean unpin(String p1, IBinder p2){
	boolean v1 = p2.unlinkToDeath(this.mDeathRecipient, 0);
	Object v2 = this.mListeners.remove(p2);
	boolean v3 = p0.hasPinOrListener();
	return (v3 ^ 1);
}
-----
depth : 1
public void removePinnedSlice(Uri p1){
	Object v1 = this.mPinnedSlicesByUri.remove(p1);
	v1.destroy();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
return 8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
return,
14 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,12 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, unpin(Ljava/lang/String;Landroid/os/IBinder;)Z > 14,2,4 @24 exception:16,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
9 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 4,
18 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, hasPinOrListener()Z > 1 @15 exception:17,
2 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mPinnedPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ne, to iindex=-1) 9,6,
goto (from iindex= 10 to iindex = 3),
14 = phi  6,13,
monitorexit 2,
return 14,
20 = binaryop(xor) 18 , 19,
return 20,
conditional branch(eq, to iindex=-1) 17,15,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, removePinnedSlice(Landroid/net/Uri;)V > 1,12 @30 exception:18,
3 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>6 <Application,Lcom/android/server/slice/PinnedSliceState>,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, destroy()V > 7 @11 exception:8,
return,
monitorexit 3,
return,
23 = getCaughtException ,
return,","depth : 0
public void unpinSlice(String p1, Uri p2, IBinder p3){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	boolean v7 = v6.unpin(p1, p3);
	p0.removePinnedSlice(v5);
	String v9 = [resolveCodeAbst] + 23 = getCaughtException .getMessage();
	int v10 = Slog.w(""SliceManagerService"", v9);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 2
public int checkAccess(String p1, Uri p2, int p3, int p4){
	int v1 = p0.checkSlicePermission(p2, 0, p1, p4, p3, 0);
	return v1;
}
-----
depth : 2
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 2
public void enforceCrossUser(String p1, Uri p2){
	return;
}
-----
depth : 1
public boolean unpin(String p1, IBinder p2){
	boolean v1 = p2.unlinkToDeath(this.mDeathRecipient, 0);
	Object v2 = this.mListeners.remove(p2);
	boolean v3 = p0.hasPinOrListener();
	return (v3 ^ 1);
}
-----
depth : 2
public boolean hasPinOrListener(){
	boolean v1 = this.mPinnedPkgs.isEmpty();
	boolean v2 = this.mListeners.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public void removePinnedSlice(Uri p1){
	Object v1 = this.mPinnedSlicesByUri.remove(p1);
	v1.destroy();
	return;
}
-----
depth : 2
public void destroy(){
	p0.setSlicePinned(0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
return 8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
return,
14 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,12 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, unpin(Ljava/lang/String;Landroid/os/IBinder;)Z > 14,2,4 @24 exception:16,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
9 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 4,
18 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, hasPinOrListener()Z > 1 @15 exception:17,
2 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mPinnedPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ne, to iindex=-1) 9,6,
goto (from iindex= 10 to iindex = 3),
14 = phi  6,13,
monitorexit 2,
return 14,
20 = binaryop(xor) 18 , 19,
return 20,
conditional branch(eq, to iindex=-1) 17,15,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, removePinnedSlice(Landroid/net/Uri;)V > 1,12 @30 exception:18,
3 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>6 <Application,Lcom/android/server/slice/PinnedSliceState>,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, destroy()V > 7 @11 exception:8,
return,
monitorexit 3,
return,
23 = getCaughtException ,
return,","depth : 0
public void unpinSlice(String p1, Uri p2, IBinder p3){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	boolean v7 = v6.unpin(p1, p3);
	p0.removePinnedSlice(v5);
	String v9 = [resolveCodeAbst] + 23 = getCaughtException .getMessage();
	int v10 = Slog.w(""SliceManagerService"", v9);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 2
public int checkAccess(String p1, Uri p2, int p3, int p4){
	int v1 = p0.checkSlicePermission(p2, 0, p1, p4, p3, 0);
	return v1;
}
-----
depth : 2
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 2
public void enforceCrossUser(String p1, Uri p2){
	return;
}
-----
depth : 1
public boolean unpin(String p1, IBinder p2){
	boolean v1 = p2.unlinkToDeath(this.mDeathRecipient, 0);
	Object v2 = this.mListeners.remove(p2);
	boolean v3 = p0.hasPinOrListener();
	return (v3 ^ 1);
}
-----
depth : 2
public boolean hasPinOrListener(){
	boolean v1 = this.mPinnedPkgs.isEmpty();
	boolean v2 = this.mListeners.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public void removePinnedSlice(Uri p1){
	Object v1 = this.mPinnedSlicesByUri.remove(p1);
	v1.destroy();
	return;
}
-----
depth : 2
public void destroy(){
	p0.setSlicePinned(0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","unpinSlice(Ljava/lang/String;Landroid/net/Uri;Landroid/os/IBinder;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:5,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:6,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
return 8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
return,
14 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getPinnedSlice(Landroid/net/Uri;)Lcom/android/server/slice/PinnedSliceState; > 1,12 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, unpin(Ljava/lang/String;Landroid/os/IBinder;)Z > 14,2,4 @24 exception:16,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
9 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 4,
18 = invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, hasPinOrListener()Z > 1 @15 exception:17,
2 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
3 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mPinnedPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ne, to iindex=-1) 9,6,
goto (from iindex= 12 to iindex = 2),
14 = phi  6,13,
monitorexit 2,
return 14,
20 = binaryop(xor) 18 , 19,
return 20,
conditional branch(eq, to iindex=-1) 17,15,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, removePinnedSlice(Landroid/net/Uri;)V > 1,12 @30 exception:18,
3 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>6 <Application,Lcom/android/server/slice/PinnedSliceState>,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, destroy()V > 7 @11 exception:8,
return,
monitorexit 3,
return,
23 = getCaughtException ,
return,","depth : 0
public void unpinSlice(String p1, Uri p2, IBinder p3){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	PinnedSliceState v6 = p0.getPinnedSlice(v5);
	boolean v7 = v6.unpin(p1, p3);
	p0.removePinnedSlice(v5);
	String v9 = [resolveCodeAbst] + 23 = getCaughtException .getMessage();
	int v10 = Slog.w(""SliceManagerService"", v9);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 2
public int checkAccess(String p1, Uri p2, int p3, int p4){
	int v1 = p0.checkSlicePermission(p2, 0, p1, p4, p3, 0);
	return v1;
}
-----
depth : 2
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 2
public void enforceCrossUser(String p1, Uri p2){
	return;
}
-----
depth : 1
public boolean unpin(String p1, IBinder p2){
	boolean v1 = p2.unlinkToDeath(this.mDeathRecipient, 0);
	Object v2 = this.mListeners.remove(p2);
	boolean v3 = p0.hasPinOrListener();
	return (v3 ^ 1);
}
-----
depth : 2
public boolean hasPinOrListener(){
	boolean v1 = this.mPinnedPkgs.isEmpty();
	boolean v2 = this.mListeners.isEmpty();
	return phiInstruction;
}
-----
depth : 1
public void removePinnedSlice(Uri p1){
	Object v1 = this.mPinnedSlicesByUri.remove(p1);
	v1.destroy();
	return;
}
-----
depth : 2
public void destroy(){
	p0.setSlicePinned(0);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/slice/SliceManagerService","pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V","0","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:6,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:7,
15 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,13,11 @18 exception:14,
17 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getOrCreatePinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,13,15 @22 exception:16,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, pin(Ljava/lang/String;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V > 17,2,4,5 @26 exception:18,
19 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
20 = new <Application,Lcom/android/server/slice/SliceManagerService$$ExternalSyntheticLambda0>@31,
return,","depth : 0
public void pinSlice(String p1, Uri p2, SliceSpec p3, IBinder p4){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	String v6 = p0.getProviderPkg(v5, v4);
	PinnedSliceState v7 = p0.getOrCreatePinnedSlice(v5, v6);
	v7.pin(p1, p3, p4);
	SliceManagerService$$ExternalSyntheticLambda0 v8 = new SliceManagerService$$ExternalSyntheticLambda0(p0,v6,p1,v4);
	boolean v10 = this.mHandler.post(v8);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V","1","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:6,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:7,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,13,11 @18 exception:14,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
17 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getOrCreatePinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,13,15 @22 exception:16,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>7 <Application,Lcom/android/server/slice/PinnedSliceState>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, createPinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,2,3 @13 exception:10,
12 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  8,11,
monitorexit 4,
return 15,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, pin(Ljava/lang/String;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V > 17,2,4,5 @26 exception:18,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
7 = new <Application,Lcom/android/server/slice/PinnedSliceState$ListenerInfo>@5,
16 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, mergeSpecs([Landroid/app/slice/SliceSpec;)V > 1,3 @32 exception:19,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, setSlicePinned(Z)V > 1,8 @36 exception:20,
monitorexit 5,
return,
19 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
20 = new <Application,Lcom/android/server/slice/SliceManagerService$$ExternalSyntheticLambda0>@31,
return,","depth : 0
public void pinSlice(String p1, Uri p2, SliceSpec p3, IBinder p4){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	String v6 = p0.getProviderPkg(v5, v4);
	PinnedSliceState v7 = p0.getOrCreatePinnedSlice(v5, v6);
	v7.pin(p1, p3, p4);
	SliceManagerService$$ExternalSyntheticLambda0 v8 = new SliceManagerService$$ExternalSyntheticLambda0(p0,v6,p1,v4);
	boolean v10 = this.mHandler.post(v8);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 1
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 1
public PinnedSliceState getOrCreatePinnedSlice(Uri p1, String p2){
	Object v1 = this.mPinnedSlicesByUri.get(p1);
	PinnedSliceState v2 = p0.createPinnedSlice(p1, p2);
	Object v3 = this.mPinnedSlicesByUri.put(p1, v2);
	return phiInstruction;
}
-----
depth : 1
public void pin(String p1, SliceSpec p2, IBinder p3){
	PinnedSliceState$ListenerInfo v0 = new PinnedSliceState$ListenerInfo(p0,p3,p1,1,v1,v2);
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	Object v4 = this.mListeners.put(p3, v0);
	p3.linkToDeath(this.mDeathRecipient, 0);
	p0.mergeSpecs(p2);
	p0.setSlicePinned(1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V","1","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:6,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:7,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,13,11 @18 exception:14,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
17 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getOrCreatePinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,13,15 @22 exception:16,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>7 <Application,Lcom/android/server/slice/PinnedSliceState>,
conditional branch(ne, to iindex=-1) 8,9,
15 = phi  8,11,
monitorexit 4,
return 15,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, pin(Ljava/lang/String;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V > 17,2,4,5 @26 exception:18,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
7 = new <Application,Lcom/android/server/slice/PinnedSliceState$ListenerInfo>@5,
16 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, mergeSpecs([Landroid/app/slice/SliceSpec;)V > 1,3 @32 exception:19,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, setSlicePinned(Z)V > 1,8 @36 exception:20,
monitorexit 5,
return,
19 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
20 = new <Application,Lcom/android/server/slice/SliceManagerService$$ExternalSyntheticLambda0>@31,
return,","depth : 0
public void pinSlice(String p1, Uri p2, SliceSpec p3, IBinder p4){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	String v6 = p0.getProviderPkg(v5, v4);
	PinnedSliceState v7 = p0.getOrCreatePinnedSlice(v5, v6);
	v7.pin(p1, p3, p4);
	SliceManagerService$$ExternalSyntheticLambda0 v8 = new SliceManagerService$$ExternalSyntheticLambda0(p0,v6,p1,v4);
	boolean v10 = this.mHandler.post(v8);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 1
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 1
public PinnedSliceState getOrCreatePinnedSlice(Uri p1, String p2){
	Object v1 = this.mPinnedSlicesByUri.get(p1);
	return phiInstruction;
}
-----
depth : 1
public void pin(String p1, SliceSpec p2, IBinder p3){
	PinnedSliceState$ListenerInfo v0 = new PinnedSliceState$ListenerInfo(p0,p3,p1,1,v1,v2);
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	Object v4 = this.mListeners.put(p3, v0);
	p3.linkToDeath(this.mDeathRecipient, 0);
	p0.mergeSpecs(p2);
	p0.setSlicePinned(1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:6,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:7,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
return 8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,13,11 @18 exception:14,
17 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getOrCreatePinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,13,15 @22 exception:16,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>7 <Application,Lcom/android/server/slice/PinnedSliceState>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, createPinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,2,3 @13 exception:10,
4 = new <Application,Lcom/android/server/slice/PinnedSliceState>@0,
return 4,
12 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  8,11,
monitorexit 4,
return 15,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, pin(Ljava/lang/String;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V > 17,2,4,5 @26 exception:18,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
7 = new <Application,Lcom/android/server/slice/PinnedSliceState$ListenerInfo>@5,
16 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, mergeSpecs([Landroid/app/slice/SliceSpec;)V > 1,3 @32 exception:19,
3 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mSupportedSpecs, <Application,[Landroid/app/slice/SliceSpec> > 1,
conditional branch(ne, to iindex=-1) 4,5,
10 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda1>@18,
14 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda2>@27,
18 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda3>@36,
22 = checkcast <Application,[Landroid/app/slice/SliceSpec>21 <Application,[Landroid/app/slice/SliceSpec>,
putfield 1.< Application, Lcom/android/server/slice/PinnedSliceState, mSupportedSpecs, <Application,[Landroid/app/slice/SliceSpec> > = 22,
monitorexit 3,
return,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, setSlicePinned(Z)V > 1,8 @36 exception:20,
3 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mSlicePinned, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 4,2,
putfield 1.< Application, Lcom/android/server/slice/PinnedSliceState, mSlicePinned, <Primordial,Z> > = 2,
conditional branch(eq, to iindex=-1) 2,5,
13 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mService, <Application,Lcom/android/server/slice/SliceManagerService> > 1,
16 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda4>@19,
goto (from iindex= 14 to iindex = 15),
monitorexit 3,
return,
monitorexit 5,
return,
19 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
20 = new <Application,Lcom/android/server/slice/SliceManagerService$$ExternalSyntheticLambda0>@31,
return,","depth : 0
public void pinSlice(String p1, Uri p2, SliceSpec p3, IBinder p4){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	String v6 = p0.getProviderPkg(v5, v4);
	PinnedSliceState v7 = p0.getOrCreatePinnedSlice(v5, v6);
	v7.pin(p1, p3, p4);
	SliceManagerService$$ExternalSyntheticLambda0 v8 = new SliceManagerService$$ExternalSyntheticLambda0(p0,v6,p1,v4);
	boolean v10 = this.mHandler.post(v8);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 2
public int checkAccess(String p1, Uri p2, int p3, int p4){
	int v1 = p0.checkSlicePermission(p2, 0, p1, p4, p3, 0);
	return v1;
}
-----
depth : 2
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 2
public void enforceCrossUser(String p1, Uri p2){
	return;
}
-----
depth : 1
public PinnedSliceState getOrCreatePinnedSlice(Uri p1, String p2){
	Object v1 = this.mPinnedSlicesByUri.get(p1);
	PinnedSliceState v2 = p0.createPinnedSlice(p1, p2);
	Object v3 = this.mPinnedSlicesByUri.put(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public PinnedSliceState createPinnedSlice(Uri p1, String p2){
	PinnedSliceState v0 = new PinnedSliceState(p0,p1,p2);
	return v0;
}
-----
depth : 1
public void pin(String p1, SliceSpec p2, IBinder p3){
	PinnedSliceState$ListenerInfo v0 = new PinnedSliceState$ListenerInfo(p0,p3,p1,1,v1,v2);
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	Object v4 = this.mListeners.put(p3, v0);
	p3.linkToDeath(this.mDeathRecipient, 0);
	p0.mergeSpecs(p2);
	p0.setSlicePinned(1);
	return;
}
-----
depth : 2
public void mergeSpecs(SliceSpec p1){
	List v1 = Arrays.asList(this.mSupportedSpecs);
	Stream v2 = v1.stream();
	PinnedSliceState$$ExternalSyntheticLambda1 v2 = new PinnedSliceState$$ExternalSyntheticLambda1(p0,p1);
	Stream v4 = v2.map(v2);
	PinnedSliceState$$ExternalSyntheticLambda2 v4 = new PinnedSliceState$$ExternalSyntheticLambda2();
	Stream v6 = v4.filter(v4);
	PinnedSliceState$$ExternalSyntheticLambda3 v6 = new PinnedSliceState$$ExternalSyntheticLambda3();
	Object v8 = v6.toArray(v6);
	this.mSupportedSpecs = v8;
	return;
}
-----
depth : 2
public void setSlicePinned(boolean p1){
	this.mSlicePinned = p1;
	Handler v1 = this.mService.getHandler();
	PinnedSliceState$$ExternalSyntheticLambda4 v1 = new PinnedSliceState$$ExternalSyntheticLambda4(p0);
	boolean v3 = v1.post(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:6,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:7,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
return 8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,13,11 @18 exception:14,
17 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getOrCreatePinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,13,15 @22 exception:16,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>7 <Application,Lcom/android/server/slice/PinnedSliceState>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, createPinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,2,3 @13 exception:10,
4 = new <Application,Lcom/android/server/slice/PinnedSliceState>@0,
return 4,
12 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  8,11,
monitorexit 4,
return 15,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, pin(Ljava/lang/String;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V > 17,2,4,5 @26 exception:18,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
7 = new <Application,Lcom/android/server/slice/PinnedSliceState$ListenerInfo>@5,
16 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, mergeSpecs([Landroid/app/slice/SliceSpec;)V > 1,3 @32 exception:19,
3 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mSupportedSpecs, <Application,[Landroid/app/slice/SliceSpec> > 1,
conditional branch(ne, to iindex=-1) 4,5,
10 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda1>@18,
14 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda2>@27,
18 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda3>@36,
22 = checkcast <Application,[Landroid/app/slice/SliceSpec>21 <Application,[Landroid/app/slice/SliceSpec>,
putfield 1.< Application, Lcom/android/server/slice/PinnedSliceState, mSupportedSpecs, <Application,[Landroid/app/slice/SliceSpec> > = 22,
monitorexit 3,
return,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, setSlicePinned(Z)V > 1,8 @36 exception:20,
3 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mSlicePinned, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 4,2,
putfield 1.< Application, Lcom/android/server/slice/PinnedSliceState, mSlicePinned, <Primordial,Z> > = 2,
conditional branch(eq, to iindex=-1) 2,5,
13 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mService, <Application,Lcom/android/server/slice/SliceManagerService> > 1,
16 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda4>@19,
goto (from iindex= 14 to iindex = 15),
monitorexit 3,
return,
monitorexit 5,
return,
19 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
20 = new <Application,Lcom/android/server/slice/SliceManagerService$$ExternalSyntheticLambda0>@31,
return,","depth : 0
public void pinSlice(String p1, Uri p2, SliceSpec p3, IBinder p4){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	String v6 = p0.getProviderPkg(v5, v4);
	PinnedSliceState v7 = p0.getOrCreatePinnedSlice(v5, v6);
	v7.pin(p1, p3, p4);
	SliceManagerService$$ExternalSyntheticLambda0 v8 = new SliceManagerService$$ExternalSyntheticLambda0(p0,v6,p1,v4);
	boolean v10 = this.mHandler.post(v8);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 2
public int checkAccess(String p1, Uri p2, int p3, int p4){
	int v1 = p0.checkSlicePermission(p2, 0, p1, p4, p3, 0);
	return v1;
}
-----
depth : 2
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 2
public void enforceCrossUser(String p1, Uri p2){
	return;
}
-----
depth : 1
public PinnedSliceState getOrCreatePinnedSlice(Uri p1, String p2){
	Object v1 = this.mPinnedSlicesByUri.get(p1);
	PinnedSliceState v2 = p0.createPinnedSlice(p1, p2);
	Object v3 = this.mPinnedSlicesByUri.put(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public PinnedSliceState createPinnedSlice(Uri p1, String p2){
	PinnedSliceState v0 = new PinnedSliceState(p0,p1,p2);
	return v0;
}
-----
depth : 1
public void pin(String p1, SliceSpec p2, IBinder p3){
	PinnedSliceState$ListenerInfo v0 = new PinnedSliceState$ListenerInfo(p0,p3,p1,1,v1,v2);
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	Object v4 = this.mListeners.put(p3, v0);
	p3.linkToDeath(this.mDeathRecipient, 0);
	p0.mergeSpecs(p2);
	p0.setSlicePinned(1);
	return;
}
-----
depth : 2
public void mergeSpecs(SliceSpec p1){
	List v1 = Arrays.asList(this.mSupportedSpecs);
	Stream v2 = v1.stream();
	PinnedSliceState$$ExternalSyntheticLambda1 v2 = new PinnedSliceState$$ExternalSyntheticLambda1(p0,p1);
	Stream v4 = v2.map(v2);
	PinnedSliceState$$ExternalSyntheticLambda2 v4 = new PinnedSliceState$$ExternalSyntheticLambda2();
	Stream v6 = v4.filter(v4);
	PinnedSliceState$$ExternalSyntheticLambda3 v6 = new PinnedSliceState$$ExternalSyntheticLambda3();
	Object v8 = v6.toArray(v6);
	this.mSupportedSpecs = v8;
	return;
}
-----
depth : 2
public void setSlicePinned(boolean p1){
	this.mSlicePinned = p1;
	Handler v1 = this.mService.getHandler();
	PinnedSliceState$$ExternalSyntheticLambda4 v1 = new PinnedSliceState$$ExternalSyntheticLambda4(p0);
	boolean v3 = v1.post(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","pinSlice(Ljava/lang/String;Landroid/net/Uri;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V","2","invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, verifyCaller(Ljava/lang/String;)V > 1,2 @0 exception:6,
return,
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceAccess(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @3 exception:7,
9 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, checkAccess(Ljava/lang/String;Landroid/net/Uri;II)I > 1,2,3,5,7 @8 exception:8,
return 8,
conditional branch(eq, to iindex=-1) 9,10,
18 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,3,16 @26 exception:17,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
conditional branch(eq, to iindex=-1) 20,10,
goto (from iindex= 18 to iindex = 29),
invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, enforceCrossUser(Ljava/lang/String;Landroid/net/Uri;)V > 1,2,3 @65 exception:38,
return,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,13,11 @18 exception:14,
17 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getOrCreatePinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,13,15 @22 exception:16,
4 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/slice/PinnedSliceState>7 <Application,Lcom/android/server/slice/PinnedSliceState>,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, createPinnedSlice(Landroid/net/Uri;Ljava/lang/String;)Lcom/android/server/slice/PinnedSliceState; > 1,2,3 @13 exception:10,
4 = new <Application,Lcom/android/server/slice/PinnedSliceState>@0,
return 4,
12 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPinnedSlicesByUri, <Application,Landroid/util/ArrayMap> > 1,
15 = phi  8,11,
monitorexit 4,
return 15,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, pin(Ljava/lang/String;[Landroid/app/slice/SliceSpec;Landroid/os/IBinder;)V > 17,2,4,5 @26 exception:18,
5 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mListeners, <Application,Landroid/util/ArrayMap> > 1,
7 = new <Application,Lcom/android/server/slice/PinnedSliceState$ListenerInfo>@5,
16 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mDeathRecipient, <Application,Landroid/os/IBinder$DeathRecipient> > 1,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, mergeSpecs([Landroid/app/slice/SliceSpec;)V > 1,3 @32 exception:19,
3 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mSupportedSpecs, <Application,[Landroid/app/slice/SliceSpec> > 1,
conditional branch(ne, to iindex=-1) 4,5,
10 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda1>@18,
14 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda2>@27,
18 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda3>@36,
22 = checkcast <Application,[Landroid/app/slice/SliceSpec>21 <Application,[Landroid/app/slice/SliceSpec>,
putfield 1.< Application, Lcom/android/server/slice/PinnedSliceState, mSupportedSpecs, <Application,[Landroid/app/slice/SliceSpec> > = 22,
monitorexit 3,
return,
invokevirtual < Application, Lcom/android/server/slice/PinnedSliceState, setSlicePinned(Z)V > 1,8 @36 exception:20,
3 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mSlicePinned, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 4,2,
putfield 1.< Application, Lcom/android/server/slice/PinnedSliceState, mSlicePinned, <Primordial,Z> > = 2,
conditional branch(eq, to iindex=-1) 2,5,
6 = getfield < Application, Lcom/android/server/slice/PinnedSliceState, mService, <Application,Lcom/android/server/slice/SliceManagerService> > 1,
9 = new <Application,Lcom/android/server/slice/PinnedSliceState$$ExternalSyntheticLambda5>@34,
monitorexit 3,
return,
monitorexit 5,
return,
19 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
20 = new <Application,Lcom/android/server/slice/SliceManagerService$$ExternalSyntheticLambda0>@31,
return,","depth : 0
public void pinSlice(String p1, Uri p2, SliceSpec p3, IBinder p4){
	p0.verifyCaller(p1);
	p0.enforceAccess(p1, p2);
	UserHandle v3 = Binder.getCallingUserHandle();
	int v4 = v3.getIdentifier();
	Uri v5 = ContentProvider.maybeAddUserId(p2, v4);
	String v6 = p0.getProviderPkg(v5, v4);
	PinnedSliceState v7 = p0.getOrCreatePinnedSlice(v5, v6);
	v7.pin(p1, p3, p4);
	SliceManagerService$$ExternalSyntheticLambda0 v8 = new SliceManagerService$$ExternalSyntheticLambda0(p0,v6,p1,v4);
	boolean v10 = this.mHandler.post(v8);
	return;
}
-----
depth : 1
public void verifyCaller(String p1){
	return;
}
-----
depth : 1
public void enforceAccess(String p1, Uri p2){
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	int v3 = p0.checkAccess(p1, p2, v1, v2);
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	int v6 = ContentProvider.getUserIdFromUri(p2, v5);
	String v7 = p0.getProviderPkg(p2, v6);
	boolean v8 = Objects.equals(p1, v7);
	p0.enforceCrossUser(p1, p2);
	return;
}
-----
depth : 2
public int checkAccess(String p1, Uri p2, int p3, int p4){
	int v1 = p0.checkSlicePermission(p2, 0, p1, p4, p3, 0);
	return v1;
}
-----
depth : 2
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 2
public void enforceCrossUser(String p1, Uri p2){
	return;
}
-----
depth : 1
public PinnedSliceState getOrCreatePinnedSlice(Uri p1, String p2){
	Object v1 = this.mPinnedSlicesByUri.get(p1);
	PinnedSliceState v2 = p0.createPinnedSlice(p1, p2);
	Object v3 = this.mPinnedSlicesByUri.put(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public PinnedSliceState createPinnedSlice(Uri p1, String p2){
	PinnedSliceState v0 = new PinnedSliceState(p0,p1,p2);
	return v0;
}
-----
depth : 1
public void pin(String p1, SliceSpec p2, IBinder p3){
	PinnedSliceState$ListenerInfo v0 = new PinnedSliceState$ListenerInfo(p0,p3,p1,1,v1,v2);
	int v1 = Binder.getCallingUid();
	int v2 = Binder.getCallingPid();
	Object v4 = this.mListeners.put(p3, v0);
	p3.linkToDeath(this.mDeathRecipient, 0);
	p0.mergeSpecs(p2);
	p0.setSlicePinned(1);
	return;
}
-----
depth : 2
public void mergeSpecs(SliceSpec p1){
	List v1 = Arrays.asList(this.mSupportedSpecs);
	Stream v2 = v1.stream();
	PinnedSliceState$$ExternalSyntheticLambda1 v2 = new PinnedSliceState$$ExternalSyntheticLambda1(p0,p1);
	Stream v4 = v2.map(v2);
	PinnedSliceState$$ExternalSyntheticLambda2 v4 = new PinnedSliceState$$ExternalSyntheticLambda2();
	Stream v6 = v4.filter(v4);
	PinnedSliceState$$ExternalSyntheticLambda3 v6 = new PinnedSliceState$$ExternalSyntheticLambda3();
	Object v8 = v6.toArray(v6);
	this.mSupportedSpecs = v8;
	return;
}
-----
depth : 2
public void setSlicePinned(boolean p1){
	this.mSlicePinned = p1;
	Handler v1 = this.mService.getHandler();
	PinnedSliceState$$ExternalSyntheticLambda5 v1 = new PinnedSliceState$$ExternalSyntheticLambda5(p0);
	boolean v3 = v1.post(v1);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/slice/SliceManagerService","grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V","0","conditional branch(eq, to iindex=-1) 5,16,
21 = invokevirtual < Application, Landroid/net/Uri$Builder, path(Ljava/lang/String;)Landroid/net/Uri$Builder; > 18,19 @36 exception:20,
23 = invokevirtual < Application, Landroid/net/Uri$Builder, build()Landroid/net/Uri; > 21 @40 exception:22,
27 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,23,25 @48 exception:26,
28 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 28,3,15,27,25,23 @55 exception:29,
40 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void grantPermissionFromUser(Uri p1, String p2, String p3, boolean p4){
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	Uri$Builder v6 = p1.buildUpon();
	Uri$Builder v7 = v6.path("""");
	Uri v8 = v7.build();
	int v9 = ContentProvider.getUserIdFromUri(v8, v5);
	String v10 = p0.getProviderPkg(v8, v9);
	this.mPermissions.grantSliceAccess(p2, v5, v10, v9, v8);
	long v12 = Binder.clearCallingIdentity();
	ContentResolver v13 = this.mContext.getContentResolver();
	v13.notifyChange(p1, 0);
	Binder.restoreCallingIdentity(v12);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V","1","conditional branch(eq, to iindex=-1) 5,16,
21 = invokevirtual < Application, Landroid/net/Uri$Builder, path(Ljava/lang/String;)Landroid/net/Uri$Builder; > 18,19 @36 exception:20,
23 = invokevirtual < Application, Landroid/net/Uri$Builder, build()Landroid/net/Uri; > 21 @40 exception:22,
27 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,23,25 @48 exception:26,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
28 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 28,3,15,27,25,23 @55 exception:29,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
return,
40 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void grantPermissionFromUser(Uri p1, String p2, String p3, boolean p4){
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	Uri$Builder v6 = p1.buildUpon();
	Uri$Builder v7 = v6.path("""");
	Uri v8 = v7.build();
	int v9 = ContentProvider.getUserIdFromUri(v8, v5);
	String v10 = p0.getProviderPkg(v8, v9);
	this.mPermissions.grantSliceAccess(p2, v5, v10, v9, v8);
	long v12 = Binder.clearCallingIdentity();
	ContentResolver v13 = this.mContext.getContentResolver();
	v13.notifyChange(p1, 0);
	Binder.restoreCallingIdentity(v12);
	return;
}
-----
depth : 1
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V","1","conditional branch(eq, to iindex=-1) 5,16,
30 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantFullAccess(Ljava/lang/String;I)V > 30,3,15 @26 exception:31,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
7 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,4 @5 exception:6,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, setHasFullAccess(Z)V > 7,8 @10 exception:9,
return,
goto (from iindex= 13 to iindex = 29),
40 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void grantPermissionFromUser(Uri p1, String p2, String p3, boolean p4){
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	this.mPermissions.grantFullAccess(p2, v5);
	long v7 = Binder.clearCallingIdentity();
	ContentResolver v8 = this.mContext.getContentResolver();
	v8.notifyChange(p1, 0);
	Binder.restoreCallingIdentity(v7);
	return;
}
-----
depth : 1
public void grantFullAccess(String p1, int p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SliceClientPermissions v2 = p0.getClient(v0);
	v2.setHasFullAccess(1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V","2","conditional branch(eq, to iindex=-1) 5,16,
21 = invokevirtual < Application, Landroid/net/Uri$Builder, path(Ljava/lang/String;)Landroid/net/Uri$Builder; > 18,19 @36 exception:20,
23 = invokevirtual < Application, Landroid/net/Uri$Builder, build()Landroid/net/Uri; > 21 @40 exception:22,
27 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,23,25 @48 exception:26,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
28 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 28,3,15,27,25,23 @55 exception:29,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions>6 <Application,Lcom/android/server/slice/SliceProviderPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceProviderPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>5 <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>@11,
10 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
18 = phi  6,8,
monitorexit 1,
return 18,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mTracker, <Application,Lcom/android/server/slice/DirtyTracker> > 1,
monitorexit 1,
return,
return,
40 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void grantPermissionFromUser(Uri p1, String p2, String p3, boolean p4){
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	Uri$Builder v6 = p1.buildUpon();
	Uri$Builder v7 = v6.path("""");
	Uri v8 = v7.build();
	int v9 = ContentProvider.getUserIdFromUri(v8, v5);
	String v10 = p0.getProviderPkg(v8, v9);
	this.mPermissions.grantSliceAccess(p2, v5, v10, v9, v8);
	long v12 = Binder.clearCallingIdentity();
	ContentResolver v13 = this.mContext.getContentResolver();
	v13.notifyChange(p1, 0);
	Binder.restoreCallingIdentity(v12);
	return;
}
-----
depth : 1
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void grantUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.addPath(v5);
	return;
}
-----
depth : 2
public SliceProviderPermissions getProvider(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedProviders.get(p1);
	String v2 = SliceProviderPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException);
	SliceProviderPermissions v7 = new SliceProviderPermissions(p1,p0);
	Object v9 = this.mCachedProviders.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public SliceProviderPermissions$SliceAuthority getOrCreateAuthority(String p1){
	Object v1 = this.mAuths.get(p1);
	SliceProviderPermissions$SliceAuthority v1 = new SliceProviderPermissions$SliceAuthority(p1,p0);
	Object v3 = this.mAuths.put(p1, v1);
	p0.onPersistableDirty(v1);
	return phiInstruction;
}
-----
depth : 2
public void addPkg(SlicePermissionManager$PkgUser p1){
	boolean v1 = this.mPkgs.add(p1);
	this.mTracker.onPersistableDirty(p0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V","2","conditional branch(eq, to iindex=-1) 5,16,
21 = invokevirtual < Application, Landroid/net/Uri$Builder, path(Ljava/lang/String;)Landroid/net/Uri$Builder; > 18,19 @36 exception:20,
23 = invokevirtual < Application, Landroid/net/Uri$Builder, build()Landroid/net/Uri; > 21 @40 exception:22,
27 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,23,25 @48 exception:26,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
28 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 28,3,15,27,25,23 @55 exception:29,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions>6 <Application,Lcom/android/server/slice/SliceProviderPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceProviderPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>5 <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>@11,
10 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
18 = phi  6,8,
monitorexit 1,
return 18,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
monitorexit 1,
return,
return,
40 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void grantPermissionFromUser(Uri p1, String p2, String p3, boolean p4){
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	Uri$Builder v6 = p1.buildUpon();
	Uri$Builder v7 = v6.path("""");
	Uri v8 = v7.build();
	int v9 = ContentProvider.getUserIdFromUri(v8, v5);
	String v10 = p0.getProviderPkg(v8, v9);
	this.mPermissions.grantSliceAccess(p2, v5, v10, v9, v8);
	long v12 = Binder.clearCallingIdentity();
	ContentResolver v13 = this.mContext.getContentResolver();
	v13.notifyChange(p1, 0);
	Binder.restoreCallingIdentity(v12);
	return;
}
-----
depth : 1
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void grantUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.addPath(v5);
	return;
}
-----
depth : 2
public SliceProviderPermissions getProvider(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedProviders.get(p1);
	String v2 = SliceProviderPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException);
	SliceProviderPermissions v7 = new SliceProviderPermissions(p1,p0);
	Object v9 = this.mCachedProviders.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public SliceProviderPermissions$SliceAuthority getOrCreateAuthority(String p1){
	Object v1 = this.mAuths.get(p1);
	SliceProviderPermissions$SliceAuthority v1 = new SliceProviderPermissions$SliceAuthority(p1,p0);
	Object v3 = this.mAuths.put(p1, v1);
	p0.onPersistableDirty(v1);
	return phiInstruction;
}
-----
depth : 2
public void addPkg(SlicePermissionManager$PkgUser p1){
	boolean v1 = this.mPkgs.add(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","grantPermissionFromUser(Landroid/net/Uri;Ljava/lang/String;Ljava/lang/String;Z)V","2","conditional branch(eq, to iindex=-1) 5,16,
21 = invokevirtual < Application, Landroid/net/Uri$Builder, path(Ljava/lang/String;)Landroid/net/Uri$Builder; > 18,19 @36 exception:20,
23 = invokevirtual < Application, Landroid/net/Uri$Builder, build()Landroid/net/Uri; > 21 @40 exception:22,
27 = invokevirtual < Application, Lcom/android/server/slice/SliceManagerService, getProviderPkg(Landroid/net/Uri;I)Ljava/lang/String; > 1,23,25 @48 exception:26,
10 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
18 = getfield < Application, Landroid/content/pm/ProviderInfo, packageName, <Application,Ljava/lang/String> > 17,
return 18,
28 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mPermissions, <Application,Lcom/android/server/slice/SlicePermissionManager> > 1,
invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, grantSliceAccess(Ljava/lang/String;ILjava/lang/String;ILandroid/net/Uri;)V > 28,3,15,27,25,23 @55 exception:29,
7 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
9 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@5,
12 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getClient(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceClientPermissions; > 1,7 @10 exception:11,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceClientPermissions>6 <Application,Lcom/android/server/slice/SliceClientPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceClientPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedClients, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
invokevirtual < Application, Lcom/android/server/slice/SliceClientPermissions, grantUri(Landroid/net/Uri;Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 12,6,9 @14 exception:13,
4 = new <Application,Lcom/android/server/slice/SlicePermissionManager$PkgUser>@0,
return,
15 = invokevirtual < Application, Lcom/android/server/slice/SlicePermissionManager, getProvider(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)Lcom/android/server/slice/SliceProviderPermissions; > 1,9 @17 exception:14,
3 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
7 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions>6 <Application,Lcom/android/server/slice/SliceProviderPermissions>,
monitorexit 3,
conditional branch(ne, to iindex=-1) 7,11,
40 = getCaughtException ,
conditional branch(eq, to iindex=-1) 15,11,
42 = getCaughtException ,
64 = getCaughtException ,
goto (from iindex= 44 to iindex = 9),
73 = new <Application,Lcom/android/server/slice/SliceProviderPermissions>@90,
75 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorenter 75,
76 = getfield < Application, Lcom/android/server/slice/SlicePermissionManager, mCachedProviders, <Application,Landroid/util/ArrayMap> > 1,
monitorexit 75,
goto (from iindex= 56 to iindex = 4),
84 = phi  7,73,
return 84,
21 = invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions, getOrCreateAuthority(Ljava/lang/String;)Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority; > 15,19 @29 exception:20,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions, mAuths, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>5 <Application,Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority>,
conditional branch(ne, to iindex=-1) 6,7,
18 = phi  6,8,
monitorexit 1,
return 18,
invokevirtual < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, addPkg(Lcom/android/server/slice/SlicePermissionManager$PkgUser;)V > 21,7 @33 exception:22,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mPkgs, <Application,Landroid/util/ArraySet> > 1,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/slice/SliceProviderPermissions$SliceAuthority, mTracker, <Application,Lcom/android/server/slice/DirtyTracker> > 1,
monitorexit 1,
return,
return,
40 = getfield < Application, Lcom/android/server/slice/SliceManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void grantPermissionFromUser(Uri p1, String p2, String p3, boolean p4){
	UserHandle v4 = Binder.getCallingUserHandle();
	int v5 = v4.getIdentifier();
	Uri$Builder v6 = p1.buildUpon();
	Uri$Builder v7 = v6.path("""");
	Uri v8 = v7.build();
	int v9 = ContentProvider.getUserIdFromUri(v8, v5);
	String v10 = p0.getProviderPkg(v8, v9);
	this.mPermissions.grantSliceAccess(p2, v5, v10, v9, v8);
	long v12 = Binder.clearCallingIdentity();
	ContentResolver v13 = this.mContext.getContentResolver();
	v13.notifyChange(p1, 0);
	Binder.restoreCallingIdentity(v12);
	return;
}
-----
depth : 1
public String getProviderPkg(Uri p1, int p2){
	long v1 = Binder.clearCallingIdentity();
	Uri v2 = ContentProvider.getUriWithoutUserId(p1);
	String v3 = v2.getAuthority();
	PackageManager v4 = this.mContext.getPackageManager();
	int v5 = ContentProvider.getUserIdFromUri(p1, p2);
	ProviderInfo v6 = v4.resolveContentProviderAsUser(v3, 0, v5);
	Binder.restoreCallingIdentity(v1);
	return ProviderInfo.packageName;
}
-----
depth : 1
public void grantSliceAccess(String p1, int p2, String p3, int p4, Uri p5){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(p1,p2);
	SlicePermissionManager$PkgUser v1 = new SlicePermissionManager$PkgUser(p3,p4);
	SliceClientPermissions v3 = p0.getClient(v0);
	v3.grantUri(p5, v1);
	SliceProviderPermissions v5 = p0.getProvider(v1);
	Uri v6 = ContentProvider.getUriWithoutUserId(p5);
	String v7 = v6.getAuthority();
	SliceProviderPermissions$SliceAuthority v8 = v5.getOrCreateAuthority(v7);
	v8.addPkg(v0);
	return;
}
-----
depth : 2
public SliceClientPermissions getClient(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedClients.get(p1);
	String v2 = SliceClientPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read client"", caughtException);
	SliceClientPermissions v7 = new SliceClientPermissions(p1,p0);
	Object v9 = this.mCachedClients.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public void grantUri(Uri p1, SlicePermissionManager$PkgUser p2){
	SlicePermissionManager$PkgUser v0 = new SlicePermissionManager$PkgUser(v1,v2);
	String v1 = p1.getAuthority();
	int v2 = p2.getUserId();
	SliceClientPermissions$SliceAuthority v4 = p0.getOrCreateAuthority(v0, p2);
	List v5 = p1.getPathSegments();
	v4.addPath(v5);
	return;
}
-----
depth : 2
public SliceProviderPermissions getProvider(SlicePermissionManager$PkgUser p1){
	Object v1 = this.mCachedProviders.get(p1);
	String v2 = SliceProviderPermissions.getFileName(p1);
	SlicePermissionManager$ParserHolder v3 = p0.getParser(v2);
	XmlPullParser v4 = SlicePermissionManager$ParserHolder.-$$Nest$fgetparser(v3);
	v3.close();
	[resolveCodeAbst] + 40 = getCaughtException .addSuppressed(caughtException);
	int v7 = Log.e(""SlicePermissionManager"", ""Can't read provider"", caughtException);
	SliceProviderPermissions v7 = new SliceProviderPermissions(p1,p0);
	Object v9 = this.mCachedProviders.put(p1, v7);
	return phiInstruction;
}
-----
depth : 2
public SliceProviderPermissions$SliceAuthority getOrCreateAuthority(String p1){
	Object v1 = this.mAuths.get(p1);
	return phiInstruction;
}
-----
depth : 2
public void addPkg(SlicePermissionManager$PkgUser p1){
	boolean v1 = this.mPkgs.add(p1);
	this.mTracker.onPersistableDirty(p0);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/slice/SliceManagerService","getBackupPayload(I)[B","0","conditional branch(eq, to iindex=-1) 2,9,
11 = new <Application,Ljava/io/ByteArrayOutputStream>@34,
31 = getCaughtException ,
32 = new <Application,Ljava/lang/StringBuilder>@70,
return 9,","depth : 0
public byte[] getBackupPayload(int p1){
	ByteArrayOutputStream v1 = new ByteArrayOutputStream();
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""getBackupPayload: error writing payload for user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.w(""SliceManagerService"", v7, caughtException);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","getBackupPayload(I)[B","0","conditional branch(eq, to iindex=-1) 2,9,
11 = new <Application,Ljava/io/ByteArrayOutputStream>@34,
31 = getCaughtException ,
32 = new <Application,Ljava/lang/StringBuilder>@70,
return 9,","depth : 0
public byte[] getBackupPayload(int p1){
	ByteArrayOutputStream v1 = new ByteArrayOutputStream();
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlSerializer v4 = v3.newSerializer();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""getBackupPayload: error writing payload for user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""SliceManagerService"", v8, caughtException);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","getBackupPayload(I)[B","0","conditional branch(eq, to iindex=-1) 2,9,
11 = new <Application,Ljava/io/ByteArrayOutputStream>@34,
17 = getstatic < Application, Landroid/util/Xml$Encoding, UTF_8, <Application,Landroid/util/Xml$Encoding> >,
31 = getCaughtException ,
32 = new <Application,Ljava/lang/StringBuilder>@70,
return 9,","depth : 0
public byte[] getBackupPayload(int p1){
	ByteArrayOutputStream v1 = new ByteArrayOutputStream();
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlSerializer v4 = v3.newSerializer();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""getBackupPayload: error writing payload for user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.w(""SliceManagerService"", v8, caughtException);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","getBackupPayload(I)[B","0","conditional branch(eq, to iindex=-1) 2,9,
11 = new <Application,Ljava/io/ByteArrayOutputStream>@34,
17 = getstatic < Application, Landroid/util/Xml$Encoding, UTF_8, <Application,Landroid/util/Xml$Encoding> >,
31 = getCaughtException ,
32 = new <Application,Ljava/lang/StringBuilder>@70,
return 9,","depth : 0
public byte[] getBackupPayload(int p1){
	ByteArrayOutputStream v1 = new ByteArrayOutputStream();
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlSerializer v4 = v3.newSerializer();
	String v5 = Xml$Encoding.UTF_8.name();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""getBackupPayload: error writing payload for user "");
	StringBuilder v8 = v5.append(p1);
	String v9 = v5.toString();
	int v10 = Slog.w(""SliceManagerService"", v9, caughtException);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/slice/SliceManagerService","getBackupPayload(I)[B","0","conditional branch(eq, to iindex=-1) 2,9,
11 = new <Application,Ljava/io/ByteArrayOutputStream>@34,
17 = getstatic < Application, Landroid/util/Xml$Encoding, UTF_8, <Application,Landroid/util/Xml$Encoding> >,
31 = getCaughtException ,
32 = new <Application,Ljava/lang/StringBuilder>@70,
return 9,","depth : 0
public byte[] getBackupPayload(int p1){
	ByteArrayOutputStream v1 = new ByteArrayOutputStream();
	XmlPullParserFactory v3 = XmlPullParserFactory.newInstance();
	XmlSerializer v4 = v3.newSerializer();
	String v5 = Xml$Encoding.UTF_8.name();
	v4.setOutput(v1, v5);
	StringBuilder v6 = new StringBuilder();
	StringBuilder v8 = v6.append(""getBackupPayload: error writing payload for user "");
	StringBuilder v9 = v6.append(p1);
	String v10 = v6.toString();
	int v11 = Slog.w(""SliceManagerService"", v10, caughtException);
	return 0;
}
-----
","SYS_OR_SIG"

