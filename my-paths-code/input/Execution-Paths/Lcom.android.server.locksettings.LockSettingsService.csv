"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Code Merged","Access Control Level"
"Lcom/android/server/locksettings/LockSettingsService","checkCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse;","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,6 @4 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @8 exception:11,
return 8,","depth : 0
-----
","public VerifyCredentialResponse checkCredential(LockscreenCredential p1, int p2, ICheckCredentialProgressCallback p3){
	VerifyCredentialResponse v2 = p0.doVerifyCredential(p1, p2, p3, 0);
	p0.scheduleGc();
	return v2;
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","checkCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse;","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,6 @4 exception:7,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 30,6,
39 = new <Application,Ljava/lang/StringBuilder>@79,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 39 @81 exception:40,
43 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,41 @86 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,44 @91 exception:45,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,47 @96 exception:48,
51 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @99 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,51 @103 exception:52,
55 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 39 @106 exception:54,
57 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 13,55 @110 exception:56,
58 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
return 58,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @8 exception:11,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
return 8,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public VerifyCredentialResponse checkCredential(LockscreenCredential p1, int p2, ICheckCredentialProgressCallback p3){
	if (p1 == 0) {
		boolean v3 = p1.isNone();
		if (v3 != 0) {
			if (p2 != -9999) {
				ContentResolver v4 = this.mContext.getContentResolver();
				int v5 = this.mInjector.settingsGlobalGetInt(v4, ""device_provisioned"", 0);
				if (v5 == 0) {
					VerifyCredentialResponse v6 = LockSettingsService.spBasedDoVerifyCredential(p1, p2, p3, 0);
					if (v6 == 0) {
						if (p2 != -9999) {
							LockSettingsStorage$CredentialHash v7 = this.mStorage.readCredentialHash(p2);
							boolean v8 = p1.checkAgainstStoredType(LockSettingsStorage$CredentialHash.type);
							if (v8 != 0) {
								int v14 = p1.getType();
								VerifyCredentialResponse v2 = VerifyCredentialResponse.ERROR;
								LockSettingsService$$ExternalSyntheticLambda3 v19 = new LockSettingsService$$ExternalSyntheticLambda3();
								boolean v21 = this.mHandler.postDelayed(v19, 2000);
								return v2;
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","checkCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,6 @4 exception:7,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @8 exception:11,
return 8,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse checkCredential(LockscreenCredential p1, int p2, ICheckCredentialProgressCallback p3){
	if (p1 == 0) {
		boolean v3 = p1.isNone();
		if (v3 != 0) {
			if (p2 != -9999) {
				ContentResolver v4 = this.mContext.getContentResolver();
				int v6 = Settings$Global.getInt(v4, ""device_provisioned"", 0);
				int v5 = v6;
				if (v5 == 0) {
					boolean v8 = this.mInjector.hasEnrolledBiometrics(p2);
					if ((0 & 1) == 0) {
						boolean v17 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
						if (v17 != 0) {
							if (p2 != -9999) {
								long v18 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
								IGateKeeperService v19 = LockSettingsService.getGateKeeperService();
								SyntheticPasswordManager$AuthenticationResult v20 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v19, v18, p1, p2, p3);
								int v21 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
								if (v21 != 0) {
									byte[] v22 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
									this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p2, v22);
									IGateKeeperService v24 = LockSettingsService.getGateKeeperService();
									VerifyCredentialResponse v25 = this.mSpManager.verifyChallenge(v24, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2);
									int v26 = v25.getResponseCode();
									if (v26 == 0) {
										int v27 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
										if (v27 != 0) {
											int v28 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
											if (v28 != 1) {
												int v29 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
												if (v29 <= 0) {
													LockSettingsService.requireStrongAuth(8, p2);
													boolean v31 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
													if (v31 == 0) {
														if (1 == 0) {
															VerifyCredentialResponse v7 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
															if (v7 == 0) {
																if (p2 != -9999) {
																	LockSettingsStorage$CredentialHash v33 = LockSettingsStorage.readPasswordHashIfExists(p2);
																	if (v33 == 0) {
																		LockSettingsStorage$CredentialHash v34 = LockSettingsStorage.readPatternHashIfExists(p2);
																		if (v34 == 0) {
																			LockSettingsStorage$CredentialHash v35 = LockSettingsStorage$CredentialHash.createEmptyHash();
																			LockSettingsStorage$CredentialHash v32 = v35;
																			if (LockSettingsStorage$CredentialHash.type != 2) {
																				int v37 = LockscreenCredential.getType();
																				if (v37 == 4) {
																					int v38 = LockscreenCredential.getType();
																					if (v38 != 3) {
																						boolean v36 = 1;
																						if (v36 != 0) {
																							if (v32 == 0) {
																								if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																									boolean v40 = p1.isNone();
																									if (v40 == 0) {
																										if (v32 == 0) {
																											if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																												boolean v41 = p1.isNone();
																												if (v41 == 0) {
																													StrictMode.noteDiskRead();
																													IGateKeeperService v43 = LockSettingsService.getGateKeeperService();
																													byte[] v44 = p1.getCredential();
																													GateKeeperResponse v45 = v43.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v44);
																													VerifyCredentialResponse v46 = LockSettingsService.convertResponse(v45);
																													boolean v47 = v45.getShouldReEnroll();
																													int v48 = v46.getResponseCode();
																													if (v48 != 0) {
																														if (p3 == 0) {
																															p3.onCredentialVerified();
																															LockSettingsService.setUserPasswordMetrics(p1, p2);
																															byte[] v51 = p1.getCredential();
																															LockSettingsService.unlockKeystore(v51, p2);
																															byte[] v59 = LockSettingsService.secretFromCredential(p1);
																															LockSettingsService.unlockUser(p2, v59);
																															boolean v61 = LockSettingsService.isProfileWithSeparatedLock(p2);
																															if (v61 == 0) {
																																LockSettingsService.setDeviceUnlockedForUser(p2);
																																if (v47 == 0) {
																																	boolean v63 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p2);
																																	if (v63 == 0) {
																																		LockSettingsService.sendCredentialsOnUnlockIfRequired(p1, p2);
																																		VerifyCredentialResponse v39 = v46;
																																		int v65 = this.mResponseCode;
																																		if (v65 != 0) {
																																			Message v67 = this.mHandler.obtainMessage(5, p2, 0);
																																			v67.sendToTarget();
																																			VerifyCredentialResponse v2 = v39;
																																			p0.scheduleGc();
																																			return v2;
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","checkCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,6 @4 exception:7,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
return 7,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @8 exception:11,
return 8,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse checkCredential(LockscreenCredential p1, int p2, ICheckCredentialProgressCallback p3){
	if (p1 == 0) {
		boolean v3 = p1.isNone();
		if (v3 != 0) {
			if (p2 != -9999) {
				ContentResolver v4 = this.mContext.getContentResolver();
				int v6 = Settings$Global.getInt(v4, ""device_provisioned"", 0);
				int v5 = v6;
				if (v5 == 0) {
					boolean v8 = this.mInjector.hasEnrolledBiometrics(p2);
					if ((0 & 1) == 0) {
						boolean v17 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
						if (v17 != 0) {
							if (p2 != -9999) {
								long v18 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
								IGateKeeperService v19 = LockSettingsService.getGateKeeperService();
								SyntheticPasswordManager$AuthenticationResult v20 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v19, v18, p1, p2, p3);
								int v21 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
								if (v21 != 0) {
									byte[] v22 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
									this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p2, v22);
									IGateKeeperService v24 = LockSettingsService.getGateKeeperService();
									VerifyCredentialResponse v25 = this.mSpManager.verifyChallenge(v24, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2);
									int v26 = v25.getResponseCode();
									if (v26 == 0) {
										int v27 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
										if (v27 != 0) {
											int v28 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
											if (v28 != 1) {
												int v29 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
												if (v29 <= 0) {
													LockSettingsService.requireStrongAuth(8, p2);
													boolean v31 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
													if (v31 == 0) {
														if (1 == 0) {
															VerifyCredentialResponse v7 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
															if (v7 == 0) {
																if (p2 != -9999) {
																	LockSettingsStorage$CredentialHash v33 = LockSettingsStorage.readPasswordHashIfExists(p2);
																	if (v33 == 0) {
																		LockSettingsStorage$CredentialHash v34 = LockSettingsStorage.readPatternHashIfExists(p2);
																		if (v34 == 0) {
																			LockSettingsStorage$CredentialHash v32 = v34;
																			if (LockSettingsStorage$CredentialHash.type != 2) {
																				int v36 = LockscreenCredential.getType();
																				if (v36 == 4) {
																					int v37 = LockscreenCredential.getType();
																					if (v37 != 3) {
																						boolean v35 = 1;
																						if (v35 != 0) {
																							if (v32 == 0) {
																								if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																									boolean v39 = p1.isNone();
																									if (v39 == 0) {
																										if (v32 == 0) {
																											if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																												boolean v40 = p1.isNone();
																												if (v40 == 0) {
																													StrictMode.noteDiskRead();
																													IGateKeeperService v42 = LockSettingsService.getGateKeeperService();
																													byte[] v43 = p1.getCredential();
																													GateKeeperResponse v44 = v42.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v43);
																													VerifyCredentialResponse v45 = LockSettingsService.convertResponse(v44);
																													boolean v46 = v44.getShouldReEnroll();
																													int v47 = v45.getResponseCode();
																													if (v47 != 0) {
																														if (p3 == 0) {
																															p3.onCredentialVerified();
																															LockSettingsService.setUserPasswordMetrics(p1, p2);
																															byte[] v50 = p1.getCredential();
																															LockSettingsService.unlockKeystore(v50, p2);
																															byte[] v58 = LockSettingsService.secretFromCredential(p1);
																															LockSettingsService.unlockUser(p2, v58);
																															boolean v60 = LockSettingsService.isProfileWithSeparatedLock(p2);
																															if (v60 == 0) {
																																LockSettingsService.setDeviceUnlockedForUser(p2);
																																if (v46 == 0) {
																																	boolean v62 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p2);
																																	if (v62 == 0) {
																																		LockSettingsService.sendCredentialsOnUnlockIfRequired(p1, p2);
																																		VerifyCredentialResponse v38 = v45;
																																		int v64 = this.mResponseCode;
																																		if (v64 != 0) {
																																			Message v66 = this.mHandler.obtainMessage(5, p2, 0);
																																			v66.sendToTarget();
																																			VerifyCredentialResponse v2 = v38;
																																			p0.scheduleGc();
																																			return v2;
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","getLong(Ljava/lang/String;JI)J","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 6,2,3,4 @5 exception:7,
return 8,","depth : 0
-----
","public long getLong(String p1, long p2, int p3){
	long v2 = this.mStorage.getLong(p1, p2, p3);
	return v2;
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getLong(Ljava/lang/String;JI)J","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 6,2,3,4 @5 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
goto (from iindex= 6 to iindex = 5),
12 = phi  3,11,
return 12,
return 8,","depth : 0
-----
depth : 1
-----
","public long getLong(String p1, long p2, int p3){
	String v3 = LockSettingsStorage.getString(p1, 0, p3);
	boolean v4 = TextUtils.isEmpty(v3);
	if (v4 == 0) {
		long v2 = p2;
		return v2;
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getLong(Ljava/lang/String;JI)J","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 6,2,3,4 @5 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
11 = invokestatic < Application, Ljava/lang/Long, parseLong(Ljava/lang/String;)J > 7 @12 exception:10,
12 = phi  3,11,
return 12,
return 8,","depth : 0
-----
depth : 1
-----
","public long getLong(String p1, long p2, int p3){
	String v3 = LockSettingsStorage.getString(p1, 0, p3);
	boolean v4 = TextUtils.isEmpty(v3);
	if (v4 == 0) {
		long v5 = Long.parseLong(v3);
		long v2 = p2;
		return v2;
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getLong(Ljava/lang/String;JI)J","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 6,2,3,4 @5 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = phi  2,10,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readKeyValue(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,11,3,4 @16 exception:12,
return 13,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
goto (from iindex= 6 to iindex = 5),
12 = phi  3,11,
return 12,
return 8,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public long getLong(String p1, long p2, int p3){
	if (p3 != -9999) {
		boolean v4 = ""legacy_lock_pattern_enabled"".equals(p1);
		if (v4 == 0) {
			String v5 = LockSettingsStorage.readKeyValue(p1, 0, p3);
			String v3 = v5;
			boolean v6 = TextUtils.isEmpty(v3);
			if (v6 == 0) {
				long v2 = p2;
				return v2;
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getLong(Ljava/lang/String;JI)J","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 6,2,3,4 @5 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = phi  2,10,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readKeyValue(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,11,3,4 @16 exception:12,
return 13,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
11 = invokestatic < Application, Ljava/lang/Long, parseLong(Ljava/lang/String;)J > 7 @12 exception:10,
12 = phi  3,11,
return 12,
return 8,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public long getLong(String p1, long p2, int p3){
	if (p3 != -9999) {
		boolean v4 = ""legacy_lock_pattern_enabled"".equals(p1);
		if (v4 == 0) {
			String v5 = LockSettingsStorage.readKeyValue(p1, 0, p3);
			String v3 = v5;
			boolean v6 = TextUtils.isEmpty(v3);
			if (v6 == 0) {
				long v7 = Long.parseLong(v3);
				long v2 = p2;
				return v2;
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z","0","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 9),
16 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,14 @24 exception:15,
conditional branch(ne, to iindex=-1) 16,6,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,17 @32 exception:18,
conditional branch(ne, to iindex=-1) 19,6,
22 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,20 @40 exception:21,
conditional branch(eq, to iindex=-1) 22,6,
24 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @46 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
goto (from iindex= 27 to iindex = 10),
35 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @62 exception:34,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, enforceFrpResolved()V > 1 @66 exception:36,
38 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @69 exception:37,
conditional branch(ne, to iindex=-1) 38,6,
40 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,4 @76 exception:39,
conditional branch(eq, to iindex=-1) 40,6,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
43 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 41,4 @84 exception:42,
44 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 43,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,44,6 @90 exception:45,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 3 @93 exception:47,
49 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @96 exception:48,
51 = phi  3,3,49,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 54,
56 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setLockCredentialInternal(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,2,51,4,6 @103 exception:55,
conditional branch(ne, to iindex=-1) 56,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,4,57,6 @119 exception:58,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifyPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @122 exception:59,
monitorexit 54,
61 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,4 @126 exception:60,
conditional branch(eq, to iindex=-1) 61,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,4 @132 exception:62,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,4 @135 exception:64,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, onPostPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @138 exception:65,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @141 exception:66,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 35 @144 exception:67,
return 57,","depth : 0
-----
","public boolean setLockCredential(LockscreenCredential p1, LockscreenCredential p2, int p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p1 == 0) {
			int v1 = p1.getType();
			if (v1 != -1) {
				if (v2 != 0) {
					if (v3 != 0) {
						if (v4 == 0) {
							boolean v5 = p2.isNone();
							if (v5 == 0) {
								long v6 = Binder.clearCallingIdentity();
								p0.enforceFrpResolved();
								boolean v8 = p2.isNone();
								if (v8 != 0) {
									boolean v9 = p0.isProfileWithUnifiedLock(p3);
									if (v9 == 0) {
										UserInfo v10 = this.mUserManager.getProfileParent(p3);
										VerifyCredentialResponse v11 = p0.verifyCredential(p2, UserInfo.id, 0);
										p2.zeroize();
										LockscreenCredential v13 = LockscreenCredential.createNone();
										boolean v14 = p0.setLockCredentialInternal(p1, p2, p3, 0);
										if (v14 != 0) {
											p0.setSeparateProfileChallengeEnabledLocked(p3, 1, 0);
											p0.notifyPasswordChanged(p1, p3);
											boolean v17 = p0.isCredentialSharableWithParent(p3);
											if (v17 == 0) {
												p0.setDeviceUnlockedForUser(p3);
												p0.notifySeparateProfileChallengeChanged(p3);
												p0.onPostPasswordChanged(p1, p3);
												p0.scheduleGc();
												Binder.restoreCallingIdentity(v6);
												return 1;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z","1","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @6 exception:7,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 9),
16 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,14 @24 exception:15,
conditional branch(ne, to iindex=-1) 16,6,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,17 @32 exception:18,
conditional branch(ne, to iindex=-1) 19,6,
22 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,20 @40 exception:21,
conditional branch(eq, to iindex=-1) 22,6,
24 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @46 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
goto (from iindex= 27 to iindex = 10),
35 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @62 exception:34,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, enforceFrpResolved()V > 1 @66 exception:36,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 5,4,6,7,7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 11 to iindex = 2),
11 = phi  10,7,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 12,4,13,7,7 @27 exception:14,
conditional branch(ne, to iindex=-1) 15,10,
16 = phi  7,10,
conditional branch(eq, to iindex=-1) 11,7,
conditional branch(ne, to iindex=-1) 16,7,
goto (from iindex= 21 to iindex = 9),
return,
38 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @69 exception:37,
conditional branch(ne, to iindex=-1) 38,6,
40 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,4 @76 exception:39,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 40,6,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
43 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 41,4 @84 exception:42,
44 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 43,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,44,6 @90 exception:45,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,5 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,9 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
goto (from iindex= 8 to iindex = 10),
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,8,4 @31 exception:20,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @35 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @38 exception:26,
return 21,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 3 @93 exception:47,
49 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @96 exception:48,
1 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = new <Primordial,[B>@32 ,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 1,4,3 @6 exception:5,
return 1,
51 = phi  3,3,49,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 54,
56 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setLockCredentialInternal(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,2,51,4,6 @103 exception:55,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:6,
9 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 3 @3 exception:8,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,4 @9 exception:11,
conditional branch(eq, to iindex=-1) 12,13,
monitorexit 10,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @22 exception:14,
conditional branch(eq, to iindex=-1) 15,13,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 16,4 @71 exception:17,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,4 @75 exception:19,
conditional branch(eq, to iindex=-1) 20,13,
21 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 18,
conditional branch(ne, to iindex=-1) 21,13,
23 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @113 exception:22,
conditional branch(ne, to iindex=-1) 23,13,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, close()V > 3 @126 exception:31,
33 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @129 exception:32,
47 = phi  3,37,3,3,3,33,
50 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 50,
51 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 18,
53 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, initializeSyntheticPasswordLocked([BLcom/android/internal/widget/LockscreenCredential;I)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,51,47,4 @138 exception:52,
55 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedSetLockCredentialInternalLocked(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,2,47,4,5 @141 exception:54,
monitorexit 50,
return 55,
conditional branch(ne, to iindex=-1) 56,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,4,57,6 @119 exception:58,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getBoolean(Ljava/lang/String;ZI)Z > 1,5,6,2 @3 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,5,3,2 @7 exception:9,
conditional branch(eq, to iindex=-1) 3,6,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 11,2 @14 exception:12,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,2 @17 exception:13,
goto (from iindex= 9 to iindex = 4),
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifyPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @122 exception:59,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
5 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda2>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda2, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/internal/widget/LockscreenCredential;I)V > 5,1,2,3 @4 exception:6,
8 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 4,5 @7 exception:7,
return,
monitorexit 54,
61 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,4 @126 exception:60,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 61,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,4 @132 exception:62,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
4 = load_metadata: <Application,Landroid/app/trust/TrustManager>, <Primordial,Ljava/lang/Class>,
6 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 3,4 @4 exception:5,
7 = checkcast <Application,Landroid/app/trust/TrustManager>6 <Application,Landroid/app/trust/TrustManager>,
invokevirtual < Application, Landroid/app/trust/TrustManager, setDeviceLockedForUser(IZ)V > 7,2,8 @11 exception:9,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,4 @135 exception:64,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
4 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda1>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda1, <init>(I)V > 4,2 @4 exception:5,
7 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 3,4 @7 exception:6,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, onPostPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @138 exception:65,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, isDeviceEncryptionEnabled()Z > @2 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldEncryptWithCredentials()Z > 1 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setCredentialRequiredToDecrypt(Z)V > 1,4 @21 exception:11,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isPattern()Z > 2 @24 exception:15,
conditional branch(eq, to iindex=-1) 16,4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,18,17,3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, updatePasswordHistory(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,3 @36 exception:22,
23 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
24 = load_metadata: <Application,Landroid/app/trust/TrustManager>, <Primordial,Ljava/lang/Class>,
26 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 23,24 @43 exception:25,
27 = checkcast <Application,Landroid/app/trust/TrustManager>26 <Application,Landroid/app/trust/TrustManager>,
invokevirtual < Application, Landroid/app/trust/TrustManager, reportEnabledTrustAgentsChanged(I)V > 27,3 @49 exception:28,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @141 exception:66,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 35 @144 exception:67,
return 57,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public boolean setLockCredential(LockscreenCredential p1, LockscreenCredential p2, int p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p1 == 0) {
			LockscreenCredential.ensureNotZeroized();
			int v1 = this.mType;
			if (v1 != -1) {
				if (v3 != 0) {
					if (v4 != 0) {
						if (v5 == 0) {
							boolean v6 = p2.isNone();
							if (v6 == 0) {
								long v7 = Binder.clearCallingIdentity();
								ContentResolver v9 = this.mContext.getContentResolver();
								int v10 = this.mInjector.settingsSecureGetInt(v9, ""user_setup_complete"", 0, 0);
								if (v10 != 0) {
									int v11 = this.mInjector.settingsSecureGetInt(v9, ""secure_frp_mode"", 0, 0);
									if (v11 != 1) {
										if (1 == 0) {
											if (0 != 0) {
												boolean v12 = p2.isNone();
												if (v12 != 0) {
													boolean v14 = LockSettingsService.isCredentialSharableWithParent(p3);
													if (v14 == 0) {
														boolean v15 = LockSettingsService.getSeparateProfileChallengeEnabledInternal(p3);
														if (v15 != 0) {
															boolean v13 = 1;
															if (v13 == 0) {
																UserInfo v16 = this.mUserManager.getProfileParent(p3);
																if (v18 != 0) {
																	if (v19 == 0) {
																		long v20 = Binder.clearCallingIdentity();
																		VerifyCredentialResponse v21 = LockSettingsService.doVerifyCredential(p2, UserInfo.id, 0, 0);
																		Binder.restoreCallingIdentity(v20);
																		LockSettingsService.scheduleGc();
																		VerifyCredentialResponse v17 = v21;
																		p2.zeroize();
																		LockscreenCredential v26 = new LockscreenCredential(-1,v27);
																		[B v27 = new [B(0);
																		LockscreenCredential v25 = v26;
																		Object v30 = Objects.requireNonNull(p1);
																		Object v31 = Objects.requireNonNull(p2);
																		boolean v32 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p3);
																		if (v32 == 0) {
																			boolean v33 = p1.isNone();
																			if (v33 == 0) {
																				LockSettingsStorage$CredentialHash v34 = this.mStorage.readCredentialHash(p3);
																				boolean v35 = LockSettingsService.isProfileWithUnifiedLock(p3);
																				if (v35 == 0) {
																					if (LockSettingsStorage$CredentialHash.hash != 0) {
																						boolean v36 = p2.isNone();
																						if (v36 != 0) {
																							p2.close();
																							LockscreenCredential v38 = LockscreenCredential.createNone();
																							SyntheticPasswordManager$AuthenticationToken v39 = LockSettingsService.initializeSyntheticPasswordLocked(LockSettingsStorage$CredentialHash.hash, p2, p3);
																							boolean v40 = LockSettingsService.spBasedSetLockCredentialInternalLocked(p1, p2, p3, 0);
																							boolean v29 = v40;
																							if (v29 != 0) {
																								boolean v42 = LockSettingsService.getBoolean(""lockscreen.profilechallenge"", 0, p3);
																								LockSettingsService.setBoolean(""lockscreen.profilechallenge"", 1, p3);
																								if (1 == 0) {
																									this.mStorage.removeChildProfileLock(p3);
																									LockSettingsService.removeKeystoreProfileKey(p3);
																									LockSettingsService$$ExternalSyntheticLambda2 v47 = new LockSettingsService$$ExternalSyntheticLambda2(LockSettingsService,p1,p3);
																									boolean v49 = this.mHandler.post(v47);
																									UserManager v51 = LockSettingsService.getUserManagerFromCache(p3);
																									boolean v52 = v51.isCredentialSharableWithParent();
																									boolean v50 = v52;
																									if (v50 == 0) {
																										Object v54 = this.mContext.getSystemService(TrustManage.class);
																										v54.setDeviceLockedForUser(p3, 0);
																										LockSettingsService$$ExternalSyntheticLambda1 v57 = new LockSettingsService$$ExternalSyntheticLambda1(p3);
																										boolean v59 = this.mHandler.post(v57);
																										if (p3 != 0) {
																											boolean v61 = LockSettingsService.isDeviceEncryptionEnabled();
																											if (v61 == 0) {
																												boolean v62 = LockSettingsService.shouldEncryptWithCredentials();
																												if (v62 == 0) {
																													boolean v63 = p1.isNone();
																													if (v63 == 0) {
																														LockSettingsService.setCredentialRequiredToDecrypt(0);
																														boolean v65 = p1.isPattern();
																														if (v65 == 0) {
																															LockSettingsService.setBoolean(""lockscreen.patterneverchosen"", 1, p3);
																															LockSettingsService.updatePasswordHistory(p1, p3);
																															Object v68 = this.mContext.getSystemService(TrustManage.class);
																															v68.reportEnabledTrustAgentsChanged(p3);
																															LockSettingsService$$ExternalSyntheticLambda3 v71 = new LockSettingsService$$ExternalSyntheticLambda3();
																															boolean v73 = this.mHandler.postDelayed(v71, 2000);
																															Binder.restoreCallingIdentity(v7);
																															return 1;
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z","1","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @6 exception:7,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 9),
16 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,14 @24 exception:15,
conditional branch(ne, to iindex=-1) 16,6,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,17 @32 exception:18,
conditional branch(ne, to iindex=-1) 19,6,
22 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,20 @40 exception:21,
conditional branch(eq, to iindex=-1) 22,6,
24 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @46 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
goto (from iindex= 27 to iindex = 10),
35 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @62 exception:34,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, enforceFrpResolved()V > 1 @66 exception:36,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 5,4,6,7,7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 11 to iindex = 2),
11 = phi  10,7,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 12,4,13,7,7 @27 exception:14,
conditional branch(ne, to iindex=-1) 15,10,
16 = phi  7,10,
conditional branch(eq, to iindex=-1) 11,7,
conditional branch(ne, to iindex=-1) 16,7,
goto (from iindex= 21 to iindex = 9),
return,
38 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @69 exception:37,
conditional branch(ne, to iindex=-1) 38,6,
40 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,4 @76 exception:39,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 40,6,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
43 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 41,4 @84 exception:42,
44 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 43,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,44,6 @90 exception:45,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,5 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,9 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
goto (from iindex= 8 to iindex = 10),
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,8,4 @31 exception:20,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @35 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @38 exception:26,
return 21,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 3 @93 exception:47,
49 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @96 exception:48,
1 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = new <Primordial,[B>@32 ,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 1,4,3 @6 exception:5,
return 1,
51 = phi  3,3,49,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 54,
56 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setLockCredentialInternal(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,2,51,4,6 @103 exception:55,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:6,
9 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 3 @3 exception:8,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,4 @9 exception:11,
conditional branch(eq, to iindex=-1) 12,13,
monitorexit 10,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @22 exception:14,
conditional branch(eq, to iindex=-1) 15,13,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 16,4 @71 exception:17,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,4 @75 exception:19,
conditional branch(eq, to iindex=-1) 20,13,
21 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 18,
conditional branch(ne, to iindex=-1) 21,13,
23 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @113 exception:22,
conditional branch(ne, to iindex=-1) 23,13,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, close()V > 3 @126 exception:31,
33 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @129 exception:32,
47 = phi  3,37,3,3,3,33,
50 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 50,
51 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 18,
53 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, initializeSyntheticPasswordLocked([BLcom/android/internal/widget/LockscreenCredential;I)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,51,47,4 @138 exception:52,
55 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedSetLockCredentialInternalLocked(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,2,47,4,5 @141 exception:54,
monitorexit 50,
return 55,
conditional branch(ne, to iindex=-1) 56,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @109 exception:68,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
monitorexit 54,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 35 @113 exception:82,
return 6,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public boolean setLockCredential(LockscreenCredential p1, LockscreenCredential p2, int p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p1 == 0) {
			LockscreenCredential.ensureNotZeroized();
			int v1 = this.mType;
			if (v1 != -1) {
				if (v3 != 0) {
					if (v4 != 0) {
						if (v5 == 0) {
							boolean v6 = p2.isNone();
							if (v6 == 0) {
								long v7 = Binder.clearCallingIdentity();
								ContentResolver v9 = this.mContext.getContentResolver();
								int v10 = this.mInjector.settingsSecureGetInt(v9, ""user_setup_complete"", 0, 0);
								if (v10 != 0) {
									int v11 = this.mInjector.settingsSecureGetInt(v9, ""secure_frp_mode"", 0, 0);
									if (v11 != 1) {
										if (1 == 0) {
											if (0 != 0) {
												boolean v12 = p2.isNone();
												if (v12 != 0) {
													boolean v14 = LockSettingsService.isCredentialSharableWithParent(p3);
													if (v14 == 0) {
														boolean v15 = LockSettingsService.getSeparateProfileChallengeEnabledInternal(p3);
														if (v15 != 0) {
															boolean v13 = 1;
															if (v13 == 0) {
																UserInfo v16 = this.mUserManager.getProfileParent(p3);
																if (v18 != 0) {
																	if (v19 == 0) {
																		long v20 = Binder.clearCallingIdentity();
																		VerifyCredentialResponse v21 = LockSettingsService.doVerifyCredential(p2, UserInfo.id, 0, 0);
																		Binder.restoreCallingIdentity(v20);
																		LockSettingsService.scheduleGc();
																		VerifyCredentialResponse v17 = v21;
																		p2.zeroize();
																		LockscreenCredential v26 = new LockscreenCredential(-1,v27);
																		[B v27 = new [B(0);
																		LockscreenCredential v25 = v26;
																		Object v30 = Objects.requireNonNull(p1);
																		Object v31 = Objects.requireNonNull(p2);
																		boolean v32 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p3);
																		if (v32 == 0) {
																			boolean v33 = p1.isNone();
																			if (v33 == 0) {
																				LockSettingsStorage$CredentialHash v34 = this.mStorage.readCredentialHash(p3);
																				boolean v35 = LockSettingsService.isProfileWithUnifiedLock(p3);
																				if (v35 == 0) {
																					if (LockSettingsStorage$CredentialHash.hash != 0) {
																						boolean v36 = p2.isNone();
																						if (v36 != 0) {
																							p2.close();
																							LockscreenCredential v38 = LockscreenCredential.createNone();
																							SyntheticPasswordManager$AuthenticationToken v39 = LockSettingsService.initializeSyntheticPasswordLocked(LockSettingsStorage$CredentialHash.hash, p2, p3);
																							boolean v40 = LockSettingsService.spBasedSetLockCredentialInternalLocked(p1, p2, p3, 0);
																							boolean v29 = v40;
																							if (v29 != 0) {
																								LockSettingsService$$ExternalSyntheticLambda3 v42 = new LockSettingsService$$ExternalSyntheticLambda3();
																								boolean v44 = this.mHandler.postDelayed(v42, 2000);
																								Binder.restoreCallingIdentity(v7);
																								return 0;
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z","2","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @6 exception:7,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(ZLjava/lang/String;)V > 5,6 @9 exception:7,
return,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 9),
16 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,14 @24 exception:15,
conditional branch(ne, to iindex=-1) 16,6,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,17 @32 exception:18,
conditional branch(ne, to iindex=-1) 19,6,
22 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,20 @40 exception:21,
conditional branch(eq, to iindex=-1) 22,6,
24 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @46 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
goto (from iindex= 27 to iindex = 10),
35 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @62 exception:34,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, enforceFrpResolved()V > 1 @66 exception:36,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 5,4,6,7,7 @12 exception:8,
7 = invokestatic < Application, Landroid/provider/Settings$Secure, getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 2,3,4,5 @0 exception:6,
return 7,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 11 to iindex = 2),
11 = phi  10,7,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 12,4,13,7,7 @27 exception:14,
7 = invokestatic < Application, Landroid/provider/Settings$Secure, getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 2,3,4,5 @0 exception:6,
return 7,
conditional branch(ne, to iindex=-1) 15,10,
16 = phi  7,10,
conditional branch(eq, to iindex=-1) 11,7,
conditional branch(ne, to iindex=-1) 16,7,
goto (from iindex= 21 to iindex = 9),
return,
38 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @69 exception:37,
conditional branch(ne, to iindex=-1) 38,6,
40 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,4 @76 exception:39,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 40,6,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
43 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 41,4 @84 exception:42,
44 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 43,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,44,6 @90 exception:45,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,5 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,9 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
goto (from iindex= 8 to iindex = 10),
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,8,4 @31 exception:20,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 30,6,
39 = new <Application,Ljava/lang/StringBuilder>@79,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 39 @81 exception:40,
43 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,41 @86 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,44 @91 exception:45,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,47 @96 exception:48,
51 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @99 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,51 @103 exception:52,
55 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 39 @106 exception:54,
57 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 13,55 @110 exception:56,
58 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
return 58,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @35 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @38 exception:26,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
return 21,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 3 @93 exception:47,
49 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @96 exception:48,
51 = phi  3,3,49,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 54,
56 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setLockCredentialInternal(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,2,51,4,6 @103 exception:55,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:6,
9 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 3 @3 exception:8,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,4 @9 exception:11,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(eq, to iindex=-1) 12,13,
monitorexit 10,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @22 exception:14,
conditional branch(eq, to iindex=-1) 15,13,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, clearUserKeyProtection(I[B)V > 1,4,13 @29 exception:60,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
6 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,2 @2 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:7,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorageManager, <Application,Landroid/os/storage/IStorageManager> > 1,
10 = getfield < Application, Landroid/content/pm/UserInfo, serialNumber, <Primordial,I> > 6,
invokeinterface < Application, Landroid/os/storage/IStorageManager, clearUserKeyAuth(II[B)V > 9,2,10,3 @14 exception:11,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @17 exception:31,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, gateKeeperClearSecureUserId(I)V > 1,4 @32 exception:61,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @0 exception:3,
invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, clearSecureUserId(I)V > 4,2 @4 exception:5,
goto (from iindex= 3 to iindex = 9),
return,
62 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
64 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @37 exception:63,
1 = new <Application,Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash>@0,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, <init>([BI)V > 1,2,3 @4 exception:4,
return 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeCredentialHash(Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash;I)V > 62,64,4 @41 exception:65,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(eq, to iindex=-1) 4,7,
conditional branch(ne, to iindex=-1) 4,8,
conditional branch(ne, to iindex=-1) 4,9,
conditional branch(ne, to iindex=-1) 4,10,
goto (from iindex= 15 to iindex = 2),
11 = phi  9,5,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 11,12 @26 exception:13,
goto (from iindex= 20 to iindex = 6),
17 = phi  5,5,16,
19 = phi  14,5,5,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPasswordFilename(I)Ljava/lang/String; > 1,3 @36 exception:20,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeFile(Ljava/lang/String;[B)V > 1,21,17 @40 exception:22,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPatternFilename(I)Ljava/lang/String; > 1,3 @43 exception:23,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeFile(Ljava/lang/String;[B)V > 1,24,19 @47 exception:25,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setKeyguardStoredQuality(II)V > 1,13,4 @45 exception:66,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = conversion(J) 2,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setLong(Ljava/lang/String;JI)V > 4,6,5,3 @5 exception:7,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setKeystorePassword([BI)V > 1,13,4 @48 exception:67,
5 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, onUserPasswordChanged(I[B)I > 3,2 @0 exception:4,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, fixateNewestUserKeyAuth(I)V > 1,4 @51 exception:68,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorageManager, <Application,Landroid/os/storage/IStorageManager> > 1,
invokeinterface < Application, Landroid/os/storage/IStorageManager, fixateNewestUserKeyAuth(I)V > 5,2 @6 exception:6,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @9 exception:22,
goto (from iindex= 5 to iindex = 12),
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, synchronizeUnifiedWorkChallengeForProfiles(ILjava/util/Map;)V > 1,4,13 @54 exception:69,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isUserSecure(I)Z > 1,2 @7 exception:7,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfiles(I)Ljava/util/List; > 9,2 @13 exception:10,
13 = invokeinterface < Application, Ljava/util/List, size()I > 11 @17 exception:12,
55 = phi  54,6,
conditional branch(ge, to iindex=-1) 55,13,
15 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 11,55 @24 exception:14,
16 = checkcast <Application,Landroid/content/pm/UserInfo>15 <Application,Landroid/content/pm/UserInfo>,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 16,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,17 @32 exception:18,
conditional branch(eq, to iindex=-1) 19,6,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,17 @38 exception:20,
conditional branch(eq, to iindex=-1) 21,6,
conditional branch(eq, to iindex=-1) 8,6,
conditional branch(eq, to iindex=-1) 3,6,
26 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 17 @57 exception:25,
28 = invokeinterface < Application, Ljava/util/Map, containsKey(Ljava/lang/Object;)Z > 3,26 @61 exception:27,
conditional branch(eq, to iindex=-1) 28,6,
30 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @67 exception:29,
32 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 17 @71 exception:31,
34 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,32 @75 exception:33,
35 = checkcast <Application,Lcom/android/internal/widget/LockscreenCredential>34 <Application,Lcom/android/internal/widget/LockscreenCredential>,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setLockCredentialInternal(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,30,35,17,36 @82 exception:37,
39 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 39,17 @87 exception:40,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,17 @90 exception:41,
goto (from iindex= 47 to iindex = 8),
54 = binaryop(add) 55 , 53,
goto (from iindex= 52 to iindex = -81),
55 = phi  54,6,
conditional branch(ge, to iindex=-1) 55,13,
return,
71 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @57 exception:70,
1 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = new <Primordial,[B>@32 ,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 1,4,3 @6 exception:5,
return 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,71,4 @61 exception:72,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserPasswordMetrics, <Application,Landroid/util/SparseArray> > 1,
6 = invokestatic < Application, Landroid/app/admin/PasswordMetrics, computeForCredential(Lcom/android/internal/widget/LockscreenCredential;)Landroid/app/admin/PasswordMetrics; > 2 @3 exception:5,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 4,3,6 @7 exception:7,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnChangeIfRequired(Lcom/android/internal/widget/LockscreenCredential;IZ)V > 1,2,4,5 @64 exception:73,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @3 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 6 to iindex = 5),
10 = phi  5,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getProfilesWithSameLockScreen(I)Ljava/util/Set; > 1,3 @15 exception:13,
16 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 14 @19 exception:15,
18 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 16 @23 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
20 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 16 @29 exception:19,
21 = checkcast <Application,Ljava/lang/Integer>20 <Application,Ljava/lang/Integer>,
23 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 21 @35 exception:22,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
26 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @41 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, lockScreenSecretChanged(I[BI)V > 24,26,10,23 @45 exception:27,
goto (from iindex= 25 to iindex = -25),
18 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 16 @23 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return,
return 74,
conditional branch(ne, to iindex=-1) 56,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,4,57,6 @119 exception:58,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getBoolean(Ljava/lang/String;ZI)Z > 1,5,6,2 @3 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,5,3,2 @7 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,
conditional branch(eq, to iindex=-1) 3,6,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 11,2 @14 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, deleteFile(Ljava/lang/String;)V > 1,4 @4 exception:5,
8 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Exception, printStackTrace()V > 8 @9 exception:9,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,2 @17 exception:13,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 16,2 @35 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @38 exception:23,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 15,24 @42 exception:25,
26 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
27 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @49 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @55 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 27,2 @58 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @61 exception:34,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 26,35 @65 exception:36,
goto (from iindex= 27 to iindex = 22),
return,
goto (from iindex= 9 to iindex = 4),
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifyPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @122 exception:59,
monitorexit 54,
61 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,4 @126 exception:60,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
7 = invokevirtual < Application, Ljava/util/HashMap, containsKey(Ljava/lang/Object;)Z > 5,4 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, createPackageContextAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/Context; > 9,10,8,4 @27 exception:11,
13 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
15 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 12,13 @33 exception:14,
32 = checkcast <Application,Landroid/os/UserManager>15 <Application,Landroid/os/UserManager>,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
35 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 33,4,32 @41 exception:34,
return 32,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 61,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,4 @132 exception:62,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
4 = load_metadata: <Application,Landroid/app/trust/TrustManager>, <Primordial,Ljava/lang/Class>,
6 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 3,4 @4 exception:5,
7 = checkcast <Application,Landroid/app/trust/TrustManager>6 <Application,Landroid/app/trust/TrustManager>,
invokevirtual < Application, Landroid/app/trust/TrustManager, setDeviceLockedForUser(IZ)V > 7,2,8 @11 exception:9,
4 = getfield < Application, Landroid/app/trust/TrustManager, mService, <Application,Landroid/app/trust/ITrustManager> > 1,
invokeinterface < Application, Landroid/app/trust/ITrustManager, setDeviceLockedForUser(IZ)V > 4,2,3 @2 exception:5,
return,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,4 @135 exception:64,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, onPostPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @138 exception:65,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, isDeviceEncryptionEnabled()Z > @2 exception:5,
2 = invokestatic < Application, Landroid/os/storage/StorageManager, isEncrypted()Z > @0 exception:1,
return 2,
conditional branch(eq, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldEncryptWithCredentials()Z > 1 @8 exception:7,
3 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialRequiredToDecrypt()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isDoNotAskCredentialsOnBootSet()Z > 1 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(eq, to iindex=-1) 8,4,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setCredentialRequiredToDecrypt(Z)V > 1,4 @21 exception:11,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, isDeviceEncryptionEnabled()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 6 @8 exception:7,
11 = invokestatic < Application, Landroid/provider/Settings$Global, putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z > 8,9,2 @15 exception:10,
return,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isPattern()Z > 2 @24 exception:15,
conditional branch(eq, to iindex=-1) 16,4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,18,17,3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, updatePasswordHistory(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,3 @36 exception:22,
5 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isPattern()Z > 2 @7 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,9,6,3 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,6,
13 = phi  11,12,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getRequestedPasswordHistoryLength(I)I > 1,3 @26 exception:14,
conditional branch(ne, to iindex=-1) 15,6,
17 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B > 1,2,3 @33 exception:16,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSalt(I)Ljava/lang/String; > 1,3 @37 exception:18,
21 = invokevirtual < Application, Ljava/lang/String, getBytes()[B > 19 @41 exception:20,
23 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, passwordToHistoryHash([B[B)Ljava/lang/String; > 2,21,17 @45 exception:22,
conditional branch(ne, to iindex=-1) 23,6,
30 = phi  23,29,
35 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @63 exception:34,
conditional branch(eq, to iindex=-1) 35,6,
38 = invokevirtual < Application, Ljava/lang/String, split(Ljava/lang/String;)[Ljava/lang/String; > 13,36 @72 exception:37,
39 = new <Application,Ljava/util/StringJoiner>@76,
invokespecial < Application, Ljava/util/StringJoiner, <init>(Ljava/lang/CharSequence;)V > 39,36 @78 exception:40,
42 = invokevirtual < Application, Ljava/util/StringJoiner, add(Ljava/lang/CharSequence;)Ljava/util/StringJoiner; > 39,30 @81 exception:41,
52 = phi  50,6,
44 = binaryop(add) 15 , 43,
conditional branch(ge, to iindex=-1) 52,44,
45 = arraylength 38,
conditional branch(ge, to iindex=-1) 52,45,
46 = arrayload 38[52],
48 = invokevirtual < Application, Ljava/util/StringJoiner, add(Ljava/lang/CharSequence;)Ljava/util/StringJoiner; > 39,46 @94 exception:47,
50 = binaryop(add) 52 , 49,
goto (from iindex= 52 to iindex = -14),
52 = phi  50,6,
44 = binaryop(add) 15 , 43,
conditional branch(ge, to iindex=-1) 52,44,
45 = arraylength 38,
conditional branch(ge, to iindex=-1) 52,45,
57 = invokevirtual < Application, Ljava/util/StringJoiner, toString()Ljava/lang/String; > 39 @100 exception:56,
59 = phi  12,30,57,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,9,59,3 @104 exception:64,
return,
23 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
24 = load_metadata: <Application,Landroid/app/trust/TrustManager>, <Primordial,Ljava/lang/Class>,
26 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 23,24 @43 exception:25,
27 = checkcast <Application,Landroid/app/trust/TrustManager>26 <Application,Landroid/app/trust/TrustManager>,
invokevirtual < Application, Landroid/app/trust/TrustManager, reportEnabledTrustAgentsChanged(I)V > 27,3 @49 exception:28,
3 = getfield < Application, Landroid/app/trust/TrustManager, mService, <Application,Landroid/app/trust/ITrustManager> > 1,
invokeinterface < Application, Landroid/app/trust/ITrustManager, reportEnabledTrustAgentsChanged(I)V > 3,2 @2 exception:4,
return,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @141 exception:66,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 35 @144 exception:67,
return 57,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean setLockCredential(LockscreenCredential p1, LockscreenCredential p2, int p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p1 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(1, ""Credential is already zeroized"");
				int v1 = this.mType;
				if (v1 != -1) {
					if (v4 != 0) {
						if (v5 != 0) {
							if (v6 == 0) {
								boolean v7 = p2.isNone();
								if (v7 == 0) {
									long v8 = Binder.clearCallingIdentity();
									ContentResolver v10 = this.mContext.getContentResolver();
									int v12 = Settings$Secure.getIntForUser(v10, ""user_setup_complete"", 0, 0);
									int v11 = v12;
									if (v11 != 0) {
										int v14 = Settings$Secure.getIntForUser(v10, ""secure_frp_mode"", 0, 0);
										int v13 = v14;
										if (v13 != 1) {
											if (1 == 0) {
												if (0 != 0) {
													boolean v15 = p2.isNone();
													if (v15 != 0) {
														UserManager v18 = LockSettingsService.getUserManagerFromCache(p3);
														boolean v19 = v18.isCredentialSharableWithParent();
														boolean v17 = v19;
														if (v17 == 0) {
															boolean v21 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p3);
															boolean v20 = v21;
															if (v20 != 0) {
																boolean v16 = 1;
																if (v16 == 0) {
																	UserInfo v22 = this.mUserManager.getProfileParent(p3);
																	if (v24 != 0) {
																		if (v25 == 0) {
																			long v26 = Binder.clearCallingIdentity();
																			if (p2 == 0) {
																				boolean v28 = p2.isNone();
																				if (v28 != 0) {
																					if (UserInfo.id != -9999) {
																						ContentResolver v29 = this.mContext.getContentResolver();
																						int v30 = this.mInjector.settingsGlobalGetInt(v29, ""device_provisioned"", 0);
																						if (v30 == 0) {
																							VerifyCredentialResponse v31 = LockSettingsService.spBasedDoVerifyCredential(p2, UserInfo.id, 0, 0);
																							if (v31 == 0) {
																								if (UserInfo.id != -9999) {
																									LockSettingsStorage$CredentialHash v32 = this.mStorage.readCredentialHash(UserInfo.id);
																									boolean v33 = p2.checkAgainstStoredType(LockSettingsStorage$CredentialHash.type);
																									if (v33 != 0) {
																										int v39 = p2.getType();
																										VerifyCredentialResponse v27 = VerifyCredentialResponse.ERROR;
																										Binder.restoreCallingIdentity(v26);
																										LockSettingsService$$ExternalSyntheticLambda3 v45 = new LockSettingsService$$ExternalSyntheticLambda3();
																										boolean v47 = this.mHandler.postDelayed(v45, 2000);
																										VerifyCredentialResponse v23 = v27;
																										p2.zeroize();
																										LockscreenCredential v49 = LockscreenCredential.createNone();
																										Object v51 = Objects.requireNonNull(p1);
																										Object v52 = Objects.requireNonNull(p2);
																										if (p3 != -9999) {
																											LockSettingsStorage$PersistentData v54 = this.mStorage.readPersistentDataBlock();
																											if (LockSettingsStorage$PersistentData.type == 1) {
																												if (LockSettingsStorage$PersistentData.type != 2) {
																													boolean v53 = 0;
																													if (v53 == 0) {
																														boolean v55 = p1.isNone();
																														if (v55 == 0) {
																															UserInfo v57 = this.mUserManager.getUserInfo(p3);
																															long v58 = Binder.clearCallingIdentity();
																															this.mStorageManager.clearUserKeyAuth(p3, UserInfo.serialNumber, 0);
																															Binder.restoreCallingIdentity(v58);
																															IGateKeeperService v62 = LockSettingsService.getGateKeeperService();
																															v62.clearSecureUserId(p3);
																															LockSettingsStorage$CredentialHash v65 = new LockSettingsStorage$CredentialHash(0,-1);
																															LockSettingsStorage$CredentialHash v64 = v65;
																															if (LockSettingsStorage$CredentialHash.type == 2) {
																																if (LockSettingsStorage$CredentialHash.type == 4) {
																																	if (LockSettingsStorage$CredentialHash.type != 3) {
																																		if (LockSettingsStorage$CredentialHash.type != 1) {
																																			if (LockSettingsStorage$CredentialHash.type != -1) {
																																				Preconditions.checkArgument(1, ""Unknown credential type"");
																																				String v69 = LockSettingsStorage.getLockPasswordFilename(p3);
																																				LockSettingsStorage.writeFile(v69, 0);
																																				String v71 = LockSettingsStorage.getLockPatternFilename(p3);
																																				LockSettingsStorage.writeFile(v71, hash);
																																				this.mStorage.setLong(""lockscreen.password_type"", 0, p3);
																																				int v76 = AndroidKeyStoreMaintenance.onUserPasswordChanged(p3, 0);
																																				long v78 = Binder.clearCallingIdentity();
																																				this.mStorageManager.fixateNewestUserKeyAuth(p3);
																																				Binder.restoreCallingIdentity(v78);
																																				boolean v82 = LockSettingsService.isCredentialSharableWithParent(p3);
																																				if (v82 == 0) {
																																					boolean v83 = LockSettingsService.isUserSecure(p3);
																																					List v84 = this.mUserManager.getProfiles(p3);
																																					int v85 = v84.size();
																																					if (0 >= v85) {
																																						Object v86 = v84.get(0);
																																						boolean v87 = LockSettingsService.isCredentialSharableWithParent(UserInfo.id);
																																						if (v87 == 0) {
																																							boolean v88 = LockSettingsService.getSeparateProfileChallengeEnabledInternal(UserInfo.id);
																																							if (v88 == 0) {
																																								if (v83 == 0) {
																																									if (0 == 0) {
																																										Integer v89 = Integer.valueOf(UserInfo.id);
																																										boolean v90 = 0.containsKey(v89);
																																										if (v90 == 0) {
																																											LockscreenCredential v91 = LockscreenCredential.createNone();
																																											Integer v92 = Integer.valueOf(UserInfo.id);
																																											Object v93 = 0.get(v92);
																																											boolean v94 = LockSettingsService.setLockCredentialInternal(v91, v93, UserInfo.id, 1);
																																											this.mStorage.removeChildProfileLock(UserInfo.id);
																																											LockSettingsService.removeKeystoreProfileKey(UserInfo.id);
																																											if ((0 + 1) >= v85) {
																																												LockscreenCredential v98 = new LockscreenCredential(-1,v99);
																																												[B v99 = new [B(0);
																																												LockscreenCredential v97 = v98;
																																												PasswordMetrics v102 = PasswordMetrics.computeForCredential(v97);
																																												this.mUserPasswordMetrics.put(p3, v102);
																																												if (0 == 0) {
																																													boolean v105 = p1.isNone();
																																													if (v105 == 0) {
																																														Set v106 = LockSettingsService.getProfilesWithSameLockScreen(p3);
																																														Iterator v107 = v106.iterator();
																																														boolean v108 = v107.hasNext();
																																														if (v108 == 0) {
																																															Object v109 = v107.next();
																																															int v110 = v109.intValue();
																																															int v111 = p1.getType();
																																															this.mRecoverableKeyStoreManager.lockScreenSecretChanged(v111, 0, v110);
																																															boolean v113 = v107.hasNext();
																																															if (v113 == 0) {
																																																boolean v50 = 1;
																																																if (v50 != 0) {
																																																	boolean v117 = ""lock_pattern_autolock"".equals(""lockscreen.profilechallenge"");
																																																	if (v117 == 0) {
																																																		int v118 = LockSettingsService.getCredentialTypeInternal(p3);
																																																		if (v118 != 1) {
																																																			boolean v115 = 1;
																																																			this.mStorage.setBoolean(""lockscreen.profilechallenge"", 1, p3);
																																																			if (1 == 0) {
																																																				String v123 = LockSettingsStorage.getChildProfileLockFile(p3);
																																																				LockSettingsStorage.deleteFile(v123);
																																																				caughtException.printStackTrace();
																																																				StringBuilder v133 = new StringBuilder();
																																																				StringBuilder v135 = v133.append(""profile_key_name_encrypt_"");
																																																				StringBuilder v136 = v133.append(p3);
																																																				String v137 = v133.toString();
																																																				this.mJavaKeyStore.deleteEntry(v137);
																																																				StringBuilder v139 = new StringBuilder();
																																																				StringBuilder v141 = v139.append(""profile_key_name_decrypt_"");
																																																				StringBuilder v142 = v139.append(p3);
																																																				String v143 = v139.toString();
																																																				this.mJavaKeyStore.deleteEntry(v143);
																																																				p0.notifyPasswordChanged(p1, p3);
																																																				UserHandle v148 = UserHandle.of(p3);
																																																				boolean v149 = this.mUserManagerCache.containsKey(v148);
																																																				if (v149 == 0) {
																																																					Context v150 = this.mContext.createPackageContextAsUser(""system"", 0, v148);
																																																					Object v151 = v150.getSystemService(UserManage.class);
																																																					Object v152 = this.mUserManagerCache.put(v148, v151);
																																																					UserManager v147 = v151;
																																																					boolean v153 = v147.isCredentialSharableWithParent();
																																																					boolean v146 = v153;
																																																					if (v146 == 0) {
																																																						Object v155 = this.mContext.getSystemService(TrustManage.class);
																																																						this.mService.setDeviceLockedForUser(p3, 0);
																																																						p0.notifySeparateProfileChallengeChanged(p3);
																																																						if (p3 != 0) {
																																																							boolean v161 = StorageManager.isEncrypted();
																																																							boolean v160 = v161;
																																																							if (v160 == 0) {
																																																								boolean v163 = LockSettingsService.isCredentialRequiredToDecrypt();
																																																								if (v163 == 0) {
																																																									boolean v164 = LockSettingsService.isDoNotAskCredentialsOnBootSet();
																																																									if (v164 != 0) {
																																																										boolean v162 = 1;
																																																										if (v162 == 0) {
																																																											boolean v165 = p1.isNone();
																																																											if (v165 == 0) {
																																																												boolean v167 = LockSettingsService.isDeviceEncryptionEnabled();
																																																												if (v167 == 0) {
																																																													ContentResolver v168 = this.mContext.getContentResolver();
																																																													boolean v169 = Settings$Global.putInt(v168, ""require_password_to_decrypt"", 0);
																																																													boolean v170 = p1.isPattern();
																																																													if (v170 == 0) {
																																																														this.mStorage.setBoolean(""lockscreen.patterneverchosen"", 1, p3);
																																																														boolean v175 = p1.isNone();
																																																														if (v175 == 0) {
																																																															boolean v176 = p1.isPattern();
																																																															if (v176 == 0) {
																																																																String v177 = LockSettingsService.getString(""lockscreen.passwordhistory"", 0, p3);
																																																																if (v177 != 0) {
																																																																	int v178 = LockSettingsService.getRequestedPasswordHistoryLength(p3);
																																																																	if (v178 != 0) {
																																																																		byte[] v179 = LockSettingsService.getHashFactor(p1, p3);
																																																																		String v180 = LockSettingsService.getSalt(p3);
																																																																		byte[] v181 = v180.getBytes();
																																																																		String v182 = p1.passwordToHistoryHash(v181, v179);
																																																																		if (v182 != 0) {
																																																																			boolean v183 = TextUtils.isEmpty(v177);
																																																																			if (v183 == 0) {
																																																																				String v184 = v177.split("","");
																																																																				StringJoiner v185 = new StringJoiner("","");
																																																																				StringJoiner v187 = v185.add(v182);
																																																																				if (0 >= (v178 + -1)) {
																																																																					if (0 >= v184.length) {
																																																																						StringJoiner v188 = v185.add(v184[0]);
																																																																						if ((0 + 1) >= (v178 + -1)) {
																																																																							if ((0 + 1) >= v184.length) {
																																																																								String v189 = v185.toString();
																																																																								LockSettingsService.setString(""lockscreen.passwordhistory"", """", p3);
																																																																								Object v191 = this.mContext.getSystemService(TrustManage.class);
																																																																								this.mService.reportEnabledTrustAgentsChanged(p3);
																																																																								p0.scheduleGc();
																																																																								Binder.restoreCallingIdentity(v8);
																																																																								return 1;
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z","2","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @6 exception:7,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(ZLjava/lang/String;)V > 5,6 @9 exception:7,
return,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 9),
16 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,14 @24 exception:15,
conditional branch(ne, to iindex=-1) 16,6,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,17 @32 exception:18,
conditional branch(ne, to iindex=-1) 19,6,
22 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,20 @40 exception:21,
conditional branch(eq, to iindex=-1) 22,6,
24 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @46 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
goto (from iindex= 27 to iindex = 10),
35 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @62 exception:34,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, enforceFrpResolved()V > 1 @66 exception:36,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 5,4,6,7,7 @12 exception:8,
7 = invokestatic < Application, Landroid/provider/Settings$Secure, getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 2,3,4,5 @0 exception:6,
return 7,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 11 to iindex = 2),
11 = phi  10,7,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 12,4,13,7,7 @27 exception:14,
7 = invokestatic < Application, Landroid/provider/Settings$Secure, getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 2,3,4,5 @0 exception:6,
return 7,
conditional branch(ne, to iindex=-1) 15,10,
16 = phi  7,10,
conditional branch(eq, to iindex=-1) 11,7,
conditional branch(ne, to iindex=-1) 16,7,
goto (from iindex= 21 to iindex = 9),
return,
38 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @69 exception:37,
conditional branch(ne, to iindex=-1) 38,6,
40 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,4 @76 exception:39,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 40,6,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
43 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 41,4 @84 exception:42,
44 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 43,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,44,6 @90 exception:45,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,5 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,9 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
goto (from iindex= 8 to iindex = 10),
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,8,4 @31 exception:20,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 30,6,
39 = new <Application,Ljava/lang/StringBuilder>@79,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 39 @81 exception:40,
43 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,41 @86 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,44 @91 exception:45,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,47 @96 exception:48,
51 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @99 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,51 @103 exception:52,
55 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 39 @106 exception:54,
57 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 13,55 @110 exception:56,
58 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
return 58,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @35 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @38 exception:26,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
return 21,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 3 @93 exception:47,
49 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @96 exception:48,
51 = phi  3,3,49,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 54,
56 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setLockCredentialInternal(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,2,51,4,6 @103 exception:55,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:6,
9 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 3 @3 exception:8,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,4 @9 exception:11,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(eq, to iindex=-1) 12,13,
monitorexit 10,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @22 exception:14,
conditional branch(eq, to iindex=-1) 15,13,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, clearUserKeyProtection(I[B)V > 1,4,13 @29 exception:60,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
6 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,2 @2 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:7,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorageManager, <Application,Landroid/os/storage/IStorageManager> > 1,
10 = getfield < Application, Landroid/content/pm/UserInfo, serialNumber, <Primordial,I> > 6,
invokeinterface < Application, Landroid/os/storage/IStorageManager, clearUserKeyAuth(II[B)V > 9,2,10,3 @14 exception:11,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @17 exception:31,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, gateKeeperClearSecureUserId(I)V > 1,4 @32 exception:61,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @0 exception:3,
invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, clearSecureUserId(I)V > 4,2 @4 exception:5,
goto (from iindex= 3 to iindex = 9),
return,
62 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
64 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @37 exception:63,
1 = new <Application,Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash>@0,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, <init>([BI)V > 1,2,3 @4 exception:4,
return 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeCredentialHash(Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash;I)V > 62,64,4 @41 exception:65,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(eq, to iindex=-1) 4,7,
conditional branch(ne, to iindex=-1) 4,8,
conditional branch(ne, to iindex=-1) 4,9,
conditional branch(ne, to iindex=-1) 4,10,
goto (from iindex= 15 to iindex = 2),
11 = phi  9,5,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 11,12 @26 exception:13,
goto (from iindex= 20 to iindex = 6),
17 = phi  5,5,16,
19 = phi  14,5,5,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPasswordFilename(I)Ljava/lang/String; > 1,3 @36 exception:20,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeFile(Ljava/lang/String;[B)V > 1,21,17 @40 exception:22,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPatternFilename(I)Ljava/lang/String; > 1,3 @43 exception:23,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeFile(Ljava/lang/String;[B)V > 1,24,19 @47 exception:25,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setKeyguardStoredQuality(II)V > 1,13,4 @45 exception:66,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = conversion(J) 2,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setLong(Ljava/lang/String;JI)V > 4,6,5,3 @5 exception:7,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setKeystorePassword([BI)V > 1,13,4 @48 exception:67,
5 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, onUserPasswordChanged(I[B)I > 3,2 @0 exception:4,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, fixateNewestUserKeyAuth(I)V > 1,4 @51 exception:68,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorageManager, <Application,Landroid/os/storage/IStorageManager> > 1,
invokeinterface < Application, Landroid/os/storage/IStorageManager, fixateNewestUserKeyAuth(I)V > 5,2 @6 exception:6,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @9 exception:22,
goto (from iindex= 5 to iindex = 12),
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, synchronizeUnifiedWorkChallengeForProfiles(ILjava/util/Map;)V > 1,4,13 @54 exception:69,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isUserSecure(I)Z > 1,2 @7 exception:7,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfiles(I)Ljava/util/List; > 9,2 @13 exception:10,
13 = invokeinterface < Application, Ljava/util/List, size()I > 11 @17 exception:12,
55 = phi  54,6,
conditional branch(ge, to iindex=-1) 55,13,
15 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 11,55 @24 exception:14,
16 = checkcast <Application,Landroid/content/pm/UserInfo>15 <Application,Landroid/content/pm/UserInfo>,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 16,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,17 @32 exception:18,
conditional branch(eq, to iindex=-1) 19,6,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,17 @38 exception:20,
conditional branch(eq, to iindex=-1) 21,6,
conditional branch(eq, to iindex=-1) 8,6,
conditional branch(eq, to iindex=-1) 3,6,
26 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 17 @57 exception:25,
28 = invokeinterface < Application, Ljava/util/Map, containsKey(Ljava/lang/Object;)Z > 3,26 @61 exception:27,
conditional branch(eq, to iindex=-1) 28,6,
30 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @67 exception:29,
32 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 17 @71 exception:31,
34 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,32 @75 exception:33,
35 = checkcast <Application,Lcom/android/internal/widget/LockscreenCredential>34 <Application,Lcom/android/internal/widget/LockscreenCredential>,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setLockCredentialInternal(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,30,35,17,36 @82 exception:37,
39 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 39,17 @87 exception:40,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,17 @90 exception:41,
goto (from iindex= 47 to iindex = 8),
54 = binaryop(add) 55 , 53,
goto (from iindex= 52 to iindex = -81),
55 = phi  54,6,
conditional branch(ge, to iindex=-1) 55,13,
return,
71 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @57 exception:70,
1 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = new <Primordial,[B>@32 ,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 1,4,3 @6 exception:5,
return 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,71,4 @61 exception:72,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserPasswordMetrics, <Application,Landroid/util/SparseArray> > 1,
6 = invokestatic < Application, Landroid/app/admin/PasswordMetrics, computeForCredential(Lcom/android/internal/widget/LockscreenCredential;)Landroid/app/admin/PasswordMetrics; > 2 @3 exception:5,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 4,3,6 @7 exception:7,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnChangeIfRequired(Lcom/android/internal/widget/LockscreenCredential;IZ)V > 1,2,4,5 @64 exception:73,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @3 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 2 @11 exception:8,
10 = phi  5,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getProfilesWithSameLockScreen(I)Ljava/util/Set; > 1,3 @15 exception:13,
16 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 14 @19 exception:15,
18 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 16 @23 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
20 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 16 @29 exception:19,
21 = checkcast <Application,Ljava/lang/Integer>20 <Application,Ljava/lang/Integer>,
23 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 21 @35 exception:22,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
26 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @41 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, lockScreenSecretChanged(I[BI)V > 24,26,10,23 @45 exception:27,
goto (from iindex= 25 to iindex = -25),
18 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 16 @23 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return,
return 74,
conditional branch(ne, to iindex=-1) 56,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,4,57,6 @119 exception:58,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getBoolean(Ljava/lang/String;ZI)Z > 1,5,6,2 @3 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,5,3,2 @7 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,
conditional branch(eq, to iindex=-1) 3,6,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 11,2 @14 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, deleteFile(Ljava/lang/String;)V > 1,4 @4 exception:5,
8 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Exception, printStackTrace()V > 8 @9 exception:9,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,2 @17 exception:13,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 16,2 @35 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @38 exception:23,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 15,24 @42 exception:25,
26 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
27 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @49 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @55 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 27,2 @58 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @61 exception:34,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 26,35 @65 exception:36,
goto (from iindex= 27 to iindex = 22),
return,
goto (from iindex= 9 to iindex = 4),
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifyPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @122 exception:59,
monitorexit 54,
61 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,4 @126 exception:60,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
7 = invokevirtual < Application, Ljava/util/HashMap, containsKey(Ljava/lang/Object;)Z > 5,4 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, createPackageContextAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/Context; > 9,10,8,4 @27 exception:11,
13 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
15 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 12,13 @33 exception:14,
32 = checkcast <Application,Landroid/os/UserManager>15 <Application,Landroid/os/UserManager>,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
35 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 33,4,32 @41 exception:34,
return 32,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 61,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,4 @132 exception:62,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
4 = load_metadata: <Application,Landroid/app/trust/TrustManager>, <Primordial,Ljava/lang/Class>,
6 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 3,4 @4 exception:5,
7 = checkcast <Application,Landroid/app/trust/TrustManager>6 <Application,Landroid/app/trust/TrustManager>,
invokevirtual < Application, Landroid/app/trust/TrustManager, setDeviceLockedForUser(IZ)V > 7,2,8 @11 exception:9,
4 = getfield < Application, Landroid/app/trust/TrustManager, mService, <Application,Landroid/app/trust/ITrustManager> > 1,
invokeinterface < Application, Landroid/app/trust/ITrustManager, setDeviceLockedForUser(IZ)V > 4,2,3 @2 exception:5,
return,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,4 @135 exception:64,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, onPostPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @138 exception:65,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, isDeviceEncryptionEnabled()Z > @2 exception:5,
2 = invokestatic < Application, Landroid/os/storage/StorageManager, isEncrypted()Z > @0 exception:1,
return 2,
conditional branch(eq, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldEncryptWithCredentials()Z > 1 @8 exception:7,
3 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialRequiredToDecrypt()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isDoNotAskCredentialsOnBootSet()Z > 1 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(eq, to iindex=-1) 8,4,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setCredentialRequiredToDecrypt(Z)V > 1,4 @21 exception:11,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, isDeviceEncryptionEnabled()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 6 @8 exception:7,
11 = invokestatic < Application, Landroid/provider/Settings$Global, putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z > 8,9,2 @15 exception:10,
return,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isPattern()Z > 2 @24 exception:15,
conditional branch(eq, to iindex=-1) 16,4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,18,17,3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, updatePasswordHistory(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,3 @36 exception:22,
5 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isPattern()Z > 2 @7 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,9,6,3 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,6,
13 = phi  11,12,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getRequestedPasswordHistoryLength(I)I > 1,3 @26 exception:14,
conditional branch(ne, to iindex=-1) 15,6,
17 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B > 1,2,3 @33 exception:16,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSalt(I)Ljava/lang/String; > 1,3 @37 exception:18,
21 = invokevirtual < Application, Ljava/lang/String, getBytes()[B > 19 @41 exception:20,
23 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, passwordToHistoryHash([B[B)Ljava/lang/String; > 2,21,17 @45 exception:22,
conditional branch(ne, to iindex=-1) 23,6,
30 = phi  23,29,
35 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @63 exception:34,
conditional branch(eq, to iindex=-1) 35,6,
38 = invokevirtual < Application, Ljava/lang/String, split(Ljava/lang/String;)[Ljava/lang/String; > 13,36 @72 exception:37,
39 = new <Application,Ljava/util/StringJoiner>@76,
invokespecial < Application, Ljava/util/StringJoiner, <init>(Ljava/lang/CharSequence;)V > 39,36 @78 exception:40,
42 = invokevirtual < Application, Ljava/util/StringJoiner, add(Ljava/lang/CharSequence;)Ljava/util/StringJoiner; > 39,30 @81 exception:41,
52 = phi  50,6,
44 = binaryop(add) 15 , 43,
conditional branch(ge, to iindex=-1) 52,44,
45 = arraylength 38,
conditional branch(ge, to iindex=-1) 52,45,
46 = arrayload 38[52],
48 = invokevirtual < Application, Ljava/util/StringJoiner, add(Ljava/lang/CharSequence;)Ljava/util/StringJoiner; > 39,46 @94 exception:47,
50 = binaryop(add) 52 , 49,
goto (from iindex= 52 to iindex = -14),
52 = phi  50,6,
44 = binaryop(add) 15 , 43,
conditional branch(ge, to iindex=-1) 52,44,
45 = arraylength 38,
conditional branch(ge, to iindex=-1) 52,45,
57 = invokevirtual < Application, Ljava/util/StringJoiner, toString()Ljava/lang/String; > 39 @100 exception:56,
59 = phi  12,30,57,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,9,59,3 @104 exception:64,
return,
23 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
24 = load_metadata: <Application,Landroid/app/trust/TrustManager>, <Primordial,Ljava/lang/Class>,
26 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 23,24 @43 exception:25,
27 = checkcast <Application,Landroid/app/trust/TrustManager>26 <Application,Landroid/app/trust/TrustManager>,
invokevirtual < Application, Landroid/app/trust/TrustManager, reportEnabledTrustAgentsChanged(I)V > 27,3 @49 exception:28,
3 = getfield < Application, Landroid/app/trust/TrustManager, mService, <Application,Landroid/app/trust/ITrustManager> > 1,
invokeinterface < Application, Landroid/app/trust/ITrustManager, reportEnabledTrustAgentsChanged(I)V > 3,2 @2 exception:4,
return,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @141 exception:66,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 35 @144 exception:67,
return 57,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean setLockCredential(LockscreenCredential p1, LockscreenCredential p2, int p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p1 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(1, ""Credential is already zeroized"");
				int v1 = this.mType;
				if (v1 != -1) {
					if (v4 != 0) {
						if (v5 != 0) {
							if (v6 == 0) {
								boolean v7 = p2.isNone();
								if (v7 == 0) {
									long v8 = Binder.clearCallingIdentity();
									ContentResolver v10 = this.mContext.getContentResolver();
									int v12 = Settings$Secure.getIntForUser(v10, ""user_setup_complete"", 0, 0);
									int v11 = v12;
									if (v11 != 0) {
										int v14 = Settings$Secure.getIntForUser(v10, ""secure_frp_mode"", 0, 0);
										int v13 = v14;
										if (v13 != 1) {
											if (1 == 0) {
												if (0 != 0) {
													boolean v15 = p2.isNone();
													if (v15 != 0) {
														UserManager v18 = LockSettingsService.getUserManagerFromCache(p3);
														boolean v19 = v18.isCredentialSharableWithParent();
														boolean v17 = v19;
														if (v17 == 0) {
															boolean v21 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p3);
															boolean v20 = v21;
															if (v20 != 0) {
																boolean v16 = 1;
																if (v16 == 0) {
																	UserInfo v22 = this.mUserManager.getProfileParent(p3);
																	if (v24 != 0) {
																		if (v25 == 0) {
																			long v26 = Binder.clearCallingIdentity();
																			if (p2 == 0) {
																				boolean v28 = p2.isNone();
																				if (v28 != 0) {
																					if (UserInfo.id != -9999) {
																						ContentResolver v29 = this.mContext.getContentResolver();
																						int v30 = this.mInjector.settingsGlobalGetInt(v29, ""device_provisioned"", 0);
																						if (v30 == 0) {
																							VerifyCredentialResponse v31 = LockSettingsService.spBasedDoVerifyCredential(p2, UserInfo.id, 0, 0);
																							if (v31 == 0) {
																								if (UserInfo.id != -9999) {
																									LockSettingsStorage$CredentialHash v32 = this.mStorage.readCredentialHash(UserInfo.id);
																									boolean v33 = p2.checkAgainstStoredType(LockSettingsStorage$CredentialHash.type);
																									if (v33 != 0) {
																										int v39 = p2.getType();
																										VerifyCredentialResponse v27 = VerifyCredentialResponse.ERROR;
																										Binder.restoreCallingIdentity(v26);
																										LockSettingsService$$ExternalSyntheticLambda3 v45 = new LockSettingsService$$ExternalSyntheticLambda3();
																										boolean v47 = this.mHandler.postDelayed(v45, 2000);
																										VerifyCredentialResponse v23 = v27;
																										p2.zeroize();
																										LockscreenCredential v49 = LockscreenCredential.createNone();
																										Object v51 = Objects.requireNonNull(p1);
																										Object v52 = Objects.requireNonNull(p2);
																										if (p3 != -9999) {
																											LockSettingsStorage$PersistentData v54 = this.mStorage.readPersistentDataBlock();
																											if (LockSettingsStorage$PersistentData.type == 1) {
																												if (LockSettingsStorage$PersistentData.type != 2) {
																													boolean v53 = 0;
																													if (v53 == 0) {
																														boolean v55 = p1.isNone();
																														if (v55 == 0) {
																															UserInfo v57 = this.mUserManager.getUserInfo(p3);
																															long v58 = Binder.clearCallingIdentity();
																															this.mStorageManager.clearUserKeyAuth(p3, UserInfo.serialNumber, 0);
																															Binder.restoreCallingIdentity(v58);
																															IGateKeeperService v62 = LockSettingsService.getGateKeeperService();
																															v62.clearSecureUserId(p3);
																															LockSettingsStorage$CredentialHash v65 = new LockSettingsStorage$CredentialHash(0,-1);
																															LockSettingsStorage$CredentialHash v64 = v65;
																															if (LockSettingsStorage$CredentialHash.type == 2) {
																																if (LockSettingsStorage$CredentialHash.type == 4) {
																																	if (LockSettingsStorage$CredentialHash.type != 3) {
																																		if (LockSettingsStorage$CredentialHash.type != 1) {
																																			if (LockSettingsStorage$CredentialHash.type != -1) {
																																				Preconditions.checkArgument(1, ""Unknown credential type"");
																																				String v69 = LockSettingsStorage.getLockPasswordFilename(p3);
																																				LockSettingsStorage.writeFile(v69, 0);
																																				String v71 = LockSettingsStorage.getLockPatternFilename(p3);
																																				LockSettingsStorage.writeFile(v71, hash);
																																				this.mStorage.setLong(""lockscreen.password_type"", 0, p3);
																																				int v76 = AndroidKeyStoreMaintenance.onUserPasswordChanged(p3, 0);
																																				long v78 = Binder.clearCallingIdentity();
																																				this.mStorageManager.fixateNewestUserKeyAuth(p3);
																																				Binder.restoreCallingIdentity(v78);
																																				boolean v82 = LockSettingsService.isCredentialSharableWithParent(p3);
																																				if (v82 == 0) {
																																					boolean v83 = LockSettingsService.isUserSecure(p3);
																																					List v84 = this.mUserManager.getProfiles(p3);
																																					int v85 = v84.size();
																																					if (0 >= v85) {
																																						Object v86 = v84.get(0);
																																						boolean v87 = LockSettingsService.isCredentialSharableWithParent(UserInfo.id);
																																						if (v87 == 0) {
																																							boolean v88 = LockSettingsService.getSeparateProfileChallengeEnabledInternal(UserInfo.id);
																																							if (v88 == 0) {
																																								if (v83 == 0) {
																																									if (0 == 0) {
																																										Integer v89 = Integer.valueOf(UserInfo.id);
																																										boolean v90 = 0.containsKey(v89);
																																										if (v90 == 0) {
																																											LockscreenCredential v91 = LockscreenCredential.createNone();
																																											Integer v92 = Integer.valueOf(UserInfo.id);
																																											Object v93 = 0.get(v92);
																																											boolean v94 = LockSettingsService.setLockCredentialInternal(v91, v93, UserInfo.id, 1);
																																											this.mStorage.removeChildProfileLock(UserInfo.id);
																																											LockSettingsService.removeKeystoreProfileKey(UserInfo.id);
																																											if ((0 + 1) >= v85) {
																																												LockscreenCredential v98 = new LockscreenCredential(-1,v99);
																																												[B v99 = new [B(0);
																																												LockscreenCredential v97 = v98;
																																												PasswordMetrics v102 = PasswordMetrics.computeForCredential(v97);
																																												this.mUserPasswordMetrics.put(p3, v102);
																																												if (0 == 0) {
																																													boolean v105 = p1.isNone();
																																													if (v105 == 0) {
																																														byte[] v106 = p1.getCredential();
																																														Set v107 = LockSettingsService.getProfilesWithSameLockScreen(p3);
																																														Iterator v108 = v107.iterator();
																																														boolean v109 = v108.hasNext();
																																														if (v109 == 0) {
																																															Object v110 = v108.next();
																																															int v111 = v110.intValue();
																																															int v112 = p1.getType();
																																															this.mRecoverableKeyStoreManager.lockScreenSecretChanged(v112, 0, v111);
																																															boolean v114 = v108.hasNext();
																																															if (v114 == 0) {
																																																boolean v50 = 1;
																																																if (v50 != 0) {
																																																	boolean v118 = ""lock_pattern_autolock"".equals(""lockscreen.profilechallenge"");
																																																	if (v118 == 0) {
																																																		int v119 = LockSettingsService.getCredentialTypeInternal(p3);
																																																		if (v119 != 1) {
																																																			boolean v116 = 1;
																																																			this.mStorage.setBoolean(""lockscreen.profilechallenge"", 1, p3);
																																																			if (1 == 0) {
																																																				String v124 = LockSettingsStorage.getChildProfileLockFile(p3);
																																																				LockSettingsStorage.deleteFile(v124);
																																																				caughtException.printStackTrace();
																																																				StringBuilder v134 = new StringBuilder();
																																																				StringBuilder v136 = v134.append(""profile_key_name_encrypt_"");
																																																				StringBuilder v137 = v134.append(p3);
																																																				String v138 = v134.toString();
																																																				this.mJavaKeyStore.deleteEntry(v138);
																																																				StringBuilder v140 = new StringBuilder();
																																																				StringBuilder v142 = v140.append(""profile_key_name_decrypt_"");
																																																				StringBuilder v143 = v140.append(p3);
																																																				String v144 = v140.toString();
																																																				this.mJavaKeyStore.deleteEntry(v144);
																																																				p0.notifyPasswordChanged(p1, p3);
																																																				UserHandle v149 = UserHandle.of(p3);
																																																				boolean v150 = this.mUserManagerCache.containsKey(v149);
																																																				if (v150 == 0) {
																																																					Context v151 = this.mContext.createPackageContextAsUser(""system"", 0, v149);
																																																					Object v152 = v151.getSystemService(UserManage.class);
																																																					Object v153 = this.mUserManagerCache.put(v149, v152);
																																																					UserManager v148 = v152;
																																																					boolean v154 = v148.isCredentialSharableWithParent();
																																																					boolean v147 = v154;
																																																					if (v147 == 0) {
																																																						Object v156 = this.mContext.getSystemService(TrustManage.class);
																																																						this.mService.setDeviceLockedForUser(p3, 0);
																																																						p0.notifySeparateProfileChallengeChanged(p3);
																																																						if (p3 != 0) {
																																																							boolean v162 = StorageManager.isEncrypted();
																																																							boolean v161 = v162;
																																																							if (v161 == 0) {
																																																								boolean v164 = LockSettingsService.isCredentialRequiredToDecrypt();
																																																								if (v164 == 0) {
																																																									boolean v165 = LockSettingsService.isDoNotAskCredentialsOnBootSet();
																																																									if (v165 != 0) {
																																																										boolean v163 = 1;
																																																										if (v163 == 0) {
																																																											boolean v166 = p1.isNone();
																																																											if (v166 == 0) {
																																																												boolean v168 = LockSettingsService.isDeviceEncryptionEnabled();
																																																												if (v168 == 0) {
																																																													ContentResolver v169 = this.mContext.getContentResolver();
																																																													boolean v170 = Settings$Global.putInt(v169, ""require_password_to_decrypt"", 0);
																																																													boolean v171 = p1.isPattern();
																																																													if (v171 == 0) {
																																																														this.mStorage.setBoolean(""lockscreen.patterneverchosen"", 1, p3);
																																																														boolean v176 = p1.isNone();
																																																														if (v176 == 0) {
																																																															boolean v177 = p1.isPattern();
																																																															if (v177 == 0) {
																																																																String v178 = LockSettingsService.getString(""lockscreen.passwordhistory"", 0, p3);
																																																																if (v178 != 0) {
																																																																	int v179 = LockSettingsService.getRequestedPasswordHistoryLength(p3);
																																																																	if (v179 != 0) {
																																																																		byte[] v180 = LockSettingsService.getHashFactor(p1, p3);
																																																																		String v181 = LockSettingsService.getSalt(p3);
																																																																		byte[] v182 = v181.getBytes();
																																																																		String v183 = p1.passwordToHistoryHash(v182, v180);
																																																																		if (v183 != 0) {
																																																																			boolean v184 = TextUtils.isEmpty(v178);
																																																																			if (v184 == 0) {
																																																																				String v185 = v178.split("","");
																																																																				StringJoiner v186 = new StringJoiner("","");
																																																																				StringJoiner v188 = v186.add(v183);
																																																																				if (0 >= (v179 + -1)) {
																																																																					if (0 >= v185.length) {
																																																																						StringJoiner v189 = v186.add(v185[0]);
																																																																						if ((0 + 1) >= (v179 + -1)) {
																																																																							if ((0 + 1) >= v185.length) {
																																																																								String v190 = v186.toString();
																																																																								LockSettingsService.setString(""lockscreen.passwordhistory"", """", p3);
																																																																								Object v192 = this.mContext.getSystemService(TrustManage.class);
																																																																								this.mService.reportEnabledTrustAgentsChanged(p3);
																																																																								p0.scheduleGc();
																																																																								Binder.restoreCallingIdentity(v8);
																																																																								return 1;
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setLockCredential(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;I)Z","2","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @6 exception:7,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(ZLjava/lang/String;)V > 5,6 @9 exception:7,
return,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 8,9,
goto (from iindex= 7 to iindex = 9),
16 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,14 @24 exception:15,
conditional branch(ne, to iindex=-1) 16,6,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,17 @32 exception:18,
conditional branch(ne, to iindex=-1) 19,6,
22 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,20 @40 exception:21,
conditional branch(eq, to iindex=-1) 22,6,
24 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @46 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
goto (from iindex= 27 to iindex = 10),
35 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @62 exception:34,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, enforceFrpResolved()V > 1 @66 exception:36,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 2 @2 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 5,4,6,7,7 @12 exception:8,
7 = invokestatic < Application, Landroid/provider/Settings$Secure, getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 2,3,4,5 @0 exception:6,
return 7,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 11 to iindex = 2),
11 = phi  10,7,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsSecureGetInt(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 12,4,13,7,7 @27 exception:14,
7 = invokestatic < Application, Landroid/provider/Settings$Secure, getIntForUser(Landroid/content/ContentResolver;Ljava/lang/String;II)I > 2,3,4,5 @0 exception:6,
return 7,
conditional branch(ne, to iindex=-1) 15,10,
16 = phi  7,10,
conditional branch(eq, to iindex=-1) 11,7,
conditional branch(ne, to iindex=-1) 16,7,
goto (from iindex= 21 to iindex = 9),
return,
38 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 3 @69 exception:37,
conditional branch(ne, to iindex=-1) 38,6,
40 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,4 @76 exception:39,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 40,6,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
43 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 41,4 @84 exception:42,
44 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 43,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,44,6 @90 exception:45,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,5 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,9 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
goto (from iindex= 8 to iindex = 10),
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,8,4 @31 exception:20,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 30,6,
39 = new <Application,Ljava/lang/StringBuilder>@79,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 39 @81 exception:40,
43 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,41 @86 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,44 @91 exception:45,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,47 @96 exception:48,
51 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @99 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,51 @103 exception:52,
55 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 39 @106 exception:54,
57 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 13,55 @110 exception:56,
58 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
return 58,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @35 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @38 exception:26,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
return 21,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 3 @93 exception:47,
49 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @96 exception:48,
51 = phi  3,3,49,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 54,
56 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setLockCredentialInternal(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,2,51,4,6 @103 exception:55,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 2 @0 exception:6,
9 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;)Ljava/lang/Object; > 3 @3 exception:8,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,4 @9 exception:11,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(eq, to iindex=-1) 12,13,
monitorexit 10,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @22 exception:14,
conditional branch(eq, to iindex=-1) 15,13,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, clearUserKeyProtection(I[B)V > 1,4,13 @29 exception:60,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
6 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 4,2 @2 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @6 exception:7,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorageManager, <Application,Landroid/os/storage/IStorageManager> > 1,
10 = getfield < Application, Landroid/content/pm/UserInfo, serialNumber, <Primordial,I> > 6,
invokeinterface < Application, Landroid/os/storage/IStorageManager, clearUserKeyAuth(II[B)V > 9,2,10,3 @14 exception:11,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 8 @17 exception:31,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, gateKeeperClearSecureUserId(I)V > 1,4 @32 exception:61,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @0 exception:3,
invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, clearSecureUserId(I)V > 4,2 @4 exception:5,
goto (from iindex= 3 to iindex = 9),
return,
62 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
64 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @37 exception:63,
1 = new <Application,Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash>@0,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, <init>([BI)V > 1,2,3 @4 exception:4,
return 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeCredentialHash(Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash;I)V > 62,64,4 @41 exception:65,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 2,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(eq, to iindex=-1) 4,7,
conditional branch(ne, to iindex=-1) 4,8,
conditional branch(ne, to iindex=-1) 4,9,
conditional branch(ne, to iindex=-1) 4,10,
goto (from iindex= 15 to iindex = 2),
11 = phi  9,5,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 11,12 @26 exception:13,
goto (from iindex= 20 to iindex = 6),
17 = phi  5,5,16,
19 = phi  14,5,5,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPasswordFilename(I)Ljava/lang/String; > 1,3 @36 exception:20,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeFile(Ljava/lang/String;[B)V > 1,21,17 @40 exception:22,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPatternFilename(I)Ljava/lang/String; > 1,3 @43 exception:23,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeFile(Ljava/lang/String;[B)V > 1,24,19 @47 exception:25,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setKeyguardStoredQuality(II)V > 1,13,4 @45 exception:66,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = conversion(J) 2,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setLong(Ljava/lang/String;JI)V > 4,6,5,3 @5 exception:7,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setKeystorePassword([BI)V > 1,13,4 @48 exception:67,
5 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, onUserPasswordChanged(I[B)I > 3,2 @0 exception:4,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, fixateNewestUserKeyAuth(I)V > 1,4 @51 exception:68,
4 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @0 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorageManager, <Application,Landroid/os/storage/IStorageManager> > 1,
invokeinterface < Application, Landroid/os/storage/IStorageManager, fixateNewestUserKeyAuth(I)V > 5,2 @6 exception:6,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 4 @9 exception:22,
goto (from iindex= 5 to iindex = 12),
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, synchronizeUnifiedWorkChallengeForProfiles(ILjava/util/Map;)V > 1,4,13 @54 exception:69,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isUserSecure(I)Z > 1,2 @7 exception:7,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfiles(I)Ljava/util/List; > 9,2 @13 exception:10,
13 = invokeinterface < Application, Ljava/util/List, size()I > 11 @17 exception:12,
55 = phi  54,6,
conditional branch(ge, to iindex=-1) 55,13,
15 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 11,55 @24 exception:14,
16 = checkcast <Application,Landroid/content/pm/UserInfo>15 <Application,Landroid/content/pm/UserInfo>,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 16,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,17 @32 exception:18,
conditional branch(eq, to iindex=-1) 19,6,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,17 @38 exception:20,
conditional branch(eq, to iindex=-1) 21,6,
conditional branch(eq, to iindex=-1) 8,6,
conditional branch(eq, to iindex=-1) 3,6,
26 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 17 @57 exception:25,
28 = invokeinterface < Application, Ljava/util/Map, containsKey(Ljava/lang/Object;)Z > 3,26 @61 exception:27,
conditional branch(eq, to iindex=-1) 28,6,
30 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @67 exception:29,
32 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 17 @71 exception:31,
34 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 3,32 @75 exception:33,
35 = checkcast <Application,Lcom/android/internal/widget/LockscreenCredential>34 <Application,Lcom/android/internal/widget/LockscreenCredential>,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setLockCredentialInternal(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/LockscreenCredential;IZ)Z > 1,30,35,17,36 @82 exception:37,
39 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 39,17 @87 exception:40,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,17 @90 exception:41,
goto (from iindex= 47 to iindex = 8),
54 = binaryop(add) 55 , 53,
goto (from iindex= 52 to iindex = -81),
55 = phi  54,6,
conditional branch(ge, to iindex=-1) 55,13,
return,
71 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @57 exception:70,
1 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = new <Primordial,[B>@32 ,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 1,4,3 @6 exception:5,
return 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,71,4 @61 exception:72,
monitorenter 1,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserPasswordMetrics, <Application,Landroid/util/SparseArray> > 1,
6 = invokestatic < Application, Landroid/app/admin/PasswordMetrics, computeForCredential(Lcom/android/internal/widget/LockscreenCredential;)Landroid/app/admin/PasswordMetrics; > 2 @3 exception:5,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 4,3,6 @7 exception:7,
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnChangeIfRequired(Lcom/android/internal/widget/LockscreenCredential;IZ)V > 1,2,4,5 @64 exception:73,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @3 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
goto (from iindex= 6 to iindex = 5),
10 = phi  5,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getProfilesWithSameLockScreen(I)Ljava/util/Set; > 1,3 @15 exception:13,
16 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 14 @19 exception:15,
18 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 16 @23 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
20 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 16 @29 exception:19,
21 = checkcast <Application,Ljava/lang/Integer>20 <Application,Ljava/lang/Integer>,
23 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 21 @35 exception:22,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
26 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @41 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, lockScreenSecretChanged(I[BI)V > 24,26,10,23 @45 exception:27,
goto (from iindex= 25 to iindex = -25),
18 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 16 @23 exception:17,
conditional branch(eq, to iindex=-1) 18,5,
return,
return 74,
conditional branch(ne, to iindex=-1) 56,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,4,57,6 @119 exception:58,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getBoolean(Ljava/lang/String;ZI)Z > 1,5,6,2 @3 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,5,3,2 @7 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,
conditional branch(eq, to iindex=-1) 3,6,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 11,2 @14 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, deleteFile(Ljava/lang/String;)V > 1,4 @4 exception:5,
goto (from iindex= 3 to iindex = 5),
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,2 @17 exception:13,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 16,2 @35 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @38 exception:23,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 15,24 @42 exception:25,
26 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
27 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @49 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @55 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 27,2 @58 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @61 exception:34,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 26,35 @65 exception:36,
goto (from iindex= 27 to iindex = 22),
return,
goto (from iindex= 9 to iindex = 4),
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifyPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @122 exception:59,
monitorexit 54,
61 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,4 @126 exception:60,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
7 = invokevirtual < Application, Ljava/util/HashMap, containsKey(Ljava/lang/Object;)Z > 5,4 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, createPackageContextAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/Context; > 9,10,8,4 @27 exception:11,
13 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
15 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 12,13 @33 exception:14,
32 = checkcast <Application,Landroid/os/UserManager>15 <Application,Landroid/os/UserManager>,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
35 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 33,4,32 @41 exception:34,
return 32,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 61,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,4 @132 exception:62,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
4 = load_metadata: <Application,Landroid/app/trust/TrustManager>, <Primordial,Ljava/lang/Class>,
6 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 3,4 @4 exception:5,
7 = checkcast <Application,Landroid/app/trust/TrustManager>6 <Application,Landroid/app/trust/TrustManager>,
invokevirtual < Application, Landroid/app/trust/TrustManager, setDeviceLockedForUser(IZ)V > 7,2,8 @11 exception:9,
4 = getfield < Application, Landroid/app/trust/TrustManager, mService, <Application,Landroid/app/trust/ITrustManager> > 1,
invokeinterface < Application, Landroid/app/trust/ITrustManager, setDeviceLockedForUser(IZ)V > 4,2,3 @2 exception:5,
return,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,4 @135 exception:64,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, onPostPasswordChanged(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,4 @138 exception:65,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, isDeviceEncryptionEnabled()Z > @2 exception:5,
2 = invokestatic < Application, Landroid/os/storage/StorageManager, isEncrypted()Z > @0 exception:1,
return 2,
conditional branch(eq, to iindex=-1) 6,4,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldEncryptWithCredentials()Z > 1 @8 exception:7,
3 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialRequiredToDecrypt()Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isDoNotAskCredentialsOnBootSet()Z > 1 @6 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
goto (from iindex= 7 to iindex = 2),
11 = phi  10,4,
return 11,
conditional branch(eq, to iindex=-1) 8,4,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setCredentialRequiredToDecrypt(Z)V > 1,4 @21 exception:11,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, isDeviceEncryptionEnabled()Z > @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 6 @8 exception:7,
11 = invokestatic < Application, Landroid/provider/Settings$Global, putInt(Landroid/content/ContentResolver;Ljava/lang/String;I)Z > 8,9,2 @15 exception:10,
return,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isPattern()Z > 2 @24 exception:15,
conditional branch(eq, to iindex=-1) 16,4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,18,17,3 @33 exception:19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, updatePasswordHistory(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,2,3 @36 exception:22,
5 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isPattern()Z > 2 @7 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,9,6,3 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,6,
13 = phi  11,12,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getRequestedPasswordHistoryLength(I)I > 1,3 @26 exception:14,
conditional branch(ne, to iindex=-1) 15,6,
17 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B > 1,2,3 @33 exception:16,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSalt(I)Ljava/lang/String; > 1,3 @37 exception:18,
21 = invokevirtual < Application, Ljava/lang/String, getBytes()[B > 19 @41 exception:20,
23 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, passwordToHistoryHash([B[B)Ljava/lang/String; > 2,21,17 @45 exception:22,
conditional branch(ne, to iindex=-1) 23,6,
30 = phi  23,29,
35 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 13 @63 exception:34,
conditional branch(eq, to iindex=-1) 35,6,
38 = invokevirtual < Application, Ljava/lang/String, split(Ljava/lang/String;)[Ljava/lang/String; > 13,36 @72 exception:37,
39 = new <Application,Ljava/util/StringJoiner>@76,
invokespecial < Application, Ljava/util/StringJoiner, <init>(Ljava/lang/CharSequence;)V > 39,36 @78 exception:40,
42 = invokevirtual < Application, Ljava/util/StringJoiner, add(Ljava/lang/CharSequence;)Ljava/util/StringJoiner; > 39,30 @81 exception:41,
52 = phi  50,6,
44 = binaryop(add) 15 , 43,
conditional branch(ge, to iindex=-1) 52,44,
45 = arraylength 38,
conditional branch(ge, to iindex=-1) 52,45,
46 = arrayload 38[52],
48 = invokevirtual < Application, Ljava/util/StringJoiner, add(Ljava/lang/CharSequence;)Ljava/util/StringJoiner; > 39,46 @94 exception:47,
50 = binaryop(add) 52 , 49,
goto (from iindex= 52 to iindex = -14),
52 = phi  50,6,
44 = binaryop(add) 15 , 43,
conditional branch(ge, to iindex=-1) 52,44,
45 = arraylength 38,
conditional branch(ge, to iindex=-1) 52,45,
57 = invokevirtual < Application, Ljava/util/StringJoiner, toString()Ljava/lang/String; > 39 @100 exception:56,
59 = phi  12,30,57,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,9,59,3 @104 exception:64,
return,
23 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
24 = load_metadata: <Application,Landroid/app/trust/TrustManager>, <Primordial,Ljava/lang/Class>,
26 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 23,24 @43 exception:25,
27 = checkcast <Application,Landroid/app/trust/TrustManager>26 <Application,Landroid/app/trust/TrustManager>,
invokevirtual < Application, Landroid/app/trust/TrustManager, reportEnabledTrustAgentsChanged(I)V > 27,3 @49 exception:28,
3 = getfield < Application, Landroid/app/trust/TrustManager, mService, <Application,Landroid/app/trust/ITrustManager> > 1,
invokeinterface < Application, Landroid/app/trust/ITrustManager, reportEnabledTrustAgentsChanged(I)V > 3,2 @2 exception:4,
return,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @141 exception:66,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 35 @144 exception:67,
return 57,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean setLockCredential(LockscreenCredential p1, LockscreenCredential p2, int p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p1 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(1, ""Credential is already zeroized"");
				int v1 = this.mType;
				if (v1 != -1) {
					if (v4 != 0) {
						if (v5 != 0) {
							if (v6 == 0) {
								boolean v7 = p2.isNone();
								if (v7 == 0) {
									long v8 = Binder.clearCallingIdentity();
									ContentResolver v10 = this.mContext.getContentResolver();
									int v12 = Settings$Secure.getIntForUser(v10, ""user_setup_complete"", 0, 0);
									int v11 = v12;
									if (v11 != 0) {
										int v14 = Settings$Secure.getIntForUser(v10, ""secure_frp_mode"", 0, 0);
										int v13 = v14;
										if (v13 != 1) {
											if (1 == 0) {
												if (0 != 0) {
													boolean v15 = p2.isNone();
													if (v15 != 0) {
														UserManager v18 = LockSettingsService.getUserManagerFromCache(p3);
														boolean v19 = v18.isCredentialSharableWithParent();
														boolean v17 = v19;
														if (v17 == 0) {
															boolean v21 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p3);
															boolean v20 = v21;
															if (v20 != 0) {
																boolean v16 = 1;
																if (v16 == 0) {
																	UserInfo v22 = this.mUserManager.getProfileParent(p3);
																	if (v24 != 0) {
																		if (v25 == 0) {
																			long v26 = Binder.clearCallingIdentity();
																			if (p2 == 0) {
																				boolean v28 = p2.isNone();
																				if (v28 != 0) {
																					if (UserInfo.id != -9999) {
																						ContentResolver v29 = this.mContext.getContentResolver();
																						int v30 = this.mInjector.settingsGlobalGetInt(v29, ""device_provisioned"", 0);
																						if (v30 == 0) {
																							VerifyCredentialResponse v31 = LockSettingsService.spBasedDoVerifyCredential(p2, UserInfo.id, 0, 0);
																							if (v31 == 0) {
																								if (UserInfo.id != -9999) {
																									LockSettingsStorage$CredentialHash v32 = this.mStorage.readCredentialHash(UserInfo.id);
																									boolean v33 = p2.checkAgainstStoredType(LockSettingsStorage$CredentialHash.type);
																									if (v33 != 0) {
																										int v39 = p2.getType();
																										VerifyCredentialResponse v27 = VerifyCredentialResponse.ERROR;
																										Binder.restoreCallingIdentity(v26);
																										LockSettingsService$$ExternalSyntheticLambda3 v45 = new LockSettingsService$$ExternalSyntheticLambda3();
																										boolean v47 = this.mHandler.postDelayed(v45, 2000);
																										VerifyCredentialResponse v23 = v27;
																										p2.zeroize();
																										LockscreenCredential v49 = LockscreenCredential.createNone();
																										Object v51 = Objects.requireNonNull(p1);
																										Object v52 = Objects.requireNonNull(p2);
																										if (p3 != -9999) {
																											LockSettingsStorage$PersistentData v54 = this.mStorage.readPersistentDataBlock();
																											if (LockSettingsStorage$PersistentData.type == 1) {
																												if (LockSettingsStorage$PersistentData.type != 2) {
																													boolean v53 = 0;
																													if (v53 == 0) {
																														boolean v55 = p1.isNone();
																														if (v55 == 0) {
																															UserInfo v57 = this.mUserManager.getUserInfo(p3);
																															long v58 = Binder.clearCallingIdentity();
																															this.mStorageManager.clearUserKeyAuth(p3, UserInfo.serialNumber, 0);
																															Binder.restoreCallingIdentity(v58);
																															IGateKeeperService v62 = LockSettingsService.getGateKeeperService();
																															v62.clearSecureUserId(p3);
																															LockSettingsStorage$CredentialHash v65 = new LockSettingsStorage$CredentialHash(0,-1);
																															LockSettingsStorage$CredentialHash v64 = v65;
																															if (LockSettingsStorage$CredentialHash.type == 2) {
																																if (LockSettingsStorage$CredentialHash.type == 4) {
																																	if (LockSettingsStorage$CredentialHash.type != 3) {
																																		if (LockSettingsStorage$CredentialHash.type != 1) {
																																			if (LockSettingsStorage$CredentialHash.type != -1) {
																																				Preconditions.checkArgument(1, ""Unknown credential type"");
																																				String v69 = LockSettingsStorage.getLockPasswordFilename(p3);
																																				LockSettingsStorage.writeFile(v69, 0);
																																				String v71 = LockSettingsStorage.getLockPatternFilename(p3);
																																				LockSettingsStorage.writeFile(v71, hash);
																																				this.mStorage.setLong(""lockscreen.password_type"", 0, p3);
																																				int v76 = AndroidKeyStoreMaintenance.onUserPasswordChanged(p3, 0);
																																				long v78 = Binder.clearCallingIdentity();
																																				this.mStorageManager.fixateNewestUserKeyAuth(p3);
																																				Binder.restoreCallingIdentity(v78);
																																				boolean v82 = LockSettingsService.isCredentialSharableWithParent(p3);
																																				if (v82 == 0) {
																																					boolean v83 = LockSettingsService.isUserSecure(p3);
																																					List v84 = this.mUserManager.getProfiles(p3);
																																					int v85 = v84.size();
																																					if (0 >= v85) {
																																						Object v86 = v84.get(0);
																																						boolean v87 = LockSettingsService.isCredentialSharableWithParent(UserInfo.id);
																																						if (v87 == 0) {
																																							boolean v88 = LockSettingsService.getSeparateProfileChallengeEnabledInternal(UserInfo.id);
																																							if (v88 == 0) {
																																								if (v83 == 0) {
																																									if (0 == 0) {
																																										Integer v89 = Integer.valueOf(UserInfo.id);
																																										boolean v90 = 0.containsKey(v89);
																																										if (v90 == 0) {
																																											LockscreenCredential v91 = LockscreenCredential.createNone();
																																											Integer v92 = Integer.valueOf(UserInfo.id);
																																											Object v93 = 0.get(v92);
																																											boolean v94 = LockSettingsService.setLockCredentialInternal(v91, v93, UserInfo.id, 1);
																																											this.mStorage.removeChildProfileLock(UserInfo.id);
																																											LockSettingsService.removeKeystoreProfileKey(UserInfo.id);
																																											if ((0 + 1) >= v85) {
																																												LockscreenCredential v98 = new LockscreenCredential(-1,v99);
																																												[B v99 = new [B(0);
																																												LockscreenCredential v97 = v98;
																																												PasswordMetrics v102 = PasswordMetrics.computeForCredential(v97);
																																												this.mUserPasswordMetrics.put(p3, v102);
																																												if (0 == 0) {
																																													boolean v105 = p1.isNone();
																																													if (v105 == 0) {
																																														Set v106 = LockSettingsService.getProfilesWithSameLockScreen(p3);
																																														Iterator v107 = v106.iterator();
																																														boolean v108 = v107.hasNext();
																																														if (v108 == 0) {
																																															Object v109 = v107.next();
																																															int v110 = v109.intValue();
																																															int v111 = p1.getType();
																																															this.mRecoverableKeyStoreManager.lockScreenSecretChanged(v111, 0, v110);
																																															boolean v113 = v107.hasNext();
																																															if (v113 == 0) {
																																																boolean v50 = 1;
																																																if (v50 != 0) {
																																																	boolean v117 = ""lock_pattern_autolock"".equals(""lockscreen.profilechallenge"");
																																																	if (v117 == 0) {
																																																		int v118 = LockSettingsService.getCredentialTypeInternal(p3);
																																																		if (v118 != 1) {
																																																			boolean v115 = 1;
																																																			this.mStorage.setBoolean(""lockscreen.profilechallenge"", 1, p3);
																																																			if (1 == 0) {
																																																				String v123 = LockSettingsStorage.getChildProfileLockFile(p3);
																																																				LockSettingsStorage.deleteFile(v123);
																																																				StringBuilder v132 = new StringBuilder();
																																																				StringBuilder v134 = v132.append(""profile_key_name_encrypt_"");
																																																				StringBuilder v135 = v132.append(p3);
																																																				String v136 = v132.toString();
																																																				this.mJavaKeyStore.deleteEntry(v136);
																																																				StringBuilder v138 = new StringBuilder();
																																																				StringBuilder v140 = v138.append(""profile_key_name_decrypt_"");
																																																				StringBuilder v141 = v138.append(p3);
																																																				String v142 = v138.toString();
																																																				this.mJavaKeyStore.deleteEntry(v142);
																																																				p0.notifyPasswordChanged(p1, p3);
																																																				UserHandle v147 = UserHandle.of(p3);
																																																				boolean v148 = this.mUserManagerCache.containsKey(v147);
																																																				if (v148 == 0) {
																																																					Context v149 = this.mContext.createPackageContextAsUser(""system"", 0, v147);
																																																					Object v150 = v149.getSystemService(UserManage.class);
																																																					Object v151 = this.mUserManagerCache.put(v147, v150);
																																																					UserManager v146 = v150;
																																																					boolean v152 = v146.isCredentialSharableWithParent();
																																																					boolean v145 = v152;
																																																					if (v145 == 0) {
																																																						Object v154 = this.mContext.getSystemService(TrustManage.class);
																																																						this.mService.setDeviceLockedForUser(p3, 0);
																																																						p0.notifySeparateProfileChallengeChanged(p3);
																																																						if (p3 != 0) {
																																																							boolean v160 = StorageManager.isEncrypted();
																																																							boolean v159 = v160;
																																																							if (v159 == 0) {
																																																								boolean v162 = LockSettingsService.isCredentialRequiredToDecrypt();
																																																								if (v162 == 0) {
																																																									boolean v163 = LockSettingsService.isDoNotAskCredentialsOnBootSet();
																																																									if (v163 != 0) {
																																																										boolean v161 = 1;
																																																										if (v161 == 0) {
																																																											boolean v164 = p1.isNone();
																																																											if (v164 == 0) {
																																																												boolean v166 = LockSettingsService.isDeviceEncryptionEnabled();
																																																												if (v166 == 0) {
																																																													ContentResolver v167 = this.mContext.getContentResolver();
																																																													boolean v168 = Settings$Global.putInt(v167, ""require_password_to_decrypt"", 0);
																																																													boolean v169 = p1.isPattern();
																																																													if (v169 == 0) {
																																																														this.mStorage.setBoolean(""lockscreen.patterneverchosen"", 1, p3);
																																																														boolean v174 = p1.isNone();
																																																														if (v174 == 0) {
																																																															boolean v175 = p1.isPattern();
																																																															if (v175 == 0) {
																																																																String v176 = LockSettingsService.getString(""lockscreen.passwordhistory"", 0, p3);
																																																																if (v176 != 0) {
																																																																	int v177 = LockSettingsService.getRequestedPasswordHistoryLength(p3);
																																																																	if (v177 != 0) {
																																																																		byte[] v178 = LockSettingsService.getHashFactor(p1, p3);
																																																																		String v179 = LockSettingsService.getSalt(p3);
																																																																		byte[] v180 = v179.getBytes();
																																																																		String v181 = p1.passwordToHistoryHash(v180, v178);
																																																																		if (v181 != 0) {
																																																																			boolean v182 = TextUtils.isEmpty(v176);
																																																																			if (v182 == 0) {
																																																																				String v183 = v176.split("","");
																																																																				StringJoiner v184 = new StringJoiner("","");
																																																																				StringJoiner v186 = v184.add(v181);
																																																																				if (0 >= (v177 + -1)) {
																																																																					if (0 >= v183.length) {
																																																																						StringJoiner v187 = v184.add(v183[0]);
																																																																						if ((0 + 1) >= (v177 + -1)) {
																																																																							if ((0 + 1) >= v183.length) {
																																																																								String v188 = v184.toString();
																																																																								LockSettingsService.setString(""lockscreen.passwordhistory"", """", p3);
																																																																								Object v190 = this.mContext.getSystemService(TrustManage.class);
																																																																								this.mService.reportEnabledTrustAgentsChanged(p3);
																																																																								p0.scheduleGc();
																																																																								Binder.restoreCallingIdentity(v8);
																																																																								return 1;
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String;","0","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String; > 4,2,3 @2 exception:5,
return 6,","depth : 0
-----
","public String generateKeyWithMetadata(String p1, byte[] p2){
	String v1 = this.mRecoverableKeyStoreManager.generateKeyWithMetadata(p1, p2);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String;","1","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String; > 4,2,3 @2 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,5 @5 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @8 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:10,
13 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mPlatformKeyManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKey(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 13,11 @20 exception:14,
26 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverableKeyGenerator, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator> > 1,
28 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, generateAndStoreKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;IILjava/lang/String;[B)[B > 26,15,11,9,2,3 @30 exception:27,
29 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 29,11,9,2,28 @36 exception:30,
40 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,11,9,2 @39 exception:39,
return 40,
return 6,","depth : 0
-----
depth : 1
-----
","public String generateKeyWithMetadata(String p1, byte[] p2){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	PlatformEncryptionKey v6 = this.mPlatformKeyManager.getEncryptKey(v5);
	byte[] v7 = this.mRecoverableKeyGenerator.generateAndStoreKey(v6, v5, v4, p1, p2);
	this.mApplicationKeyStorage.setSymmetricKeyEntry(v5, v4, p1, v7);
	String v9 = RecoverableKeyStoreManager.getAlias(v5, v4, p1);
	String v1 = v9;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String;","2","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String; > 4,2,3 @2 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,5 @5 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @8 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:10,
13 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mPlatformKeyManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKey(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 13,11 @20 exception:14,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, init(I)V > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getDecryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformDecryptionKey; > 1,2 @3 exception:4,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 1,2 @6 exception:6,
10 = getstatic < Application, Ljava/util/Locale, US, <Application,Ljava/util/Locale> >,
12 = new <Application,[Ljava/lang/Object>@1411 ,
15 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @17 exception:14,
arraystore 12[13] = 15,
18 = invokestatic < Application, Ljava/lang/String, format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 10,16,12 @25 exception:17,
21 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 19,18 @31 exception:20,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, regenerate(I)V > 1,2 @34 exception:22,
24 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 1,2 @37 exception:23,
return 24,
26 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverableKeyGenerator, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator> > 1,
28 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, generateAndStoreKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;IILjava/lang/String;[B)[B > 26,15,11,9,2,3 @30 exception:27,
7 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mKeyGenerator, <Application,Ljavax/crypto/KeyGenerator> > 1,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(I)V > 7,8 @4 exception:9,
10 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mKeyGenerator, <Application,Ljavax/crypto/KeyGenerator> > 1,
12 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 10 @9 exception:11,
14 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/WrappedKey, fromSecretKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;Ljavax/crypto/SecretKey;[B)Lcom/android/server/locksettings/recoverablekeystore/WrappedKey; > 2,12,6 @13 exception:13,
15 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
17 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, insertKey(IILjava/lang/String;Lcom/android/server/locksettings/recoverablekeystore/WrappedKey;)J > 15,3,4,5,14 @19 exception:16,
19 = binaryop(lt) 17 , 18,
conditional branch(eq, to iindex=-1) 19,21,
32 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
34 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 32,3,4,20 @32 exception:33,
36 = binaryop(lt) 34 , 35,
conditional branch(ge, to iindex=-1) 36,21,
46 = invokeinterface < Application, Ljavax/crypto/SecretKey, getEncoded()[B > 12 @49 exception:45,
return 46,
29 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 29,11,9,2,28 @36 exception:30,
6 = getstatic < Application, Ljava/util/Locale, US, <Application,Ljava/util/Locale> >,
8 = new <Application,[Ljava/lang/Object>@37 ,
10 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @5 exception:9,
arraystore 8[11] = 10,
13 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 3 @12 exception:12,
arraystore 8[14] = 13,
arraystore 8[15] = 4,
16 = arraylength 5,
18 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 16 @23 exception:17,
arraystore 8[19] = 18,
22 = invokestatic < Application, Ljava/lang/String, format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 6,20,8 @32 exception:21,
25 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 23,22 @38 exception:24,
26 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, mKeyStore, <Application,Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy> > 1,
28 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getInternalAlias(IILjava/lang/String;)Ljava/lang/String; > 1,2,3,4 @43 exception:27,
29 = new <Application,Ljava/security/KeyStore$SecretKeyEntry>@47,
30 = new <Application,Ljavax/crypto/spec/SecretKeySpec>@49,
invokespecial < Application, Ljavax/crypto/spec/SecretKeySpec, <init>([BLjava/lang/String;)V > 30,5,31 @53 exception:32,
invokespecial < Application, Ljava/security/KeyStore$SecretKeyEntry, <init>(Ljavax/crypto/SecretKey;)V > 29,30 @56 exception:33,
34 = new <Application,Landroid/security/keystore/KeyProtection$Builder>@59,
invokespecial < Application, Landroid/security/keystore/KeyProtection$Builder, <init>(I)V > 34,19 @61 exception:35,
37 = new <Application,[Ljava/lang/String>@6614 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyProtection$Builder; > 34,37 @70 exception:38,
41 = new <Application,[Ljava/lang/String>@7614 ,
43 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyProtection$Builder; > 39,41 @80 exception:42,
45 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, build()Landroid/security/keystore/KeyProtection; > 43 @84 exception:44,
invokeinterface < Application, Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy, setEntry(Ljava/lang/String;Ljava/security/KeyStore$Entry;Ljava/security/KeyStore$ProtectionParameter;)V > 26,28,29,45 @88 exception:46,
return,
40 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,11,9,2 @39 exception:39,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getGrantAlias(IILjava/lang/String;)Ljava/lang/String; > 5,2,3,4 @2 exception:6,
return 7,
return 40,
return 6,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public String generateKeyWithMetadata(String p1, byte[] p2){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	PlatformKeyManager.init(v5);
	PlatformDecryptionKey v8 = PlatformKeyManager.getDecryptKeyInternal(v5);
	PlatformEncryptionKey v9 = PlatformKeyManager.getEncryptKeyInternal(v5);
	Integer v11 = Integer.valueOf(v5);
	PlatformKeyManager.regenerate(v5);
	PlatformEncryptionKey v15 = PlatformKeyManager.getEncryptKeyInternal(v5);
	PlatformEncryptionKey v6 = v15;
	this.mKeyGenerator.init(256);
	SecretKey v18 = this.mKeyGenerator.generateKey();
	WrappedKey v19 = WrappedKey.fromSecretKey(v6, v18, p2);
	long v20 = this.mDatabase.insertKey(v5, v4, p1, v19);
	if ((v20 < -1) == 0) {
		long v21 = this.mDatabase.setShouldCreateSnapshot(v5, v4, 1);
		if ((v21 < 0) >= 0) {
			byte[] v22 = v18.getEncoded();
			byte[] v16 = v22;
			Integer v25 = Integer.valueOf(v5);
			Integer v26 = Integer.valueOf(v4);
			Integer v27 = Integer.valueOf(v16.length);
			String v30 = ApplicationKeyStorage.getInternalAlias(v5, v4, p1);
			KeyStore$SecretKeyEntry v31 = new KeyStore$SecretKeyEntry(v32);
			SecretKeySpec v32 = new SecretKeySpec(v16,""AES"");
			KeyProtection$Builder v35 = new KeyProtection$Builder(3);
			String v37 = new String(1);
			KeyProtection$Builder v38 = v35.setBlockModes(v37);
			String v39 = new String(1);
			KeyProtection$Builder v40 = v38.setEncryptionPaddings(v39);
			KeyProtection v41 = v40.build();
			this.mKeyStore.setEntry(v30, v31, v41);
			String v44 = this.mApplicationKeyStorage.getGrantAlias(v5, v4, p1);
			String v43 = v44;
			String v1 = v43;
			return v1;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String;","2","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String; > 4,2,3 @2 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,5 @5 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @8 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:10,
13 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mPlatformKeyManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKey(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 13,11 @20 exception:14,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, init(I)V > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getDecryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformDecryptionKey; > 1,2 @3 exception:4,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 1,2 @6 exception:6,
return 7,
26 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverableKeyGenerator, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator> > 1,
28 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, generateAndStoreKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;IILjava/lang/String;[B)[B > 26,15,11,9,2,3 @30 exception:27,
7 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mKeyGenerator, <Application,Ljavax/crypto/KeyGenerator> > 1,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(I)V > 7,8 @4 exception:9,
10 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mKeyGenerator, <Application,Ljavax/crypto/KeyGenerator> > 1,
12 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 10 @9 exception:11,
14 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/WrappedKey, fromSecretKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;Ljavax/crypto/SecretKey;[B)Lcom/android/server/locksettings/recoverablekeystore/WrappedKey; > 2,12,6 @13 exception:13,
15 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
17 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, insertKey(IILjava/lang/String;Lcom/android/server/locksettings/recoverablekeystore/WrappedKey;)J > 15,3,4,5,14 @19 exception:16,
19 = binaryop(lt) 17 , 18,
conditional branch(eq, to iindex=-1) 19,21,
32 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
34 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 32,3,4,20 @32 exception:33,
36 = binaryop(lt) 34 , 35,
conditional branch(ge, to iindex=-1) 36,21,
46 = invokeinterface < Application, Ljavax/crypto/SecretKey, getEncoded()[B > 12 @49 exception:45,
return 46,
29 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 29,11,9,2,28 @36 exception:30,
6 = getstatic < Application, Ljava/util/Locale, US, <Application,Ljava/util/Locale> >,
8 = new <Application,[Ljava/lang/Object>@37 ,
10 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @5 exception:9,
arraystore 8[11] = 10,
13 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 3 @12 exception:12,
arraystore 8[14] = 13,
arraystore 8[15] = 4,
16 = arraylength 5,
18 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 16 @23 exception:17,
arraystore 8[19] = 18,
22 = invokestatic < Application, Ljava/lang/String, format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 6,20,8 @32 exception:21,
25 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 23,22 @38 exception:24,
26 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, mKeyStore, <Application,Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy> > 1,
28 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getInternalAlias(IILjava/lang/String;)Ljava/lang/String; > 1,2,3,4 @43 exception:27,
29 = new <Application,Ljava/security/KeyStore$SecretKeyEntry>@47,
30 = new <Application,Ljavax/crypto/spec/SecretKeySpec>@49,
invokespecial < Application, Ljavax/crypto/spec/SecretKeySpec, <init>([BLjava/lang/String;)V > 30,5,31 @53 exception:32,
invokespecial < Application, Ljava/security/KeyStore$SecretKeyEntry, <init>(Ljavax/crypto/SecretKey;)V > 29,30 @56 exception:33,
34 = new <Application,Landroid/security/keystore/KeyProtection$Builder>@59,
invokespecial < Application, Landroid/security/keystore/KeyProtection$Builder, <init>(I)V > 34,19 @61 exception:35,
37 = new <Application,[Ljava/lang/String>@6614 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyProtection$Builder; > 34,37 @70 exception:38,
41 = new <Application,[Ljava/lang/String>@7614 ,
43 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyProtection$Builder; > 39,41 @80 exception:42,
45 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, build()Landroid/security/keystore/KeyProtection; > 43 @84 exception:44,
invokeinterface < Application, Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy, setEntry(Ljava/lang/String;Ljava/security/KeyStore$Entry;Ljava/security/KeyStore$ProtectionParameter;)V > 26,28,29,45 @88 exception:46,
return,
40 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,11,9,2 @39 exception:39,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getGrantAlias(IILjava/lang/String;)Ljava/lang/String; > 5,2,3,4 @2 exception:6,
return 7,
return 40,
return 6,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public String generateKeyWithMetadata(String p1, byte[] p2){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	PlatformKeyManager.init(v5);
	PlatformDecryptionKey v8 = PlatformKeyManager.getDecryptKeyInternal(v5);
	PlatformEncryptionKey v9 = PlatformKeyManager.getEncryptKeyInternal(v5);
	PlatformEncryptionKey v6 = v9;
	this.mKeyGenerator.init(256);
	SecretKey v12 = this.mKeyGenerator.generateKey();
	WrappedKey v13 = WrappedKey.fromSecretKey(v6, v12, p2);
	long v14 = this.mDatabase.insertKey(v5, v4, p1, v13);
	if ((v14 < -1) == 0) {
		long v15 = this.mDatabase.setShouldCreateSnapshot(v5, v4, 1);
		if ((v15 < 0) >= 0) {
			byte[] v16 = v12.getEncoded();
			byte[] v10 = v16;
			Integer v19 = Integer.valueOf(v5);
			Integer v20 = Integer.valueOf(v4);
			Integer v21 = Integer.valueOf(v10.length);
			String v24 = ApplicationKeyStorage.getInternalAlias(v5, v4, p1);
			KeyStore$SecretKeyEntry v25 = new KeyStore$SecretKeyEntry(v26);
			SecretKeySpec v26 = new SecretKeySpec(v10,""AES"");
			KeyProtection$Builder v29 = new KeyProtection$Builder(3);
			String v31 = new String(1);
			KeyProtection$Builder v32 = v29.setBlockModes(v31);
			String v33 = new String(1);
			KeyProtection$Builder v34 = v32.setEncryptionPaddings(v33);
			KeyProtection v35 = v34.build();
			this.mKeyStore.setEntry(v24, v25, v35);
			String v38 = this.mApplicationKeyStorage.getGrantAlias(v5, v4, p1);
			String v37 = v38;
			String v1 = v37;
			return v1;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,","depth : 0
-----
","public String getString(String p1, String p2, int p3){
	String v2 = this.mStorage.getString(p1, p2, p3);
	return v2;
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = phi  2,10,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readKeyValue(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,11,3,4 @16 exception:12,
return 13,
return 8,","depth : 0
-----
depth : 1
-----
","public String getString(String p1, String p2, int p3){
	if (p3 != -9999) {
		boolean v3 = ""legacy_lock_pattern_enabled"".equals(p1);
		if (v3 == 0) {
			String v4 = LockSettingsStorage.readKeyValue(p1, p2, p3);
			String v2 = v4;
			return v2;
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = phi  2,10,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readKeyValue(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,11,3,4 @16 exception:12,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, hasKeyValue(Ljava/lang/String;I)Z > 6,2,4 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
44 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, peekKeyValue(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 42,2,3,4 @13 exception:43,
monitorexit 5,
return 44,
return 13,
return 8,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public String getString(String p1, String p2, int p3){
	if (p3 != -9999) {
		boolean v3 = ""legacy_lock_pattern_enabled"".equals(p1);
		if (v3 == 0) {
			boolean v5 = this.mCache.hasKeyValue(p1, p3);
			if (v5 == 0) {
				String v6 = this.mCache.peekKeyValue(p1, p2, p3);
				String v4 = v6;
				String v2 = v4;
				return v2;
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = phi  2,10,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readKeyValue(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,11,3,4 @16 exception:12,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, hasKeyValue(Ljava/lang/String;I)Z > 6,2,4 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
12 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, -$$Nest$mgetVersion(Lcom/android/server/locksettings/LockSettingsStorage$Cache;)I > 10 @21 exception:11,
monitorexit 5,
13 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, DEFAULT, <Application,Ljava/lang/Object> >,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mOpenHelper, <Application,Lcom/android/server/locksettings/LockSettingsStorage$DatabaseHelper> > 1,
16 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 14 @30 exception:15,
18 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, COLUMNS_FOR_QUERY, <Application,[Ljava/lang/String> >,
21 = new <Application,[Ljava/lang/String>@4220 ,
23 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 4 @44 exception:22,
arraystore 21[9] = 23,
arraystore 21[24] = 2,
26 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 16,17,18,19,21,9,9,9 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
28 = invokeinterface < Application, Landroid/database/Cursor, moveToFirst()Z > 26 @63 exception:27,
conditional branch(eq, to iindex=-1) 28,9,
30 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 26,9 @69 exception:29,
goto (from iindex= 41 to iindex = 2),
31 = phi  30,13,
invokeinterface < Application, Landroid/database/Cursor, close()V > 26 @75 exception:34,
goto (from iindex= 44 to iindex = 2),
35 = phi  31,13,
38 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putKeyValueIfUnchanged(Ljava/lang/String;Ljava/lang/Object;II)V > 38,2,35,4,12 @82 exception:39,
conditional branch(ne, to iindex=-1) 35,13,
goto (from iindex= 49 to iindex = 4),
41 = phi  3,40,
return 41,
return 13,
return 8,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public String getString(String p1, String p2, int p3){
	if (p3 != -9999) {
		boolean v3 = ""legacy_lock_pattern_enabled"".equals(p1);
		if (v3 == 0) {
			boolean v5 = this.mCache.hasKeyValue(p1, p3);
			if (v5 == 0) {
				int v6 = LockSettingsStorage$Cache.-$$Nest$mgetVersion(this.mCache);
				SQLiteDatabase v7 = this.mOpenHelper.getReadableDatabase();
				String v8 = new String(2);
				String v9 = Integer.toString(p3);
				Cursor v10 = v7.query(""locksettings"", this.COLUMNS_FOR_QUERY, ""user=? AND name=?"", v8, 0, 0, 0);
				if (v10 == 0) {
					boolean v11 = v10.moveToFirst();
					if (v11 == 0) {
						String v12 = v10.getString(0);
						v10.close();
						this.mCache.putKeyValueIfUnchanged(p1, v12, p3, v6);
						if (v12 != this.DEFAULT) {
							String v4 = p2;
							String v2 = v4;
							return v2;
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = phi  2,10,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readKeyValue(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,11,3,4 @16 exception:12,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, hasKeyValue(Ljava/lang/String;I)Z > 6,2,4 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
12 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, -$$Nest$mgetVersion(Lcom/android/server/locksettings/LockSettingsStorage$Cache;)I > 10 @21 exception:11,
monitorexit 5,
13 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, DEFAULT, <Application,Ljava/lang/Object> >,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mOpenHelper, <Application,Lcom/android/server/locksettings/LockSettingsStorage$DatabaseHelper> > 1,
16 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 14 @30 exception:15,
18 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, COLUMNS_FOR_QUERY, <Application,[Ljava/lang/String> >,
21 = new <Application,[Ljava/lang/String>@4220 ,
23 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 4 @44 exception:22,
arraystore 21[9] = 23,
arraystore 21[24] = 2,
26 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 16,17,18,19,21,9,9,9 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
28 = invokeinterface < Application, Landroid/database/Cursor, moveToFirst()Z > 26 @63 exception:27,
conditional branch(eq, to iindex=-1) 28,9,
30 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 26,9 @69 exception:29,
goto (from iindex= 41 to iindex = 2),
31 = phi  30,13,
invokeinterface < Application, Landroid/database/Cursor, close()V > 26 @75 exception:34,
goto (from iindex= 44 to iindex = 2),
35 = phi  31,13,
38 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putKeyValueIfUnchanged(Ljava/lang/String;Ljava/lang/Object;II)V > 38,2,35,4,12 @82 exception:39,
conditional branch(ne, to iindex=-1) 35,13,
40 = checkcast <Application,Ljava/lang/String>35 <Application,Ljava/lang/String>,
41 = phi  3,40,
return 41,
return 13,
return 8,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public String getString(String p1, String p2, int p3){
	if (p3 != -9999) {
		boolean v3 = ""legacy_lock_pattern_enabled"".equals(p1);
		if (v3 == 0) {
			boolean v5 = this.mCache.hasKeyValue(p1, p3);
			if (v5 == 0) {
				int v6 = LockSettingsStorage$Cache.-$$Nest$mgetVersion(this.mCache);
				SQLiteDatabase v7 = this.mOpenHelper.getReadableDatabase();
				String v8 = new String(2);
				String v9 = Integer.toString(p3);
				Cursor v10 = v7.query(""locksettings"", this.COLUMNS_FOR_QUERY, ""user=? AND name=?"", v8, 0, 0, 0);
				if (v10 == 0) {
					boolean v11 = v10.moveToFirst();
					if (v11 == 0) {
						String v12 = v10.getString(0);
						v10.close();
						this.mCache.putKeyValueIfUnchanged(p1, v12, p3, v6);
						if (v12 != this.DEFAULT) {
							String v4 = p2;
							String v2 = v4;
							return v2;
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","registerWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:4,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, registerWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z > 6,2 @9 exception:7,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @13 exception:13,
return 8,","depth : 0
-----
","public boolean registerWeakEscrowTokenRemovedListener(IWeakEscrowTokenRemovedListener p1){
	p0.checkManageWeakEscrowTokenMethodUsage();
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = this.mSpManager.registerWeakEscrowTokenRemovedListener(p1);
	Binder.restoreCallingIdentity(v2);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","registerWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:4,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, registerWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z > 6,2 @9 exception:7,
3 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mListeners, <Application,Landroid/os/RemoteCallbackList> > 1,
5 = invokevirtual < Application, Landroid/os/RemoteCallbackList, register(Landroid/os/IInterface;)Z > 3,2 @2 exception:4,
return 5,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @13 exception:13,
return 8,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public boolean registerWeakEscrowTokenRemovedListener(IWeakEscrowTokenRemovedListener p1){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		boolean v7 = this.mListeners.register(p1);
		boolean v6 = v7;
		Binder.restoreCallingIdentity(v5);
		return v6;
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","removeGatekeeperPasswordHandle(J)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
invokevirtual < Application, Landroid/util/LongSparseArray, remove(J)V > 5,2 @8 exception:6,
monitorexit 4,
return,","depth : 0
-----
","public void removeGatekeeperPasswordHandle(long p1){
	this.mGatekeeperPasswords.remove(p1);
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","setSnapshotCreatedPendingIntent(Landroid/app/PendingIntent;)V","0","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setSnapshotCreatedPendingIntent(Landroid/app/PendingIntent;)V > 3,2 @2 exception:4,
return,","depth : 0
-----
","public void setSnapshotCreatedPendingIntent(PendingIntent p1){
	this.mRecoverableKeyStoreManager.setSnapshotCreatedPendingIntent(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setSnapshotCreatedPendingIntent(Landroid/app/PendingIntent;)V","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setSnapshotCreatedPendingIntent(Landroid/app/PendingIntent;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:4,
6 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mListenersStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverySnapshotListenersStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverySnapshotListenersStorage, setSnapshotListener(ILandroid/app/PendingIntent;)V > 6,5,2 @9 exception:7,
return,
return,","depth : 0
-----
depth : 1
-----
","public void setSnapshotCreatedPendingIntent(PendingIntent p1){
	int v3 = Binder.getCallingUid();
	this.mListenersStorage.setSnapshotListener(v3, p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setSnapshotCreatedPendingIntent(Landroid/app/PendingIntent;)V","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setSnapshotCreatedPendingIntent(Landroid/app/PendingIntent;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:4,
6 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mListenersStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverySnapshotListenersStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverySnapshotListenersStorage, setSnapshotListener(ILandroid/app/PendingIntent;)V > 6,5,2 @9 exception:7,
monitorenter 1,
5 = new <Application,Ljava/lang/StringBuilder>@3,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 5 @5 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 5,7 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 5,2 @13 exception:10,
13 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 5 @16 exception:12,
15 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 4,13 @20 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverySnapshotListenersStorage, mAgentIntents, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, put(ILjava/lang/Object;)V > 16,2,3 @25 exception:17,
18 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverySnapshotListenersStorage, mAgentsWithPendingSnapshots, <Application,Landroid/util/ArraySet> > 1,
20 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @30 exception:19,
22 = invokevirtual < Application, Landroid/util/ArraySet, contains(Ljava/lang/Object;)Z > 18,20 @34 exception:21,
conditional branch(eq, to iindex=-1) 22,23,
26 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 4,24 @44 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverySnapshotListenersStorage, tryToSendIntent(ILandroid/app/PendingIntent;)V > 1,2,3 @47 exception:27,
monitorexit 1,
return,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public void setSnapshotCreatedPendingIntent(PendingIntent p1){
	int v3 = Binder.getCallingUid();
	this.mAgentIntents.put(v3, p1);
	Integer v12 = Integer.valueOf(v3);
	boolean v13 = this.mAgentsWithPendingSnapshots.contains(v12);
	if (v13 == 0) {
		RecoverySnapshotListenersStorage.tryToSendIntent(v3, p1);
		return;
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B","0","8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
10 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B > 8,2,3,4,5,6,7 @8 exception:9,
return 10,","depth : 0
-----
","public byte[] startRecoverySessionWithCertPath(String p1, String p2, RecoveryCertPath p3, byte[] p4, byte[] p5, List p6){
	byte[] v1 = this.mRecoverableKeyStoreManager.startRecoverySessionWithCertPath(p1, p2, p3, p4, p5, p6);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B","1","8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
10 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B > 8,2,3,4,5,6,7 @8 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @2 exception:9,
10 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 10,3 @7 exception:11,
15 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,13 @13 exception:14,
18 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,16 @19 exception:17,
21 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 5,19 @25 exception:20,
24 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 6,22 @31 exception:23,
27 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 7,25 @37 exception:26,
30 = invokevirtual < Application, Landroid/security/keystore/recovery/RecoveryCertPath, getCertPath()Ljava/security/cert/CertPath; > 4 @42 exception:29,
36 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 36,12 @48 exception:37,
invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertUtils, validateCertPath(Ljava/security/cert/X509Certificate;Ljava/security/cert/CertPath;)V > 38,30 @52 exception:39,
50 = invokevirtual < Application, Ljava/security/cert/CertPath, getCertificates()Ljava/util/List; > 30 @55 exception:49,
53 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 50,51 @60 exception:52,
54 = checkcast <Application,Ljava/security/cert/Certificate>53 <Application,Ljava/security/cert/Certificate>,
56 = invokevirtual < Application, Ljava/security/cert/Certificate, getPublicKey()Ljava/security/PublicKey; > 54 @66 exception:55,
58 = invokeinterface < Application, Ljava/security/PublicKey, getEncoded()[B > 56 @70 exception:57,
conditional branch(eq, to iindex=-1) 58,51,
65 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, startRecoverySession(Ljava/lang/String;[B[B[BLjava/util/List;)[B > 1,2,58,5,6,7 @81 exception:64,
return 65,
return 10,","depth : 0
-----
depth : 1
-----
","public byte[] startRecoverySessionWithCertPath(String p1, String p2, RecoveryCertPath p3, byte[] p4, byte[] p5, List p6){
	String v3 = this.mTestCertHelper.getDefaultCertificateAliasIfEmpty(p2);
	Object v4 = Objects.requireNonNull(p1, ""invalid session"");
	Object v5 = Objects.requireNonNull(p3, ""verifierCertPath is null"");
	Object v6 = Objects.requireNonNull(p4, ""vaultParams is null"");
	Object v7 = Objects.requireNonNull(p5, ""vaultChallenge is null"");
	Object v8 = Objects.requireNonNull(p6, ""secrets is null"");
	CertPath v9 = p3.getCertPath();
	X509Certificate v10 = this.mTestCertHelper.getRootCertificate(v3);
	CertUtils.validateCertPath(v10, v9);
	List v12 = v9.getCertificates();
	Object v13 = v12.get(0);
	PublicKey v14 = v13.getPublicKey();
	byte[] v15 = v14.getEncoded();
	if (v15 == 0) {
		byte[] v16 = RecoverableKeyStoreManager.startRecoverySession(p1, v15, p4, p5, p6);
		byte[] v1 = v16;
		return v1;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B","2","8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
10 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B > 8,2,3,4,5,6,7 @8 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @2 exception:9,
10 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 10,3 @7 exception:11,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Ljava/lang/String, isEmpty()Z > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
13 = phi  2,11,
return 13,
15 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,13 @13 exception:14,
18 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,16 @19 exception:17,
21 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 5,19 @25 exception:20,
24 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 6,22 @31 exception:23,
27 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 7,25 @37 exception:26,
30 = invokevirtual < Application, Landroid/security/keystore/recovery/RecoveryCertPath, getCertPath()Ljava/security/cert/CertPath; > 4 @42 exception:29,
2 = getfield < Application, Landroid/security/keystore/recovery/RecoveryCertPath, mEncodedCertPath, <Primordial,[B> > 1,
4 = invokestatic < Application, Landroid/security/keystore/recovery/RecoveryCertPath, decodeCertPath([B)Ljava/security/cert/CertPath; > 2 @2 exception:3,
return 4,
36 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 36,12 @48 exception:37,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, isTestOnlyCertificateAlias(Ljava/lang/String;)Z > 1,4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
15 = invokestatic < Application, Landroid/security/keystore/recovery/TrustedRootCertificates, getTestOnlyInsecureCertificate()Ljava/security/cert/X509Certificate; > @10 exception:14,
return 15,
invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertUtils, validateCertPath(Ljava/security/cert/X509Certificate;Ljava/security/cert/CertPath;)V > 38,30 @52 exception:39,
invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertUtils, validateCertPath(Ljava/util/Date;Ljava/security/cert/X509Certificate;Ljava/security/cert/CertPath;)V > 3,1,2 @1 exception:4,
return,
50 = invokevirtual < Application, Ljava/security/cert/CertPath, getCertificates()Ljava/util/List; > 30 @55 exception:49,
53 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 50,51 @60 exception:52,
54 = checkcast <Application,Ljava/security/cert/Certificate>53 <Application,Ljava/security/cert/Certificate>,
56 = invokevirtual < Application, Ljava/security/cert/Certificate, getPublicKey()Ljava/security/PublicKey; > 54 @66 exception:55,
58 = invokeinterface < Application, Ljava/security/PublicKey, getEncoded()[B > 56 @70 exception:57,
conditional branch(eq, to iindex=-1) 58,51,
65 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, startRecoverySession(Ljava/lang/String;[B[B[BLjava/util/List;)[B > 1,2,58,5,6,7 @81 exception:64,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:8,
11 = invokeinterface < Application, Ljava/util/List, size()I > 6 @7 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
18 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, deserializePublicKey([B)Ljava/security/PublicKey; > 3 @16 exception:17,
25 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, publicKeysMatch(Ljava/security/PublicKey;[B)Z > 1,18,4 @20 exception:24,
conditional branch(eq, to iindex=-1) 25,26,
32 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, generateKeyClaimant()[B > @26 exception:31,
34 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 6,26 @31 exception:33,
35 = checkcast <Application,Landroid/security/keystore/recovery/KeyChainProtectionParams>34 <Application,Landroid/security/keystore/recovery/KeyChainProtectionParams>,
37 = invokevirtual < Application, Landroid/security/keystore/recovery/KeyChainProtectionParams, getSecret()[B > 35 @37 exception:36,
38 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
39 = new <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>@43,
invokespecial < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, <init>(Ljava/lang/String;[B[B[B)V > 39,2,37,32,4 @45 exception:40,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, add(ILcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry;)V > 38,9,39 @48 exception:41,
42 = new <Application,Ljava/lang/StringBuilder>@51,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 42 @53 exception:43,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 42,44 @58 exception:45,
48 = invokestatic < Application, Lcom/android/internal/util/HexDump, toHexString([B)Ljava/lang/String; > 4 @61 exception:47,
50 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 42,48 @65 exception:49,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 42 @68 exception:51,
55 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 53,52 @74 exception:54,
57 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, calculateThmKfHash([B)[B > 37 @77 exception:56,
59 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, encryptRecoveryClaim(Ljava/security/PublicKey;[B[B[B[B)[B > 18,4,5,57,32 @81 exception:58,
return 59,
return 65,
return 10,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public byte[] startRecoverySessionWithCertPath(String p1, String p2, RecoveryCertPath p3, byte[] p4, byte[] p5, List p6){
	if (p2 == 0) {
		boolean v4 = p2.isEmpty();
		if (v4 == 0) {
			String v3 = p2;
			Object v5 = Objects.requireNonNull(p1, ""invalid session"");
			Object v6 = Objects.requireNonNull(p3, ""verifierCertPath is null"");
			Object v7 = Objects.requireNonNull(p4, ""vaultParams is null"");
			Object v8 = Objects.requireNonNull(p5, ""vaultChallenge is null"");
			Object v9 = Objects.requireNonNull(p6, ""secrets is null"");
			CertPath v11 = RecoveryCertPath.decodeCertPath(this.mEncodedCertPath);
			CertPath v10 = v11;
			String v13 = TestOnlyInsecureCertificateHelper.getDefaultCertificateAliasIfEmpty(v3);
			boolean v14 = TestOnlyInsecureCertificateHelper.isTestOnlyCertificateAlias(v13);
			if (v14 == 0) {
				X509Certificate v15 = TrustedRootCertificates.getTestOnlyInsecureCertificate();
				X509Certificate v12 = v15;
				CertUtils.validateCertPath(0, v12, v10);
				List v18 = v10.getCertificates();
				Object v19 = v18.get(0);
				PublicKey v20 = v19.getPublicKey();
				byte[] v21 = v20.getEncoded();
				if (v21 == 0) {
					int v24 = Binder.getCallingUid();
					int v25 = p6.size();
					if (v25 != 1) {
						PublicKey v26 = KeySyncUtils.deserializePublicKey(v21);
						boolean v27 = RecoverableKeyStoreManager.publicKeysMatch(v26, p4);
						if (v27 == 0) {
							byte[] v28 = KeySyncUtils.generateKeyClaimant();
							Object v29 = p6.get(0);
							byte[] v30 = v29.getSecret();
							RecoverySessionStorage$Entry v31 = new RecoverySessionStorage$Entry(p1,v30,v28,p4);
							this.mRecoverySessionStorage.add(v24, v31);
							String v37 = HexDump.toHexString(p4);
							byte[] v41 = KeySyncUtils.calculateThmKfHash(v30);
							byte[] v42 = KeySyncUtils.encryptRecoveryClaim(v26, p4, p5, v41, v28);
							byte[] v22 = v42;
							byte[] v1 = v22;
							return v1;
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B","2","8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
10 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, startRecoverySessionWithCertPath(Ljava/lang/String;Ljava/lang/String;Landroid/security/keystore/recovery/RecoveryCertPath;[B[BLjava/util/List;)[B > 8,2,3,4,5,6,7 @8 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @2 exception:9,
10 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 10,3 @7 exception:11,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Ljava/lang/String, isEmpty()Z > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
13 = phi  2,11,
return 13,
15 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,13 @13 exception:14,
18 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,16 @19 exception:17,
21 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 5,19 @25 exception:20,
24 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 6,22 @31 exception:23,
27 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 7,25 @37 exception:26,
30 = invokevirtual < Application, Landroid/security/keystore/recovery/RecoveryCertPath, getCertPath()Ljava/security/cert/CertPath; > 4 @42 exception:29,
2 = getfield < Application, Landroid/security/keystore/recovery/RecoveryCertPath, mEncodedCertPath, <Primordial,[B> > 1,
4 = invokestatic < Application, Landroid/security/keystore/recovery/RecoveryCertPath, decodeCertPath([B)Ljava/security/cert/CertPath; > 2 @2 exception:3,
return 4,
36 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 36,12 @48 exception:37,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, isTestOnlyCertificateAlias(Ljava/lang/String;)Z > 1,4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokestatic < Application, Landroid/security/keystore/recovery/TrustedRootCertificates, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 4 @15 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
return 9,
invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertUtils, validateCertPath(Ljava/security/cert/X509Certificate;Ljava/security/cert/CertPath;)V > 38,30 @52 exception:39,
invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertUtils, validateCertPath(Ljava/util/Date;Ljava/security/cert/X509Certificate;Ljava/security/cert/CertPath;)V > 3,1,2 @1 exception:4,
return,
50 = invokevirtual < Application, Ljava/security/cert/CertPath, getCertificates()Ljava/util/List; > 30 @55 exception:49,
53 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 50,51 @60 exception:52,
54 = checkcast <Application,Ljava/security/cert/Certificate>53 <Application,Ljava/security/cert/Certificate>,
56 = invokevirtual < Application, Ljava/security/cert/Certificate, getPublicKey()Ljava/security/PublicKey; > 54 @66 exception:55,
58 = invokeinterface < Application, Ljava/security/PublicKey, getEncoded()[B > 56 @70 exception:57,
conditional branch(eq, to iindex=-1) 58,51,
65 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, startRecoverySession(Ljava/lang/String;[B[B[BLjava/util/List;)[B > 1,2,58,5,6,7 @81 exception:64,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:7,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:8,
11 = invokeinterface < Application, Ljava/util/List, size()I > 6 @7 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
18 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, deserializePublicKey([B)Ljava/security/PublicKey; > 3 @16 exception:17,
25 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, publicKeysMatch(Ljava/security/PublicKey;[B)Z > 1,18,4 @20 exception:24,
conditional branch(eq, to iindex=-1) 25,26,
32 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, generateKeyClaimant()[B > @26 exception:31,
34 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 6,26 @31 exception:33,
35 = checkcast <Application,Landroid/security/keystore/recovery/KeyChainProtectionParams>34 <Application,Landroid/security/keystore/recovery/KeyChainProtectionParams>,
37 = invokevirtual < Application, Landroid/security/keystore/recovery/KeyChainProtectionParams, getSecret()[B > 35 @37 exception:36,
38 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
39 = new <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>@43,
invokespecial < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, <init>(Ljava/lang/String;[B[B[B)V > 39,2,37,32,4 @45 exception:40,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, add(ILcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry;)V > 38,9,39 @48 exception:41,
42 = new <Application,Ljava/lang/StringBuilder>@51,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 42 @53 exception:43,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 42,44 @58 exception:45,
48 = invokestatic < Application, Lcom/android/internal/util/HexDump, toHexString([B)Ljava/lang/String; > 4 @61 exception:47,
50 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 42,48 @65 exception:49,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 42 @68 exception:51,
55 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 53,52 @74 exception:54,
57 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, calculateThmKfHash([B)[B > 37 @77 exception:56,
59 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, encryptRecoveryClaim(Ljava/security/PublicKey;[B[B[B[B)[B > 18,4,5,57,32 @81 exception:58,
return 59,
return 65,
return 10,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public byte[] startRecoverySessionWithCertPath(String p1, String p2, RecoveryCertPath p3, byte[] p4, byte[] p5, List p6){
	if (p2 == 0) {
		boolean v4 = p2.isEmpty();
		if (v4 == 0) {
			String v3 = p2;
			Object v5 = Objects.requireNonNull(p1, ""invalid session"");
			Object v6 = Objects.requireNonNull(p3, ""verifierCertPath is null"");
			Object v7 = Objects.requireNonNull(p4, ""vaultParams is null"");
			Object v8 = Objects.requireNonNull(p5, ""vaultChallenge is null"");
			Object v9 = Objects.requireNonNull(p6, ""secrets is null"");
			CertPath v11 = RecoveryCertPath.decodeCertPath(this.mEncodedCertPath);
			CertPath v10 = v11;
			String v13 = TestOnlyInsecureCertificateHelper.getDefaultCertificateAliasIfEmpty(v3);
			boolean v14 = TestOnlyInsecureCertificateHelper.isTestOnlyCertificateAlias(v13);
			if (v14 == 0) {
				X509Certificate v15 = TrustedRootCertificates.getRootCertificate(v13);
				if (v15 == 0) {
					X509Certificate v12 = v15;
					CertUtils.validateCertPath(0, v12, v10);
					List v18 = v10.getCertificates();
					Object v19 = v18.get(0);
					PublicKey v20 = v19.getPublicKey();
					byte[] v21 = v20.getEncoded();
					if (v21 == 0) {
						int v24 = Binder.getCallingUid();
						int v25 = p6.size();
						if (v25 != 1) {
							PublicKey v26 = KeySyncUtils.deserializePublicKey(v21);
							boolean v27 = RecoverableKeyStoreManager.publicKeysMatch(v26, p4);
							if (v27 == 0) {
								byte[] v28 = KeySyncUtils.generateKeyClaimant();
								Object v29 = p6.get(0);
								byte[] v30 = v29.getSecret();
								RecoverySessionStorage$Entry v31 = new RecoverySessionStorage$Entry(p1,v30,v28,p4);
								this.mRecoverySessionStorage.add(v24, v31);
								String v37 = HexDump.toHexString(p4);
								byte[] v41 = KeySyncUtils.calculateThmKfHash(v30);
								byte[] v42 = KeySyncUtils.encryptRecoveryClaim(v26, p4, p5, v41, v28);
								byte[] v22 = v42;
								byte[] v1 = v22;
								return v1;
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:5,
8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,6 @5 exception:7,
9 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda0>@8,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda0, <init>(Lcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)V > 9,4 @10 exception:10,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @13 exception:11,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, addEscrowToken([BIILcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback;)J > 1,2,13,3,9 @18 exception:14,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @22 exception:18,
return 15,","depth : 0
-----
","public long addWeakEscrowToken(byte[] p1, int p2, IWeakEscrowTokenActivatedListener p3){
	p0.checkManageWeakEscrowTokenMethodUsage();
	Object v2 = Objects.requireNonNull(p3, ""Listener can not be null."");
	LockSettingsService$$ExternalSyntheticLambda0 v3 = new LockSettingsService$$ExternalSyntheticLambda0(p3);
	long v5 = Binder.clearCallingIdentity();
	long v6 = p0.addEscrowToken(p1, 1, p2, v3);
	Binder.restoreCallingIdentity(v5);
	return v6;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,6 @5 exception:7,
9 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda0>@8,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda0, <init>(Lcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)V > 9,4 @10 exception:10,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @13 exception:11,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, addEscrowToken([BIILcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback;)J > 1,2,13,3,9 @18 exception:14,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isUserSecure(I)Z > 1,4 @3 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,4 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,4 @25 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
16 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @31 exception:15,
18 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @35 exception:17,
20 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 14,16,13,18,4,9 @41 exception:19,
21 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 20,
27 = phi  9,25,21,
31 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,4 @47 exception:30,
conditional branch(eq, to iindex=-1) 31,9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, disableEscrowTokenOnNonManagedDevicesIfNeeded(I)V > 1,4 @53 exception:32,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
35 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasEscrowData(I)Z > 33,4 @58 exception:34,
conditional branch(eq, to iindex=-1) 35,9,
goto (from iindex= 34 to iindex = 9),
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
44 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, createTokenBasedSyntheticPassword([BIILcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback;)J > 42,2,3,4,5 @75 exception:43,
conditional branch(eq, to iindex=-1) 27,9,
45 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, activateTokenBasedSyntheticPassword(JLcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;I)Z > 45,44,27,4 @83 exception:46,
monitorexit 6,
return 44,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @22 exception:18,
return 15,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public long addWeakEscrowToken(byte[] p1, int p2, IWeakEscrowTokenActivatedListener p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		Object v5 = Objects.requireNonNull(p3, ""Listener can not be null."");
		LockSettingsService$$ExternalSyntheticLambda0 v6 = new LockSettingsService$$ExternalSyntheticLambda0(p3);
		long v8 = Binder.clearCallingIdentity();
		boolean v10 = LockSettingsService.isUserSecure(p2);
		if (v10 != 0) {
			boolean v11 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p2);
			if (v11 == 0) {
				long v12 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
				IGateKeeperService v13 = LockSettingsService.getGateKeeperService();
				LockscreenCredential v14 = LockscreenCredential.createNone();
				SyntheticPasswordManager$AuthenticationResult v15 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v13, v12, v14, p2, 0);
				boolean v16 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
				if (v16 == 0) {
					LockSettingsService.disableEscrowTokenOnNonManagedDevicesIfNeeded(p2);
					boolean v18 = this.mSpManager.hasEscrowData(p2);
					if (v18 == 0) {
						long v19 = this.mSpManager.createTokenBasedSyntheticPassword(p1, 1, p2, v6);
						if (0 == 0) {
							boolean v20 = this.mSpManager.activateTokenBasedSyntheticPassword(v19, 0, p2);
							long v9 = v19;
							Binder.restoreCallingIdentity(v8);
							return v9;
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,6 @5 exception:7,
9 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda0>@8,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda0, <init>(Lcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)V > 9,4 @10 exception:10,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @13 exception:11,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, addEscrowToken([BIILcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback;)J > 1,2,13,3,9 @18 exception:14,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isUserSecure(I)Z > 1,4 @3 exception:7,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
8 = phi  7,6,
return 8,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,4 @10 exception:10,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,2 @0 exception:3,
6 = binaryop(lt) 4 , 5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,7,
return 9,
conditional branch(eq, to iindex=-1) 11,9,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,4 @25 exception:12,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getLong(Ljava/lang/String;JI)J > 1,3,4,2 @5 exception:5,
return 6,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
16 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @31 exception:15,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
18 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @35 exception:17,
1 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = new <Primordial,[B>@32 ,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 1,4,3 @6 exception:5,
return 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 14,16,13,18,4,9 @41 exception:19,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@8,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @10 exception:8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,9,3,5 @16 exception:10,
13 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData; > 11 @20 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 4,14 @26 exception:15,
conditional branch(ne, to iindex=-1) 16,18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, computePasswordToken(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData;)[B > 1,4,13 @71 exception:20,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,5 @75 exception:22,
conditional branch(eq, to iindex=-1) 23,24,
99 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @82 exception:98,
conditional branch(ne, to iindex=-1) 99,18,
101 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, passwordTokenToWeaverKey([B)[B > 1,21 @98 exception:100,
103 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,23,101 @102 exception:102,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 103,
105 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 103 @108 exception:104,
conditional branch(eq, to iindex=-1) 105,18,
106 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 7,
108 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 106 @119 exception:107,
110 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderWeaverSecret([B[B)[B > 1,21,108 @123 exception:109,
111 = phi  93,29,
113 = phi  97,110,
goto (from iindex= 67 to iindex = 148),
conditional branch(eq, to iindex=-1) 6,18,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 6 @279 exception:117,
goto (from iindex= 142 to iindex = 9),
127 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,18,113,111,5 @298 exception:126,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 127,
129 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,127,29,5 @310 exception:128,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 129,
130 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
conditional branch(eq, to iindex=-1) 130,18,
132 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasPasswordMetrics(JI)Z > 1,3,5 @320 exception:131,
conditional branch(ne, to iindex=-1) 132,18,
133 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, savePasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)V > 1,4,133,3,5 @336 exception:134,
return 7,
21 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 20,
27 = phi  9,25,21,
31 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,4 @47 exception:30,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(eq, to iindex=-1) 31,9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, disableEscrowTokenOnNonManagedDevicesIfNeeded(I)V > 1,4 @53 exception:32,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getUserManagerInternal()Lcom/android/server/pm/UserManagerInternal; > 3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerInternal, isUserManaged(I)Z > 5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerInternal, isDeviceManaged()Z > 5 @20 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getDeviceStateCache()Landroid/app/admin/DeviceStateCache; > 12 @34 exception:13,
16 = invokevirtual < Application, Landroid/app/admin/DeviceStateCache, isDeviceProvisioned()Z > 14 @38 exception:15,
conditional branch(ne, to iindex=-1) 16,9,
17 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
19 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 17 @52 exception:18,
22 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 19,20 @58 exception:21,
conditional branch(eq, to iindex=-1) 22,9,
23 = new <Application,Ljava/lang/StringBuilder>@65,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 23 @67 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 23,25 @72 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 23,2 @75 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 23 @78 exception:30,
33 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 8,31 @82 exception:32,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,2 @85 exception:34,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, destroyEscrowData(I)V > 36,2 @93 exception:37,
return,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
35 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasEscrowData(I)Z > 33,4 @58 exception:34,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,3,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,8,4,2 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 10 to iindex = 2),
17 = phi  15,7,
return 17,
conditional branch(eq, to iindex=-1) 35,9,
goto (from iindex= 34 to iindex = 9),
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
44 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, createTokenBasedSyntheticPassword([BIILcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback;)J > 42,2,3,4,5 @75 exception:43,
7 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, generateHandle()J > @0 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
10 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @6 exception:9,
12 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 8,10 @10 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
16 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @18 exception:15,
17 = new <Application,Landroid/util/ArrayMap>@22,
invokespecial < Application, Landroid/util/ArrayMap, <init>()V > 17 @24 exception:18,
20 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 14,16,17 @27 exception:19,
25 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData>@30,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, <init>()V > 25 @32 exception:26,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, mType, <Primordial,I> > = 3,
29 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, secureRandom(I)[B > 27 @39 exception:28,
31 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @43 exception:30,
conditional branch(eq, to iindex=-1) 31,13,
32 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > 1,
33 = getfield < Application, Landroid/hardware/weaver/V1_0/WeaverConfig, valueSize, <Primordial,I> > 32,
35 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, secureRandom(I)[B > 33 @53 exception:34,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, weaverSecret, <Primordial,[B> > = 35,
36 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALISATION_WEAVER_TOKEN, <Primordial,[B> >,
38 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, encrypt([B[B[B)[B > 35,36,29 @61 exception:37,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, secdiscardableOnDisk, <Primordial,[B> > = 38,
goto (from iindex= 32 to iindex = 6),
44 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderSecdiscardable([B[B)[B > 1,2,29 @73 exception:43,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, aggregatedSecret, <Primordial,[B> > = 44,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, mCallback, <Application,Lcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback> > = 5,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
47 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @83 exception:46,
49 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 45,47 @87 exception:48,
50 = checkcast <Application,Landroid/util/ArrayMap>49 <Application,Landroid/util/ArrayMap>,
52 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @93 exception:51,
54 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 50,52,25 @97 exception:53,
return 7,
conditional branch(eq, to iindex=-1) 27,9,
45 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, activateTokenBasedSyntheticPassword(JLcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;I)Z > 45,44,27,4 @83 exception:46,
5 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
7 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @2 exception:6,
9 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 5,7 @6 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
13 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @16 exception:12,
15 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 11,13 @20 exception:14,
16 = checkcast <Application,Landroid/util/ArrayMap>15 <Application,Landroid/util/ArrayMap>,
18 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 2 @26 exception:17,
20 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 16,18 @30 exception:19,
21 = checkcast <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData>20 <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData>,
conditional branch(ne, to iindex=-1) 21,10,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadEscrowData(Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;I)Z > 1,3,4 @39 exception:22,
conditional branch(ne, to iindex=-1) 23,10,
26 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @53 exception:25,
conditional branch(eq, to iindex=-1) 26,10,
28 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getNextAvailableWeaverSlot()I > 1 @59 exception:27,
29 = new <Application,Ljava/lang/StringBuilder>@63,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @65 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @70 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 29,28 @73 exception:34,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,36 @78 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 29,4 @81 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @84 exception:41,
44 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 24,42 @88 exception:43,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, weaverSecret, <Primordial,[B> > 21,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverEnroll(I[B[B)[B > 1,28,10,45 @94 exception:46,
conditional branch(ne, to iindex=-1) 47,10,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveWeaverSlot(IJI)V > 1,28,2,4 @106 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mPasswordSlotManager, <Application,Lcom/android/server/locksettings/PasswordSlotManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, markSlotInUse(I)V > 49,28 @111 exception:50,
55 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, secdiscardableOnDisk, <Primordial,[B> > 21,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveSecdiscardable(J[BI)V > 1,2,55,4 @116 exception:56,
57 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, mType, <Primordial,I> > 21,
59 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getTokenBasedBlobType(I)B > 1,57 @121 exception:58,
60 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, aggregatedSecret, <Primordial,[B> > 21,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, createSyntheticPasswordBlob(JBLcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;[BJI)V > 1,2,59,3,60,61,4 @133 exception:62,
63 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
65 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @138 exception:64,
67 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 63,65 @142 exception:66,
68 = checkcast <Application,Landroid/util/ArrayMap>67 <Application,Landroid/util/ArrayMap>,
70 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 2 @148 exception:69,
72 = invokevirtual < Application, Landroid/util/ArrayMap, remove(Ljava/lang/Object;)Ljava/lang/Object; > 68,70 @152 exception:71,
73 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, mCallback, <Application,Lcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback> > 21,
conditional branch(eq, to iindex=-1) 73,10,
invokeinterface < Application, Lcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback, onEscrowTokenActivated(JI)V > 73,2,4 @159 exception:74,
return 76,
monitorexit 6,
return 44,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @22 exception:18,
return 15,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public long addWeakEscrowToken(byte[] p1, int p2, IWeakEscrowTokenActivatedListener p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		Object v5 = Objects.requireNonNull(p3, ""Listener can not be null."");
		LockSettingsService$$ExternalSyntheticLambda0 v6 = new LockSettingsService$$ExternalSyntheticLambda0(p3);
		long v8 = Binder.clearCallingIdentity();
		int v11 = LockSettingsService.getCredentialTypeInternal(p2);
		if (v11 == -1) {
			boolean v10 = 1;
			if (v10 != 0) {
				long v13 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
				if ((v13 < 0) != 0) {
					boolean v12 = 1;
					if (v12 == 0) {
						long v15 = LockSettingsService.getLong(""sp-handle"", 0, p2);
						long v14 = v15;
						if (this.mGateKeeperService == 0) {
							IBinder v17 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
							if (v17 == 0) {
								LockSettingsService$GateKeeperDiedRecipient v18 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
								v17.linkToDeath(v18, 0);
								IGateKeeperService v21 = IGateKeeperService$Stub.asInterface(v17);
								this.mGateKeeperService = v21;
								IGateKeeperService v16 = v21;
								LockscreenCredential v23 = new LockscreenCredential(-1,v24);
								[B v24 = new [B(0);
								LockscreenCredential v22 = v23;
								SyntheticPasswordManager$AuthenticationResult v27 = new SyntheticPasswordManager$AuthenticationResult();
								byte[] v29 = SyntheticPasswordManager.loadState(""pwd"", v14, p2);
								SyntheticPasswordManager$PasswordData v30 = SyntheticPasswordManager$PasswordData.fromBytes(v29);
								boolean v31 = v22.checkAgainstStoredType(SyntheticPasswordManager$PasswordData.credentialType);
								if (v31 != 0) {
									byte[] v32 = SyntheticPasswordManager.computePasswordToken(v22, v30);
									int v33 = SyntheticPasswordManager.loadWeaverSlot(v14, p2);
									if (v33 == -1) {
										boolean v34 = SyntheticPasswordManager.isWeaverAvailable();
										if (v34 != 0) {
											byte[] v35 = SyntheticPasswordManager.passwordTokenToWeaverKey(v32);
											VerifyCredentialResponse v36 = SyntheticPasswordManager.weaverVerify(v33, v35);
											SyntheticPasswordManager$AuthenticationResult.gkResponse = v36;
											int v37 = v36.getResponseCode();
											if (v37 == 0) {
												byte[] v38 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getGatekeeperHAT();
												byte[] v39 = SyntheticPasswordManager.transformUnderWeaverSecret(v32, v38);
												if (0 == 0) {
													0.onCredentialVerified();
													SyntheticPasswordManager$AuthenticationToken v41 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(v14, 0, transformUnderSecdiscardable(), sidFromPasswordHandle(), p2);
													SyntheticPasswordManager$AuthenticationResult.authToken = v41;
													VerifyCredentialResponse v42 = SyntheticPasswordManager.verifyChallenge(v16, v41, 0, p2);
													SyntheticPasswordManager$AuthenticationResult.gkResponse = v42;
													if (SyntheticPasswordManager$AuthenticationResult.authToken == 0) {
														boolean v43 = SyntheticPasswordManager.hasPasswordMetrics(v14, p2);
														if (v43 != 0) {
															SyntheticPasswordManager.savePasswordMetrics(v22, SyntheticPasswordManager$AuthenticationResult.authToken, v14, p2);
															SyntheticPasswordManager$AuthenticationResult v26 = v27;
															if (p2 != -9999) {
																LockSettingsStorage$PersistentData v46 = this.mStorage.readPersistentDataBlock();
																if (LockSettingsStorage$PersistentData.type == 1) {
																	if (LockSettingsStorage$PersistentData.type != 2) {
																		boolean v45 = 0;
																		if (v45 == 0) {
																			UserManagerInternal v48 = this.mInjector.getUserManagerInternal();
																			boolean v49 = v48.isUserManaged(p2);
																			if (v49 == 0) {
																				boolean v50 = v48.isDeviceManaged();
																				if (v50 == 0) {
																					DeviceStateCache v51 = this.mInjector.getDeviceStateCache();
																					boolean v52 = v51.isDeviceProvisioned();
																					if (v52 != 0) {
																						PackageManager v53 = this.mContext.getPackageManager();
																						boolean v54 = v53.hasSystemFeature(""android.hardware.type.automotive"");
																						if (v54 == 0) {
																							boolean v61 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
																							if (v61 == 0) {
																								this.mSpManager.destroyEscrowData(p2);
																								boolean v64 = SyntheticPasswordManager.hasState(""e0"", 0, p2);
																								if (v64 == 0) {
																									boolean v65 = SyntheticPasswordManager.hasState(""p1"", 0, p2);
																									if (v65 == 0) {
																										boolean v63 = 1;
																										if (v63 == 0) {
																											long v67 = SyntheticPasswordManager.generateHandle();
																											Integer v68 = Integer.valueOf(p2);
																											boolean v69 = this.tokenMap.containsKey(v68);
																											if (v69 != 0) {
																												Integer v70 = Integer.valueOf(p2);
																												ArrayMap v71 = new ArrayMap();
																												Object v73 = this.tokenMap.put(v70, v71);
																												SyntheticPasswordManager$TokenData v74 = new SyntheticPasswordManager$TokenData();
																												SyntheticPasswordManager$TokenData.mType = 1;
																												byte[] v76 = SyntheticPasswordManager.secureRandom(16384);
																												boolean v77 = SyntheticPasswordManager.isWeaverAvailable();
																												if (v77 == 0) {
																													byte[] v78 = SyntheticPasswordManager.secureRandom(WeaverConfig.valueSize);
																													SyntheticPasswordManager$TokenData.weaverSecret = v78;
																													byte[] v79 = SyntheticPasswordCrypto.encrypt(v78, this.PERSONALISATION_WEAVER_TOKEN, v76);
																													SyntheticPasswordManager$TokenData.secdiscardableOnDisk = v79;
																													byte[] v80 = SyntheticPasswordManager.transformUnderSecdiscardable(p1, v76);
																													SyntheticPasswordManager$TokenData.aggregatedSecret = v80;
																													SyntheticPasswordManager$TokenData.mCallback = v6;
																													Integer v81 = Integer.valueOf(p2);
																													Object v82 = this.tokenMap.get(v81);
																													Long v83 = Long.valueOf(v67);
																													Object v84 = v82.put(v83, v74);
																													long v66 = v67;
																													if (0 == 0) {
																														Integer v86 = Integer.valueOf(p2);
																														boolean v87 = this.tokenMap.containsKey(v86);
																														if (v87 != 0) {
																															Integer v88 = Integer.valueOf(p2);
																															Object v89 = this.tokenMap.get(v88);
																															Long v90 = Long.valueOf(v66);
																															Object v91 = v89.get(v90);
																															if (v91 != 0) {
																																boolean v92 = SyntheticPasswordManager.loadEscrowData(0, p2);
																																if (v92 != 0) {
																																	boolean v93 = SyntheticPasswordManager.isWeaverAvailable();
																																	if (v93 == 0) {
																																		int v94 = SyntheticPasswordManager.getNextAvailableWeaverSlot();
																																		byte[] v103 = SyntheticPasswordManager.weaverEnroll(v94, 0, SyntheticPasswordManager$TokenData.weaverSecret);
																																		if (v103 != 0) {
																																			SyntheticPasswordManager.saveWeaverSlot(v94, v66, p2);
																																			this.mPasswordSlotManager.markSlotInUse(v94);
																																			SyntheticPasswordManager.saveSecdiscardable(v66, SyntheticPasswordManager$TokenData.secdiscardableOnDisk, p2);
																																			byte v107 = SyntheticPasswordManager.getTokenBasedBlobType(SyntheticPasswordManager$TokenData.mType);
																																			SyntheticPasswordManager.createSyntheticPasswordBlob(v66, v107, 0, SyntheticPasswordManager$TokenData.aggregatedSecret, 0, p2);
																																			Integer v109 = Integer.valueOf(p2);
																																			Object v110 = this.tokenMap.get(v109);
																																			Long v111 = Long.valueOf(v66);
																																			Object v112 = v110.remove(v111);
																																			if (SyntheticPasswordManager$TokenData.mCallback == 0) {
																																				SyntheticPasswordManager$TokenData.mCallback.onEscrowTokenActivated(v66, p2);
																																				boolean v85 = 1;
																																				long v9 = v66;
																																				Binder.restoreCallingIdentity(v8);
																																				return v9;
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","addWeakEscrowToken([BILcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)J","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,6 @5 exception:7,
9 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda0>@8,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda0, <init>(Lcom/android/internal/widget/IWeakEscrowTokenActivatedListener;)V > 9,4 @10 exception:10,
12 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @13 exception:11,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, addEscrowToken([BIILcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback;)J > 1,2,13,3,9 @18 exception:14,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isUserSecure(I)Z > 1,4 @3 exception:7,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 5 to iindex = 2),
8 = phi  7,6,
return 8,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,4 @10 exception:10,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,2 @0 exception:3,
6 = binaryop(lt) 4 , 5,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,7,
return 9,
conditional branch(eq, to iindex=-1) 11,9,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,4 @25 exception:12,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getLong(Ljava/lang/String;JI)J > 1,3,4,2 @5 exception:5,
return 6,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
16 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @31 exception:15,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
18 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @35 exception:17,
1 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = new <Primordial,[B>@32 ,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 1,4,3 @6 exception:5,
return 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 14,16,13,18,4,9 @41 exception:19,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@8,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @10 exception:8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,9,3,5 @16 exception:10,
13 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData; > 11 @20 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 4,14 @26 exception:15,
conditional branch(ne, to iindex=-1) 16,18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, computePasswordToken(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData;)[B > 1,4,13 @71 exception:20,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,5 @75 exception:22,
conditional branch(eq, to iindex=-1) 23,24,
99 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @82 exception:98,
conditional branch(ne, to iindex=-1) 99,18,
101 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, passwordTokenToWeaverKey([B)[B > 1,21 @98 exception:100,
103 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,23,101 @102 exception:102,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 103,
105 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 103 @108 exception:104,
conditional branch(eq, to iindex=-1) 105,18,
106 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 7,
108 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 106 @119 exception:107,
110 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderWeaverSecret([B[B)[B > 1,21,108 @123 exception:109,
111 = phi  93,29,
113 = phi  97,110,
goto (from iindex= 67 to iindex = 148),
conditional branch(eq, to iindex=-1) 6,18,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 6 @279 exception:117,
goto (from iindex= 142 to iindex = 9),
127 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,18,113,111,5 @298 exception:126,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 127,
129 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,127,29,5 @310 exception:128,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 129,
130 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
conditional branch(eq, to iindex=-1) 130,18,
132 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasPasswordMetrics(JI)Z > 1,3,5 @320 exception:131,
conditional branch(ne, to iindex=-1) 132,18,
133 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, savePasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)V > 1,4,133,3,5 @336 exception:134,
return 7,
21 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 20,
27 = phi  9,25,21,
31 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,4 @47 exception:30,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,2 @21 exception:6,
9 = binaryop(lt) 7 , 8,
conditional branch(eq, to iindex=-1) 9,3,
10 = phi  3,4,
return 10,
conditional branch(eq, to iindex=-1) 31,9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, disableEscrowTokenOnNonManagedDevicesIfNeeded(I)V > 1,4 @53 exception:32,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getUserManagerInternal()Lcom/android/server/pm/UserManagerInternal; > 3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerInternal, isUserManaged(I)Z > 5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerInternal, isDeviceManaged()Z > 5 @20 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getDeviceStateCache()Landroid/app/admin/DeviceStateCache; > 12 @34 exception:13,
16 = invokevirtual < Application, Landroid/app/admin/DeviceStateCache, isDeviceProvisioned()Z > 14 @38 exception:15,
conditional branch(ne, to iindex=-1) 16,9,
17 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
19 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 17 @52 exception:18,
22 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 19,20 @58 exception:21,
conditional branch(eq, to iindex=-1) 22,9,
23 = new <Application,Ljava/lang/StringBuilder>@65,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 23 @67 exception:24,
27 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 23,25 @72 exception:26,
29 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 23,2 @75 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 23 @78 exception:30,
33 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 8,31 @82 exception:32,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,2 @85 exception:34,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, destroyEscrowData(I)V > 36,2 @93 exception:37,
return,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
35 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasEscrowData(I)Z > 33,4 @58 exception:34,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,3,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,8,4,2 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 10 to iindex = 2),
17 = phi  15,7,
return 17,
conditional branch(eq, to iindex=-1) 35,9,
goto (from iindex= 34 to iindex = 9),
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
44 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, createTokenBasedSyntheticPassword([BIILcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback;)J > 42,2,3,4,5 @75 exception:43,
7 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, generateHandle()J > @0 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
10 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @6 exception:9,
12 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 8,10 @10 exception:11,
conditional branch(ne, to iindex=-1) 12,13,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
16 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @18 exception:15,
17 = new <Application,Landroid/util/ArrayMap>@22,
invokespecial < Application, Landroid/util/ArrayMap, <init>()V > 17 @24 exception:18,
20 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 14,16,17 @27 exception:19,
25 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData>@30,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, <init>()V > 25 @32 exception:26,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, mType, <Primordial,I> > = 3,
29 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, secureRandom(I)[B > 27 @39 exception:28,
31 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @43 exception:30,
conditional branch(eq, to iindex=-1) 31,13,
32 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > 1,
33 = getfield < Application, Landroid/hardware/weaver/V1_0/WeaverConfig, valueSize, <Primordial,I> > 32,
35 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, secureRandom(I)[B > 33 @53 exception:34,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, weaverSecret, <Primordial,[B> > = 35,
36 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALISATION_WEAVER_TOKEN, <Primordial,[B> >,
38 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, encrypt([B[B[B)[B > 35,36,29 @61 exception:37,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, secdiscardableOnDisk, <Primordial,[B> > = 38,
goto (from iindex= 32 to iindex = 6),
44 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderSecdiscardable([B[B)[B > 1,2,29 @73 exception:43,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, aggregatedSecret, <Primordial,[B> > = 44,
putfield 25.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, mCallback, <Application,Lcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback> > = 5,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
47 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @83 exception:46,
49 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 45,47 @87 exception:48,
50 = checkcast <Application,Landroid/util/ArrayMap>49 <Application,Landroid/util/ArrayMap>,
52 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 7 @93 exception:51,
54 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 50,52,25 @97 exception:53,
return 7,
conditional branch(eq, to iindex=-1) 27,9,
45 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, activateTokenBasedSyntheticPassword(JLcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;I)Z > 45,44,27,4 @83 exception:46,
5 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
7 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @2 exception:6,
9 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 5,7 @6 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
13 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @16 exception:12,
15 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 11,13 @20 exception:14,
16 = checkcast <Application,Landroid/util/ArrayMap>15 <Application,Landroid/util/ArrayMap>,
18 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 2 @26 exception:17,
20 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 16,18 @30 exception:19,
21 = checkcast <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData>20 <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData>,
conditional branch(ne, to iindex=-1) 21,10,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadEscrowData(Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;I)Z > 1,3,4 @39 exception:22,
conditional branch(ne, to iindex=-1) 23,10,
26 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @53 exception:25,
conditional branch(eq, to iindex=-1) 26,10,
28 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getNextAvailableWeaverSlot()I > 1 @59 exception:27,
29 = new <Application,Ljava/lang/StringBuilder>@63,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 29 @65 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,31 @70 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 29,28 @73 exception:34,
38 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 29,36 @78 exception:37,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 29,4 @81 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 29 @84 exception:41,
44 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 24,42 @88 exception:43,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, weaverSecret, <Primordial,[B> > 21,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverEnroll(I[B[B)[B > 1,28,10,45 @94 exception:46,
conditional branch(ne, to iindex=-1) 47,10,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveWeaverSlot(IJI)V > 1,28,2,4 @106 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mPasswordSlotManager, <Application,Lcom/android/server/locksettings/PasswordSlotManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, markSlotInUse(I)V > 49,28 @111 exception:50,
55 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, secdiscardableOnDisk, <Primordial,[B> > 21,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveSecdiscardable(J[BI)V > 1,2,55,4 @116 exception:56,
57 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, mType, <Primordial,I> > 21,
59 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getTokenBasedBlobType(I)B > 1,57 @121 exception:58,
60 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, aggregatedSecret, <Primordial,[B> > 21,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, createSyntheticPasswordBlob(JBLcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;[BJI)V > 1,2,59,3,60,61,4 @133 exception:62,
63 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
65 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @138 exception:64,
67 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 63,65 @142 exception:66,
68 = checkcast <Application,Landroid/util/ArrayMap>67 <Application,Landroid/util/ArrayMap>,
70 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 2 @148 exception:69,
72 = invokevirtual < Application, Landroid/util/ArrayMap, remove(Ljava/lang/Object;)Ljava/lang/Object; > 68,70 @152 exception:71,
73 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$TokenData, mCallback, <Application,Lcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback> > 21,
conditional branch(eq, to iindex=-1) 73,10,
invokeinterface < Application, Lcom/android/internal/widget/LockPatternUtils$EscrowTokenStateChangeCallback, onEscrowTokenActivated(JI)V > 73,2,4 @159 exception:74,
return 76,
monitorexit 6,
return 44,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 12 @22 exception:18,
return 15,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public long addWeakEscrowToken(byte[] p1, int p2, IWeakEscrowTokenActivatedListener p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		Object v5 = Objects.requireNonNull(p3, ""Listener can not be null."");
		LockSettingsService$$ExternalSyntheticLambda0 v6 = new LockSettingsService$$ExternalSyntheticLambda0(p3);
		long v8 = Binder.clearCallingIdentity();
		int v11 = LockSettingsService.getCredentialTypeInternal(p2);
		if (v11 == -1) {
			boolean v10 = 1;
			if (v10 != 0) {
				long v13 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
				if ((v13 < 0) != 0) {
					boolean v12 = 1;
					if (v12 == 0) {
						long v15 = LockSettingsService.getLong(""sp-handle"", 0, p2);
						long v14 = v15;
						if (this.mGateKeeperService == 0) {
							IBinder v17 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
							if (v17 == 0) {
								LockSettingsService$GateKeeperDiedRecipient v18 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
								v17.linkToDeath(v18, 0);
								IGateKeeperService v21 = IGateKeeperService$Stub.asInterface(v17);
								this.mGateKeeperService = v21;
								IGateKeeperService v16 = v21;
								LockscreenCredential v23 = new LockscreenCredential(-1,v24);
								[B v24 = new [B(0);
								LockscreenCredential v22 = v23;
								SyntheticPasswordManager$AuthenticationResult v27 = new SyntheticPasswordManager$AuthenticationResult();
								byte[] v29 = SyntheticPasswordManager.loadState(""pwd"", v14, p2);
								SyntheticPasswordManager$PasswordData v30 = SyntheticPasswordManager$PasswordData.fromBytes(v29);
								boolean v31 = v22.checkAgainstStoredType(SyntheticPasswordManager$PasswordData.credentialType);
								if (v31 != 0) {
									byte[] v32 = SyntheticPasswordManager.computePasswordToken(v22, v30);
									int v33 = SyntheticPasswordManager.loadWeaverSlot(v14, p2);
									if (v33 == -1) {
										boolean v34 = SyntheticPasswordManager.isWeaverAvailable();
										if (v34 != 0) {
											byte[] v35 = SyntheticPasswordManager.passwordTokenToWeaverKey(v32);
											VerifyCredentialResponse v36 = SyntheticPasswordManager.weaverVerify(v33, v35);
											SyntheticPasswordManager$AuthenticationResult.gkResponse = v36;
											int v37 = v36.getResponseCode();
											if (v37 == 0) {
												byte[] v38 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getGatekeeperHAT();
												byte[] v39 = SyntheticPasswordManager.transformUnderWeaverSecret(v32, v38);
												if (0 == 0) {
													0.onCredentialVerified();
													SyntheticPasswordManager$AuthenticationToken v41 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(v14, 0, transformUnderSecdiscardable(), sidFromPasswordHandle(), p2);
													SyntheticPasswordManager$AuthenticationResult.authToken = v41;
													VerifyCredentialResponse v42 = SyntheticPasswordManager.verifyChallenge(v16, v41, 0, p2);
													SyntheticPasswordManager$AuthenticationResult.gkResponse = v42;
													if (SyntheticPasswordManager$AuthenticationResult.authToken == 0) {
														boolean v43 = SyntheticPasswordManager.hasPasswordMetrics(v14, p2);
														if (v43 != 0) {
															SyntheticPasswordManager.savePasswordMetrics(v22, SyntheticPasswordManager$AuthenticationResult.authToken, v14, p2);
															SyntheticPasswordManager$AuthenticationResult v26 = v27;
															if (p2 != -9999) {
																long v46 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
																if ((v46 < 0) == 0) {
																	boolean v45 = 0;
																	if (v45 == 0) {
																		UserManagerInternal v48 = this.mInjector.getUserManagerInternal();
																		boolean v49 = v48.isUserManaged(p2);
																		if (v49 == 0) {
																			boolean v50 = v48.isDeviceManaged();
																			if (v50 == 0) {
																				DeviceStateCache v51 = this.mInjector.getDeviceStateCache();
																				boolean v52 = v51.isDeviceProvisioned();
																				if (v52 != 0) {
																					PackageManager v53 = this.mContext.getPackageManager();
																					boolean v54 = v53.hasSystemFeature(""android.hardware.type.automotive"");
																					if (v54 == 0) {
																						boolean v61 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
																						if (v61 == 0) {
																							this.mSpManager.destroyEscrowData(p2);
																							boolean v64 = SyntheticPasswordManager.hasState(""e0"", 0, p2);
																							if (v64 == 0) {
																								boolean v65 = SyntheticPasswordManager.hasState(""p1"", 0, p2);
																								if (v65 == 0) {
																									boolean v63 = 1;
																									if (v63 == 0) {
																										long v67 = SyntheticPasswordManager.generateHandle();
																										Integer v68 = Integer.valueOf(p2);
																										boolean v69 = this.tokenMap.containsKey(v68);
																										if (v69 != 0) {
																											Integer v70 = Integer.valueOf(p2);
																											ArrayMap v71 = new ArrayMap();
																											Object v73 = this.tokenMap.put(v70, v71);
																											SyntheticPasswordManager$TokenData v74 = new SyntheticPasswordManager$TokenData();
																											SyntheticPasswordManager$TokenData.mType = 1;
																											byte[] v76 = SyntheticPasswordManager.secureRandom(16384);
																											boolean v77 = SyntheticPasswordManager.isWeaverAvailable();
																											if (v77 == 0) {
																												byte[] v78 = SyntheticPasswordManager.secureRandom(WeaverConfig.valueSize);
																												SyntheticPasswordManager$TokenData.weaverSecret = v78;
																												byte[] v79 = SyntheticPasswordCrypto.encrypt(v78, this.PERSONALISATION_WEAVER_TOKEN, v76);
																												SyntheticPasswordManager$TokenData.secdiscardableOnDisk = v79;
																												byte[] v80 = SyntheticPasswordManager.transformUnderSecdiscardable(p1, v76);
																												SyntheticPasswordManager$TokenData.aggregatedSecret = v80;
																												SyntheticPasswordManager$TokenData.mCallback = v6;
																												Integer v81 = Integer.valueOf(p2);
																												Object v82 = this.tokenMap.get(v81);
																												Long v83 = Long.valueOf(v67);
																												Object v84 = v82.put(v83, v74);
																												long v66 = v67;
																												if (0 == 0) {
																													Integer v86 = Integer.valueOf(p2);
																													boolean v87 = this.tokenMap.containsKey(v86);
																													if (v87 != 0) {
																														Integer v88 = Integer.valueOf(p2);
																														Object v89 = this.tokenMap.get(v88);
																														Long v90 = Long.valueOf(v66);
																														Object v91 = v89.get(v90);
																														if (v91 != 0) {
																															boolean v92 = SyntheticPasswordManager.loadEscrowData(0, p2);
																															if (v92 != 0) {
																																boolean v93 = SyntheticPasswordManager.isWeaverAvailable();
																																if (v93 == 0) {
																																	int v94 = SyntheticPasswordManager.getNextAvailableWeaverSlot();
																																	byte[] v103 = SyntheticPasswordManager.weaverEnroll(v94, 0, SyntheticPasswordManager$TokenData.weaverSecret);
																																	if (v103 != 0) {
																																		SyntheticPasswordManager.saveWeaverSlot(v94, v66, p2);
																																		this.mPasswordSlotManager.markSlotInUse(v94);
																																		SyntheticPasswordManager.saveSecdiscardable(v66, SyntheticPasswordManager$TokenData.secdiscardableOnDisk, p2);
																																		byte v107 = SyntheticPasswordManager.getTokenBasedBlobType(SyntheticPasswordManager$TokenData.mType);
																																		SyntheticPasswordManager.createSyntheticPasswordBlob(v66, v107, 0, SyntheticPasswordManager$TokenData.aggregatedSecret, 0, p2);
																																		Integer v109 = Integer.valueOf(p2);
																																		Object v110 = this.tokenMap.get(v109);
																																		Long v111 = Long.valueOf(v66);
																																		Object v112 = v110.remove(v111);
																																		if (SyntheticPasswordManager$TokenData.mCallback == 0) {
																																			SyntheticPasswordManager$TokenData.mCallback.onEscrowTokenActivated(v66, p2);
																																			boolean v85 = 1;
																																			long v9 = v66;
																																			Binder.restoreCallingIdentity(v8);
																																			return v9;
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","hasPendingEscrowToken(I)Z","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getPendingTokensForUser(I)Ljava/util/Set; > 5,2 @8 exception:6,
9 = invokeinterface < Application, Ljava/util/Set, isEmpty()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,10,
monitorexit 4,
return 12,","depth : 0
-----
","public boolean hasPendingEscrowToken(int p1){
	Set v2 = this.mSpManager.getPendingTokensForUser(p1);
	boolean v3 = v2.isEmpty();
	if (v3 != 0) {
		return 1;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","hasPendingEscrowToken(I)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getPendingTokensForUser(I)Ljava/util/Set; > 5,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
5 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @2 exception:4,
7 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 3,5 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
20 = invokestatic < Application, Ljava/util/Collections, emptySet()Ljava/util/Set; > @12 exception:19,
return 20,
9 = invokeinterface < Application, Ljava/util/Set, isEmpty()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,10,
monitorexit 4,
return 12,","depth : 0
-----
depth : 1
-----
","public boolean hasPendingEscrowToken(int p1){
	Integer v3 = Integer.valueOf(p1);
	boolean v4 = this.tokenMap.containsKey(v3);
	if (v4 != 0) {
		Set v5 = Collections.emptySet();
		Set v2 = v5;
		boolean v6 = v2.isEmpty();
		if (v6 != 0) {
			return 1;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","hasPendingEscrowToken(I)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getPendingTokensForUser(I)Ljava/util/Set; > 5,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
5 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @2 exception:4,
7 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 3,5 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = new <Application,Landroid/util/ArraySet>@17,
10 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
12 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @21 exception:11,
14 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 10,12 @25 exception:13,
15 = checkcast <Application,Landroid/util/ArrayMap>14 <Application,Landroid/util/ArrayMap>,
17 = invokevirtual < Application, Landroid/util/ArrayMap, keySet()Ljava/util/Set; > 15 @31 exception:16,
invokespecial < Application, Landroid/util/ArraySet, <init>(Ljava/util/Collection;)V > 9,17 @35 exception:18,
return 9,
9 = invokeinterface < Application, Ljava/util/Set, isEmpty()Z > 7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,10,
monitorexit 4,
return 12,","depth : 0
-----
depth : 1
-----
","public boolean hasPendingEscrowToken(int p1){
	Integer v3 = Integer.valueOf(p1);
	boolean v4 = this.tokenMap.containsKey(v3);
	if (v4 != 0) {
		ArraySet v5 = new ArraySet(v8);
		Integer v6 = Integer.valueOf(p1);
		Object v7 = this.tokenMap.get(v6);
		Set v8 = v7.keySet();
		Set v2 = v5;
		boolean v10 = v2.isEmpty();
		if (v10 != 0) {
			return 1;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","isWeakEscrowTokenValid(J[BI)Z","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:5,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasEscrowData(I)Z > 9,4 @12 exception:10,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @33 exception:14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapWeakTokenBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;J[BI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 13,15,2,3,4 @40 exception:16,
18 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 17,
conditional branch(ne, to iindex=-1) 18,12,
monitorexit 8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:20,
return 19,","depth : 0
-----
","public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	p0.checkManageWeakEscrowTokenMethodUsage();
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = this.mSpManager.hasEscrowData(p3);
	if (v3 != 0) {
		IGateKeeperService v4 = p0.getGateKeeperService();
		SyntheticPasswordManager$AuthenticationResult v5 = this.mSpManager.unwrapWeakTokenBasedSyntheticPassword(v4, p1, p2, p3);
		if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
			Binder.restoreCallingIdentity(v2);
			return 1;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","isWeakEscrowTokenValid(J[BI)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasEscrowData(I)Z > 9,4 @12 exception:10,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,3,4,2 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,8,4,2 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 10 to iindex = 2),
17 = phi  15,7,
return 17,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @33 exception:14,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
17 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapWeakTokenBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;J[BI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 13,15,2,3,4 @40 exception:16,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapTokenBasedSyntheticPasswordInternal(Landroid/service/gatekeeper/IGateKeeperService;JB[BI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 1,2,3,6,4,5 @6 exception:7,
return 8,
18 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 17,
conditional branch(ne, to iindex=-1) 18,12,
monitorexit 8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:20,
return 19,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		boolean v7 = SyntheticPasswordManager.hasState(""e0"", 0, p3);
		if (v7 == 0) {
			boolean v8 = SyntheticPasswordManager.hasState(""p1"", 0, p3);
			if (v8 == 0) {
				boolean v6 = 1;
				if (v6 != 0) {
					if (this.mGateKeeperService == 0) {
						IBinder v10 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
						if (v10 == 0) {
							LockSettingsService$GateKeeperDiedRecipient v11 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
							v10.linkToDeath(v11, 0);
							IGateKeeperService v14 = IGateKeeperService$Stub.asInterface(v10);
							this.mGateKeeperService = v14;
							IGateKeeperService v9 = v14;
							SyntheticPasswordManager$AuthenticationResult v16 = SyntheticPasswordManager.unwrapTokenBasedSyntheticPasswordInternal(v9, p1, 2, p2, p3);
							SyntheticPasswordManager$AuthenticationResult v15 = v16;
							if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
								Binder.restoreCallingIdentity(v5);
								return 1;
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","isWeakEscrowTokenValid(J[BI)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasEscrowData(I)Z > 9,4 @12 exception:10,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,3,4,2 @4 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,2,3,4 @0 exception:5,
8 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, isEmpty([B)Z > 6 @4 exception:7,
10 = binaryop(xor) 8 , 9,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,8,4,2 @13 exception:9,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,2,3,4 @0 exception:5,
8 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, isEmpty([B)Z > 6 @4 exception:7,
10 = binaryop(xor) 8 , 9,
return 10,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 10 to iindex = 2),
17 = phi  15,7,
return 17,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @33 exception:14,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
7 = new <Application,Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy>@20,
invokespecial < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy, <init>(Landroid/os/IBinder;)V > 7,1 @22 exception:8,
return 7,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
17 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapWeakTokenBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;J[BI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 13,15,2,3,4 @40 exception:16,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapTokenBasedSyntheticPasswordInternal(Landroid/service/gatekeeper/IGateKeeperService;JB[BI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 1,2,3,6,4,5 @6 exception:7,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@4,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @6 exception:8,
10 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSecdiscardable(JI)[B > 1,3,6 @9 exception:9,
12 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,6 @13 exception:11,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @20 exception:14,
conditional branch(ne, to iindex=-1) 15,17,
19 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,12,17 @39 exception:18,
21 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 19 @43 exception:20,
conditional branch(ne, to iindex=-1) 21,17,
23 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 19 @49 exception:22,
conditional branch(ne, to iindex=-1) 23,17,
25 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 19 @56 exception:24,
26 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALISATION_WEAVER_TOKEN, <Primordial,[B> >,
28 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, decrypt([B[B[B)[B > 25,26,10 @62 exception:27,
goto (from iindex= 35 to iindex = 11),
29 = phi  10,28,
35 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderSecdiscardable([B[B)[B > 1,5,29 @79 exception:34,
38 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,4,35,36,6 @90 exception:37,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 38,
conditional branch(eq, to iindex=-1) 38,17,
41 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,38,36,6 @104 exception:40,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 41,
conditional branch(ne, to iindex=-1) 41,17,
42 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, OK, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 42,
goto (from iindex= 63 to iindex = 5),
return 7,
return 8,
18 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 17,
conditional branch(ne, to iindex=-1) 18,12,
monitorexit 8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:20,
return 19,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
","public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		byte[] v8 = SyntheticPasswordManager.loadState(""e0"", 0, p3);
		boolean v9 = ArrayUtils.isEmpty(v8);
		boolean v7 = (v9 ^ 1);
		if (v7 == 0) {
			byte[] v11 = SyntheticPasswordManager.loadState(""p1"", 0, p3);
			boolean v12 = ArrayUtils.isEmpty(v11);
			boolean v10 = (v12 ^ 1);
			if (v10 == 0) {
				boolean v6 = 1;
				if (v6 != 0) {
					if (this.mGateKeeperService == 0) {
						IBinder v14 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
						if (v14 == 0) {
							LockSettingsService$GateKeeperDiedRecipient v15 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
							v14.linkToDeath(v15, 0);
							if (v14 != 0) {
								IInterface v19 = v14.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
								if (v19 == 0) {
									if (v19 instanceof IGateKeeperService == 0) {
										IGateKeeperService$Stub$Proxy v20 = new IGateKeeperService$Stub$Proxy(v14);
										IGateKeeperService v18 = v20;
										this.mGateKeeperService = v18;
										IGateKeeperService v13 = v18;
										SyntheticPasswordManager$AuthenticationResult v24 = new SyntheticPasswordManager$AuthenticationResult();
										byte[] v26 = SyntheticPasswordManager.loadSecdiscardable(p1, p3);
										int v27 = SyntheticPasswordManager.loadWeaverSlot(p1, p3);
										if (v27 == -1) {
											boolean v28 = SyntheticPasswordManager.isWeaverAvailable();
											if (v28 != 0) {
												VerifyCredentialResponse v29 = SyntheticPasswordManager.weaverVerify(v27, 0);
												int v30 = v29.getResponseCode();
												if (v30 != 0) {
													byte[] v31 = v29.getGatekeeperHAT();
													if (v31 != 0) {
														byte[] v32 = v29.getGatekeeperHAT();
														byte[] v33 = SyntheticPasswordCrypto.decrypt(v32, this.PERSONALISATION_WEAVER_TOKEN, v26);
														byte[] v34 = SyntheticPasswordManager.transformUnderSecdiscardable(p2, v26);
														SyntheticPasswordManager$AuthenticationToken v35 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p1, 2, v34, 0, p3);
														SyntheticPasswordManager$AuthenticationResult.authToken = v35;
														if (v35 == 0) {
															VerifyCredentialResponse v36 = SyntheticPasswordManager.verifyChallenge(v13, v35, 0, p3);
															SyntheticPasswordManager$AuthenticationResult.gkResponse = v36;
															if (v36 != 0) {
																SyntheticPasswordManager$AuthenticationResult.gkResponse = VerifyCredentialResponse.OK;
																SyntheticPasswordManager$AuthenticationResult v23 = v24;
																SyntheticPasswordManager$AuthenticationResult v22 = v23;
																if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
																	Binder.restoreCallingIdentity(v5);
																	return 1;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","isWeakEscrowTokenValid(J[BI)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasEscrowData(I)Z > 9,4 @12 exception:10,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,3,4,2 @4 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,2,3,4 @0 exception:5,
8 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, isEmpty([B)Z > 6 @4 exception:7,
10 = binaryop(xor) 8 , 9,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,8,4,2 @13 exception:9,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,2,3,4 @0 exception:5,
8 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, isEmpty([B)Z > 6 @4 exception:7,
10 = binaryop(xor) 8 , 9,
return 10,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 10 to iindex = 2),
17 = phi  15,7,
return 17,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @33 exception:14,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
9 = checkcast <Application,Landroid/service/gatekeeper/IGateKeeperService>5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
return 9,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
17 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapWeakTokenBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;J[BI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 13,15,2,3,4 @40 exception:16,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapTokenBasedSyntheticPasswordInternal(Landroid/service/gatekeeper/IGateKeeperService;JB[BI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 1,2,3,6,4,5 @6 exception:7,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@4,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @6 exception:8,
10 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSecdiscardable(JI)[B > 1,3,6 @9 exception:9,
12 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,6 @13 exception:11,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @20 exception:14,
conditional branch(ne, to iindex=-1) 15,17,
19 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,12,17 @39 exception:18,
21 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 19 @43 exception:20,
conditional branch(ne, to iindex=-1) 21,17,
23 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 19 @49 exception:22,
conditional branch(ne, to iindex=-1) 23,17,
25 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 19 @56 exception:24,
26 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALISATION_WEAVER_TOKEN, <Primordial,[B> >,
28 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, decrypt([B[B[B)[B > 25,26,10 @62 exception:27,
goto (from iindex= 35 to iindex = 11),
29 = phi  10,28,
35 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderSecdiscardable([B[B)[B > 1,5,29 @79 exception:34,
38 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,4,35,36,6 @90 exception:37,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 38,
conditional branch(eq, to iindex=-1) 38,17,
41 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,38,36,6 @104 exception:40,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 41,
conditional branch(ne, to iindex=-1) 41,17,
42 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, OK, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 42,
goto (from iindex= 63 to iindex = 5),
return 7,
return 8,
18 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 17,
conditional branch(ne, to iindex=-1) 18,12,
monitorexit 8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:20,
return 19,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
","public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		byte[] v8 = SyntheticPasswordManager.loadState(""e0"", 0, p3);
		boolean v9 = ArrayUtils.isEmpty(v8);
		boolean v7 = (v9 ^ 1);
		if (v7 == 0) {
			byte[] v11 = SyntheticPasswordManager.loadState(""p1"", 0, p3);
			boolean v12 = ArrayUtils.isEmpty(v11);
			boolean v10 = (v12 ^ 1);
			if (v10 == 0) {
				boolean v6 = 1;
				if (v6 != 0) {
					if (this.mGateKeeperService == 0) {
						IBinder v14 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
						if (v14 == 0) {
							LockSettingsService$GateKeeperDiedRecipient v15 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
							v14.linkToDeath(v15, 0);
							if (v14 != 0) {
								IInterface v19 = v14.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
								if (v19 == 0) {
									if (v19 instanceof IGateKeeperService == 0) {
										IGateKeeperService v18 = v19;
										this.mGateKeeperService = v18;
										IGateKeeperService v13 = v18;
										SyntheticPasswordManager$AuthenticationResult v22 = new SyntheticPasswordManager$AuthenticationResult();
										byte[] v24 = SyntheticPasswordManager.loadSecdiscardable(p1, p3);
										int v25 = SyntheticPasswordManager.loadWeaverSlot(p1, p3);
										if (v25 == -1) {
											boolean v26 = SyntheticPasswordManager.isWeaverAvailable();
											if (v26 != 0) {
												VerifyCredentialResponse v27 = SyntheticPasswordManager.weaverVerify(v25, 0);
												int v28 = v27.getResponseCode();
												if (v28 != 0) {
													byte[] v29 = v27.getGatekeeperHAT();
													if (v29 != 0) {
														byte[] v30 = v27.getGatekeeperHAT();
														byte[] v31 = SyntheticPasswordCrypto.decrypt(v30, this.PERSONALISATION_WEAVER_TOKEN, v24);
														byte[] v32 = SyntheticPasswordManager.transformUnderSecdiscardable(p2, v24);
														SyntheticPasswordManager$AuthenticationToken v33 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p1, 2, v32, 0, p3);
														SyntheticPasswordManager$AuthenticationResult.authToken = v33;
														if (v33 == 0) {
															VerifyCredentialResponse v34 = SyntheticPasswordManager.verifyChallenge(v13, v33, 0, p3);
															SyntheticPasswordManager$AuthenticationResult.gkResponse = v34;
															if (v34 != 0) {
																SyntheticPasswordManager$AuthenticationResult.gkResponse = VerifyCredentialResponse.OK;
																SyntheticPasswordManager$AuthenticationResult v21 = v22;
																SyntheticPasswordManager$AuthenticationResult v20 = v21;
																if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
																	Binder.restoreCallingIdentity(v5);
																	return 1;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","isWeakEscrowTokenValid(J[BI)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:5,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
7 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasEscrowData(I)Z > 9,4 @12 exception:10,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,3,4,2 @4 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,2,3,4 @0 exception:5,
8 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, isEmpty([B)Z > 6 @4 exception:7,
10 = binaryop(xor) 8 , 9,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
10 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,8,4,2 @13 exception:9,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,2,3,4 @0 exception:5,
8 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, isEmpty([B)Z > 6 @4 exception:7,
10 = binaryop(xor) 8 , 9,
return 10,
conditional branch(eq, to iindex=-1) 10,7,
goto (from iindex= 10 to iindex = 2),
17 = phi  15,7,
return 17,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @33 exception:14,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
7 = new <Application,Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy>@20,
invokespecial < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy, <init>(Landroid/os/IBinder;)V > 7,1 @22 exception:8,
return 7,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
17 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapWeakTokenBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;J[BI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 13,15,2,3,4 @40 exception:16,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapTokenBasedSyntheticPasswordInternal(Landroid/service/gatekeeper/IGateKeeperService;JB[BI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 1,2,3,6,4,5 @6 exception:7,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@4,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @6 exception:8,
10 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSecdiscardable(JI)[B > 1,3,6 @9 exception:9,
12 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,6 @13 exception:11,
conditional branch(eq, to iindex=-1) 12,13,
15 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @20 exception:14,
conditional branch(ne, to iindex=-1) 15,17,
19 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,12,17 @39 exception:18,
21 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 19 @43 exception:20,
conditional branch(ne, to iindex=-1) 21,17,
23 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 19 @49 exception:22,
conditional branch(ne, to iindex=-1) 23,17,
25 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 19 @56 exception:24,
26 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALISATION_WEAVER_TOKEN, <Primordial,[B> >,
28 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, decrypt([B[B[B)[B > 25,26,10 @62 exception:27,
goto (from iindex= 35 to iindex = 11),
29 = phi  10,28,
35 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderSecdiscardable([B[B)[B > 1,5,29 @79 exception:34,
38 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,4,35,36,6 @90 exception:37,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 38,
conditional branch(eq, to iindex=-1) 38,17,
39 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 39,
return 7,
return 8,
18 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 17,
conditional branch(ne, to iindex=-1) 18,12,
monitorexit 8,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 7 @62 exception:20,
return 19,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
","public boolean isWeakEscrowTokenValid(long p1, byte[] p2, int p3){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		byte[] v8 = SyntheticPasswordManager.loadState(""e0"", 0, p3);
		boolean v9 = ArrayUtils.isEmpty(v8);
		boolean v7 = (v9 ^ 1);
		if (v7 == 0) {
			byte[] v11 = SyntheticPasswordManager.loadState(""p1"", 0, p3);
			boolean v12 = ArrayUtils.isEmpty(v11);
			boolean v10 = (v12 ^ 1);
			if (v10 == 0) {
				boolean v6 = 1;
				if (v6 != 0) {
					if (this.mGateKeeperService == 0) {
						IBinder v14 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
						if (v14 == 0) {
							LockSettingsService$GateKeeperDiedRecipient v15 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
							v14.linkToDeath(v15, 0);
							if (v14 != 0) {
								IInterface v19 = v14.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
								if (v19 == 0) {
									if (v19 instanceof IGateKeeperService == 0) {
										IGateKeeperService$Stub$Proxy v20 = new IGateKeeperService$Stub$Proxy(v14);
										IGateKeeperService v18 = v20;
										this.mGateKeeperService = v18;
										IGateKeeperService v13 = v18;
										SyntheticPasswordManager$AuthenticationResult v24 = new SyntheticPasswordManager$AuthenticationResult();
										byte[] v26 = SyntheticPasswordManager.loadSecdiscardable(p1, p3);
										int v27 = SyntheticPasswordManager.loadWeaverSlot(p1, p3);
										if (v27 == -1) {
											boolean v28 = SyntheticPasswordManager.isWeaverAvailable();
											if (v28 != 0) {
												VerifyCredentialResponse v29 = SyntheticPasswordManager.weaverVerify(v27, 0);
												int v30 = v29.getResponseCode();
												if (v30 != 0) {
													byte[] v31 = v29.getGatekeeperHAT();
													if (v31 != 0) {
														byte[] v32 = v29.getGatekeeperHAT();
														byte[] v33 = SyntheticPasswordCrypto.decrypt(v32, this.PERSONALISATION_WEAVER_TOKEN, v26);
														byte[] v34 = SyntheticPasswordManager.transformUnderSecdiscardable(p2, v26);
														SyntheticPasswordManager$AuthenticationToken v35 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(p1, 2, v34, 0, p3);
														SyntheticPasswordManager$AuthenticationResult.authToken = v35;
														if (v35 == 0) {
															SyntheticPasswordManager$AuthenticationResult.gkResponse = VerifyCredentialResponse.ERROR;
															SyntheticPasswordManager$AuthenticationResult v23 = v24;
															SyntheticPasswordManager$AuthenticationResult v22 = v23;
															if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
																Binder.restoreCallingIdentity(v5);
																return 1;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","getStrongAuthForUser(I)I","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuthTracker, <Application,Lcom/android/server/locksettings/LockSettingsService$SynchronizedStrongAuthTracker> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$SynchronizedStrongAuthTracker, getStrongAuthForUser(I)I > 4,2 @5 exception:5,
return 6,","depth : 0
-----
","public int getStrongAuthForUser(int p1){
	int v2 = this.mStrongAuthTracker.getStrongAuthForUser(p1);
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getStrongAuthForUser(I)I","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuthTracker, <Application,Lcom/android/server/locksettings/LockSettingsService$SynchronizedStrongAuthTracker> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$SynchronizedStrongAuthTracker, getStrongAuthForUser(I)I > 4,2 @5 exception:5,
monitorenter 1,
4 = invokespecial < Application, Lcom/android/internal/widget/LockPatternUtils$StrongAuthTracker, getStrongAuthForUser(I)I > 1,2 @1 exception:3,
monitorexit 1,
return 4,
return 6,","depth : 0
-----
depth : 1
-----
","public int getStrongAuthForUser(int p1){
	int v3 = LockSettingsService$SynchronizedStrongAuthTracker.getStrongAuthForUser(p1);
	int v2 = v3;
	return v2;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getStrongAuthForUser(I)I","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuthTracker, <Application,Lcom/android/server/locksettings/LockSettingsService$SynchronizedStrongAuthTracker> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$SynchronizedStrongAuthTracker, getStrongAuthForUser(I)I > 4,2 @5 exception:5,
monitorenter 1,
4 = invokespecial < Application, Lcom/android/internal/widget/LockPatternUtils$StrongAuthTracker, getStrongAuthForUser(I)I > 1,2 @1 exception:3,
3 = getfield < Application, Lcom/android/internal/widget/LockPatternUtils$StrongAuthTracker, mStrongAuthRequiredForUser, <Application,Landroid/util/SparseIntArray> > 1,
4 = getfield < Application, Lcom/android/internal/widget/LockPatternUtils$StrongAuthTracker, mDefaultStrongAuthFlags, <Primordial,I> > 1,
6 = invokevirtual < Application, Landroid/util/SparseIntArray, get(II)I > 3,2,4 @4 exception:5,
return 6,
monitorexit 1,
return 4,
return 6,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public int getStrongAuthForUser(int p1){
	int v4 = this.mStrongAuthRequiredForUser.get(p1, this.mDefaultStrongAuthFlags);
	int v3 = v4;
	int v2 = v3;
	return v2;
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","hasSecureLockScreen()Z","0","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
return 2,","depth : 0
-----
","public boolean hasSecureLockScreen(){
	return this.mHasSecureLockScreen;
}
","NONE"

"Lcom/android/server/locksettings/LockSettingsService","initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V","0","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V > 5,2,3,4 @2 exception:6,
return,","depth : 0
-----
","public void initRecoveryServiceWithSigFile(String p1, byte[] p2, byte[] p3){
	this.mRecoverableKeyStoreManager.initRecoveryServiceWithSigFile(p1, p2, p3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V","1","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V > 5,2,3,4 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @2 exception:6,
7 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
9 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 7,2 @7 exception:8,
12 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 3,10 @14 exception:11,
15 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,13 @20 exception:14,
17 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, parse([B)Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml; > 4 @23 exception:16,
37 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
39 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 37,9 @29 exception:38,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, verifyFileSignature(Ljava/security/cert/X509Certificate;[B)V > 17,39,3 @33 exception:40,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, initRecoveryService(Ljava/lang/String;[B)V > 1,9,3 @36 exception:67,
return,
return,","depth : 0
-----
depth : 1
-----
","public void initRecoveryServiceWithSigFile(String p1, byte[] p2, byte[] p3){
	String v3 = this.mTestCertHelper.getDefaultCertificateAliasIfEmpty(p1);
	Object v4 = Objects.requireNonNull(p2, ""recoveryServiceCertFile is null"");
	Object v5 = Objects.requireNonNull(p3, ""recoveryServiceSigFile is null"");
	SigXml v6 = SigXml.parse(p3);
	X509Certificate v7 = this.mTestCertHelper.getRootCertificate(v3);
	v6.verifyFileSignature(v7, p2);
	RecoverableKeyStoreManager.initRecoveryService(v3, p2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V","2","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V > 5,2,3,4 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @2 exception:6,
7 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
9 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 7,2 @7 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Ljava/lang/String, isEmpty()Z > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
13 = phi  2,11,
return 13,
12 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 3,10 @14 exception:11,
15 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,13 @20 exception:14,
17 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, parse([B)Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml; > 4 @23 exception:16,
3 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertUtils, getXmlRootNode([B)Lorg/w3c/dom/Element; > 1 @0 exception:2,
4 = new <Application,Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml>@4,
6 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, parseIntermediateCerts(Lorg/w3c/dom/Element;)Ljava/util/List; > 3 @6 exception:5,
8 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, parseSignerCert(Lorg/w3c/dom/Element;)Ljava/security/cert/X509Certificate; > 3 @10 exception:7,
10 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, parseFileSignature(Lorg/w3c/dom/Element;)[B > 3 @14 exception:9,
invokespecial < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, <init>(Ljava/util/List;Ljava/security/cert/X509Certificate;[B)V > 4,6,8,10 @18 exception:11,
return 4,
37 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
39 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 37,9 @29 exception:38,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, isTestOnlyCertificateAlias(Ljava/lang/String;)Z > 1,4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokestatic < Application, Landroid/security/keystore/recovery/TrustedRootCertificates, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 4 @15 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
return 9,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, verifyFileSignature(Ljava/security/cert/X509Certificate;[B)V > 17,39,3 @33 exception:40,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, verifyFileSignature(Ljava/security/cert/X509Certificate;[BLjava/util/Date;)V > 1,2,3,4 @1 exception:5,
return,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, initRecoveryService(Ljava/lang/String;[B)V > 1,9,3 @36 exception:67,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @2 exception:4,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
9 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 9,2 @17 exception:10,
12 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
14 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, isValidRootCertificateAlias(Ljava/lang/String;)Z > 12,11 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,16,
20 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
22 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getActiveRootOfTrust(II)Ljava/lang/String; > 20,6,8 @33 exception:21,
conditional branch(ne, to iindex=-1) 22,16,
47 = new <Application,Ljava/lang/StringBuilder>@41,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 47 @43 exception:48,
51 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 47,49 @48 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 47,8 @51 exception:52,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 47,54 @56 exception:55,
58 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 47,11 @59 exception:57,
60 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 47 @62 exception:59,
62 = invokestatic < Application, Landroid/util/Log, d(Ljava/lang/String;Ljava/lang/String;)I > 23,60 @66 exception:61,
goto (from iindex= 31 to iindex = 43),
67 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
69 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setActiveRootOfTrust(IILjava/lang/String;)J > 67,6,8,11 @114 exception:68,
71 = binaryop(lt) 69 , 70,
conditional branch(lt, to iindex=-1) 71,16,
78 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertXml, parse([B)Lcom/android/server/locksettings/recoverablekeystore/certificate/CertXml; > 3 @128 exception:77,
98 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertXml, getSerial()J > 78 @132 exception:97,
99 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
101 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getRecoveryServiceCertSerial(IILjava/lang/String;)Ljava/lang/Long; > 99,6,8,11 @138 exception:100,
conditional branch(eq, to iindex=-1) 101,16,
103 = invokevirtual < Application, Ljava/lang/Long, longValue()J > 101 @144 exception:102,
104 = binaryop(lt) 103 , 98,
conditional branch(lt, to iindex=-1) 104,16,
111 = new <Application,Ljava/lang/StringBuilder>@187,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 111 @189 exception:112,
115 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 111,113 @194 exception:114,
117 = invokevirtual < Application, Ljava/lang/StringBuilder, append(J)Ljava/lang/StringBuilder; > 111,98 @197 exception:116,
119 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 111 @200 exception:118,
121 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 23,119 @204 exception:120,
122 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
124 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 122,11 @209 exception:123,
127 = invokestatic < Application, Landroid/util/Log, d(Ljava/lang/String;Ljava/lang/String;)I > 23,125 @215 exception:126,
129 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertXml, getRandomEndpointCert(Ljava/security/cert/X509Certificate;)Ljava/security/cert/CertPath; > 78,124 @218 exception:128,
140 = invokestatic < Application, Landroid/util/Log, d(Ljava/lang/String;Ljava/lang/String;)I > 23,138 @224 exception:139,
141 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
143 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setRecoveryServiceCertPath(IILjava/lang/String;Ljava/security/cert/CertPath;)J > 141,6,8,11,129 @229 exception:142,
144 = binaryop(lt) 143 , 70,
conditional branch(le, to iindex=-1) 144,16,
conditional branch(lt, to iindex=-1) 144,16,
return,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void initRecoveryServiceWithSigFile(String p1, byte[] p2, byte[] p3){
	if (p1 == 0) {
		boolean v4 = p1.isEmpty();
		if (v4 == 0) {
			String v3 = p1;
			Object v5 = Objects.requireNonNull(p2, ""recoveryServiceCertFile is null"");
			Object v6 = Objects.requireNonNull(p3, ""recoveryServiceSigFile is null"");
			Element v8 = CertUtils.getXmlRootNode(p3);
			SigXml v9 = new SigXml(v10,v11,v12);
			List v10 = SigXml.parseIntermediateCerts(v8);
			X509Certificate v11 = SigXml.parseSignerCert(v8);
			byte[] v12 = SigXml.parseFileSignature(v8);
			SigXml v7 = v9;
			String v15 = TestOnlyInsecureCertificateHelper.getDefaultCertificateAliasIfEmpty(v3);
			boolean v16 = TestOnlyInsecureCertificateHelper.isTestOnlyCertificateAlias(v15);
			if (v16 == 0) {
				X509Certificate v17 = TrustedRootCertificates.getRootCertificate(v15);
				if (v17 == 0) {
					X509Certificate v14 = v17;
					SigXml.verifyFileSignature(v14, p2, 0);
					int v22 = UserHandle.getCallingUserId();
					int v23 = Binder.getCallingUid();
					String v24 = this.mTestCertHelper.getDefaultCertificateAliasIfEmpty(v3);
					boolean v25 = this.mTestCertHelper.isValidRootCertificateAlias(v24);
					if (v25 == 0) {
						String v26 = this.mDatabase.getActiveRootOfTrust(v22, v23);
						if (v26 != 0) {
							long v35 = this.mDatabase.setActiveRootOfTrust(v22, v23, v24);
							if ((v35 < 0) < 0) {
								CertXml v36 = CertXml.parse(p2);
								long v37 = v36.getSerial();
								Long v38 = this.mDatabase.getRecoveryServiceCertSerial(v22, v23, v24);
								if (v38 == 0) {
									long v39 = v38.longValue();
									if ((v39 < v37) < 0) {
										X509Certificate v46 = this.mTestCertHelper.getRootCertificate(v24);
										CertPath v48 = v36.getRandomEndpointCert(v46);
										long v50 = this.mDatabase.setRecoveryServiceCertPath(v22, v23, v24, v48);
										if ((v50 < 0) <= 0) {
											if ((v50 < 0) < 0) {
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V","2","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, initRecoveryServiceWithSigFile(Ljava/lang/String;[B[B)V > 5,2,3,4 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @2 exception:6,
7 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
9 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 7,2 @7 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
5 = invokevirtual < Application, Ljava/lang/String, isEmpty()Z > 2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,3,
13 = phi  2,11,
return 13,
12 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 3,10 @14 exception:11,
15 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 4,13 @20 exception:14,
17 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, parse([B)Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml; > 4 @23 exception:16,
3 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertUtils, getXmlRootNode([B)Lorg/w3c/dom/Element; > 1 @0 exception:2,
4 = new <Application,Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml>@4,
6 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, parseIntermediateCerts(Lorg/w3c/dom/Element;)Ljava/util/List; > 3 @6 exception:5,
8 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, parseSignerCert(Lorg/w3c/dom/Element;)Ljava/security/cert/X509Certificate; > 3 @10 exception:7,
10 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, parseFileSignature(Lorg/w3c/dom/Element;)[B > 3 @14 exception:9,
invokespecial < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, <init>(Ljava/util/List;Ljava/security/cert/X509Certificate;[B)V > 4,6,8,10 @18 exception:11,
return 4,
37 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
39 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 37,9 @29 exception:38,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, isTestOnlyCertificateAlias(Ljava/lang/String;)Z > 1,4 @4 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokestatic < Application, Landroid/security/keystore/recovery/TrustedRootCertificates, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 4 @15 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
return 9,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, verifyFileSignature(Ljava/security/cert/X509Certificate;[B)V > 17,39,3 @33 exception:40,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/SigXml, verifyFileSignature(Ljava/security/cert/X509Certificate;[BLjava/util/Date;)V > 1,2,3,4 @1 exception:5,
return,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, initRecoveryService(Ljava/lang/String;[B)V > 1,9,3 @36 exception:67,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @2 exception:4,
6 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:7,
9 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getDefaultCertificateAliasIfEmpty(Ljava/lang/String;)Ljava/lang/String; > 9,2 @17 exception:10,
12 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
14 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, isValidRootCertificateAlias(Ljava/lang/String;)Z > 12,11 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,16,
20 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
22 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getActiveRootOfTrust(II)Ljava/lang/String; > 20,6,8 @33 exception:21,
conditional branch(ne, to iindex=-1) 22,16,
25 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 22,11 @70 exception:24,
conditional branch(ne, to iindex=-1) 25,16,
26 = new <Application,Ljava/lang/StringBuilder>@76,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 26 @78 exception:27,
30 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,28 @83 exception:29,
32 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 26,8 @86 exception:31,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,33 @91 exception:34,
37 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,11 @94 exception:36,
40 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,38 @99 exception:39,
42 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 26,22 @102 exception:41,
44 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 26 @105 exception:43,
46 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 23,44 @109 exception:45,
67 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
69 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setActiveRootOfTrust(IILjava/lang/String;)J > 67,6,8,11 @114 exception:68,
71 = binaryop(lt) 69 , 70,
conditional branch(lt, to iindex=-1) 71,16,
78 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertXml, parse([B)Lcom/android/server/locksettings/recoverablekeystore/certificate/CertXml; > 3 @128 exception:77,
98 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertXml, getSerial()J > 78 @132 exception:97,
99 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
101 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getRecoveryServiceCertSerial(IILjava/lang/String;)Ljava/lang/Long; > 99,6,8,11 @138 exception:100,
conditional branch(eq, to iindex=-1) 101,16,
111 = new <Application,Ljava/lang/StringBuilder>@187,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 111 @189 exception:112,
115 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 111,113 @194 exception:114,
117 = invokevirtual < Application, Ljava/lang/StringBuilder, append(J)Ljava/lang/StringBuilder; > 111,98 @197 exception:116,
119 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 111 @200 exception:118,
121 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 23,119 @204 exception:120,
122 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mTestCertHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper> > 1,
124 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/TestOnlyInsecureCertificateHelper, getRootCertificate(Ljava/lang/String;)Ljava/security/cert/X509Certificate; > 122,11 @209 exception:123,
127 = invokestatic < Application, Landroid/util/Log, d(Ljava/lang/String;Ljava/lang/String;)I > 23,125 @215 exception:126,
129 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/certificate/CertXml, getRandomEndpointCert(Ljava/security/cert/X509Certificate;)Ljava/security/cert/CertPath; > 78,124 @218 exception:128,
140 = invokestatic < Application, Landroid/util/Log, d(Ljava/lang/String;Ljava/lang/String;)I > 23,138 @224 exception:139,
141 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
143 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setRecoveryServiceCertPath(IILjava/lang/String;Ljava/security/cert/CertPath;)J > 141,6,8,11,129 @229 exception:142,
144 = binaryop(lt) 143 , 70,
conditional branch(le, to iindex=-1) 144,16,
conditional branch(lt, to iindex=-1) 144,16,
return,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void initRecoveryServiceWithSigFile(String p1, byte[] p2, byte[] p3){
	if (p1 == 0) {
		boolean v4 = p1.isEmpty();
		if (v4 == 0) {
			String v3 = p1;
			Object v5 = Objects.requireNonNull(p2, ""recoveryServiceCertFile is null"");
			Object v6 = Objects.requireNonNull(p3, ""recoveryServiceSigFile is null"");
			Element v8 = CertUtils.getXmlRootNode(p3);
			SigXml v9 = new SigXml(v10,v11,v12);
			List v10 = SigXml.parseIntermediateCerts(v8);
			X509Certificate v11 = SigXml.parseSignerCert(v8);
			byte[] v12 = SigXml.parseFileSignature(v8);
			SigXml v7 = v9;
			String v15 = TestOnlyInsecureCertificateHelper.getDefaultCertificateAliasIfEmpty(v3);
			boolean v16 = TestOnlyInsecureCertificateHelper.isTestOnlyCertificateAlias(v15);
			if (v16 == 0) {
				X509Certificate v17 = TrustedRootCertificates.getRootCertificate(v15);
				if (v17 == 0) {
					X509Certificate v14 = v17;
					SigXml.verifyFileSignature(v14, p2, 0);
					int v22 = UserHandle.getCallingUserId();
					int v23 = Binder.getCallingUid();
					String v24 = this.mTestCertHelper.getDefaultCertificateAliasIfEmpty(v3);
					boolean v25 = this.mTestCertHelper.isValidRootCertificateAlias(v24);
					if (v25 == 0) {
						String v26 = this.mDatabase.getActiveRootOfTrust(v22, v23);
						if (v26 != 0) {
							boolean v27 = v26.equals(v24);
							if (v27 != 0) {
								long v38 = this.mDatabase.setActiveRootOfTrust(v22, v23, v24);
								if ((v38 < 0) < 0) {
									CertXml v39 = CertXml.parse(p2);
									long v40 = v39.getSerial();
									Long v41 = this.mDatabase.getRecoveryServiceCertSerial(v22, v23, v24);
									if (v41 == 0) {
										X509Certificate v48 = this.mTestCertHelper.getRootCertificate(v24);
										CertPath v50 = v39.getRandomEndpointCert(v48);
										long v52 = this.mDatabase.setRecoveryServiceCertPath(v22, v23, v24, v50);
										if ((v52 < 0) <= 0) {
											if ((v52 < 0) < 0) {
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @10 exception:8,
goto (from iindex= 7 to iindex = 13),
16 = phi  2,9,
19 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @31 exception:20,
conditional branch(ne, to iindex=-1) 21,7,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @49 exception:22,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @55 exception:25,
28 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 24,26,23,16,3,7 @61 exception:27,
29 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 28,
conditional branch(ne, to iindex=-1) 29,7,
31 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePasswordHashFactor()[B > 29 @81 exception:30,
monitorexit 19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @86 exception:32,
return 31,","depth : 0
-----
","public byte[] getHashFactor(LockscreenCredential p1, int p2){
	boolean v2 = p0.isProfileWithUnifiedLock(p2);
	if (v2 == 0) {
		LockscreenCredential v3 = p0.getDecryptedPasswordForTiedProfile(p2);
		boolean v4 = p0.isSyntheticPasswordBasedCredentialLocked(p2);
		if (v4 != 0) {
			long v5 = p0.getSyntheticPasswordHandleLocked(p2);
			IGateKeeperService v6 = p0.getGateKeeperService();
			SyntheticPasswordManager$AuthenticationResult v7 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v6, v5, p1, p2, 0);
			if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
				byte[] v8 = SyntheticPasswordManager$AuthenticationResult.authToken.derivePasswordHashFactor();
				p0.scheduleGc();
				return v8;
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:5,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @10 exception:8,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
return 40,
goto (from iindex= 7 to iindex = 13),
16 = phi  2,9,
19 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @31 exception:20,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(ne, to iindex=-1) 21,7,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @49 exception:22,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getLong(Ljava/lang/String;JI)J > 1,3,4,2 @5 exception:5,
return 6,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @55 exception:25,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
28 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 24,26,23,16,3,7 @61 exception:27,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@8,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @10 exception:8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,9,3,5 @16 exception:10,
13 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData; > 11 @20 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 4,14 @26 exception:15,
conditional branch(ne, to iindex=-1) 16,18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, computePasswordToken(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData;)[B > 1,4,13 @71 exception:20,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,5 @75 exception:22,
conditional branch(eq, to iindex=-1) 23,24,
99 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @82 exception:98,
conditional branch(ne, to iindex=-1) 99,18,
101 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, passwordTokenToWeaverKey([B)[B > 1,21 @98 exception:100,
103 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,23,101 @102 exception:102,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 103,
105 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 103 @108 exception:104,
conditional branch(eq, to iindex=-1) 105,18,
106 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 7,
108 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 106 @119 exception:107,
110 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderWeaverSecret([B[B)[B > 1,21,108 @123 exception:109,
111 = phi  93,29,
113 = phi  97,110,
goto (from iindex= 67 to iindex = 148),
conditional branch(eq, to iindex=-1) 6,18,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 6 @279 exception:117,
goto (from iindex= 142 to iindex = 9),
127 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,18,113,111,5 @298 exception:126,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 127,
129 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,127,29,5 @310 exception:128,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 129,
130 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
conditional branch(eq, to iindex=-1) 130,18,
132 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasPasswordMetrics(JI)Z > 1,3,5 @320 exception:131,
conditional branch(ne, to iindex=-1) 132,18,
133 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, savePasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)V > 1,4,133,3,5 @336 exception:134,
return 7,
29 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 28,
conditional branch(ne, to iindex=-1) 29,7,
31 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePasswordHashFactor()[B > 29 @81 exception:30,
3 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, -$$Nest$sfgetPERSONALIZATION_PASSWORD_HASH()[B > @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePassword([B)[B > 1,3 @4 exception:4,
return 5,
monitorexit 19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @86 exception:32,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
return 31,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public byte[] getHashFactor(LockscreenCredential p1, int p2){
	boolean v3 = LockSettingsService.isCredentialSharableWithParent(p2);
	if (v3 == 0) {
		boolean v4 = LockSettingsService.getSeparateProfileChallengeEnabledInternal(p2);
		if (v4 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				byte[] v6 = this.mStorage.readChildProfileLock(p2);
				if (v6 == 0) {
					byte[] v7 = Arrays.copyOfRange(v6, 0, 12);
					byte[] v8 = Arrays.copyOfRange(v6, 12, v6.length);
					StringBuilder v9 = new StringBuilder();
					StringBuilder v11 = v9.append(""profile_key_name_decrypt_"");
					StringBuilder v12 = v9.append(p2);
					String v13 = v9.toString();
					Key v14 = this.mJavaKeyStore.getKey(v13, 0);
					Cipher v15 = Cipher.getInstance(""AES/GCM/NoPadding"");
					GCMParameterSpec v16 = new GCMParameterSpec(128,v7);
					v15.init(2, v14, v16);
					byte[] v19 = v15.doFinal(v8);
					LockscreenCredential v20 = LockscreenCredential.createManagedPassword(v19);
					Arrays.fill(v19, 0);
					this.mManagedProfilePasswordCache.storePassword(p2, v20);
					LockscreenCredential v5 = v20;
					if (p2 != -9999) {
						LockSettingsStorage$PersistentData v24 = this.mStorage.readPersistentDataBlock();
						if (LockSettingsStorage$PersistentData.type == 1) {
							if (LockSettingsStorage$PersistentData.type != 2) {
								boolean v23 = 0;
								if (v23 != 0) {
									long v26 = LockSettingsService.getLong(""sp-handle"", 0, p2);
									long v25 = v26;
									if (this.mGateKeeperService == 0) {
										IBinder v28 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
										if (v28 == 0) {
											LockSettingsService$GateKeeperDiedRecipient v29 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
											v28.linkToDeath(v29, 0);
											IGateKeeperService v32 = IGateKeeperService$Stub.asInterface(v28);
											this.mGateKeeperService = v32;
											IGateKeeperService v27 = v32;
											SyntheticPasswordManager$AuthenticationResult v34 = new SyntheticPasswordManager$AuthenticationResult();
											byte[] v36 = SyntheticPasswordManager.loadState(""pwd"", v25, p2);
											SyntheticPasswordManager$PasswordData v37 = SyntheticPasswordManager$PasswordData.fromBytes(v36);
											boolean v38 = p1.checkAgainstStoredType(SyntheticPasswordManager$PasswordData.credentialType);
											if (v38 != 0) {
												byte[] v39 = SyntheticPasswordManager.computePasswordToken(p1, v37);
												int v40 = SyntheticPasswordManager.loadWeaverSlot(v25, p2);
												if (v40 == -1) {
													boolean v41 = SyntheticPasswordManager.isWeaverAvailable();
													if (v41 != 0) {
														byte[] v42 = SyntheticPasswordManager.passwordTokenToWeaverKey(v39);
														VerifyCredentialResponse v43 = SyntheticPasswordManager.weaverVerify(v40, v42);
														SyntheticPasswordManager$AuthenticationResult.gkResponse = v43;
														int v44 = v43.getResponseCode();
														if (v44 == 0) {
															byte[] v45 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getGatekeeperHAT();
															byte[] v46 = SyntheticPasswordManager.transformUnderWeaverSecret(v39, v45);
															if (0 == 0) {
																0.onCredentialVerified();
																SyntheticPasswordManager$AuthenticationToken v48 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(v25, 0, transformUnderSecdiscardable(), sidFromPasswordHandle(), p2);
																SyntheticPasswordManager$AuthenticationResult.authToken = v48;
																VerifyCredentialResponse v49 = SyntheticPasswordManager.verifyChallenge(v27, v48, 0, p2);
																SyntheticPasswordManager$AuthenticationResult.gkResponse = v49;
																if (SyntheticPasswordManager$AuthenticationResult.authToken == 0) {
																	boolean v50 = SyntheticPasswordManager.hasPasswordMetrics(v25, p2);
																	if (v50 != 0) {
																		SyntheticPasswordManager.savePasswordMetrics(p1, SyntheticPasswordManager$AuthenticationResult.authToken, v25, p2);
																		SyntheticPasswordManager$AuthenticationResult v33 = v34;
																		if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
																			byte[] v53 = SyntheticPasswordManager.-$$Nest$sfgetPERSONALIZATION_PASSWORD_HASH();
																			byte[] v54 = SyntheticPasswordManager$AuthenticationToken.derivePassword(v53);
																			byte[] v52 = v54;
																			LockSettingsService$$ExternalSyntheticLambda3 v56 = new LockSettingsService$$ExternalSyntheticLambda3();
																			boolean v58 = this.mHandler.postDelayed(v56, 2000);
																			return v52;
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:5,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @10 exception:8,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
return 40,
goto (from iindex= 7 to iindex = 13),
16 = phi  2,9,
19 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @31 exception:20,
conditional branch(ne, to iindex=-1) 2,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,2 @21 exception:6,
9 = binaryop(lt) 7 , 8,
conditional branch(eq, to iindex=-1) 9,3,
10 = phi  3,4,
return 10,
conditional branch(ne, to iindex=-1) 21,7,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @49 exception:22,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getLong(Ljava/lang/String;JI)J > 1,3,4,2 @5 exception:5,
return 6,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @55 exception:25,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
28 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 24,26,23,16,3,7 @61 exception:27,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@8,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @10 exception:8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,9,3,5 @16 exception:10,
13 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData; > 11 @20 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 4,14 @26 exception:15,
conditional branch(ne, to iindex=-1) 16,18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, computePasswordToken(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData;)[B > 1,4,13 @71 exception:20,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,5 @75 exception:22,
conditional branch(eq, to iindex=-1) 23,24,
99 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @82 exception:98,
conditional branch(ne, to iindex=-1) 99,18,
101 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, passwordTokenToWeaverKey([B)[B > 1,21 @98 exception:100,
103 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,23,101 @102 exception:102,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 103,
105 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 103 @108 exception:104,
conditional branch(eq, to iindex=-1) 105,18,
106 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 7,
108 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 106 @119 exception:107,
110 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderWeaverSecret([B[B)[B > 1,21,108 @123 exception:109,
111 = phi  93,29,
113 = phi  97,110,
goto (from iindex= 67 to iindex = 148),
conditional branch(eq, to iindex=-1) 6,18,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 6 @279 exception:117,
goto (from iindex= 142 to iindex = 9),
127 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,18,113,111,5 @298 exception:126,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 127,
129 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,127,29,5 @310 exception:128,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 129,
130 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
conditional branch(eq, to iindex=-1) 130,18,
132 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasPasswordMetrics(JI)Z > 1,3,5 @320 exception:131,
conditional branch(ne, to iindex=-1) 132,18,
133 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, savePasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)V > 1,4,133,3,5 @336 exception:134,
return 7,
29 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 28,
conditional branch(ne, to iindex=-1) 29,7,
31 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePasswordHashFactor()[B > 29 @81 exception:30,
3 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, -$$Nest$sfgetPERSONALIZATION_PASSWORD_HASH()[B > @0 exception:2,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePassword([B)[B > 1,3 @4 exception:4,
return 5,
monitorexit 19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @86 exception:32,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
return 31,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public byte[] getHashFactor(LockscreenCredential p1, int p2){
	boolean v3 = LockSettingsService.isCredentialSharableWithParent(p2);
	if (v3 == 0) {
		boolean v4 = LockSettingsService.getSeparateProfileChallengeEnabledInternal(p2);
		if (v4 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				byte[] v6 = this.mStorage.readChildProfileLock(p2);
				if (v6 == 0) {
					byte[] v7 = Arrays.copyOfRange(v6, 0, 12);
					byte[] v8 = Arrays.copyOfRange(v6, 12, v6.length);
					StringBuilder v9 = new StringBuilder();
					StringBuilder v11 = v9.append(""profile_key_name_decrypt_"");
					StringBuilder v12 = v9.append(p2);
					String v13 = v9.toString();
					Key v14 = this.mJavaKeyStore.getKey(v13, 0);
					Cipher v15 = Cipher.getInstance(""AES/GCM/NoPadding"");
					GCMParameterSpec v16 = new GCMParameterSpec(128,v7);
					v15.init(2, v14, v16);
					byte[] v19 = v15.doFinal(v8);
					LockscreenCredential v20 = LockscreenCredential.createManagedPassword(v19);
					Arrays.fill(v19, 0);
					this.mManagedProfilePasswordCache.storePassword(p2, v20);
					LockscreenCredential v5 = v20;
					if (p2 != -9999) {
						long v24 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
						if ((v24 < 0) == 0) {
							boolean v23 = 0;
							if (v23 != 0) {
								long v26 = LockSettingsService.getLong(""sp-handle"", 0, p2);
								long v25 = v26;
								if (this.mGateKeeperService == 0) {
									IBinder v28 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
									if (v28 == 0) {
										LockSettingsService$GateKeeperDiedRecipient v29 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
										v28.linkToDeath(v29, 0);
										IGateKeeperService v32 = IGateKeeperService$Stub.asInterface(v28);
										this.mGateKeeperService = v32;
										IGateKeeperService v27 = v32;
										SyntheticPasswordManager$AuthenticationResult v34 = new SyntheticPasswordManager$AuthenticationResult();
										byte[] v36 = SyntheticPasswordManager.loadState(""pwd"", v25, p2);
										SyntheticPasswordManager$PasswordData v37 = SyntheticPasswordManager$PasswordData.fromBytes(v36);
										boolean v38 = p1.checkAgainstStoredType(SyntheticPasswordManager$PasswordData.credentialType);
										if (v38 != 0) {
											byte[] v39 = SyntheticPasswordManager.computePasswordToken(p1, v37);
											int v40 = SyntheticPasswordManager.loadWeaverSlot(v25, p2);
											if (v40 == -1) {
												boolean v41 = SyntheticPasswordManager.isWeaverAvailable();
												if (v41 != 0) {
													byte[] v42 = SyntheticPasswordManager.passwordTokenToWeaverKey(v39);
													VerifyCredentialResponse v43 = SyntheticPasswordManager.weaverVerify(v40, v42);
													SyntheticPasswordManager$AuthenticationResult.gkResponse = v43;
													int v44 = v43.getResponseCode();
													if (v44 == 0) {
														byte[] v45 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getGatekeeperHAT();
														byte[] v46 = SyntheticPasswordManager.transformUnderWeaverSecret(v39, v45);
														if (0 == 0) {
															0.onCredentialVerified();
															SyntheticPasswordManager$AuthenticationToken v48 = SyntheticPasswordManager.unwrapSyntheticPasswordBlob(v25, 0, transformUnderSecdiscardable(), sidFromPasswordHandle(), p2);
															SyntheticPasswordManager$AuthenticationResult.authToken = v48;
															VerifyCredentialResponse v49 = SyntheticPasswordManager.verifyChallenge(v27, v48, 0, p2);
															SyntheticPasswordManager$AuthenticationResult.gkResponse = v49;
															if (SyntheticPasswordManager$AuthenticationResult.authToken == 0) {
																boolean v50 = SyntheticPasswordManager.hasPasswordMetrics(v25, p2);
																if (v50 != 0) {
																	SyntheticPasswordManager.savePasswordMetrics(p1, SyntheticPasswordManager$AuthenticationResult.authToken, v25, p2);
																	SyntheticPasswordManager$AuthenticationResult v33 = v34;
																	if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
																		byte[] v53 = SyntheticPasswordManager.-$$Nest$sfgetPERSONALIZATION_PASSWORD_HASH();
																		byte[] v54 = SyntheticPasswordManager$AuthenticationToken.derivePassword(v53);
																		byte[] v52 = v54;
																		LockSettingsService$$ExternalSyntheticLambda3 v56 = new LockSettingsService$$ExternalSyntheticLambda3();
																		boolean v58 = this.mHandler.postDelayed(v56, 2000);
																		return v52;
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:5,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @10 exception:8,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
2 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = arraylength 1,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 1,3 @3 exception:4,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 2,6,5 @8 exception:7,
return 2,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 5,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 9,2 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @27 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, getProvider()Ljava/security/Provider; > 16 @35 exception:17,
20 = invokestatic < Application, Ljavax/crypto/KeyGenerator, getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator; > 15,18 @39 exception:19,
21 = new <Application,Landroid/security/keystore/KeyGenParameterSpec$Builder>@43,
invokespecial < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, <init>(Ljava/lang/String;I)V > 21,14,22 @46 exception:23,
26 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setKeySize(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 21,24 @51 exception:25,
28 = new <Application,[Ljava/lang/String>@5729 ,
31 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 26,28 @61 exception:30,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, keyNamespace()I > @65 exception:32,
35 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setNamespace(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 31,33 @69 exception:34,
37 = new <Application,[Ljava/lang/String>@7529 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 35,37 @79 exception:38,
41 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationRequired(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 39,29 @84 exception:40,
42 = getstatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, CACHE_TIMEOUT_SECONDS, <Primordial,I> >,
44 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationValidityDurationSeconds(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 41,42 @90 exception:43,
46 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, build()Landroid/security/keystore/KeyGenParameterSpec; > 44 @94 exception:45,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(Ljava/security/spec/AlgorithmParameterSpec;)V > 20,46 @98 exception:47,
49 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 20 @101 exception:48,
62 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 60 @107 exception:61,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;)V > 62,29,49 @111 exception:63,
65 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 3 @114 exception:64,
67 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 62,65 @118 exception:66,
69 = invokevirtual < Application, Ljavax/crypto/Cipher, getIV()[B > 62 @122 exception:68,
74 = getCaughtException ,
77 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 56,75,74 @150 exception:76,
monitorexit 4,
return,
return 40,
goto (from iindex= 7 to iindex = 13),
16 = phi  2,9,
19 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @31 exception:20,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
3 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getPersistentDataBlockManager()Lcom/android/server/PersistentDataBlockManagerInternal; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokeinterface < Application, Lcom/android/server/PersistentDataBlockManagerInternal, getFrpCredentialHandle()[B > 3 @9 exception:5,
8 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, fromBytes([B)Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 6 @13 exception:7,
return 8,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(ne, to iindex=-1) 21,7,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @49 exception:22,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getLong(Ljava/lang/String;JI)J > 1,3,4,2 @5 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 6,2,3,4 @5 exception:7,
return 8,
return 6,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @55 exception:25,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
7 = new <Application,Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy>@20,
invokespecial < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy, <init>(Landroid/os/IBinder;)V > 7,1 @22 exception:8,
return 7,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
28 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 24,26,23,16,3,7 @61 exception:27,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@8,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @10 exception:8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,9,3,5 @16 exception:10,
5 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readSyntheticPasswordState(IJLjava/lang/String;)[B > 5,4,3,2 @2 exception:6,
return 7,
13 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData; > 11 @20 exception:12,
2 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData>@0,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, <init>()V > 2 @2 exception:3,
4 = arraylength 1,
6 = invokestatic < Application, Ljava/nio/ByteBuffer, allocate(I)Ljava/nio/ByteBuffer; > 4 @6 exception:5,
7 = arraylength 1,
10 = invokevirtual < Application, Ljava/nio/ByteBuffer, put([BII)Ljava/nio/ByteBuffer; > 6,1,8,7 @12 exception:9,
12 = invokevirtual < Application, Ljava/nio/ByteBuffer, flip()Ljava/nio/Buffer; > 6 @15 exception:11,
14 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 6 @18 exception:13,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > = 14,
16 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 6 @24 exception:15,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptN, <Primordial,B> > = 16,
18 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 6 @30 exception:17,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptR, <Primordial,B> > = 18,
20 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 6 @36 exception:19,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptP, <Primordial,B> > = 20,
22 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 6 @42 exception:21,
23 = new <Primordial,[B>@4622 ,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, salt, <Primordial,[B> > = 23,
25 = invokevirtual < Application, Ljava/nio/ByteBuffer, get([B)Ljava/nio/ByteBuffer; > 6,23 @50 exception:24,
27 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 6 @53 exception:26,
conditional branch(le, to iindex=-1) 27,8,
28 = new <Primordial,[B>@5927 ,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, passwordHandle, <Primordial,[B> > = 28,
30 = invokevirtual < Application, Ljava/nio/ByteBuffer, get([B)Ljava/nio/ByteBuffer; > 6,28 @63 exception:29,
goto (from iindex= 32 to iindex = 4),
return 2,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 4,14 @26 exception:15,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 16,18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, computePasswordToken(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData;)[B > 1,4,13 @71 exception:20,
5 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, DEFAULT_PASSWORD, <Primordial,[B> >,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, salt, <Primordial,[B> > 3,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptN, <Primordial,B> > 3,
16 = binaryop(SHL) 15 , 14,
17 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptR, <Primordial,B> > 3,
18 = binaryop(SHL) 15 , 17,
19 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptP, <Primordial,B> > 3,
20 = binaryop(SHL) 15 , 19,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, scrypt([B[BIIII)[B > 1,10,13,16,18,20,21 @32 exception:22,
return 23,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,5 @75 exception:22,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,4,2,3 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
9 = arraylength 6,
conditional branch(eq, to iindex=-1) 9,10,
12 = invokestatic < Application, Ljava/nio/ByteBuffer, allocate(I)Ljava/nio/ByteBuffer; > 10 @15 exception:11,
13 = arraylength 6,
15 = invokevirtual < Application, Ljava/nio/ByteBuffer, put([BII)Ljava/nio/ByteBuffer; > 12,6,8,13 @21 exception:14,
17 = invokevirtual < Application, Ljava/nio/ByteBuffer, flip()Ljava/nio/Buffer; > 12 @24 exception:16,
19 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 12 @27 exception:18,
conditional branch(eq, to iindex=-1) 19,20,
22 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 12 @57 exception:21,
return 22,
conditional branch(eq, to iindex=-1) 23,24,
99 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @82 exception:98,
conditional branch(ne, to iindex=-1) 99,18,
101 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, passwordTokenToWeaverKey([B)[B > 1,21 @98 exception:100,
103 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,23,101 @102 exception:102,
conditional branch(eq, to iindex=-1) 2,4,
5 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > 1,
6 = getfield < Application, Landroid/hardware/weaver/V1_0/WeaverConfig, slots, <Primordial,I> > 5,
conditional branch(ge, to iindex=-1) 2,6,
conditional branch(ne, to iindex=-1) 3,11,
17 = getfield < Application, Landroid/hardware/weaver/V1_0/WeaverConfig, keySize, <Primordial,I> > 5,
18 = new <Primordial,[B>@1317 ,
goto (from iindex= 8 to iindex = 6),
21 = phi  18,3,
23 = new <Application,[Lcom/android/internal/widget/VerifyCredentialResponse>@2222 ,
24 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > 1,
26 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, toByteArrayList([B)Ljava/util/ArrayList; > 21 @27 exception:25,
27 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda1>@31,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda1, <init>([Lcom/android/internal/widget/VerifyCredentialResponse;I)V > 27,23,2 @33 exception:28,
invokeinterface < Application, Landroid/hardware/weaver/V1_0/IWeaver, read(ILjava/util/ArrayList;Landroid/hardware/weaver/V1_0/IWeaver$readCallback;)V > 24,2,26,27 @36 exception:29,
goto (from iindex= 21 to iindex = 29),
50 = arrayload 23[11],
return 50,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 103,
105 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 103 @108 exception:104,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(eq, to iindex=-1) 105,18,
106 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 7,
108 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 106 @119 exception:107,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mGatekeeperHAT, <Primordial,[B> > 1,
return 2,
110 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderWeaverSecret([B[B)[B > 1,21,108 @123 exception:109,
4 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALISATION_WEAVER_PASSWORD, <Primordial,[B> >,
6 = new <Primordial,[[B>@35 ,
arraystore 6[7] = 3,
9 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, personalisedHash([B[[B)[B > 4,6 @8 exception:8,
10 = arraylength 2,
11 = arraylength 9,
12 = binaryop(add) 10 , 11,
13 = new <Primordial,[B>@1512 ,
14 = arraylength 2,
invokestatic < Application, Ljava/lang/System, arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V > 2,7,13,7,14 @18 exception:15,
16 = arraylength 2,
17 = arraylength 9,
invokestatic < Application, Ljava/lang/System, arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V > 9,7,13,16,17 @23 exception:18,
return 13,
111 = phi  93,29,
113 = phi  97,110,
goto (from iindex= 67 to iindex = 148),
conditional branch(eq, to iindex=-1) 6,18,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 6 @279 exception:117,
goto (from iindex= 142 to iindex = 9),
127 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,18,113,111,5 @298 exception:126,
9 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,7,2,6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob; > 9 @19 exception:11,
13 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mVersion, <Primordial,B> > 12,
conditional branch(eq, to iindex=-1) 13,14,
conditional branch(eq, to iindex=-1) 13,15,
conditional branch(ne, to iindex=-1) 13,16,
goto (from iindex= 20 to iindex = 9),
20 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mType, <Primordial,B> > 12,
conditional branch(ne, to iindex=-1) 20,3,
conditional branch(ne, to iindex=-1) 13,16,
30 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getKeyName(J)Ljava/lang/String; > 1,2 @49 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mContent, <Primordial,[B> > 12,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, decryptBlobV1(Ljava/lang/String;[B[B)[B > 30,31,4 @55 exception:32,
goto (from iindex= 33 to iindex = 11),
34 = phi  33,28,
conditional branch(ne, to iindex=-1) 34,10,
39 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken>@95,
40 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mVersion, <Primordial,B> > 12,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, <init>(B)V > 39,40 @99 exception:41,
conditional branch(eq, to iindex=-1) 3,16,
conditional branch(ne, to iindex=-1) 3,15,
goto (from iindex= 55 to iindex = 5),
44 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadEscrowData(Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;I)Z > 1,39,6 @111 exception:43,
conditional branch(ne, to iindex=-1) 44,10,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, recreateFromEscrow([B)V > 39,34 @138 exception:45,
49 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mVersion, <Primordial,B> > 12,
conditional branch(ne, to iindex=-1) 49,16,
50 = new <Application,Ljava/lang/StringBuilder>@145,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 50 @147 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 50,52 @152 exception:53,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 50,6 @155 exception:55,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 50,57 @160 exception:58,
61 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 50,3 @163 exception:60,
63 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 50 @166 exception:62,
65 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 38,63 @170 exception:64,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, createSyntheticPasswordBlob(JBLcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;[BJI)V > 1,2,3,39,4,5,6 @184 exception:66,
return 39,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 127,
129 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,127,29,5 @310 exception:128,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 3 @0 exception:6,
9 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,7,4,5 @8 exception:8,
return 9,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 129,
130 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
conditional branch(eq, to iindex=-1) 130,18,
132 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasPasswordMetrics(JI)Z > 1,3,5 @320 exception:131,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,4,2,3 @3 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 132,18,
133 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, savePasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)V > 1,4,133,3,5 @336 exception:134,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveMetricsKey()[B > 3 @0 exception:6,
9 = new <Primordial,[B>@58 ,
10 = new <Application,Lcom/android/server/locksettings/VersionedPasswordMetrics>@7,
invokespecial < Application, Lcom/android/server/locksettings/VersionedPasswordMetrics, <init>(Lcom/android/internal/widget/LockscreenCredential;)V > 10,2 @9 exception:11,
13 = invokevirtual < Application, Lcom/android/server/locksettings/VersionedPasswordMetrics, serialize()[B > 10 @12 exception:12,
15 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, encrypt([B[B[B)[B > 7,9,13 @16 exception:14,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveState(Ljava/lang/String;[BJI)V > 1,16,15,4,5 @26 exception:17,
return,
return 7,
29 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 28,
conditional branch(ne, to iindex=-1) 29,7,
31 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePasswordHashFactor()[B > 29 @81 exception:30,
3 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, -$$Nest$sfgetPERSONALIZATION_PASSWORD_HASH()[B > @0 exception:2,
1 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALIZATION_PASSWORD_HASH, <Primordial,[B> >,
return 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePassword([B)[B > 1,3 @4 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, mVersion, <Primordial,B> > 1,
conditional branch(ne, to iindex=-1) 3,4,
11 = new <Application,Lcom/android/server/locksettings/SP800Derive>@5,
12 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, mSyntheticPassword, <Primordial,[B> > 1,
invokespecial < Application, Lcom/android/server/locksettings/SP800Derive, <init>([B)V > 11,12 @9 exception:13,
15 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, -$$Nest$sfgetPERSONALISATION_CONTEXT()[B > @12 exception:14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/SP800Derive, withContext([B[B)[B > 11,2,15 @16 exception:16,
return 17,
return 5,
monitorexit 19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @86 exception:32,
return 31,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
","public byte[] getHashFactor(LockscreenCredential p1, int p2){
	UserManager v4 = LockSettingsService.getUserManagerFromCache(p2);
	boolean v5 = v4.isCredentialSharableWithParent();
	boolean v3 = v5;
	if (v3 == 0) {
		boolean v7 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p2);
		boolean v6 = v7;
		if (v6 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				String v10 = LockSettingsStorage.getChildProfileLockFile(p2);
				byte[] v11 = LockSettingsStorage.readFile(v10);
				byte[] v9 = v11;
				if (v9 == 0) {
					byte[] v12 = Arrays.copyOfRange(v9, 0, 12);
					byte[] v13 = Arrays.copyOfRange(v9, 12, v9.length);
					StringBuilder v14 = new StringBuilder();
					StringBuilder v16 = v14.append(""profile_key_name_decrypt_"");
					StringBuilder v17 = v14.append(p2);
					String v18 = v14.toString();
					Key v19 = this.mJavaKeyStore.getKey(v18, 0);
					Cipher v20 = Cipher.getInstance(""AES/GCM/NoPadding"");
					GCMParameterSpec v21 = new GCMParameterSpec(128,v12);
					v20.init(2, v19, v21);
					byte[] v24 = v20.doFinal(v13);
					LockscreenCredential v26 = new LockscreenCredential(4,v27);
					byte[] v27 = Arrays.copyOf(v24, v24.length);
					LockscreenCredential v25 = v26;
					Arrays.fill(v24, 0);
					boolean v31 = this.mEncryptedPasswords.contains(p2);
					if (v31 == 0) {
						UserInfo v32 = this.mUserManager.getProfileParent(p2);
						if (v32 == 0) {
							if (UserInfo.id == 0) {
								String v33 = ManagedProfilePasswordCache.getEncryptionKeyName(p2);
								Provider v34 = this.mKeyStore.getProvider();
								KeyGenerator v35 = KeyGenerator.getInstance(""AES"", v34);
								KeyGenParameterSpec$Builder v36 = new KeyGenParameterSpec$Builder(v33,3);
								KeyGenParameterSpec$Builder v38 = v36.setKeySize(256);
								String v39 = new String(1);
								KeyGenParameterSpec$Builder v40 = v38.setBlockModes(v39);
								int v41 = SyntheticPasswordCrypto.keyNamespace();
								KeyGenParameterSpec$Builder v42 = v40.setNamespace(v41);
								String v43 = new String(1);
								KeyGenParameterSpec$Builder v44 = v42.setEncryptionPaddings(v43);
								KeyGenParameterSpec$Builder v45 = v44.setUserAuthenticationRequired(1);
								KeyGenParameterSpec$Builder v46 = v45.setUserAuthenticationValidityDurationSeconds(this.CACHE_TIMEOUT_SECONDS);
								KeyGenParameterSpec v47 = v46.build();
								v35.init(v47);
								SecretKey v49 = v35.generateKey();
								Cipher v50 = Cipher.getInstance(""AES/GCM/NoPadding"");
								v50.init(1, v49);
								byte[] v52 = v25.getCredential();
								byte[] v53 = v50.doFinal(v52);
								byte[] v54 = v50.getIV();
								LockscreenCredential v8 = v25;
								if (p2 != -9999) {
									PersistentDataBlockManagerInternal v58 = LockSettingsStorage.getPersistentDataBlockManager();
									if (v58 != 0) {
										byte[] v59 = v58.getFrpCredentialHandle();
										LockSettingsStorage$PersistentData v60 = LockSettingsStorage$PersistentData.fromBytes(v59);
										LockSettingsStorage$PersistentData v57 = v60;
										if (LockSettingsStorage$PersistentData.type == 1) {
											if (LockSettingsStorage$PersistentData.type != 2) {
												boolean v56 = 0;
												if (v56 != 0) {
													long v64 = this.mStorage.getLong(""sp-handle"", 0, p2);
													long v62 = v64;
													long v61 = v62;
													if (this.mGateKeeperService == 0) {
														IBinder v66 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
														if (v66 == 0) {
															LockSettingsService$GateKeeperDiedRecipient v67 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
															v66.linkToDeath(v67, 0);
															if (v66 != 0) {
																IInterface v71 = v66.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
																if (v71 == 0) {
																	if (v71 instanceof IGateKeeperService == 0) {
																		IGateKeeperService$Stub$Proxy v72 = new IGateKeeperService$Stub$Proxy(v66);
																		IGateKeeperService v70 = v72;
																		this.mGateKeeperService = v70;
																		IGateKeeperService v65 = v70;
																		SyntheticPasswordManager$AuthenticationResult v75 = new SyntheticPasswordManager$AuthenticationResult();
																		byte[] v78 = this.mStorage.readSyntheticPasswordState(p2, v61, ""pwd"");
																		byte[] v77 = v78;
																		SyntheticPasswordManager$PasswordData v80 = new SyntheticPasswordManager$PasswordData();
																		ByteBuffer v82 = ByteBuffer.allocate(v77.length);
																		ByteBuffer v83 = v82.put(v77, 0, v77.length);
																		Buffer v84 = v82.flip();
																		int v85 = v82.getInt();
																		this.credentialType = v85;
																		byte v86 = v82.get();
																		this.scryptN = v86;
																		byte v87 = v82.get();
																		this.scryptR = v87;
																		byte v88 = v82.get();
																		this.scryptP = v88;
																		int v89 = v82.getInt();
																		[B v90 = new [B(v89);
																		this.salt = v90;
																		ByteBuffer v91 = v82.get(v90);
																		int v92 = v82.getInt();
																		if (v92 <= 0) {
																			[B v93 = new [B(v92);
																			this.passwordHandle = v93;
																			ByteBuffer v94 = v82.get(v93);
																			SyntheticPasswordManager$PasswordData v79 = v80;
																			if (SyntheticPasswordManager$PasswordData.credentialType != 2) {
																				int v96 = LockscreenCredential.getType();
																				if (v96 == 4) {
																					int v97 = LockscreenCredential.getType();
																					if (v97 != 3) {
																						boolean v95 = 1;
																						if (v95 != 0) {
																							boolean v99 = p1.isNone();
																							if (v99 == 0) {
																								byte[] v100 = SyntheticPasswordManager.scrypt(this.DEFAULT_PASSWORD, SyntheticPasswordManager$PasswordData.salt, (1 << SyntheticPasswordManager$PasswordData.scryptN), (1 << SyntheticPasswordManager$PasswordData.scryptR), (1 << SyntheticPasswordManager$PasswordData.scryptP), 32);
																								byte[] v98 = v100;
																								byte[] v102 = SyntheticPasswordManager.loadState(""weaver"", v61, p2);
																								if (v102 == 0) {
																									if (v102.length == 5) {
																										ByteBuffer v103 = ByteBuffer.allocate(5);
																										ByteBuffer v104 = v103.put(v102, 0, v102.length);
																										Buffer v105 = v103.flip();
																										byte v106 = v103.get();
																										if (v106 == 1) {
																											int v107 = v103.getInt();
																											int v101 = v107;
																											if (v101 == -1) {
																												boolean v108 = SyntheticPasswordManager.isWeaverAvailable();
																												if (v108 != 0) {
																													byte[] v109 = SyntheticPasswordManager.passwordTokenToWeaverKey(v98);
																													if (v101 == -1) {
																														if (v101 >= WeaverConfig.slots) {
																															if (v109 != 0) {
																																[B v111 = new [B(WeaverConfig.keySize);
																																VerifyCredentialResponse v112 = new VerifyCredentialResponse(1);
																																ArrayList v113 = SyntheticPasswordManager.toByteArrayList(v111);
																																SyntheticPasswordManager$$ExternalSyntheticLambda1 v114 = new SyntheticPasswordManager$$ExternalSyntheticLambda1(v112,v101);
																																this.mWeaver.read(v101, v113, v114);
																																VerifyCredentialResponse v110 = v112[0];
																																SyntheticPasswordManager$AuthenticationResult.gkResponse = v110;
																																int v117 = this.mResponseCode;
																																if (v117 == 0) {
																																	byte[] v118 = this.mGatekeeperHAT;
																																	[[B v120 = new [[B(1);
																																	byte[] v121 = SyntheticPasswordCrypto.personalisedHash(this.PERSONALISATION_WEAVER_PASSWORD, v120);
																																	[B v122 = new [B((v98.length + v121.length));
																																	System.arraycopy(v98, 0, v122, 0, v98.length);
																																	System.arraycopy(v121, 0, v122, v98.length, v121.length);
																																	byte[] v119 = v122;
																																	if (0 == 0) {
																																		0.onCredentialVerified();
																																		byte[] v127 = SyntheticPasswordManager.loadState(""spblob"", v61, p2);
																																		if (v127 != 0) {
																																			SyntheticPasswordManager$SyntheticPasswordBlob v128 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v127);
																																			if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion == 3) {
																																				if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion == 2) {
																																					if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion != 1) {
																																						if (SyntheticPasswordManager$SyntheticPasswordBlob.mType != 0) {
																																							if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion != 1) {
																																								String v129 = SyntheticPasswordManager.getKeyName(v61);
																																								byte[] v130 = SyntheticPasswordCrypto.decryptBlobV1(v129, SyntheticPasswordManager$SyntheticPasswordBlob.mContent, transformUnderSecdiscardable());
																																								if (v130 != 0) {
																																									SyntheticPasswordManager$AuthenticationToken v131 = new SyntheticPasswordManager$AuthenticationToken(SyntheticPasswordManager$SyntheticPasswordBlob.mVersion);
																																									if (0 == 1) {
																																										if (0 != 2) {
																																											boolean v133 = SyntheticPasswordManager.loadEscrowData(v131, p2);
																																											if (v133 != 0) {
																																												v131.recreateFromEscrow(v130);
																																												if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion != 1) {
																																													SyntheticPasswordManager.createSyntheticPasswordBlob(v61, 0, v131, transformUnderSecdiscardable(), sidFromPasswordHandle(), p2);
																																													SyntheticPasswordManager$AuthenticationToken v126 = v131;
																																													SyntheticPasswordManager$AuthenticationResult.authToken = v126;
																																													byte[] v145 = v126.deriveGkPassword();
																																													VerifyCredentialResponse v146 = SyntheticPasswordManager.verifyChallengeInternal(v65, v145, 0, p2);
																																													VerifyCredentialResponse v144 = v146;
																																													SyntheticPasswordManager$AuthenticationResult.gkResponse = v144;
																																													if (SyntheticPasswordManager$AuthenticationResult.authToken == 0) {
																																														boolean v148 = SyntheticPasswordManager.hasState(""metrics"", v61, p2);
																																														boolean v147 = v148;
																																														if (v147 != 0) {
																																															byte[] v150 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveMetricsKey();
																																															[B v151 = new [B(0);
																																															VersionedPasswordMetrics v152 = new VersionedPasswordMetrics(p1);
																																															byte[] v154 = v152.serialize();
																																															byte[] v155 = SyntheticPasswordCrypto.encrypt(v150, v151, v154);
																																															SyntheticPasswordManager.saveState(""metrics"", v155, v61, p2);
																																															SyntheticPasswordManager$AuthenticationResult v74 = v75;
																																															if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
																																																byte[] v158 = this.PERSONALIZATION_PASSWORD_HASH;
																																																if (this.mVersion != 3) {
																																																	SP800Derive v160 = new SP800Derive(this.mSyntheticPassword);
																																																	byte[] v162 = SyntheticPasswordManager.-$$Nest$sfgetPERSONALISATION_CONTEXT();
																																																	byte[] v163 = v160.withContext(v158, v162);
																																																	byte[] v159 = v163;
																																																	byte[] v157 = v159;
																																																	p0.scheduleGc();
																																																	return v157;
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:5,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @10 exception:8,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
2 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = arraylength 1,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 1,3 @3 exception:4,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 2,6,5 @8 exception:7,
return 2,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 5,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 9,2 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @27 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, getProvider()Ljava/security/Provider; > 16 @35 exception:17,
20 = invokestatic < Application, Ljavax/crypto/KeyGenerator, getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator; > 15,18 @39 exception:19,
21 = new <Application,Landroid/security/keystore/KeyGenParameterSpec$Builder>@43,
invokespecial < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, <init>(Ljava/lang/String;I)V > 21,14,22 @46 exception:23,
26 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setKeySize(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 21,24 @51 exception:25,
28 = new <Application,[Ljava/lang/String>@5729 ,
31 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 26,28 @61 exception:30,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, keyNamespace()I > @65 exception:32,
35 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setNamespace(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 31,33 @69 exception:34,
37 = new <Application,[Ljava/lang/String>@7529 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 35,37 @79 exception:38,
41 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationRequired(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 39,29 @84 exception:40,
42 = getstatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, CACHE_TIMEOUT_SECONDS, <Primordial,I> >,
44 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationValidityDurationSeconds(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 41,42 @90 exception:43,
46 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, build()Landroid/security/keystore/KeyGenParameterSpec; > 44 @94 exception:45,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(Ljava/security/spec/AlgorithmParameterSpec;)V > 20,46 @98 exception:47,
49 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 20 @101 exception:48,
62 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 60 @107 exception:61,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;)V > 62,29,49 @111 exception:63,
65 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 3 @114 exception:64,
67 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 62,65 @118 exception:66,
69 = invokevirtual < Application, Ljavax/crypto/Cipher, getIV()[B > 62 @122 exception:68,
74 = getCaughtException ,
77 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 56,75,74 @150 exception:76,
monitorexit 4,
return,
return 40,
goto (from iindex= 7 to iindex = 13),
16 = phi  2,9,
19 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @31 exception:20,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
3 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getPersistentDataBlockManager()Lcom/android/server/PersistentDataBlockManagerInternal; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokeinterface < Application, Lcom/android/server/PersistentDataBlockManagerInternal, getFrpCredentialHandle()[B > 3 @9 exception:5,
8 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, fromBytes([B)Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 6 @13 exception:7,
return 8,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(ne, to iindex=-1) 21,7,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @49 exception:22,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getLong(Ljava/lang/String;JI)J > 1,3,4,2 @5 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 6,2,3,4 @5 exception:7,
return 8,
return 6,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @55 exception:25,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
7 = new <Application,Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy>@20,
invokespecial < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy, <init>(Landroid/os/IBinder;)V > 7,1 @22 exception:8,
return 7,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
28 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 24,26,23,16,3,7 @61 exception:27,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@8,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @10 exception:8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,9,3,5 @16 exception:10,
5 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readSyntheticPasswordState(IJLjava/lang/String;)[B > 5,4,3,2 @2 exception:6,
return 7,
13 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData; > 11 @20 exception:12,
2 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData>@0,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, <init>()V > 2 @2 exception:3,
4 = arraylength 1,
6 = invokestatic < Application, Ljava/nio/ByteBuffer, allocate(I)Ljava/nio/ByteBuffer; > 4 @6 exception:5,
7 = arraylength 1,
10 = invokevirtual < Application, Ljava/nio/ByteBuffer, put([BII)Ljava/nio/ByteBuffer; > 6,1,8,7 @12 exception:9,
12 = invokevirtual < Application, Ljava/nio/ByteBuffer, flip()Ljava/nio/Buffer; > 6 @15 exception:11,
14 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 6 @18 exception:13,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > = 14,
16 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 6 @24 exception:15,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptN, <Primordial,B> > = 16,
18 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 6 @30 exception:17,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptR, <Primordial,B> > = 18,
20 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 6 @36 exception:19,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptP, <Primordial,B> > = 20,
22 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 6 @42 exception:21,
23 = new <Primordial,[B>@4622 ,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, salt, <Primordial,[B> > = 23,
25 = invokevirtual < Application, Ljava/nio/ByteBuffer, get([B)Ljava/nio/ByteBuffer; > 6,23 @50 exception:24,
27 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 6 @53 exception:26,
conditional branch(le, to iindex=-1) 27,8,
28 = new <Primordial,[B>@5927 ,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, passwordHandle, <Primordial,[B> > = 28,
30 = invokevirtual < Application, Ljava/nio/ByteBuffer, get([B)Ljava/nio/ByteBuffer; > 6,28 @63 exception:29,
goto (from iindex= 32 to iindex = 4),
return 2,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 4,14 @26 exception:15,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 16,18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, computePasswordToken(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData;)[B > 1,4,13 @71 exception:20,
5 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, DEFAULT_PASSWORD, <Primordial,[B> >,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, salt, <Primordial,[B> > 3,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptN, <Primordial,B> > 3,
16 = binaryop(SHL) 15 , 14,
17 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptR, <Primordial,B> > 3,
18 = binaryop(SHL) 15 , 17,
19 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptP, <Primordial,B> > 3,
20 = binaryop(SHL) 15 , 19,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, scrypt([B[BIIII)[B > 1,10,13,16,18,20,21 @32 exception:22,
return 23,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,5 @75 exception:22,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,4,2,3 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
9 = arraylength 6,
conditional branch(eq, to iindex=-1) 9,10,
12 = invokestatic < Application, Ljava/nio/ByteBuffer, allocate(I)Ljava/nio/ByteBuffer; > 10 @15 exception:11,
13 = arraylength 6,
15 = invokevirtual < Application, Ljava/nio/ByteBuffer, put([BII)Ljava/nio/ByteBuffer; > 12,6,8,13 @21 exception:14,
17 = invokevirtual < Application, Ljava/nio/ByteBuffer, flip()Ljava/nio/Buffer; > 12 @24 exception:16,
19 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 12 @27 exception:18,
conditional branch(eq, to iindex=-1) 19,20,
22 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 12 @57 exception:21,
return 22,
conditional branch(eq, to iindex=-1) 23,24,
99 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @82 exception:98,
conditional branch(ne, to iindex=-1) 99,18,
101 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, passwordTokenToWeaverKey([B)[B > 1,21 @98 exception:100,
103 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,23,101 @102 exception:102,
conditional branch(eq, to iindex=-1) 2,4,
5 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > 1,
6 = getfield < Application, Landroid/hardware/weaver/V1_0/WeaverConfig, slots, <Primordial,I> > 5,
conditional branch(ge, to iindex=-1) 2,6,
conditional branch(ne, to iindex=-1) 3,11,
12 = arraylength 3,
13 = getfield < Application, Landroid/hardware/weaver/V1_0/WeaverConfig, keySize, <Primordial,I> > 5,
conditional branch(ne, to iindex=-1) 12,13,
21 = phi  18,3,
23 = new <Application,[Lcom/android/internal/widget/VerifyCredentialResponse>@2222 ,
24 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > 1,
26 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, toByteArrayList([B)Ljava/util/ArrayList; > 21 @27 exception:25,
27 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda1>@31,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda1, <init>([Lcom/android/internal/widget/VerifyCredentialResponse;I)V > 27,23,2 @33 exception:28,
invokeinterface < Application, Landroid/hardware/weaver/V1_0/IWeaver, read(ILjava/util/ArrayList;Landroid/hardware/weaver/V1_0/IWeaver$readCallback;)V > 24,2,26,27 @36 exception:29,
goto (from iindex= 21 to iindex = 29),
50 = arrayload 23[11],
return 50,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 103,
105 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 103 @108 exception:104,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(eq, to iindex=-1) 105,18,
106 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 7,
108 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 106 @119 exception:107,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mGatekeeperHAT, <Primordial,[B> > 1,
return 2,
110 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderWeaverSecret([B[B)[B > 1,21,108 @123 exception:109,
4 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALISATION_WEAVER_PASSWORD, <Primordial,[B> >,
6 = new <Primordial,[[B>@35 ,
arraystore 6[7] = 3,
9 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, personalisedHash([B[[B)[B > 4,6 @8 exception:8,
10 = arraylength 2,
11 = arraylength 9,
12 = binaryop(add) 10 , 11,
13 = new <Primordial,[B>@1512 ,
14 = arraylength 2,
invokestatic < Application, Ljava/lang/System, arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V > 2,7,13,7,14 @18 exception:15,
16 = arraylength 2,
17 = arraylength 9,
invokestatic < Application, Ljava/lang/System, arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V > 9,7,13,16,17 @23 exception:18,
return 13,
111 = phi  93,29,
113 = phi  97,110,
goto (from iindex= 67 to iindex = 148),
conditional branch(eq, to iindex=-1) 6,18,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 6 @279 exception:117,
goto (from iindex= 142 to iindex = 9),
127 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,18,113,111,5 @298 exception:126,
9 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,7,2,6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob; > 9 @19 exception:11,
13 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mVersion, <Primordial,B> > 12,
conditional branch(eq, to iindex=-1) 13,14,
conditional branch(eq, to iindex=-1) 13,15,
conditional branch(ne, to iindex=-1) 13,16,
goto (from iindex= 20 to iindex = 9),
20 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mType, <Primordial,B> > 12,
conditional branch(ne, to iindex=-1) 20,3,
conditional branch(ne, to iindex=-1) 13,16,
30 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getKeyName(J)Ljava/lang/String; > 1,2 @49 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mContent, <Primordial,[B> > 12,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, decryptBlobV1(Ljava/lang/String;[B[B)[B > 30,31,4 @55 exception:32,
goto (from iindex= 33 to iindex = 11),
34 = phi  33,28,
conditional branch(ne, to iindex=-1) 34,10,
39 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken>@95,
40 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mVersion, <Primordial,B> > 12,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, <init>(B)V > 39,40 @99 exception:41,
conditional branch(eq, to iindex=-1) 3,16,
conditional branch(ne, to iindex=-1) 3,15,
goto (from iindex= 55 to iindex = 5),
44 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadEscrowData(Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;I)Z > 1,39,6 @111 exception:43,
conditional branch(ne, to iindex=-1) 44,10,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, recreateFromEscrow([B)V > 39,34 @138 exception:45,
49 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mVersion, <Primordial,B> > 12,
conditional branch(ne, to iindex=-1) 49,16,
50 = new <Application,Ljava/lang/StringBuilder>@145,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 50 @147 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 50,52 @152 exception:53,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 50,6 @155 exception:55,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 50,57 @160 exception:58,
61 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 50,3 @163 exception:60,
63 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 50 @166 exception:62,
65 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 38,63 @170 exception:64,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, createSyntheticPasswordBlob(JBLcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;[BJI)V > 1,2,3,39,4,5,6 @184 exception:66,
return 39,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 127,
129 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,127,29,5 @310 exception:128,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 3 @0 exception:6,
9 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,7,4,5 @8 exception:8,
return 9,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 129,
130 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
conditional branch(eq, to iindex=-1) 130,18,
132 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasPasswordMetrics(JI)Z > 1,3,5 @320 exception:131,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,4,2,3 @3 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 132,18,
133 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, savePasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)V > 1,4,133,3,5 @336 exception:134,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveMetricsKey()[B > 3 @0 exception:6,
9 = new <Primordial,[B>@58 ,
10 = new <Application,Lcom/android/server/locksettings/VersionedPasswordMetrics>@7,
invokespecial < Application, Lcom/android/server/locksettings/VersionedPasswordMetrics, <init>(Lcom/android/internal/widget/LockscreenCredential;)V > 10,2 @9 exception:11,
13 = invokevirtual < Application, Lcom/android/server/locksettings/VersionedPasswordMetrics, serialize()[B > 10 @12 exception:12,
15 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, encrypt([B[B[B)[B > 7,9,13 @16 exception:14,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveState(Ljava/lang/String;[BJI)V > 1,16,15,4,5 @26 exception:17,
return,
return 7,
29 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 28,
conditional branch(ne, to iindex=-1) 29,7,
31 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePasswordHashFactor()[B > 29 @81 exception:30,
3 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, -$$Nest$sfgetPERSONALIZATION_PASSWORD_HASH()[B > @0 exception:2,
1 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALIZATION_PASSWORD_HASH, <Primordial,[B> >,
return 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePassword([B)[B > 1,3 @4 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, mVersion, <Primordial,B> > 1,
conditional branch(ne, to iindex=-1) 3,4,
11 = new <Application,Lcom/android/server/locksettings/SP800Derive>@5,
12 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, mSyntheticPassword, <Primordial,[B> > 1,
invokespecial < Application, Lcom/android/server/locksettings/SP800Derive, <init>([B)V > 11,12 @9 exception:13,
15 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, -$$Nest$sfgetPERSONALISATION_CONTEXT()[B > @12 exception:14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/SP800Derive, withContext([B[B)[B > 11,2,15 @16 exception:16,
return 17,
return 5,
monitorexit 19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @86 exception:32,
return 31,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
","public byte[] getHashFactor(LockscreenCredential p1, int p2){
	UserManager v4 = LockSettingsService.getUserManagerFromCache(p2);
	boolean v5 = v4.isCredentialSharableWithParent();
	boolean v3 = v5;
	if (v3 == 0) {
		boolean v7 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p2);
		boolean v6 = v7;
		if (v6 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				String v10 = LockSettingsStorage.getChildProfileLockFile(p2);
				byte[] v11 = LockSettingsStorage.readFile(v10);
				byte[] v9 = v11;
				if (v9 == 0) {
					byte[] v12 = Arrays.copyOfRange(v9, 0, 12);
					byte[] v13 = Arrays.copyOfRange(v9, 12, v9.length);
					StringBuilder v14 = new StringBuilder();
					StringBuilder v16 = v14.append(""profile_key_name_decrypt_"");
					StringBuilder v17 = v14.append(p2);
					String v18 = v14.toString();
					Key v19 = this.mJavaKeyStore.getKey(v18, 0);
					Cipher v20 = Cipher.getInstance(""AES/GCM/NoPadding"");
					GCMParameterSpec v21 = new GCMParameterSpec(128,v12);
					v20.init(2, v19, v21);
					byte[] v24 = v20.doFinal(v13);
					LockscreenCredential v26 = new LockscreenCredential(4,v27);
					byte[] v27 = Arrays.copyOf(v24, v24.length);
					LockscreenCredential v25 = v26;
					Arrays.fill(v24, 0);
					boolean v31 = this.mEncryptedPasswords.contains(p2);
					if (v31 == 0) {
						UserInfo v32 = this.mUserManager.getProfileParent(p2);
						if (v32 == 0) {
							if (UserInfo.id == 0) {
								String v33 = ManagedProfilePasswordCache.getEncryptionKeyName(p2);
								Provider v34 = this.mKeyStore.getProvider();
								KeyGenerator v35 = KeyGenerator.getInstance(""AES"", v34);
								KeyGenParameterSpec$Builder v36 = new KeyGenParameterSpec$Builder(v33,3);
								KeyGenParameterSpec$Builder v38 = v36.setKeySize(256);
								String v39 = new String(1);
								KeyGenParameterSpec$Builder v40 = v38.setBlockModes(v39);
								int v41 = SyntheticPasswordCrypto.keyNamespace();
								KeyGenParameterSpec$Builder v42 = v40.setNamespace(v41);
								String v43 = new String(1);
								KeyGenParameterSpec$Builder v44 = v42.setEncryptionPaddings(v43);
								KeyGenParameterSpec$Builder v45 = v44.setUserAuthenticationRequired(1);
								KeyGenParameterSpec$Builder v46 = v45.setUserAuthenticationValidityDurationSeconds(this.CACHE_TIMEOUT_SECONDS);
								KeyGenParameterSpec v47 = v46.build();
								v35.init(v47);
								SecretKey v49 = v35.generateKey();
								Cipher v50 = Cipher.getInstance(""AES/GCM/NoPadding"");
								v50.init(1, v49);
								byte[] v52 = v25.getCredential();
								byte[] v53 = v50.doFinal(v52);
								byte[] v54 = v50.getIV();
								LockscreenCredential v8 = v25;
								if (p2 != -9999) {
									PersistentDataBlockManagerInternal v58 = LockSettingsStorage.getPersistentDataBlockManager();
									if (v58 != 0) {
										byte[] v59 = v58.getFrpCredentialHandle();
										LockSettingsStorage$PersistentData v60 = LockSettingsStorage$PersistentData.fromBytes(v59);
										LockSettingsStorage$PersistentData v57 = v60;
										if (LockSettingsStorage$PersistentData.type == 1) {
											if (LockSettingsStorage$PersistentData.type != 2) {
												boolean v56 = 0;
												if (v56 != 0) {
													long v64 = this.mStorage.getLong(""sp-handle"", 0, p2);
													long v62 = v64;
													long v61 = v62;
													if (this.mGateKeeperService == 0) {
														IBinder v66 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
														if (v66 == 0) {
															LockSettingsService$GateKeeperDiedRecipient v67 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
															v66.linkToDeath(v67, 0);
															if (v66 != 0) {
																IInterface v71 = v66.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
																if (v71 == 0) {
																	if (v71 instanceof IGateKeeperService == 0) {
																		IGateKeeperService$Stub$Proxy v72 = new IGateKeeperService$Stub$Proxy(v66);
																		IGateKeeperService v70 = v72;
																		this.mGateKeeperService = v70;
																		IGateKeeperService v65 = v70;
																		SyntheticPasswordManager$AuthenticationResult v75 = new SyntheticPasswordManager$AuthenticationResult();
																		byte[] v78 = this.mStorage.readSyntheticPasswordState(p2, v61, ""pwd"");
																		byte[] v77 = v78;
																		SyntheticPasswordManager$PasswordData v80 = new SyntheticPasswordManager$PasswordData();
																		ByteBuffer v82 = ByteBuffer.allocate(v77.length);
																		ByteBuffer v83 = v82.put(v77, 0, v77.length);
																		Buffer v84 = v82.flip();
																		int v85 = v82.getInt();
																		this.credentialType = v85;
																		byte v86 = v82.get();
																		this.scryptN = v86;
																		byte v87 = v82.get();
																		this.scryptR = v87;
																		byte v88 = v82.get();
																		this.scryptP = v88;
																		int v89 = v82.getInt();
																		[B v90 = new [B(v89);
																		this.salt = v90;
																		ByteBuffer v91 = v82.get(v90);
																		int v92 = v82.getInt();
																		if (v92 <= 0) {
																			[B v93 = new [B(v92);
																			this.passwordHandle = v93;
																			ByteBuffer v94 = v82.get(v93);
																			SyntheticPasswordManager$PasswordData v79 = v80;
																			if (SyntheticPasswordManager$PasswordData.credentialType != 2) {
																				int v96 = LockscreenCredential.getType();
																				if (v96 == 4) {
																					int v97 = LockscreenCredential.getType();
																					if (v97 != 3) {
																						boolean v95 = 1;
																						if (v95 != 0) {
																							boolean v99 = p1.isNone();
																							if (v99 == 0) {
																								byte[] v100 = SyntheticPasswordManager.scrypt(this.DEFAULT_PASSWORD, SyntheticPasswordManager$PasswordData.salt, (1 << SyntheticPasswordManager$PasswordData.scryptN), (1 << SyntheticPasswordManager$PasswordData.scryptR), (1 << SyntheticPasswordManager$PasswordData.scryptP), 32);
																								byte[] v98 = v100;
																								byte[] v102 = SyntheticPasswordManager.loadState(""weaver"", v61, p2);
																								if (v102 == 0) {
																									if (v102.length == 5) {
																										ByteBuffer v103 = ByteBuffer.allocate(5);
																										ByteBuffer v104 = v103.put(v102, 0, v102.length);
																										Buffer v105 = v103.flip();
																										byte v106 = v103.get();
																										if (v106 == 1) {
																											int v107 = v103.getInt();
																											int v101 = v107;
																											if (v101 == -1) {
																												boolean v108 = SyntheticPasswordManager.isWeaverAvailable();
																												if (v108 != 0) {
																													byte[] v109 = SyntheticPasswordManager.passwordTokenToWeaverKey(v98);
																													if (v101 == -1) {
																														if (v101 >= WeaverConfig.slots) {
																															if (v109 != 0) {
																																if (v109.length != WeaverConfig.keySize) {
																																	VerifyCredentialResponse v111 = new VerifyCredentialResponse(1);
																																	ArrayList v112 = SyntheticPasswordManager.toByteArrayList(new [B());
																																	SyntheticPasswordManager$$ExternalSyntheticLambda1 v113 = new SyntheticPasswordManager$$ExternalSyntheticLambda1(v111,v101);
																																	this.mWeaver.read(v101, v112, v113);
																																	VerifyCredentialResponse v110 = v111[0];
																																	SyntheticPasswordManager$AuthenticationResult.gkResponse = v110;
																																	int v116 = this.mResponseCode;
																																	if (v116 == 0) {
																																		byte[] v117 = this.mGatekeeperHAT;
																																		[[B v119 = new [[B(1);
																																		byte[] v120 = SyntheticPasswordCrypto.personalisedHash(this.PERSONALISATION_WEAVER_PASSWORD, v119);
																																		[B v121 = new [B((v98.length + v120.length));
																																		System.arraycopy(v98, 0, v121, 0, v98.length);
																																		System.arraycopy(v120, 0, v121, v98.length, v120.length);
																																		byte[] v118 = v121;
																																		if (0 == 0) {
																																			0.onCredentialVerified();
																																			byte[] v126 = SyntheticPasswordManager.loadState(""spblob"", v61, p2);
																																			if (v126 != 0) {
																																				SyntheticPasswordManager$SyntheticPasswordBlob v127 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v126);
																																				if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion == 3) {
																																					if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion == 2) {
																																						if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion != 1) {
																																							if (SyntheticPasswordManager$SyntheticPasswordBlob.mType != 0) {
																																								if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion != 1) {
																																									String v128 = SyntheticPasswordManager.getKeyName(v61);
																																									byte[] v129 = SyntheticPasswordCrypto.decryptBlobV1(v128, SyntheticPasswordManager$SyntheticPasswordBlob.mContent, transformUnderSecdiscardable());
																																									if (v129 != 0) {
																																										SyntheticPasswordManager$AuthenticationToken v130 = new SyntheticPasswordManager$AuthenticationToken(SyntheticPasswordManager$SyntheticPasswordBlob.mVersion);
																																										if (0 == 1) {
																																											if (0 != 2) {
																																												boolean v132 = SyntheticPasswordManager.loadEscrowData(v130, p2);
																																												if (v132 != 0) {
																																													v130.recreateFromEscrow(v129);
																																													if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion != 1) {
																																														SyntheticPasswordManager.createSyntheticPasswordBlob(v61, 0, v130, transformUnderSecdiscardable(), sidFromPasswordHandle(), p2);
																																														SyntheticPasswordManager$AuthenticationToken v125 = v130;
																																														SyntheticPasswordManager$AuthenticationResult.authToken = v125;
																																														byte[] v144 = v125.deriveGkPassword();
																																														VerifyCredentialResponse v145 = SyntheticPasswordManager.verifyChallengeInternal(v65, v144, 0, p2);
																																														VerifyCredentialResponse v143 = v145;
																																														SyntheticPasswordManager$AuthenticationResult.gkResponse = v143;
																																														if (SyntheticPasswordManager$AuthenticationResult.authToken == 0) {
																																															boolean v147 = SyntheticPasswordManager.hasState(""metrics"", v61, p2);
																																															boolean v146 = v147;
																																															if (v146 != 0) {
																																																byte[] v149 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveMetricsKey();
																																																[B v150 = new [B(0);
																																																VersionedPasswordMetrics v151 = new VersionedPasswordMetrics(p1);
																																																byte[] v153 = v151.serialize();
																																																byte[] v154 = SyntheticPasswordCrypto.encrypt(v149, v150, v153);
																																																SyntheticPasswordManager.saveState(""metrics"", v154, v61, p2);
																																																SyntheticPasswordManager$AuthenticationResult v74 = v75;
																																																if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
																																																	byte[] v157 = this.PERSONALIZATION_PASSWORD_HASH;
																																																	if (this.mVersion != 3) {
																																																		SP800Derive v159 = new SP800Derive(this.mSyntheticPassword);
																																																		byte[] v161 = SyntheticPasswordManager.-$$Nest$sfgetPERSONALISATION_CONTEXT();
																																																		byte[] v162 = v159.withContext(v157, v161);
																																																		byte[] v158 = v162;
																																																		byte[] v156 = v158;
																																																		p0.scheduleGc();
																																																		return v156;
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getHashFactor(Lcom/android/internal/widget/LockscreenCredential;I)[B","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:5,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @10 exception:8,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
2 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = arraylength 1,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 1,3 @3 exception:4,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 2,6,5 @8 exception:7,
return 2,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 5,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 9,2 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @27 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, getProvider()Ljava/security/Provider; > 16 @35 exception:17,
20 = invokestatic < Application, Ljavax/crypto/KeyGenerator, getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator; > 15,18 @39 exception:19,
21 = new <Application,Landroid/security/keystore/KeyGenParameterSpec$Builder>@43,
invokespecial < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, <init>(Ljava/lang/String;I)V > 21,14,22 @46 exception:23,
26 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setKeySize(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 21,24 @51 exception:25,
28 = new <Application,[Ljava/lang/String>@5729 ,
31 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 26,28 @61 exception:30,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, keyNamespace()I > @65 exception:32,
35 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setNamespace(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 31,33 @69 exception:34,
37 = new <Application,[Ljava/lang/String>@7529 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 35,37 @79 exception:38,
41 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationRequired(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 39,29 @84 exception:40,
42 = getstatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, CACHE_TIMEOUT_SECONDS, <Primordial,I> >,
44 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationValidityDurationSeconds(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 41,42 @90 exception:43,
46 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, build()Landroid/security/keystore/KeyGenParameterSpec; > 44 @94 exception:45,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(Ljava/security/spec/AlgorithmParameterSpec;)V > 20,46 @98 exception:47,
49 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 20 @101 exception:48,
62 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 60 @107 exception:61,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;)V > 62,29,49 @111 exception:63,
65 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 3 @114 exception:64,
67 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 62,65 @118 exception:66,
69 = invokevirtual < Application, Ljavax/crypto/Cipher, getIV()[B > 62 @122 exception:68,
74 = getCaughtException ,
77 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 56,75,74 @150 exception:76,
monitorexit 4,
return,
return 40,
goto (from iindex= 7 to iindex = 13),
16 = phi  2,9,
19 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 19,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @31 exception:20,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
3 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getPersistentDataBlockManager()Lcom/android/server/PersistentDataBlockManagerInternal; > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokeinterface < Application, Lcom/android/server/PersistentDataBlockManagerInternal, getFrpCredentialHandle()[B > 3 @9 exception:5,
8 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, fromBytes([B)Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 6 @13 exception:7,
return 8,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(ne, to iindex=-1) 21,7,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @49 exception:22,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getLong(Ljava/lang/String;JI)J > 1,3,4,2 @5 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 6,2,3,4 @5 exception:7,
return 8,
return 6,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @55 exception:25,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
9 = checkcast <Application,Landroid/service/gatekeeper/IGateKeeperService>5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
return 9,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
28 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 24,26,23,16,3,7 @61 exception:27,
7 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult>@8,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, <init>()V > 7 @10 exception:8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,9,3,5 @16 exception:10,
5 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readSyntheticPasswordState(IJLjava/lang/String;)[B > 5,4,3,2 @2 exception:6,
return 7,
13 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData; > 11 @20 exception:12,
2 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData>@0,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, <init>()V > 2 @2 exception:3,
4 = arraylength 1,
6 = invokestatic < Application, Ljava/nio/ByteBuffer, allocate(I)Ljava/nio/ByteBuffer; > 4 @6 exception:5,
7 = arraylength 1,
10 = invokevirtual < Application, Ljava/nio/ByteBuffer, put([BII)Ljava/nio/ByteBuffer; > 6,1,8,7 @12 exception:9,
12 = invokevirtual < Application, Ljava/nio/ByteBuffer, flip()Ljava/nio/Buffer; > 6 @15 exception:11,
14 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 6 @18 exception:13,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > = 14,
16 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 6 @24 exception:15,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptN, <Primordial,B> > = 16,
18 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 6 @30 exception:17,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptR, <Primordial,B> > = 18,
20 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 6 @36 exception:19,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptP, <Primordial,B> > = 20,
22 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 6 @42 exception:21,
23 = new <Primordial,[B>@4622 ,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, salt, <Primordial,[B> > = 23,
25 = invokevirtual < Application, Ljava/nio/ByteBuffer, get([B)Ljava/nio/ByteBuffer; > 6,23 @50 exception:24,
27 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 6 @53 exception:26,
conditional branch(le, to iindex=-1) 27,8,
28 = new <Primordial,[B>@5927 ,
putfield 2.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, passwordHandle, <Primordial,[B> > = 28,
30 = invokevirtual < Application, Ljava/nio/ByteBuffer, get([B)Ljava/nio/ByteBuffer; > 6,28 @63 exception:29,
goto (from iindex= 32 to iindex = 4),
return 2,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, credentialType, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 4,14 @26 exception:15,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 16,18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, computePasswordToken(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData;)[B > 1,4,13 @71 exception:20,
5 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @0 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, DEFAULT_PASSWORD, <Primordial,[B> >,
goto (from iindex= 4 to iindex = 5),
10 = phi  9,8,
13 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, salt, <Primordial,[B> > 3,
14 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptN, <Primordial,B> > 3,
16 = binaryop(SHL) 15 , 14,
17 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptR, <Primordial,B> > 3,
18 = binaryop(SHL) 15 , 17,
19 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$PasswordData, scryptP, <Primordial,B> > 3,
20 = binaryop(SHL) 15 , 19,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, scrypt([B[BIIII)[B > 1,10,13,16,18,20,21 @32 exception:22,
return 23,
23 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,3,5 @75 exception:22,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,4,2,3 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,8,
9 = arraylength 6,
conditional branch(eq, to iindex=-1) 9,10,
12 = invokestatic < Application, Ljava/nio/ByteBuffer, allocate(I)Ljava/nio/ByteBuffer; > 10 @15 exception:11,
13 = arraylength 6,
15 = invokevirtual < Application, Ljava/nio/ByteBuffer, put([BII)Ljava/nio/ByteBuffer; > 12,6,8,13 @21 exception:14,
17 = invokevirtual < Application, Ljava/nio/ByteBuffer, flip()Ljava/nio/Buffer; > 12 @24 exception:16,
19 = invokevirtual < Application, Ljava/nio/ByteBuffer, get()B > 12 @27 exception:18,
conditional branch(eq, to iindex=-1) 19,20,
22 = invokevirtual < Application, Ljava/nio/ByteBuffer, getInt()I > 12 @57 exception:21,
return 22,
conditional branch(eq, to iindex=-1) 23,24,
99 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, isWeaverAvailable()Z > 1 @82 exception:98,
conditional branch(ne, to iindex=-1) 99,18,
101 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, passwordTokenToWeaverKey([B)[B > 1,21 @98 exception:100,
103 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, weaverVerify(I[B)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,23,101 @102 exception:102,
conditional branch(eq, to iindex=-1) 2,4,
5 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > 1,
6 = getfield < Application, Landroid/hardware/weaver/V1_0/WeaverConfig, slots, <Primordial,I> > 5,
conditional branch(ge, to iindex=-1) 2,6,
conditional branch(ne, to iindex=-1) 3,11,
17 = getfield < Application, Landroid/hardware/weaver/V1_0/WeaverConfig, keySize, <Primordial,I> > 5,
18 = new <Primordial,[B>@1317 ,
goto (from iindex= 8 to iindex = 6),
21 = phi  18,3,
23 = new <Application,[Lcom/android/internal/widget/VerifyCredentialResponse>@2222 ,
24 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > 1,
26 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, toByteArrayList([B)Ljava/util/ArrayList; > 21 @27 exception:25,
27 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda1>@31,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda1, <init>([Lcom/android/internal/widget/VerifyCredentialResponse;I)V > 27,23,2 @33 exception:28,
invokeinterface < Application, Landroid/hardware/weaver/V1_0/IWeaver, read(ILjava/util/ArrayList;Landroid/hardware/weaver/V1_0/IWeaver$readCallback;)V > 24,2,26,27 @36 exception:29,
goto (from iindex= 21 to iindex = 29),
50 = arrayload 23[11],
return 50,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 103,
105 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 103 @108 exception:104,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(eq, to iindex=-1) 105,18,
106 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 7,
108 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getGatekeeperHAT()[B > 106 @119 exception:107,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mGatekeeperHAT, <Primordial,[B> > 1,
return 2,
110 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, transformUnderWeaverSecret([B[B)[B > 1,21,108 @123 exception:109,
4 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALISATION_WEAVER_PASSWORD, <Primordial,[B> >,
6 = new <Primordial,[[B>@35 ,
arraystore 6[7] = 3,
9 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, personalisedHash([B[[B)[B > 4,6 @8 exception:8,
10 = arraylength 2,
11 = arraylength 9,
12 = binaryop(add) 10 , 11,
13 = new <Primordial,[B>@1512 ,
14 = arraylength 2,
invokestatic < Application, Ljava/lang/System, arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V > 2,7,13,7,14 @18 exception:15,
16 = arraylength 2,
17 = arraylength 9,
invokestatic < Application, Ljava/lang/System, arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V > 9,7,13,16,17 @23 exception:18,
return 13,
111 = phi  93,29,
113 = phi  97,110,
goto (from iindex= 67 to iindex = 148),
conditional branch(eq, to iindex=-1) 6,18,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 6 @279 exception:117,
goto (from iindex= 142 to iindex = 9),
127 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapSyntheticPasswordBlob(JB[BJI)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken; > 1,3,18,113,111,5 @298 exception:126,
9 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,7,2,6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
12 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob; > 9 @19 exception:11,
13 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mVersion, <Primordial,B> > 12,
conditional branch(eq, to iindex=-1) 13,14,
conditional branch(eq, to iindex=-1) 13,15,
conditional branch(ne, to iindex=-1) 13,16,
goto (from iindex= 20 to iindex = 9),
20 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mType, <Primordial,B> > 12,
conditional branch(ne, to iindex=-1) 20,3,
conditional branch(ne, to iindex=-1) 13,16,
30 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getKeyName(J)Ljava/lang/String; > 1,2 @49 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mContent, <Primordial,[B> > 12,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, decryptBlobV1(Ljava/lang/String;[B[B)[B > 30,31,4 @55 exception:32,
goto (from iindex= 33 to iindex = 11),
34 = phi  33,28,
conditional branch(ne, to iindex=-1) 34,10,
39 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken>@95,
40 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mVersion, <Primordial,B> > 12,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, <init>(B)V > 39,40 @99 exception:41,
conditional branch(eq, to iindex=-1) 3,16,
conditional branch(ne, to iindex=-1) 3,15,
goto (from iindex= 55 to iindex = 5),
44 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadEscrowData(Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;I)Z > 1,39,6 @111 exception:43,
conditional branch(ne, to iindex=-1) 44,10,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, recreateFromEscrow([B)V > 39,34 @138 exception:45,
49 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mVersion, <Primordial,B> > 12,
conditional branch(ne, to iindex=-1) 49,16,
50 = new <Application,Ljava/lang/StringBuilder>@145,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 50 @147 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 50,52 @152 exception:53,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 50,6 @155 exception:55,
59 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 50,57 @160 exception:58,
61 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 50,3 @163 exception:60,
63 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 50 @166 exception:62,
65 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 38,63 @170 exception:64,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, createSyntheticPasswordBlob(JBLcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;[BJI)V > 1,2,3,39,4,5,6 @184 exception:66,
return 39,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > = 127,
129 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,127,29,5 @310 exception:128,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 3 @0 exception:6,
9 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,7,4,5 @8 exception:8,
return 9,
putfield 7.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > = 129,
130 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
conditional branch(eq, to iindex=-1) 130,18,
132 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasPasswordMetrics(JI)Z > 1,3,5 @320 exception:131,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,4,2,3 @3 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 132,18,
133 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 7,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, savePasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)V > 1,4,133,3,5 @336 exception:134,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveMetricsKey()[B > 3 @0 exception:6,
9 = new <Primordial,[B>@58 ,
10 = new <Application,Lcom/android/server/locksettings/VersionedPasswordMetrics>@7,
invokespecial < Application, Lcom/android/server/locksettings/VersionedPasswordMetrics, <init>(Lcom/android/internal/widget/LockscreenCredential;)V > 10,2 @9 exception:11,
13 = invokevirtual < Application, Lcom/android/server/locksettings/VersionedPasswordMetrics, serialize()[B > 10 @12 exception:12,
15 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, encrypt([B[B[B)[B > 7,9,13 @16 exception:14,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveState(Ljava/lang/String;[BJI)V > 1,16,15,4,5 @26 exception:17,
return,
return 7,
29 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 28,
conditional branch(ne, to iindex=-1) 29,7,
31 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePasswordHashFactor()[B > 29 @81 exception:30,
3 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, -$$Nest$sfgetPERSONALIZATION_PASSWORD_HASH()[B > @0 exception:2,
1 = getstatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, PERSONALIZATION_PASSWORD_HASH, <Primordial,[B> >,
return 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, derivePassword([B)[B > 1,3 @4 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, mVersion, <Primordial,B> > 1,
conditional branch(ne, to iindex=-1) 3,4,
11 = new <Application,Lcom/android/server/locksettings/SP800Derive>@5,
12 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, mSyntheticPassword, <Primordial,[B> > 1,
invokespecial < Application, Lcom/android/server/locksettings/SP800Derive, <init>([B)V > 11,12 @9 exception:13,
15 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, -$$Nest$sfgetPERSONALISATION_CONTEXT()[B > @12 exception:14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/SP800Derive, withContext([B[B)[B > 11,2,15 @16 exception:16,
return 17,
return 5,
monitorexit 19,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @86 exception:32,
return 31,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
","public byte[] getHashFactor(LockscreenCredential p1, int p2){
	UserManager v4 = LockSettingsService.getUserManagerFromCache(p2);
	boolean v5 = v4.isCredentialSharableWithParent();
	boolean v3 = v5;
	if (v3 == 0) {
		boolean v7 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p2);
		boolean v6 = v7;
		if (v6 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				String v10 = LockSettingsStorage.getChildProfileLockFile(p2);
				byte[] v11 = LockSettingsStorage.readFile(v10);
				byte[] v9 = v11;
				if (v9 == 0) {
					byte[] v12 = Arrays.copyOfRange(v9, 0, 12);
					byte[] v13 = Arrays.copyOfRange(v9, 12, v9.length);
					StringBuilder v14 = new StringBuilder();
					StringBuilder v16 = v14.append(""profile_key_name_decrypt_"");
					StringBuilder v17 = v14.append(p2);
					String v18 = v14.toString();
					Key v19 = this.mJavaKeyStore.getKey(v18, 0);
					Cipher v20 = Cipher.getInstance(""AES/GCM/NoPadding"");
					GCMParameterSpec v21 = new GCMParameterSpec(128,v12);
					v20.init(2, v19, v21);
					byte[] v24 = v20.doFinal(v13);
					LockscreenCredential v26 = new LockscreenCredential(4,v27);
					byte[] v27 = Arrays.copyOf(v24, v24.length);
					LockscreenCredential v25 = v26;
					Arrays.fill(v24, 0);
					boolean v31 = this.mEncryptedPasswords.contains(p2);
					if (v31 == 0) {
						UserInfo v32 = this.mUserManager.getProfileParent(p2);
						if (v32 == 0) {
							if (UserInfo.id == 0) {
								String v33 = ManagedProfilePasswordCache.getEncryptionKeyName(p2);
								Provider v34 = this.mKeyStore.getProvider();
								KeyGenerator v35 = KeyGenerator.getInstance(""AES"", v34);
								KeyGenParameterSpec$Builder v36 = new KeyGenParameterSpec$Builder(v33,3);
								KeyGenParameterSpec$Builder v38 = v36.setKeySize(256);
								String v39 = new String(1);
								KeyGenParameterSpec$Builder v40 = v38.setBlockModes(v39);
								int v41 = SyntheticPasswordCrypto.keyNamespace();
								KeyGenParameterSpec$Builder v42 = v40.setNamespace(v41);
								String v43 = new String(1);
								KeyGenParameterSpec$Builder v44 = v42.setEncryptionPaddings(v43);
								KeyGenParameterSpec$Builder v45 = v44.setUserAuthenticationRequired(1);
								KeyGenParameterSpec$Builder v46 = v45.setUserAuthenticationValidityDurationSeconds(this.CACHE_TIMEOUT_SECONDS);
								KeyGenParameterSpec v47 = v46.build();
								v35.init(v47);
								SecretKey v49 = v35.generateKey();
								Cipher v50 = Cipher.getInstance(""AES/GCM/NoPadding"");
								v50.init(1, v49);
								byte[] v52 = v25.getCredential();
								byte[] v53 = v50.doFinal(v52);
								byte[] v54 = v50.getIV();
								LockscreenCredential v8 = v25;
								if (p2 != -9999) {
									PersistentDataBlockManagerInternal v58 = LockSettingsStorage.getPersistentDataBlockManager();
									if (v58 != 0) {
										byte[] v59 = v58.getFrpCredentialHandle();
										LockSettingsStorage$PersistentData v60 = LockSettingsStorage$PersistentData.fromBytes(v59);
										LockSettingsStorage$PersistentData v57 = v60;
										if (LockSettingsStorage$PersistentData.type == 1) {
											if (LockSettingsStorage$PersistentData.type != 2) {
												boolean v56 = 0;
												if (v56 != 0) {
													long v64 = this.mStorage.getLong(""sp-handle"", 0, p2);
													long v62 = v64;
													long v61 = v62;
													if (this.mGateKeeperService == 0) {
														IBinder v66 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
														if (v66 == 0) {
															LockSettingsService$GateKeeperDiedRecipient v67 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
															v66.linkToDeath(v67, 0);
															if (v66 != 0) {
																IInterface v71 = v66.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
																if (v71 == 0) {
																	if (v71 instanceof IGateKeeperService == 0) {
																		IGateKeeperService v70 = v71;
																		this.mGateKeeperService = v70;
																		IGateKeeperService v65 = v70;
																		SyntheticPasswordManager$AuthenticationResult v73 = new SyntheticPasswordManager$AuthenticationResult();
																		byte[] v76 = this.mStorage.readSyntheticPasswordState(p2, v61, ""pwd"");
																		byte[] v75 = v76;
																		SyntheticPasswordManager$PasswordData v78 = new SyntheticPasswordManager$PasswordData();
																		ByteBuffer v80 = ByteBuffer.allocate(v75.length);
																		ByteBuffer v81 = v80.put(v75, 0, v75.length);
																		Buffer v82 = v80.flip();
																		int v83 = v80.getInt();
																		this.credentialType = v83;
																		byte v84 = v80.get();
																		this.scryptN = v84;
																		byte v85 = v80.get();
																		this.scryptR = v85;
																		byte v86 = v80.get();
																		this.scryptP = v86;
																		int v87 = v80.getInt();
																		[B v88 = new [B(v87);
																		this.salt = v88;
																		ByteBuffer v89 = v80.get(v88);
																		int v90 = v80.getInt();
																		if (v90 <= 0) {
																			[B v91 = new [B(v90);
																			this.passwordHandle = v91;
																			ByteBuffer v92 = v80.get(v91);
																			SyntheticPasswordManager$PasswordData v77 = v78;
																			if (SyntheticPasswordManager$PasswordData.credentialType != 2) {
																				int v94 = LockscreenCredential.getType();
																				if (v94 == 4) {
																					int v95 = LockscreenCredential.getType();
																					if (v95 != 3) {
																						boolean v93 = 1;
																						if (v93 != 0) {
																							boolean v97 = p1.isNone();
																							if (v97 == 0) {
																								byte[] v98 = SyntheticPasswordManager.scrypt(this.DEFAULT_PASSWORD, SyntheticPasswordManager$PasswordData.salt, (1 << SyntheticPasswordManager$PasswordData.scryptN), (1 << SyntheticPasswordManager$PasswordData.scryptR), (1 << SyntheticPasswordManager$PasswordData.scryptP), 32);
																								byte[] v96 = v98;
																								byte[] v100 = SyntheticPasswordManager.loadState(""weaver"", v61, p2);
																								if (v100 == 0) {
																									if (v100.length == 5) {
																										ByteBuffer v101 = ByteBuffer.allocate(5);
																										ByteBuffer v102 = v101.put(v100, 0, v100.length);
																										Buffer v103 = v101.flip();
																										byte v104 = v101.get();
																										if (v104 == 1) {
																											int v105 = v101.getInt();
																											int v99 = v105;
																											if (v99 == -1) {
																												boolean v106 = SyntheticPasswordManager.isWeaverAvailable();
																												if (v106 != 0) {
																													byte[] v107 = SyntheticPasswordManager.passwordTokenToWeaverKey(v96);
																													if (v99 == -1) {
																														if (v99 >= WeaverConfig.slots) {
																															if (v107 != 0) {
																																[B v109 = new [B(WeaverConfig.keySize);
																																VerifyCredentialResponse v110 = new VerifyCredentialResponse(1);
																																ArrayList v111 = SyntheticPasswordManager.toByteArrayList(v109);
																																SyntheticPasswordManager$$ExternalSyntheticLambda1 v112 = new SyntheticPasswordManager$$ExternalSyntheticLambda1(v110,v99);
																																this.mWeaver.read(v99, v111, v112);
																																VerifyCredentialResponse v108 = v110[0];
																																SyntheticPasswordManager$AuthenticationResult.gkResponse = v108;
																																int v115 = this.mResponseCode;
																																if (v115 == 0) {
																																	byte[] v116 = this.mGatekeeperHAT;
																																	[[B v118 = new [[B(1);
																																	byte[] v119 = SyntheticPasswordCrypto.personalisedHash(this.PERSONALISATION_WEAVER_PASSWORD, v118);
																																	[B v120 = new [B((v96.length + v119.length));
																																	System.arraycopy(v96, 0, v120, 0, v96.length);
																																	System.arraycopy(v119, 0, v120, v96.length, v119.length);
																																	byte[] v117 = v120;
																																	if (0 == 0) {
																																		0.onCredentialVerified();
																																		byte[] v125 = SyntheticPasswordManager.loadState(""spblob"", v61, p2);
																																		if (v125 != 0) {
																																			SyntheticPasswordManager$SyntheticPasswordBlob v126 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v125);
																																			if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion == 3) {
																																				if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion == 2) {
																																					if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion != 1) {
																																						if (SyntheticPasswordManager$SyntheticPasswordBlob.mType != 0) {
																																							if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion != 1) {
																																								String v127 = SyntheticPasswordManager.getKeyName(v61);
																																								byte[] v128 = SyntheticPasswordCrypto.decryptBlobV1(v127, SyntheticPasswordManager$SyntheticPasswordBlob.mContent, transformUnderSecdiscardable());
																																								if (v128 != 0) {
																																									SyntheticPasswordManager$AuthenticationToken v129 = new SyntheticPasswordManager$AuthenticationToken(SyntheticPasswordManager$SyntheticPasswordBlob.mVersion);
																																									if (0 == 1) {
																																										if (0 != 2) {
																																											boolean v131 = SyntheticPasswordManager.loadEscrowData(v129, p2);
																																											if (v131 != 0) {
																																												v129.recreateFromEscrow(v128);
																																												if (SyntheticPasswordManager$SyntheticPasswordBlob.mVersion != 1) {
																																													SyntheticPasswordManager.createSyntheticPasswordBlob(v61, 0, v129, transformUnderSecdiscardable(), sidFromPasswordHandle(), p2);
																																													SyntheticPasswordManager$AuthenticationToken v124 = v129;
																																													SyntheticPasswordManager$AuthenticationResult.authToken = v124;
																																													byte[] v143 = v124.deriveGkPassword();
																																													VerifyCredentialResponse v144 = SyntheticPasswordManager.verifyChallengeInternal(v65, v143, 0, p2);
																																													VerifyCredentialResponse v142 = v144;
																																													SyntheticPasswordManager$AuthenticationResult.gkResponse = v142;
																																													if (SyntheticPasswordManager$AuthenticationResult.authToken == 0) {
																																														boolean v146 = SyntheticPasswordManager.hasState(""metrics"", v61, p2);
																																														boolean v145 = v146;
																																														if (v145 != 0) {
																																															byte[] v148 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveMetricsKey();
																																															[B v149 = new [B(0);
																																															VersionedPasswordMetrics v150 = new VersionedPasswordMetrics(p1);
																																															byte[] v152 = v150.serialize();
																																															byte[] v153 = SyntheticPasswordCrypto.encrypt(v148, v149, v152);
																																															SyntheticPasswordManager.saveState(""metrics"", v153, v61, p2);
																																															SyntheticPasswordManager$AuthenticationResult v72 = v73;
																																															if (SyntheticPasswordManager$AuthenticationResult.authToken != 0) {
																																																byte[] v156 = this.PERSONALIZATION_PASSWORD_HASH;
																																																if (this.mVersion != 3) {
																																																	SP800Derive v158 = new SP800Derive(this.mSyntheticPassword);
																																																	byte[] v160 = SyntheticPasswordManager.-$$Nest$sfgetPERSONALISATION_CONTEXT();
																																																	byte[] v161 = v158.withContext(v156, v160);
																																																	byte[] v157 = v161;
																																																	byte[] v155 = v157;
																																																	p0.scheduleGc();
																																																	return v155;
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","requireStrongAuth(II)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,3 @0 exception:4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, requireStrongAuth(II)V > 5,2,3 @5 exception:6,
return,","depth : 0
-----
","public void requireStrongAuth(int p1, int p2){
	this.mStrongAuth.requireStrongAuth(p1, p2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","requireStrongAuth(II)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,3 @0 exception:4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, requireStrongAuth(II)V > 5,2,3 @5 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(lt, to iindex=-1) 3,5,
goto (from iindex= 3 to iindex = 10),
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
12 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 9,10,2,3 @18 exception:11,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 12 @22 exception:13,
return,
return,","depth : 0
-----
depth : 1
-----
","public void requireStrongAuth(int p1, int p2){
	if (p2 == -1) {
		if (p2 < 0) {
			Message v3 = this.mHandler.obtainMessage(1, p1, p2);
			v3.sendToTarget();
			return;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","resetKeyStore(I)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:3,
4 = new <Application,Ljava/util/ArrayList>@3,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @5 exception:5,
6 = new <Application,Ljava/util/ArrayList>@8,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 6 @10 exception:7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
10 = invokevirtual < Application, Landroid/os/UserManager, getProfiles(I)Ljava/util/List; > 8,2 @15 exception:9,
12 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 10 @19 exception:11,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 12 @29 exception:16,
18 = checkcast <Application,Landroid/content/pm/UserInfo>17 <Application,Landroid/content/pm/UserInfo>,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,19 @37 exception:20,
conditional branch(eq, to iindex=-1) 21,15,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,24 @45 exception:25,
conditional branch(ne, to iindex=-1) 26,15,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
29 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
31 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasChildProfileLock(I)Z > 28,29 @55 exception:30,
conditional branch(eq, to iindex=-1) 31,15,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
56 = invokevirtual < Application, Landroid/os/UserManager, getProfileIdsWithDisabled(I)[I > 54,2 @93 exception:55,
57 = arraylength 56,
73 = phi  72,15,
conditional branch(ge, to iindex=-1) 73,57,
77 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
79 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 77,2 @127 exception:78,
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 79 @131 exception:80,
conditional branch(eq, to iindex=-1) 81,15,
85 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, clearNamespace(IJ)I > 82,83 @140 exception:84,
105 = phi  15,104,15,
91 = invokeinterface < Application, Ljava/util/List, size()I > 4 @143 exception:90,
conditional branch(ge, to iindex=-1) 105,91,
93 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 4,105 @149 exception:92,
94 = checkcast <Application,Ljava/lang/Integer>93 <Application,Ljava/lang/Integer>,
96 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 94 @155 exception:95,
98 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 6,105 @159 exception:97,
99 = checkcast <Application,Lcom/android/internal/widget/LockscreenCredential>98 <Application,Lcom/android/internal/widget/LockscreenCredential>,
conditional branch(eq, to iindex=-1) 96,53,
conditional branch(eq, to iindex=-1) 99,15,
104 = binaryop(add) 105 , 67,
goto (from iindex= 91 to iindex = -36),
105 = phi  15,104,15,
91 = invokeinterface < Application, Ljava/util/List, size()I > 4 @143 exception:90,
conditional branch(ge, to iindex=-1) 105,91,
return,","depth : 0
-----
","public void resetKeyStore(int p1){
	ArrayList v2 = new ArrayList();
	ArrayList v4 = new ArrayList();
	List v6 = this.mUserManager.getProfiles(p1);
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		boolean v10 = p0.isCredentialSharableWithParent(UserInfo.id);
		if (v10 == 0) {
			boolean v11 = p0.getSeparateProfileChallengeEnabledInternal(UserInfo.id);
			if (v11 != 0) {
				boolean v12 = this.mStorage.hasChildProfileLock(UserInfo.id);
				if (v12 == 0) {
					boolean v13 = v7.hasNext();
					if (v13 == 0) {
						[I v14 = this.mUserManager.getProfileIdsWithDisabled(p1);
						if (0 >= v14.length) {
							UserInfo v15 = this.mUserManager.getUserInfo(p1);
							boolean v16 = v15.isPrimary();
							if (v16 == 0) {
								int v17 = AndroidKeyStoreMaintenance.clearNamespace(2, 102);
								int v18 = v2.size();
								if (0 >= v18) {
									Object v19 = v2.get(0);
									int v20 = v19.intValue();
									Object v21 = v4.get(0);
									if (v20 == -1) {
										if (v21 == 0) {
											int v22 = v2.size();
											if (0 >= v22) {
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","resetKeyStore(I)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:3,
4 = new <Application,Ljava/util/ArrayList>@3,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @5 exception:5,
6 = new <Application,Ljava/util/ArrayList>@8,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 6 @10 exception:7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
10 = invokevirtual < Application, Landroid/os/UserManager, getProfiles(I)Ljava/util/List; > 8,2 @15 exception:9,
12 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 10 @19 exception:11,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 12 @29 exception:16,
18 = checkcast <Application,Landroid/content/pm/UserInfo>17 <Application,Landroid/content/pm/UserInfo>,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,19 @37 exception:20,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 21,15,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,24 @45 exception:25,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 26,15,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
29 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
31 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasChildProfileLock(I)Z > 28,29 @55 exception:30,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 31,15,
32 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
34 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,32 @63 exception:33,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
return 40,
36 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 6,34 @67 exception:35,
37 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
39 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 37 @72 exception:38,
41 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 4,39 @76 exception:40,
goto (from iindex= 37 to iindex = -56),
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
56 = invokevirtual < Application, Landroid/os/UserManager, getProfileIdsWithDisabled(I)[I > 54,2 @93 exception:55,
57 = arraylength 56,
73 = phi  72,15,
conditional branch(ge, to iindex=-1) 73,57,
77 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
79 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 77,2 @127 exception:78,
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 79 @131 exception:80,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 4 to iindex = 2),
6 = phi  3,5,
return 6,
conditional branch(eq, to iindex=-1) 81,15,
85 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, clearNamespace(IJ)I > 82,83 @140 exception:84,
5 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, getService()Landroid/security/maintenance/IKeystoreMaintenance; > @2 exception:4,
invokeinterface < Application, Landroid/security/maintenance/IKeystoreMaintenance, clearNamespace(IJ)V > 5,1,2 @6 exception:6,
return 19,
105 = phi  15,104,15,
91 = invokeinterface < Application, Ljava/util/List, size()I > 4 @143 exception:90,
conditional branch(ge, to iindex=-1) 105,91,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public void resetKeyStore(int p1){
	ArrayList v2 = new ArrayList();
	ArrayList v4 = new ArrayList();
	List v6 = this.mUserManager.getProfiles(p1);
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		UserManager v11 = LockSettingsService.getUserManagerFromCache(UserInfo.id);
		boolean v12 = v11.isCredentialSharableWithParent();
		boolean v10 = v12;
		if (v10 == 0) {
			boolean v14 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, UserInfo.id);
			boolean v13 = v14;
			if (v13 != 0) {
				String v16 = LockSettingsStorage.getChildProfileLockFile(UserInfo.id);
				boolean v17 = LockSettingsStorage.hasFile(v16);
				boolean v15 = v17;
				if (v15 == 0) {
					byte[] v19 = this.mStorage.readChildProfileLock(UserInfo.id);
					if (v19 == 0) {
						byte[] v20 = Arrays.copyOfRange(v19, 0, 12);
						byte[] v21 = Arrays.copyOfRange(v19, 12, v19.length);
						StringBuilder v22 = new StringBuilder();
						StringBuilder v24 = v22.append(""profile_key_name_decrypt_"");
						StringBuilder v25 = v22.append(UserInfo.id);
						String v26 = v22.toString();
						Key v27 = this.mJavaKeyStore.getKey(v26, 0);
						Cipher v28 = Cipher.getInstance(""AES/GCM/NoPadding"");
						GCMParameterSpec v29 = new GCMParameterSpec(128,v20);
						v28.init(2, v27, v29);
						byte[] v32 = v28.doFinal(v21);
						LockscreenCredential v33 = LockscreenCredential.createManagedPassword(v32);
						Arrays.fill(v32, 0);
						this.mManagedProfilePasswordCache.storePassword(UserInfo.id, v33);
						LockscreenCredential v18 = v33;
						boolean v36 = v4.add(v18);
						Integer v37 = Integer.valueOf(UserInfo.id);
						boolean v38 = v2.add(v37);
						boolean v39 = v7.hasNext();
						if (v39 == 0) {
							[I v40 = this.mUserManager.getProfileIdsWithDisabled(p1);
							if (0 >= v40.length) {
								UserInfo v41 = this.mUserManager.getUserInfo(p1);
								if ((this.flags & 1) != 1) {
									boolean v42 = 1;
									if (v42 == 0) {
										IKeystoreMaintenance v44 = AndroidKeyStoreMaintenance.getService();
										v44.clearNamespace(2, 102);
										int v43 = 0;
										int v46 = v2.size();
										if (0 >= v46) {
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","resetKeyStore(I)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:3,
4 = new <Application,Ljava/util/ArrayList>@3,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @5 exception:5,
6 = new <Application,Ljava/util/ArrayList>@8,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 6 @10 exception:7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
10 = invokevirtual < Application, Landroid/os/UserManager, getProfiles(I)Ljava/util/List; > 8,2 @15 exception:9,
12 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 10 @19 exception:11,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 12 @29 exception:16,
18 = checkcast <Application,Landroid/content/pm/UserInfo>17 <Application,Landroid/content/pm/UserInfo>,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,19 @37 exception:20,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 21,15,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,24 @45 exception:25,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 26,15,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
29 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
31 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasChildProfileLock(I)Z > 28,29 @55 exception:30,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 31,15,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
56 = invokevirtual < Application, Landroid/os/UserManager, getProfileIdsWithDisabled(I)[I > 54,2 @93 exception:55,
57 = arraylength 56,
73 = phi  72,15,
conditional branch(ge, to iindex=-1) 73,57,
77 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
79 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 77,2 @127 exception:78,
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 79 @131 exception:80,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 4 to iindex = 2),
6 = phi  3,5,
return 6,
conditional branch(eq, to iindex=-1) 81,15,
85 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, clearNamespace(IJ)I > 82,83 @140 exception:84,
5 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, getService()Landroid/security/maintenance/IKeystoreMaintenance; > @2 exception:4,
invokeinterface < Application, Landroid/security/maintenance/IKeystoreMaintenance, clearNamespace(IJ)V > 5,1,2 @6 exception:6,
return 19,
105 = phi  15,104,15,
91 = invokeinterface < Application, Ljava/util/List, size()I > 4 @143 exception:90,
conditional branch(ge, to iindex=-1) 105,91,
93 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 4,105 @149 exception:92,
94 = checkcast <Application,Ljava/lang/Integer>93 <Application,Ljava/lang/Integer>,
96 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 94 @155 exception:95,
98 = invokeinterface < Application, Ljava/util/List, get(I)Ljava/lang/Object; > 6,105 @159 exception:97,
99 = checkcast <Application,Lcom/android/internal/widget/LockscreenCredential>98 <Application,Lcom/android/internal/widget/LockscreenCredential>,
conditional branch(eq, to iindex=-1) 96,53,
conditional branch(eq, to iindex=-1) 99,15,
104 = binaryop(add) 105 , 67,
goto (from iindex= 91 to iindex = -36),
105 = phi  15,104,15,
91 = invokeinterface < Application, Ljava/util/List, size()I > 4 @143 exception:90,
conditional branch(ge, to iindex=-1) 105,91,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public void resetKeyStore(int p1){
	ArrayList v2 = new ArrayList();
	ArrayList v4 = new ArrayList();
	List v6 = this.mUserManager.getProfiles(p1);
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		UserManager v11 = LockSettingsService.getUserManagerFromCache(UserInfo.id);
		boolean v12 = v11.isCredentialSharableWithParent();
		boolean v10 = v12;
		if (v10 == 0) {
			boolean v14 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, UserInfo.id);
			boolean v13 = v14;
			if (v13 != 0) {
				String v16 = LockSettingsStorage.getChildProfileLockFile(UserInfo.id);
				boolean v17 = LockSettingsStorage.hasFile(v16);
				boolean v15 = v17;
				if (v15 == 0) {
					boolean v18 = v7.hasNext();
					if (v18 == 0) {
						[I v19 = this.mUserManager.getProfileIdsWithDisabled(p1);
						if (0 >= v19.length) {
							UserInfo v20 = this.mUserManager.getUserInfo(p1);
							if ((this.flags & 1) != 1) {
								boolean v21 = 1;
								if (v21 == 0) {
									IKeystoreMaintenance v23 = AndroidKeyStoreMaintenance.getService();
									v23.clearNamespace(2, 102);
									int v22 = 0;
									int v25 = v2.size();
									if (0 >= v25) {
										Object v26 = v2.get(0);
										int v27 = v26.intValue();
										Object v28 = v4.get(0);
										if (v27 == -1) {
											if (v28 == 0) {
												int v29 = v2.size();
												if (0 >= v29) {
													return;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","resetKeyStore(I)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:3,
4 = new <Application,Ljava/util/ArrayList>@3,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @5 exception:5,
6 = new <Application,Ljava/util/ArrayList>@8,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 6 @10 exception:7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
10 = invokevirtual < Application, Landroid/os/UserManager, getProfiles(I)Ljava/util/List; > 8,2 @15 exception:9,
12 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 10 @19 exception:11,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 12 @29 exception:16,
18 = checkcast <Application,Landroid/content/pm/UserInfo>17 <Application,Landroid/content/pm/UserInfo>,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,19 @37 exception:20,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
7 = invokevirtual < Application, Ljava/util/HashMap, containsKey(Ljava/lang/Object;)Z > 5,4 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, createPackageContextAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/Context; > 9,10,8,4 @27 exception:11,
13 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
15 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 12,13 @33 exception:14,
32 = checkcast <Application,Landroid/os/UserManager>15 <Application,Landroid/os/UserManager>,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
35 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 33,4,32 @41 exception:34,
return 32,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 21,15,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,24 @45 exception:25,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,10 @14 exception:11,
conditional branch(ne, to iindex=-1) 12,5,
15 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,5,
goto (from iindex= 15 to iindex = 3),
23 = phi  3,5,20,
return 23,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 26,15,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
29 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
31 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasChildProfileLock(I)Z > 28,29 @55 exception:30,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockCredentialFilePathForUser(ILjava/lang/String;)Ljava/lang/String; > 1,2,3 @2 exception:4,
return 5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = arraylength 4,
conditional branch(le, to iindex=-1) 6,5,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,5,
return 9,
return 6,
conditional branch(eq, to iindex=-1) 31,15,
32 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
34 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,32 @63 exception:33,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
2 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = arraylength 1,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 1,3 @3 exception:4,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 2,6,5 @8 exception:7,
return 2,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 5,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 9,2 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @27 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, getProvider()Ljava/security/Provider; > 16 @35 exception:17,
20 = invokestatic < Application, Ljavax/crypto/KeyGenerator, getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator; > 15,18 @39 exception:19,
21 = new <Application,Landroid/security/keystore/KeyGenParameterSpec$Builder>@43,
invokespecial < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, <init>(Ljava/lang/String;I)V > 21,14,22 @46 exception:23,
26 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setKeySize(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 21,24 @51 exception:25,
28 = new <Application,[Ljava/lang/String>@5729 ,
31 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 26,28 @61 exception:30,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, keyNamespace()I > @65 exception:32,
35 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setNamespace(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 31,33 @69 exception:34,
37 = new <Application,[Ljava/lang/String>@7529 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 35,37 @79 exception:38,
41 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationRequired(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 39,29 @84 exception:40,
42 = getstatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, CACHE_TIMEOUT_SECONDS, <Primordial,I> >,
44 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationValidityDurationSeconds(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 41,42 @90 exception:43,
46 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, build()Landroid/security/keystore/KeyGenParameterSpec; > 44 @94 exception:45,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(Ljava/security/spec/AlgorithmParameterSpec;)V > 20,46 @98 exception:47,
49 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 20 @101 exception:48,
62 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 60 @107 exception:61,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;)V > 62,29,49 @111 exception:63,
65 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 3 @114 exception:64,
67 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 62,65 @118 exception:66,
69 = invokevirtual < Application, Ljavax/crypto/Cipher, getIV()[B > 62 @122 exception:68,
74 = getCaughtException ,
77 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 56,75,74 @150 exception:76,
monitorexit 4,
return,
return 40,
36 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 6,34 @67 exception:35,
37 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
39 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 37 @72 exception:38,
41 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 4,39 @76 exception:40,
goto (from iindex= 37 to iindex = -56),
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
56 = invokevirtual < Application, Landroid/os/UserManager, getProfileIdsWithDisabled(I)[I > 54,2 @93 exception:55,
57 = arraylength 56,
73 = phi  72,15,
conditional branch(ge, to iindex=-1) 73,57,
77 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
79 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 77,2 @127 exception:78,
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 79 @131 exception:80,
conditional branch(eq, to iindex=-1) 81,15,
85 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, clearNamespace(IJ)I > 82,83 @140 exception:84,
5 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, getService()Landroid/security/maintenance/IKeystoreMaintenance; > @2 exception:4,
3 = invokestatic < Application, Landroid/os/ServiceManager, checkService(Ljava/lang/String;)Landroid/os/IBinder; > 1 @3 exception:2,
5 = invokestatic < Application, Landroid/security/maintenance/IKeystoreMaintenance$Stub, asInterface(Landroid/os/IBinder;)Landroid/security/maintenance/IKeystoreMaintenance; > 3 @7 exception:4,
return 5,
invokeinterface < Application, Landroid/security/maintenance/IKeystoreMaintenance, clearNamespace(IJ)V > 5,1,2 @6 exception:6,
return 19,
105 = phi  15,104,15,
91 = invokeinterface < Application, Ljava/util/List, size()I > 4 @143 exception:90,
conditional branch(ge, to iindex=-1) 105,91,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
","public void resetKeyStore(int p1){
	ArrayList v2 = new ArrayList();
	ArrayList v4 = new ArrayList();
	List v6 = this.mUserManager.getProfiles(p1);
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		UserHandle v12 = UserHandle.of(UserInfo.id);
		boolean v13 = this.mUserManagerCache.containsKey(v12);
		if (v13 == 0) {
			Context v14 = this.mContext.createPackageContextAsUser(""system"", 0, v12);
			Object v15 = v14.getSystemService(UserManage.class);
			Object v16 = this.mUserManagerCache.put(v12, v15);
			UserManager v11 = v15;
			boolean v17 = v11.isCredentialSharableWithParent();
			boolean v10 = v17;
			if (v10 == 0) {
				String v20 = LockSettingsStorage.getString(""lockscreen.profilechallenge"", 0, UserInfo.id);
				boolean v21 = TextUtils.isEmpty(v20);
				if (v21 == 0) {
					boolean v22 = v20.equals(""1"");
					if (v22 != 0) {
						boolean v23 = v20.equals(""true"");
						if (v23 == 0) {
							boolean v19 = 0;
							boolean v18 = v19;
							if (v18 != 0) {
								String v26 = LockSettingsStorage.getLockCredentialFilePathForUser(UserInfo.id, ""gatekeeper.profile.key"");
								String v25 = v26;
								byte[] v28 = LockSettingsStorage.readFile(v25);
								if (v28 == 0) {
									if (v28.length <= 0) {
										boolean v27 = 1;
										boolean v24 = v27;
										if (v24 == 0) {
											String v31 = LockSettingsStorage.getChildProfileLockFile(UserInfo.id);
											byte[] v32 = LockSettingsStorage.readFile(v31);
											byte[] v30 = v32;
											if (v30 == 0) {
												byte[] v33 = Arrays.copyOfRange(v30, 0, 12);
												byte[] v34 = Arrays.copyOfRange(v30, 12, v30.length);
												StringBuilder v35 = new StringBuilder();
												StringBuilder v37 = v35.append(""profile_key_name_decrypt_"");
												StringBuilder v38 = v35.append(UserInfo.id);
												String v39 = v35.toString();
												Key v40 = this.mJavaKeyStore.getKey(v39, 0);
												Cipher v41 = Cipher.getInstance(""AES/GCM/NoPadding"");
												GCMParameterSpec v42 = new GCMParameterSpec(128,v33);
												v41.init(2, v40, v42);
												byte[] v45 = v41.doFinal(v34);
												LockscreenCredential v47 = new LockscreenCredential(4,v48);
												byte[] v48 = Arrays.copyOf(v45, v45.length);
												LockscreenCredential v46 = v47;
												Arrays.fill(v45, 0);
												boolean v52 = this.mEncryptedPasswords.contains(UserInfo.id);
												if (v52 == 0) {
													UserInfo v53 = this.mUserManager.getProfileParent(UserInfo.id);
													if (v53 == 0) {
														if (UserInfo.id == 0) {
															String v54 = ManagedProfilePasswordCache.getEncryptionKeyName(UserInfo.id);
															Provider v55 = this.mKeyStore.getProvider();
															KeyGenerator v56 = KeyGenerator.getInstance(""AES"", v55);
															KeyGenParameterSpec$Builder v57 = new KeyGenParameterSpec$Builder(v54,3);
															KeyGenParameterSpec$Builder v59 = v57.setKeySize(256);
															String v60 = new String(1);
															KeyGenParameterSpec$Builder v61 = v59.setBlockModes(v60);
															int v62 = SyntheticPasswordCrypto.keyNamespace();
															KeyGenParameterSpec$Builder v63 = v61.setNamespace(v62);
															String v64 = new String(1);
															KeyGenParameterSpec$Builder v65 = v63.setEncryptionPaddings(v64);
															KeyGenParameterSpec$Builder v66 = v65.setUserAuthenticationRequired(1);
															KeyGenParameterSpec$Builder v67 = v66.setUserAuthenticationValidityDurationSeconds(this.CACHE_TIMEOUT_SECONDS);
															KeyGenParameterSpec v68 = v67.build();
															v56.init(v68);
															SecretKey v70 = v56.generateKey();
															Cipher v71 = Cipher.getInstance(""AES/GCM/NoPadding"");
															v71.init(1, v70);
															byte[] v73 = v46.getCredential();
															byte[] v74 = v71.doFinal(v73);
															byte[] v75 = v71.getIV();
															LockscreenCredential v29 = v46;
															boolean v77 = v4.add(v29);
															Integer v78 = Integer.valueOf(UserInfo.id);
															boolean v79 = v2.add(v78);
															boolean v80 = v7.hasNext();
															if (v80 == 0) {
																[I v81 = this.mUserManager.getProfileIdsWithDisabled(p1);
																if (0 >= v81.length) {
																	UserInfo v82 = this.mUserManager.getUserInfo(p1);
																	boolean v83 = v82.isPrimary();
																	if (v83 == 0) {
																		IBinder v86 = ServiceManager.checkService(""android.security.maintenance"");
																		IKeystoreMaintenance v87 = IKeystoreMaintenance$Stub.asInterface(v86);
																		IKeystoreMaintenance v85 = v87;
																		v85.clearNamespace(2, 102);
																		int v84 = 0;
																		int v89 = v2.size();
																		if (0 >= v89) {
																			return;
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","resetKeyStore(I)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:3,
4 = new <Application,Ljava/util/ArrayList>@3,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @5 exception:5,
6 = new <Application,Ljava/util/ArrayList>@8,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 6 @10 exception:7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
10 = invokevirtual < Application, Landroid/os/UserManager, getProfiles(I)Ljava/util/List; > 8,2 @15 exception:9,
12 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 10 @19 exception:11,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 12 @29 exception:16,
18 = checkcast <Application,Landroid/content/pm/UserInfo>17 <Application,Landroid/content/pm/UserInfo>,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,19 @37 exception:20,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
7 = invokevirtual < Application, Ljava/util/HashMap, containsKey(Ljava/lang/Object;)Z > 5,4 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, createPackageContextAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/Context; > 9,10,8,4 @27 exception:11,
13 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
15 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 12,13 @33 exception:14,
32 = checkcast <Application,Landroid/os/UserManager>15 <Application,Landroid/os/UserManager>,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
35 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 33,4,32 @41 exception:34,
return 32,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 21,15,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,24 @45 exception:25,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,10 @14 exception:11,
conditional branch(ne, to iindex=-1) 12,5,
15 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,5,
goto (from iindex= 17 to iindex = 2),
23 = phi  3,5,20,
return 23,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 26,15,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
29 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
31 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasChildProfileLock(I)Z > 28,29 @55 exception:30,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockCredentialFilePathForUser(ILjava/lang/String;)Ljava/lang/String; > 1,2,3 @2 exception:4,
return 5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = arraylength 4,
conditional branch(le, to iindex=-1) 6,5,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,5,
return 9,
return 6,
conditional branch(eq, to iindex=-1) 31,15,
32 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
34 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,32 @63 exception:33,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
2 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = arraylength 1,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 1,3 @3 exception:4,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 2,6,5 @8 exception:7,
return 2,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 5,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 9,2 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @27 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, getProvider()Ljava/security/Provider; > 16 @35 exception:17,
20 = invokestatic < Application, Ljavax/crypto/KeyGenerator, getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator; > 15,18 @39 exception:19,
21 = new <Application,Landroid/security/keystore/KeyGenParameterSpec$Builder>@43,
invokespecial < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, <init>(Ljava/lang/String;I)V > 21,14,22 @46 exception:23,
26 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setKeySize(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 21,24 @51 exception:25,
28 = new <Application,[Ljava/lang/String>@5729 ,
31 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 26,28 @61 exception:30,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, keyNamespace()I > @65 exception:32,
35 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setNamespace(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 31,33 @69 exception:34,
37 = new <Application,[Ljava/lang/String>@7529 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 35,37 @79 exception:38,
41 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationRequired(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 39,29 @84 exception:40,
42 = getstatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, CACHE_TIMEOUT_SECONDS, <Primordial,I> >,
44 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationValidityDurationSeconds(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 41,42 @90 exception:43,
46 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, build()Landroid/security/keystore/KeyGenParameterSpec; > 44 @94 exception:45,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(Ljava/security/spec/AlgorithmParameterSpec;)V > 20,46 @98 exception:47,
49 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 20 @101 exception:48,
62 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 60 @107 exception:61,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;)V > 62,29,49 @111 exception:63,
65 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 3 @114 exception:64,
67 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 62,65 @118 exception:66,
69 = invokevirtual < Application, Ljavax/crypto/Cipher, getIV()[B > 62 @122 exception:68,
74 = getCaughtException ,
77 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 56,75,74 @150 exception:76,
monitorexit 4,
return,
return 40,
36 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 6,34 @67 exception:35,
37 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
39 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 37 @72 exception:38,
41 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 4,39 @76 exception:40,
goto (from iindex= 37 to iindex = -56),
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
56 = invokevirtual < Application, Landroid/os/UserManager, getProfileIdsWithDisabled(I)[I > 54,2 @93 exception:55,
57 = arraylength 56,
73 = phi  72,15,
conditional branch(ge, to iindex=-1) 73,57,
77 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
79 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 77,2 @127 exception:78,
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 79 @131 exception:80,
conditional branch(eq, to iindex=-1) 81,15,
85 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, clearNamespace(IJ)I > 82,83 @140 exception:84,
5 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, getService()Landroid/security/maintenance/IKeystoreMaintenance; > @2 exception:4,
3 = invokestatic < Application, Landroid/os/ServiceManager, checkService(Ljava/lang/String;)Landroid/os/IBinder; > 1 @3 exception:2,
5 = invokestatic < Application, Landroid/security/maintenance/IKeystoreMaintenance$Stub, asInterface(Landroid/os/IBinder;)Landroid/security/maintenance/IKeystoreMaintenance; > 3 @7 exception:4,
return 5,
invokeinterface < Application, Landroid/security/maintenance/IKeystoreMaintenance, clearNamespace(IJ)V > 5,1,2 @6 exception:6,
return 19,
105 = phi  15,104,15,
91 = invokeinterface < Application, Ljava/util/List, size()I > 4 @143 exception:90,
conditional branch(ge, to iindex=-1) 105,91,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
","public void resetKeyStore(int p1){
	ArrayList v2 = new ArrayList();
	ArrayList v4 = new ArrayList();
	List v6 = this.mUserManager.getProfiles(p1);
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		UserHandle v12 = UserHandle.of(UserInfo.id);
		boolean v13 = this.mUserManagerCache.containsKey(v12);
		if (v13 == 0) {
			Context v14 = this.mContext.createPackageContextAsUser(""system"", 0, v12);
			Object v15 = v14.getSystemService(UserManage.class);
			Object v16 = this.mUserManagerCache.put(v12, v15);
			UserManager v11 = v15;
			boolean v17 = v11.isCredentialSharableWithParent();
			boolean v10 = v17;
			if (v10 == 0) {
				String v20 = LockSettingsStorage.getString(""lockscreen.profilechallenge"", 0, UserInfo.id);
				boolean v21 = TextUtils.isEmpty(v20);
				if (v21 == 0) {
					boolean v22 = v20.equals(""1"");
					if (v22 != 0) {
						boolean v23 = v20.equals(""true"");
						if (v23 == 0) {
							boolean v19 = 0;
							boolean v18 = v19;
							if (v18 != 0) {
								String v26 = LockSettingsStorage.getLockCredentialFilePathForUser(UserInfo.id, ""gatekeeper.profile.key"");
								String v25 = v26;
								byte[] v28 = LockSettingsStorage.readFile(v25);
								if (v28 == 0) {
									if (v28.length <= 0) {
										boolean v27 = 1;
										boolean v24 = v27;
										if (v24 == 0) {
											String v31 = LockSettingsStorage.getChildProfileLockFile(UserInfo.id);
											byte[] v32 = LockSettingsStorage.readFile(v31);
											byte[] v30 = v32;
											if (v30 == 0) {
												byte[] v33 = Arrays.copyOfRange(v30, 0, 12);
												byte[] v34 = Arrays.copyOfRange(v30, 12, v30.length);
												StringBuilder v35 = new StringBuilder();
												StringBuilder v37 = v35.append(""profile_key_name_decrypt_"");
												StringBuilder v38 = v35.append(UserInfo.id);
												String v39 = v35.toString();
												Key v40 = this.mJavaKeyStore.getKey(v39, 0);
												Cipher v41 = Cipher.getInstance(""AES/GCM/NoPadding"");
												GCMParameterSpec v42 = new GCMParameterSpec(128,v33);
												v41.init(2, v40, v42);
												byte[] v45 = v41.doFinal(v34);
												LockscreenCredential v47 = new LockscreenCredential(4,v48);
												byte[] v48 = Arrays.copyOf(v45, v45.length);
												LockscreenCredential v46 = v47;
												Arrays.fill(v45, 0);
												boolean v52 = this.mEncryptedPasswords.contains(UserInfo.id);
												if (v52 == 0) {
													UserInfo v53 = this.mUserManager.getProfileParent(UserInfo.id);
													if (v53 == 0) {
														if (UserInfo.id == 0) {
															String v54 = ManagedProfilePasswordCache.getEncryptionKeyName(UserInfo.id);
															Provider v55 = this.mKeyStore.getProvider();
															KeyGenerator v56 = KeyGenerator.getInstance(""AES"", v55);
															KeyGenParameterSpec$Builder v57 = new KeyGenParameterSpec$Builder(v54,3);
															KeyGenParameterSpec$Builder v59 = v57.setKeySize(256);
															String v60 = new String(1);
															KeyGenParameterSpec$Builder v61 = v59.setBlockModes(v60);
															int v62 = SyntheticPasswordCrypto.keyNamespace();
															KeyGenParameterSpec$Builder v63 = v61.setNamespace(v62);
															String v64 = new String(1);
															KeyGenParameterSpec$Builder v65 = v63.setEncryptionPaddings(v64);
															KeyGenParameterSpec$Builder v66 = v65.setUserAuthenticationRequired(1);
															KeyGenParameterSpec$Builder v67 = v66.setUserAuthenticationValidityDurationSeconds(this.CACHE_TIMEOUT_SECONDS);
															KeyGenParameterSpec v68 = v67.build();
															v56.init(v68);
															SecretKey v70 = v56.generateKey();
															Cipher v71 = Cipher.getInstance(""AES/GCM/NoPadding"");
															v71.init(1, v70);
															byte[] v73 = v46.getCredential();
															byte[] v74 = v71.doFinal(v73);
															byte[] v75 = v71.getIV();
															LockscreenCredential v29 = v46;
															boolean v77 = v4.add(v29);
															Integer v78 = Integer.valueOf(UserInfo.id);
															boolean v79 = v2.add(v78);
															boolean v80 = v7.hasNext();
															if (v80 == 0) {
																[I v81 = this.mUserManager.getProfileIdsWithDisabled(p1);
																if (0 >= v81.length) {
																	UserInfo v82 = this.mUserManager.getUserInfo(p1);
																	boolean v83 = v82.isPrimary();
																	if (v83 == 0) {
																		IBinder v86 = ServiceManager.checkService(""android.security.maintenance"");
																		IKeystoreMaintenance v87 = IKeystoreMaintenance$Stub.asInterface(v86);
																		IKeystoreMaintenance v85 = v87;
																		v85.clearNamespace(2, 102);
																		int v84 = 0;
																		int v89 = v2.size();
																		if (0 >= v89) {
																			return;
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","resetKeyStore(I)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:3,
4 = new <Application,Ljava/util/ArrayList>@3,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 4 @5 exception:5,
6 = new <Application,Ljava/util/ArrayList>@8,
invokespecial < Application, Ljava/util/ArrayList, <init>()V > 6 @10 exception:7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
10 = invokevirtual < Application, Landroid/os/UserManager, getProfiles(I)Ljava/util/List; > 8,2 @15 exception:9,
12 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 10 @19 exception:11,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 12 @29 exception:16,
18 = checkcast <Application,Landroid/content/pm/UserInfo>17 <Application,Landroid/content/pm/UserInfo>,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,19 @37 exception:20,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
4 = invokestatic < Application, Landroid/os/UserHandle, of(I)Landroid/os/UserHandle; > 2 @0 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
7 = invokevirtual < Application, Ljava/util/HashMap, containsKey(Ljava/lang/Object;)Z > 5,4 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, createPackageContextAsUser(Ljava/lang/String;ILandroid/os/UserHandle;)Landroid/content/Context; > 9,10,8,4 @27 exception:11,
13 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
15 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/Class;)Ljava/lang/Object; > 12,13 @33 exception:14,
32 = checkcast <Application,Landroid/os/UserManager>15 <Application,Landroid/os/UserManager>,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManagerCache, <Application,Ljava/util/HashMap> > 1,
35 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 33,4,32 @41 exception:34,
return 32,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 21,15,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
26 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,24 @45 exception:25,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
goto (from iindex= 6 to iindex = 22),
23 = phi  3,5,20,
return 23,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 26,15,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
29 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
31 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasChildProfileLock(I)Z > 28,29 @55 exception:30,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockCredentialFilePathForUser(ILjava/lang/String;)Ljava/lang/String; > 1,2,3 @2 exception:4,
return 5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = arraylength 4,
conditional branch(le, to iindex=-1) 6,5,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,5,
return 9,
return 6,
conditional branch(eq, to iindex=-1) 31,15,
32 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
34 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,32 @63 exception:33,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
2 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = arraylength 1,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 1,3 @3 exception:4,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 2,6,5 @8 exception:7,
return 2,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 5,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 9,2 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @27 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, getProvider()Ljava/security/Provider; > 16 @35 exception:17,
20 = invokestatic < Application, Ljavax/crypto/KeyGenerator, getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator; > 15,18 @39 exception:19,
21 = new <Application,Landroid/security/keystore/KeyGenParameterSpec$Builder>@43,
invokespecial < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, <init>(Ljava/lang/String;I)V > 21,14,22 @46 exception:23,
26 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setKeySize(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 21,24 @51 exception:25,
28 = new <Application,[Ljava/lang/String>@5729 ,
31 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 26,28 @61 exception:30,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, keyNamespace()I > @65 exception:32,
35 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setNamespace(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 31,33 @69 exception:34,
37 = new <Application,[Ljava/lang/String>@7529 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 35,37 @79 exception:38,
41 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationRequired(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 39,29 @84 exception:40,
42 = getstatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, CACHE_TIMEOUT_SECONDS, <Primordial,I> >,
44 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationValidityDurationSeconds(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 41,42 @90 exception:43,
46 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, build()Landroid/security/keystore/KeyGenParameterSpec; > 44 @94 exception:45,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(Ljava/security/spec/AlgorithmParameterSpec;)V > 20,46 @98 exception:47,
49 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 20 @101 exception:48,
62 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 60 @107 exception:61,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;)V > 62,29,49 @111 exception:63,
65 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 3 @114 exception:64,
67 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 62,65 @118 exception:66,
69 = invokevirtual < Application, Ljavax/crypto/Cipher, getIV()[B > 62 @122 exception:68,
74 = getCaughtException ,
77 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 56,75,74 @150 exception:76,
monitorexit 4,
return,
return 40,
36 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 6,34 @67 exception:35,
37 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 18,
39 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 37 @72 exception:38,
41 = invokeinterface < Application, Ljava/util/List, add(Ljava/lang/Object;)Z > 4,39 @76 exception:40,
goto (from iindex= 37 to iindex = -56),
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @23 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
54 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
56 = invokevirtual < Application, Landroid/os/UserManager, getProfileIdsWithDisabled(I)[I > 54,2 @93 exception:55,
57 = arraylength 56,
73 = phi  72,15,
conditional branch(ge, to iindex=-1) 73,57,
77 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
79 = invokevirtual < Application, Landroid/os/UserManager, getUserInfo(I)Landroid/content/pm/UserInfo; > 77,2 @127 exception:78,
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 79 @131 exception:80,
conditional branch(eq, to iindex=-1) 81,15,
85 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, clearNamespace(IJ)I > 82,83 @140 exception:84,
5 = invokestatic < Application, Landroid/security/AndroidKeyStoreMaintenance, getService()Landroid/security/maintenance/IKeystoreMaintenance; > @2 exception:4,
3 = invokestatic < Application, Landroid/os/ServiceManager, checkService(Ljava/lang/String;)Landroid/os/IBinder; > 1 @3 exception:2,
5 = invokestatic < Application, Landroid/security/maintenance/IKeystoreMaintenance$Stub, asInterface(Landroid/os/IBinder;)Landroid/security/maintenance/IKeystoreMaintenance; > 3 @7 exception:4,
return 5,
invokeinterface < Application, Landroid/security/maintenance/IKeystoreMaintenance, clearNamespace(IJ)V > 5,1,2 @6 exception:6,
return 19,
105 = phi  15,104,15,
91 = invokeinterface < Application, Ljava/util/List, size()I > 4 @143 exception:90,
conditional branch(ge, to iindex=-1) 105,91,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
","public void resetKeyStore(int p1){
	ArrayList v2 = new ArrayList();
	ArrayList v4 = new ArrayList();
	List v6 = this.mUserManager.getProfiles(p1);
	Iterator v7 = v6.iterator();
	boolean v8 = v7.hasNext();
	if (v8 == 0) {
		Object v9 = v7.next();
		UserHandle v12 = UserHandle.of(UserInfo.id);
		boolean v13 = this.mUserManagerCache.containsKey(v12);
		if (v13 == 0) {
			Context v14 = this.mContext.createPackageContextAsUser(""system"", 0, v12);
			Object v15 = v14.getSystemService(UserManage.class);
			Object v16 = this.mUserManagerCache.put(v12, v15);
			UserManager v11 = v15;
			boolean v17 = v11.isCredentialSharableWithParent();
			boolean v10 = v17;
			if (v10 == 0) {
				String v20 = LockSettingsStorage.getString(""lockscreen.profilechallenge"", 0, UserInfo.id);
				boolean v21 = TextUtils.isEmpty(v20);
				if (v21 == 0) {
					boolean v19 = 0;
					boolean v18 = v19;
					if (v18 != 0) {
						String v24 = LockSettingsStorage.getLockCredentialFilePathForUser(UserInfo.id, ""gatekeeper.profile.key"");
						String v23 = v24;
						byte[] v26 = LockSettingsStorage.readFile(v23);
						if (v26 == 0) {
							if (v26.length <= 0) {
								boolean v25 = 1;
								boolean v22 = v25;
								if (v22 == 0) {
									String v29 = LockSettingsStorage.getChildProfileLockFile(UserInfo.id);
									byte[] v30 = LockSettingsStorage.readFile(v29);
									byte[] v28 = v30;
									if (v28 == 0) {
										byte[] v31 = Arrays.copyOfRange(v28, 0, 12);
										byte[] v32 = Arrays.copyOfRange(v28, 12, v28.length);
										StringBuilder v33 = new StringBuilder();
										StringBuilder v35 = v33.append(""profile_key_name_decrypt_"");
										StringBuilder v36 = v33.append(UserInfo.id);
										String v37 = v33.toString();
										Key v38 = this.mJavaKeyStore.getKey(v37, 0);
										Cipher v39 = Cipher.getInstance(""AES/GCM/NoPadding"");
										GCMParameterSpec v40 = new GCMParameterSpec(128,v31);
										v39.init(2, v38, v40);
										byte[] v43 = v39.doFinal(v32);
										LockscreenCredential v45 = new LockscreenCredential(4,v46);
										byte[] v46 = Arrays.copyOf(v43, v43.length);
										LockscreenCredential v44 = v45;
										Arrays.fill(v43, 0);
										boolean v50 = this.mEncryptedPasswords.contains(UserInfo.id);
										if (v50 == 0) {
											UserInfo v51 = this.mUserManager.getProfileParent(UserInfo.id);
											if (v51 == 0) {
												if (UserInfo.id == 0) {
													String v52 = ManagedProfilePasswordCache.getEncryptionKeyName(UserInfo.id);
													Provider v53 = this.mKeyStore.getProvider();
													KeyGenerator v54 = KeyGenerator.getInstance(""AES"", v53);
													KeyGenParameterSpec$Builder v55 = new KeyGenParameterSpec$Builder(v52,3);
													KeyGenParameterSpec$Builder v57 = v55.setKeySize(256);
													String v58 = new String(1);
													KeyGenParameterSpec$Builder v59 = v57.setBlockModes(v58);
													int v60 = SyntheticPasswordCrypto.keyNamespace();
													KeyGenParameterSpec$Builder v61 = v59.setNamespace(v60);
													String v62 = new String(1);
													KeyGenParameterSpec$Builder v63 = v61.setEncryptionPaddings(v62);
													KeyGenParameterSpec$Builder v64 = v63.setUserAuthenticationRequired(1);
													KeyGenParameterSpec$Builder v65 = v64.setUserAuthenticationValidityDurationSeconds(this.CACHE_TIMEOUT_SECONDS);
													KeyGenParameterSpec v66 = v65.build();
													v54.init(v66);
													SecretKey v68 = v54.generateKey();
													Cipher v69 = Cipher.getInstance(""AES/GCM/NoPadding"");
													v69.init(1, v68);
													byte[] v71 = v44.getCredential();
													byte[] v72 = v69.doFinal(v71);
													byte[] v73 = v69.getIV();
													LockscreenCredential v27 = v44;
													boolean v75 = v4.add(v27);
													Integer v76 = Integer.valueOf(UserInfo.id);
													boolean v77 = v2.add(v76);
													boolean v78 = v7.hasNext();
													if (v78 == 0) {
														[I v79 = this.mUserManager.getProfileIdsWithDisabled(p1);
														if (0 >= v79.length) {
															UserInfo v80 = this.mUserManager.getUserInfo(p1);
															boolean v81 = v80.isPrimary();
															if (v81 == 0) {
																IBinder v84 = ServiceManager.checkService(""android.security.maintenance"");
																IKeystoreMaintenance v85 = IKeystoreMaintenance$Stub.asInterface(v84);
																IKeystoreMaintenance v83 = v85;
																v83.clearNamespace(2, 102);
																int v82 = 0;
																int v87 = v2.size();
																if (0 >= v87) {
																	return;
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","removeCachedUnifiedChallenge(I)V","0","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, removePassword(I)V > 3,2 @2 exception:4,
return,","depth : 0
-----
","public void removeCachedUnifiedChallenge(int p1){
	this.mManagedProfilePasswordCache.removePassword(p1);
	return;
}
","NONE"
"Lcom/android/server/locksettings/LockSettingsService","removeCachedUnifiedChallenge(I)V","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, removePassword(I)V > 3,2 @2 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
5 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @3 exception:4,
7 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getLegacyEncryptionKeyName(I)Ljava/lang/String; > 2 @7 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
10 = invokevirtual < Application, Ljava/security/KeyStore, containsAlias(Ljava/lang/String;)Z > 8,5 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 12,5 @21 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, containsAlias(Ljava/lang/String;)Z > 16,7 @26 exception:17,
25 = getCaughtException ,
29 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 26,27,25 @43 exception:28,
35 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
37 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 35,2 @48 exception:36,
conditional branch(eq, to iindex=-1) 37,11,
38 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
40 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 38,2 @56 exception:39,
41 = checkcast <Primordial,[B>40 <Primordial,[B>,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 41,11 @63 exception:42,
43 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, remove(I)V > 43,2 @68 exception:44,
monitorexit 3,
return,
return,","depth : 0
-----
depth : 1
-----
","public void removeCachedUnifiedChallenge(int p1){
	String v2 = ManagedProfilePasswordCache.getEncryptionKeyName(p1);
	String v3 = ManagedProfilePasswordCache.getLegacyEncryptionKeyName(p1);
	boolean v4 = this.mKeyStore.containsAlias(v2);
	if (v4 == 0) {
		this.mKeyStore.deleteEntry(v2);
		boolean v6 = this.mKeyStore.containsAlias(v3);
		boolean v8 = this.mEncryptedPasswords.contains(p1);
		if (v8 == 0) {
			Object v9 = this.mEncryptedPasswords.get(p1);
			Arrays.fill(v9, 0);
			this.mEncryptedPasswords.remove(p1);
			return;
		}
	}
}
","NONE"
"Lcom/android/server/locksettings/LockSettingsService","removeCachedUnifiedChallenge(I)V","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, removePassword(I)V > 3,2 @2 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
5 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @3 exception:4,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @13 exception:9,
return 10,
7 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getLegacyEncryptionKeyName(I)Ljava/lang/String; > 2 @7 exception:6,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @13 exception:9,
return 10,
8 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
10 = invokevirtual < Application, Ljava/security/KeyStore, containsAlias(Ljava/lang/String;)Z > 8,5 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
12 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 12,5 @21 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, containsAlias(Ljava/lang/String;)Z > 16,7 @26 exception:17,
25 = getCaughtException ,
29 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 26,27,25 @43 exception:28,
35 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
37 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 35,2 @48 exception:36,
conditional branch(eq, to iindex=-1) 37,11,
38 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
40 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 38,2 @56 exception:39,
41 = checkcast <Primordial,[B>40 <Primordial,[B>,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 41,11 @63 exception:42,
43 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, remove(I)V > 43,2 @68 exception:44,
monitorexit 3,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
","public void removeCachedUnifiedChallenge(int p1){
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""com.android.server.locksettings.unified_profile_cache_v2_"");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	String v2 = v7;
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""com.android.server.locksettings.unified_profile_cache_"");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	String v8 = v13;
	boolean v14 = this.mKeyStore.containsAlias(v2);
	if (v14 == 0) {
		this.mKeyStore.deleteEntry(v2);
		boolean v16 = this.mKeyStore.containsAlias(v8);
		boolean v18 = this.mEncryptedPasswords.contains(p1);
		if (v18 == 0) {
			Object v19 = this.mEncryptedPasswords.get(p1);
			Arrays.fill(v19, 0);
			this.mEncryptedPasswords.remove(p1);
			return;
		}
	}
}
","NONE"

"Lcom/android/server/locksettings/LockSettingsService","systemReady()V","0","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = new <Application,[Ljava/lang/Object>@158 ,
arraystore 9[6] = 10,
13 = invokestatic < Application, Lcom/android/internal/widget/ILockSettings$Stub, getCallingUid()I > @22 exception:12,
15 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 13 @26 exception:14,
arraystore 9[11] = 15,
arraystore 9[16] = 17,
19 = invokestatic < Application, Landroid/util/EventLog, writeEvent(I[Ljava/lang/Object;)I > 7,9 @37 exception:18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,6 @40 exception:23,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 24 @45 exception:25,
29 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 26,27 @51 exception:28,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > = 29,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, migrateOldData()V > 1 @57 exception:30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @60 exception:31,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, initWeaverService()V > 33 @65 exception:34,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getAuthSecretHal()V > 1 @68 exception:35,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mDeviceProvisionedObserver, <Application,Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, onSystemReady()V > 36 @73 exception:37,
38 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, prefetchUser(I)V > 38,6 @78 exception:39,
40 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
43 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFingerprintManager()Landroid/hardware/fingerprint/FingerprintManager; > 41 @85 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFaceManager()Landroid/hardware/face/FaceManager; > 44 @91 exception:45,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, systemReady(Landroid/hardware/fingerprint/FingerprintManager;Landroid/hardware/face/FaceManager;)V > 40,43,46 @95 exception:47,
return,","depth : 0
-----
","public void systemReady(){
	if (v1 == 0) {
		Object v2 = new Object(3);
		int v3 = ILockSettings$Stub.getCallingUid();
		Integer v4 = Integer.valueOf(v3);
		int v5 = EventLog.writeEvent(1397638484, v2);
		PackageManager v7 = this.mContext.getPackageManager();
		boolean v8 = v7.hasSystemFeature(""android.software.secure_lock_screen"");
		this.mHasSecureLockScreen = v8;
		p0.migrateOldData();
		IGateKeeperService v10 = p0.getGateKeeperService();
		this.mSpManager.initWeaverService();
		p0.getAuthSecretHal();
		this.mDeviceProvisionedObserver.onSystemReady();
		this.mStorage.prefetchUser(0);
		FingerprintManager v15 = this.mInjector.getFingerprintManager();
		FaceManager v16 = this.mInjector.getFaceManager();
		this.mBiometricDeferredQueue.systemReady(v15, v16);
		return;
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","systemReady()V","1","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = new <Application,[Ljava/lang/Object>@158 ,
arraystore 9[6] = 10,
13 = invokestatic < Application, Lcom/android/internal/widget/ILockSettings$Stub, getCallingUid()I > @22 exception:12,
15 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 13 @26 exception:14,
arraystore 9[11] = 15,
arraystore 9[16] = 17,
19 = invokestatic < Application, Landroid/util/EventLog, writeEvent(I[Ljava/lang/Object;)I > 7,9 @37 exception:18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,6 @40 exception:23,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 24 @45 exception:25,
29 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 26,27 @51 exception:28,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > = 29,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, migrateOldData()V > 1 @57 exception:30,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,3,3 @7 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 6 @15 exception:7,
9 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsService, VALID_SETTINGS, <Application,[Ljava/lang/String> >,
10 = arraylength 9,
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
11 = arrayload 9[20],
13 = invokevirtual < Application, Landroid/content/ContentResolver, getUserId()I > 8 @27 exception:12,
15 = invokestatic < Application, Landroid/provider/Settings$Secure, getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String; > 8,11,13 @31 exception:14,
conditional branch(eq, to iindex=-1) 15,3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,11,15,3 @37 exception:16,
19 = binaryop(add) 20 , 18,
goto (from iindex= 22 to iindex = -19),
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,23,3 @49 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,26 @56 exception:27,
34 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,32,3,3 @62 exception:33,
conditional branch(ne, to iindex=-1) 34,3,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
38 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 36 @72 exception:37,
39 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
41 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 39 @78 exception:40,
80 = phi  78,3,
43 = invokeinterface < Application, Ljava/util/List, size()I > 41 @83 exception:42,
conditional branch(ge, to iindex=-1) 80,43,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,32,23,3 @173 exception:83,
86 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,84 @180 exception:85,
95 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,93,3,3 @186 exception:94,
conditional branch(ne, to iindex=-1) 95,3,
96 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
98 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 96 @194 exception:97,
118 = phi  117,3,
100 = invokeinterface < Application, Ljava/util/List, size()I > 98 @199 exception:99,
conditional branch(ge, to iindex=-1) 118,100,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,93,23,3 @251 exception:127,
130 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,128 @258 exception:129,
144 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,142,3,3 @264 exception:143,
conditional branch(ne, to iindex=-1) 144,3,
195 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
197 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 195 @349 exception:196,
200 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 197,198 @355 exception:199,
conditional branch(eq, to iindex=-1) 200,3,
203 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,201,3,3 @364 exception:202,
conditional branch(ne, to iindex=-1) 203,3,
233 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,231,3,3 @418 exception:232,
conditional branch(ne, to iindex=-1) 233,3,
return,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @60 exception:31,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, initWeaverService()V > 33 @65 exception:34,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > 1,
conditional branch(eq, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > = 3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getWeaverService()Landroid/hardware/weaver/V1_0/IWeaver; > 1 @10 exception:4,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > = 5,
conditional branch(eq, to iindex=-1) 5,3,
6 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0>@18,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0, <init>(Lcom/android/server/locksettings/SyntheticPasswordManager;)V > 6,1 @20 exception:7,
invokeinterface < Application, Landroid/hardware/weaver/V1_0/IWeaver, getConfig(Landroid/hardware/weaver/V1_0/IWeaver$getConfigCallback;)V > 5,6 @23 exception:8,
16 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mPasswordSlotManager, <Application,Lcom/android/server/locksettings/PasswordSlotManager> > 1,
18 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getUsedWeaverSlots()Ljava/util/Set; > 1 @28 exception:17,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, refreshActiveSlots(Ljava/util/Set;)V > 16,18 @32 exception:19,
goto (from iindex= 18 to iindex = 9),
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getAuthSecretHal()V > 1 @68 exception:35,
5 = invokestatic < Application, Landroid/hardware/authsecret/V1_0/IAuthSecret, getService(Z)Landroid/hardware/authsecret/V1_0/IAuthSecret; > 3 @3 exception:4,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mAuthSecretService, <Application,Landroid/hardware/authsecret/V1_0/IAuthSecret> > = 5,
goto (from iindex= 5 to iindex = 13),
return,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mDeviceProvisionedObserver, <Application,Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, onSystemReady()V > 36 @73 exception:37,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, -$$Nest$fgetmContext(Lcom/android/server/locksettings/LockSettingsService;)Landroid/content/Context; > 2 @2 exception:3,
6 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, frpCredentialEnabled(Landroid/content/Context;)Z > 4 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, isProvisioned()Z > 1 @16 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
13 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 10,11 @26 exception:12,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, reportDeviceSetupComplete()V > 1 @29 exception:14,
return,
38 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, prefetchUser(I)V > 38,6 @78 exception:39,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, isFetched(I)Z > 4,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, setFetched(I)V > 8,2 @15 exception:9,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
12 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, -$$Nest$mgetVersion(Lcom/android/server/locksettings/LockSettingsStorage$Cache;)I > 10 @20 exception:11,
monitorexit 3,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mOpenHelper, <Application,Lcom/android/server/locksettings/LockSettingsStorage$DatabaseHelper> > 1,
15 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 13 @27 exception:14,
17 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, COLUMNS_FOR_PREFETCH, <Application,[Ljava/lang/String> >,
20 = new <Application,[Ljava/lang/String>@3919 ,
22 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @41 exception:21,
arraystore 20[7] = 22,
24 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 15,16,17,18,20,7,7,7 @51 exception:23,
conditional branch(eq, to iindex=-1) 24,7,
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
28 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,7 @63 exception:27,
30 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,19 @67 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putKeyValueIfUnchanged(Ljava/lang/String;Ljava/lang/Object;II)V > 31,28,30,2,12 @73 exception:32,
goto (from iindex= 41 to iindex = -19),
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
invokeinterface < Application, Landroid/database/Cursor, close()V > 24 @77 exception:38,
45 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @80 exception:44,
return,
40 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
43 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFingerprintManager()Landroid/hardware/fingerprint/FingerprintManager; > 41 @85 exception:42,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 9,10 @18 exception:11,
13 = checkcast <Application,Landroid/hardware/fingerprint/FingerprintManager>12 <Application,Landroid/hardware/fingerprint/FingerprintManager>,
return 13,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFaceManager()Landroid/hardware/face/FaceManager; > 44 @91 exception:45,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 9,10 @18 exception:11,
13 = checkcast <Application,Landroid/hardware/face/FaceManager>12 <Application,Landroid/hardware/face/FaceManager>,
return 13,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, systemReady(Landroid/hardware/fingerprint/FingerprintManager;Landroid/hardware/face/FaceManager;)V > 40,43,46 @95 exception:47,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public void systemReady(){
	if (v1 == 0) {
		Object v2 = new Object(3);
		int v3 = ILockSettings$Stub.getCallingUid();
		Integer v4 = Integer.valueOf(v3);
		int v5 = EventLog.writeEvent(1397638484, v2);
		PackageManager v7 = this.mContext.getPackageManager();
		boolean v8 = v7.hasSystemFeature(""android.software.secure_lock_screen"");
		this.mHasSecureLockScreen = v8;
		String v10 = LockSettingsService.getString(""migrated"", 0, 0);
		if (v10 != 0) {
			ContentResolver v11 = this.mContext.getContentResolver();
			if (0 >= this.VALID_SETTINGS.length) {
				int v12 = v11.getUserId();
				String v13 = Settings$Secure.getStringForUser(v11, this.VALID_SETTINGS[0], v12);
				if (v13 == 0) {
					LockSettingsService.setString(this.VALID_SETTINGS[0], v13, 0);
					if ((0 + 1) >= this.VALID_SETTINGS.length) {
						LockSettingsService.setString(""migrated"", ""true"", 0);
						String v17 = LockSettingsService.getString(""migrated_user_specific"", 0, 0);
						if (v17 != 0) {
							ContentResolver v18 = this.mContext.getContentResolver();
							List v19 = this.mUserManager.getUsers();
							int v20 = v19.size();
							if (0 >= v20) {
								LockSettingsService.setString(""migrated_user_specific"", ""true"", 0);
								String v23 = LockSettingsService.getString(""migrated_biometric_weak"", 0, 0);
								if (v23 != 0) {
									List v24 = this.mUserManager.getUsers();
									int v25 = v24.size();
									if (0 >= v25) {
										LockSettingsService.setString(""migrated_biometric_weak"", ""true"", 0);
										String v28 = LockSettingsService.getString(""migrated_lockscreen_disabled"", 0, 0);
										if (v28 != 0) {
											PackageManager v29 = this.mContext.getPackageManager();
											boolean v30 = v29.hasSystemFeature(""android.hardware.type.watch"");
											if (v30 == 0) {
												String v31 = LockSettingsService.getString(""migrated_wear_lockscreen_disabled"", 0, 0);
												if (v31 != 0) {
													String v32 = LockSettingsService.getString(""migrated_keystore_namespace"", 0, 0);
													if (v32 != 0) {
														if (this.mGateKeeperService == 0) {
															IBinder v34 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
															if (v34 == 0) {
																LockSettingsService$GateKeeperDiedRecipient v35 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
																v34.linkToDeath(v35, 0);
																IGateKeeperService v38 = IGateKeeperService$Stub.asInterface(v34);
																this.mGateKeeperService = v38;
																IGateKeeperService v33 = v38;
																if (this.mWeaver == 0) {
																	this.mWeaverConfig = 0;
																	IWeaver v40 = SyntheticPasswordManager.getWeaverService();
																	this.mWeaver = v40;
																	if (v40 == 0) {
																		SyntheticPasswordManager$$ExternalSyntheticLambda0 v41 = new SyntheticPasswordManager$$ExternalSyntheticLambda0(SyntheticPasswordManager);
																		v40.getConfig(v41);
																		Set v44 = SyntheticPasswordManager.getUsedWeaverSlots();
																		this.mPasswordSlotManager.refreshActiveSlots(v44);
																		IAuthSecret v47 = IAuthSecret.getService(1);
																		this.mAuthSecretService = v47;
																		Context v49 = LockSettingsService.-$$Nest$fgetmContext(this.this$0);
																		boolean v50 = LockPatternUtils.frpCredentialEnabled(v49);
																		if (v50 == 0) {
																			boolean v51 = LockSettingsService$DeviceProvisionedObserver.isProvisioned();
																			if (v51 != 0) {
																				LockSettingsService$DeviceProvisionedObserver.reportDeviceSetupComplete();
																				boolean v55 = this.mCache.isFetched(0);
																				if (v55 == 0) {
																					this.mCache.setFetched(0);
																					int v57 = LockSettingsStorage$Cache.-$$Nest$mgetVersion(this.mCache);
																					SQLiteDatabase v58 = this.mOpenHelper.getReadableDatabase();
																					String v59 = new String(1);
																					String v60 = Integer.toString(0);
																					Cursor v61 = v58.query(""locksettings"", this.COLUMNS_FOR_PREFETCH, ""user=?"", v59, 0, 0, 0);
																					if (v61 == 0) {
																						boolean v62 = v61.moveToNext();
																						if (v62 == 0) {
																							String v63 = v61.getString(0);
																							String v64 = v61.getString(1);
																							this.mCache.putKeyValueIfUnchanged(v63, v64, 0, v57);
																							boolean v66 = v61.moveToNext();
																							if (v66 == 0) {
																								v61.close();
																								LockSettingsStorage$CredentialHash v68 = LockSettingsStorage.readCredentialHash(0);
																								PackageManager v70 = this.mContext.getPackageManager();
																								boolean v71 = v70.hasSystemFeature(""android.hardware.fingerprint"");
																								if (v71 == 0) {
																									Object v72 = this.mContext.getSystemService(""fingerprint"");
																									FingerprintManager v69 = v72;
																									PackageManager v74 = this.mContext.getPackageManager();
																									boolean v75 = v74.hasSystemFeature(""android.hardware.biometrics.face"");
																									if (v75 == 0) {
																										Object v76 = this.mContext.getSystemService(""face"");
																										FaceManager v73 = v76;
																										this.mBiometricDeferredQueue.systemReady(v69, v73);
																										return;
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","systemReady()V","1","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = new <Application,[Ljava/lang/Object>@158 ,
arraystore 9[6] = 10,
13 = invokestatic < Application, Lcom/android/internal/widget/ILockSettings$Stub, getCallingUid()I > @22 exception:12,
15 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 13 @26 exception:14,
arraystore 9[11] = 15,
arraystore 9[16] = 17,
19 = invokestatic < Application, Landroid/util/EventLog, writeEvent(I[Ljava/lang/Object;)I > 7,9 @37 exception:18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,6 @40 exception:23,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 24 @45 exception:25,
29 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 26,27 @51 exception:28,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > = 29,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, migrateOldData()V > 1 @57 exception:30,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,3,3 @7 exception:4,
conditional branch(ne, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 6 @15 exception:7,
9 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsService, VALID_SETTINGS, <Application,[Ljava/lang/String> >,
10 = arraylength 9,
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
11 = arrayload 9[20],
13 = invokevirtual < Application, Landroid/content/ContentResolver, getUserId()I > 8 @27 exception:12,
15 = invokestatic < Application, Landroid/provider/Settings$Secure, getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String; > 8,11,13 @31 exception:14,
conditional branch(eq, to iindex=-1) 15,3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,11,15,3 @37 exception:16,
19 = binaryop(add) 20 , 18,
goto (from iindex= 22 to iindex = -19),
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,23,3 @49 exception:24,
28 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,26 @56 exception:27,
34 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,32,3,3 @62 exception:33,
conditional branch(ne, to iindex=-1) 34,3,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
38 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 36 @72 exception:37,
39 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
41 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 39 @78 exception:40,
80 = phi  78,3,
43 = invokeinterface < Application, Ljava/util/List, size()I > 41 @83 exception:42,
conditional branch(ge, to iindex=-1) 80,43,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,32,23,3 @173 exception:83,
86 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,84 @180 exception:85,
95 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,93,3,3 @186 exception:94,
conditional branch(ne, to iindex=-1) 95,3,
96 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
98 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 96 @194 exception:97,
118 = phi  117,3,
100 = invokeinterface < Application, Ljava/util/List, size()I > 98 @199 exception:99,
conditional branch(ge, to iindex=-1) 118,100,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,93,23,3 @251 exception:127,
130 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,128 @258 exception:129,
144 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,142,3,3 @264 exception:143,
conditional branch(ne, to iindex=-1) 144,3,
195 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
197 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 195 @349 exception:196,
200 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 197,198 @355 exception:199,
conditional branch(eq, to iindex=-1) 200,3,
203 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,201,3,3 @364 exception:202,
conditional branch(ne, to iindex=-1) 203,3,
233 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,231,3,3 @418 exception:232,
conditional branch(ne, to iindex=-1) 233,3,
return,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @60 exception:31,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, initWeaverService()V > 33 @65 exception:34,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > 1,
conditional branch(eq, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > = 3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getWeaverService()Landroid/hardware/weaver/V1_0/IWeaver; > 1 @10 exception:4,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > = 5,
conditional branch(eq, to iindex=-1) 5,3,
6 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0>@18,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0, <init>(Lcom/android/server/locksettings/SyntheticPasswordManager;)V > 6,1 @20 exception:7,
invokeinterface < Application, Landroid/hardware/weaver/V1_0/IWeaver, getConfig(Landroid/hardware/weaver/V1_0/IWeaver$getConfigCallback;)V > 5,6 @23 exception:8,
16 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mPasswordSlotManager, <Application,Lcom/android/server/locksettings/PasswordSlotManager> > 1,
18 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getUsedWeaverSlots()Ljava/util/Set; > 1 @28 exception:17,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, refreshActiveSlots(Ljava/util/Set;)V > 16,18 @32 exception:19,
goto (from iindex= 18 to iindex = 9),
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getAuthSecretHal()V > 1 @68 exception:35,
5 = invokestatic < Application, Landroid/hardware/authsecret/V1_0/IAuthSecret, getService(Z)Landroid/hardware/authsecret/V1_0/IAuthSecret; > 3 @3 exception:4,
8 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 2,6 @19 exception:7,
return,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mDeviceProvisionedObserver, <Application,Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, onSystemReady()V > 36 @73 exception:37,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, -$$Nest$fgetmContext(Lcom/android/server/locksettings/LockSettingsService;)Landroid/content/Context; > 2 @2 exception:3,
6 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, frpCredentialEnabled(Landroid/content/Context;)Z > 4 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, isProvisioned()Z > 1 @16 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
13 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 10,11 @26 exception:12,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, reportDeviceSetupComplete()V > 1 @29 exception:14,
return,
38 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, prefetchUser(I)V > 38,6 @78 exception:39,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, isFetched(I)Z > 4,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, setFetched(I)V > 8,2 @15 exception:9,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
12 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, -$$Nest$mgetVersion(Lcom/android/server/locksettings/LockSettingsStorage$Cache;)I > 10 @20 exception:11,
monitorexit 3,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mOpenHelper, <Application,Lcom/android/server/locksettings/LockSettingsStorage$DatabaseHelper> > 1,
15 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 13 @27 exception:14,
17 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, COLUMNS_FOR_PREFETCH, <Application,[Ljava/lang/String> >,
20 = new <Application,[Ljava/lang/String>@3919 ,
22 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @41 exception:21,
arraystore 20[7] = 22,
24 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 15,16,17,18,20,7,7,7 @51 exception:23,
conditional branch(eq, to iindex=-1) 24,7,
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
28 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,7 @63 exception:27,
30 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,19 @67 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putKeyValueIfUnchanged(Ljava/lang/String;Ljava/lang/Object;II)V > 31,28,30,2,12 @73 exception:32,
goto (from iindex= 41 to iindex = -19),
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
invokeinterface < Application, Landroid/database/Cursor, close()V > 24 @77 exception:38,
45 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @80 exception:44,
return,
40 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
43 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFingerprintManager()Landroid/hardware/fingerprint/FingerprintManager; > 41 @85 exception:42,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 9,10 @18 exception:11,
13 = checkcast <Application,Landroid/hardware/fingerprint/FingerprintManager>12 <Application,Landroid/hardware/fingerprint/FingerprintManager>,
return 13,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFaceManager()Landroid/hardware/face/FaceManager; > 44 @91 exception:45,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, mContext, <Application,Landroid/content/Context> > 1,
4 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 2 @2 exception:3,
7 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 4,5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, mContext, <Application,Landroid/content/Context> > 1,
12 = invokevirtual < Application, Landroid/content/Context, getSystemService(Ljava/lang/String;)Ljava/lang/Object; > 9,10 @18 exception:11,
13 = checkcast <Application,Landroid/hardware/face/FaceManager>12 <Application,Landroid/hardware/face/FaceManager>,
return 13,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, systemReady(Landroid/hardware/fingerprint/FingerprintManager;Landroid/hardware/face/FaceManager;)V > 40,43,46 @95 exception:47,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public void systemReady(){
	if (v1 == 0) {
		Object v2 = new Object(3);
		int v3 = ILockSettings$Stub.getCallingUid();
		Integer v4 = Integer.valueOf(v3);
		int v5 = EventLog.writeEvent(1397638484, v2);
		PackageManager v7 = this.mContext.getPackageManager();
		boolean v8 = v7.hasSystemFeature(""android.software.secure_lock_screen"");
		this.mHasSecureLockScreen = v8;
		String v10 = LockSettingsService.getString(""migrated"", 0, 0);
		if (v10 != 0) {
			ContentResolver v11 = this.mContext.getContentResolver();
			if (0 >= this.VALID_SETTINGS.length) {
				int v12 = v11.getUserId();
				String v13 = Settings$Secure.getStringForUser(v11, this.VALID_SETTINGS[0], v12);
				if (v13 == 0) {
					LockSettingsService.setString(this.VALID_SETTINGS[0], v13, 0);
					if ((0 + 1) >= this.VALID_SETTINGS.length) {
						LockSettingsService.setString(""migrated"", ""true"", 0);
						String v17 = LockSettingsService.getString(""migrated_user_specific"", 0, 0);
						if (v17 != 0) {
							ContentResolver v18 = this.mContext.getContentResolver();
							List v19 = this.mUserManager.getUsers();
							int v20 = v19.size();
							if (0 >= v20) {
								LockSettingsService.setString(""migrated_user_specific"", ""true"", 0);
								String v23 = LockSettingsService.getString(""migrated_biometric_weak"", 0, 0);
								if (v23 != 0) {
									List v24 = this.mUserManager.getUsers();
									int v25 = v24.size();
									if (0 >= v25) {
										LockSettingsService.setString(""migrated_biometric_weak"", ""true"", 0);
										String v28 = LockSettingsService.getString(""migrated_lockscreen_disabled"", 0, 0);
										if (v28 != 0) {
											PackageManager v29 = this.mContext.getPackageManager();
											boolean v30 = v29.hasSystemFeature(""android.hardware.type.watch"");
											if (v30 == 0) {
												String v31 = LockSettingsService.getString(""migrated_wear_lockscreen_disabled"", 0, 0);
												if (v31 != 0) {
													String v32 = LockSettingsService.getString(""migrated_keystore_namespace"", 0, 0);
													if (v32 != 0) {
														if (this.mGateKeeperService == 0) {
															IBinder v34 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
															if (v34 == 0) {
																LockSettingsService$GateKeeperDiedRecipient v35 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
																v34.linkToDeath(v35, 0);
																IGateKeeperService v38 = IGateKeeperService$Stub.asInterface(v34);
																this.mGateKeeperService = v38;
																IGateKeeperService v33 = v38;
																if (this.mWeaver == 0) {
																	this.mWeaverConfig = 0;
																	IWeaver v40 = SyntheticPasswordManager.getWeaverService();
																	this.mWeaver = v40;
																	if (v40 == 0) {
																		SyntheticPasswordManager$$ExternalSyntheticLambda0 v41 = new SyntheticPasswordManager$$ExternalSyntheticLambda0(SyntheticPasswordManager);
																		v40.getConfig(v41);
																		Set v44 = SyntheticPasswordManager.getUsedWeaverSlots();
																		this.mPasswordSlotManager.refreshActiveSlots(v44);
																		IAuthSecret v47 = IAuthSecret.getService(1);
																		Context v50 = LockSettingsService.-$$Nest$fgetmContext(this.this$0);
																		boolean v51 = LockPatternUtils.frpCredentialEnabled(v50);
																		if (v51 == 0) {
																			boolean v52 = LockSettingsService$DeviceProvisionedObserver.isProvisioned();
																			if (v52 != 0) {
																				LockSettingsService$DeviceProvisionedObserver.reportDeviceSetupComplete();
																				boolean v56 = this.mCache.isFetched(0);
																				if (v56 == 0) {
																					this.mCache.setFetched(0);
																					int v58 = LockSettingsStorage$Cache.-$$Nest$mgetVersion(this.mCache);
																					SQLiteDatabase v59 = this.mOpenHelper.getReadableDatabase();
																					String v60 = new String(1);
																					String v61 = Integer.toString(0);
																					Cursor v62 = v59.query(""locksettings"", this.COLUMNS_FOR_PREFETCH, ""user=?"", v60, 0, 0, 0);
																					if (v62 == 0) {
																						boolean v63 = v62.moveToNext();
																						if (v63 == 0) {
																							String v64 = v62.getString(0);
																							String v65 = v62.getString(1);
																							this.mCache.putKeyValueIfUnchanged(v64, v65, 0, v58);
																							boolean v67 = v62.moveToNext();
																							if (v67 == 0) {
																								v62.close();
																								LockSettingsStorage$CredentialHash v69 = LockSettingsStorage.readCredentialHash(0);
																								PackageManager v71 = this.mContext.getPackageManager();
																								boolean v72 = v71.hasSystemFeature(""android.hardware.fingerprint"");
																								if (v72 == 0) {
																									Object v73 = this.mContext.getSystemService(""fingerprint"");
																									FingerprintManager v70 = v73;
																									PackageManager v75 = this.mContext.getPackageManager();
																									boolean v76 = v75.hasSystemFeature(""android.hardware.biometrics.face"");
																									if (v76 == 0) {
																										Object v77 = this.mContext.getSystemService(""face"");
																										FaceManager v74 = v77;
																										this.mBiometricDeferredQueue.systemReady(v70, v74);
																										return;
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","systemReady()V","2","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = new <Application,[Ljava/lang/Object>@158 ,
arraystore 9[6] = 10,
13 = invokestatic < Application, Lcom/android/internal/widget/ILockSettings$Stub, getCallingUid()I > @22 exception:12,
15 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 13 @26 exception:14,
arraystore 9[11] = 15,
arraystore 9[16] = 17,
19 = invokestatic < Application, Landroid/util/EventLog, writeEvent(I[Ljava/lang/Object;)I > 7,9 @37 exception:18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,6 @40 exception:23,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 24 @45 exception:25,
29 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 26,27 @51 exception:28,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > = 29,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, migrateOldData()V > 1 @57 exception:30,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,3,3 @7 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 6 @15 exception:7,
9 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsService, VALID_SETTINGS, <Application,[Ljava/lang/String> >,
10 = arraylength 9,
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
11 = arrayload 9[20],
13 = invokevirtual < Application, Landroid/content/ContentResolver, getUserId()I > 8 @27 exception:12,
15 = invokestatic < Application, Landroid/provider/Settings$Secure, getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String; > 8,11,13 @31 exception:14,
conditional branch(eq, to iindex=-1) 15,3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,11,15,3 @37 exception:16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
19 = binaryop(add) 20 , 18,
goto (from iindex= 22 to iindex = -19),
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,23,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
28 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,26 @56 exception:27,
34 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,32,3,3 @62 exception:33,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 34,3,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
38 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 36 @72 exception:37,
39 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
41 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 39 @78 exception:40,
80 = phi  78,3,
43 = invokeinterface < Application, Ljava/util/List, size()I > 41 @83 exception:42,
conditional branch(ge, to iindex=-1) 80,43,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,32,23,3 @173 exception:83,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
86 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,84 @180 exception:85,
95 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,93,3,3 @186 exception:94,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 95,3,
96 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
98 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 96 @194 exception:97,
118 = phi  117,3,
100 = invokeinterface < Application, Ljava/util/List, size()I > 98 @199 exception:99,
conditional branch(ge, to iindex=-1) 118,100,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,93,23,3 @251 exception:127,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
130 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,128 @258 exception:129,
144 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,142,3,3 @264 exception:143,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 144,3,
195 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
197 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 195 @349 exception:196,
200 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 197,198 @355 exception:199,
conditional branch(eq, to iindex=-1) 200,3,
203 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,201,3,3 @364 exception:202,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 203,3,
233 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,231,3,3 @418 exception:232,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 233,3,
return,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @60 exception:31,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
7 = new <Application,Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy>@20,
invokespecial < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy, <init>(Landroid/os/IBinder;)V > 7,1 @22 exception:8,
return 7,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, initWeaverService()V > 33 @65 exception:34,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > 1,
conditional branch(eq, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > = 3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getWeaverService()Landroid/hardware/weaver/V1_0/IWeaver; > 1 @10 exception:4,
4 = invokestatic < Application, Landroid/hardware/weaver/V1_0/IWeaver, getService(Z)Landroid/hardware/weaver/V1_0/IWeaver; > 2 @1 exception:3,
8 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 5,6 @10 exception:7,
return 9,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > = 5,
conditional branch(eq, to iindex=-1) 5,3,
6 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0>@18,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0, <init>(Lcom/android/server/locksettings/SyntheticPasswordManager;)V > 6,1 @20 exception:7,
invokeinterface < Application, Landroid/hardware/weaver/V1_0/IWeaver, getConfig(Landroid/hardware/weaver/V1_0/IWeaver$getConfigCallback;)V > 5,6 @23 exception:8,
16 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mPasswordSlotManager, <Application,Lcom/android/server/locksettings/PasswordSlotManager> > 1,
18 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getUsedWeaverSlots()Ljava/util/Set; > 1 @28 exception:17,
2 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, listSyntheticPasswordHandlesForAllUsers(Ljava/lang/String;)Ljava/util/Map; > 2,3 @5 exception:4,
6 = new <Application,Ljava/util/HashSet>@9,
invokespecial < Application, Ljava/util/HashSet, <init>()V > 6 @11 exception:7,
9 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 5 @14 exception:8,
11 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 9 @18 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,14,
16 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 11 @28 exception:15,
17 = checkcast <Application,Ljava/util/Map$Entry>16 <Application,Ljava/util/Map$Entry>,
19 = invokeinterface < Application, Ljava/util/Map$Entry, getValue()Ljava/lang/Object; > 17 @34 exception:18,
20 = checkcast <Application,Ljava/util/List>19 <Application,Ljava/util/List>,
22 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 20 @40 exception:21,
24 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,14,
26 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 22 @50 exception:25,
27 = checkcast <Application,Ljava/lang/Long>26 <Application,Ljava/lang/Long>,
29 = invokevirtual < Application, Ljava/lang/Long, longValue()J > 27 @56 exception:28,
31 = invokeinterface < Application, Ljava/util/Map$Entry, getKey()Ljava/lang/Object; > 17 @60 exception:30,
32 = checkcast <Application,Ljava/lang/Integer>31 <Application,Ljava/lang/Integer>,
34 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 32 @66 exception:33,
36 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,29,34 @70 exception:35,
38 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 36 @74 exception:37,
40 = invokevirtual < Application, Ljava/util/HashSet, add(Ljava/lang/Object;)Z > 6,38 @78 exception:39,
goto (from iindex= 39 to iindex = -37),
24 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,14,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,14,
return 6,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, refreshActiveSlots(Ljava/util/Set;)V > 16,18 @32 exception:19,
3 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Ljava/util/HashSet>@12,
invokespecial < Application, Ljava/util/HashSet, <init>()V > 5 @14 exception:6,
7 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
9 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 7 @19 exception:8,
11 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 9 @23 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @27 exception:12,
conditional branch(eq, to iindex=-1) 13,4,
15 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 11 @33 exception:14,
16 = checkcast <Application,Ljava/util/Map$Entry>15 <Application,Ljava/util/Map$Entry>,
18 = invokeinterface < Application, Ljava/util/Map$Entry, getValue()Ljava/lang/Object; > 16 @39 exception:17,
19 = checkcast <Application,Ljava/lang/String>18 <Application,Ljava/lang/String>,
21 = invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, getMode()Ljava/lang/String; > 1 @45 exception:20,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 19,21 @49 exception:22,
conditional branch(eq, to iindex=-1) 23,4,
27 = invokeinterface < Application, Ljava/util/Map$Entry, getKey()Ljava/lang/Object; > 16 @55 exception:26,
28 = checkcast <Application,Ljava/lang/Integer>27 <Application,Ljava/lang/Integer>,
30 = invokevirtual < Application, Ljava/util/HashSet, add(Ljava/lang/Object;)Z > 5,28 @61 exception:29,
goto (from iindex= 31 to iindex = -37),
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @27 exception:12,
conditional branch(eq, to iindex=-1) 13,4,
33 = invokevirtual < Application, Ljava/util/HashSet, iterator()Ljava/util/Iterator; > 5 @65 exception:32,
35 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 33 @69 exception:34,
conditional branch(eq, to iindex=-1) 35,4,
37 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 33 @75 exception:36,
38 = checkcast <Application,Ljava/lang/Integer>37 <Application,Ljava/lang/Integer>,
39 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
41 = invokeinterface < Application, Ljava/util/Map, remove(Ljava/lang/Object;)Ljava/lang/Object; > 39,38 @83 exception:40,
goto (from iindex= 42 to iindex = -17),
35 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 33 @69 exception:34,
conditional branch(eq, to iindex=-1) 35,4,
47 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 2 @87 exception:46,
49 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 47 @91 exception:48,
conditional branch(eq, to iindex=-1) 49,4,
51 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 47 @97 exception:50,
52 = checkcast <Application,Ljava/lang/Integer>51 <Application,Ljava/lang/Integer>,
53 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
55 = invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, getMode()Ljava/lang/String; > 1 @105 exception:54,
57 = invokeinterface < Application, Ljava/util/Map, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 53,52,55 @109 exception:56,
goto (from iindex= 55 to iindex = -21),
49 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 47 @91 exception:48,
conditional branch(eq, to iindex=-1) 49,4,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, saveSlotMap()V > 1 @113 exception:63,
return,
goto (from iindex= 18 to iindex = 9),
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getAuthSecretHal()V > 1 @68 exception:35,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mDeviceProvisionedObserver, <Application,Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, onSystemReady()V > 36 @73 exception:37,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, -$$Nest$fgetmContext(Lcom/android/server/locksettings/LockSettingsService;)Landroid/content/Context; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
return 2,
6 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, frpCredentialEnabled(Landroid/content/Context;)Z > 4 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, isProvisioned()Z > 1 @16 exception:8,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, -$$Nest$fgetmContext(Lcom/android/server/locksettings/LockSettingsService;)Landroid/content/Context; > 2 @2 exception:3,
6 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 4 @6 exception:5,
10 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 6,7,8 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = phi  8,11,
return 12,
conditional branch(ne, to iindex=-1) 9,7,
13 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 10,11 @26 exception:12,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, reportDeviceSetupComplete()V > 1 @29 exception:14,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 2 @2 exception:3,
invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, reportDeviceSetupComplete()V > 4 @6 exception:5,
goto (from iindex= 4 to iindex = 9),
return,
return,
38 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, prefetchUser(I)V > 38,6 @78 exception:39,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, isFetched(I)Z > 4,2 @5 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, contains(ILjava/lang/String;I)Z > 1,3,4,2 @3 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, setFetched(I)V > 8,2 @15 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, put(ILjava/lang/String;Ljava/lang/Object;I)V > 1,3,4,5,2 @6 exception:6,
return,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
12 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, -$$Nest$mgetVersion(Lcom/android/server/locksettings/LockSettingsStorage$Cache;)I > 10 @20 exception:11,
3 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, getVersion()I > 1 @0 exception:2,
return 3,
monitorexit 3,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mOpenHelper, <Application,Lcom/android/server/locksettings/LockSettingsStorage$DatabaseHelper> > 1,
15 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 13 @27 exception:14,
17 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, COLUMNS_FOR_PREFETCH, <Application,[Ljava/lang/String> >,
20 = new <Application,[Ljava/lang/String>@3919 ,
22 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @41 exception:21,
arraystore 20[7] = 22,
24 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 15,16,17,18,20,7,7,7 @51 exception:23,
conditional branch(eq, to iindex=-1) 24,7,
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
28 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,7 @63 exception:27,
30 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,19 @67 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putKeyValueIfUnchanged(Ljava/lang/String;Ljava/lang/Object;II)V > 31,28,30,2,12 @73 exception:32,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putIfUnchanged(ILjava/lang/String;Ljava/lang/Object;II)V > 1,6,2,3,4,5 @6 exception:7,
return,
goto (from iindex= 41 to iindex = -19),
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
invokeinterface < Application, Landroid/database/Cursor, close()V > 24 @77 exception:38,
45 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @80 exception:44,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
return,
40 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
43 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFingerprintManager()Landroid/hardware/fingerprint/FingerprintManager; > 41 @85 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFaceManager()Landroid/hardware/face/FaceManager; > 44 @91 exception:45,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, systemReady(Landroid/hardware/fingerprint/FingerprintManager;Landroid/hardware/face/FaceManager;)V > 40,43,46 @95 exception:47,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void systemReady(){
	if (v1 == 0) {
		Object v2 = new Object(3);
		int v3 = ILockSettings$Stub.getCallingUid();
		Integer v4 = Integer.valueOf(v3);
		int v5 = EventLog.writeEvent(1397638484, v2);
		PackageManager v7 = this.mContext.getPackageManager();
		boolean v8 = v7.hasSystemFeature(""android.software.secure_lock_screen"");
		this.mHasSecureLockScreen = v8;
		String v12 = this.mStorage.getString(""migrated"", 0, 0);
		String v10 = v12;
		if (v10 != 0) {
			ContentResolver v13 = this.mContext.getContentResolver();
			if (0 >= this.VALID_SETTINGS.length) {
				int v14 = v13.getUserId();
				String v15 = Settings$Secure.getStringForUser(v13, this.VALID_SETTINGS[0], v14);
				if (v15 == 0) {
					this.mStorage.setString(this.VALID_SETTINGS[0], v15, 0);
					if ((0 + 1) >= this.VALID_SETTINGS.length) {
						this.mStorage.setString(""migrated"", ""true"", 0);
						String v25 = this.mStorage.getString(""migrated_user_specific"", 0, 0);
						String v23 = v25;
						if (v23 != 0) {
							ContentResolver v26 = this.mContext.getContentResolver();
							List v27 = this.mUserManager.getUsers();
							int v28 = v27.size();
							if (0 >= v28) {
								this.mStorage.setString(""migrated_user_specific"", ""true"", 0);
								String v35 = this.mStorage.getString(""migrated_biometric_weak"", 0, 0);
								String v33 = v35;
								if (v33 != 0) {
									List v36 = this.mUserManager.getUsers();
									int v37 = v36.size();
									if (0 >= v37) {
										this.mStorage.setString(""migrated_biometric_weak"", ""true"", 0);
										String v44 = this.mStorage.getString(""migrated_lockscreen_disabled"", 0, 0);
										String v42 = v44;
										if (v42 != 0) {
											PackageManager v45 = this.mContext.getPackageManager();
											boolean v46 = v45.hasSystemFeature(""android.hardware.type.watch"");
											if (v46 == 0) {
												String v49 = this.mStorage.getString(""migrated_wear_lockscreen_disabled"", 0, 0);
												String v47 = v49;
												if (v47 != 0) {
													String v52 = this.mStorage.getString(""migrated_keystore_namespace"", 0, 0);
													String v50 = v52;
													if (v50 != 0) {
														if (this.mGateKeeperService == 0) {
															IBinder v54 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
															if (v54 == 0) {
																LockSettingsService$GateKeeperDiedRecipient v55 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
																v54.linkToDeath(v55, 0);
																if (v54 != 0) {
																	IInterface v59 = v54.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
																	if (v59 == 0) {
																		if (v59 instanceof IGateKeeperService == 0) {
																			IGateKeeperService$Stub$Proxy v60 = new IGateKeeperService$Stub$Proxy(v54);
																			IGateKeeperService v58 = v60;
																			this.mGateKeeperService = v58;
																			IGateKeeperService v53 = v58;
																			if (this.mWeaver == 0) {
																				this.mWeaverConfig = 0;
																				IWeaver v64 = IWeaver.getService(1);
																				IWeaver v63 = 0;
																				this.mWeaver = v63;
																				if (v63 == 0) {
																					SyntheticPasswordManager$$ExternalSyntheticLambda0 v66 = new SyntheticPasswordManager$$ExternalSyntheticLambda0(SyntheticPasswordManager);
																					v63.getConfig(v66);
																					Map v70 = this.mStorage.listSyntheticPasswordHandlesForAllUsers(""weaver"");
																					HashSet v71 = new HashSet();
																					Set v73 = v70.entrySet();
																					Iterator v74 = v73.iterator();
																					boolean v75 = v74.hasNext();
																					if (v75 == 0) {
																						Object v76 = v74.next();
																						Object v77 = v76.getValue();
																						Iterator v78 = v77.iterator();
																						boolean v79 = v78.hasNext();
																						if (v79 == 0) {
																							Object v80 = v78.next();
																							long v81 = v80.longValue();
																							Object v82 = v76.getKey();
																							int v83 = v82.intValue();
																							int v84 = SyntheticPasswordManager.loadWeaverSlot(v81, v83);
																							Integer v85 = Integer.valueOf(v84);
																							boolean v86 = v71.add(v85);
																							boolean v87 = v78.hasNext();
																							if (v87 == 0) {
																								boolean v88 = v74.hasNext();
																								if (v88 == 0) {
																									Set v69 = v71;
																									if (this.mSlotMap != 0) {
																										HashSet v90 = new HashSet();
																										Set v92 = this.mSlotMap.entrySet();
																										Iterator v93 = v92.iterator();
																										boolean v94 = v93.hasNext();
																										if (v94 == 0) {
																											Object v95 = v93.next();
																											Object v96 = v95.getValue();
																											String v97 = PasswordSlotManager.getMode();
																											boolean v98 = v96.equals(v97);
																											if (v98 == 0) {
																												Object v99 = v95.getKey();
																												boolean v100 = v90.add(v99);
																												boolean v101 = v93.hasNext();
																												if (v101 == 0) {
																													Iterator v102 = v90.iterator();
																													boolean v103 = v102.hasNext();
																													if (v103 == 0) {
																														Object v104 = v102.next();
																														Object v105 = this.mSlotMap.remove(v104);
																														boolean v106 = v102.hasNext();
																														if (v106 == 0) {
																															Iterator v107 = v69.iterator();
																															boolean v108 = v107.hasNext();
																															if (v108 == 0) {
																																Object v109 = v107.next();
																																String v110 = PasswordSlotManager.getMode();
																																Object v111 = this.mSlotMap.put(v109, v110);
																																boolean v112 = v107.hasNext();
																																if (v112 == 0) {
																																	PasswordSlotManager.saveSlotMap();
																																	p0.getAuthSecretHal();
																																	Context v116 = this.mContext;
																																	boolean v117 = LockPatternUtils.frpCredentialEnabled(v116);
																																	if (v117 == 0) {
																																		Context v119 = LockSettingsService.-$$Nest$fgetmContext(this.this$0);
																																		ContentResolver v120 = v119.getContentResolver();
																																		int v121 = Settings$Global.getInt(v120, ""device_provisioned"", 0);
																																		if (v121 == 0) {
																																			boolean v118 = 0;
																																			if (v118 != 0) {
																																				IGateKeeperService v124 = this.this$0.getGateKeeperService();
																																				v124.reportDeviceSetupComplete();
																																				boolean v128 = LockSettingsStorage$Cache.contains(2, """", 0);
																																				boolean v127 = v128;
																																				if (v127 == 0) {
																																					LockSettingsStorage$Cache.put(2, ""isFetched"", ""true"", 0);
																																					int v132 = this.mCache.getVersion();
																																					int v131 = v132;
																																					SQLiteDatabase v133 = this.mOpenHelper.getReadableDatabase();
																																					String v134 = new String(1);
																																					String v135 = Integer.toString(0);
																																					Cursor v136 = v133.query(""locksettings"", this.COLUMNS_FOR_PREFETCH, ""user=?"", v134, 0, 0, 0);
																																					if (v136 == 0) {
																																						boolean v137 = v136.moveToNext();
																																						if (v137 == 0) {
																																							String v138 = v136.getString(0);
																																							String v139 = v136.getString(1);
																																							LockSettingsStorage$Cache.putIfUnchanged(0, v138, v139, 0, v131);
																																							boolean v142 = v136.moveToNext();
																																							if (v142 == 0) {
																																								v136.close();
																																								LockSettingsStorage$CredentialHash v145 = LockSettingsStorage.readPasswordHashIfExists(0);
																																								if (v145 == 0) {
																																									LockSettingsStorage$CredentialHash v146 = LockSettingsStorage.readPatternHashIfExists(0);
																																									if (v146 == 0) {
																																										LockSettingsStorage$CredentialHash v147 = LockSettingsStorage$CredentialHash.createEmptyHash();
																																										LockSettingsStorage$CredentialHash v144 = v147;
																																										FingerprintManager v148 = this.mInjector.getFingerprintManager();
																																										FaceManager v149 = this.mInjector.getFaceManager();
																																										this.mBiometricDeferredQueue.systemReady(v148, v149);
																																										return;
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","systemReady()V","2","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = new <Application,[Ljava/lang/Object>@158 ,
arraystore 9[6] = 10,
13 = invokestatic < Application, Lcom/android/internal/widget/ILockSettings$Stub, getCallingUid()I > @22 exception:12,
15 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 13 @26 exception:14,
arraystore 9[11] = 15,
arraystore 9[16] = 17,
19 = invokestatic < Application, Landroid/util/EventLog, writeEvent(I[Ljava/lang/Object;)I > 7,9 @37 exception:18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,6 @40 exception:23,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 24 @45 exception:25,
29 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 26,27 @51 exception:28,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > = 29,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, migrateOldData()V > 1 @57 exception:30,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,3,3 @7 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 6 @15 exception:7,
9 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsService, VALID_SETTINGS, <Application,[Ljava/lang/String> >,
10 = arraylength 9,
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
11 = arrayload 9[20],
13 = invokevirtual < Application, Landroid/content/ContentResolver, getUserId()I > 8 @27 exception:12,
15 = invokestatic < Application, Landroid/provider/Settings$Secure, getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String; > 8,11,13 @31 exception:14,
conditional branch(eq, to iindex=-1) 15,3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,11,15,3 @37 exception:16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
19 = binaryop(add) 20 , 18,
goto (from iindex= 22 to iindex = -19),
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,23,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
28 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,26 @56 exception:27,
34 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,32,3,3 @62 exception:33,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 34,3,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
38 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 36 @72 exception:37,
39 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
41 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 39 @78 exception:40,
80 = phi  78,3,
43 = invokeinterface < Application, Ljava/util/List, size()I > 41 @83 exception:42,
conditional branch(ge, to iindex=-1) 80,43,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,32,23,3 @173 exception:83,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
86 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,84 @180 exception:85,
95 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,93,3,3 @186 exception:94,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 95,3,
144 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,142,3,3 @264 exception:143,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 144,3,
195 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
197 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 195 @349 exception:196,
200 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 197,198 @355 exception:199,
conditional branch(eq, to iindex=-1) 200,3,
203 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,201,3,3 @364 exception:202,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 203,3,
204 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
206 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 204 @372 exception:205,
208 = invokeinterface < Application, Ljava/util/List, size()I > 206 @376 exception:207,
215 = phi  214,3,
conditional branch(ge, to iindex=-1) 215,208,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,201,23,3 @405 exception:220,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
223 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,221 @412 exception:222,
233 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,231,3,3 @418 exception:232,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 233,3,
return,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @60 exception:31,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
7 = new <Application,Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy>@20,
invokespecial < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy, <init>(Landroid/os/IBinder;)V > 7,1 @22 exception:8,
return 7,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, initWeaverService()V > 33 @65 exception:34,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > 1,
conditional branch(eq, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > = 3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getWeaverService()Landroid/hardware/weaver/V1_0/IWeaver; > 1 @10 exception:4,
4 = invokestatic < Application, Landroid/hardware/weaver/V1_0/IWeaver, getService(Z)Landroid/hardware/weaver/V1_0/IWeaver; > 2 @1 exception:3,
8 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 5,6 @10 exception:7,
return 9,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > = 5,
conditional branch(eq, to iindex=-1) 5,3,
6 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0>@18,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0, <init>(Lcom/android/server/locksettings/SyntheticPasswordManager;)V > 6,1 @20 exception:7,
invokeinterface < Application, Landroid/hardware/weaver/V1_0/IWeaver, getConfig(Landroid/hardware/weaver/V1_0/IWeaver$getConfigCallback;)V > 5,6 @23 exception:8,
16 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mPasswordSlotManager, <Application,Lcom/android/server/locksettings/PasswordSlotManager> > 1,
18 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getUsedWeaverSlots()Ljava/util/Set; > 1 @28 exception:17,
2 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, listSyntheticPasswordHandlesForAllUsers(Ljava/lang/String;)Ljava/util/Map; > 2,3 @5 exception:4,
6 = new <Application,Ljava/util/HashSet>@9,
invokespecial < Application, Ljava/util/HashSet, <init>()V > 6 @11 exception:7,
9 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 5 @14 exception:8,
11 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 9 @18 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,14,
16 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 11 @28 exception:15,
17 = checkcast <Application,Ljava/util/Map$Entry>16 <Application,Ljava/util/Map$Entry>,
19 = invokeinterface < Application, Ljava/util/Map$Entry, getValue()Ljava/lang/Object; > 17 @34 exception:18,
20 = checkcast <Application,Ljava/util/List>19 <Application,Ljava/util/List>,
22 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 20 @40 exception:21,
24 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,14,
26 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 22 @50 exception:25,
27 = checkcast <Application,Ljava/lang/Long>26 <Application,Ljava/lang/Long>,
29 = invokevirtual < Application, Ljava/lang/Long, longValue()J > 27 @56 exception:28,
31 = invokeinterface < Application, Ljava/util/Map$Entry, getKey()Ljava/lang/Object; > 17 @60 exception:30,
32 = checkcast <Application,Ljava/lang/Integer>31 <Application,Ljava/lang/Integer>,
34 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 32 @66 exception:33,
36 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,29,34 @70 exception:35,
38 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 36 @74 exception:37,
40 = invokevirtual < Application, Ljava/util/HashSet, add(Ljava/lang/Object;)Z > 6,38 @78 exception:39,
goto (from iindex= 39 to iindex = -37),
24 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,14,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,14,
return 6,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, refreshActiveSlots(Ljava/util/Set;)V > 16,18 @32 exception:19,
3 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Ljava/util/HashSet>@12,
invokespecial < Application, Ljava/util/HashSet, <init>()V > 5 @14 exception:6,
7 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
9 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 7 @19 exception:8,
11 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 9 @23 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @27 exception:12,
conditional branch(eq, to iindex=-1) 13,4,
15 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 11 @33 exception:14,
16 = checkcast <Application,Ljava/util/Map$Entry>15 <Application,Ljava/util/Map$Entry>,
18 = invokeinterface < Application, Ljava/util/Map$Entry, getValue()Ljava/lang/Object; > 16 @39 exception:17,
19 = checkcast <Application,Ljava/lang/String>18 <Application,Ljava/lang/String>,
21 = invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, getMode()Ljava/lang/String; > 1 @45 exception:20,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 19,21 @49 exception:22,
conditional branch(eq, to iindex=-1) 23,4,
27 = invokeinterface < Application, Ljava/util/Map$Entry, getKey()Ljava/lang/Object; > 16 @55 exception:26,
28 = checkcast <Application,Ljava/lang/Integer>27 <Application,Ljava/lang/Integer>,
30 = invokevirtual < Application, Ljava/util/HashSet, add(Ljava/lang/Object;)Z > 5,28 @61 exception:29,
goto (from iindex= 31 to iindex = -37),
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @27 exception:12,
conditional branch(eq, to iindex=-1) 13,4,
33 = invokevirtual < Application, Ljava/util/HashSet, iterator()Ljava/util/Iterator; > 5 @65 exception:32,
35 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 33 @69 exception:34,
conditional branch(eq, to iindex=-1) 35,4,
37 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 33 @75 exception:36,
38 = checkcast <Application,Ljava/lang/Integer>37 <Application,Ljava/lang/Integer>,
39 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
41 = invokeinterface < Application, Ljava/util/Map, remove(Ljava/lang/Object;)Ljava/lang/Object; > 39,38 @83 exception:40,
goto (from iindex= 42 to iindex = -17),
35 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 33 @69 exception:34,
conditional branch(eq, to iindex=-1) 35,4,
47 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 2 @87 exception:46,
49 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 47 @91 exception:48,
conditional branch(eq, to iindex=-1) 49,4,
51 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 47 @97 exception:50,
52 = checkcast <Application,Ljava/lang/Integer>51 <Application,Ljava/lang/Integer>,
53 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
55 = invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, getMode()Ljava/lang/String; > 1 @105 exception:54,
57 = invokeinterface < Application, Ljava/util/Map, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 53,52,55 @109 exception:56,
goto (from iindex= 55 to iindex = -21),
49 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 47 @91 exception:48,
conditional branch(eq, to iindex=-1) 49,4,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, saveSlotMap()V > 1 @113 exception:63,
return,
goto (from iindex= 18 to iindex = 9),
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getAuthSecretHal()V > 1 @68 exception:35,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mDeviceProvisionedObserver, <Application,Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, onSystemReady()V > 36 @73 exception:37,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, -$$Nest$fgetmContext(Lcom/android/server/locksettings/LockSettingsService;)Landroid/content/Context; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
return 2,
6 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, frpCredentialEnabled(Landroid/content/Context;)Z > 4 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, isProvisioned()Z > 1 @16 exception:8,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, -$$Nest$fgetmContext(Lcom/android/server/locksettings/LockSettingsService;)Landroid/content/Context; > 2 @2 exception:3,
6 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 4 @6 exception:5,
10 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 6,7,8 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = phi  8,11,
return 12,
conditional branch(ne, to iindex=-1) 9,7,
13 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 10,11 @26 exception:12,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, reportDeviceSetupComplete()V > 1 @29 exception:14,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 2 @2 exception:3,
invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, reportDeviceSetupComplete()V > 4 @6 exception:5,
goto (from iindex= 4 to iindex = 9),
return,
return,
38 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, prefetchUser(I)V > 38,6 @78 exception:39,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, isFetched(I)Z > 4,2 @5 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, contains(ILjava/lang/String;I)Z > 1,3,4,2 @3 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, setFetched(I)V > 8,2 @15 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, put(ILjava/lang/String;Ljava/lang/Object;I)V > 1,3,4,5,2 @6 exception:6,
return,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
12 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, -$$Nest$mgetVersion(Lcom/android/server/locksettings/LockSettingsStorage$Cache;)I > 10 @20 exception:11,
3 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, getVersion()I > 1 @0 exception:2,
return 3,
monitorexit 3,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mOpenHelper, <Application,Lcom/android/server/locksettings/LockSettingsStorage$DatabaseHelper> > 1,
15 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 13 @27 exception:14,
17 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, COLUMNS_FOR_PREFETCH, <Application,[Ljava/lang/String> >,
20 = new <Application,[Ljava/lang/String>@3919 ,
22 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @41 exception:21,
arraystore 20[7] = 22,
24 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 15,16,17,18,20,7,7,7 @51 exception:23,
conditional branch(eq, to iindex=-1) 24,7,
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
28 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,7 @63 exception:27,
30 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,19 @67 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putKeyValueIfUnchanged(Ljava/lang/String;Ljava/lang/Object;II)V > 31,28,30,2,12 @73 exception:32,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putIfUnchanged(ILjava/lang/String;Ljava/lang/Object;II)V > 1,6,2,3,4,5 @6 exception:7,
return,
goto (from iindex= 41 to iindex = -19),
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
invokeinterface < Application, Landroid/database/Cursor, close()V > 24 @77 exception:38,
45 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @80 exception:44,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
return,
40 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
43 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFingerprintManager()Landroid/hardware/fingerprint/FingerprintManager; > 41 @85 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFaceManager()Landroid/hardware/face/FaceManager; > 44 @91 exception:45,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, systemReady(Landroid/hardware/fingerprint/FingerprintManager;Landroid/hardware/face/FaceManager;)V > 40,43,46 @95 exception:47,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void systemReady(){
	if (v1 == 0) {
		Object v2 = new Object(3);
		int v3 = ILockSettings$Stub.getCallingUid();
		Integer v4 = Integer.valueOf(v3);
		int v5 = EventLog.writeEvent(1397638484, v2);
		PackageManager v7 = this.mContext.getPackageManager();
		boolean v8 = v7.hasSystemFeature(""android.software.secure_lock_screen"");
		this.mHasSecureLockScreen = v8;
		String v12 = this.mStorage.getString(""migrated"", 0, 0);
		String v10 = v12;
		if (v10 != 0) {
			ContentResolver v13 = this.mContext.getContentResolver();
			if (0 >= this.VALID_SETTINGS.length) {
				int v14 = v13.getUserId();
				String v15 = Settings$Secure.getStringForUser(v13, this.VALID_SETTINGS[0], v14);
				if (v15 == 0) {
					this.mStorage.setString(this.VALID_SETTINGS[0], v15, 0);
					if ((0 + 1) >= this.VALID_SETTINGS.length) {
						this.mStorage.setString(""migrated"", ""true"", 0);
						String v25 = this.mStorage.getString(""migrated_user_specific"", 0, 0);
						String v23 = v25;
						if (v23 != 0) {
							ContentResolver v26 = this.mContext.getContentResolver();
							List v27 = this.mUserManager.getUsers();
							int v28 = v27.size();
							if (0 >= v28) {
								this.mStorage.setString(""migrated_user_specific"", ""true"", 0);
								String v35 = this.mStorage.getString(""migrated_biometric_weak"", 0, 0);
								String v33 = v35;
								if (v33 != 0) {
									String v38 = this.mStorage.getString(""migrated_lockscreen_disabled"", 0, 0);
									String v36 = v38;
									if (v36 != 0) {
										PackageManager v39 = this.mContext.getPackageManager();
										boolean v40 = v39.hasSystemFeature(""android.hardware.type.watch"");
										if (v40 == 0) {
											String v43 = this.mStorage.getString(""migrated_wear_lockscreen_disabled"", 0, 0);
											String v41 = v43;
											if (v41 != 0) {
												List v44 = this.mUserManager.getUsers();
												int v45 = v44.size();
												if (0 >= v45) {
													this.mStorage.setString(""migrated_wear_lockscreen_disabled"", ""true"", 0);
													String v52 = this.mStorage.getString(""migrated_keystore_namespace"", 0, 0);
													String v50 = v52;
													if (v50 != 0) {
														if (this.mGateKeeperService == 0) {
															IBinder v54 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
															if (v54 == 0) {
																LockSettingsService$GateKeeperDiedRecipient v55 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
																v54.linkToDeath(v55, 0);
																if (v54 != 0) {
																	IInterface v59 = v54.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
																	if (v59 == 0) {
																		if (v59 instanceof IGateKeeperService == 0) {
																			IGateKeeperService$Stub$Proxy v60 = new IGateKeeperService$Stub$Proxy(v54);
																			IGateKeeperService v58 = v60;
																			this.mGateKeeperService = v58;
																			IGateKeeperService v53 = v58;
																			if (this.mWeaver == 0) {
																				this.mWeaverConfig = 0;
																				IWeaver v64 = IWeaver.getService(1);
																				IWeaver v63 = 0;
																				this.mWeaver = v63;
																				if (v63 == 0) {
																					SyntheticPasswordManager$$ExternalSyntheticLambda0 v66 = new SyntheticPasswordManager$$ExternalSyntheticLambda0(SyntheticPasswordManager);
																					v63.getConfig(v66);
																					Map v70 = this.mStorage.listSyntheticPasswordHandlesForAllUsers(""weaver"");
																					HashSet v71 = new HashSet();
																					Set v73 = v70.entrySet();
																					Iterator v74 = v73.iterator();
																					boolean v75 = v74.hasNext();
																					if (v75 == 0) {
																						Object v76 = v74.next();
																						Object v77 = v76.getValue();
																						Iterator v78 = v77.iterator();
																						boolean v79 = v78.hasNext();
																						if (v79 == 0) {
																							Object v80 = v78.next();
																							long v81 = v80.longValue();
																							Object v82 = v76.getKey();
																							int v83 = v82.intValue();
																							int v84 = SyntheticPasswordManager.loadWeaverSlot(v81, v83);
																							Integer v85 = Integer.valueOf(v84);
																							boolean v86 = v71.add(v85);
																							boolean v87 = v78.hasNext();
																							if (v87 == 0) {
																								boolean v88 = v74.hasNext();
																								if (v88 == 0) {
																									Set v69 = v71;
																									if (this.mSlotMap != 0) {
																										HashSet v90 = new HashSet();
																										Set v92 = this.mSlotMap.entrySet();
																										Iterator v93 = v92.iterator();
																										boolean v94 = v93.hasNext();
																										if (v94 == 0) {
																											Object v95 = v93.next();
																											Object v96 = v95.getValue();
																											String v97 = PasswordSlotManager.getMode();
																											boolean v98 = v96.equals(v97);
																											if (v98 == 0) {
																												Object v99 = v95.getKey();
																												boolean v100 = v90.add(v99);
																												boolean v101 = v93.hasNext();
																												if (v101 == 0) {
																													Iterator v102 = v90.iterator();
																													boolean v103 = v102.hasNext();
																													if (v103 == 0) {
																														Object v104 = v102.next();
																														Object v105 = this.mSlotMap.remove(v104);
																														boolean v106 = v102.hasNext();
																														if (v106 == 0) {
																															Iterator v107 = v69.iterator();
																															boolean v108 = v107.hasNext();
																															if (v108 == 0) {
																																Object v109 = v107.next();
																																String v110 = PasswordSlotManager.getMode();
																																Object v111 = this.mSlotMap.put(v109, v110);
																																boolean v112 = v107.hasNext();
																																if (v112 == 0) {
																																	PasswordSlotManager.saveSlotMap();
																																	p0.getAuthSecretHal();
																																	Context v116 = this.mContext;
																																	boolean v117 = LockPatternUtils.frpCredentialEnabled(v116);
																																	if (v117 == 0) {
																																		Context v119 = LockSettingsService.-$$Nest$fgetmContext(this.this$0);
																																		ContentResolver v120 = v119.getContentResolver();
																																		int v121 = Settings$Global.getInt(v120, ""device_provisioned"", 0);
																																		if (v121 == 0) {
																																			boolean v118 = 0;
																																			if (v118 != 0) {
																																				IGateKeeperService v124 = this.this$0.getGateKeeperService();
																																				v124.reportDeviceSetupComplete();
																																				boolean v128 = LockSettingsStorage$Cache.contains(2, """", 0);
																																				boolean v127 = v128;
																																				if (v127 == 0) {
																																					LockSettingsStorage$Cache.put(2, ""isFetched"", ""true"", 0);
																																					int v132 = this.mCache.getVersion();
																																					int v131 = v132;
																																					SQLiteDatabase v133 = this.mOpenHelper.getReadableDatabase();
																																					String v134 = new String(1);
																																					String v135 = Integer.toString(0);
																																					Cursor v136 = v133.query(""locksettings"", this.COLUMNS_FOR_PREFETCH, ""user=?"", v134, 0, 0, 0);
																																					if (v136 == 0) {
																																						boolean v137 = v136.moveToNext();
																																						if (v137 == 0) {
																																							String v138 = v136.getString(0);
																																							String v139 = v136.getString(1);
																																							LockSettingsStorage$Cache.putIfUnchanged(0, v138, v139, 0, v131);
																																							boolean v142 = v136.moveToNext();
																																							if (v142 == 0) {
																																								v136.close();
																																								LockSettingsStorage$CredentialHash v145 = LockSettingsStorage.readPasswordHashIfExists(0);
																																								if (v145 == 0) {
																																									LockSettingsStorage$CredentialHash v146 = LockSettingsStorage.readPatternHashIfExists(0);
																																									if (v146 == 0) {
																																										LockSettingsStorage$CredentialHash v147 = LockSettingsStorage$CredentialHash.createEmptyHash();
																																										LockSettingsStorage$CredentialHash v144 = v147;
																																										FingerprintManager v148 = this.mInjector.getFingerprintManager();
																																										FaceManager v149 = this.mInjector.getFaceManager();
																																										this.mBiometricDeferredQueue.systemReady(v148, v149);
																																										return;
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","systemReady()V","2","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
5 = invokevirtual < Application, Landroid/content/Context, checkCallingOrSelfPermission(Ljava/lang/String;)I > 2,3 @4 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = new <Application,[Ljava/lang/Object>@158 ,
arraystore 9[6] = 10,
13 = invokestatic < Application, Lcom/android/internal/widget/ILockSettings$Stub, getCallingUid()I > @22 exception:12,
15 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 13 @26 exception:14,
arraystore 9[11] = 15,
arraystore 9[16] = 17,
19 = invokestatic < Application, Landroid/util/EventLog, writeEvent(I[Ljava/lang/Object;)I > 7,9 @37 exception:18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,6 @40 exception:23,
24 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
26 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 24 @45 exception:25,
29 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 26,27 @51 exception:28,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > = 29,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, migrateOldData()V > 1 @57 exception:30,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,3,3 @7 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 6 @15 exception:7,
9 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsService, VALID_SETTINGS, <Application,[Ljava/lang/String> >,
10 = arraylength 9,
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
11 = arrayload 9[20],
13 = invokevirtual < Application, Landroid/content/ContentResolver, getUserId()I > 8 @27 exception:12,
15 = invokestatic < Application, Landroid/provider/Settings$Secure, getStringForUser(Landroid/content/ContentResolver;Ljava/lang/String;I)Ljava/lang/String; > 8,11,13 @31 exception:14,
conditional branch(eq, to iindex=-1) 15,3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,11,15,3 @37 exception:16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
19 = binaryop(add) 20 , 18,
goto (from iindex= 22 to iindex = -19),
20 = phi  19,3,
conditional branch(ge, to iindex=-1) 20,10,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,23,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
28 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,26 @56 exception:27,
34 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,32,3,3 @62 exception:33,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 34,3,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
38 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 36 @72 exception:37,
39 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
41 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 39 @78 exception:40,
80 = phi  78,3,
43 = invokeinterface < Application, Ljava/util/List, size()I > 41 @83 exception:42,
conditional branch(ge, to iindex=-1) 80,43,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,32,23,3 @173 exception:83,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
86 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,84 @180 exception:85,
95 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,93,3,3 @186 exception:94,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 95,3,
96 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
98 = invokevirtual < Application, Landroid/os/UserManager, getUsers()Ljava/util/List; > 96 @194 exception:97,
118 = phi  117,3,
100 = invokeinterface < Application, Ljava/util/List, size()I > 98 @199 exception:99,
conditional branch(ge, to iindex=-1) 118,100,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,93,23,3 @251 exception:127,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,
130 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 25,128 @258 exception:129,
144 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,142,3,3 @264 exception:143,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 144,3,
195 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
197 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 195 @349 exception:196,
200 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 197,198 @355 exception:199,
conditional branch(eq, to iindex=-1) 200,3,
203 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,201,3,3 @364 exception:202,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 203,3,
233 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,231,3,3 @418 exception:232,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 6,2,3,4 @5 exception:7,
return 8,
conditional branch(ne, to iindex=-1) 233,3,
return,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @60 exception:31,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
9 = checkcast <Application,Landroid/service/gatekeeper/IGateKeeperService>5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
return 9,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
33 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, initWeaverService()V > 33 @65 exception:34,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > 1,
conditional branch(eq, to iindex=-1) 2,3,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaverConfig, <Application,Landroid/hardware/weaver/V1_0/WeaverConfig> > = 3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getWeaverService()Landroid/hardware/weaver/V1_0/IWeaver; > 1 @10 exception:4,
4 = invokestatic < Application, Landroid/hardware/weaver/V1_0/IWeaver, getService(Z)Landroid/hardware/weaver/V1_0/IWeaver; > 2 @1 exception:3,
8 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 5,6 @10 exception:7,
return 9,
putfield 1.< Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mWeaver, <Application,Landroid/hardware/weaver/V1_0/IWeaver> > = 5,
conditional branch(eq, to iindex=-1) 5,3,
6 = new <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0>@18,
invokespecial < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$$ExternalSyntheticLambda0, <init>(Lcom/android/server/locksettings/SyntheticPasswordManager;)V > 6,1 @20 exception:7,
invokeinterface < Application, Landroid/hardware/weaver/V1_0/IWeaver, getConfig(Landroid/hardware/weaver/V1_0/IWeaver$getConfigCallback;)V > 5,6 @23 exception:8,
16 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mPasswordSlotManager, <Application,Lcom/android/server/locksettings/PasswordSlotManager> > 1,
18 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, getUsedWeaverSlots()Ljava/util/Set; > 1 @28 exception:17,
2 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, listSyntheticPasswordHandlesForAllUsers(Ljava/lang/String;)Ljava/util/Map; > 2,3 @5 exception:4,
6 = new <Application,Ljava/util/HashSet>@9,
invokespecial < Application, Ljava/util/HashSet, <init>()V > 6 @11 exception:7,
9 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 5 @14 exception:8,
11 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 9 @18 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,14,
16 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 11 @28 exception:15,
17 = checkcast <Application,Ljava/util/Map$Entry>16 <Application,Ljava/util/Map$Entry>,
19 = invokeinterface < Application, Ljava/util/Map$Entry, getValue()Ljava/lang/Object; > 17 @34 exception:18,
20 = checkcast <Application,Ljava/util/List>19 <Application,Ljava/util/List>,
22 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 20 @40 exception:21,
24 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,14,
26 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 22 @50 exception:25,
27 = checkcast <Application,Ljava/lang/Long>26 <Application,Ljava/lang/Long>,
29 = invokevirtual < Application, Ljava/lang/Long, longValue()J > 27 @56 exception:28,
31 = invokeinterface < Application, Ljava/util/Map$Entry, getKey()Ljava/lang/Object; > 17 @60 exception:30,
32 = checkcast <Application,Ljava/lang/Integer>31 <Application,Ljava/lang/Integer>,
34 = invokevirtual < Application, Ljava/lang/Integer, intValue()I > 32 @66 exception:33,
36 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadWeaverSlot(JI)I > 1,29,34 @70 exception:35,
38 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 36 @74 exception:37,
40 = invokevirtual < Application, Ljava/util/HashSet, add(Ljava/lang/Object;)Z > 6,38 @78 exception:39,
goto (from iindex= 39 to iindex = -37),
24 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 22 @44 exception:23,
conditional branch(eq, to iindex=-1) 24,14,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @22 exception:12,
conditional branch(eq, to iindex=-1) 13,14,
return 6,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, refreshActiveSlots(Ljava/util/Set;)V > 16,18 @32 exception:19,
3 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
conditional branch(ne, to iindex=-1) 3,4,
5 = new <Application,Ljava/util/HashSet>@12,
invokespecial < Application, Ljava/util/HashSet, <init>()V > 5 @14 exception:6,
7 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
9 = invokeinterface < Application, Ljava/util/Map, entrySet()Ljava/util/Set; > 7 @19 exception:8,
11 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 9 @23 exception:10,
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @27 exception:12,
conditional branch(eq, to iindex=-1) 13,4,
15 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 11 @33 exception:14,
16 = checkcast <Application,Ljava/util/Map$Entry>15 <Application,Ljava/util/Map$Entry>,
18 = invokeinterface < Application, Ljava/util/Map$Entry, getValue()Ljava/lang/Object; > 16 @39 exception:17,
19 = checkcast <Application,Ljava/lang/String>18 <Application,Ljava/lang/String>,
21 = invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, getMode()Ljava/lang/String; > 1 @45 exception:20,
23 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 19,21 @49 exception:22,
conditional branch(eq, to iindex=-1) 23,4,
27 = invokeinterface < Application, Ljava/util/Map$Entry, getKey()Ljava/lang/Object; > 16 @55 exception:26,
28 = checkcast <Application,Ljava/lang/Integer>27 <Application,Ljava/lang/Integer>,
30 = invokevirtual < Application, Ljava/util/HashSet, add(Ljava/lang/Object;)Z > 5,28 @61 exception:29,
goto (from iindex= 31 to iindex = -37),
13 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 11 @27 exception:12,
conditional branch(eq, to iindex=-1) 13,4,
33 = invokevirtual < Application, Ljava/util/HashSet, iterator()Ljava/util/Iterator; > 5 @65 exception:32,
35 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 33 @69 exception:34,
conditional branch(eq, to iindex=-1) 35,4,
37 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 33 @75 exception:36,
38 = checkcast <Application,Ljava/lang/Integer>37 <Application,Ljava/lang/Integer>,
39 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
41 = invokeinterface < Application, Ljava/util/Map, remove(Ljava/lang/Object;)Ljava/lang/Object; > 39,38 @83 exception:40,
goto (from iindex= 42 to iindex = -17),
35 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 33 @69 exception:34,
conditional branch(eq, to iindex=-1) 35,4,
47 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 2 @87 exception:46,
49 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 47 @91 exception:48,
conditional branch(eq, to iindex=-1) 49,4,
51 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 47 @97 exception:50,
52 = checkcast <Application,Ljava/lang/Integer>51 <Application,Ljava/lang/Integer>,
53 = getfield < Application, Lcom/android/server/locksettings/PasswordSlotManager, mSlotMap, <Application,Ljava/util/Map> > 1,
55 = invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, getMode()Ljava/lang/String; > 1 @105 exception:54,
57 = invokeinterface < Application, Ljava/util/Map, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 53,52,55 @109 exception:56,
goto (from iindex= 55 to iindex = -21),
49 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 47 @91 exception:48,
conditional branch(eq, to iindex=-1) 49,4,
invokevirtual < Application, Lcom/android/server/locksettings/PasswordSlotManager, saveSlotMap()V > 1 @113 exception:63,
return,
goto (from iindex= 18 to iindex = 9),
monitorexit 1,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getAuthSecretHal()V > 1 @68 exception:35,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mDeviceProvisionedObserver, <Application,Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, onSystemReady()V > 36 @73 exception:37,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, -$$Nest$fgetmContext(Lcom/android/server/locksettings/LockSettingsService;)Landroid/content/Context; > 2 @2 exception:3,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
return 2,
6 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, frpCredentialEnabled(Landroid/content/Context;)Z > 4 @6 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, isProvisioned()Z > 1 @16 exception:8,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, -$$Nest$fgetmContext(Lcom/android/server/locksettings/LockSettingsService;)Landroid/content/Context; > 2 @2 exception:3,
6 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 4 @6 exception:5,
10 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 6,7,8 @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = phi  8,11,
return 12,
conditional branch(ne, to iindex=-1) 9,7,
13 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 10,11 @26 exception:12,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, reportDeviceSetupComplete()V > 1 @29 exception:14,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService$DeviceProvisionedObserver, this$0, <Application,Lcom/android/server/locksettings/LockSettingsService> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 2 @2 exception:3,
invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, reportDeviceSetupComplete()V > 4 @6 exception:5,
goto (from iindex= 4 to iindex = 9),
return,
return,
38 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, prefetchUser(I)V > 38,6 @78 exception:39,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, isFetched(I)Z > 4,2 @5 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, contains(ILjava/lang/String;I)Z > 1,3,4,2 @3 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, setFetched(I)V > 8,2 @15 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, put(ILjava/lang/String;Ljava/lang/Object;I)V > 1,3,4,5,2 @6 exception:6,
return,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
12 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, -$$Nest$mgetVersion(Lcom/android/server/locksettings/LockSettingsStorage$Cache;)I > 10 @20 exception:11,
3 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, getVersion()I > 1 @0 exception:2,
return 3,
monitorexit 3,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mOpenHelper, <Application,Lcom/android/server/locksettings/LockSettingsStorage$DatabaseHelper> > 1,
15 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 13 @27 exception:14,
17 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, COLUMNS_FOR_PREFETCH, <Application,[Ljava/lang/String> >,
20 = new <Application,[Ljava/lang/String>@3919 ,
22 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @41 exception:21,
arraystore 20[7] = 22,
24 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 15,16,17,18,20,7,7,7 @51 exception:23,
conditional branch(eq, to iindex=-1) 24,7,
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
28 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,7 @63 exception:27,
30 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,19 @67 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mCache, <Application,Lcom/android/server/locksettings/LockSettingsStorage$Cache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putKeyValueIfUnchanged(Ljava/lang/String;Ljava/lang/Object;II)V > 31,28,30,2,12 @73 exception:32,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage$Cache, putIfUnchanged(ILjava/lang/String;Ljava/lang/Object;II)V > 1,6,2,3,4,5 @6 exception:7,
return,
goto (from iindex= 41 to iindex = -19),
26 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 24 @57 exception:25,
conditional branch(eq, to iindex=-1) 26,7,
invokeinterface < Application, Landroid/database/Cursor, close()V > 24 @77 exception:38,
45 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @80 exception:44,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
return,
40 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
41 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
43 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFingerprintManager()Landroid/hardware/fingerprint/FingerprintManager; > 41 @85 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
46 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, getFaceManager()Landroid/hardware/face/FaceManager; > 44 @91 exception:45,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, systemReady(Landroid/hardware/fingerprint/FingerprintManager;Landroid/hardware/face/FaceManager;)V > 40,43,46 @95 exception:47,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void systemReady(){
	if (v1 == 0) {
		Object v2 = new Object(3);
		int v3 = ILockSettings$Stub.getCallingUid();
		Integer v4 = Integer.valueOf(v3);
		int v5 = EventLog.writeEvent(1397638484, v2);
		PackageManager v7 = this.mContext.getPackageManager();
		boolean v8 = v7.hasSystemFeature(""android.software.secure_lock_screen"");
		this.mHasSecureLockScreen = v8;
		String v12 = this.mStorage.getString(""migrated"", 0, 0);
		String v10 = v12;
		if (v10 != 0) {
			ContentResolver v13 = this.mContext.getContentResolver();
			if (0 >= this.VALID_SETTINGS.length) {
				int v14 = v13.getUserId();
				String v15 = Settings$Secure.getStringForUser(v13, this.VALID_SETTINGS[0], v14);
				if (v15 == 0) {
					this.mStorage.setString(this.VALID_SETTINGS[0], v15, 0);
					if ((0 + 1) >= this.VALID_SETTINGS.length) {
						this.mStorage.setString(""migrated"", ""true"", 0);
						String v25 = this.mStorage.getString(""migrated_user_specific"", 0, 0);
						String v23 = v25;
						if (v23 != 0) {
							ContentResolver v26 = this.mContext.getContentResolver();
							List v27 = this.mUserManager.getUsers();
							int v28 = v27.size();
							if (0 >= v28) {
								this.mStorage.setString(""migrated_user_specific"", ""true"", 0);
								String v35 = this.mStorage.getString(""migrated_biometric_weak"", 0, 0);
								String v33 = v35;
								if (v33 != 0) {
									List v36 = this.mUserManager.getUsers();
									int v37 = v36.size();
									if (0 >= v37) {
										this.mStorage.setString(""migrated_biometric_weak"", ""true"", 0);
										String v44 = this.mStorage.getString(""migrated_lockscreen_disabled"", 0, 0);
										String v42 = v44;
										if (v42 != 0) {
											PackageManager v45 = this.mContext.getPackageManager();
											boolean v46 = v45.hasSystemFeature(""android.hardware.type.watch"");
											if (v46 == 0) {
												String v49 = this.mStorage.getString(""migrated_wear_lockscreen_disabled"", 0, 0);
												String v47 = v49;
												if (v47 != 0) {
													String v52 = this.mStorage.getString(""migrated_keystore_namespace"", 0, 0);
													String v50 = v52;
													if (v50 != 0) {
														if (this.mGateKeeperService == 0) {
															IBinder v54 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
															if (v54 == 0) {
																LockSettingsService$GateKeeperDiedRecipient v55 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
																v54.linkToDeath(v55, 0);
																if (v54 != 0) {
																	IInterface v59 = v54.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
																	if (v59 == 0) {
																		if (v59 instanceof IGateKeeperService == 0) {
																			IGateKeeperService v58 = v59;
																			this.mGateKeeperService = v58;
																			IGateKeeperService v53 = v58;
																			if (this.mWeaver == 0) {
																				this.mWeaverConfig = 0;
																				IWeaver v62 = IWeaver.getService(1);
																				IWeaver v61 = 0;
																				this.mWeaver = v61;
																				if (v61 == 0) {
																					SyntheticPasswordManager$$ExternalSyntheticLambda0 v64 = new SyntheticPasswordManager$$ExternalSyntheticLambda0(SyntheticPasswordManager);
																					v61.getConfig(v64);
																					Map v68 = this.mStorage.listSyntheticPasswordHandlesForAllUsers(""weaver"");
																					HashSet v69 = new HashSet();
																					Set v71 = v68.entrySet();
																					Iterator v72 = v71.iterator();
																					boolean v73 = v72.hasNext();
																					if (v73 == 0) {
																						Object v74 = v72.next();
																						Object v75 = v74.getValue();
																						Iterator v76 = v75.iterator();
																						boolean v77 = v76.hasNext();
																						if (v77 == 0) {
																							Object v78 = v76.next();
																							long v79 = v78.longValue();
																							Object v80 = v74.getKey();
																							int v81 = v80.intValue();
																							int v82 = SyntheticPasswordManager.loadWeaverSlot(v79, v81);
																							Integer v83 = Integer.valueOf(v82);
																							boolean v84 = v69.add(v83);
																							boolean v85 = v76.hasNext();
																							if (v85 == 0) {
																								boolean v86 = v72.hasNext();
																								if (v86 == 0) {
																									Set v67 = v69;
																									if (this.mSlotMap != 0) {
																										HashSet v88 = new HashSet();
																										Set v90 = this.mSlotMap.entrySet();
																										Iterator v91 = v90.iterator();
																										boolean v92 = v91.hasNext();
																										if (v92 == 0) {
																											Object v93 = v91.next();
																											Object v94 = v93.getValue();
																											String v95 = PasswordSlotManager.getMode();
																											boolean v96 = v94.equals(v95);
																											if (v96 == 0) {
																												Object v97 = v93.getKey();
																												boolean v98 = v88.add(v97);
																												boolean v99 = v91.hasNext();
																												if (v99 == 0) {
																													Iterator v100 = v88.iterator();
																													boolean v101 = v100.hasNext();
																													if (v101 == 0) {
																														Object v102 = v100.next();
																														Object v103 = this.mSlotMap.remove(v102);
																														boolean v104 = v100.hasNext();
																														if (v104 == 0) {
																															Iterator v105 = v67.iterator();
																															boolean v106 = v105.hasNext();
																															if (v106 == 0) {
																																Object v107 = v105.next();
																																String v108 = PasswordSlotManager.getMode();
																																Object v109 = this.mSlotMap.put(v107, v108);
																																boolean v110 = v105.hasNext();
																																if (v110 == 0) {
																																	PasswordSlotManager.saveSlotMap();
																																	p0.getAuthSecretHal();
																																	Context v114 = this.mContext;
																																	boolean v115 = LockPatternUtils.frpCredentialEnabled(v114);
																																	if (v115 == 0) {
																																		Context v117 = LockSettingsService.-$$Nest$fgetmContext(this.this$0);
																																		ContentResolver v118 = v117.getContentResolver();
																																		int v119 = Settings$Global.getInt(v118, ""device_provisioned"", 0);
																																		if (v119 == 0) {
																																			boolean v116 = 0;
																																			if (v116 != 0) {
																																				IGateKeeperService v122 = this.this$0.getGateKeeperService();
																																				v122.reportDeviceSetupComplete();
																																				boolean v126 = LockSettingsStorage$Cache.contains(2, """", 0);
																																				boolean v125 = v126;
																																				if (v125 == 0) {
																																					LockSettingsStorage$Cache.put(2, ""isFetched"", ""true"", 0);
																																					int v130 = this.mCache.getVersion();
																																					int v129 = v130;
																																					SQLiteDatabase v131 = this.mOpenHelper.getReadableDatabase();
																																					String v132 = new String(1);
																																					String v133 = Integer.toString(0);
																																					Cursor v134 = v131.query(""locksettings"", this.COLUMNS_FOR_PREFETCH, ""user=?"", v132, 0, 0, 0);
																																					if (v134 == 0) {
																																						boolean v135 = v134.moveToNext();
																																						if (v135 == 0) {
																																							String v136 = v134.getString(0);
																																							String v137 = v134.getString(1);
																																							LockSettingsStorage$Cache.putIfUnchanged(0, v136, v137, 0, v129);
																																							boolean v140 = v134.moveToNext();
																																							if (v140 == 0) {
																																								v134.close();
																																								LockSettingsStorage$CredentialHash v143 = LockSettingsStorage.readPasswordHashIfExists(0);
																																								if (v143 == 0) {
																																									LockSettingsStorage$CredentialHash v144 = LockSettingsStorage.readPatternHashIfExists(0);
																																									if (v144 == 0) {
																																										LockSettingsStorage$CredentialHash v145 = LockSettingsStorage$CredentialHash.createEmptyHash();
																																										LockSettingsStorage$CredentialHash v142 = v145;
																																										FingerprintManager v146 = this.mInjector.getFingerprintManager();
																																										FaceManager v147 = this.mInjector.getFaceManager();
																																										this.mBiometricDeferredQueue.systemReady(v146, v147);
																																										return;
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot;","0","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot; > 2 @2 exception:3,
return 4,","depth : 0
-----
","public KeyChainSnapshot getKeyChainSnapshot(){
	KeyChainSnapshot v1 = this.mRecoverableKeyStoreManager.getKeyChainSnapshot();
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot;","1","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot; > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:2,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mSnapshotStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySnapshotStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySnapshotStorage, get(I)Landroid/security/keystore/recovery/KeyChainSnapshot; > 5,4 @9 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
return 7,
return 4,","depth : 0
-----
depth : 1
-----
","public KeyChainSnapshot getKeyChainSnapshot(){
	int v3 = Binder.getCallingUid();
	KeyChainSnapshot v4 = this.mSnapshotStorage.get(v3);
	if (v4 == 0) {
		KeyChainSnapshot v1 = v4;
		return v1;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot;","2","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot; > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:2,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mSnapshotStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySnapshotStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySnapshotStorage, get(I)Landroid/security/keystore/recovery/KeyChainSnapshot; > 5,4 @9 exception:6,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySnapshotStorage, mSnapshotByUid, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @3 exception:4,
6 = checkcast <Application,Landroid/security/keystore/recovery/KeyChainSnapshot>5 <Application,Landroid/security/keystore/recovery/KeyChainSnapshot>,
conditional branch(eq, to iindex=-1) 6,7,
monitorexit 1,
return 6,
conditional branch(eq, to iindex=-1) 7,8,
return 7,
return 4,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public KeyChainSnapshot getKeyChainSnapshot(){
	int v3 = Binder.getCallingUid();
	Object v5 = this.mSnapshotByUid.get(v3);
	if (v5 == 0) {
		KeyChainSnapshot v4 = v5;
		if (v4 == 0) {
			KeyChainSnapshot v1 = v4;
			return v1;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot;","2","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getKeyChainSnapshot()Landroid/security/keystore/recovery/KeyChainSnapshot; > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:2,
4 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @3 exception:3,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mSnapshotStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySnapshotStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySnapshotStorage, get(I)Landroid/security/keystore/recovery/KeyChainSnapshot; > 5,4 @9 exception:6,
monitorenter 1,
3 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySnapshotStorage, mSnapshotByUid, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @3 exception:4,
6 = checkcast <Application,Landroid/security/keystore/recovery/KeyChainSnapshot>5 <Application,Landroid/security/keystore/recovery/KeyChainSnapshot>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySnapshotStorage, readFromDisk(I)Landroid/security/keystore/recovery/KeyChainSnapshot; > 1,2 @13 exception:8,
monitorexit 1,
return 9,
conditional branch(eq, to iindex=-1) 7,8,
return 7,
return 4,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public KeyChainSnapshot getKeyChainSnapshot(){
	int v3 = Binder.getCallingUid();
	Object v5 = this.mSnapshotByUid.get(v3);
	if (v5 == 0) {
		KeyChainSnapshot v6 = RecoverySnapshotStorage.readFromDisk(v3);
		KeyChainSnapshot v4 = v6;
		if (v4 == 0) {
			KeyChainSnapshot v1 = v4;
			return v1;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String;","0","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String; > 5,2,3,4 @2 exception:6,
return 7,","depth : 0
-----
","public String importKeyWithMetadata(String p1, byte[] p2, byte[] p3){
	String v1 = this.mRecoverableKeyStoreManager.importKeyWithMetadata(p1, p2, p3);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String;","1","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String; > 5,2,3,4 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:5,
8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,6 @5 exception:7,
11 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 3,9 @10 exception:10,
12 = arraylength 3,
conditional branch(ne, to iindex=-1) 12,13,
23 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @18 exception:22,
25 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @22 exception:24,
27 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mPlatformKeyManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager> > 1,
29 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKey(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 27,25 @30 exception:28,
40 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverableKeyGenerator, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, importKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;IILjava/lang/String;[B[B)V > 40,29,25,23,2,3,4 @41 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 42,25,23,2,3 @46 exception:43,
52 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,25,23,2 @49 exception:51,
return 52,
return 7,","depth : 0
-----
depth : 1
-----
","public String importKeyWithMetadata(String p1, byte[] p2, byte[] p3){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	Object v4 = Objects.requireNonNull(p2, ""keyBytes is null"");
	if (p2.length != 32) {
		int v5 = Binder.getCallingUid();
		int v6 = UserHandle.getCallingUserId();
		PlatformEncryptionKey v7 = this.mPlatformKeyManager.getEncryptKey(v6);
		this.mRecoverableKeyGenerator.importKey(v7, v6, v5, p1, p2, p3);
		this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, p2);
		String v10 = RecoverableKeyStoreManager.getAlias(v6, v5, p1);
		String v1 = v10;
		return v1;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String;","2","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String; > 5,2,3,4 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:5,
8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,6 @5 exception:7,
11 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 3,9 @10 exception:10,
12 = arraylength 3,
conditional branch(ne, to iindex=-1) 12,13,
23 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @18 exception:22,
25 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @22 exception:24,
27 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mPlatformKeyManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager> > 1,
29 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKey(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 27,25 @30 exception:28,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, init(I)V > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getDecryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformDecryptionKey; > 1,2 @3 exception:4,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 1,2 @6 exception:6,
10 = getstatic < Application, Ljava/util/Locale, US, <Application,Ljava/util/Locale> >,
12 = new <Application,[Ljava/lang/Object>@1411 ,
15 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @17 exception:14,
arraystore 12[13] = 15,
18 = invokestatic < Application, Ljava/lang/String, format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 10,16,12 @25 exception:17,
21 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 19,18 @31 exception:20,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, regenerate(I)V > 1,2 @34 exception:22,
24 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 1,2 @37 exception:23,
return 24,
40 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverableKeyGenerator, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, importKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;IILjava/lang/String;[B[B)V > 40,29,25,23,2,3,4 @41 exception:41,
8 = new <Application,Ljavax/crypto/spec/SecretKeySpec>@0,
invokespecial < Application, Ljavax/crypto/spec/SecretKeySpec, <init>([BLjava/lang/String;)V > 8,6,9 @4 exception:10,
12 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/WrappedKey, fromSecretKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;Ljavax/crypto/SecretKey;[B)Lcom/android/server/locksettings/recoverablekeystore/WrappedKey; > 2,8,7 @7 exception:11,
13 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, insertKey(IILjava/lang/String;Lcom/android/server/locksettings/recoverablekeystore/WrappedKey;)J > 13,3,4,5,12 @13 exception:14,
17 = binaryop(lt) 15 , 16,
conditional branch(eq, to iindex=-1) 17,19,
30 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
32 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 30,3,4,18 @26 exception:31,
return,
42 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 42,25,23,2,3 @46 exception:43,
6 = getstatic < Application, Ljava/util/Locale, US, <Application,Ljava/util/Locale> >,
8 = new <Application,[Ljava/lang/Object>@37 ,
10 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @5 exception:9,
arraystore 8[11] = 10,
13 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 3 @12 exception:12,
arraystore 8[14] = 13,
arraystore 8[15] = 4,
16 = arraylength 5,
18 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 16 @23 exception:17,
arraystore 8[19] = 18,
22 = invokestatic < Application, Ljava/lang/String, format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 6,20,8 @32 exception:21,
25 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 23,22 @38 exception:24,
26 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, mKeyStore, <Application,Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy> > 1,
28 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getInternalAlias(IILjava/lang/String;)Ljava/lang/String; > 1,2,3,4 @43 exception:27,
29 = new <Application,Ljava/security/KeyStore$SecretKeyEntry>@47,
30 = new <Application,Ljavax/crypto/spec/SecretKeySpec>@49,
invokespecial < Application, Ljavax/crypto/spec/SecretKeySpec, <init>([BLjava/lang/String;)V > 30,5,31 @53 exception:32,
invokespecial < Application, Ljava/security/KeyStore$SecretKeyEntry, <init>(Ljavax/crypto/SecretKey;)V > 29,30 @56 exception:33,
34 = new <Application,Landroid/security/keystore/KeyProtection$Builder>@59,
invokespecial < Application, Landroid/security/keystore/KeyProtection$Builder, <init>(I)V > 34,19 @61 exception:35,
37 = new <Application,[Ljava/lang/String>@6614 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyProtection$Builder; > 34,37 @70 exception:38,
41 = new <Application,[Ljava/lang/String>@7614 ,
43 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyProtection$Builder; > 39,41 @80 exception:42,
45 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, build()Landroid/security/keystore/KeyProtection; > 43 @84 exception:44,
invokeinterface < Application, Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy, setEntry(Ljava/lang/String;Ljava/security/KeyStore$Entry;Ljava/security/KeyStore$ProtectionParameter;)V > 26,28,29,45 @88 exception:46,
return,
52 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,25,23,2 @49 exception:51,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getGrantAlias(IILjava/lang/String;)Ljava/lang/String; > 5,2,3,4 @2 exception:6,
return 7,
return 52,
return 7,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public String importKeyWithMetadata(String p1, byte[] p2, byte[] p3){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	Object v4 = Objects.requireNonNull(p2, ""keyBytes is null"");
	if (p2.length != 32) {
		int v5 = Binder.getCallingUid();
		int v6 = UserHandle.getCallingUserId();
		PlatformKeyManager.init(v6);
		PlatformDecryptionKey v9 = PlatformKeyManager.getDecryptKeyInternal(v6);
		PlatformEncryptionKey v10 = PlatformKeyManager.getEncryptKeyInternal(v6);
		Integer v12 = Integer.valueOf(v6);
		PlatformKeyManager.regenerate(v6);
		PlatformEncryptionKey v16 = PlatformKeyManager.getEncryptKeyInternal(v6);
		PlatformEncryptionKey v7 = v16;
		SecretKeySpec v18 = new SecretKeySpec(p2,""AES"");
		WrappedKey v20 = WrappedKey.fromSecretKey(v7, v18, p3);
		long v21 = this.mDatabase.insertKey(v6, v5, p1, v20);
		if ((v21 < -1) == 0) {
			long v22 = this.mDatabase.setShouldCreateSnapshot(v6, v5, 1);
			Integer v25 = Integer.valueOf(v6);
			Integer v26 = Integer.valueOf(v5);
			Integer v27 = Integer.valueOf(p2.length);
			String v30 = ApplicationKeyStorage.getInternalAlias(v6, v5, p1);
			KeyStore$SecretKeyEntry v31 = new KeyStore$SecretKeyEntry(v32);
			SecretKeySpec v32 = new SecretKeySpec(p2,""AES"");
			KeyProtection$Builder v35 = new KeyProtection$Builder(3);
			String v37 = new String(1);
			KeyProtection$Builder v38 = v35.setBlockModes(v37);
			String v39 = new String(1);
			KeyProtection$Builder v40 = v38.setEncryptionPaddings(v39);
			KeyProtection v41 = v40.build();
			this.mKeyStore.setEntry(v30, v31, v41);
			String v44 = this.mApplicationKeyStorage.getGrantAlias(v6, v5, p1);
			String v43 = v44;
			String v1 = v43;
			return v1;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String;","2","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String; > 5,2,3,4 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:5,
8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,6 @5 exception:7,
11 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 3,9 @10 exception:10,
12 = arraylength 3,
conditional branch(ne, to iindex=-1) 12,13,
23 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @18 exception:22,
25 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @22 exception:24,
27 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mPlatformKeyManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager> > 1,
29 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKey(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 27,25 @30 exception:28,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, init(I)V > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getDecryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformDecryptionKey; > 1,2 @3 exception:4,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKeyInternal(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 1,2 @6 exception:6,
return 7,
40 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverableKeyGenerator, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, importKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;IILjava/lang/String;[B[B)V > 40,29,25,23,2,3,4 @41 exception:41,
8 = new <Application,Ljavax/crypto/spec/SecretKeySpec>@0,
invokespecial < Application, Ljavax/crypto/spec/SecretKeySpec, <init>([BLjava/lang/String;)V > 8,6,9 @4 exception:10,
12 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/WrappedKey, fromSecretKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;Ljavax/crypto/SecretKey;[B)Lcom/android/server/locksettings/recoverablekeystore/WrappedKey; > 2,8,7 @7 exception:11,
13 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, insertKey(IILjava/lang/String;Lcom/android/server/locksettings/recoverablekeystore/WrappedKey;)J > 13,3,4,5,12 @13 exception:14,
17 = binaryop(lt) 15 , 16,
conditional branch(eq, to iindex=-1) 17,19,
30 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
32 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 30,3,4,18 @26 exception:31,
return,
42 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 42,25,23,2,3 @46 exception:43,
6 = getstatic < Application, Ljava/util/Locale, US, <Application,Ljava/util/Locale> >,
8 = new <Application,[Ljava/lang/Object>@37 ,
10 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @5 exception:9,
arraystore 8[11] = 10,
13 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 3 @12 exception:12,
arraystore 8[14] = 13,
arraystore 8[15] = 4,
16 = arraylength 5,
18 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 16 @23 exception:17,
arraystore 8[19] = 18,
22 = invokestatic < Application, Ljava/lang/String, format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 6,20,8 @32 exception:21,
25 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 23,22 @38 exception:24,
26 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, mKeyStore, <Application,Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy> > 1,
28 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getInternalAlias(IILjava/lang/String;)Ljava/lang/String; > 1,2,3,4 @43 exception:27,
29 = new <Application,Ljava/security/KeyStore$SecretKeyEntry>@47,
30 = new <Application,Ljavax/crypto/spec/SecretKeySpec>@49,
invokespecial < Application, Ljavax/crypto/spec/SecretKeySpec, <init>([BLjava/lang/String;)V > 30,5,31 @53 exception:32,
invokespecial < Application, Ljava/security/KeyStore$SecretKeyEntry, <init>(Ljavax/crypto/SecretKey;)V > 29,30 @56 exception:33,
34 = new <Application,Landroid/security/keystore/KeyProtection$Builder>@59,
invokespecial < Application, Landroid/security/keystore/KeyProtection$Builder, <init>(I)V > 34,19 @61 exception:35,
37 = new <Application,[Ljava/lang/String>@6614 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyProtection$Builder; > 34,37 @70 exception:38,
41 = new <Application,[Ljava/lang/String>@7614 ,
43 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyProtection$Builder; > 39,41 @80 exception:42,
45 = invokevirtual < Application, Landroid/security/keystore/KeyProtection$Builder, build()Landroid/security/keystore/KeyProtection; > 43 @84 exception:44,
invokeinterface < Application, Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy, setEntry(Ljava/lang/String;Ljava/security/KeyStore$Entry;Ljava/security/KeyStore$ProtectionParameter;)V > 26,28,29,45 @88 exception:46,
return,
52 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,25,23,2 @49 exception:51,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getGrantAlias(IILjava/lang/String;)Ljava/lang/String; > 5,2,3,4 @2 exception:6,
return 7,
return 52,
return 7,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public String importKeyWithMetadata(String p1, byte[] p2, byte[] p3){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	Object v4 = Objects.requireNonNull(p2, ""keyBytes is null"");
	if (p2.length != 32) {
		int v5 = Binder.getCallingUid();
		int v6 = UserHandle.getCallingUserId();
		PlatformKeyManager.init(v6);
		PlatformDecryptionKey v9 = PlatformKeyManager.getDecryptKeyInternal(v6);
		PlatformEncryptionKey v10 = PlatformKeyManager.getEncryptKeyInternal(v6);
		PlatformEncryptionKey v7 = v10;
		SecretKeySpec v12 = new SecretKeySpec(p2,""AES"");
		WrappedKey v14 = WrappedKey.fromSecretKey(v7, v12, p3);
		long v15 = this.mDatabase.insertKey(v6, v5, p1, v14);
		if ((v15 < -1) == 0) {
			long v16 = this.mDatabase.setShouldCreateSnapshot(v6, v5, 1);
			Integer v19 = Integer.valueOf(v6);
			Integer v20 = Integer.valueOf(v5);
			Integer v21 = Integer.valueOf(p2.length);
			String v24 = ApplicationKeyStorage.getInternalAlias(v6, v5, p1);
			KeyStore$SecretKeyEntry v25 = new KeyStore$SecretKeyEntry(v26);
			SecretKeySpec v26 = new SecretKeySpec(p2,""AES"");
			KeyProtection$Builder v29 = new KeyProtection$Builder(3);
			String v31 = new String(1);
			KeyProtection$Builder v32 = v29.setBlockModes(v31);
			String v33 = new String(1);
			KeyProtection$Builder v34 = v32.setEncryptionPaddings(v33);
			KeyProtection v35 = v34.build();
			this.mKeyStore.setEntry(v24, v25, v35);
			String v38 = this.mApplicationKeyStorage.getGrantAlias(v6, v5, p1);
			String v37 = v38;
			String v1 = v37;
			return v1;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","getRecoveryStatus()Ljava/util/Map;","0","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getRecoveryStatus()Ljava/util/Map; > 2 @2 exception:3,
return 4,","depth : 0
-----
","public Map getRecoveryStatus(){
	Map v1 = this.mRecoverableKeyStoreManager.getRecoveryStatus();
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getRecoveryStatus()Ljava/util/Map;","1","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getRecoveryStatus()Ljava/util/Map; > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @5 exception:4,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getStatusForAllKeys(I)Ljava/util/Map; > 3,5 @9 exception:6,
return 7,
return 4,","depth : 0
-----
depth : 1
-----
","public Map getRecoveryStatus(){
	int v3 = Binder.getCallingUid();
	Map v4 = this.mDatabase.getStatusForAllKeys(v3);
	Map v1 = v4;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getRecoveryStatus()Ljava/util/Map;","2","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getRecoveryStatus()Ljava/util/Map; > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
5 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @5 exception:4,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getStatusForAllKeys(I)Ljava/util/Map; > 3,5 @9 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, mKeyStoreDbHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDbHelper> > 1,
5 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 3 @2 exception:4,
9 = new <Application,[Ljava/lang/String>@1310 ,
12 = new <Application,[Ljava/lang/String>@1811 ,
14 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @20 exception:13,
arraystore 12[15] = 14,
19 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 5,16,9,17,12,15,15,15 @35 exception:18,
20 = new <Application,Ljava/util/HashMap>@39,
invokespecial < Application, Ljava/util/HashMap, <init>()V > 20 @41 exception:21,
23 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 19 @44 exception:22,
conditional branch(eq, to iindex=-1) 23,15,
25 = invokeinterface < Application, Landroid/database/Cursor, getColumnIndexOrThrow(Ljava/lang/String;)I > 19,7 @50 exception:24,
27 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 19,25 @54 exception:26,
29 = invokeinterface < Application, Landroid/database/Cursor, getColumnIndexOrThrow(Ljava/lang/String;)I > 19,8 @58 exception:28,
31 = invokeinterface < Application, Landroid/database/Cursor, getInt(I)I > 19,29 @62 exception:30,
33 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 31 @66 exception:32,
35 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 20,27,33 @70 exception:34,
goto (from iindex= 37 to iindex = -29),
23 = invokeinterface < Application, Landroid/database/Cursor, moveToNext()Z > 19 @44 exception:22,
conditional branch(eq, to iindex=-1) 23,15,
invokeinterface < Application, Landroid/database/Cursor, close()V > 19 @74 exception:40,
return 20,
return 7,
return 4,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public Map getRecoveryStatus(){
	int v3 = Binder.getCallingUid();
	SQLiteDatabase v5 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v6 = new String(3);
	String v7 = new String(1);
	String v8 = Integer.toString(v3);
	Cursor v9 = v5.query(""keys"", v6, ""uid = ?"", v7, 0, 0, 0);
	HashMap v10 = new HashMap();
	boolean v12 = v9.moveToNext();
	if (v12 == 0) {
		int v13 = v9.getColumnIndexOrThrow(""alias"");
		String v14 = v9.getString(v13);
		int v15 = v9.getColumnIndexOrThrow(""recovery_status"");
		int v16 = v9.getInt(v15);
		Integer v17 = Integer.valueOf(v16);
		Object v18 = v10.put(v14, v17);
		boolean v19 = v9.moveToNext();
		if (v19 == 0) {
			v9.close();
			Map v4 = v10;
			Map v1 = v4;
			return v1;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","importKey(Ljava/lang/String;[B)Ljava/lang/String;","0","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKey(Ljava/lang/String;[B)Ljava/lang/String; > 4,2,3 @2 exception:5,
return 6,","depth : 0
-----
","public String importKey(String p1, byte[] p2){
	String v1 = this.mRecoverableKeyStoreManager.importKey(p1, p2);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","importKey(Ljava/lang/String;[B)Ljava/lang/String;","1","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKey(Ljava/lang/String;[B)Ljava/lang/String; > 4,2,3 @2 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String; > 1,2,3,4 @1 exception:5,
return 6,
return 6,","depth : 0
-----
depth : 1
-----
","public String importKey(String p1, byte[] p2){
	String v2 = RecoverableKeyStoreManager.importKeyWithMetadata(p1, p2, 0);
	String v1 = v2;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","importKey(Ljava/lang/String;[B)Ljava/lang/String;","2","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKey(Ljava/lang/String;[B)Ljava/lang/String; > 4,2,3 @2 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKeyWithMetadata(Ljava/lang/String;[B[B)Ljava/lang/String; > 1,2,3,4 @1 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:5,
8 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,6 @5 exception:7,
11 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 3,9 @10 exception:10,
12 = arraylength 3,
conditional branch(ne, to iindex=-1) 12,13,
23 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @18 exception:22,
25 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @22 exception:24,
27 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mPlatformKeyManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager> > 1,
29 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKey(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 27,25 @30 exception:28,
40 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverableKeyGenerator, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, importKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;IILjava/lang/String;[B[B)V > 40,29,25,23,2,3,4 @41 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 42,25,23,2,3 @46 exception:43,
52 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,25,23,2 @49 exception:51,
return 52,
return 6,
return 6,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public String importKey(String p1, byte[] p2){
	Object v4 = Objects.requireNonNull(p1, ""alias is null"");
	Object v5 = Objects.requireNonNull(p2, ""keyBytes is null"");
	if (p2.length != 32) {
		int v6 = Binder.getCallingUid();
		int v7 = UserHandle.getCallingUserId();
		PlatformEncryptionKey v8 = this.mPlatformKeyManager.getEncryptKey(v7);
		this.mRecoverableKeyGenerator.importKey(v8, v7, v6, p1, p2, 0);
		this.mApplicationKeyStorage.setSymmetricKeyEntry(v7, v6, p1, p2);
		String v11 = RecoverableKeyStoreManager.getAlias(v7, v6, p1);
		String v2 = v11;
		String v1 = v2;
		return v1;
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(eq, to iindex=-1) 4,7,
9 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 4 @9 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
goto (from iindex= 8 to iindex = 9),
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
conditional branch(eq, to iindex=-1) 4,7,
goto (from iindex= 16 to iindex = 5),
19 = phi  4,18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,2,3,19 @35 exception:22,
monitorexit 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,2 @39 exception:28,
return,","depth : 0
-----
","public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			int v2 = p3.getType();
			if (v2 != -1) {
				if (p3 == 0) {
					p0.setSeparateProfileChallengeEnabledLocked(p1, p2, p3);
					p0.notifySeparateProfileChallengeChanged(p1);
					return;
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(eq, to iindex=-1) 4,7,
9 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 4 @9 exception:8,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 9,10,
goto (from iindex= 8 to iindex = 9),
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
conditional branch(eq, to iindex=-1) 4,7,
18 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @31 exception:17,
1 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = new <Primordial,[B>@32 ,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 1,4,3 @6 exception:5,
return 1,
19 = phi  4,18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,2,3,19 @35 exception:22,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getBoolean(Ljava/lang/String;ZI)Z > 1,5,6,2 @3 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,5,3,2 @7 exception:9,
conditional branch(eq, to iindex=-1) 3,6,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 11,2 @14 exception:12,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,2 @17 exception:13,
goto (from iindex= 9 to iindex = 4),
return,
monitorexit 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,2 @39 exception:28,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
4 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda1>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda1, <init>(I)V > 4,2 @4 exception:5,
7 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 3,4 @7 exception:6,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			LockscreenCredential.ensureNotZeroized();
			int v2 = this.mType;
			if (v2 != -1) {
				if (p3 == 0) {
					LockscreenCredential v5 = new LockscreenCredential(-1,v6);
					[B v6 = new [B(0);
					LockscreenCredential v4 = v5;
					boolean v9 = LockSettingsService.getBoolean(""lockscreen.profilechallenge"", 0, p1);
					LockSettingsService.setBoolean(""lockscreen.profilechallenge"", p2, p1);
					if (p2 == 0) {
						this.mStorage.removeChildProfileLock(p1);
						LockSettingsService.removeKeystoreProfileKey(p1);
						LockSettingsService$$ExternalSyntheticLambda1 v14 = new LockSettingsService$$ExternalSyntheticLambda1(p1);
						boolean v16 = this.mHandler.post(v14);
						return;
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(eq, to iindex=-1) 4,7,
9 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 4 @9 exception:8,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 9,10,
goto (from iindex= 8 to iindex = 9),
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
conditional branch(eq, to iindex=-1) 4,7,
goto (from iindex= 16 to iindex = 5),
19 = phi  4,18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,2,3,19 @35 exception:22,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getBoolean(Ljava/lang/String;ZI)Z > 1,5,6,2 @3 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,5,3,2 @7 exception:9,
conditional branch(eq, to iindex=-1) 3,6,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 11,2 @14 exception:12,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,2 @17 exception:13,
goto (from iindex= 9 to iindex = 4),
return,
monitorexit 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,2 @39 exception:28,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
4 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda1>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda1, <init>(I)V > 4,2 @4 exception:5,
7 = invokevirtual < Application, Landroid/os/Handler, post(Ljava/lang/Runnable;)Z > 3,4 @7 exception:6,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			LockscreenCredential.ensureNotZeroized();
			int v2 = this.mType;
			if (v2 != -1) {
				if (p3 == 0) {
					boolean v5 = LockSettingsService.getBoolean(""lockscreen.profilechallenge"", 0, p1);
					LockSettingsService.setBoolean(""lockscreen.profilechallenge"", p2, p1);
					if (p2 == 0) {
						this.mStorage.removeChildProfileLock(p1);
						LockSettingsService.removeKeystoreProfileKey(p1);
						LockSettingsService$$ExternalSyntheticLambda1 v10 = new LockSettingsService$$ExternalSyntheticLambda1(p1);
						boolean v12 = this.mHandler.post(v10);
						return;
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(eq, to iindex=-1) 4,7,
9 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 4 @9 exception:8,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(ZLjava/lang/String;)V > 5,6 @9 exception:7,
return,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 9,10,
goto (from iindex= 8 to iindex = 9),
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
conditional branch(eq, to iindex=-1) 4,7,
goto (from iindex= 16 to iindex = 5),
19 = phi  4,18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,2,3,19 @35 exception:22,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getBoolean(Ljava/lang/String;ZI)Z > 1,5,6,2 @3 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,5,3,2 @7 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,
conditional branch(eq, to iindex=-1) 3,6,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 11,2 @14 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, deleteFile(Ljava/lang/String;)V > 1,4 @4 exception:5,
8 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Exception, printStackTrace()V > 8 @9 exception:9,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,2 @17 exception:13,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 16,2 @35 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @38 exception:23,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 15,24 @42 exception:25,
26 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
27 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @49 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @55 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 27,2 @58 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @61 exception:34,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 26,35 @65 exception:36,
goto (from iindex= 27 to iindex = 22),
return,
goto (from iindex= 9 to iindex = 4),
return,
monitorexit 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,2 @39 exception:28,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(1, ""Credential is already zeroized"");
				int v2 = this.mType;
				if (v2 != -1) {
					if (p3 == 0) {
						boolean v8 = ""lock_pattern_autolock"".equals(""lockscreen.profilechallenge"");
						if (v8 == 0) {
							int v9 = LockSettingsService.getCredentialTypeInternal(p1);
							if (v9 != 1) {
								boolean v6 = 1;
								this.mStorage.setBoolean(""lockscreen.profilechallenge"", p2, p1);
								if (p2 == 0) {
									String v14 = LockSettingsStorage.getChildProfileLockFile(p1);
									LockSettingsStorage.deleteFile(v14);
									caughtException.printStackTrace();
									StringBuilder v24 = new StringBuilder();
									StringBuilder v26 = v24.append(""profile_key_name_encrypt_"");
									StringBuilder v27 = v24.append(p1);
									String v28 = v24.toString();
									this.mJavaKeyStore.deleteEntry(v28);
									StringBuilder v30 = new StringBuilder();
									StringBuilder v32 = v30.append(""profile_key_name_decrypt_"");
									StringBuilder v33 = v30.append(p1);
									String v34 = v30.toString();
									this.mJavaKeyStore.deleteEntry(v34);
									p0.notifySeparateProfileChallengeChanged(p1);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(eq, to iindex=-1) 4,7,
9 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 4 @9 exception:8,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(ZLjava/lang/String;)V > 5,6 @9 exception:7,
return,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 9,10,
goto (from iindex= 8 to iindex = 9),
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
conditional branch(eq, to iindex=-1) 4,7,
18 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createNone()Lcom/android/internal/widget/LockscreenCredential; > @31 exception:17,
19 = phi  4,18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,2,3,19 @35 exception:22,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getBoolean(Ljava/lang/String;ZI)Z > 1,5,6,2 @3 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,5,3,2 @7 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,
conditional branch(eq, to iindex=-1) 3,6,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 11,2 @14 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, deleteFile(Ljava/lang/String;)V > 1,4 @4 exception:5,
8 = getCaughtException ,
invokevirtual < Application, Ljava/lang/Exception, printStackTrace()V > 8 @9 exception:9,
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,2 @17 exception:13,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 16,2 @35 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @38 exception:23,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 15,24 @42 exception:25,
26 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
27 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @49 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @55 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 27,2 @58 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @61 exception:34,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 26,35 @65 exception:36,
goto (from iindex= 27 to iindex = 22),
return,
goto (from iindex= 9 to iindex = 4),
return,
monitorexit 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,2 @39 exception:28,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(1, ""Credential is already zeroized"");
				int v2 = this.mType;
				if (v2 != -1) {
					if (p3 == 0) {
						LockscreenCredential v5 = LockscreenCredential.createNone();
						boolean v9 = ""lock_pattern_autolock"".equals(""lockscreen.profilechallenge"");
						if (v9 == 0) {
							int v10 = LockSettingsService.getCredentialTypeInternal(p1);
							if (v10 != 1) {
								boolean v7 = 1;
								this.mStorage.setBoolean(""lockscreen.profilechallenge"", p2, p1);
								if (p2 == 0) {
									String v15 = LockSettingsStorage.getChildProfileLockFile(p1);
									LockSettingsStorage.deleteFile(v15);
									caughtException.printStackTrace();
									StringBuilder v25 = new StringBuilder();
									StringBuilder v27 = v25.append(""profile_key_name_encrypt_"");
									StringBuilder v28 = v25.append(p1);
									String v29 = v25.toString();
									this.mJavaKeyStore.deleteEntry(v29);
									StringBuilder v31 = new StringBuilder();
									StringBuilder v33 = v31.append(""profile_key_name_decrypt_"");
									StringBuilder v34 = v31.append(p1);
									String v35 = v31.toString();
									this.mJavaKeyStore.deleteEntry(v35);
									p0.notifySeparateProfileChallengeChanged(p1);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","setSeparateProfileChallengeEnabled(IZLcom/android/internal/widget/LockscreenCredential;)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHasSecureLockScreen, <Primordial,Z> > 1,
conditional branch(ne, to iindex=-1) 6,7,
conditional branch(eq, to iindex=-1) 4,7,
9 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 4 @9 exception:8,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkState(ZLjava/lang/String;)V > 5,6 @9 exception:7,
return,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
return 3,
conditional branch(ne, to iindex=-1) 9,10,
goto (from iindex= 8 to iindex = 9),
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
conditional branch(eq, to iindex=-1) 4,7,
goto (from iindex= 16 to iindex = 5),
19 = phi  4,18,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setSeparateProfileChallengeEnabledLocked(IZLcom/android/internal/widget/LockscreenCredential;)V > 1,2,3,19 @35 exception:22,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getBoolean(Ljava/lang/String;ZI)Z > 1,5,6,2 @3 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setBoolean(Ljava/lang/String;ZI)V > 1,5,3,2 @7 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,
conditional branch(eq, to iindex=-1) 3,6,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, removeChildProfileLock(I)V > 11,2 @14 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, deleteFile(Ljava/lang/String;)V > 1,4 @4 exception:5,
goto (from iindex= 3 to iindex = 5),
return,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeKeystoreProfileKey(I)V > 1,2 @17 exception:13,
3 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 3 @2 exception:4,
7 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 3,5 @7 exception:6,
9 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 3,2 @10 exception:8,
11 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 3 @13 exception:10,
14 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 12,11 @19 exception:13,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
16 = new <Application,Ljava/lang/StringBuilder>@24,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 16 @26 exception:17,
20 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 16,18 @32 exception:19,
22 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 16,2 @35 exception:21,
24 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 16 @38 exception:23,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 15,24 @42 exception:25,
26 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
27 = new <Application,Ljava/lang/StringBuilder>@47,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 27 @49 exception:28,
31 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 27,29 @55 exception:30,
33 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 27,2 @58 exception:32,
35 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 27 @61 exception:34,
invokevirtual < Application, Ljava/security/KeyStore, deleteEntry(Ljava/lang/String;)V > 26,35 @65 exception:36,
goto (from iindex= 27 to iindex = 22),
return,
goto (from iindex= 9 to iindex = 4),
return,
monitorexit 16,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, notifySeparateProfileChallengeChanged(I)V > 1,2 @39 exception:28,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void setSeparateProfileChallengeEnabled(int p1, boolean p2, LockscreenCredential p3){
	if (this.mHasSecureLockScreen != 0) {
		if (p3 == 0) {
			if (this.mCredential == 0) {
				Preconditions.checkState(1, ""Credential is already zeroized"");
				int v2 = this.mType;
				if (v2 != -1) {
					if (p3 == 0) {
						boolean v8 = ""lock_pattern_autolock"".equals(""lockscreen.profilechallenge"");
						if (v8 == 0) {
							int v9 = LockSettingsService.getCredentialTypeInternal(p1);
							if (v9 != 1) {
								boolean v6 = 1;
								this.mStorage.setBoolean(""lockscreen.profilechallenge"", p2, p1);
								if (p2 == 0) {
									String v14 = LockSettingsStorage.getChildProfileLockFile(p1);
									LockSettingsStorage.deleteFile(v14);
									StringBuilder v23 = new StringBuilder();
									StringBuilder v25 = v23.append(""profile_key_name_encrypt_"");
									StringBuilder v26 = v23.append(p1);
									String v27 = v23.toString();
									this.mJavaKeyStore.deleteEntry(v27);
									StringBuilder v29 = new StringBuilder();
									StringBuilder v31 = v29.append(""profile_key_name_decrypt_"");
									StringBuilder v32 = v29.append(p1);
									String v33 = v29.toString();
									this.mJavaKeyStore.deleteEntry(v33);
									p0.notifySeparateProfileChallengeChanged(p1);
									return;
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","getKey(Ljava/lang/String;)Ljava/lang/String;","0","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getKey(Ljava/lang/String;)Ljava/lang/String; > 3,2 @2 exception:4,
return 5,","depth : 0
-----
","public String getKey(String p1){
	String v1 = this.mRecoverableKeyStoreManager.getKey(p1);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getKey(Ljava/lang/String;)Ljava/lang/String;","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getKey(Ljava/lang/String;)Ljava/lang/String; > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @5 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @8 exception:7,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,10,8,2 @16 exception:11,
return 12,
return 5,","depth : 0
-----
depth : 1
-----
","public String getKey(String p1){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	String v6 = RecoverableKeyStoreManager.getAlias(v5, v4, p1);
	String v1 = v6;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getKey(Ljava/lang/String;)Ljava/lang/String;","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getKey(Ljava/lang/String;)Ljava/lang/String; > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @5 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @8 exception:7,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,10,8,2 @16 exception:11,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getGrantAlias(IILjava/lang/String;)Ljava/lang/String; > 5,2,3,4 @2 exception:6,
return 7,
return 12,
return 5,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public String getKey(String p1){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	String v7 = this.mApplicationKeyStorage.getGrantAlias(v5, v4, p1);
	String v6 = v7;
	String v1 = v6;
	return v1;
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V > 4,2 @5 exception:5,
return,","depth : 0
-----
","public void registerStrongAuthTracker(IStrongAuthTracker p1){
	this.mStrongAuth.registerStrongAuthTracker(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, registerStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
6 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(ILjava/lang/Object;)Landroid/os/Message; > 3,4,2 @3 exception:5,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 6 @7 exception:7,
return,
return,","depth : 0
-----
depth : 1
-----
","public void registerStrongAuthTracker(IStrongAuthTracker p1){
	Message v3 = this.mHandler.obtainMessage(2, p1);
	v3.sendToTarget();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","isWeakEscrowTokenActive(JI)Z","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isEscrowTokenActive(JI)Z > 1,2,3 @7 exception:7,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @11 exception:11,
return 8,","depth : 0
-----
","public boolean isWeakEscrowTokenActive(long p1, int p2){
	p0.checkManageWeakEscrowTokenMethodUsage();
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = p0.isEscrowTokenActive(p1, p2);
	Binder.restoreCallingIdentity(v2);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","isWeakEscrowTokenActive(JI)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isEscrowTokenActive(JI)Z > 1,2,3 @7 exception:7,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, existsHandle(JI)Z > 5,2,3 @5 exception:6,
monitorexit 4,
return 7,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @11 exception:11,
return 8,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public boolean isWeakEscrowTokenActive(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		boolean v7 = this.mSpManager.existsHandle(p1, p2);
		boolean v6 = v7;
		Binder.restoreCallingIdentity(v5);
		return v6;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","isWeakEscrowTokenActive(JI)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isEscrowTokenActive(JI)Z > 1,2,3 @7 exception:7,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, existsHandle(JI)Z > 5,2,3 @5 exception:6,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,4,2,3 @3 exception:5,
return 6,
monitorexit 4,
return 7,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @11 exception:11,
return 8,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
","public boolean isWeakEscrowTokenActive(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		boolean v8 = SyntheticPasswordManager.hasState(""spblob"", p1, p2);
		boolean v7 = v8;
		boolean v6 = v7;
		Binder.restoreCallingIdentity(v5);
		return v6;
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","setBoolean(Ljava/lang/String;ZI)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
return,","depth : 0
-----
","public void setBoolean(String p1, boolean p2, int p3){
	this.mStorage.setBoolean(p1, p2, p3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setBoolean(Ljava/lang/String;ZI)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
conditional branch(eq, to iindex=-1) 3,5,
goto (from iindex= 2 to iindex = 3),
8 = phi  7,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,8,4 @7 exception:9,
return,
return,","depth : 0
-----
depth : 1
-----
","public void setBoolean(String p1, boolean p2, int p3){
	if (p2 == 0) {
		LockSettingsStorage.setString(p1, ""1"", p3);
		return;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setBoolean(Ljava/lang/String;ZI)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setBoolean(Ljava/lang/String;ZI)V > 6,2,3,4 @5 exception:7,
conditional branch(eq, to iindex=-1) 3,5,
goto (from iindex= 2 to iindex = 3),
8 = phi  7,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,8,4 @7 exception:9,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 3 to iindex = 2),
8 = phi  7,6,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 8,9 @9 exception:10,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeKeyValue(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,3,4 @12 exception:11,
12 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, SETTINGS_TO_BACKUP, <Application,[Ljava/lang/String> >,
14 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, contains([Ljava/lang/Object;Ljava/lang/Object;)Z > 12,2 @17 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
invokestatic < Application, Landroid/app/backup/BackupManager, dataChanged(Ljava/lang/String;)V > 15 @25 exception:16,
return,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public void setBoolean(String p1, boolean p2, int p3){
	if (p2 == 0) {
		if (p3 == -9999) {
			Preconditions.checkArgument(1, ""cannot store lock settings for FRP user"");
			LockSettingsStorage.writeKeyValue(p1, ""1"", p3);
			boolean v6 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
			if (v6 == 0) {
				BackupManager.dataChanged(""com.android.providers.settings"");
				return;
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","0","7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,5 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,9 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
goto (from iindex= 8 to iindex = 10),
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,8,4 @31 exception:20,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @35 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @38 exception:26,
return 21,","depth : 0
-----
","public VerifyCredentialResponse verifyCredential(LockscreenCredential p1, int p2, int p3){
	if (v1 != 0) {
		if (v2 == 0) {
			long v3 = Binder.clearCallingIdentity();
			VerifyCredentialResponse v4 = p0.doVerifyCredential(p1, p2, 0, p3);
			Binder.restoreCallingIdentity(v3);
			p0.scheduleGc();
			return v4;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","1","7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,5 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,9 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
goto (from iindex= 8 to iindex = 10),
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,8,4 @31 exception:20,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 30,6,
39 = new <Application,Ljava/lang/StringBuilder>@79,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 39 @81 exception:40,
43 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,41 @86 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,44 @91 exception:45,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,47 @96 exception:48,
51 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @99 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,51 @103 exception:52,
55 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 39 @106 exception:54,
57 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 13,55 @110 exception:56,
58 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
return 58,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @35 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @38 exception:26,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
return 21,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public VerifyCredentialResponse verifyCredential(LockscreenCredential p1, int p2, int p3){
	if (v1 != 0) {
		if (v2 == 0) {
			long v3 = Binder.clearCallingIdentity();
			if (p1 == 0) {
				boolean v5 = p1.isNone();
				if (v5 != 0) {
					if (p2 != -9999) {
						ContentResolver v6 = this.mContext.getContentResolver();
						int v7 = this.mInjector.settingsGlobalGetInt(v6, ""device_provisioned"", 0);
						if (v7 == 0) {
							VerifyCredentialResponse v8 = LockSettingsService.spBasedDoVerifyCredential(p1, p2, 0, p3);
							if (v8 == 0) {
								if (p2 != -9999) {
									LockSettingsStorage$CredentialHash v9 = this.mStorage.readCredentialHash(p2);
									boolean v10 = p1.checkAgainstStoredType(LockSettingsStorage$CredentialHash.type);
									if (v10 != 0) {
										int v16 = p1.getType();
										VerifyCredentialResponse v4 = VerifyCredentialResponse.ERROR;
										Binder.restoreCallingIdentity(v3);
										LockSettingsService$$ExternalSyntheticLambda3 v22 = new LockSettingsService$$ExternalSyntheticLambda3();
										boolean v24 = this.mHandler.postDelayed(v22, 2000);
										return v4;
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","2","7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,5 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,9 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
goto (from iindex= 8 to iindex = 10),
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,8,4 @31 exception:20,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @35 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @38 exception:26,
return 21,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse verifyCredential(LockscreenCredential p1, int p2, int p3){
	if (v1 != 0) {
		if (v2 == 0) {
			long v3 = Binder.clearCallingIdentity();
			if (p1 == 0) {
				boolean v5 = p1.isNone();
				if (v5 != 0) {
					if (p2 != -9999) {
						ContentResolver v6 = this.mContext.getContentResolver();
						int v8 = Settings$Global.getInt(v6, ""device_provisioned"", 0);
						int v7 = v8;
						if (v7 == 0) {
							boolean v10 = this.mInjector.hasEnrolledBiometrics(p2);
							if ((p3 & 1) == 0) {
								boolean v19 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
								if (v19 != 0) {
									if (p2 != -9999) {
										long v20 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
										IGateKeeperService v21 = LockSettingsService.getGateKeeperService();
										SyntheticPasswordManager$AuthenticationResult v22 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v21, v20, p1, p2, 0);
										int v23 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
										if (v23 != 0) {
											byte[] v24 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
											this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p2, v24);
											IGateKeeperService v26 = LockSettingsService.getGateKeeperService();
											VerifyCredentialResponse v27 = this.mSpManager.verifyChallenge(v26, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2);
											int v28 = v27.getResponseCode();
											if (v28 == 0) {
												int v29 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
												if (v29 != 0) {
													int v30 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
													if (v30 != 1) {
														int v31 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
														if (v31 <= 0) {
															LockSettingsService.requireStrongAuth(8, p2);
															boolean v33 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
															if (v33 == 0) {
																if (1 == 0) {
																	VerifyCredentialResponse v9 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																	if (v9 == 0) {
																		if (p2 != -9999) {
																			LockSettingsStorage$CredentialHash v35 = LockSettingsStorage.readPasswordHashIfExists(p2);
																			if (v35 == 0) {
																				LockSettingsStorage$CredentialHash v36 = LockSettingsStorage.readPatternHashIfExists(p2);
																				if (v36 == 0) {
																					LockSettingsStorage$CredentialHash v37 = LockSettingsStorage$CredentialHash.createEmptyHash();
																					LockSettingsStorage$CredentialHash v34 = v37;
																					if (LockSettingsStorage$CredentialHash.type != 2) {
																						int v39 = LockscreenCredential.getType();
																						if (v39 == 4) {
																							int v40 = LockscreenCredential.getType();
																							if (v40 != 3) {
																								boolean v38 = 1;
																								if (v38 != 0) {
																									if (v34 == 0) {
																										if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																											boolean v42 = p1.isNone();
																											if (v42 == 0) {
																												if (v34 == 0) {
																													if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																														boolean v43 = p1.isNone();
																														if (v43 == 0) {
																															StrictMode.noteDiskRead();
																															IGateKeeperService v45 = LockSettingsService.getGateKeeperService();
																															byte[] v46 = p1.getCredential();
																															GateKeeperResponse v47 = v45.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v46);
																															VerifyCredentialResponse v48 = LockSettingsService.convertResponse(v47);
																															boolean v49 = v47.getShouldReEnroll();
																															int v50 = v48.getResponseCode();
																															if (v50 != 0) {
																																if (0 == 0) {
																																	0.onCredentialVerified();
																																	LockSettingsService.setUserPasswordMetrics(p1, p2);
																																	byte[] v53 = p1.getCredential();
																																	LockSettingsService.unlockKeystore(v53, p2);
																																	byte[] v61 = LockSettingsService.secretFromCredential(p1);
																																	LockSettingsService.unlockUser(p2, v61);
																																	boolean v63 = LockSettingsService.isProfileWithSeparatedLock(p2);
																																	if (v63 == 0) {
																																		LockSettingsService.setDeviceUnlockedForUser(p2);
																																		if (v49 == 0) {
																																			boolean v65 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p2);
																																			if (v65 == 0) {
																																				LockSettingsService.sendCredentialsOnUnlockIfRequired(p1, p2);
																																				VerifyCredentialResponse v41 = v48;
																																				int v67 = this.mResponseCode;
																																				if (v67 != 0) {
																																					Message v69 = this.mHandler.obtainMessage(5, p2, 0);
																																					v69.sendToTarget();
																																					VerifyCredentialResponse v4 = v41;
																																					Binder.restoreCallingIdentity(v3);
																																					p0.scheduleGc();
																																					return v4;
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","verifyCredential(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","2","7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,5 @2 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, hasPermission(Ljava/lang/String;)Z > 1,9 @10 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
goto (from iindex= 8 to iindex = 10),
19 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @26 exception:18,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,8,4 @31 exception:20,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
return 7,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 19 @35 exception:25,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @38 exception:26,
return 21,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse verifyCredential(LockscreenCredential p1, int p2, int p3){
	if (v1 != 0) {
		if (v2 == 0) {
			long v3 = Binder.clearCallingIdentity();
			if (p1 == 0) {
				boolean v5 = p1.isNone();
				if (v5 != 0) {
					if (p2 != -9999) {
						ContentResolver v6 = this.mContext.getContentResolver();
						int v8 = Settings$Global.getInt(v6, ""device_provisioned"", 0);
						int v7 = v8;
						if (v7 == 0) {
							boolean v10 = this.mInjector.hasEnrolledBiometrics(p2);
							if ((p3 & 1) == 0) {
								boolean v19 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
								if (v19 != 0) {
									if (p2 != -9999) {
										long v20 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
										IGateKeeperService v21 = LockSettingsService.getGateKeeperService();
										SyntheticPasswordManager$AuthenticationResult v22 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v21, v20, p1, p2, 0);
										int v23 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
										if (v23 != 0) {
											byte[] v24 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
											this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p2, v24);
											IGateKeeperService v26 = LockSettingsService.getGateKeeperService();
											VerifyCredentialResponse v27 = this.mSpManager.verifyChallenge(v26, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2);
											int v28 = v27.getResponseCode();
											if (v28 == 0) {
												int v29 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
												if (v29 != 0) {
													int v30 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
													if (v30 != 1) {
														int v31 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
														if (v31 <= 0) {
															LockSettingsService.requireStrongAuth(8, p2);
															boolean v33 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
															if (v33 == 0) {
																if (1 == 0) {
																	VerifyCredentialResponse v9 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																	if (v9 == 0) {
																		if (p2 != -9999) {
																			LockSettingsStorage$CredentialHash v35 = LockSettingsStorage.readPasswordHashIfExists(p2);
																			if (v35 == 0) {
																				LockSettingsStorage$CredentialHash v36 = LockSettingsStorage.readPatternHashIfExists(p2);
																				if (v36 == 0) {
																					LockSettingsStorage$CredentialHash v34 = v36;
																					if (LockSettingsStorage$CredentialHash.type != 2) {
																						int v38 = LockscreenCredential.getType();
																						if (v38 == 4) {
																							int v39 = LockscreenCredential.getType();
																							if (v39 != 3) {
																								boolean v37 = 1;
																								if (v37 != 0) {
																									if (v34 == 0) {
																										if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																											boolean v41 = p1.isNone();
																											if (v41 == 0) {
																												if (v34 == 0) {
																													if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																														boolean v42 = p1.isNone();
																														if (v42 == 0) {
																															StrictMode.noteDiskRead();
																															IGateKeeperService v44 = LockSettingsService.getGateKeeperService();
																															byte[] v45 = p1.getCredential();
																															GateKeeperResponse v46 = v44.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v45);
																															VerifyCredentialResponse v47 = LockSettingsService.convertResponse(v46);
																															boolean v48 = v46.getShouldReEnroll();
																															int v49 = v47.getResponseCode();
																															if (v49 != 0) {
																																if (0 == 0) {
																																	0.onCredentialVerified();
																																	LockSettingsService.setUserPasswordMetrics(p1, p2);
																																	byte[] v52 = p1.getCredential();
																																	LockSettingsService.unlockKeystore(v52, p2);
																																	byte[] v60 = LockSettingsService.secretFromCredential(p1);
																																	LockSettingsService.unlockUser(p2, v60);
																																	boolean v62 = LockSettingsService.isProfileWithSeparatedLock(p2);
																																	if (v62 == 0) {
																																		LockSettingsService.setDeviceUnlockedForUser(p2);
																																		if (v48 == 0) {
																																			boolean v64 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p2);
																																			if (v64 == 0) {
																																				LockSettingsService.sendCredentialsOnUnlockIfRequired(p1, p2);
																																				VerifyCredentialResponse v40 = v47;
																																				int v66 = this.mResponseCode;
																																				if (v66 != 0) {
																																					Message v68 = this.mHandler.obtainMessage(5, p2, 0);
																																					v68.sendToTarget();
																																					VerifyCredentialResponse v4 = v40;
																																					Binder.restoreCallingIdentity(v3);
																																					p0.scheduleGc();
																																					return v4;
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","getSeparateProfileChallengeEnabled(I)Z","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @5 exception:5,
return 6,","depth : 0
-----
","public boolean getSeparateProfileChallengeEnabled(int p1){
	boolean v2 = p0.getSeparateProfileChallengeEnabledInternal(p1);
	return v2;
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getSeparateProfileChallengeEnabled(I)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
return 6,","depth : 0
-----
depth : 1
-----
","public boolean getSeparateProfileChallengeEnabled(int p1){
	boolean v3 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p1);
	boolean v2 = v3;
	return v2;
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getSeparateProfileChallengeEnabled(I)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
goto (from iindex= 6 to iindex = 22),
23 = phi  3,5,20,
return 23,
monitorexit 3,
return 8,
return 6,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public boolean getSeparateProfileChallengeEnabled(int p1){
	String v4 = LockSettingsStorage.getString(""lockscreen.profilechallenge"", 0, p1);
	boolean v5 = TextUtils.isEmpty(v4);
	if (v5 == 0) {
		boolean v3 = 0;
		boolean v2 = v3;
		return v2;
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getSeparateProfileChallengeEnabled(I)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,10 @14 exception:11,
conditional branch(ne, to iindex=-1) 12,5,
15 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,5,
goto (from iindex= 15 to iindex = 3),
23 = phi  3,5,20,
return 23,
monitorexit 3,
return 8,
return 6,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public boolean getSeparateProfileChallengeEnabled(int p1){
	String v4 = LockSettingsStorage.getString(""lockscreen.profilechallenge"", 0, p1);
	boolean v5 = TextUtils.isEmpty(v4);
	if (v5 == 0) {
		boolean v6 = v4.equals(""1"");
		if (v6 != 0) {
			boolean v7 = v4.equals(""true"");
			if (v7 == 0) {
				boolean v3 = 0;
				boolean v2 = v3;
				return v2;
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getSeparateProfileChallengeEnabled(I)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,3,2 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,10 @14 exception:11,
conditional branch(ne, to iindex=-1) 12,5,
15 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,5,
goto (from iindex= 17 to iindex = 2),
23 = phi  3,5,20,
return 23,
monitorexit 3,
return 8,
return 6,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public boolean getSeparateProfileChallengeEnabled(int p1){
	String v4 = LockSettingsStorage.getString(""lockscreen.profilechallenge"", 0, p1);
	boolean v5 = TextUtils.isEmpty(v4);
	if (v5 == 0) {
		boolean v6 = v4.equals(""1"");
		if (v6 != 0) {
			boolean v7 = v4.equals(""true"");
			if (v7 == 0) {
				boolean v3 = 0;
				boolean v2 = v3;
				return v2;
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","removeWeakEscrowToken(JI)Z","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:4,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeEscrowToken(JI)Z > 1,2,3 @7 exception:7,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @11 exception:11,
return 8,","depth : 0
-----
","public boolean removeWeakEscrowToken(long p1, int p2){
	p0.checkManageWeakEscrowTokenMethodUsage();
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = p0.removeEscrowToken(p1, p2);
	Binder.restoreCallingIdentity(v2);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","removeWeakEscrowToken(JI)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeEscrowToken(JI)Z > 1,2,3 @7 exception:7,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @3 exception:5,
7 = binaryop(lt) 2 , 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, removePendingToken(JI)Z > 9,2,3 @23 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, existsHandle(JI)Z > 13,2,3 @34 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, destroyTokenBasedSyntheticPassword(JI)V > 16,2,3 @42 exception:17,
monitorexit 4,
return 12,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @11 exception:11,
return 8,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public boolean removeWeakEscrowToken(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		long v7 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
		if ((p1 < v7) != 0) {
			boolean v8 = this.mSpManager.removePendingToken(p1, p2);
			if (v8 == 0) {
				boolean v9 = this.mSpManager.existsHandle(p1, p2);
				if (v9 == 0) {
					this.mSpManager.destroyTokenBasedSyntheticPassword(p1, p2);
					boolean v6 = 1;
					Binder.restoreCallingIdentity(v5);
					return v6;
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","removeWeakEscrowToken(JI)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeEscrowToken(JI)Z > 1,2,3 @7 exception:7,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @3 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getLong(Ljava/lang/String;JI)J > 1,3,4,2 @5 exception:5,
return 6,
7 = binaryop(lt) 2 , 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, removePendingToken(JI)Z > 9,2,3 @23 exception:10,
4 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
6 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 3 @2 exception:5,
8 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 4,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
12 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 3 @16 exception:11,
14 = invokevirtual < Application, Landroid/util/ArrayMap, get(Ljava/lang/Object;)Ljava/lang/Object; > 10,12 @20 exception:13,
15 = checkcast <Application,Landroid/util/ArrayMap>14 <Application,Landroid/util/ArrayMap>,
17 = invokestatic < Application, Ljava/lang/Long, valueOf(J)Ljava/lang/Long; > 2 @26 exception:16,
19 = invokevirtual < Application, Landroid/util/ArrayMap, remove(Ljava/lang/Object;)Ljava/lang/Object; > 15,17 @30 exception:18,
conditional branch(eq, to iindex=-1) 19,9,
21 = phi  9,20,
return 21,
conditional branch(eq, to iindex=-1) 11,8,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, existsHandle(JI)Z > 13,2,3 @34 exception:14,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,4,2,3 @3 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, destroyTokenBasedSyntheticPassword(JI)V > 16,2,3 @42 exception:17,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,4,2,3 @3 exception:5,
8 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob; > 6 @7 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, destroySyntheticPassword(JI)V > 1,2,3 @11 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, destroyState(Ljava/lang/String;JI)V > 1,10,2,3 @17 exception:11,
12 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mType, <Primordial,B> > 8,
conditional branch(ne, to iindex=-1) 12,13,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, notifyWeakEscrowTokenRemovedListeners(JI)V > 1,2,3 @25 exception:14,
return,
monitorexit 4,
return 12,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @11 exception:11,
return 8,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean removeWeakEscrowToken(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		long v8 = LockSettingsService.getLong(""sp-handle"", 0, p2);
		long v7 = v8;
		if ((p1 < v7) != 0) {
			Integer v10 = Integer.valueOf(p2);
			boolean v11 = this.tokenMap.containsKey(v10);
			if (v11 != 0) {
				Integer v12 = Integer.valueOf(p2);
				Object v13 = this.tokenMap.get(v12);
				Long v14 = Long.valueOf(p1);
				Object v15 = v13.remove(v14);
				if (v15 == 0) {
					boolean v9 = 0;
					if (v9 == 0) {
						boolean v17 = SyntheticPasswordManager.hasState(""spblob"", p1, p2);
						boolean v16 = v17;
						if (v16 == 0) {
							byte[] v19 = SyntheticPasswordManager.loadState(""spblob"", p1, p2);
							SyntheticPasswordManager$SyntheticPasswordBlob v20 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v19);
							SyntheticPasswordManager.destroySyntheticPassword(p1, p2);
							SyntheticPasswordManager.destroyState(""secdis"", p1, p2);
							if (SyntheticPasswordManager$SyntheticPasswordBlob.mType != 2) {
								SyntheticPasswordManager.notifyWeakEscrowTokenRemovedListeners(p1, p2);
								boolean v6 = 1;
								Binder.restoreCallingIdentity(v5);
								return v6;
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","removeWeakEscrowToken(JI)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
6 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:5,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, removeEscrowToken(JI)Z > 1,2,3 @7 exception:7,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @3 exception:5,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getLong(Ljava/lang/String;JI)J > 1,3,4,2 @5 exception:5,
return 6,
7 = binaryop(lt) 2 , 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
11 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, removePendingToken(JI)Z > 9,2,3 @23 exception:10,
4 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, tokenMap, <Application,Landroid/util/ArrayMap> > 1,
6 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 3 @2 exception:5,
8 = invokevirtual < Application, Landroid/util/ArrayMap, containsKey(Ljava/lang/Object;)Z > 4,6 @6 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
return 9,
conditional branch(eq, to iindex=-1) 11,8,
13 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, existsHandle(JI)Z > 13,2,3 @34 exception:14,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, hasState(Ljava/lang/String;JI)Z > 1,4,2,3 @3 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, destroyTokenBasedSyntheticPassword(JI)V > 16,2,3 @42 exception:17,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,4,2,3 @3 exception:5,
8 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, fromBytes([B)Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob; > 6 @7 exception:7,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, destroySyntheticPassword(JI)V > 1,2,3 @11 exception:9,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, destroyState(Ljava/lang/String;JI)V > 1,10,2,3 @17 exception:11,
12 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$SyntheticPasswordBlob, mType, <Primordial,B> > 8,
conditional branch(ne, to iindex=-1) 12,13,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, notifyWeakEscrowTokenRemovedListeners(JI)V > 1,2,3 @25 exception:14,
return,
monitorexit 4,
return 12,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 6 @11 exception:11,
return 8,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean removeWeakEscrowToken(long p1, int p2){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		long v8 = LockSettingsService.getLong(""sp-handle"", 0, p2);
		long v7 = v8;
		if ((p1 < v7) != 0) {
			Integer v10 = Integer.valueOf(p2);
			boolean v11 = this.tokenMap.containsKey(v10);
			if (v11 != 0) {
				boolean v9 = 0;
				if (v9 == 0) {
					boolean v13 = SyntheticPasswordManager.hasState(""spblob"", p1, p2);
					boolean v12 = v13;
					if (v12 == 0) {
						byte[] v15 = SyntheticPasswordManager.loadState(""spblob"", p1, p2);
						SyntheticPasswordManager$SyntheticPasswordBlob v16 = SyntheticPasswordManager$SyntheticPasswordBlob.fromBytes(v15);
						SyntheticPasswordManager.destroySyntheticPassword(p1, p2);
						SyntheticPasswordManager.destroyState(""secdis"", p1, p2);
						if (SyntheticPasswordManager$SyntheticPasswordBlob.mType != 2) {
							SyntheticPasswordManager.notifyWeakEscrowTokenRemovedListeners(p1, p2);
							boolean v6 = 1;
							Binder.restoreCallingIdentity(v5);
							return v6;
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","getBoolean(Ljava/lang/String;ZI)Z","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
-----
","public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = ""lock_pattern_autolock"".equals(p1);
	if (v2 == 0) {
		int v3 = p0.getCredentialTypeInternal(p3);
		if (v3 != 1) {
			return 1;
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getBoolean(Ljava/lang/String;ZI)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,2 @12 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
monitorexit 4,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getKeyguardStoredQuality(I)I > 1,2 @44 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPattern(I)Z > 11,2 @54 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
conditional branch(lt, to iindex=-1) 9,17,
18 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPassword(I)Z > 18,2 @68 exception:19,
conditional branch(eq, to iindex=-1) 20,7,
26 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, pinOrPasswordQualityToCredentialType(I)I > 9 @74 exception:25,
return 26,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
-----
depth : 1
-----
","public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = ""lock_pattern_autolock"".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			boolean v4 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p3);
			if (v4 == 0) {
				int v5 = LockSettingsService.getKeyguardStoredQuality(p3);
				if (v5 != 65536) {
					boolean v6 = this.mStorage.hasPattern(p3);
					if (v6 == 0) {
						if (v5 < 131072) {
							boolean v7 = this.mStorage.hasPassword(p3);
							if (v7 == 0) {
								int v8 = LockSettingsService.pinOrPasswordQualityToCredentialType(v5);
								int v3 = v8;
								if (v3 != 1) {
									return 1;
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getBoolean(Ljava/lang/String;ZI)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
12 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 10,2,3,4 @23 exception:11,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,10 @14 exception:11,
conditional branch(ne, to iindex=-1) 12,5,
15 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,5,
goto (from iindex= 15 to iindex = 3),
23 = phi  3,5,20,
return 23,
return 12,","depth : 0
-----
depth : 1
-----
","public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = ""lock_pattern_autolock"".equals(p1);
	if (v2 == 0) {
		String v4 = LockSettingsStorage.getString(p1, 0, p3);
		boolean v5 = TextUtils.isEmpty(v4);
		if (v5 == 0) {
			boolean v6 = v4.equals(""1"");
			if (v6 != 0) {
				boolean v7 = v4.equals(""true"");
				if (v7 == 0) {
					boolean v3 = p2;
					return v3;
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getBoolean(Ljava/lang/String;ZI)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,2 @12 exception:5,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(eq, to iindex=-1) 6,7,
monitorexit 4,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getKeyguardStoredQuality(I)I > 1,2 @44 exception:8,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 3,4,5,2 @6 exception:6,
8 = conversion(I) 7,
return 8,
conditional branch(ne, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPattern(I)Z > 11,2 @54 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPatternFilename(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 13,7,
conditional branch(lt, to iindex=-1) 9,17,
18 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPassword(I)Z > 18,2 @68 exception:19,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPasswordFilename(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,7,
26 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, pinOrPasswordQualityToCredentialType(I)I > 9 @74 exception:25,
3 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, isQualityAlphabeticPassword(I)Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, isQualityNumericPin(I)Z > 1 @8 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return 18,
return 26,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = ""lock_pattern_autolock"".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			if (p3 != -9999) {
				LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
				if (LockSettingsStorage$PersistentData.type == 1) {
					if (LockSettingsStorage$PersistentData.type != 2) {
						boolean v4 = 0;
						if (v4 == 0) {
							long v7 = this.mStorage.getLong(""lockscreen.password_type"", 0, p3);
							int v6 = v7;
							if (v6 != 65536) {
								String v9 = LockSettingsStorage.getLockPatternFilename(p3);
								boolean v10 = LockSettingsStorage.hasFile(v9);
								boolean v8 = v10;
								if (v8 == 0) {
									if (v6 < 131072) {
										String v12 = LockSettingsStorage.getLockPasswordFilename(p3);
										boolean v13 = LockSettingsStorage.hasFile(v12);
										boolean v11 = v13;
										if (v11 == 0) {
											boolean v15 = LockPatternUtils.isQualityAlphabeticPassword(v6);
											if (v15 == 0) {
												boolean v16 = LockPatternUtils.isQualityNumericPin(v6);
												if (v16 == 0) {
													int v14 = 3;
													int v3 = v14;
													if (v3 != 1) {
														return 1;
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getBoolean(Ljava/lang/String;ZI)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
14 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,4 @11 exception:13,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,2 @12 exception:5,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(eq, to iindex=-1) 6,7,
monitorexit 4,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getKeyguardStoredQuality(I)I > 1,2 @44 exception:8,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 3,4,5,2 @6 exception:6,
8 = conversion(I) 7,
return 8,
conditional branch(ne, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPattern(I)Z > 11,2 @54 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPatternFilename(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 13,7,
conditional branch(lt, to iindex=-1) 9,17,
18 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPassword(I)Z > 18,2 @68 exception:19,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPasswordFilename(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,7,
26 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, pinOrPasswordQualityToCredentialType(I)I > 9 @74 exception:25,
3 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, isQualityAlphabeticPassword(I)Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return 19,
return 26,
conditional branch(ne, to iindex=-1) 14,15,
goto (from iindex= 9 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = ""lock_pattern_autolock"".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			if (p3 != -9999) {
				LockSettingsStorage$PersistentData v5 = this.mStorage.readPersistentDataBlock();
				if (LockSettingsStorage$PersistentData.type == 1) {
					if (LockSettingsStorage$PersistentData.type != 2) {
						boolean v4 = 0;
						if (v4 == 0) {
							long v7 = this.mStorage.getLong(""lockscreen.password_type"", 0, p3);
							int v6 = v7;
							if (v6 != 65536) {
								String v9 = LockSettingsStorage.getLockPatternFilename(p3);
								boolean v10 = LockSettingsStorage.hasFile(v9);
								boolean v8 = v10;
								if (v8 == 0) {
									if (v6 < 131072) {
										String v12 = LockSettingsStorage.getLockPasswordFilename(p3);
										boolean v13 = LockSettingsStorage.hasFile(v12);
										boolean v11 = v13;
										if (v11 == 0) {
											boolean v15 = LockPatternUtils.isQualityAlphabeticPassword(v6);
											if (v15 == 0) {
												int v14 = 4;
												int v3 = v14;
												if (v3 != 1) {
													return 1;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getBoolean(Ljava/lang/String;ZI)Z","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkReadPermission(Ljava/lang/String;I)V > 1,2,4 @0 exception:5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @5 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
12 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 10,2,3,4 @23 exception:11,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getString(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,2,5,4 @1 exception:6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 6,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = phi  2,10,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readKeyValue(Ljava/lang/String;Ljava/lang/String;I)Ljava/lang/String; > 1,11,3,4 @16 exception:12,
return 13,
9 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 7 @5 exception:8,
conditional branch(eq, to iindex=-1) 9,5,
12 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,10 @14 exception:11,
conditional branch(ne, to iindex=-1) 12,5,
15 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 7,13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,5,
goto (from iindex= 15 to iindex = 3),
23 = phi  3,5,20,
return 23,
return 12,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public boolean getBoolean(String p1, boolean p2, int p3){
	boolean v2 = ""lock_pattern_autolock"".equals(p1);
	if (v2 == 0) {
		if (p3 != -9999) {
			boolean v5 = ""legacy_lock_pattern_enabled"".equals(p1);
			if (v5 == 0) {
				String v6 = LockSettingsStorage.readKeyValue(p1, 0, p3);
				String v4 = v6;
				boolean v7 = TextUtils.isEmpty(v4);
				if (v7 == 0) {
					boolean v8 = v4.equals(""1"");
					if (v8 != 0) {
						boolean v9 = v4.equals(""true"");
						if (v9 == 0) {
							boolean v3 = p2;
							return v3;
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","getRecoverySecretTypes()[I","0","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getRecoverySecretTypes()[I > 2 @2 exception:3,
return 4,","depth : 0
-----
","public [I getRecoverySecretTypes(){
	[I v1 = this.mRecoverableKeyStoreManager.getRecoverySecretTypes();
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getRecoverySecretTypes()[I","1","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getRecoverySecretTypes()[I > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:6,
9 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getRecoverySecretTypes(II)[I > 3,5,7 @13 exception:8,
return 9,
return 4,","depth : 0
-----
depth : 1
-----
","public [I getRecoverySecretTypes(){
	int v3 = UserHandle.getCallingUserId();
	int v4 = Binder.getCallingUid();
	[I v5 = this.mDatabase.getRecoverySecretTypes(v3, v4);
	[I v1 = v5;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","getRecoverySecretTypes()[I","2","2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
4 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getRecoverySecretTypes()[I > 2 @2 exception:3,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @5 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @9 exception:6,
9 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getRecoverySecretTypes(II)[I > 3,5,7 @13 exception:8,
4 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, mKeyStoreDbHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDbHelper> > 1,
6 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 4 @2 exception:5,
11 = new <Application,[Ljava/lang/String>@1712 ,
14 = new <Application,[Ljava/lang/String>@2213 ,
16 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @24 exception:15,
arraystore 14[17] = 16,
19 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 3 @31 exception:18,
arraystore 14[20] = 19,
24 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 6,21,11,22,14,17,17,17 @47 exception:23,
26 = invokeinterface < Application, Landroid/database/Cursor, getCount()I > 24 @51 exception:25,
conditional branch(ne, to iindex=-1) 26,17,
conditional branch(le, to iindex=-1) 26,20,
29 = invokeinterface < Application, Landroid/database/Cursor, moveToFirst()Z > 24 @105 exception:28,
31 = invokeinterface < Application, Landroid/database/Cursor, getColumnIndexOrThrow(Ljava/lang/String;)I > 24,10 @108 exception:30,
33 = invokeinterface < Application, Landroid/database/Cursor, isNull(I)Z > 24,31 @112 exception:32,
conditional branch(eq, to iindex=-1) 33,17,
35 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,31 @124 exception:34,
37 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 35 @128 exception:36,
conditional branch(eq, to iindex=-1) 37,17,
40 = invokevirtual < Application, Ljava/lang/String, split(Ljava/lang/String;)[Ljava/lang/String; > 35,38 @142 exception:39,
41 = arraylength 40,
42 = new <Primordial,[I>@14741 ,
68 = phi  65,17,
43 = arraylength 40,
conditional branch(ge, to iindex=-1) 68,43,
44 = arrayload 40[68],
46 = invokestatic < Application, Ljava/lang/Integer, parseInt(Ljava/lang/String;)I > 44 @154 exception:45,
47 = getCaughtException ,
48 = new <Application,Ljava/lang/StringBuilder>@162,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 48 @164 exception:49,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 48,50 @169 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 48,47 @172 exception:53,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 48 @175 exception:55,
58 = invokestatic < Application, Landroid/util/Log, wtf(Ljava/lang/String;Ljava/lang/String;)I > 27,56 @179 exception:57,
65 = binaryop(add) 68 , 64,
goto (from iindex= 92 to iindex = -35),
68 = phi  65,17,
43 = arraylength 40,
conditional branch(ge, to iindex=-1) 68,43,
invokeinterface < Application, Landroid/database/Cursor, close()V > 24 @185 exception:72,
return 42,
return 9,
return 4,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public [I getRecoverySecretTypes(){
	int v3 = UserHandle.getCallingUserId();
	int v4 = Binder.getCallingUid();
	SQLiteDatabase v6 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v7 = new String(4);
	String v8 = new String(2);
	String v9 = Integer.toString(v3);
	String v10 = Integer.toString(v4);
	Cursor v11 = v6.query(""recovery_service_metadata"", v7, ""user_id = ? AND uid = ?"", v8, 0, 0, 0);
	int v12 = v11.getCount();
	if (v12 != 0) {
		if (v12 <= 1) {
			boolean v13 = v11.moveToFirst();
			int v14 = v11.getColumnIndexOrThrow(""secret_types"");
			boolean v15 = v11.isNull(v14);
			if (v15 == 0) {
				String v16 = v11.getString(v14);
				boolean v17 = TextUtils.isEmpty(v16);
				if (v17 == 0) {
					String v18 = v16.split("","");
					[I v19 = new [I(v18.length);
					if (0 >= v18.length) {
						int v20 = Integer.parseInt(v18[0]);
						if ((0 + 1) >= v18.length) {
							v11.close();
							[I v5 = v19;
							[I v1 = v5;
							return v1;
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","userPresent(I)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportUnlock(I)V > 4,2 @5 exception:5,
return,","depth : 0
-----
","public void userPresent(int p1){
	this.mStrongAuth.reportUnlock(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","userPresent(I)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportUnlock(I)V > 4,2 @5 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, requireStrongAuth(II)V > 1,3,2 @1 exception:4,
return,
return,","depth : 0
-----
depth : 1
-----
","public void userPresent(int p1){
	LockSettingsStrongAuth.requireStrongAuth(0, p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","userPresent(I)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,2 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportUnlock(I)V > 4,2 @5 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, requireStrongAuth(II)V > 1,3,2 @1 exception:4,
conditional branch(eq, to iindex=-1) 3,4,
conditional branch(lt, to iindex=-1) 3,5,
goto (from iindex= 3 to iindex = 10),
9 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
12 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 9,10,2,3 @18 exception:11,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 12 @22 exception:13,
return,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public void userPresent(int p1){
	if (p1 == -1) {
		if (p1 < 0) {
			Message v4 = this.mHandler.obtainMessage(1, 0, p1);
			v4.sendToTarget();
			return;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","closeSession(Ljava/lang/String;)V","0","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, closeSession(Ljava/lang/String;)V > 3,2 @2 exception:4,
return,","depth : 0
-----
","public void closeSession(String p1){
	this.mRecoverableKeyStoreManager.closeSession(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","closeSession(Ljava/lang/String;)V","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, closeSession(Ljava/lang/String;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @5 exception:5,
7 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:8,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, remove(ILjava/lang/String;)V > 7,9,2 @14 exception:10,
return,
return,","depth : 0
-----
depth : 1
-----
","public void closeSession(String p1){
	Object v3 = Objects.requireNonNull(p1, ""invalid session"");
	int v4 = Binder.getCallingUid();
	this.mRecoverySessionStorage.remove(v4, p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","closeSession(Ljava/lang/String;)V","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, closeSession(Ljava/lang/String;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @5 exception:5,
7 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:8,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, remove(ILjava/lang/String;)V > 7,9,2 @14 exception:10,
4 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, mSessionsByUid, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
return,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public void closeSession(String p1){
	Object v3 = Objects.requireNonNull(p1, ""invalid session"");
	int v4 = Binder.getCallingUid();
	Object v6 = this.mSessionsByUid.get(v4);
	if (v6 != 0) {
		return;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","closeSession(Ljava/lang/String;)V","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, closeSession(Ljava/lang/String;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @5 exception:5,
7 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:8,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, remove(ILjava/lang/String;)V > 7,9,2 @14 exception:10,
4 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, mSessionsByUid, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, mSessionsByUid, <Application,Landroid/util/SparseArray> > 1,
10 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 8,2 @11 exception:9,
11 = checkcast <Application,Ljava/util/ArrayList>10 <Application,Ljava/util/ArrayList>,
12 = new <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$$ExternalSyntheticLambda0>@17,
invokespecial < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$$ExternalSyntheticLambda0, <init>(Ljava/lang/String;)V > 12,3 @19 exception:13,
15 = invokevirtual < Application, Ljava/util/ArrayList, removeIf(Ljava/util/function/Predicate;)Z > 11,12 @22 exception:14,
return,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public void closeSession(String p1){
	Object v3 = Objects.requireNonNull(p1, ""invalid session"");
	int v4 = Binder.getCallingUid();
	Object v6 = this.mSessionsByUid.get(v4);
	if (v6 != 0) {
		Object v7 = this.mSessionsByUid.get(v4);
		RecoverySessionStorage$$ExternalSyntheticLambda0 v8 = new RecoverySessionStorage$$ExternalSyntheticLambda0(p1);
		boolean v10 = v7.removeIf(v8);
		return;
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","scheduleNonStrongBiometricIdleTimeout(I)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkBiometricPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, scheduleNonStrongBiometricIdleTimeout(I)V > 4,2 @5 exception:5,
return,","depth : 0
-----
","public void scheduleNonStrongBiometricIdleTimeout(int p1){
	this.mStrongAuth.scheduleNonStrongBiometricIdleTimeout(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","scheduleNonStrongBiometricIdleTimeout(I)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkBiometricPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, scheduleNonStrongBiometricIdleTimeout(I)V > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @5 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @9 exception:8,
return,
return,","depth : 0
-----
depth : 1
-----
","public void scheduleNonStrongBiometricIdleTimeout(int p1){
	Message v3 = this.mHandler.obtainMessage(9, p1, 0);
	v3.sendToTarget();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","reportSuccessfulBiometricUnlock(ZI)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkBiometricPermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulBiometricUnlock(ZI)V > 5,2,3 @5 exception:6,
return,","depth : 0
-----
","public void reportSuccessfulBiometricUnlock(boolean p1, int p2){
	this.mStrongAuth.reportSuccessfulBiometricUnlock(p1, p2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","reportSuccessfulBiometricUnlock(ZI)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkBiometricPermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulBiometricUnlock(ZI)V > 5,2,3 @5 exception:6,
conditional branch(eq, to iindex=-1) 2,4,
10 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
13 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 10,11,3,4 @7 exception:12,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 13 @11 exception:14,
goto (from iindex= 7 to iindex = 11),
return,
return,","depth : 0
-----
depth : 1
-----
","public void reportSuccessfulBiometricUnlock(boolean p1, int p2){
	if (p1 == 0) {
		Message v3 = this.mHandler.obtainMessage(8, p2, 0);
		v3.sendToTarget();
		return;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","reportSuccessfulBiometricUnlock(ZI)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkBiometricPermission()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulBiometricUnlock(ZI)V > 5,2,3 @5 exception:6,
conditional branch(eq, to iindex=-1) 2,4,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
8 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 5,6,3,4 @18 exception:7,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 8 @22 exception:9,
return,
return,","depth : 0
-----
depth : 1
-----
","public void reportSuccessfulBiometricUnlock(boolean p1, int p2){
	if (p1 == 0) {
		Message v3 = this.mHandler.obtainMessage(7, p2, 0);
		v3.sendToTarget();
		return;
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","setRecoveryStatus(Ljava/lang/String;I)V","0","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setRecoveryStatus(Ljava/lang/String;I)V > 4,2,3 @2 exception:5,
return,","depth : 0
-----
","public void setRecoveryStatus(String p1, int p2){
	this.mRecoverableKeyStoreManager.setRecoveryStatus(p1, p2);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setRecoveryStatus(Ljava/lang/String;I)V","1","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setRecoveryStatus(Ljava/lang/String;I)V > 4,2,3 @2 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,5 @5 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:9,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setRecoveryStatus(ILjava/lang/String;I)I > 8,10,2,3 @14 exception:11,
13 = conversion(J) 12,
15 = binaryop(lt) 13 , 14,
conditional branch(lt, to iindex=-1) 15,16,
return,
return,","depth : 0
-----
depth : 1
-----
","public void setRecoveryStatus(String p1, int p2){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	int v4 = Binder.getCallingUid();
	int v5 = this.mDatabase.setRecoveryStatus(v4, p1, p2);
	if ((v5 < 0) < 0) {
		return;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setRecoveryStatus(Ljava/lang/String;I)V","2","4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setRecoveryStatus(Ljava/lang/String;I)V > 4,2,3 @2 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,5 @5 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @10 exception:9,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setRecoveryStatus(ILjava/lang/String;I)I > 8,10,2,3 @14 exception:11,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, mKeyStoreDbHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDbHelper> > 1,
7 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 5 @2 exception:6,
8 = new <Application,Landroid/content/ContentValues>@6,
invokespecial < Application, Landroid/content/ContentValues, <init>()V > 8 @8 exception:9,
11 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 4 @11 exception:10,
invokevirtual < Application, Landroid/content/ContentValues, put(Ljava/lang/String;Ljava/lang/Integer;)V > 8,12,11 @18 exception:13,
15 = new <Application,[Ljava/lang/String>@2214 ,
17 = invokestatic < Application, Ljava/lang/String, valueOf(I)Ljava/lang/String; > 2 @24 exception:16,
arraystore 15[18] = 17,
arraystore 15[19] = 3,
23 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I > 7,20,8,21,15 @39 exception:22,
return 23,
13 = conversion(J) 12,
15 = binaryop(lt) 13 , 14,
conditional branch(lt, to iindex=-1) 15,16,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public void setRecoveryStatus(String p1, int p2){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	int v4 = Binder.getCallingUid();
	SQLiteDatabase v6 = this.mKeyStoreDbHelper.getWritableDatabase();
	ContentValues v7 = new ContentValues();
	Integer v9 = Integer.valueOf(p2);
	v7.put(""recovery_status"", v9);
	String v11 = new String(2);
	String v12 = String.valueOf(v4);
	int v13 = v6.update(""keys"", v7, ""uid = ? AND alias = ?"", v11);
	int v5 = v13;
	if ((v5 < 0) < 0) {
		return;
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","setServerParams([B)V","0","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setServerParams([B)V > 3,2 @2 exception:4,
return,","depth : 0
-----
","public void setServerParams(byte[] p1){
	this.mRecoverableKeyStoreManager.setServerParams(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setServerParams([B)V","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setServerParams([B)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @3 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @7 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
10 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getServerParams(II)[B > 8,5,7 @13 exception:9,
12 = invokestatic < Application, Ljava/util/Arrays, equals([B[B)Z > 2,10 @17 exception:11,
conditional branch(eq, to iindex=-1) 12,14,
15 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
17 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setServerParams(II[B)J > 15,5,7,2 @33 exception:16,
19 = binaryop(lt) 17 , 18,
conditional branch(lt, to iindex=-1) 19,14,
conditional branch(ne, to iindex=-1) 10,14,
24 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
26 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getSnapshotVersion(II)Ljava/lang/Long; > 24,5,7 @53 exception:25,
conditional branch(eq, to iindex=-1) 26,14,
30 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
33 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 30,5,7,31 @62 exception:32,
36 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 13,34 @67 exception:35,
goto (from iindex= 34 to iindex = 6),
return,
return,","depth : 0
-----
depth : 1
-----
","public void setServerParams(byte[] p1){
	int v3 = UserHandle.getCallingUserId();
	int v4 = Binder.getCallingUid();
	byte[] v5 = this.mDatabase.getServerParams(v3, v4);
	boolean v6 = Arrays.equals(p1, v5);
	if (v6 == 0) {
		long v7 = this.mDatabase.setServerParams(v3, v4, p1);
		if ((v7 < 0) < 0) {
			if (v5 != 0) {
				Long v8 = this.mDatabase.getSnapshotVersion(v3, v4);
				if (v8 == 0) {
					long v9 = this.mDatabase.setShouldCreateSnapshot(v3, v4, 1);
					return;
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setServerParams([B)V","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setServerParams([B)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @3 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @7 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
10 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getServerParams(II)[B > 8,5,7 @13 exception:9,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getBytes(IILjava/lang/String;)[B > 1,2,3,4 @3 exception:5,
return 6,
12 = invokestatic < Application, Ljava/util/Arrays, equals([B[B)Z > 2,10 @17 exception:11,
conditional branch(eq, to iindex=-1) 12,14,
15 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
17 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setServerParams(II[B)J > 15,5,7,2 @33 exception:16,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setBytes(IILjava/lang/String;[B)J > 1,2,3,5,4 @3 exception:6,
return 7,
19 = binaryop(lt) 17 , 18,
conditional branch(lt, to iindex=-1) 19,14,
conditional branch(ne, to iindex=-1) 10,14,
24 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
26 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getSnapshotVersion(II)Ljava/lang/Long; > 24,5,7 @53 exception:25,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getLong(IILjava/lang/String;)Ljava/lang/Long; > 1,2,3,4 @3 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 26,14,
30 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
33 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 30,5,7,31 @62 exception:32,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 3),
8 = phi  7,6,
11 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setLong(IILjava/lang/String;J)J > 1,2,3,9,8 @14 exception:10,
return 11,
36 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 13,34 @67 exception:35,
goto (from iindex= 34 to iindex = 6),
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void setServerParams(byte[] p1){
	int v3 = UserHandle.getCallingUserId();
	int v4 = Binder.getCallingUid();
	byte[] v6 = RecoverableKeyStoreDb.getBytes(v3, v4, ""server_params"");
	byte[] v5 = v6;
	boolean v7 = Arrays.equals(p1, v5);
	if (v7 == 0) {
		long v9 = RecoverableKeyStoreDb.setBytes(v3, v4, ""server_params"", p1);
		long v8 = v9;
		if ((v8 < 0) < 0) {
			if (v5 != 0) {
				Long v11 = RecoverableKeyStoreDb.getLong(v3, v4, ""snapshot_version"");
				Long v10 = v11;
				if (v10 == 0) {
					if (1 == 0) {
						long v13 = RecoverableKeyStoreDb.setLong(v3, v4, ""should_create_snapshot"", 1);
						long v12 = v13;
						return;
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setServerParams([B)V","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setServerParams([B)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @3 exception:4,
7 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @7 exception:6,
8 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
10 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getServerParams(II)[B > 8,5,7 @13 exception:9,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getBytes(IILjava/lang/String;)[B > 1,2,3,4 @3 exception:5,
return 6,
12 = invokestatic < Application, Ljava/util/Arrays, equals([B[B)Z > 2,10 @17 exception:11,
conditional branch(eq, to iindex=-1) 12,14,
15 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
17 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setServerParams(II[B)J > 15,5,7,2 @33 exception:16,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setBytes(IILjava/lang/String;[B)J > 1,2,3,5,4 @3 exception:6,
return 7,
19 = binaryop(lt) 17 , 18,
conditional branch(lt, to iindex=-1) 19,14,
conditional branch(ne, to iindex=-1) 10,14,
24 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
26 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getSnapshotVersion(II)Ljava/lang/Long; > 24,5,7 @53 exception:25,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getLong(IILjava/lang/String;)Ljava/lang/Long; > 1,2,3,4 @3 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 26,14,
29 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 13,27 @73 exception:28,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void setServerParams(byte[] p1){
	int v3 = UserHandle.getCallingUserId();
	int v4 = Binder.getCallingUid();
	byte[] v6 = RecoverableKeyStoreDb.getBytes(v3, v4, ""server_params"");
	byte[] v5 = v6;
	boolean v7 = Arrays.equals(p1, v5);
	if (v7 == 0) {
		long v9 = RecoverableKeyStoreDb.setBytes(v3, v4, ""server_params"", p1);
		long v8 = v9;
		if ((v8 < 0) < 0) {
			if (v5 != 0) {
				Long v11 = RecoverableKeyStoreDb.getLong(v3, v4, ""snapshot_version"");
				Long v10 = v11;
				if (v10 == 0) {
					return;
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
14 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 12,3 @11 exception:13,
15 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,15,8,4 @18 exception:16,
19 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 17 @22 exception:18,
conditional branch(eq, to iindex=-1) 19,8,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @29 exception:20,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,21,3,8,4 @33 exception:22,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @37 exception:42,
return 23,","depth : 0
-----
","public VerifyCredentialResponse verifyTiedProfileChallenge(LockscreenCredential p1, int p2, int p3){
	boolean v2 = p0.isProfileWithUnifiedLock(p2);
	if (v2 == 0) {
		UserInfo v3 = this.mUserManager.getProfileParent(p2);
		VerifyCredentialResponse v4 = p0.doVerifyCredential(p1, UserInfo.id, 0, p3);
		int v5 = v4.getResponseCode();
		if (v5 == 0) {
			LockscreenCredential v6 = p0.getDecryptedPasswordForTiedProfile(p2);
			VerifyCredentialResponse v7 = p0.doVerifyCredential(v6, p2, 0, p3);
			p0.scheduleGc();
			return v7;
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:6,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
14 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 12,3 @11 exception:13,
15 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,15,8,4 @18 exception:16,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 30,6,
39 = new <Application,Ljava/lang/StringBuilder>@79,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 39 @81 exception:40,
43 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,41 @86 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,44 @91 exception:45,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,47 @96 exception:48,
51 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @99 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,51 @103 exception:52,
55 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 39 @106 exception:54,
57 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 13,55 @110 exception:56,
58 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
return 58,
19 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 17 @22 exception:18,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(eq, to iindex=-1) 19,8,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @29 exception:20,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
return 40,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,21,3,8,4 @33 exception:22,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 30,6,
39 = new <Application,Ljava/lang/StringBuilder>@79,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 39 @81 exception:40,
43 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,41 @86 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,44 @91 exception:45,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,47 @96 exception:48,
51 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @99 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,51 @103 exception:52,
55 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 39 @106 exception:54,
57 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 13,55 @110 exception:56,
58 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
return 58,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @37 exception:42,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mHandler, <Application,Landroid/os/Handler> > 1,
3 = new <Application,Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3>@2,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$$ExternalSyntheticLambda3, <init>()V > 3 @4 exception:4,
7 = invokevirtual < Application, Landroid/os/Handler, postDelayed(Ljava/lang/Runnable;J)Z > 2,3,5 @9 exception:6,
return,
return 23,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public VerifyCredentialResponse verifyTiedProfileChallenge(LockscreenCredential p1, int p2, int p3){
	boolean v3 = LockSettingsService.isCredentialSharableWithParent(p2);
	if (v3 == 0) {
		boolean v4 = LockSettingsService.getSeparateProfileChallengeEnabledInternal(p2);
		if (v4 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				UserInfo v5 = this.mUserManager.getProfileParent(p2);
				if (p1 == 0) {
					boolean v7 = p1.isNone();
					if (v7 != 0) {
						if (UserInfo.id != -9999) {
							ContentResolver v8 = this.mContext.getContentResolver();
							int v9 = this.mInjector.settingsGlobalGetInt(v8, ""device_provisioned"", 0);
							if (v9 == 0) {
								VerifyCredentialResponse v10 = LockSettingsService.spBasedDoVerifyCredential(p1, UserInfo.id, 0, p3);
								if (v10 == 0) {
									if (UserInfo.id != -9999) {
										LockSettingsStorage$CredentialHash v11 = this.mStorage.readCredentialHash(UserInfo.id);
										boolean v12 = p1.checkAgainstStoredType(LockSettingsStorage$CredentialHash.type);
										if (v12 != 0) {
											int v18 = p1.getType();
											VerifyCredentialResponse v6 = VerifyCredentialResponse.ERROR;
											int v22 = this.mResponseCode;
											if (v22 == 0) {
												byte[] v24 = this.mStorage.readChildProfileLock(p2);
												if (v24 == 0) {
													byte[] v25 = Arrays.copyOfRange(v24, 0, 12);
													byte[] v26 = Arrays.copyOfRange(v24, 12, v24.length);
													StringBuilder v27 = new StringBuilder();
													StringBuilder v29 = v27.append(""profile_key_name_decrypt_"");
													StringBuilder v30 = v27.append(p2);
													String v31 = v27.toString();
													Key v32 = this.mJavaKeyStore.getKey(v31, 0);
													Cipher v33 = Cipher.getInstance(""AES/GCM/NoPadding"");
													GCMParameterSpec v34 = new GCMParameterSpec(128,v25);
													v33.init(2, v32, v34);
													byte[] v37 = v33.doFinal(v26);
													LockscreenCredential v38 = LockscreenCredential.createManagedPassword(v37);
													Arrays.fill(v37, 0);
													this.mManagedProfilePasswordCache.storePassword(p2, v38);
													LockscreenCredential v23 = v38;
													if (v23 == 0) {
														boolean v42 = v23.isNone();
														if (v42 != 0) {
															if (p2 != -9999) {
																ContentResolver v43 = this.mContext.getContentResolver();
																int v44 = this.mInjector.settingsGlobalGetInt(v43, ""device_provisioned"", 0);
																if (v44 == 0) {
																	VerifyCredentialResponse v45 = LockSettingsService.spBasedDoVerifyCredential(v23, p2, 0, p3);
																	if (v45 == 0) {
																		if (p2 != -9999) {
																			LockSettingsStorage$CredentialHash v46 = this.mStorage.readCredentialHash(p2);
																			boolean v47 = v23.checkAgainstStoredType(LockSettingsStorage$CredentialHash.type);
																			if (v47 != 0) {
																				int v53 = v23.getType();
																				VerifyCredentialResponse v41 = VerifyCredentialResponse.ERROR;
																				LockSettingsService$$ExternalSyntheticLambda3 v58 = new LockSettingsService$$ExternalSyntheticLambda3();
																				boolean v60 = this.mHandler.postDelayed(v58, 2000);
																				return v41;
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:6,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
14 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 12,3 @11 exception:13,
15 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,15,8,4 @18 exception:16,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 30,6,
39 = new <Application,Ljava/lang/StringBuilder>@79,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 39 @81 exception:40,
43 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,41 @86 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,44 @91 exception:45,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,47 @96 exception:48,
51 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @99 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,51 @103 exception:52,
55 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 39 @106 exception:54,
57 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 13,55 @110 exception:56,
58 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
return 58,
19 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 17 @22 exception:18,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(eq, to iindex=-1) 19,8,
return 17,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public VerifyCredentialResponse verifyTiedProfileChallenge(LockscreenCredential p1, int p2, int p3){
	boolean v3 = LockSettingsService.isCredentialSharableWithParent(p2);
	if (v3 == 0) {
		boolean v4 = LockSettingsService.getSeparateProfileChallengeEnabledInternal(p2);
		if (v4 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				UserInfo v5 = this.mUserManager.getProfileParent(p2);
				if (p1 == 0) {
					boolean v7 = p1.isNone();
					if (v7 != 0) {
						if (UserInfo.id != -9999) {
							ContentResolver v8 = this.mContext.getContentResolver();
							int v9 = this.mInjector.settingsGlobalGetInt(v8, ""device_provisioned"", 0);
							if (v9 == 0) {
								VerifyCredentialResponse v10 = LockSettingsService.spBasedDoVerifyCredential(p1, UserInfo.id, 0, p3);
								if (v10 == 0) {
									if (UserInfo.id != -9999) {
										LockSettingsStorage$CredentialHash v11 = this.mStorage.readCredentialHash(UserInfo.id);
										boolean v12 = p1.checkAgainstStoredType(LockSettingsStorage$CredentialHash.type);
										if (v12 != 0) {
											int v18 = p1.getType();
											VerifyCredentialResponse v6 = VerifyCredentialResponse.ERROR;
											int v22 = this.mResponseCode;
											if (v22 == 0) {
												return v6;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:6,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
14 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 12,3 @11 exception:13,
15 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,15,8,4 @18 exception:16,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
19 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 17 @22 exception:18,
conditional branch(eq, to iindex=-1) 19,8,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @29 exception:20,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
2 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = arraylength 1,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 1,3 @3 exception:4,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 2,6,5 @8 exception:7,
return 2,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 5,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 9,2 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @27 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, getProvider()Ljava/security/Provider; > 16 @35 exception:17,
20 = invokestatic < Application, Ljavax/crypto/KeyGenerator, getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator; > 15,18 @39 exception:19,
21 = new <Application,Landroid/security/keystore/KeyGenParameterSpec$Builder>@43,
invokespecial < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, <init>(Ljava/lang/String;I)V > 21,14,22 @46 exception:23,
26 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setKeySize(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 21,24 @51 exception:25,
28 = new <Application,[Ljava/lang/String>@5729 ,
31 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 26,28 @61 exception:30,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, keyNamespace()I > @65 exception:32,
35 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setNamespace(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 31,33 @69 exception:34,
37 = new <Application,[Ljava/lang/String>@7529 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 35,37 @79 exception:38,
41 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationRequired(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 39,29 @84 exception:40,
42 = getstatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, CACHE_TIMEOUT_SECONDS, <Primordial,I> >,
44 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationValidityDurationSeconds(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 41,42 @90 exception:43,
46 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, build()Landroid/security/keystore/KeyGenParameterSpec; > 44 @94 exception:45,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(Ljava/security/spec/AlgorithmParameterSpec;)V > 20,46 @98 exception:47,
49 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 20 @101 exception:48,
62 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 60 @107 exception:61,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;)V > 62,29,49 @111 exception:63,
65 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 3 @114 exception:64,
67 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 62,65 @118 exception:66,
69 = invokevirtual < Application, Ljavax/crypto/Cipher, getIV()[B > 62 @122 exception:68,
74 = getCaughtException ,
77 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 56,75,74 @150 exception:76,
monitorexit 4,
return,
return 40,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,21,3,8,4 @33 exception:22,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @37 exception:42,
return 23,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse verifyTiedProfileChallenge(LockscreenCredential p1, int p2, int p3){
	UserManager v4 = LockSettingsService.getUserManagerFromCache(p2);
	boolean v5 = v4.isCredentialSharableWithParent();
	boolean v3 = v5;
	if (v3 == 0) {
		boolean v7 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p2);
		boolean v6 = v7;
		if (v6 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				UserInfo v8 = this.mUserManager.getProfileParent(p2);
				if (p1 == 0) {
					boolean v10 = p1.isNone();
					if (v10 != 0) {
						if (UserInfo.id != -9999) {
							ContentResolver v11 = this.mContext.getContentResolver();
							int v13 = Settings$Global.getInt(v11, ""device_provisioned"", 0);
							int v12 = v13;
							if (v12 == 0) {
								boolean v15 = this.mInjector.hasEnrolledBiometrics(UserInfo.id);
								if ((p3 & 1) == 0) {
									boolean v24 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(UserInfo.id);
									if (v24 != 0) {
										if (UserInfo.id != -9999) {
											long v25 = LockSettingsService.getSyntheticPasswordHandleLocked(UserInfo.id);
											IGateKeeperService v26 = LockSettingsService.getGateKeeperService();
											SyntheticPasswordManager$AuthenticationResult v27 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v26, v25, p1, UserInfo.id, 0);
											int v28 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
											if (v28 != 0) {
												byte[] v29 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
												this.mBiometricDeferredQueue.addPendingLockoutResetForUser(UserInfo.id, v29);
												IGateKeeperService v31 = LockSettingsService.getGateKeeperService();
												VerifyCredentialResponse v32 = this.mSpManager.verifyChallenge(v31, SyntheticPasswordManager$AuthenticationResult.authToken, 0, UserInfo.id);
												int v33 = v32.getResponseCode();
												if (v33 == 0) {
													int v34 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
													if (v34 != 0) {
														int v35 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
														if (v35 != 1) {
															int v36 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
															if (v36 <= 0) {
																LockSettingsService.requireStrongAuth(8, UserInfo.id);
																boolean v38 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
																if (v38 == 0) {
																	if (1 == 0) {
																		VerifyCredentialResponse v14 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																		if (v14 == 0) {
																			if (UserInfo.id != -9999) {
																				LockSettingsStorage$CredentialHash v40 = LockSettingsStorage.readPasswordHashIfExists(UserInfo.id);
																				if (v40 == 0) {
																					LockSettingsStorage$CredentialHash v41 = LockSettingsStorage.readPatternHashIfExists(UserInfo.id);
																					if (v41 == 0) {
																						LockSettingsStorage$CredentialHash v42 = LockSettingsStorage$CredentialHash.createEmptyHash();
																						LockSettingsStorage$CredentialHash v39 = v42;
																						if (LockSettingsStorage$CredentialHash.type != 2) {
																							int v44 = LockscreenCredential.getType();
																							if (v44 == 4) {
																								int v45 = LockscreenCredential.getType();
																								if (v45 != 3) {
																									boolean v43 = 1;
																									if (v43 != 0) {
																										if (v39 == 0) {
																											if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																												boolean v47 = p1.isNone();
																												if (v47 == 0) {
																													if (v39 == 0) {
																														if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																															boolean v48 = p1.isNone();
																															if (v48 == 0) {
																																StrictMode.noteDiskRead();
																																IGateKeeperService v50 = LockSettingsService.getGateKeeperService();
																																byte[] v51 = p1.getCredential();
																																GateKeeperResponse v52 = v50.verifyChallenge(UserInfo.id, 0, LockSettingsStorage$CredentialHash.hash, v51);
																																VerifyCredentialResponse v53 = LockSettingsService.convertResponse(v52);
																																boolean v54 = v52.getShouldReEnroll();
																																int v55 = v53.getResponseCode();
																																if (v55 != 0) {
																																	if (0 == 0) {
																																		0.onCredentialVerified();
																																		LockSettingsService.setUserPasswordMetrics(p1, UserInfo.id);
																																		byte[] v58 = p1.getCredential();
																																		LockSettingsService.unlockKeystore(v58, UserInfo.id);
																																		byte[] v66 = LockSettingsService.secretFromCredential(p1);
																																		LockSettingsService.unlockUser(UserInfo.id, v66);
																																		boolean v68 = LockSettingsService.isProfileWithSeparatedLock(UserInfo.id);
																																		if (v68 == 0) {
																																			LockSettingsService.setDeviceUnlockedForUser(UserInfo.id);
																																			if (v54 == 0) {
																																				boolean v70 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(UserInfo.id);
																																				if (v70 == 0) {
																																					LockSettingsService.sendCredentialsOnUnlockIfRequired(p1, UserInfo.id);
																																					VerifyCredentialResponse v46 = v53;
																																					int v72 = this.mResponseCode;
																																					if (v72 != 0) {
																																						Message v74 = this.mHandler.obtainMessage(5, UserInfo.id, 0);
																																						v74.sendToTarget();
																																						VerifyCredentialResponse v9 = v46;
																																						int v76 = v9.getResponseCode();
																																						if (v76 == 0) {
																																							String v79 = LockSettingsStorage.getChildProfileLockFile(p2);
																																							byte[] v80 = LockSettingsStorage.readFile(v79);
																																							byte[] v78 = v80;
																																							if (v78 == 0) {
																																								byte[] v81 = Arrays.copyOfRange(v78, 0, 12);
																																								byte[] v82 = Arrays.copyOfRange(v78, 12, v78.length);
																																								StringBuilder v83 = new StringBuilder();
																																								StringBuilder v85 = v83.append(""profile_key_name_decrypt_"");
																																								StringBuilder v86 = v83.append(p2);
																																								String v87 = v83.toString();
																																								Key v88 = this.mJavaKeyStore.getKey(v87, 0);
																																								Cipher v89 = Cipher.getInstance(""AES/GCM/NoPadding"");
																																								GCMParameterSpec v90 = new GCMParameterSpec(128,v81);
																																								v89.init(2, v88, v90);
																																								byte[] v93 = v89.doFinal(v82);
																																								LockscreenCredential v95 = new LockscreenCredential(4,v96);
																																								byte[] v96 = Arrays.copyOf(v93, v93.length);
																																								LockscreenCredential v94 = v95;
																																								Arrays.fill(v93, 0);
																																								boolean v100 = this.mEncryptedPasswords.contains(p2);
																																								if (v100 == 0) {
																																									UserInfo v101 = this.mUserManager.getProfileParent(p2);
																																									if (v101 == 0) {
																																										if (UserInfo.id == 0) {
																																											String v102 = ManagedProfilePasswordCache.getEncryptionKeyName(p2);
																																											Provider v103 = this.mKeyStore.getProvider();
																																											KeyGenerator v104 = KeyGenerator.getInstance(""AES"", v103);
																																											KeyGenParameterSpec$Builder v105 = new KeyGenParameterSpec$Builder(v102,3);
																																											KeyGenParameterSpec$Builder v107 = v105.setKeySize(256);
																																											String v108 = new String(1);
																																											KeyGenParameterSpec$Builder v109 = v107.setBlockModes(v108);
																																											int v110 = SyntheticPasswordCrypto.keyNamespace();
																																											KeyGenParameterSpec$Builder v111 = v109.setNamespace(v110);
																																											String v112 = new String(1);
																																											KeyGenParameterSpec$Builder v113 = v111.setEncryptionPaddings(v112);
																																											KeyGenParameterSpec$Builder v114 = v113.setUserAuthenticationRequired(1);
																																											KeyGenParameterSpec$Builder v115 = v114.setUserAuthenticationValidityDurationSeconds(this.CACHE_TIMEOUT_SECONDS);
																																											KeyGenParameterSpec v116 = v115.build();
																																											v104.init(v116);
																																											SecretKey v118 = v104.generateKey();
																																											Cipher v119 = Cipher.getInstance(""AES/GCM/NoPadding"");
																																											v119.init(1, v118);
																																											byte[] v121 = v94.getCredential();
																																											byte[] v122 = v119.doFinal(v121);
																																											byte[] v123 = v119.getIV();
																																											LockscreenCredential v77 = v94;
																																											if (v77 == 0) {
																																												boolean v126 = v77.isNone();
																																												if (v126 != 0) {
																																													if (p2 != -9999) {
																																														ContentResolver v127 = this.mContext.getContentResolver();
																																														int v129 = Settings$Global.getInt(v127, ""device_provisioned"", 0);
																																														int v128 = v129;
																																														if (v128 == 0) {
																																															boolean v131 = this.mInjector.hasEnrolledBiometrics(p2);
																																															if ((p3 & 1) == 0) {
																																																boolean v140 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
																																																if (v140 != 0) {
																																																	if (p2 != -9999) {
																																																		long v141 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
																																																		IGateKeeperService v142 = LockSettingsService.getGateKeeperService();
																																																		SyntheticPasswordManager$AuthenticationResult v143 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v142, v141, v77, p2, 0);
																																																		int v144 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
																																																		if (v144 != 0) {
																																																			byte[] v145 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
																																																			this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p2, v145);
																																																			IGateKeeperService v147 = LockSettingsService.getGateKeeperService();
																																																			VerifyCredentialResponse v148 = this.mSpManager.verifyChallenge(v147, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2);
																																																			int v149 = v148.getResponseCode();
																																																			if (v149 == 0) {
																																																				int v150 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
																																																				if (v150 != 0) {
																																																					int v151 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
																																																					if (v151 != 1) {
																																																						int v152 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
																																																						if (v152 <= 0) {
																																																							LockSettingsService.requireStrongAuth(8, p2);
																																																							boolean v154 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
																																																							if (v154 == 0) {
																																																								if (1 == 0) {
																																																									VerifyCredentialResponse v130 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																																																									if (v130 == 0) {
																																																										if (p2 != -9999) {
																																																											LockSettingsStorage$CredentialHash v156 = LockSettingsStorage.readPasswordHashIfExists(p2);
																																																											if (v156 == 0) {
																																																												LockSettingsStorage$CredentialHash v157 = LockSettingsStorage.readPatternHashIfExists(p2);
																																																												if (v157 == 0) {
																																																													LockSettingsStorage$CredentialHash v158 = LockSettingsStorage$CredentialHash.createEmptyHash();
																																																													LockSettingsStorage$CredentialHash v155 = v158;
																																																													if (LockSettingsStorage$CredentialHash.type != 2) {
																																																														int v160 = LockscreenCredential.getType();
																																																														if (v160 == 4) {
																																																															int v161 = LockscreenCredential.getType();
																																																															if (v161 != 3) {
																																																																boolean v159 = 1;
																																																																if (v159 != 0) {
																																																																	if (v155 == 0) {
																																																																		if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																																																																			boolean v163 = v77.isNone();
																																																																			if (v163 == 0) {
																																																																				if (v155 == 0) {
																																																																					if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																																																																						boolean v164 = v77.isNone();
																																																																						if (v164 == 0) {
																																																																							StrictMode.noteDiskRead();
																																																																							IGateKeeperService v166 = LockSettingsService.getGateKeeperService();
																																																																							byte[] v167 = v77.getCredential();
																																																																							GateKeeperResponse v168 = v166.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v167);
																																																																							VerifyCredentialResponse v169 = LockSettingsService.convertResponse(v168);
																																																																							boolean v170 = v168.getShouldReEnroll();
																																																																							int v171 = v169.getResponseCode();
																																																																							if (v171 != 0) {
																																																																								if (0 == 0) {
																																																																									0.onCredentialVerified();
																																																																									LockSettingsService.setUserPasswordMetrics(v77, p2);
																																																																									byte[] v174 = v77.getCredential();
																																																																									LockSettingsService.unlockKeystore(v174, p2);
																																																																									byte[] v182 = LockSettingsService.secretFromCredential(v77);
																																																																									LockSettingsService.unlockUser(p2, v182);
																																																																									boolean v184 = LockSettingsService.isProfileWithSeparatedLock(p2);
																																																																									if (v184 == 0) {
																																																																										LockSettingsService.setDeviceUnlockedForUser(p2);
																																																																										if (v170 == 0) {
																																																																											boolean v186 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p2);
																																																																											if (v186 == 0) {
																																																																												LockSettingsService.sendCredentialsOnUnlockIfRequired(v77, p2);
																																																																												VerifyCredentialResponse v162 = v169;
																																																																												int v188 = this.mResponseCode;
																																																																												if (v188 != 0) {
																																																																													Message v190 = this.mHandler.obtainMessage(5, p2, 0);
																																																																													v190.sendToTarget();
																																																																													VerifyCredentialResponse v125 = v162;
																																																																													p0.scheduleGc();
																																																																													return v125;
																																																																												}
																																																																											}
																																																																										}
																																																																									}
																																																																								}
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:6,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
14 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 12,3 @11 exception:13,
15 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,15,8,4 @18 exception:16,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
return 7,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
19 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 17 @22 exception:18,
conditional branch(eq, to iindex=-1) 19,8,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @29 exception:20,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
2 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = arraylength 1,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 1,3 @3 exception:4,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 2,6,5 @8 exception:7,
return 2,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 5,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 9,2 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @27 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, getProvider()Ljava/security/Provider; > 16 @35 exception:17,
20 = invokestatic < Application, Ljavax/crypto/KeyGenerator, getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator; > 15,18 @39 exception:19,
21 = new <Application,Landroid/security/keystore/KeyGenParameterSpec$Builder>@43,
invokespecial < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, <init>(Ljava/lang/String;I)V > 21,14,22 @46 exception:23,
26 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setKeySize(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 21,24 @51 exception:25,
28 = new <Application,[Ljava/lang/String>@5729 ,
31 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 26,28 @61 exception:30,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, keyNamespace()I > @65 exception:32,
35 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setNamespace(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 31,33 @69 exception:34,
37 = new <Application,[Ljava/lang/String>@7529 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 35,37 @79 exception:38,
41 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationRequired(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 39,29 @84 exception:40,
42 = getstatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, CACHE_TIMEOUT_SECONDS, <Primordial,I> >,
44 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationValidityDurationSeconds(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 41,42 @90 exception:43,
46 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, build()Landroid/security/keystore/KeyGenParameterSpec; > 44 @94 exception:45,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(Ljava/security/spec/AlgorithmParameterSpec;)V > 20,46 @98 exception:47,
49 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 20 @101 exception:48,
62 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 60 @107 exception:61,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;)V > 62,29,49 @111 exception:63,
65 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 3 @114 exception:64,
67 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 62,65 @118 exception:66,
69 = invokevirtual < Application, Ljavax/crypto/Cipher, getIV()[B > 62 @122 exception:68,
74 = getCaughtException ,
77 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 56,75,74 @150 exception:76,
monitorexit 4,
return,
return 40,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,21,3,8,4 @33 exception:22,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @37 exception:42,
return 23,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse verifyTiedProfileChallenge(LockscreenCredential p1, int p2, int p3){
	UserManager v4 = LockSettingsService.getUserManagerFromCache(p2);
	boolean v5 = v4.isCredentialSharableWithParent();
	boolean v3 = v5;
	if (v3 == 0) {
		boolean v7 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p2);
		boolean v6 = v7;
		if (v6 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				UserInfo v8 = this.mUserManager.getProfileParent(p2);
				if (p1 == 0) {
					boolean v10 = p1.isNone();
					if (v10 != 0) {
						if (UserInfo.id != -9999) {
							ContentResolver v11 = this.mContext.getContentResolver();
							int v13 = Settings$Global.getInt(v11, ""device_provisioned"", 0);
							int v12 = v13;
							if (v12 == 0) {
								boolean v15 = this.mInjector.hasEnrolledBiometrics(UserInfo.id);
								if ((p3 & 1) == 0) {
									boolean v24 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(UserInfo.id);
									if (v24 != 0) {
										if (UserInfo.id != -9999) {
											long v25 = LockSettingsService.getSyntheticPasswordHandleLocked(UserInfo.id);
											IGateKeeperService v26 = LockSettingsService.getGateKeeperService();
											SyntheticPasswordManager$AuthenticationResult v27 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v26, v25, p1, UserInfo.id, 0);
											int v28 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
											if (v28 != 0) {
												byte[] v29 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
												this.mBiometricDeferredQueue.addPendingLockoutResetForUser(UserInfo.id, v29);
												IGateKeeperService v31 = LockSettingsService.getGateKeeperService();
												VerifyCredentialResponse v32 = this.mSpManager.verifyChallenge(v31, SyntheticPasswordManager$AuthenticationResult.authToken, 0, UserInfo.id);
												int v33 = v32.getResponseCode();
												if (v33 == 0) {
													int v34 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
													if (v34 != 0) {
														int v35 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
														if (v35 != 1) {
															int v36 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
															if (v36 <= 0) {
																LockSettingsService.requireStrongAuth(8, UserInfo.id);
																boolean v38 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
																if (v38 == 0) {
																	if (1 == 0) {
																		VerifyCredentialResponse v14 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																		if (v14 == 0) {
																			if (UserInfo.id != -9999) {
																				LockSettingsStorage$CredentialHash v40 = LockSettingsStorage.readPasswordHashIfExists(UserInfo.id);
																				if (v40 == 0) {
																					LockSettingsStorage$CredentialHash v41 = LockSettingsStorage.readPatternHashIfExists(UserInfo.id);
																					if (v41 == 0) {
																						LockSettingsStorage$CredentialHash v39 = v41;
																						if (LockSettingsStorage$CredentialHash.type != 2) {
																							int v43 = LockscreenCredential.getType();
																							if (v43 == 4) {
																								int v44 = LockscreenCredential.getType();
																								if (v44 != 3) {
																									boolean v42 = 1;
																									if (v42 != 0) {
																										if (v39 == 0) {
																											if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																												boolean v46 = p1.isNone();
																												if (v46 == 0) {
																													if (v39 == 0) {
																														if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																															boolean v47 = p1.isNone();
																															if (v47 == 0) {
																																StrictMode.noteDiskRead();
																																IGateKeeperService v49 = LockSettingsService.getGateKeeperService();
																																byte[] v50 = p1.getCredential();
																																GateKeeperResponse v51 = v49.verifyChallenge(UserInfo.id, 0, LockSettingsStorage$CredentialHash.hash, v50);
																																VerifyCredentialResponse v52 = LockSettingsService.convertResponse(v51);
																																boolean v53 = v51.getShouldReEnroll();
																																int v54 = v52.getResponseCode();
																																if (v54 != 0) {
																																	if (0 == 0) {
																																		0.onCredentialVerified();
																																		LockSettingsService.setUserPasswordMetrics(p1, UserInfo.id);
																																		byte[] v57 = p1.getCredential();
																																		LockSettingsService.unlockKeystore(v57, UserInfo.id);
																																		byte[] v65 = LockSettingsService.secretFromCredential(p1);
																																		LockSettingsService.unlockUser(UserInfo.id, v65);
																																		boolean v67 = LockSettingsService.isProfileWithSeparatedLock(UserInfo.id);
																																		if (v67 == 0) {
																																			LockSettingsService.setDeviceUnlockedForUser(UserInfo.id);
																																			if (v53 == 0) {
																																				boolean v69 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(UserInfo.id);
																																				if (v69 == 0) {
																																					LockSettingsService.sendCredentialsOnUnlockIfRequired(p1, UserInfo.id);
																																					VerifyCredentialResponse v45 = v52;
																																					int v71 = this.mResponseCode;
																																					if (v71 != 0) {
																																						Message v73 = this.mHandler.obtainMessage(5, UserInfo.id, 0);
																																						v73.sendToTarget();
																																						VerifyCredentialResponse v9 = v45;
																																						int v75 = v9.getResponseCode();
																																						if (v75 == 0) {
																																							String v78 = LockSettingsStorage.getChildProfileLockFile(p2);
																																							byte[] v79 = LockSettingsStorage.readFile(v78);
																																							byte[] v77 = v79;
																																							if (v77 == 0) {
																																								byte[] v80 = Arrays.copyOfRange(v77, 0, 12);
																																								byte[] v81 = Arrays.copyOfRange(v77, 12, v77.length);
																																								StringBuilder v82 = new StringBuilder();
																																								StringBuilder v84 = v82.append(""profile_key_name_decrypt_"");
																																								StringBuilder v85 = v82.append(p2);
																																								String v86 = v82.toString();
																																								Key v87 = this.mJavaKeyStore.getKey(v86, 0);
																																								Cipher v88 = Cipher.getInstance(""AES/GCM/NoPadding"");
																																								GCMParameterSpec v89 = new GCMParameterSpec(128,v80);
																																								v88.init(2, v87, v89);
																																								byte[] v92 = v88.doFinal(v81);
																																								LockscreenCredential v94 = new LockscreenCredential(4,v95);
																																								byte[] v95 = Arrays.copyOf(v92, v92.length);
																																								LockscreenCredential v93 = v94;
																																								Arrays.fill(v92, 0);
																																								boolean v99 = this.mEncryptedPasswords.contains(p2);
																																								if (v99 == 0) {
																																									UserInfo v100 = this.mUserManager.getProfileParent(p2);
																																									if (v100 == 0) {
																																										if (UserInfo.id == 0) {
																																											String v101 = ManagedProfilePasswordCache.getEncryptionKeyName(p2);
																																											Provider v102 = this.mKeyStore.getProvider();
																																											KeyGenerator v103 = KeyGenerator.getInstance(""AES"", v102);
																																											KeyGenParameterSpec$Builder v104 = new KeyGenParameterSpec$Builder(v101,3);
																																											KeyGenParameterSpec$Builder v106 = v104.setKeySize(256);
																																											String v107 = new String(1);
																																											KeyGenParameterSpec$Builder v108 = v106.setBlockModes(v107);
																																											int v109 = SyntheticPasswordCrypto.keyNamespace();
																																											KeyGenParameterSpec$Builder v110 = v108.setNamespace(v109);
																																											String v111 = new String(1);
																																											KeyGenParameterSpec$Builder v112 = v110.setEncryptionPaddings(v111);
																																											KeyGenParameterSpec$Builder v113 = v112.setUserAuthenticationRequired(1);
																																											KeyGenParameterSpec$Builder v114 = v113.setUserAuthenticationValidityDurationSeconds(this.CACHE_TIMEOUT_SECONDS);
																																											KeyGenParameterSpec v115 = v114.build();
																																											v103.init(v115);
																																											SecretKey v117 = v103.generateKey();
																																											Cipher v118 = Cipher.getInstance(""AES/GCM/NoPadding"");
																																											v118.init(1, v117);
																																											byte[] v120 = v93.getCredential();
																																											byte[] v121 = v118.doFinal(v120);
																																											byte[] v122 = v118.getIV();
																																											LockscreenCredential v76 = v93;
																																											if (v76 == 0) {
																																												boolean v125 = v76.isNone();
																																												if (v125 != 0) {
																																													if (p2 != -9999) {
																																														ContentResolver v126 = this.mContext.getContentResolver();
																																														int v128 = Settings$Global.getInt(v126, ""device_provisioned"", 0);
																																														int v127 = v128;
																																														if (v127 == 0) {
																																															boolean v130 = this.mInjector.hasEnrolledBiometrics(p2);
																																															if ((p3 & 1) == 0) {
																																																boolean v139 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
																																																if (v139 != 0) {
																																																	if (p2 != -9999) {
																																																		long v140 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
																																																		IGateKeeperService v141 = LockSettingsService.getGateKeeperService();
																																																		SyntheticPasswordManager$AuthenticationResult v142 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v141, v140, v76, p2, 0);
																																																		int v143 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
																																																		if (v143 != 0) {
																																																			byte[] v144 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
																																																			this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p2, v144);
																																																			IGateKeeperService v146 = LockSettingsService.getGateKeeperService();
																																																			VerifyCredentialResponse v147 = this.mSpManager.verifyChallenge(v146, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2);
																																																			int v148 = v147.getResponseCode();
																																																			if (v148 == 0) {
																																																				int v149 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
																																																				if (v149 != 0) {
																																																					int v150 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
																																																					if (v150 != 1) {
																																																						int v151 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
																																																						if (v151 <= 0) {
																																																							LockSettingsService.requireStrongAuth(8, p2);
																																																							boolean v153 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
																																																							if (v153 == 0) {
																																																								if (1 == 0) {
																																																									VerifyCredentialResponse v129 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																																																									if (v129 == 0) {
																																																										if (p2 != -9999) {
																																																											LockSettingsStorage$CredentialHash v155 = LockSettingsStorage.readPasswordHashIfExists(p2);
																																																											if (v155 == 0) {
																																																												LockSettingsStorage$CredentialHash v156 = LockSettingsStorage.readPatternHashIfExists(p2);
																																																												if (v156 == 0) {
																																																													LockSettingsStorage$CredentialHash v157 = LockSettingsStorage$CredentialHash.createEmptyHash();
																																																													LockSettingsStorage$CredentialHash v154 = v157;
																																																													if (LockSettingsStorage$CredentialHash.type != 2) {
																																																														int v159 = LockscreenCredential.getType();
																																																														if (v159 == 4) {
																																																															int v160 = LockscreenCredential.getType();
																																																															if (v160 != 3) {
																																																																boolean v158 = 1;
																																																																if (v158 != 0) {
																																																																	if (v154 == 0) {
																																																																		if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																																																																			boolean v162 = v76.isNone();
																																																																			if (v162 == 0) {
																																																																				if (v154 == 0) {
																																																																					if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																																																																						boolean v163 = v76.isNone();
																																																																						if (v163 == 0) {
																																																																							StrictMode.noteDiskRead();
																																																																							IGateKeeperService v165 = LockSettingsService.getGateKeeperService();
																																																																							byte[] v166 = v76.getCredential();
																																																																							GateKeeperResponse v167 = v165.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v166);
																																																																							VerifyCredentialResponse v168 = LockSettingsService.convertResponse(v167);
																																																																							boolean v169 = v167.getShouldReEnroll();
																																																																							int v170 = v168.getResponseCode();
																																																																							if (v170 != 0) {
																																																																								if (0 == 0) {
																																																																									0.onCredentialVerified();
																																																																									LockSettingsService.setUserPasswordMetrics(v76, p2);
																																																																									byte[] v173 = v76.getCredential();
																																																																									LockSettingsService.unlockKeystore(v173, p2);
																																																																									byte[] v181 = LockSettingsService.secretFromCredential(v76);
																																																																									LockSettingsService.unlockUser(p2, v181);
																																																																									boolean v183 = LockSettingsService.isProfileWithSeparatedLock(p2);
																																																																									if (v183 == 0) {
																																																																										LockSettingsService.setDeviceUnlockedForUser(p2);
																																																																										if (v169 == 0) {
																																																																											boolean v185 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p2);
																																																																											if (v185 == 0) {
																																																																												LockSettingsService.sendCredentialsOnUnlockIfRequired(v76, p2);
																																																																												VerifyCredentialResponse v161 = v168;
																																																																												int v187 = this.mResponseCode;
																																																																												if (v187 != 0) {
																																																																													Message v189 = this.mHandler.obtainMessage(5, p2, 0);
																																																																													v189.sendToTarget();
																																																																													VerifyCredentialResponse v124 = v161;
																																																																													p0.scheduleGc();
																																																																													return v124;
																																																																												}
																																																																											}
																																																																										}
																																																																									}
																																																																								}
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","verifyTiedProfileChallenge(Lcom/android/internal/widget/LockscreenCredential;II)Lcom/android/internal/widget/VerifyCredentialResponse;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithUnifiedLock(I)Z > 1,3 @3 exception:6,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isCredentialSharableWithParent(I)Z > 1,2 @0 exception:3,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getUserManagerFromCache(I)Landroid/os/UserManager; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Landroid/os/UserManager, isCredentialSharableWithParent()Z > 4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSeparateProfileChallengeEnabledInternal(I)Z > 1,2 @6 exception:6,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSeparateChallengeLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getBoolean(Ljava/lang/String;ZI)Z > 4,5,6,2 @8 exception:7,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 7,5,
goto (from iindex= 7 to iindex = 2),
12 = phi  11,5,
return 12,
conditional branch(eq, to iindex=-1) 7,8,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mUserManager, <Application,Landroid/os/UserManager> > 1,
14 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 12,3 @11 exception:13,
15 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 14,
17 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,15,8,4 @18 exception:16,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
19 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 17 @22 exception:18,
conditional branch(eq, to iindex=-1) 19,8,
21 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getDecryptedPasswordForTiedProfile(I)Lcom/android/internal/widget/LockscreenCredential; > 1,3 @29 exception:20,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readChildProfileLock(I)[B > 3,2 @2 exception:4,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getChildProfileLockFile(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readFile(Ljava/lang/String;)[B > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 5,6,
12 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,6,10 @11 exception:11,
13 = arraylength 5,
15 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 5,10,13 @16 exception:14,
16 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mJavaKeyStore, <Application,Ljava/security/KeyStore> > 1,
17 = new <Application,Ljava/lang/StringBuilder>@22,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 17,19 @30 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 17,2 @33 exception:22,
25 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 17 @36 exception:24,
27 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 16,25,6 @41 exception:26,
28 = checkcast <Application,Ljavax/crypto/SecretKey>27 <Application,Ljavax/crypto/SecretKey>,
31 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 29 @49 exception:30,
33 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@54,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 33,34,12 @58 exception:35,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V > 31,32,28,33 @61 exception:36,
38 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 31,15 @64 exception:37,
40 = invokestatic < Application, Lcom/android/internal/widget/LockscreenCredential, createManagedPassword([B)Lcom/android/internal/widget/LockscreenCredential; > 38 @68 exception:39,
2 = new <Application,Lcom/android/internal/widget/LockscreenCredential>@0,
3 = arraylength 1,
5 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 1,3 @3 exception:4,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, <init>(I[B)V > 2,6,5 @8 exception:7,
return 2,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 38,6 @72 exception:41,
42 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, storePassword(ILcom/android/internal/widget/LockscreenCredential;)V > 42,2,40 @77 exception:43,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
7 = invokevirtual < Application, Landroid/util/SparseArray, contains(I)Z > 5,2 @5 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mUserManager, <Application,Landroid/os/UserManager> > 1,
11 = invokevirtual < Application, Landroid/os/UserManager, getProfileParent(I)Landroid/content/pm/UserInfo; > 9,2 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @27 exception:13,
16 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
18 = invokevirtual < Application, Ljava/security/KeyStore, getProvider()Ljava/security/Provider; > 16 @35 exception:17,
20 = invokestatic < Application, Ljavax/crypto/KeyGenerator, getInstance(Ljava/lang/String;Ljava/security/Provider;)Ljavax/crypto/KeyGenerator; > 15,18 @39 exception:19,
21 = new <Application,Landroid/security/keystore/KeyGenParameterSpec$Builder>@43,
invokespecial < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, <init>(Ljava/lang/String;I)V > 21,14,22 @46 exception:23,
26 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setKeySize(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 21,24 @51 exception:25,
28 = new <Application,[Ljava/lang/String>@5729 ,
31 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setBlockModes([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 26,28 @61 exception:30,
33 = invokestatic < Application, Lcom/android/server/locksettings/SyntheticPasswordCrypto, keyNamespace()I > @65 exception:32,
35 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setNamespace(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 31,33 @69 exception:34,
37 = new <Application,[Ljava/lang/String>@7529 ,
39 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setEncryptionPaddings([Ljava/lang/String;)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 35,37 @79 exception:38,
41 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationRequired(Z)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 39,29 @84 exception:40,
42 = getstatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, CACHE_TIMEOUT_SECONDS, <Primordial,I> >,
44 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, setUserAuthenticationValidityDurationSeconds(I)Landroid/security/keystore/KeyGenParameterSpec$Builder; > 41,42 @90 exception:43,
46 = invokevirtual < Application, Landroid/security/keystore/KeyGenParameterSpec$Builder, build()Landroid/security/keystore/KeyGenParameterSpec; > 44 @94 exception:45,
invokevirtual < Application, Ljavax/crypto/KeyGenerator, init(Ljava/security/spec/AlgorithmParameterSpec;)V > 20,46 @98 exception:47,
49 = invokevirtual < Application, Ljavax/crypto/KeyGenerator, generateKey()Ljavax/crypto/SecretKey; > 20 @101 exception:48,
62 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 60 @107 exception:61,
invokevirtual < Application, Ljavax/crypto/Cipher, init(ILjava/security/Key;)V > 62,29,49 @111 exception:63,
65 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 3 @114 exception:64,
67 = invokevirtual < Application, Ljavax/crypto/Cipher, doFinal([B)[B > 62,65 @118 exception:66,
69 = invokevirtual < Application, Ljavax/crypto/Cipher, getIV()[B > 62 @122 exception:68,
74 = getCaughtException ,
77 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 56,75,74 @150 exception:76,
monitorexit 4,
return,
return 40,
23 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,21,3,8,4 @33 exception:22,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
return 7,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, scheduleGc()V > 1 @37 exception:42,
return 23,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse verifyTiedProfileChallenge(LockscreenCredential p1, int p2, int p3){
	UserManager v4 = LockSettingsService.getUserManagerFromCache(p2);
	boolean v5 = v4.isCredentialSharableWithParent();
	boolean v3 = v5;
	if (v3 == 0) {
		boolean v7 = this.mStorage.getBoolean(""lockscreen.profilechallenge"", 0, p2);
		boolean v6 = v7;
		if (v6 != 0) {
			boolean v2 = 1;
			if (v2 == 0) {
				UserInfo v8 = this.mUserManager.getProfileParent(p2);
				if (p1 == 0) {
					boolean v10 = p1.isNone();
					if (v10 != 0) {
						if (UserInfo.id != -9999) {
							ContentResolver v11 = this.mContext.getContentResolver();
							int v13 = Settings$Global.getInt(v11, ""device_provisioned"", 0);
							int v12 = v13;
							if (v12 == 0) {
								boolean v15 = this.mInjector.hasEnrolledBiometrics(UserInfo.id);
								if ((p3 & 1) == 0) {
									boolean v24 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(UserInfo.id);
									if (v24 != 0) {
										if (UserInfo.id != -9999) {
											long v25 = LockSettingsService.getSyntheticPasswordHandleLocked(UserInfo.id);
											IGateKeeperService v26 = LockSettingsService.getGateKeeperService();
											SyntheticPasswordManager$AuthenticationResult v27 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v26, v25, p1, UserInfo.id, 0);
											int v28 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
											if (v28 != 0) {
												byte[] v29 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
												this.mBiometricDeferredQueue.addPendingLockoutResetForUser(UserInfo.id, v29);
												IGateKeeperService v31 = LockSettingsService.getGateKeeperService();
												VerifyCredentialResponse v32 = this.mSpManager.verifyChallenge(v31, SyntheticPasswordManager$AuthenticationResult.authToken, 0, UserInfo.id);
												int v33 = v32.getResponseCode();
												if (v33 == 0) {
													int v34 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
													if (v34 != 0) {
														int v35 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
														if (v35 != 1) {
															int v36 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
															if (v36 <= 0) {
																LockSettingsService.requireStrongAuth(8, UserInfo.id);
																boolean v38 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
																if (v38 == 0) {
																	if (1 == 0) {
																		VerifyCredentialResponse v14 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																		if (v14 == 0) {
																			if (UserInfo.id != -9999) {
																				LockSettingsStorage$CredentialHash v40 = LockSettingsStorage.readPasswordHashIfExists(UserInfo.id);
																				if (v40 == 0) {
																					LockSettingsStorage$CredentialHash v41 = LockSettingsStorage.readPatternHashIfExists(UserInfo.id);
																					if (v41 == 0) {
																						LockSettingsStorage$CredentialHash v42 = LockSettingsStorage$CredentialHash.createEmptyHash();
																						LockSettingsStorage$CredentialHash v39 = v42;
																						if (LockSettingsStorage$CredentialHash.type != 2) {
																							int v44 = LockscreenCredential.getType();
																							if (v44 == 4) {
																								int v45 = LockscreenCredential.getType();
																								if (v45 != 3) {
																									boolean v43 = 1;
																									if (v43 != 0) {
																										if (v39 == 0) {
																											if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																												boolean v47 = p1.isNone();
																												if (v47 == 0) {
																													if (v39 == 0) {
																														if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																															boolean v48 = p1.isNone();
																															if (v48 == 0) {
																																StrictMode.noteDiskRead();
																																IGateKeeperService v50 = LockSettingsService.getGateKeeperService();
																																byte[] v51 = p1.getCredential();
																																GateKeeperResponse v52 = v50.verifyChallenge(UserInfo.id, 0, LockSettingsStorage$CredentialHash.hash, v51);
																																VerifyCredentialResponse v53 = LockSettingsService.convertResponse(v52);
																																boolean v54 = v52.getShouldReEnroll();
																																int v55 = v53.getResponseCode();
																																if (v55 != 0) {
																																	if (0 == 0) {
																																		0.onCredentialVerified();
																																		LockSettingsService.setUserPasswordMetrics(p1, UserInfo.id);
																																		byte[] v58 = p1.getCredential();
																																		LockSettingsService.unlockKeystore(v58, UserInfo.id);
																																		byte[] v66 = LockSettingsService.secretFromCredential(p1);
																																		LockSettingsService.unlockUser(UserInfo.id, v66);
																																		boolean v68 = LockSettingsService.isProfileWithSeparatedLock(UserInfo.id);
																																		if (v68 == 0) {
																																			LockSettingsService.setDeviceUnlockedForUser(UserInfo.id);
																																			if (v54 == 0) {
																																				boolean v70 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(UserInfo.id);
																																				if (v70 == 0) {
																																					LockSettingsService.sendCredentialsOnUnlockIfRequired(p1, UserInfo.id);
																																					VerifyCredentialResponse v46 = v53;
																																					int v72 = this.mResponseCode;
																																					if (v72 != 0) {
																																						Message v74 = this.mHandler.obtainMessage(5, UserInfo.id, 0);
																																						v74.sendToTarget();
																																						VerifyCredentialResponse v9 = v46;
																																						int v76 = v9.getResponseCode();
																																						if (v76 == 0) {
																																							String v79 = LockSettingsStorage.getChildProfileLockFile(p2);
																																							byte[] v80 = LockSettingsStorage.readFile(v79);
																																							byte[] v78 = v80;
																																							if (v78 == 0) {
																																								byte[] v81 = Arrays.copyOfRange(v78, 0, 12);
																																								byte[] v82 = Arrays.copyOfRange(v78, 12, v78.length);
																																								StringBuilder v83 = new StringBuilder();
																																								StringBuilder v85 = v83.append(""profile_key_name_decrypt_"");
																																								StringBuilder v86 = v83.append(p2);
																																								String v87 = v83.toString();
																																								Key v88 = this.mJavaKeyStore.getKey(v87, 0);
																																								Cipher v89 = Cipher.getInstance(""AES/GCM/NoPadding"");
																																								GCMParameterSpec v90 = new GCMParameterSpec(128,v81);
																																								v89.init(2, v88, v90);
																																								byte[] v93 = v89.doFinal(v82);
																																								LockscreenCredential v95 = new LockscreenCredential(4,v96);
																																								byte[] v96 = Arrays.copyOf(v93, v93.length);
																																								LockscreenCredential v94 = v95;
																																								Arrays.fill(v93, 0);
																																								boolean v100 = this.mEncryptedPasswords.contains(p2);
																																								if (v100 == 0) {
																																									UserInfo v101 = this.mUserManager.getProfileParent(p2);
																																									if (v101 == 0) {
																																										if (UserInfo.id == 0) {
																																											String v102 = ManagedProfilePasswordCache.getEncryptionKeyName(p2);
																																											Provider v103 = this.mKeyStore.getProvider();
																																											KeyGenerator v104 = KeyGenerator.getInstance(""AES"", v103);
																																											KeyGenParameterSpec$Builder v105 = new KeyGenParameterSpec$Builder(v102,3);
																																											KeyGenParameterSpec$Builder v107 = v105.setKeySize(256);
																																											String v108 = new String(1);
																																											KeyGenParameterSpec$Builder v109 = v107.setBlockModes(v108);
																																											int v110 = SyntheticPasswordCrypto.keyNamespace();
																																											KeyGenParameterSpec$Builder v111 = v109.setNamespace(v110);
																																											String v112 = new String(1);
																																											KeyGenParameterSpec$Builder v113 = v111.setEncryptionPaddings(v112);
																																											KeyGenParameterSpec$Builder v114 = v113.setUserAuthenticationRequired(1);
																																											KeyGenParameterSpec$Builder v115 = v114.setUserAuthenticationValidityDurationSeconds(this.CACHE_TIMEOUT_SECONDS);
																																											KeyGenParameterSpec v116 = v115.build();
																																											v104.init(v116);
																																											SecretKey v118 = v104.generateKey();
																																											Cipher v119 = Cipher.getInstance(""AES/GCM/NoPadding"");
																																											v119.init(1, v118);
																																											byte[] v121 = v94.getCredential();
																																											byte[] v122 = v119.doFinal(v121);
																																											byte[] v123 = v119.getIV();
																																											LockscreenCredential v77 = v94;
																																											if (v77 == 0) {
																																												boolean v126 = v77.isNone();
																																												if (v126 != 0) {
																																													if (p2 != -9999) {
																																														ContentResolver v127 = this.mContext.getContentResolver();
																																														int v129 = Settings$Global.getInt(v127, ""device_provisioned"", 0);
																																														int v128 = v129;
																																														if (v128 == 0) {
																																															boolean v131 = this.mInjector.hasEnrolledBiometrics(p2);
																																															if ((p3 & 1) == 0) {
																																																boolean v140 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p2);
																																																if (v140 != 0) {
																																																	if (p2 != -9999) {
																																																		long v141 = LockSettingsService.getSyntheticPasswordHandleLocked(p2);
																																																		IGateKeeperService v142 = LockSettingsService.getGateKeeperService();
																																																		SyntheticPasswordManager$AuthenticationResult v143 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v142, v141, v77, p2, 0);
																																																		int v144 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
																																																		if (v144 != 0) {
																																																			byte[] v145 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
																																																			this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p2, v145);
																																																			IGateKeeperService v147 = LockSettingsService.getGateKeeperService();
																																																			VerifyCredentialResponse v148 = this.mSpManager.verifyChallenge(v147, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p2);
																																																			int v149 = v148.getResponseCode();
																																																			if (v149 == 0) {
																																																				int v150 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
																																																				if (v150 != 0) {
																																																					int v151 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
																																																					if (v151 != 1) {
																																																						int v152 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
																																																						if (v152 <= 0) {
																																																							LockSettingsService.requireStrongAuth(8, p2);
																																																							boolean v154 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
																																																							if (v154 == 0) {
																																																								if (1 == 0) {
																																																									VerifyCredentialResponse v130 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																																																									if (v130 == 0) {
																																																										if (p2 != -9999) {
																																																											LockSettingsStorage$CredentialHash v156 = LockSettingsStorage.readPasswordHashIfExists(p2);
																																																											if (v156 == 0) {
																																																												LockSettingsStorage$CredentialHash v157 = LockSettingsStorage.readPatternHashIfExists(p2);
																																																												if (v157 == 0) {
																																																													LockSettingsStorage$CredentialHash v155 = v157;
																																																													if (LockSettingsStorage$CredentialHash.type != 2) {
																																																														int v159 = LockscreenCredential.getType();
																																																														if (v159 == 4) {
																																																															int v160 = LockscreenCredential.getType();
																																																															if (v160 != 3) {
																																																																boolean v158 = 1;
																																																																if (v158 != 0) {
																																																																	if (v155 == 0) {
																																																																		if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																																																																			boolean v162 = v77.isNone();
																																																																			if (v162 == 0) {
																																																																				if (v155 == 0) {
																																																																					if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																																																																						boolean v163 = v77.isNone();
																																																																						if (v163 == 0) {
																																																																							StrictMode.noteDiskRead();
																																																																							IGateKeeperService v165 = LockSettingsService.getGateKeeperService();
																																																																							byte[] v166 = v77.getCredential();
																																																																							GateKeeperResponse v167 = v165.verifyChallenge(p2, 0, LockSettingsStorage$CredentialHash.hash, v166);
																																																																							VerifyCredentialResponse v168 = LockSettingsService.convertResponse(v167);
																																																																							boolean v169 = v167.getShouldReEnroll();
																																																																							int v170 = v168.getResponseCode();
																																																																							if (v170 != 0) {
																																																																								if (0 == 0) {
																																																																									0.onCredentialVerified();
																																																																									LockSettingsService.setUserPasswordMetrics(v77, p2);
																																																																									byte[] v173 = v77.getCredential();
																																																																									LockSettingsService.unlockKeystore(v173, p2);
																																																																									byte[] v181 = LockSettingsService.secretFromCredential(v77);
																																																																									LockSettingsService.unlockUser(p2, v181);
																																																																									boolean v183 = LockSettingsService.isProfileWithSeparatedLock(p2);
																																																																									if (v183 == 0) {
																																																																										LockSettingsService.setDeviceUnlockedForUser(p2);
																																																																										if (v169 == 0) {
																																																																											boolean v185 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p2);
																																																																											if (v185 == 0) {
																																																																												LockSettingsService.sendCredentialsOnUnlockIfRequired(v77, p2);
																																																																												VerifyCredentialResponse v161 = v168;
																																																																												int v187 = this.mResponseCode;
																																																																												if (v187 != 0) {
																																																																													Message v189 = this.mHandler.obtainMessage(5, p2, 0);
																																																																													v189.sendToTarget();
																																																																													VerifyCredentialResponse v125 = v161;
																																																																													p0.scheduleGc();
																																																																													return v125;
																																																																												}
																																																																											}
																																																																										}
																																																																									}
																																																																								}
																																																																							}
																																																																						}
																																																																					}
																																																																				}
																																																																			}
																																																																		}
																																																																	}
																																																																}
																																																															}
																																																														}
																																																													}
																																																												}
																																																											}
																																																										}
																																																									}
																																																								}
																																																							}
																																																						}
																																																					}
																																																				}
																																																			}
																																																		}
																																																	}
																																																}
																																															}
																																														}
																																													}
																																												}
																																											}
																																										}
																																									}
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","tryUnlockWithCachedUnifiedChallenge(I)Z","0","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, retrievePassword(I)Lcom/android/internal/widget/LockscreenCredential; > 3,2 @2 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,5,2,6,6 @16 exception:7,
10 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 8 @20 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
21 = phi  6,20,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, close()V > 5 @27 exception:22,
return 21,","depth : 0
-----
","public boolean tryUnlockWithCachedUnifiedChallenge(int p1){
	LockscreenCredential v1 = this.mManagedProfilePasswordCache.retrievePassword(p1);
	if (v1 != 0) {
		VerifyCredentialResponse v2 = p0.doVerifyCredential(v1, p1, 0, 0);
		int v3 = v2.getResponseCode();
		if (v3 != 0) {
			v1.close();
			return 0;
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","tryUnlockWithCachedUnifiedChallenge(I)Z","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, retrievePassword(I)Lcom/android/internal/widget/LockscreenCredential; > 3,2 @2 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Primordial,[B>6 <Primordial,[B>,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
11 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @18 exception:10,
13 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 9,11,8 @22 exception:12,
conditional branch(ne, to iindex=-1) 13,8,
21 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 7,19 @32 exception:20,
22 = arraylength 7,
24 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 7,19,22 @37 exception:23,
27 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 25 @43 exception:26,
29 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@48,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 29,30,21 @52 exception:31,
46 = getCaughtException ,
49 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 15,47,46 @77 exception:48,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,5,2,6,6 @16 exception:7,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 30,6,
39 = new <Application,Ljava/lang/StringBuilder>@79,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 39 @81 exception:40,
43 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,41 @86 exception:42,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
46 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,44 @91 exception:45,
49 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 39,47 @96 exception:48,
51 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 2 @99 exception:50,
53 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 39,51 @103 exception:52,
55 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 39 @106 exception:54,
57 = invokestatic < Application, Landroid/util/Slog, wtf(Ljava/lang/String;Ljava/lang/String;)I > 13,55 @110 exception:56,
58 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
return 58,
10 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 8 @20 exception:9,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 10,6,
21 = phi  6,20,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, close()V > 5 @27 exception:22,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 1 @0 exception:2,
return,
return 21,","depth : 0
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
depth : 1
-----
","public boolean tryUnlockWithCachedUnifiedChallenge(int p1){
	Object v2 = this.mEncryptedPasswords.get(p1);
	if (v2 != 0) {
		String v3 = ManagedProfilePasswordCache.getEncryptionKeyName(p1);
		Key v4 = this.mKeyStore.getKey(v3, 0);
		if (v4 != 0) {
			byte[] v5 = Arrays.copyOf(v2, 12);
			byte[] v6 = Arrays.copyOfRange(v2, 12, v2.length);
			Cipher v7 = Cipher.getInstance(""AES/GCM/NoPadding"");
			GCMParameterSpec v8 = new GCMParameterSpec(128,v5);
			LockscreenCredential v1 = 0;
			if (v1 != 0) {
				if (v1 == 0) {
					boolean v12 = v1.isNone();
					if (v12 != 0) {
						if (p1 != -9999) {
							ContentResolver v13 = this.mContext.getContentResolver();
							int v14 = this.mInjector.settingsGlobalGetInt(v13, ""device_provisioned"", 0);
							if (v14 == 0) {
								VerifyCredentialResponse v15 = LockSettingsService.spBasedDoVerifyCredential(v1, p1, 0, 0);
								if (v15 == 0) {
									if (p1 != -9999) {
										LockSettingsStorage$CredentialHash v16 = this.mStorage.readCredentialHash(p1);
										boolean v17 = v1.checkAgainstStoredType(LockSettingsStorage$CredentialHash.type);
										if (v17 != 0) {
											int v23 = v1.getType();
											VerifyCredentialResponse v11 = VerifyCredentialResponse.ERROR;
											int v27 = this.mResponseCode;
											if (v27 != 0) {
												LockscreenCredential.zeroize();
												return 0;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","tryUnlockWithCachedUnifiedChallenge(I)Z","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, retrievePassword(I)Lcom/android/internal/widget/LockscreenCredential; > 3,2 @2 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Primordial,[B>6 <Primordial,[B>,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
11 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @18 exception:10,
13 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 9,11,8 @22 exception:12,
conditional branch(ne, to iindex=-1) 13,8,
21 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 7,19 @32 exception:20,
22 = arraylength 7,
24 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 7,19,22 @37 exception:23,
27 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 25 @43 exception:26,
29 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@48,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 29,30,21 @52 exception:31,
46 = getCaughtException ,
49 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 15,47,46 @77 exception:48,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 5,6,
conditional branch(eq, to iindex=-1) 5,6,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, close()V > 5 @11 exception:23,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 1 @0 exception:2,
return,
return 6,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public boolean tryUnlockWithCachedUnifiedChallenge(int p1){
	Object v2 = this.mEncryptedPasswords.get(p1);
	if (v2 != 0) {
		String v3 = ManagedProfilePasswordCache.getEncryptionKeyName(p1);
		Key v4 = this.mKeyStore.getKey(v3, 0);
		if (v4 != 0) {
			byte[] v5 = Arrays.copyOf(v2, 12);
			byte[] v6 = Arrays.copyOfRange(v2, 12, v2.length);
			Cipher v7 = Cipher.getInstance(""AES/GCM/NoPadding"");
			GCMParameterSpec v8 = new GCMParameterSpec(128,v5);
			LockscreenCredential v1 = 0;
			if (v1 != 0) {
				if (v1 == 0) {
					LockscreenCredential.zeroize();
					return 0;
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","tryUnlockWithCachedUnifiedChallenge(I)Z","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, retrievePassword(I)Lcom/android/internal/widget/LockscreenCredential; > 3,2 @2 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Primordial,[B>6 <Primordial,[B>,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
11 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @18 exception:10,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @13 exception:9,
return 10,
13 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 9,11,8 @22 exception:12,
conditional branch(ne, to iindex=-1) 13,8,
21 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 7,19 @32 exception:20,
22 = arraylength 7,
24 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 7,19,22 @37 exception:23,
27 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 25 @43 exception:26,
29 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@48,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 29,30,21 @52 exception:31,
46 = getCaughtException ,
49 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 15,47,46 @77 exception:48,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,5,2,6,6 @16 exception:7,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,4,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
10 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 8 @20 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
21 = phi  6,20,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, close()V > 5 @27 exception:22,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > 1,
conditional branch(eq, to iindex=-1) 2,3,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 2,3 @5 exception:4,
putfield 1.< Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > = 3,
return,
return,
return 21,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
","public boolean tryUnlockWithCachedUnifiedChallenge(int p1){
	Object v2 = this.mEncryptedPasswords.get(p1);
	if (v2 != 0) {
		StringBuilder v4 = new StringBuilder();
		StringBuilder v6 = v4.append(""com.android.server.locksettings.unified_profile_cache_v2_"");
		StringBuilder v7 = v4.append(p1);
		String v8 = v4.toString();
		String v3 = v8;
		Key v9 = this.mKeyStore.getKey(v3, 0);
		if (v9 != 0) {
			byte[] v10 = Arrays.copyOf(v2, 12);
			byte[] v11 = Arrays.copyOfRange(v2, 12, v2.length);
			Cipher v12 = Cipher.getInstance(""AES/GCM/NoPadding"");
			GCMParameterSpec v13 = new GCMParameterSpec(128,v10);
			LockscreenCredential v1 = 0;
			if (v1 != 0) {
				if (v1 == 0) {
					LockscreenCredential.ensureNotZeroized();
					if (this.mType != -1) {
						boolean v17 = 1;
						if (v17 != 0) {
							if (p1 != -9999) {
								ContentResolver v19 = this.mContext.getContentResolver();
								int v21 = Settings$Global.getInt(v19, ""device_provisioned"", 0);
								int v20 = v21;
								if (v20 == 0) {
									boolean v23 = this.mInjector.hasEnrolledBiometrics(p1);
									if ((0 & 1) == 0) {
										boolean v32 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p1);
										if (v32 != 0) {
											if (p1 != -9999) {
												long v33 = LockSettingsService.getSyntheticPasswordHandleLocked(p1);
												IGateKeeperService v34 = LockSettingsService.getGateKeeperService();
												SyntheticPasswordManager$AuthenticationResult v35 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v34, v33, v1, p1, 0);
												int v36 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
												if (v36 != 0) {
													byte[] v37 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
													this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p1, v37);
													IGateKeeperService v39 = LockSettingsService.getGateKeeperService();
													VerifyCredentialResponse v40 = this.mSpManager.verifyChallenge(v39, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p1);
													int v41 = v40.getResponseCode();
													if (v41 == 0) {
														int v42 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
														if (v42 != 0) {
															int v43 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
															if (v43 != 1) {
																int v44 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
																if (v44 <= 0) {
																	LockSettingsService.requireStrongAuth(8, p1);
																	boolean v46 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
																	if (v46 == 0) {
																		if (1 == 0) {
																			VerifyCredentialResponse v22 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																			if (v22 == 0) {
																				if (p1 != -9999) {
																					LockSettingsStorage$CredentialHash v48 = LockSettingsStorage.readPasswordHashIfExists(p1);
																					if (v48 == 0) {
																						LockSettingsStorage$CredentialHash v49 = LockSettingsStorage.readPatternHashIfExists(p1);
																						if (v49 == 0) {
																							LockSettingsStorage$CredentialHash v50 = LockSettingsStorage$CredentialHash.createEmptyHash();
																							LockSettingsStorage$CredentialHash v47 = v50;
																							if (LockSettingsStorage$CredentialHash.type != 2) {
																								int v52 = LockscreenCredential.getType();
																								if (v52 == 4) {
																									int v53 = LockscreenCredential.getType();
																									if (v53 != 3) {
																										boolean v51 = 1;
																										if (v51 != 0) {
																											if (v47 == 0) {
																												if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																													boolean v55 = v1.isNone();
																													if (v55 == 0) {
																														if (v47 == 0) {
																															if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																																boolean v56 = v1.isNone();
																																if (v56 == 0) {
																																	StrictMode.noteDiskRead();
																																	IGateKeeperService v58 = LockSettingsService.getGateKeeperService();
																																	byte[] v59 = v1.getCredential();
																																	GateKeeperResponse v60 = v58.verifyChallenge(p1, 0, LockSettingsStorage$CredentialHash.hash, v59);
																																	VerifyCredentialResponse v61 = LockSettingsService.convertResponse(v60);
																																	boolean v62 = v60.getShouldReEnroll();
																																	int v63 = v61.getResponseCode();
																																	if (v63 != 0) {
																																		if (0 == 0) {
																																			0.onCredentialVerified();
																																			LockSettingsService.setUserPasswordMetrics(v1, p1);
																																			byte[] v66 = v1.getCredential();
																																			LockSettingsService.unlockKeystore(v66, p1);
																																			byte[] v74 = LockSettingsService.secretFromCredential(v1);
																																			LockSettingsService.unlockUser(p1, v74);
																																			boolean v76 = LockSettingsService.isProfileWithSeparatedLock(p1);
																																			if (v76 == 0) {
																																				LockSettingsService.setDeviceUnlockedForUser(p1);
																																				if (v62 == 0) {
																																					boolean v78 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p1);
																																					if (v78 == 0) {
																																						LockSettingsService.sendCredentialsOnUnlockIfRequired(v1, p1);
																																						VerifyCredentialResponse v54 = v61;
																																						int v80 = this.mResponseCode;
																																						if (v80 != 0) {
																																							Message v82 = this.mHandler.obtainMessage(5, p1, 0);
																																							v82.sendToTarget();
																																							VerifyCredentialResponse v16 = v54;
																																							int v84 = v16.getResponseCode();
																																							if (v84 != 0) {
																																								if (this.mCredential == 0) {
																																									Arrays.fill(this.mCredential, 0);
																																									this.mCredential = 0;
																																									return 0;
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","tryUnlockWithCachedUnifiedChallenge(I)Z","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, retrievePassword(I)Lcom/android/internal/widget/LockscreenCredential; > 3,2 @2 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Primordial,[B>6 <Primordial,[B>,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
11 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @18 exception:10,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @13 exception:9,
return 10,
13 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 9,11,8 @22 exception:12,
conditional branch(ne, to iindex=-1) 13,8,
21 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 7,19 @32 exception:20,
22 = arraylength 7,
24 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 7,19,22 @37 exception:23,
27 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 25 @43 exception:26,
29 = new <Application,Ljavax/crypto/spec/GCMParameterSpec>@48,
invokespecial < Application, Ljavax/crypto/spec/GCMParameterSpec, <init>(I[B)V > 29,30,21 @52 exception:31,
46 = getCaughtException ,
49 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I > 15,47,46 @77 exception:48,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,5,2,6,6 @16 exception:7,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,4,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
return 7,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
10 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 8 @20 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
21 = phi  6,20,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, close()V > 5 @27 exception:22,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > 1,
conditional branch(eq, to iindex=-1) 2,3,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 2,3 @5 exception:4,
putfield 1.< Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > = 3,
return,
return,
return 21,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
","public boolean tryUnlockWithCachedUnifiedChallenge(int p1){
	Object v2 = this.mEncryptedPasswords.get(p1);
	if (v2 != 0) {
		StringBuilder v4 = new StringBuilder();
		StringBuilder v6 = v4.append(""com.android.server.locksettings.unified_profile_cache_v2_"");
		StringBuilder v7 = v4.append(p1);
		String v8 = v4.toString();
		String v3 = v8;
		Key v9 = this.mKeyStore.getKey(v3, 0);
		if (v9 != 0) {
			byte[] v10 = Arrays.copyOf(v2, 12);
			byte[] v11 = Arrays.copyOfRange(v2, 12, v2.length);
			Cipher v12 = Cipher.getInstance(""AES/GCM/NoPadding"");
			GCMParameterSpec v13 = new GCMParameterSpec(128,v10);
			LockscreenCredential v1 = 0;
			if (v1 != 0) {
				if (v1 == 0) {
					LockscreenCredential.ensureNotZeroized();
					if (this.mType != -1) {
						boolean v17 = 1;
						if (v17 != 0) {
							if (p1 != -9999) {
								ContentResolver v19 = this.mContext.getContentResolver();
								int v21 = Settings$Global.getInt(v19, ""device_provisioned"", 0);
								int v20 = v21;
								if (v20 == 0) {
									boolean v23 = this.mInjector.hasEnrolledBiometrics(p1);
									if ((0 & 1) == 0) {
										boolean v32 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p1);
										if (v32 != 0) {
											if (p1 != -9999) {
												long v33 = LockSettingsService.getSyntheticPasswordHandleLocked(p1);
												IGateKeeperService v34 = LockSettingsService.getGateKeeperService();
												SyntheticPasswordManager$AuthenticationResult v35 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v34, v33, v1, p1, 0);
												int v36 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
												if (v36 != 0) {
													byte[] v37 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
													this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p1, v37);
													IGateKeeperService v39 = LockSettingsService.getGateKeeperService();
													VerifyCredentialResponse v40 = this.mSpManager.verifyChallenge(v39, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p1);
													int v41 = v40.getResponseCode();
													if (v41 == 0) {
														int v42 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
														if (v42 != 0) {
															int v43 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
															if (v43 != 1) {
																int v44 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
																if (v44 <= 0) {
																	LockSettingsService.requireStrongAuth(8, p1);
																	boolean v46 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
																	if (v46 == 0) {
																		if (1 == 0) {
																			VerifyCredentialResponse v22 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																			if (v22 == 0) {
																				if (p1 != -9999) {
																					LockSettingsStorage$CredentialHash v48 = LockSettingsStorage.readPasswordHashIfExists(p1);
																					if (v48 == 0) {
																						LockSettingsStorage$CredentialHash v49 = LockSettingsStorage.readPatternHashIfExists(p1);
																						if (v49 == 0) {
																							LockSettingsStorage$CredentialHash v47 = v49;
																							if (LockSettingsStorage$CredentialHash.type != 2) {
																								int v51 = LockscreenCredential.getType();
																								if (v51 == 4) {
																									int v52 = LockscreenCredential.getType();
																									if (v52 != 3) {
																										boolean v50 = 1;
																										if (v50 != 0) {
																											if (v47 == 0) {
																												if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																													boolean v54 = v1.isNone();
																													if (v54 == 0) {
																														if (v47 == 0) {
																															if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																																boolean v55 = v1.isNone();
																																if (v55 == 0) {
																																	StrictMode.noteDiskRead();
																																	IGateKeeperService v57 = LockSettingsService.getGateKeeperService();
																																	byte[] v58 = v1.getCredential();
																																	GateKeeperResponse v59 = v57.verifyChallenge(p1, 0, LockSettingsStorage$CredentialHash.hash, v58);
																																	VerifyCredentialResponse v60 = LockSettingsService.convertResponse(v59);
																																	boolean v61 = v59.getShouldReEnroll();
																																	int v62 = v60.getResponseCode();
																																	if (v62 != 0) {
																																		if (0 == 0) {
																																			0.onCredentialVerified();
																																			LockSettingsService.setUserPasswordMetrics(v1, p1);
																																			byte[] v65 = v1.getCredential();
																																			LockSettingsService.unlockKeystore(v65, p1);
																																			byte[] v73 = LockSettingsService.secretFromCredential(v1);
																																			LockSettingsService.unlockUser(p1, v73);
																																			boolean v75 = LockSettingsService.isProfileWithSeparatedLock(p1);
																																			if (v75 == 0) {
																																				LockSettingsService.setDeviceUnlockedForUser(p1);
																																				if (v61 == 0) {
																																					boolean v77 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p1);
																																					if (v77 == 0) {
																																						LockSettingsService.sendCredentialsOnUnlockIfRequired(v1, p1);
																																						VerifyCredentialResponse v53 = v60;
																																						int v79 = this.mResponseCode;
																																						if (v79 != 0) {
																																							Message v81 = this.mHandler.obtainMessage(5, p1, 0);
																																							v81.sendToTarget();
																																							VerifyCredentialResponse v16 = v53;
																																							int v83 = v16.getResponseCode();
																																							if (v83 != 0) {
																																								if (this.mCredential == 0) {
																																									Arrays.fill(this.mCredential, 0);
																																									this.mCredential = 0;
																																									return 0;
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","tryUnlockWithCachedUnifiedChallenge(I)Z","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mManagedProfilePasswordCache, <Application,Lcom/android/server/locksettings/ManagedProfilePasswordCache> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, retrievePassword(I)Lcom/android/internal/widget/LockscreenCredential; > 3,2 @2 exception:4,
3 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mEncryptedPasswords, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @5 exception:5,
7 = checkcast <Primordial,[B>6 <Primordial,[B>,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, mKeyStore, <Application,Ljava/security/KeyStore> > 1,
11 = invokestatic < Application, Lcom/android/server/locksettings/ManagedProfilePasswordCache, getEncryptionKeyName(I)Ljava/lang/String; > 2 @18 exception:10,
2 = new <Application,Ljava/lang/StringBuilder>@0,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 2 @2 exception:3,
6 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 2,4 @7 exception:5,
8 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 2,1 @10 exception:7,
10 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 2 @13 exception:9,
return 10,
13 = invokevirtual < Application, Ljava/security/KeyStore, getKey(Ljava/lang/String;[C)Ljava/security/Key; > 9,11,8 @22 exception:12,
conditional branch(ne, to iindex=-1) 13,8,
21 = invokestatic < Application, Ljava/util/Arrays, copyOf([BI)[B > 7,19 @32 exception:20,
22 = arraylength 7,
24 = invokestatic < Application, Ljava/util/Arrays, copyOfRange([BII)[B > 7,19,22 @37 exception:23,
27 = invokestatic < Application, Ljavax/crypto/Cipher, getInstance(Ljava/lang/String;)Ljavax/crypto/Cipher; > 25 @43 exception:26,
41 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 15,39 @86 exception:40,
monitorexit 3,
return 8,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, doVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,5,2,6,6 @16 exception:7,
conditional branch(eq, to iindex=-1) 2,6,
8 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 2 @2 exception:7,
invokespecial < Application, Lcom/android/internal/widget/LockscreenCredential, ensureNotZeroized()V > 1 @0 exception:2,
3 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mType, <Primordial,I> > 1,
conditional branch(ne, to iindex=-1) 3,4,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 3,12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
17 = invokevirtual < Application, Landroid/content/Context, getContentResolver()Landroid/content/ContentResolver; > 15 @18 exception:16,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, settingsGlobalGetInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 14,17,18,6 @25 exception:19,
6 = invokestatic < Application, Landroid/provider/Settings$Global, getInt(Landroid/content/ContentResolver;Ljava/lang/String;I)I > 2,3,4 @0 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,6,
24 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, spBasedDoVerifyCredential(Lcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;I)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @39 exception:23,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mInjector, <Application,Lcom/android/server/locksettings/LockSettingsService$Injector> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService$Injector, hasEnrolledBiometrics(I)Z > 6,3 @2 exception:7,
10 = new <Application,Ljava/lang/StringBuilder>@8,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 10 @10 exception:11,
14 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,12 @16 exception:13,
16 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 10,3 @19 exception:15,
19 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 10,17 @24 exception:18,
21 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Z)Ljava/lang/StringBuilder; > 10,8 @27 exception:20,
23 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 10 @30 exception:22,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 9,23 @34 exception:24,
27 = binaryop(and) 5 , 26,
conditional branch(eq, to iindex=-1) 27,28,
goto (from iindex= 19 to iindex = 2),
29 = phi  26,28,
30 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 30,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,3 @47 exception:31,
conditional branch(ne, to iindex=-1) 32,28,
conditional branch(ne, to iindex=-1) 3,33,
35 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getSyntheticPasswordHandleLocked(I)J > 1,3 @72 exception:34,
36 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
38 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @78 exception:37,
40 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unwrapPasswordBasedSyntheticPassword(Landroid/service/gatekeeper/IGateKeeperService;JLcom/android/internal/widget/LockscreenCredential;ILcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult; > 36,38,35,2,3,4 @85 exception:39,
41 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, gkResponse, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> > 40,
43 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 41 @91 exception:42,
conditional branch(ne, to iindex=-1) 43,28,
44 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mBiometricDeferredQueue, <Application,Lcom/android/server/locksettings/BiometricDeferredQueue> > 1,
45 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
47 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken, deriveGkPassword()[B > 45 @101 exception:46,
invokevirtual < Application, Lcom/android/server/locksettings/BiometricDeferredQueue, addPendingLockoutResetForUser(I[B)V > 44,3,47 @105 exception:48,
49 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
51 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @110 exception:50,
52 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationResult, authToken, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken> > 40,
55 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallenge(Landroid/service/gatekeeper/IGateKeeperService;Lcom/android/server/locksettings/SyntheticPasswordManager$AuthenticationToken;JI)Lcom/android/internal/widget/VerifyCredentialResponse; > 49,51,52,53,3 @119 exception:54,
57 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 55 @123 exception:56,
conditional branch(eq, to iindex=-1) 57,28,
58 = phi  41,55,
monitorexit 30,
67 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @142 exception:66,
conditional branch(ne, to iindex=-1) 67,28,
69 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 58 @158 exception:68,
conditional branch(ne, to iindex=-1) 69,26,
71 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getTimeout()I > 58 @164 exception:70,
conditional branch(le, to iindex=-1) 71,28,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, requireStrongAuth(II)V > 1,72,3 @172 exception:73,
83 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, isMatched()Z > 58 @175 exception:82,
conditional branch(eq, to iindex=-1) 83,28,
conditional branch(eq, to iindex=-1) 29,28,
return 58,
conditional branch(eq, to iindex=-1) 24,6,
conditional branch(ne, to iindex=-1) 3,12,
25 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
27 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readCredentialHash(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 25,3 @67 exception:26,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPasswordHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPatternHashIfExists(I)Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > 1,2 @7 exception:6,
conditional branch(eq, to iindex=-1) 7,5,
9 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, createEmptyHash()Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash; > @14 exception:8,
return 9,
28 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, type, <Primordial,I> > 27,
30 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, checkAgainstStoredType(I)Z > 2,28 @73 exception:29,
conditional branch(ne, to iindex=-1) 2,5,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @5 exception:9,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getType()I > 1 @12 exception:12,
conditional branch(ne, to iindex=-1) 13,14,
goto (from iindex= 12 to iindex = 2),
15 = phi  3,3,4,
return 15,
conditional branch(ne, to iindex=-1) 30,6,
32 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, verifyCredential(ILcom/android/server/locksettings/LockSettingsStorage$CredentialHash;Lcom/android/internal/widget/LockscreenCredential;Lcom/android/internal/widget/ICheckCredentialProgressCallback;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,3,27,2,4 @116 exception:31,
conditional branch(eq, to iindex=-1) 3,6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
8 = arraylength 7,
conditional branch(ne, to iindex=-1) 8,6,
10 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @7 exception:9,
conditional branch(eq, to iindex=-1) 10,6,
conditional branch(eq, to iindex=-1) 3,6,
12 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
13 = arraylength 12,
conditional branch(eq, to iindex=-1) 13,6,
15 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, isNone()Z > 4 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,6,
invokestatic < Application, Landroid/os/StrictMode, noteDiskRead()V > @31 exception:16,
18 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @34 exception:17,
20 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$CredentialHash, hash, <Primordial,[B> > 3,
22 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @42 exception:21,
24 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 18,2,19,20,22 @47 exception:23,
goto (from iindex= 27 to iindex = 11),
31 = phi  24,30,
37 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, convertResponse(Landroid/service/gatekeeper/GateKeeperResponse;)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,31 @62 exception:36,
39 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 31 @66 exception:38,
41 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 37 @70 exception:40,
conditional branch(ne, to iindex=-1) 41,6,
conditional branch(eq, to iindex=-1) 5,6,
invokeinterface < Application, Lcom/android/internal/widget/ICheckCredentialProgressCallback, onCredentialVerified()V > 5 @78 exception:49,
goto (from iindex= 42 to iindex = 10),
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setUserPasswordMetrics(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @91 exception:59,
61 = invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, getCredential()[B > 4 @94 exception:60,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockKeystore([BI)V > 1,61,2 @98 exception:62,
63 = new <Application,Ljava/lang/StringBuilder>@103,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 63 @105 exception:64,
67 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 63,65 @110 exception:66,
69 = invokevirtual < Application, Ljava/lang/StringBuilder, append(I)Ljava/lang/StringBuilder; > 63,2 @113 exception:68,
71 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 63 @116 exception:70,
73 = invokestatic < Application, Landroid/util/Slog, i(Ljava/lang/String;Ljava/lang/String;)I > 26,71 @120 exception:72,
75 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, secretFromCredential(Lcom/android/internal/widget/LockscreenCredential;)[B > 4 @123 exception:74,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, unlockUser(I[B)V > 1,2,75 @127 exception:76,
78 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isProfileWithSeparatedLock(I)Z > 1,2 @130 exception:77,
conditional branch(eq, to iindex=-1) 78,6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, setDeviceUnlockedForUser(I)V > 1,2 @136 exception:79,
conditional branch(eq, to iindex=-1) 39,6,
81 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 81,
83 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, shouldMigrateToSyntheticPasswordLocked(I)Z > 1,2 @149 exception:82,
conditional branch(eq, to iindex=-1) 83,6,
monitorexit 81,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, sendCredentialsOnUnlockIfRequired(Lcom/android/internal/widget/LockscreenCredential;I)V > 1,4,2 @165 exception:104,
goto (from iindex= 82 to iindex = 22),
return 37,
34 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 32 @120 exception:33,
2 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 34,6,
35 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, reportSuccessfulStrongAuthUnlock(I)V > 35,3 @128 exception:36,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
7 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(III)Landroid/os/Message; > 3,4,2,5 @4 exception:6,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 7 @8 exception:8,
return,
return 32,
10 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse, getResponseCode()I > 8 @20 exception:9,
conditional branch(ne, to iindex=-1) 10,6,
21 = phi  6,20,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, close()V > 5 @27 exception:22,
invokevirtual < Application, Lcom/android/internal/widget/LockscreenCredential, zeroize()V > 1 @0 exception:2,
2 = getfield < Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > 1,
conditional branch(eq, to iindex=-1) 2,3,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 2,3 @5 exception:4,
putfield 1.< Application, Lcom/android/internal/widget/LockscreenCredential, mCredential, <Primordial,[B> > = 3,
return,
return,
return 21,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
","public boolean tryUnlockWithCachedUnifiedChallenge(int p1){
	Object v2 = this.mEncryptedPasswords.get(p1);
	if (v2 != 0) {
		StringBuilder v4 = new StringBuilder();
		StringBuilder v6 = v4.append(""com.android.server.locksettings.unified_profile_cache_v2_"");
		StringBuilder v7 = v4.append(p1);
		String v8 = v4.toString();
		String v3 = v8;
		Key v9 = this.mKeyStore.getKey(v3, 0);
		if (v9 != 0) {
			byte[] v10 = Arrays.copyOf(v2, 12);
			byte[] v11 = Arrays.copyOfRange(v2, 12, v2.length);
			Cipher v12 = Cipher.getInstance(""AES/GCM/NoPadding"");
			LockscreenCredential v1 = 0;
			if (v1 != 0) {
				if (v1 == 0) {
					LockscreenCredential.ensureNotZeroized();
					if (this.mType != -1) {
						boolean v15 = 1;
						if (v15 != 0) {
							if (p1 != -9999) {
								ContentResolver v17 = this.mContext.getContentResolver();
								int v19 = Settings$Global.getInt(v17, ""device_provisioned"", 0);
								int v18 = v19;
								if (v18 == 0) {
									boolean v21 = this.mInjector.hasEnrolledBiometrics(p1);
									if ((0 & 1) == 0) {
										boolean v30 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p1);
										if (v30 != 0) {
											if (p1 != -9999) {
												long v31 = LockSettingsService.getSyntheticPasswordHandleLocked(p1);
												IGateKeeperService v32 = LockSettingsService.getGateKeeperService();
												SyntheticPasswordManager$AuthenticationResult v33 = this.mSpManager.unwrapPasswordBasedSyntheticPassword(v32, v31, v1, p1, 0);
												int v34 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
												if (v34 != 0) {
													byte[] v35 = SyntheticPasswordManager$AuthenticationResult.authToken.deriveGkPassword();
													this.mBiometricDeferredQueue.addPendingLockoutResetForUser(p1, v35);
													IGateKeeperService v37 = LockSettingsService.getGateKeeperService();
													VerifyCredentialResponse v38 = this.mSpManager.verifyChallenge(v37, SyntheticPasswordManager$AuthenticationResult.authToken, 0, p1);
													int v39 = v38.getResponseCode();
													if (v39 == 0) {
														int v40 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
														if (v40 != 0) {
															int v41 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getResponseCode();
															if (v41 != 1) {
																int v42 = SyntheticPasswordManager$AuthenticationResult.gkResponse.getTimeout();
																if (v42 <= 0) {
																	LockSettingsService.requireStrongAuth(8, p1);
																	boolean v44 = SyntheticPasswordManager$AuthenticationResult.gkResponse.isMatched();
																	if (v44 == 0) {
																		if (1 == 0) {
																			VerifyCredentialResponse v20 = SyntheticPasswordManager$AuthenticationResult.gkResponse;
																			if (v20 == 0) {
																				if (p1 != -9999) {
																					LockSettingsStorage$CredentialHash v46 = LockSettingsStorage.readPasswordHashIfExists(p1);
																					if (v46 == 0) {
																						LockSettingsStorage$CredentialHash v47 = LockSettingsStorage.readPatternHashIfExists(p1);
																						if (v47 == 0) {
																							LockSettingsStorage$CredentialHash v48 = LockSettingsStorage$CredentialHash.createEmptyHash();
																							LockSettingsStorage$CredentialHash v45 = v48;
																							if (LockSettingsStorage$CredentialHash.type != 2) {
																								int v50 = LockscreenCredential.getType();
																								if (v50 == 4) {
																									int v51 = LockscreenCredential.getType();
																									if (v51 != 3) {
																										boolean v49 = 1;
																										if (v49 != 0) {
																											if (v45 == 0) {
																												if (LockSettingsStorage$CredentialHash.hash.length != 0) {
																													boolean v53 = v1.isNone();
																													if (v53 == 0) {
																														if (v45 == 0) {
																															if (LockSettingsStorage$CredentialHash.hash.length == 0) {
																																boolean v54 = v1.isNone();
																																if (v54 == 0) {
																																	StrictMode.noteDiskRead();
																																	IGateKeeperService v56 = LockSettingsService.getGateKeeperService();
																																	byte[] v57 = v1.getCredential();
																																	GateKeeperResponse v58 = v56.verifyChallenge(p1, 0, LockSettingsStorage$CredentialHash.hash, v57);
																																	VerifyCredentialResponse v59 = LockSettingsService.convertResponse(v58);
																																	boolean v60 = v58.getShouldReEnroll();
																																	int v61 = v59.getResponseCode();
																																	if (v61 != 0) {
																																		if (0 == 0) {
																																			0.onCredentialVerified();
																																			LockSettingsService.setUserPasswordMetrics(v1, p1);
																																			byte[] v64 = v1.getCredential();
																																			LockSettingsService.unlockKeystore(v64, p1);
																																			byte[] v72 = LockSettingsService.secretFromCredential(v1);
																																			LockSettingsService.unlockUser(p1, v72);
																																			boolean v74 = LockSettingsService.isProfileWithSeparatedLock(p1);
																																			if (v74 == 0) {
																																				LockSettingsService.setDeviceUnlockedForUser(p1);
																																				if (v60 == 0) {
																																					boolean v76 = LockSettingsService.shouldMigrateToSyntheticPasswordLocked(p1);
																																					if (v76 == 0) {
																																						LockSettingsService.sendCredentialsOnUnlockIfRequired(v1, p1);
																																						VerifyCredentialResponse v52 = v59;
																																						int v78 = this.mResponseCode;
																																						if (v78 != 0) {
																																							Message v80 = this.mHandler.obtainMessage(5, p1, 0);
																																							v80.sendToTarget();
																																							VerifyCredentialResponse v14 = v52;
																																							int v82 = v14.getResponseCode();
																																							if (v82 != 0) {
																																								if (this.mCredential == 0) {
																																									Arrays.fill(this.mCredential, 0);
																																									this.mCredential = 0;
																																									return 0;
																																								}
																																							}
																																						}
																																					}
																																				}
																																			}
																																		}
																																	}
																																}
																															}
																														}
																													}
																												}
																											}
																										}
																									}
																								}
																							}
																						}
																					}
																				}
																			}
																		}
																	}
																}
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","generateKey(Ljava/lang/String;)Ljava/lang/String;","0","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, generateKey(Ljava/lang/String;)Ljava/lang/String; > 3,2 @2 exception:4,
return 5,","depth : 0
-----
","public String generateKey(String p1){
	String v1 = this.mRecoverableKeyStoreManager.generateKey(p1);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","generateKey(Ljava/lang/String;)Ljava/lang/String;","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, generateKey(Ljava/lang/String;)Ljava/lang/String; > 3,2 @2 exception:4,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String; > 1,2,3 @1 exception:4,
return 5,
return 5,","depth : 0
-----
depth : 1
-----
","public String generateKey(String p1){
	String v2 = RecoverableKeyStoreManager.generateKeyWithMetadata(p1, 0);
	String v1 = v2;
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","generateKey(Ljava/lang/String;)Ljava/lang/String;","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, generateKey(Ljava/lang/String;)Ljava/lang/String; > 3,2 @2 exception:4,
5 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, generateKeyWithMetadata(Ljava/lang/String;[B)Ljava/lang/String; > 1,2,3 @1 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:4,
7 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,5 @5 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @8 exception:8,
11 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:10,
13 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mPlatformKeyManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager> > 1,
15 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/PlatformKeyManager, getEncryptKey(I)Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey; > 13,11 @20 exception:14,
26 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverableKeyGenerator, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator> > 1,
28 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyGenerator, generateAndStoreKey(Lcom/android/server/locksettings/recoverablekeystore/PlatformEncryptionKey;IILjava/lang/String;[B)[B > 26,15,11,9,2,3 @30 exception:27,
29 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 29,11,9,2,28 @36 exception:30,
40 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,11,9,2 @39 exception:39,
return 40,
return 5,
return 5,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public String generateKey(String p1){
	Object v4 = Objects.requireNonNull(p1, ""alias is null"");
	int v5 = Binder.getCallingUid();
	int v6 = UserHandle.getCallingUserId();
	PlatformEncryptionKey v7 = this.mPlatformKeyManager.getEncryptKey(v6);
	byte[] v8 = this.mRecoverableKeyGenerator.generateAndStoreKey(v7, v6, v5, p1, 0);
	this.mApplicationKeyStorage.setSymmetricKeyEntry(v6, v5, p1, v8);
	String v10 = RecoverableKeyStoreManager.getAlias(v6, v5, p1);
	String v2 = v10;
	String v1 = v2;
	return v1;
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","setLong(Ljava/lang/String;JI)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setLong(Ljava/lang/String;JI)V > 6,2,3,4 @5 exception:7,
return,","depth : 0
-----
","public void setLong(String p1, long p2, int p3){
	this.mStorage.setLong(p1, p2, p3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setLong(Ljava/lang/String;JI)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setLong(Ljava/lang/String;JI)V > 6,2,3,4 @5 exception:7,
6 = invokestatic < Application, Ljava/lang/Long, toString(J)Ljava/lang/String; > 3 @0 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,6,4 @4 exception:7,
return,
return,","depth : 0
-----
depth : 1
-----
","public void setLong(String p1, long p2, int p3){
	String v3 = Long.toString(p2);
	LockSettingsStorage.setString(p1, v3, p3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setLong(Ljava/lang/String;JI)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setLong(Ljava/lang/String;JI)V > 6,2,3,4 @5 exception:7,
6 = invokestatic < Application, Ljava/lang/Long, toString(J)Ljava/lang/String; > 3 @0 exception:5,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,6,4 @4 exception:7,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 3 to iindex = 2),
8 = phi  7,6,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 8,9 @9 exception:10,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeKeyValue(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,3,4 @12 exception:11,
12 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, SETTINGS_TO_BACKUP, <Application,[Ljava/lang/String> >,
14 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, contains([Ljava/lang/Object;Ljava/lang/Object;)Z > 12,2 @17 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
invokestatic < Application, Landroid/app/backup/BackupManager, dataChanged(Ljava/lang/String;)V > 15 @25 exception:16,
return,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public void setLong(String p1, long p2, int p3){
	String v3 = Long.toString(p2);
	if (p3 == -9999) {
		Preconditions.checkArgument(1, ""cannot store lock settings for FRP user"");
		LockSettingsStorage.writeKeyValue(p1, v3, p3);
		boolean v7 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
		if (v7 == 0) {
			BackupManager.dataChanged(""com.android.providers.settings"");
			return;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","removeKey(Ljava/lang/String;)V","0","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, removeKey(Ljava/lang/String;)V > 3,2 @2 exception:4,
return,","depth : 0
-----
","public void removeKey(String p1){
	this.mRecoverableKeyStoreManager.removeKey(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","removeKey(Ljava/lang/String;)V","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, removeKey(Ljava/lang/String;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @5 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @8 exception:7,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
11 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, removeKey(ILjava/lang/String;)Z > 11,8,2 @18 exception:12,
conditional branch(eq, to iindex=-1) 13,14,
15 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
18 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 15,10,8,16 @27 exception:17,
19 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, deleteEntry(IILjava/lang/String;)V > 19,10,8,2 @32 exception:20,
return,
return,","depth : 0
-----
depth : 1
-----
","public void removeKey(String p1){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	boolean v6 = this.mDatabase.removeKey(v4, p1);
	if (v6 == 0) {
		long v7 = this.mDatabase.setShouldCreateSnapshot(v5, v4, 1);
		this.mApplicationKeyStorage.deleteEntry(v5, v4, p1);
		return;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","removeKey(Ljava/lang/String;)V","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, removeKey(Ljava/lang/String;)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @5 exception:5,
8 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @8 exception:7,
10 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @12 exception:9,
11 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, removeKey(ILjava/lang/String;)Z > 11,8,2 @18 exception:12,
4 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, mKeyStoreDbHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDbHelper> > 1,
6 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 4 @2 exception:5,
8 = new <Application,[Ljava/lang/String>@77 ,
10 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @9 exception:9,
arraystore 8[11] = 10,
arraystore 8[12] = 3,
16 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, delete(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;)I > 6,13,14,8 @24 exception:15,
conditional branch(le, to iindex=-1) 16,11,
17 = phi  11,12,
return 17,
conditional branch(eq, to iindex=-1) 13,14,
15 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
18 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 15,10,8,16 @27 exception:17,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 3),
8 = phi  7,6,
11 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setLong(IILjava/lang/String;J)J > 1,2,3,9,8 @14 exception:10,
return 11,
19 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, deleteEntry(IILjava/lang/String;)V > 19,10,8,2 @32 exception:20,
5 = getstatic < Application, Ljava/util/Locale, US, <Application,Ljava/util/Locale> >,
7 = new <Application,[Ljava/lang/Object>@36 ,
9 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 2 @5 exception:8,
arraystore 7[10] = 9,
12 = invokestatic < Application, Ljava/lang/Integer, valueOf(I)Ljava/lang/Integer; > 3 @12 exception:11,
arraystore 7[13] = 12,
arraystore 7[14] = 4,
17 = invokestatic < Application, Ljava/lang/String, format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 5,15,7 @24 exception:16,
20 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 18,17 @30 exception:19,
21 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, mKeyStore, <Application,Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy> > 1,
23 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, getInternalAlias(IILjava/lang/String;)Ljava/lang/String; > 1,2,3,4 @35 exception:22,
invokeinterface < Application, Lcom/android/server/locksettings/recoverablekeystore/KeyStoreProxy, deleteEntry(Ljava/lang/String;)V > 21,23 @39 exception:24,
return,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void removeKey(String p1){
	Object v3 = Objects.requireNonNull(p1, ""alias is null"");
	int v4 = Binder.getCallingUid();
	int v5 = UserHandle.getCallingUserId();
	SQLiteDatabase v7 = this.mKeyStoreDbHelper.getWritableDatabase();
	String v8 = new String(2);
	String v9 = Integer.toString(v4);
	int v10 = v7.delete(""keys"", ""uid = ? AND alias = ?"", v8);
	if (v10 <= 0) {
		boolean v6 = 0;
		if (v6 == 0) {
			if (1 == 0) {
				long v12 = RecoverableKeyStoreDb.setLong(v5, v4, ""should_create_snapshot"", 1);
				long v11 = v12;
				Integer v15 = Integer.valueOf(v5);
				Integer v16 = Integer.valueOf(v4);
				String v19 = ApplicationKeyStorage.getInternalAlias(v5, v4, p1);
				this.mKeyStore.deleteEntry(v19);
				return;
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","unregisterWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:3,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:4,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unregisterWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z > 6,2 @9 exception:7,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @13 exception:13,
return 8,","depth : 0
-----
","public boolean unregisterWeakEscrowTokenRemovedListener(IWeakEscrowTokenRemovedListener p1){
	p0.checkManageWeakEscrowTokenMethodUsage();
	long v2 = Binder.clearCallingIdentity();
	boolean v3 = this.mSpManager.unregisterWeakEscrowTokenRemovedListener(p1);
	Binder.restoreCallingIdentity(v2);
	return v3;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","unregisterWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkManageWeakEscrowTokenMethodUsage()V > 1 @0 exception:3,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
invokevirtual < Application, Landroid/content/Context, enforceCallingOrSelfPermission(Ljava/lang/String;Ljava/lang/String;)V > 2,3,4 @6 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mContext, <Application,Landroid/content/Context> > 1,
8 = invokevirtual < Application, Landroid/content/Context, getPackageManager()Landroid/content/pm/PackageManager; > 6 @11 exception:7,
11 = invokevirtual < Application, Landroid/content/pm/PackageManager, hasSystemFeature(Ljava/lang/String;)Z > 8,9 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
return,
5 = invokestatic < Application, Landroid/os/Binder, clearCallingIdentity()J > @3 exception:4,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, unregisterWeakEscrowTokenRemovedListener(Lcom/android/internal/widget/IWeakEscrowTokenRemovedListener;)Z > 6,2 @9 exception:7,
3 = getfield < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, mListeners, <Application,Landroid/os/RemoteCallbackList> > 1,
5 = invokevirtual < Application, Landroid/os/RemoteCallbackList, unregister(Landroid/os/IInterface;)Z > 3,2 @2 exception:4,
return 5,
invokestatic < Application, Landroid/os/Binder, restoreCallingIdentity(J)V > 5 @13 exception:13,
return 8,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public boolean unregisterWeakEscrowTokenRemovedListener(IWeakEscrowTokenRemovedListener p1){
	PackageManager v3 = this.mContext.getPackageManager();
	boolean v4 = v3.hasSystemFeature(""android.hardware.type.automotive"");
	if (v4 == 0) {
		long v5 = Binder.clearCallingIdentity();
		boolean v7 = this.mListeners.unregister(p1);
		boolean v6 = v7;
		Binder.restoreCallingIdentity(v5);
		return v6;
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","setString(Ljava/lang/String;Ljava/lang/String;I)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
return,","depth : 0
-----
","public void setString(String p1, String p2, int p3){
	this.mStorage.setString(p1, p2, p3);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setString(Ljava/lang/String;Ljava/lang/String;I)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 3 to iindex = 2),
8 = phi  7,6,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 8,9 @9 exception:10,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeKeyValue(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,3,4 @12 exception:11,
12 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, SETTINGS_TO_BACKUP, <Application,[Ljava/lang/String> >,
14 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, contains([Ljava/lang/Object;Ljava/lang/Object;)Z > 12,2 @17 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
invokestatic < Application, Landroid/app/backup/BackupManager, dataChanged(Ljava/lang/String;)V > 15 @25 exception:16,
return,
return,","depth : 0
-----
depth : 1
-----
","public void setString(String p1, String p2, int p3){
	if (p3 == -9999) {
		Preconditions.checkArgument(1, ""cannot store lock settings for FRP user"");
		LockSettingsStorage.writeKeyValue(p1, p2, p3);
		boolean v5 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
		if (v5 == 0) {
			BackupManager.dataChanged(""com.android.providers.settings"");
			return;
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setString(Ljava/lang/String;Ljava/lang/String;I)V","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkWritePermission(I)V > 1,4 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, setString(Ljava/lang/String;Ljava/lang/String;I)V > 6,2,3,4 @5 exception:7,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 3 to iindex = 2),
8 = phi  7,6,
invokestatic < Application, Lcom/android/internal/util/Preconditions, checkArgument(ZLjava/lang/Object;)V > 8,9 @9 exception:10,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeKeyValue(Ljava/lang/String;Ljava/lang/String;I)V > 1,2,3,4 @12 exception:11,
5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage, mOpenHelper, <Application,Lcom/android/server/locksettings/LockSettingsStorage$DatabaseHelper> > 1,
7 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 5 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, writeKeyValue(Landroid/database/sqlite/SQLiteDatabase;Ljava/lang/String;Ljava/lang/String;I)V > 1,7,2,3,4 @6 exception:8,
return,
12 = getstatic < Application, Lcom/android/server/locksettings/LockSettingsStorage, SETTINGS_TO_BACKUP, <Application,[Ljava/lang/String> >,
14 = invokestatic < Application, Lcom/android/internal/util/ArrayUtils, contains([Ljava/lang/Object;Ljava/lang/Object;)Z > 12,2 @17 exception:13,
conditional branch(eq, to iindex=-1) 14,6,
invokestatic < Application, Landroid/app/backup/BackupManager, dataChanged(Ljava/lang/String;)V > 15 @25 exception:16,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
","public void setString(String p1, String p2, int p3){
	if (p3 == -9999) {
		Preconditions.checkArgument(1, ""cannot store lock settings for FRP user"");
		SQLiteDatabase v5 = this.mOpenHelper.getWritableDatabase();
		LockSettingsStorage.writeKeyValue(v5, p1, p2, p3);
		boolean v7 = ArrayUtils.contains(this.SETTINGS_TO_BACKUP, p1);
		if (v7 == 0) {
			BackupManager.dataChanged(""com.android.providers.settings"");
			return;
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","setRecoverySecretTypes([I)V","0","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setRecoverySecretTypes([I)V > 3,2 @2 exception:4,
return,","depth : 0
-----
","public void setRecoverySecretTypes([I p1){
	this.mRecoverableKeyStoreManager.setRecoverySecretTypes(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setRecoverySecretTypes([I)V","1","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setRecoverySecretTypes([I)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @6 exception:5,
8 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @9 exception:7,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:9,
11 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getRecoverySecretTypes(II)[I > 11,8,10 @19 exception:12,
15 = invokestatic < Application, Ljava/util/Arrays, equals([I[I)Z > 2,13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,17,
18 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setRecoverySecretTypes(II[I)J > 18,8,10,2 @39 exception:19,
22 = binaryop(lt) 20 , 21,
conditional branch(lt, to iindex=-1) 22,17,
27 = arraylength 13,
conditional branch(ne, to iindex=-1) 27,17,
30 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 16,28 @60 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
33 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getSnapshotVersion(II)Ljava/lang/Long; > 31,8,10 @65 exception:32,
conditional branch(eq, to iindex=-1) 33,17,
37 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
40 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 37,8,10,38 @74 exception:39,
43 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 16,41 @79 exception:42,
goto (from iindex= 39 to iindex = 6),
return,
return,","depth : 0
-----
depth : 1
-----
","public void setRecoverySecretTypes([I p1){
	Object v3 = Objects.requireNonNull(p1, ""secretTypes is null"");
	int v4 = UserHandle.getCallingUserId();
	int v5 = Binder.getCallingUid();
	[I v6 = this.mDatabase.getRecoverySecretTypes(v4, v5);
	boolean v7 = Arrays.equals(p1, v6);
	if (v7 == 0) {
		long v8 = this.mDatabase.setRecoverySecretTypes(v4, v5, p1);
		if ((v8 < 0) < 0) {
			if (v6.length != 0) {
				Long v10 = this.mDatabase.getSnapshotVersion(v4, v5);
				if (v10 == 0) {
					long v11 = this.mDatabase.setShouldCreateSnapshot(v4, v5, 1);
					return;
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setRecoverySecretTypes([I)V","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setRecoverySecretTypes([I)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @6 exception:5,
8 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @9 exception:7,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:9,
11 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getRecoverySecretTypes(II)[I > 11,8,10 @19 exception:12,
4 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, mKeyStoreDbHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDbHelper> > 1,
6 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 4 @2 exception:5,
11 = new <Application,[Ljava/lang/String>@1712 ,
14 = new <Application,[Ljava/lang/String>@2213 ,
16 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @24 exception:15,
arraystore 14[17] = 16,
19 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 3 @31 exception:18,
arraystore 14[20] = 19,
24 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 6,21,11,22,14,17,17,17 @47 exception:23,
26 = invokeinterface < Application, Landroid/database/Cursor, getCount()I > 24 @51 exception:25,
conditional branch(ne, to iindex=-1) 26,17,
conditional branch(le, to iindex=-1) 26,20,
29 = invokeinterface < Application, Landroid/database/Cursor, moveToFirst()Z > 24 @105 exception:28,
31 = invokeinterface < Application, Landroid/database/Cursor, getColumnIndexOrThrow(Ljava/lang/String;)I > 24,10 @108 exception:30,
33 = invokeinterface < Application, Landroid/database/Cursor, isNull(I)Z > 24,31 @112 exception:32,
conditional branch(eq, to iindex=-1) 33,17,
35 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,31 @124 exception:34,
37 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 35 @128 exception:36,
conditional branch(eq, to iindex=-1) 37,17,
40 = invokevirtual < Application, Ljava/lang/String, split(Ljava/lang/String;)[Ljava/lang/String; > 35,38 @142 exception:39,
41 = arraylength 40,
42 = new <Primordial,[I>@14741 ,
68 = phi  65,17,
43 = arraylength 40,
conditional branch(ge, to iindex=-1) 68,43,
44 = arrayload 40[68],
46 = invokestatic < Application, Ljava/lang/Integer, parseInt(Ljava/lang/String;)I > 44 @154 exception:45,
47 = getCaughtException ,
48 = new <Application,Ljava/lang/StringBuilder>@162,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 48 @164 exception:49,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 48,50 @169 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 48,47 @172 exception:53,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 48 @175 exception:55,
58 = invokestatic < Application, Landroid/util/Log, wtf(Ljava/lang/String;Ljava/lang/String;)I > 27,56 @179 exception:57,
65 = binaryop(add) 68 , 64,
goto (from iindex= 92 to iindex = -35),
68 = phi  65,17,
43 = arraylength 40,
conditional branch(ge, to iindex=-1) 68,43,
invokeinterface < Application, Landroid/database/Cursor, close()V > 24 @185 exception:72,
return 42,
15 = invokestatic < Application, Ljava/util/Arrays, equals([I[I)Z > 2,13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,17,
18 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setRecoverySecretTypes(II[I)J > 18,8,10,2 @39 exception:19,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, mKeyStoreDbHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDbHelper> > 1,
7 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 5 @2 exception:6,
8 = new <Application,Landroid/content/ContentValues>@6,
invokespecial < Application, Landroid/content/ContentValues, <init>()V > 8 @8 exception:9,
10 = new <Application,Ljava/util/StringJoiner>@11,
invokespecial < Application, Ljava/util/StringJoiner, <init>(Ljava/lang/CharSequence;)V > 10,11 @15 exception:12,
14 = invokestatic < Application, Ljava/util/Arrays, stream([I)Ljava/util/stream/IntStream; > 4 @18 exception:13,
15 = new <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb$$ExternalSyntheticLambda0>@22,
invokespecial < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb$$ExternalSyntheticLambda0, <init>(Ljava/util/StringJoiner;)V > 15,10 @24 exception:16,
invokeinterface < Application, Ljava/util/stream/IntStream, forEach(Ljava/util/function/IntConsumer;)V > 14,15 @27 exception:17,
19 = invokevirtual < Application, Ljava/util/StringJoiner, toString()Ljava/lang/String; > 10 @30 exception:18,
invokevirtual < Application, Landroid/content/ContentValues, put(Ljava/lang/String;Ljava/lang/String;)V > 8,20,19 @37 exception:21,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, ensureRecoveryServiceMetadataEntryExists(II)V > 1,2,3 @40 exception:22,
24 = new <Application,[Ljava/lang/String>@4423 ,
26 = invokestatic < Application, Ljava/lang/String, valueOf(I)Ljava/lang/String; > 2 @46 exception:25,
arraystore 24[27] = 26,
29 = invokestatic < Application, Ljava/lang/String, valueOf(I)Ljava/lang/String; > 3 @53 exception:28,
arraystore 24[30] = 29,
34 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I > 7,31,8,32,24 @66 exception:33,
35 = conversion(J) 34,
return 35,
22 = binaryop(lt) 20 , 21,
conditional branch(lt, to iindex=-1) 22,17,
27 = arraylength 13,
conditional branch(ne, to iindex=-1) 27,17,
30 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 16,28 @60 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
33 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getSnapshotVersion(II)Ljava/lang/Long; > 31,8,10 @65 exception:32,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getLong(IILjava/lang/String;)Ljava/lang/Long; > 1,2,3,4 @3 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 33,17,
37 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
40 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setShouldCreateSnapshot(IIZ)J > 37,8,10,38 @74 exception:39,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 3),
8 = phi  7,6,
11 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setLong(IILjava/lang/String;J)J > 1,2,3,9,8 @14 exception:10,
return 11,
43 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 16,41 @79 exception:42,
goto (from iindex= 39 to iindex = 6),
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void setRecoverySecretTypes([I p1){
	Object v3 = Objects.requireNonNull(p1, ""secretTypes is null"");
	int v4 = UserHandle.getCallingUserId();
	int v5 = Binder.getCallingUid();
	SQLiteDatabase v7 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v8 = new String(4);
	String v9 = new String(2);
	String v10 = Integer.toString(v4);
	String v11 = Integer.toString(v5);
	Cursor v12 = v7.query(""recovery_service_metadata"", v8, ""user_id = ? AND uid = ?"", v9, 0, 0, 0);
	int v13 = v12.getCount();
	if (v13 != 0) {
		if (v13 <= 1) {
			boolean v14 = v12.moveToFirst();
			int v15 = v12.getColumnIndexOrThrow(""secret_types"");
			boolean v16 = v12.isNull(v15);
			if (v16 == 0) {
				String v17 = v12.getString(v15);
				boolean v18 = TextUtils.isEmpty(v17);
				if (v18 == 0) {
					String v19 = v17.split("","");
					[I v20 = new [I(v19.length);
					if (0 >= v19.length) {
						int v21 = Integer.parseInt(v19[0]);
						if ((0 + 1) >= v19.length) {
							v12.close();
							[I v6 = v20;
							boolean v29 = Arrays.equals(p1, v6);
							if (v29 == 0) {
								SQLiteDatabase v31 = this.mKeyStoreDbHelper.getWritableDatabase();
								ContentValues v32 = new ContentValues();
								StringJoiner v34 = new StringJoiner("","");
								IntStream v36 = Arrays.stream(p1);
								RecoverableKeyStoreDb$$ExternalSyntheticLambda0 v37 = new RecoverableKeyStoreDb$$ExternalSyntheticLambda0(v34);
								v36.forEach(v37);
								String v40 = v34.toString();
								v32.put(""secret_types"", v40);
								RecoverableKeyStoreDb.ensureRecoveryServiceMetadataEntryExists(v4, v5);
								String v43 = new String(2);
								String v44 = String.valueOf(v4);
								String v45 = String.valueOf(v5);
								int v46 = v31.update(""recovery_service_metadata"", v32, ""user_id = ? AND uid = ?"", v43);
								long v30 = v46;
								if ((v30 < 0) < 0) {
									if (v6.length != 0) {
										Long v49 = RecoverableKeyStoreDb.getLong(v4, v5, ""snapshot_version"");
										Long v48 = v49;
										if (v48 == 0) {
											if (1 == 0) {
												long v51 = RecoverableKeyStoreDb.setLong(v4, v5, ""should_create_snapshot"", 1);
												long v50 = v51;
												return;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","setRecoverySecretTypes([I)V","2","3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, setRecoverySecretTypes([I)V > 3,2 @2 exception:4,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:3,
6 = invokestatic < Application, Ljava/util/Objects, requireNonNull(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object; > 2,4 @6 exception:5,
8 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @9 exception:7,
10 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @13 exception:9,
11 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getRecoverySecretTypes(II)[I > 11,8,10 @19 exception:12,
4 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, mKeyStoreDbHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDbHelper> > 1,
6 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getReadableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 4 @2 exception:5,
11 = new <Application,[Ljava/lang/String>@1712 ,
14 = new <Application,[Ljava/lang/String>@2213 ,
16 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 2 @24 exception:15,
arraystore 14[17] = 16,
19 = invokestatic < Application, Ljava/lang/Integer, toString(I)Ljava/lang/String; > 3 @31 exception:18,
arraystore 14[20] = 19,
24 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, query(Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor; > 6,21,11,22,14,17,17,17 @47 exception:23,
26 = invokeinterface < Application, Landroid/database/Cursor, getCount()I > 24 @51 exception:25,
conditional branch(ne, to iindex=-1) 26,17,
conditional branch(le, to iindex=-1) 26,20,
29 = invokeinterface < Application, Landroid/database/Cursor, moveToFirst()Z > 24 @105 exception:28,
31 = invokeinterface < Application, Landroid/database/Cursor, getColumnIndexOrThrow(Ljava/lang/String;)I > 24,10 @108 exception:30,
33 = invokeinterface < Application, Landroid/database/Cursor, isNull(I)Z > 24,31 @112 exception:32,
conditional branch(eq, to iindex=-1) 33,17,
35 = invokeinterface < Application, Landroid/database/Cursor, getString(I)Ljava/lang/String; > 24,31 @124 exception:34,
37 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 35 @128 exception:36,
conditional branch(eq, to iindex=-1) 37,17,
40 = invokevirtual < Application, Ljava/lang/String, split(Ljava/lang/String;)[Ljava/lang/String; > 35,38 @142 exception:39,
41 = arraylength 40,
42 = new <Primordial,[I>@14741 ,
68 = phi  65,17,
43 = arraylength 40,
conditional branch(ge, to iindex=-1) 68,43,
44 = arrayload 40[68],
46 = invokestatic < Application, Ljava/lang/Integer, parseInt(Ljava/lang/String;)I > 44 @154 exception:45,
47 = getCaughtException ,
48 = new <Application,Ljava/lang/StringBuilder>@162,
invokespecial < Application, Ljava/lang/StringBuilder, <init>()V > 48 @164 exception:49,
52 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/String;)Ljava/lang/StringBuilder; > 48,50 @169 exception:51,
54 = invokevirtual < Application, Ljava/lang/StringBuilder, append(Ljava/lang/Object;)Ljava/lang/StringBuilder; > 48,47 @172 exception:53,
56 = invokevirtual < Application, Ljava/lang/StringBuilder, toString()Ljava/lang/String; > 48 @175 exception:55,
58 = invokestatic < Application, Landroid/util/Log, wtf(Ljava/lang/String;Ljava/lang/String;)I > 27,56 @179 exception:57,
65 = binaryop(add) 68 , 64,
goto (from iindex= 92 to iindex = -35),
68 = phi  65,17,
43 = arraylength 40,
conditional branch(ge, to iindex=-1) 68,43,
invokeinterface < Application, Landroid/database/Cursor, close()V > 24 @185 exception:72,
return 42,
15 = invokestatic < Application, Ljava/util/Arrays, equals([I[I)Z > 2,13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,17,
18 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, setRecoverySecretTypes(II[I)J > 18,8,10,2 @39 exception:19,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, mKeyStoreDbHelper, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDbHelper> > 1,
7 = invokevirtual < Application, Landroid/database/sqlite/SQLiteOpenHelper, getWritableDatabase()Landroid/database/sqlite/SQLiteDatabase; > 5 @2 exception:6,
8 = new <Application,Landroid/content/ContentValues>@6,
invokespecial < Application, Landroid/content/ContentValues, <init>()V > 8 @8 exception:9,
10 = new <Application,Ljava/util/StringJoiner>@11,
invokespecial < Application, Ljava/util/StringJoiner, <init>(Ljava/lang/CharSequence;)V > 10,11 @15 exception:12,
14 = invokestatic < Application, Ljava/util/Arrays, stream([I)Ljava/util/stream/IntStream; > 4 @18 exception:13,
15 = new <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb$$ExternalSyntheticLambda0>@22,
invokespecial < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb$$ExternalSyntheticLambda0, <init>(Ljava/util/StringJoiner;)V > 15,10 @24 exception:16,
invokeinterface < Application, Ljava/util/stream/IntStream, forEach(Ljava/util/function/IntConsumer;)V > 14,15 @27 exception:17,
19 = invokevirtual < Application, Ljava/util/StringJoiner, toString()Ljava/lang/String; > 10 @30 exception:18,
invokevirtual < Application, Landroid/content/ContentValues, put(Ljava/lang/String;Ljava/lang/String;)V > 8,20,19 @37 exception:21,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, ensureRecoveryServiceMetadataEntryExists(II)V > 1,2,3 @40 exception:22,
24 = new <Application,[Ljava/lang/String>@4423 ,
26 = invokestatic < Application, Ljava/lang/String, valueOf(I)Ljava/lang/String; > 2 @46 exception:25,
arraystore 24[27] = 26,
29 = invokestatic < Application, Ljava/lang/String, valueOf(I)Ljava/lang/String; > 3 @53 exception:28,
arraystore 24[30] = 29,
34 = invokevirtual < Application, Landroid/database/sqlite/SQLiteDatabase, update(Ljava/lang/String;Landroid/content/ContentValues;Ljava/lang/String;[Ljava/lang/String;)I > 7,31,8,32,24 @66 exception:33,
35 = conversion(J) 34,
return 35,
22 = binaryop(lt) 20 , 21,
conditional branch(lt, to iindex=-1) 22,17,
27 = arraylength 13,
conditional branch(ne, to iindex=-1) 27,17,
30 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 16,28 @60 exception:29,
31 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mDatabase, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb> > 1,
33 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getSnapshotVersion(II)Ljava/lang/Long; > 31,8,10 @65 exception:32,
6 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverableKeyStoreDb, getLong(IILjava/lang/String;)Ljava/lang/Long; > 1,2,3,4 @3 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 33,17,
36 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 16,34 @85 exception:35,
return,
return,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public void setRecoverySecretTypes([I p1){
	Object v3 = Objects.requireNonNull(p1, ""secretTypes is null"");
	int v4 = UserHandle.getCallingUserId();
	int v5 = Binder.getCallingUid();
	SQLiteDatabase v7 = this.mKeyStoreDbHelper.getReadableDatabase();
	String v8 = new String(4);
	String v9 = new String(2);
	String v10 = Integer.toString(v4);
	String v11 = Integer.toString(v5);
	Cursor v12 = v7.query(""recovery_service_metadata"", v8, ""user_id = ? AND uid = ?"", v9, 0, 0, 0);
	int v13 = v12.getCount();
	if (v13 != 0) {
		if (v13 <= 1) {
			boolean v14 = v12.moveToFirst();
			int v15 = v12.getColumnIndexOrThrow(""secret_types"");
			boolean v16 = v12.isNull(v15);
			if (v16 == 0) {
				String v17 = v12.getString(v15);
				boolean v18 = TextUtils.isEmpty(v17);
				if (v18 == 0) {
					String v19 = v17.split("","");
					[I v20 = new [I(v19.length);
					if (0 >= v19.length) {
						int v21 = Integer.parseInt(v19[0]);
						if ((0 + 1) >= v19.length) {
							v12.close();
							[I v6 = v20;
							boolean v29 = Arrays.equals(p1, v6);
							if (v29 == 0) {
								SQLiteDatabase v31 = this.mKeyStoreDbHelper.getWritableDatabase();
								ContentValues v32 = new ContentValues();
								StringJoiner v34 = new StringJoiner("","");
								IntStream v36 = Arrays.stream(p1);
								RecoverableKeyStoreDb$$ExternalSyntheticLambda0 v37 = new RecoverableKeyStoreDb$$ExternalSyntheticLambda0(v34);
								v36.forEach(v37);
								String v40 = v34.toString();
								v32.put(""secret_types"", v40);
								RecoverableKeyStoreDb.ensureRecoveryServiceMetadataEntryExists(v4, v5);
								String v43 = new String(2);
								String v44 = String.valueOf(v4);
								String v45 = String.valueOf(v5);
								int v46 = v31.update(""recovery_service_metadata"", v32, ""user_id = ? AND uid = ?"", v43);
								long v30 = v46;
								if ((v30 < 0) < 0) {
									if (v6.length != 0) {
										Long v49 = RecoverableKeyStoreDb.getLong(v4, v5, ""snapshot_version"");
										Long v48 = v49;
										if (v48 == 0) {
											return;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","getCredentialType(I)I","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordHavePermission(I)V > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,2 @3 exception:4,
return 5,","depth : 0
-----
","public int getCredentialType(int p1){
	int v2 = p0.getCredentialTypeInternal(p1);
	return v2;
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getCredentialType(I)I","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordHavePermission(I)V > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,2 @3 exception:4,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,2 @12 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
monitorexit 4,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getKeyguardStoredQuality(I)I > 1,2 @44 exception:8,
conditional branch(ne, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPattern(I)Z > 11,2 @54 exception:12,
conditional branch(eq, to iindex=-1) 13,7,
conditional branch(lt, to iindex=-1) 9,17,
18 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPassword(I)Z > 18,2 @68 exception:19,
conditional branch(eq, to iindex=-1) 20,7,
26 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, pinOrPasswordQualityToCredentialType(I)I > 9 @74 exception:25,
return 26,
return 5,","depth : 0
-----
depth : 1
-----
","public int getCredentialType(int p1){
	if (p1 != -9999) {
		boolean v3 = LockSettingsService.isSyntheticPasswordBasedCredentialLocked(p1);
		if (v3 == 0) {
			int v4 = LockSettingsService.getKeyguardStoredQuality(p1);
			if (v4 != 65536) {
				boolean v5 = this.mStorage.hasPattern(p1);
				if (v5 == 0) {
					if (v4 < 131072) {
						boolean v6 = this.mStorage.hasPassword(p1);
						if (v6 == 0) {
							int v7 = LockSettingsService.pinOrPasswordQualityToCredentialType(v4);
							int v2 = v7;
							return v2;
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getCredentialType(I)I","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordHavePermission(I)V > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,2 @3 exception:4,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,2 @12 exception:5,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(eq, to iindex=-1) 6,7,
monitorexit 4,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getKeyguardStoredQuality(I)I > 1,2 @44 exception:8,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 3,4,5,2 @6 exception:6,
8 = conversion(I) 7,
return 8,
conditional branch(ne, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPattern(I)Z > 11,2 @54 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPatternFilename(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 13,7,
conditional branch(lt, to iindex=-1) 9,17,
18 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPassword(I)Z > 18,2 @68 exception:19,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPasswordFilename(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,7,
26 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, pinOrPasswordQualityToCredentialType(I)I > 9 @74 exception:25,
3 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, isQualityAlphabeticPassword(I)Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, isQualityNumericPin(I)Z > 1 @8 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return 18,
return 26,
return 5,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public int getCredentialType(int p1){
	if (p1 != -9999) {
		if (p1 != -9999) {
			LockSettingsStorage$PersistentData v4 = this.mStorage.readPersistentDataBlock();
			if (LockSettingsStorage$PersistentData.type == 1) {
				if (LockSettingsStorage$PersistentData.type != 2) {
					boolean v3 = 0;
					if (v3 == 0) {
						long v6 = this.mStorage.getLong(""lockscreen.password_type"", 0, p1);
						int v5 = v6;
						if (v5 != 65536) {
							String v8 = LockSettingsStorage.getLockPatternFilename(p1);
							boolean v9 = LockSettingsStorage.hasFile(v8);
							boolean v7 = v9;
							if (v7 == 0) {
								if (v5 < 131072) {
									String v11 = LockSettingsStorage.getLockPasswordFilename(p1);
									boolean v12 = LockSettingsStorage.hasFile(v11);
									boolean v10 = v12;
									if (v10 == 0) {
										boolean v14 = LockPatternUtils.isQualityAlphabeticPassword(v5);
										if (v14 == 0) {
											boolean v15 = LockPatternUtils.isQualityNumericPin(v5);
											if (v15 == 0) {
												int v13 = 3;
												int v2 = v13;
												return v2;
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"
"Lcom/android/server/locksettings/LockSettingsService","getCredentialType(I)I","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordHavePermission(I)V > 1,2 @0 exception:3,
5 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getCredentialTypeInternal(I)I > 1,2 @3 exception:4,
conditional branch(ne, to iindex=-1) 2,3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, isSyntheticPasswordBasedCredentialLocked(I)Z > 1,2 @12 exception:5,
conditional branch(ne, to iindex=-1) 2,5,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, readPersistentDataBlock()Lcom/android/server/locksettings/LockSettingsStorage$PersistentData; > 11 @8 exception:12,
14 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStorage$PersistentData, type, <Primordial,I> > 13,
conditional branch(eq, to iindex=-1) 14,4,
conditional branch(ne, to iindex=-1) 14,15,
17 = phi  3,4,
return 17,
conditional branch(eq, to iindex=-1) 6,7,
monitorexit 4,
9 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getKeyguardStoredQuality(I)I > 1,2 @44 exception:8,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLong(Ljava/lang/String;JI)J > 3,4,5,2 @6 exception:6,
8 = conversion(I) 7,
return 8,
conditional branch(ne, to iindex=-1) 9,10,
11 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
13 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPattern(I)Z > 11,2 @54 exception:12,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPatternFilename(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 13,7,
conditional branch(lt, to iindex=-1) 9,17,
18 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStorage, <Application,Lcom/android/server/locksettings/LockSettingsStorage> > 1,
20 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasPassword(I)Z > 18,2 @68 exception:19,
4 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, getLockPasswordFilename(I)Ljava/lang/String; > 1,2 @0 exception:3,
6 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStorage, hasFile(Ljava/lang/String;)Z > 1,4 @4 exception:5,
return 6,
conditional branch(eq, to iindex=-1) 20,7,
26 = invokestatic < Application, Lcom/android/server/locksettings/LockSettingsService, pinOrPasswordQualityToCredentialType(I)I > 9 @74 exception:25,
3 = invokestatic < Application, Lcom/android/internal/widget/LockPatternUtils, isQualityAlphabeticPassword(I)Z > 1 @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return 19,
return 26,
return 5,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public int getCredentialType(int p1){
	if (p1 != -9999) {
		if (p1 != -9999) {
			LockSettingsStorage$PersistentData v4 = this.mStorage.readPersistentDataBlock();
			if (LockSettingsStorage$PersistentData.type == 1) {
				if (LockSettingsStorage$PersistentData.type != 2) {
					boolean v3 = 0;
					if (v3 == 0) {
						long v6 = this.mStorage.getLong(""lockscreen.password_type"", 0, p1);
						int v5 = v6;
						if (v5 != 65536) {
							String v8 = LockSettingsStorage.getLockPatternFilename(p1);
							boolean v9 = LockSettingsStorage.hasFile(v8);
							boolean v7 = v9;
							if (v7 == 0) {
								if (v5 < 131072) {
									String v11 = LockSettingsStorage.getLockPasswordFilename(p1);
									boolean v12 = LockSettingsStorage.hasFile(v11);
									boolean v10 = v12;
									if (v10 == 0) {
										boolean v14 = LockPatternUtils.isQualityAlphabeticPassword(v5);
										if (v14 == 0) {
											int v13 = 4;
											int v2 = v13;
											return v2;
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","DANGEROUS"

"Lcom/android/server/locksettings/LockSettingsService","recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map;","0","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map; > 5,2,3,4 @2 exception:6,
return 7,","depth : 0
-----
","public Map recoverKeyChainSnapshot(String p1, byte[] p2, List p3){
	Map v1 = this.mRecoverableKeyStoreManager.recoverKeyChainSnapshot(p1, p2, p3);
	return v1;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map;","1","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map; > 5,2,3,4 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:5,
7 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @3 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @7 exception:8,
10 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, get(ILjava/lang/String;)Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry; > 10,9,2 @13 exception:11,
conditional branch(eq, to iindex=-1) 12,13,
27 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, decryptRecoveryKey(Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry;[B)[B > 1,12,3 @19 exception:26,
29 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, recoverApplicationKeys([BLjava/util/List;)Ljava/util/Map; > 1,27,4 @23 exception:28,
31 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKeyMaterials(IILjava/util/Map;)Ljava/util/Map; > 1,7,9,29 @27 exception:30,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, destroy()V > 12 @31 exception:47,
48 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, remove(I)V > 48,9 @36 exception:49,
return 31,
return 7,","depth : 0
-----
depth : 1
-----
","public Map recoverKeyChainSnapshot(String p1, byte[] p2, List p3){
	int v3 = UserHandle.getCallingUserId();
	int v4 = Binder.getCallingUid();
	RecoverySessionStorage$Entry v5 = this.mRecoverySessionStorage.get(v4, p1);
	if (v5 == 0) {
		byte[] v6 = RecoverableKeyStoreManager.decryptRecoveryKey(v5, p2);
		Map v7 = RecoverableKeyStoreManager.recoverApplicationKeys(v6, p3);
		Map v8 = RecoverableKeyStoreManager.importKeyMaterials(v3, v4, v7);
		v5.destroy();
		this.mRecoverySessionStorage.remove(v4);
		Map v1 = v8;
		return v1;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map;","2","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map; > 5,2,3,4 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:5,
7 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @3 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @7 exception:8,
10 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, get(ILjava/lang/String;)Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry; > 10,9,2 @13 exception:11,
4 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, mSessionsByUid, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Ljava/util/ArrayList>6 <Application,Ljava/util/ArrayList>,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Ljava/util/ArrayList, iterator()Ljava/util/Iterator; > 7 @12 exception:9,
12 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 10 @22 exception:13,
15 = checkcast <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>14 <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>,
17 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, -$$Nest$fgetmSessionId(Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry;)Ljava/lang/String; > 15 @28 exception:16,
19 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,17 @32 exception:18,
conditional branch(eq, to iindex=-1) 19,8,
12 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 10 @22 exception:13,
15 = checkcast <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>14 <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>,
17 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, -$$Nest$fgetmSessionId(Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry;)Ljava/lang/String; > 15 @28 exception:16,
19 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,17 @32 exception:18,
conditional branch(eq, to iindex=-1) 19,8,
return 15,
conditional branch(eq, to iindex=-1) 12,13,
27 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, decryptRecoveryKey(Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry;[B)[B > 1,12,3 @19 exception:26,
9 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, getKeyClaimant()[B > 2 @8 exception:8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, getVaultParams()[B > 2 @12 exception:10,
13 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, decryptRecoveryClaimResponse([B[B[B)[B > 9,11,3 @16 exception:12,
54 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, getLskfHash()[B > 2 @20 exception:53,
56 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, decryptRecoveryKey([B[B)[B > 54,13 @24 exception:55,
return 56,
29 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, recoverApplicationKeys([BLjava/util/List;)Ljava/util/Map; > 1,27,4 @23 exception:28,
4 = new <Application,Ljava/util/HashMap>@0,
invokespecial < Application, Ljava/util/HashMap, <init>()V > 4 @2 exception:5,
7 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 3 @5 exception:6,
9 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 7 @9 exception:8,
conditional branch(eq, to iindex=-1) 9,12,
14 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 7 @19 exception:13,
15 = checkcast <Application,Landroid/security/keystore/recovery/WrappedApplicationKey>14 <Application,Landroid/security/keystore/recovery/WrappedApplicationKey>,
17 = invokevirtual < Application, Landroid/security/keystore/recovery/WrappedApplicationKey, getAlias()Ljava/lang/String; > 15 @25 exception:16,
19 = invokevirtual < Application, Landroid/security/keystore/recovery/WrappedApplicationKey, getEncryptedKeyMaterial()[B > 15 @29 exception:18,
21 = invokevirtual < Application, Landroid/security/keystore/recovery/WrappedApplicationKey, getMetadata()[B > 15 @33 exception:20,
23 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, decryptApplicationKey([B[B[B)[B > 2,19,21 @37 exception:22,
25 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 4,17,23 @41 exception:24,
goto (from iindex= 21 to iindex = -35),
9 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 7 @9 exception:8,
conditional branch(eq, to iindex=-1) 9,12,
47 = invokeinterface < Application, Ljava/util/List, isEmpty()Z > 3 @141 exception:46,
conditional branch(ne, to iindex=-1) 47,12,
49 = invokevirtual < Application, Ljava/util/HashMap, isEmpty()Z > 4 @147 exception:48,
conditional branch(ne, to iindex=-1) 49,12,
goto (from iindex= 71 to iindex = 12),
return 4,
31 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKeyMaterials(IILjava/util/Map;)Ljava/util/Map; > 1,7,9,29 @27 exception:30,
5 = new <Application,Landroid/util/ArrayMap>@0,
7 = invokeinterface < Application, Ljava/util/Map, size()I > 4 @2 exception:6,
invokespecial < Application, Landroid/util/ArrayMap, <init>(I)V > 5,7 @6 exception:8,
10 = invokeinterface < Application, Ljava/util/Map, keySet()Ljava/util/Set; > 4 @9 exception:9,
12 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 10 @13 exception:11,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @17 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 12 @23 exception:16,
18 = checkcast <Application,Ljava/lang/String>17 <Application,Ljava/lang/String>,
19 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
21 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 4,18 @31 exception:20,
22 = checkcast <Primordial,[B>21 <Primordial,[B>,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 19,2,3,18,22 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,2,3,18 @40 exception:24,
26 = getstatic < Application, Ljava/util/Locale, US, <Application,Ljava/util/Locale> >,
28 = new <Application,[Ljava/lang/Object>@4727 ,
arraystore 28[15] = 18,
arraystore 28[29] = 25,
32 = invokestatic < Application, Ljava/lang/String, format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 26,30,28 @57 exception:31,
35 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 33,32 @63 exception:34,
37 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 5,18,25 @66 exception:36,
goto (from iindex= 34 to iindex = -52),
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @17 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
return 5,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, destroy()V > 12 @31 exception:47,
2 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, mLskfHash, <Primordial,[B> > 1,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 2,3 @3 exception:4,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, mKeyClaimant, <Primordial,[B> > 1,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 5,3 @8 exception:6,
return,
48 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, remove(I)V > 48,9 @36 exception:49,
3 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, mSessionsByUid, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Ljava/util/ArrayList>5 <Application,Ljava/util/ArrayList>,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Ljava/util/ArrayList, iterator()Ljava/util/Iterator; > 6 @11 exception:8,
11 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
13 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 9 @21 exception:12,
14 = checkcast <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>13 <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, destroy()V > 14 @27 exception:15,
goto (from iindex= 15 to iindex = -15),
11 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
18 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, mSessionsByUid, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, remove(I)V > 18,2 @33 exception:19,
return,
return 31,
return 7,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public Map recoverKeyChainSnapshot(String p1, byte[] p2, List p3){
	int v3 = UserHandle.getCallingUserId();
	int v4 = Binder.getCallingUid();
	Object v6 = this.mSessionsByUid.get(v4);
	if (v6 != 0) {
		Iterator v7 = v6.iterator();
		boolean v8 = v7.hasNext();
		if (v8 == 0) {
			Object v9 = v7.next();
			String v10 = RecoverySessionStorage$Entry.-$$Nest$fgetmSessionId(v9);
			boolean v11 = p1.equals(v10);
			if (v11 == 0) {
				boolean v12 = v7.hasNext();
				if (v12 == 0) {
					Object v13 = v7.next();
					String v14 = RecoverySessionStorage$Entry.-$$Nest$fgetmSessionId(v13);
					boolean v15 = p1.equals(v14);
					if (v15 == 0) {
						RecoverySessionStorage$Entry v5 = v13;
						if (v5 == 0) {
							byte[] v17 = v5.getKeyClaimant();
							byte[] v18 = v5.getVaultParams();
							byte[] v19 = KeySyncUtils.decryptRecoveryClaimResponse(v17, v18, p2);
							byte[] v20 = v5.getLskfHash();
							byte[] v21 = KeySyncUtils.decryptRecoveryKey(v20, v19);
							byte[] v16 = v21;
							HashMap v23 = new HashMap();
							Iterator v25 = p3.iterator();
							boolean v26 = v25.hasNext();
							if (v26 == 0) {
								Object v27 = v25.next();
								String v28 = v27.getAlias();
								byte[] v29 = v27.getEncryptedKeyMaterial();
								byte[] v30 = v27.getMetadata();
								byte[] v31 = KeySyncUtils.decryptApplicationKey(v16, v29, v30);
								Object v32 = v23.put(v28, v31);
								boolean v33 = v25.hasNext();
								if (v33 == 0) {
									boolean v34 = p3.isEmpty();
									if (v34 != 0) {
										boolean v35 = v23.isEmpty();
										if (v35 != 0) {
											Map v22 = v23;
											ArrayMap v37 = new ArrayMap(v38);
											int v38 = v22.size();
											Set v40 = v22.keySet();
											Iterator v41 = v40.iterator();
											boolean v42 = v41.hasNext();
											if (v42 == 0) {
												Object v43 = v41.next();
												Object v44 = v22.get(v43);
												this.mApplicationKeyStorage.setSymmetricKeyEntry(v3, v4, v43, v44);
												String v46 = RecoverableKeyStoreManager.getAlias(v3, v4, v43);
												Object v50 = v37.put(v43, v46);
												boolean v51 = v41.hasNext();
												if (v51 == 0) {
													Map v36 = v37;
													Arrays.fill(this.mLskfHash, 0);
													Arrays.fill(this.mKeyClaimant, 0);
													Object v56 = this.mSessionsByUid.get(v4);
													if (v56 != 0) {
														Iterator v57 = v56.iterator();
														boolean v58 = v57.hasNext();
														if (v58 == 0) {
															Object v59 = v57.next();
															v59.destroy();
															boolean v61 = v57.hasNext();
															if (v61 == 0) {
																this.mSessionsByUid.remove(v4);
																Map v1 = v36;
																return v1;
															}
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map;","2","5 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mRecoverableKeyStoreManager, <Application,Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager> > 1,
7 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, recoverKeyChainSnapshot(Ljava/lang/String;[BLjava/util/List;)Ljava/util/Map; > 5,2,3,4 @2 exception:6,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, checkRecoverKeyStorePermission()V > 1 @0 exception:5,
7 = invokestatic < Application, Landroid/os/UserHandle, getCallingUserId()I > @3 exception:6,
9 = invokestatic < Application, Landroid/os/Binder, getCallingUid()I > @7 exception:8,
10 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
12 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, get(ILjava/lang/String;)Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry; > 10,9,2 @13 exception:11,
4 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, mSessionsByUid, <Application,Landroid/util/SparseArray> > 1,
6 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 4,2 @2 exception:5,
7 = checkcast <Application,Ljava/util/ArrayList>6 <Application,Ljava/util/ArrayList>,
conditional branch(ne, to iindex=-1) 7,8,
10 = invokevirtual < Application, Ljava/util/ArrayList, iterator()Ljava/util/Iterator; > 7 @12 exception:9,
12 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
14 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 10 @22 exception:13,
15 = checkcast <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>14 <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>,
17 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, -$$Nest$fgetmSessionId(Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry;)Ljava/lang/String; > 15 @28 exception:16,
19 = invokevirtual < Application, Ljava/lang/String, equals(Ljava/lang/Object;)Z > 3,17 @32 exception:18,
conditional branch(eq, to iindex=-1) 19,8,
12 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 10 @16 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
return 8,
conditional branch(eq, to iindex=-1) 12,13,
27 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, decryptRecoveryKey(Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry;[B)[B > 1,12,3 @19 exception:26,
9 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, getKeyClaimant()[B > 2 @8 exception:8,
11 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, getVaultParams()[B > 2 @12 exception:10,
13 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, decryptRecoveryClaimResponse([B[B[B)[B > 9,11,3 @16 exception:12,
54 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, getLskfHash()[B > 2 @20 exception:53,
56 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, decryptRecoveryKey([B[B)[B > 54,13 @24 exception:55,
return 56,
29 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, recoverApplicationKeys([BLjava/util/List;)Ljava/util/Map; > 1,27,4 @23 exception:28,
4 = new <Application,Ljava/util/HashMap>@0,
invokespecial < Application, Ljava/util/HashMap, <init>()V > 4 @2 exception:5,
7 = invokeinterface < Application, Ljava/util/List, iterator()Ljava/util/Iterator; > 3 @5 exception:6,
9 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 7 @9 exception:8,
conditional branch(eq, to iindex=-1) 9,12,
14 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 7 @19 exception:13,
15 = checkcast <Application,Landroid/security/keystore/recovery/WrappedApplicationKey>14 <Application,Landroid/security/keystore/recovery/WrappedApplicationKey>,
17 = invokevirtual < Application, Landroid/security/keystore/recovery/WrappedApplicationKey, getAlias()Ljava/lang/String; > 15 @25 exception:16,
19 = invokevirtual < Application, Landroid/security/keystore/recovery/WrappedApplicationKey, getEncryptedKeyMaterial()[B > 15 @29 exception:18,
21 = invokevirtual < Application, Landroid/security/keystore/recovery/WrappedApplicationKey, getMetadata()[B > 15 @33 exception:20,
23 = invokestatic < Application, Lcom/android/server/locksettings/recoverablekeystore/KeySyncUtils, decryptApplicationKey([B[B[B)[B > 2,19,21 @37 exception:22,
25 = invokevirtual < Application, Ljava/util/HashMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 4,17,23 @41 exception:24,
goto (from iindex= 21 to iindex = -35),
9 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 7 @9 exception:8,
conditional branch(eq, to iindex=-1) 9,12,
47 = invokeinterface < Application, Ljava/util/List, isEmpty()Z > 3 @141 exception:46,
conditional branch(ne, to iindex=-1) 47,12,
49 = invokevirtual < Application, Ljava/util/HashMap, isEmpty()Z > 4 @147 exception:48,
conditional branch(ne, to iindex=-1) 49,12,
goto (from iindex= 71 to iindex = 12),
return 4,
31 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, importKeyMaterials(IILjava/util/Map;)Ljava/util/Map; > 1,7,9,29 @27 exception:30,
5 = new <Application,Landroid/util/ArrayMap>@0,
7 = invokeinterface < Application, Ljava/util/Map, size()I > 4 @2 exception:6,
invokespecial < Application, Landroid/util/ArrayMap, <init>(I)V > 5,7 @6 exception:8,
10 = invokeinterface < Application, Ljava/util/Map, keySet()Ljava/util/Set; > 4 @9 exception:9,
12 = invokeinterface < Application, Ljava/util/Set, iterator()Ljava/util/Iterator; > 10 @13 exception:11,
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @17 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
17 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 12 @23 exception:16,
18 = checkcast <Application,Ljava/lang/String>17 <Application,Ljava/lang/String>,
19 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mApplicationKeyStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage> > 1,
21 = invokeinterface < Application, Ljava/util/Map, get(Ljava/lang/Object;)Ljava/lang/Object; > 4,18 @31 exception:20,
22 = checkcast <Primordial,[B>21 <Primordial,[B>,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/ApplicationKeyStorage, setSymmetricKeyEntry(IILjava/lang/String;[B)V > 19,2,3,18,22 @37 exception:23,
25 = invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, getAlias(IILjava/lang/String;)Ljava/lang/String; > 1,2,3,18 @40 exception:24,
26 = getstatic < Application, Ljava/util/Locale, US, <Application,Ljava/util/Locale> >,
28 = new <Application,[Ljava/lang/Object>@4727 ,
arraystore 28[15] = 18,
arraystore 28[29] = 25,
32 = invokestatic < Application, Ljava/lang/String, format(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String; > 26,30,28 @57 exception:31,
35 = invokestatic < Application, Landroid/util/Log, i(Ljava/lang/String;Ljava/lang/String;)I > 33,32 @63 exception:34,
37 = invokevirtual < Application, Landroid/util/ArrayMap, put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object; > 5,18,25 @66 exception:36,
goto (from iindex= 34 to iindex = -52),
14 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 12 @17 exception:13,
conditional branch(eq, to iindex=-1) 14,15,
return 5,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, destroy()V > 12 @31 exception:47,
2 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, mLskfHash, <Primordial,[B> > 1,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 2,3 @3 exception:4,
5 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, mKeyClaimant, <Primordial,[B> > 1,
invokestatic < Application, Ljava/util/Arrays, fill([BB)V > 5,3 @8 exception:6,
return,
48 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/RecoverableKeyStoreManager, mRecoverySessionStorage, <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, remove(I)V > 48,9 @36 exception:49,
3 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, mSessionsByUid, <Application,Landroid/util/SparseArray> > 1,
5 = invokevirtual < Application, Landroid/util/SparseArray, get(I)Ljava/lang/Object; > 3,2 @2 exception:4,
6 = checkcast <Application,Ljava/util/ArrayList>5 <Application,Ljava/util/ArrayList>,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Ljava/util/ArrayList, iterator()Ljava/util/Iterator; > 6 @11 exception:8,
11 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
13 = invokeinterface < Application, Ljava/util/Iterator, next()Ljava/lang/Object; > 9 @21 exception:12,
14 = checkcast <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>13 <Application,Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry>,
invokevirtual < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage$Entry, destroy()V > 14 @27 exception:15,
goto (from iindex= 15 to iindex = -15),
11 = invokeinterface < Application, Ljava/util/Iterator, hasNext()Z > 9 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
18 = getfield < Application, Lcom/android/server/locksettings/recoverablekeystore/storage/RecoverySessionStorage, mSessionsByUid, <Application,Landroid/util/SparseArray> > 1,
invokevirtual < Application, Landroid/util/SparseArray, remove(I)V > 18,2 @33 exception:19,
return,
return 31,
return 7,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public Map recoverKeyChainSnapshot(String p1, byte[] p2, List p3){
	int v3 = UserHandle.getCallingUserId();
	int v4 = Binder.getCallingUid();
	Object v6 = this.mSessionsByUid.get(v4);
	if (v6 != 0) {
		Iterator v7 = v6.iterator();
		boolean v8 = v7.hasNext();
		if (v8 == 0) {
			Object v9 = v7.next();
			String v10 = RecoverySessionStorage$Entry.-$$Nest$fgetmSessionId(v9);
			boolean v11 = p1.equals(v10);
			if (v11 == 0) {
				boolean v12 = v7.hasNext();
				if (v12 == 0) {
					RecoverySessionStorage$Entry v5 = 0;
					if (v5 == 0) {
						byte[] v14 = v5.getKeyClaimant();
						byte[] v15 = v5.getVaultParams();
						byte[] v16 = KeySyncUtils.decryptRecoveryClaimResponse(v14, v15, p2);
						byte[] v17 = v5.getLskfHash();
						byte[] v18 = KeySyncUtils.decryptRecoveryKey(v17, v16);
						byte[] v13 = v18;
						HashMap v20 = new HashMap();
						Iterator v22 = p3.iterator();
						boolean v23 = v22.hasNext();
						if (v23 == 0) {
							Object v24 = v22.next();
							String v25 = v24.getAlias();
							byte[] v26 = v24.getEncryptedKeyMaterial();
							byte[] v27 = v24.getMetadata();
							byte[] v28 = KeySyncUtils.decryptApplicationKey(v13, v26, v27);
							Object v29 = v20.put(v25, v28);
							boolean v30 = v22.hasNext();
							if (v30 == 0) {
								boolean v31 = p3.isEmpty();
								if (v31 != 0) {
									boolean v32 = v20.isEmpty();
									if (v32 != 0) {
										Map v19 = v20;
										ArrayMap v34 = new ArrayMap(v35);
										int v35 = v19.size();
										Set v37 = v19.keySet();
										Iterator v38 = v37.iterator();
										boolean v39 = v38.hasNext();
										if (v39 == 0) {
											Object v40 = v38.next();
											Object v41 = v19.get(v40);
											this.mApplicationKeyStorage.setSymmetricKeyEntry(v3, v4, v40, v41);
											String v43 = RecoverableKeyStoreManager.getAlias(v3, v4, v40);
											Object v47 = v34.put(v40, v43);
											boolean v48 = v38.hasNext();
											if (v48 == 0) {
												Map v33 = v34;
												Arrays.fill(this.mLskfHash, 0);
												Arrays.fill(this.mKeyClaimant, 0);
												Object v53 = this.mSessionsByUid.get(v4);
												if (v53 != 0) {
													Iterator v54 = v53.iterator();
													boolean v55 = v54.hasNext();
													if (v55 == 0) {
														Object v56 = v54.next();
														v56.destroy();
														boolean v58 = v54.hasNext();
														if (v58 == 0) {
															this.mSessionsByUid.remove(v4);
															Map v1 = v33;
															return v1;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V > 4,2 @5 exception:5,
return,","depth : 0
-----
","public void unregisterStrongAuthTracker(IStrongAuthTracker p1){
	this.mStrongAuth.unregisterStrongAuthTracker(p1);
	return;
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:3,
4 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mStrongAuth, <Application,Lcom/android/server/locksettings/LockSettingsStrongAuth> > 1,
invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, unregisterStrongAuthTracker(Landroid/app/trust/IStrongAuthTracker;)V > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/locksettings/LockSettingsStrongAuth, mHandler, <Application,Landroid/os/Handler> > 1,
6 = invokevirtual < Application, Landroid/os/Handler, obtainMessage(ILjava/lang/Object;)Landroid/os/Message; > 3,4,2 @3 exception:5,
invokevirtual < Application, Landroid/os/Message, sendToTarget()V > 6 @7 exception:7,
return,
return,","depth : 0
-----
depth : 1
-----
","public void unregisterStrongAuthTracker(IStrongAuthTracker p1){
	Message v3 = this.mHandler.obtainMessage(3, p1);
	v3.sendToTarget();
	return;
}
","SYS_OR_SIG"

"Lcom/android/server/locksettings/LockSettingsService","verifyGatekeeperPasswordHandle(JJI)Lcom/android/internal/widget/VerifyCredentialResponse;","0","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/LongSparseArray, get(J)Ljava/lang/Object; > 7,2 @8 exception:8,
10 = checkcast <Primordial,[B>9 <Primordial,[B>,
monitorexit 6,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 15,
conditional branch(ne, to iindex=-1) 10,16,
25 = invokestatic < Application, Landroid/util/Slog, d(Ljava/lang/String;Ljava/lang/String;)I > 22,23 @25 exception:24,
26 = getstatic < Application, Lcom/android/internal/widget/VerifyCredentialResponse, ERROR, <Application,Lcom/android/internal/widget/VerifyCredentialResponse> >,
goto (from iindex= 16 to iindex = 13),
28 = phi  26,21,
monitorexit 15,
return 28,","depth : 0
-----
","public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v2 = this.mGatekeeperPasswords.get(p1);
	if (v2 != 0) {
		return VerifyCredentialResponse.ERROR;
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","verifyGatekeeperPasswordHandle(JJI)Lcom/android/internal/widget/VerifyCredentialResponse;","1","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/LongSparseArray, get(J)Ljava/lang/Object; > 7,2 @8 exception:8,
10 = checkcast <Primordial,[B>9 <Primordial,[B>,
monitorexit 6,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 15,
conditional branch(ne, to iindex=-1) 10,16,
17 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @33 exception:18,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 17,19,10,3,4 @39 exception:20,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSyntheticPasswordHandle(I)[B > 1,5 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,4,8,3 @15 exception:10,
26 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 11 @19 exception:25,
conditional branch(ne, to iindex=-1) 26,9,
33 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse$Builder>@25,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, <init>()V > 33 @27 exception:34,
36 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 11 @30 exception:35,
38 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, setGatekeeperHAT([B)Lcom/android/internal/widget/VerifyCredentialResponse$Builder; > 33,36 @34 exception:37,
40 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, build()Lcom/android/internal/widget/VerifyCredentialResponse; > 38 @38 exception:39,
42 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 11 @42 exception:41,
conditional branch(eq, to iindex=-1) 42,9,
44 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, enroll(I[B[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,8,8,3 @48 exception:43,
goto (from iindex= 29 to iindex = 9),
50 = phi  44,49,
55 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 50 @61 exception:54,
conditional branch(ne, to iindex=-1) 55,9,
74 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 50 @67 exception:73,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveSyntheticPasswordHandle([BI)V > 1,74,5 @71 exception:75,
77 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @74 exception:76,
return 77,
28 = phi  26,21,
monitorexit 15,
return 28,","depth : 0
-----
depth : 1
-----
depth : 1
-----
","public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v2 = this.mGatekeeperPasswords.get(p1);
	if (v2 != 0) {
		if (this.mGateKeeperService == 0) {
			IBinder v4 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
			if (v4 == 0) {
				LockSettingsService$GateKeeperDiedRecipient v5 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
				v4.linkToDeath(v5, 0);
				IGateKeeperService v8 = IGateKeeperService$Stub.asInterface(v4);
				this.mGateKeeperService = v8;
				IGateKeeperService v3 = v8;
				byte[] v10 = SyntheticPasswordManager.loadSyntheticPasswordHandle(p3);
				if (v10 != 0) {
					GateKeeperResponse v11 = v3.verifyChallenge(p3, p2, v10, v2);
					int v12 = v11.getResponseCode();
					if (v12 != 0) {
						VerifyCredentialResponse$Builder v13 = new VerifyCredentialResponse$Builder();
						byte[] v15 = v11.getPayload();
						VerifyCredentialResponse$Builder v16 = v13.setGatekeeperHAT(v15);
						VerifyCredentialResponse v17 = v16.build();
						boolean v18 = v11.getShouldReEnroll();
						if (v18 == 0) {
							GateKeeperResponse v19 = v3.enroll(p3, v10, v10, v2);
							int v20 = v19.getResponseCode();
							if (v20 != 0) {
								byte[] v21 = v19.getPayload();
								SyntheticPasswordManager.saveSyntheticPasswordHandle(v21, p3);
								VerifyCredentialResponse v23 = SyntheticPasswordManager.verifyChallengeInternal(v3, v2, p2, p3);
								VerifyCredentialResponse v9 = v23;
								return ERROR;
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","verifyGatekeeperPasswordHandle(JJI)Lcom/android/internal/widget/VerifyCredentialResponse;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/LongSparseArray, get(J)Ljava/lang/Object; > 7,2 @8 exception:8,
10 = checkcast <Primordial,[B>9 <Primordial,[B>,
monitorexit 6,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 15,
conditional branch(ne, to iindex=-1) 10,16,
17 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @33 exception:18,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
7 = new <Application,Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy>@20,
invokespecial < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub$Proxy, <init>(Landroid/os/IBinder;)V > 7,1 @22 exception:8,
return 7,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 17,19,10,3,4 @39 exception:20,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSyntheticPasswordHandle(I)[B > 1,5 @2 exception:7,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,3,4,2 @4 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,4,8,3 @15 exception:10,
26 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 11 @19 exception:25,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 26,9,
33 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse$Builder>@25,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, <init>()V > 33 @27 exception:34,
36 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 11 @30 exception:35,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mPayload, <Primordial,[B> > 1,
return 2,
38 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, setGatekeeperHAT([B)Lcom/android/internal/widget/VerifyCredentialResponse$Builder; > 33,36 @34 exception:37,
putfield 1.< Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, mGatekeeperHAT, <Primordial,[B> > = 2,
return 1,
40 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, build()Lcom/android/internal/widget/VerifyCredentialResponse; > 38 @38 exception:39,
2 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse>@0,
3 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, mGatekeeperHAT, <Primordial,[B> > 1,
4 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, mGatekeeperPasswordHandle, <Primordial,J> > 1,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse, <init>(II[BJLcom/android/internal/widget/VerifyCredentialResponse-IA;)V > 2,5,5,3,4,5 @10 exception:6,
return 2,
42 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 11 @42 exception:41,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mShouldReEnroll, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 42,9,
44 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, enroll(I[B[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,8,8,3 @48 exception:43,
goto (from iindex= 29 to iindex = 9),
50 = phi  44,49,
55 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 50 @61 exception:54,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 55,9,
74 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 50 @67 exception:73,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mPayload, <Primordial,[B> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveSyntheticPasswordHandle([BI)V > 1,74,5 @71 exception:75,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveState(Ljava/lang/String;[BJI)V > 1,4,2,5,3 @7 exception:6,
return,
77 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @74 exception:76,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSyntheticPasswordHandle(I)[B > 1,5 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,4,8,3 @15 exception:10,
26 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 11 @19 exception:25,
conditional branch(ne, to iindex=-1) 26,9,
33 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse$Builder>@25,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, <init>()V > 33 @27 exception:34,
36 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 11 @30 exception:35,
38 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, setGatekeeperHAT([B)Lcom/android/internal/widget/VerifyCredentialResponse$Builder; > 33,36 @34 exception:37,
40 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, build()Lcom/android/internal/widget/VerifyCredentialResponse; > 38 @38 exception:39,
42 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 11 @42 exception:41,
conditional branch(eq, to iindex=-1) 42,9,
44 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, enroll(I[B[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,8,8,3 @48 exception:43,
goto (from iindex= 29 to iindex = 9),
50 = phi  44,49,
55 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 50 @61 exception:54,
conditional branch(ne, to iindex=-1) 55,9,
74 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 50 @67 exception:73,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveSyntheticPasswordHandle([BI)V > 1,74,5 @71 exception:75,
77 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @74 exception:76,
return 77,
28 = phi  26,21,
monitorexit 15,
return 28,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v2 = this.mGatekeeperPasswords.get(p1);
	if (v2 != 0) {
		if (this.mGateKeeperService == 0) {
			IBinder v4 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
			if (v4 == 0) {
				LockSettingsService$GateKeeperDiedRecipient v5 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
				v4.linkToDeath(v5, 0);
				if (v4 != 0) {
					IInterface v9 = v4.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
					if (v9 == 0) {
						if (v9 instanceof IGateKeeperService == 0) {
							IGateKeeperService$Stub$Proxy v10 = new IGateKeeperService$Stub$Proxy(v4);
							IGateKeeperService v8 = v10;
							this.mGateKeeperService = v8;
							IGateKeeperService v3 = v8;
							byte[] v14 = SyntheticPasswordManager.loadState(""handle"", 0, p3);
							byte[] v13 = v14;
							if (v13 != 0) {
								GateKeeperResponse v15 = v3.verifyChallenge(p3, p2, v13, v2);
								int v16 = this.mResponseCode;
								if (v16 != 0) {
									VerifyCredentialResponse$Builder v17 = new VerifyCredentialResponse$Builder();
									byte[] v19 = this.mPayload;
									this.mGatekeeperHAT = v19;
									VerifyCredentialResponse$Builder v20 = VerifyCredentialResponse$Builder;
									VerifyCredentialResponse v22 = new VerifyCredentialResponse(0,0,this.mGatekeeperHAT,this.mGatekeeperPasswordHandle,0);
									VerifyCredentialResponse v21 = v22;
									boolean v24 = this.mShouldReEnroll;
									if (v24 == 0) {
										GateKeeperResponse v25 = v3.enroll(p3, v13, v13, v2);
										int v26 = this.mResponseCode;
										if (v26 != 0) {
											byte[] v27 = this.mPayload;
											SyntheticPasswordManager.saveState(""handle"", v27, 0, p3);
											VerifyCredentialResponse v30 = SyntheticPasswordManager.verifyChallengeInternal(v3, v2, p2, p3);
											byte[] v31 = SyntheticPasswordManager.loadSyntheticPasswordHandle(p3);
											if (v31 != 0) {
												GateKeeperResponse v32 = v3.verifyChallenge(p3, p2, v31, v2);
												int v33 = v32.getResponseCode();
												if (v33 != 0) {
													VerifyCredentialResponse$Builder v34 = new VerifyCredentialResponse$Builder();
													byte[] v36 = v32.getPayload();
													VerifyCredentialResponse$Builder v37 = v34.setGatekeeperHAT(v36);
													VerifyCredentialResponse v38 = v37.build();
													boolean v39 = v32.getShouldReEnroll();
													if (v39 == 0) {
														GateKeeperResponse v40 = v3.enroll(p3, v31, v31, v2);
														int v41 = v40.getResponseCode();
														if (v41 != 0) {
															byte[] v42 = v40.getPayload();
															SyntheticPasswordManager.saveSyntheticPasswordHandle(v42, p3);
															VerifyCredentialResponse v44 = SyntheticPasswordManager.verifyChallengeInternal(v3, v2, p2, p3);
															VerifyCredentialResponse v12 = v44;
															return ERROR;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","verifyGatekeeperPasswordHandle(JJI)Lcom/android/internal/widget/VerifyCredentialResponse;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/LongSparseArray, get(J)Ljava/lang/Object; > 7,2 @8 exception:8,
10 = checkcast <Primordial,[B>9 <Primordial,[B>,
monitorexit 6,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 15,
conditional branch(ne, to iindex=-1) 10,16,
17 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @33 exception:18,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
5 = invokeinterface < Application, Landroid/os/IBinder, queryLocalInterface(Ljava/lang/String;)Landroid/os/IInterface; > 1,3 @6 exception:4,
conditional branch(eq, to iindex=-1) 5,2,
6 = instanceof 5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
conditional branch(eq, to iindex=-1) 6,2,
9 = checkcast <Application,Landroid/service/gatekeeper/IGateKeeperService>5 <Application,Landroid/service/gatekeeper/IGateKeeperService>,
return 9,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 17,19,10,3,4 @39 exception:20,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSyntheticPasswordHandle(I)[B > 1,5 @2 exception:7,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,3,4,2 @4 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,4,8,3 @15 exception:10,
26 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 11 @19 exception:25,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 26,9,
33 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse$Builder>@25,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, <init>()V > 33 @27 exception:34,
36 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 11 @30 exception:35,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mPayload, <Primordial,[B> > 1,
return 2,
38 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, setGatekeeperHAT([B)Lcom/android/internal/widget/VerifyCredentialResponse$Builder; > 33,36 @34 exception:37,
putfield 1.< Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, mGatekeeperHAT, <Primordial,[B> > = 2,
return 1,
40 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, build()Lcom/android/internal/widget/VerifyCredentialResponse; > 38 @38 exception:39,
2 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse>@0,
3 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, mGatekeeperHAT, <Primordial,[B> > 1,
4 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, mGatekeeperPasswordHandle, <Primordial,J> > 1,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse, <init>(II[BJLcom/android/internal/widget/VerifyCredentialResponse-IA;)V > 2,5,5,3,4,5 @10 exception:6,
return 2,
42 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 11 @42 exception:41,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mShouldReEnroll, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 42,9,
44 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, enroll(I[B[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,8,8,3 @48 exception:43,
goto (from iindex= 29 to iindex = 9),
50 = phi  44,49,
55 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 50 @61 exception:54,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 55,9,
74 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 50 @67 exception:73,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mPayload, <Primordial,[B> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveSyntheticPasswordHandle([BI)V > 1,74,5 @71 exception:75,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveState(Ljava/lang/String;[BJI)V > 1,4,2,5,3 @7 exception:6,
return,
77 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @74 exception:76,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSyntheticPasswordHandle(I)[B > 1,5 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,4,8,3 @15 exception:10,
26 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 11 @19 exception:25,
conditional branch(ne, to iindex=-1) 26,9,
33 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse$Builder>@25,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, <init>()V > 33 @27 exception:34,
36 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 11 @30 exception:35,
38 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, setGatekeeperHAT([B)Lcom/android/internal/widget/VerifyCredentialResponse$Builder; > 33,36 @34 exception:37,
40 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, build()Lcom/android/internal/widget/VerifyCredentialResponse; > 38 @38 exception:39,
42 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 11 @42 exception:41,
conditional branch(eq, to iindex=-1) 42,9,
44 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, enroll(I[B[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,8,8,3 @48 exception:43,
goto (from iindex= 29 to iindex = 9),
50 = phi  44,49,
55 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 50 @61 exception:54,
conditional branch(ne, to iindex=-1) 55,9,
74 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 50 @67 exception:73,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveSyntheticPasswordHandle([BI)V > 1,74,5 @71 exception:75,
77 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @74 exception:76,
return 77,
28 = phi  26,21,
monitorexit 15,
return 28,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v2 = this.mGatekeeperPasswords.get(p1);
	if (v2 != 0) {
		if (this.mGateKeeperService == 0) {
			IBinder v4 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
			if (v4 == 0) {
				LockSettingsService$GateKeeperDiedRecipient v5 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
				v4.linkToDeath(v5, 0);
				if (v4 != 0) {
					IInterface v9 = v4.queryLocalInterface(""android.service.gatekeeper.IGateKeeperService"");
					if (v9 == 0) {
						if (v9 instanceof IGateKeeperService == 0) {
							IGateKeeperService v8 = v9;
							this.mGateKeeperService = v8;
							IGateKeeperService v3 = v8;
							byte[] v12 = SyntheticPasswordManager.loadState(""handle"", 0, p3);
							byte[] v11 = v12;
							if (v11 != 0) {
								GateKeeperResponse v13 = v3.verifyChallenge(p3, p2, v11, v2);
								int v14 = this.mResponseCode;
								if (v14 != 0) {
									VerifyCredentialResponse$Builder v15 = new VerifyCredentialResponse$Builder();
									byte[] v17 = this.mPayload;
									this.mGatekeeperHAT = v17;
									VerifyCredentialResponse$Builder v18 = VerifyCredentialResponse$Builder;
									VerifyCredentialResponse v20 = new VerifyCredentialResponse(0,0,this.mGatekeeperHAT,this.mGatekeeperPasswordHandle,0);
									VerifyCredentialResponse v19 = v20;
									boolean v22 = this.mShouldReEnroll;
									if (v22 == 0) {
										GateKeeperResponse v23 = v3.enroll(p3, v11, v11, v2);
										int v24 = this.mResponseCode;
										if (v24 != 0) {
											byte[] v25 = this.mPayload;
											SyntheticPasswordManager.saveState(""handle"", v25, 0, p3);
											VerifyCredentialResponse v28 = SyntheticPasswordManager.verifyChallengeInternal(v3, v2, p2, p3);
											byte[] v29 = SyntheticPasswordManager.loadSyntheticPasswordHandle(p3);
											if (v29 != 0) {
												GateKeeperResponse v30 = v3.verifyChallenge(p3, p2, v29, v2);
												int v31 = v30.getResponseCode();
												if (v31 != 0) {
													VerifyCredentialResponse$Builder v32 = new VerifyCredentialResponse$Builder();
													byte[] v34 = v30.getPayload();
													VerifyCredentialResponse$Builder v35 = v32.setGatekeeperHAT(v34);
													VerifyCredentialResponse v36 = v35.build();
													boolean v37 = v30.getShouldReEnroll();
													if (v37 == 0) {
														GateKeeperResponse v38 = v3.enroll(p3, v29, v29, v2);
														int v39 = v38.getResponseCode();
														if (v39 != 0) {
															byte[] v40 = v38.getPayload();
															SyntheticPasswordManager.saveSyntheticPasswordHandle(v40, p3);
															VerifyCredentialResponse v42 = SyntheticPasswordManager.verifyChallengeInternal(v3, v2, p2, p3);
															VerifyCredentialResponse v10 = v42;
															return ERROR;
														}
													}
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"
"Lcom/android/server/locksettings/LockSettingsService","verifyGatekeeperPasswordHandle(JJI)Lcom/android/internal/widget/VerifyCredentialResponse;","2","invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, checkPasswordReadPermission()V > 1 @0 exception:5,
6 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGatekeeperPasswords, <Application,Landroid/util/LongSparseArray> > 1,
9 = invokevirtual < Application, Landroid/util/LongSparseArray, get(J)Ljava/lang/Object; > 7,2 @8 exception:8,
10 = checkcast <Primordial,[B>9 <Primordial,[B>,
monitorexit 6,
15 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
monitorenter 15,
conditional branch(ne, to iindex=-1) 10,16,
17 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mSpManager, <Application,Lcom/android/server/locksettings/SyntheticPasswordManager> > 1,
19 = invokevirtual < Application, Lcom/android/server/locksettings/LockSettingsService, getGateKeeperService()Landroid/service/gatekeeper/IGateKeeperService; > 1 @33 exception:18,
monitorenter 1,
2 = getfield < Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > 1,
conditional branch(eq, to iindex=-1) 2,3,
6 = invokestatic < Application, Landroid/os/ServiceManager, getService(Ljava/lang/String;)Landroid/os/IBinder; > 4 @9 exception:5,
conditional branch(eq, to iindex=-1) 6,3,
11 = new <Application,Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient>@16,
invokespecial < Application, Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient, <init>(Lcom/android/server/locksettings/LockSettingsService;Lcom/android/server/locksettings/LockSettingsService$GateKeeperDiedRecipient-IA;)V > 11,1,3 @18 exception:12,
invokeinterface < Application, Landroid/os/IBinder, linkToDeath(Landroid/os/IBinder$DeathRecipient;I)V > 6,11,3 @22 exception:13,
goto (from iindex= 14 to iindex = 9),
23 = invokestatic < Application, Landroid/service/gatekeeper/IGateKeeperService$Stub, asInterface(Landroid/os/IBinder;)Landroid/service/gatekeeper/IGateKeeperService; > 6 @34 exception:22,
conditional branch(ne, to iindex=-1) 1,2,
return 2,
putfield 1.< Application, Lcom/android/server/locksettings/LockSettingsService, mGateKeeperService, <Application,Landroid/service/gatekeeper/IGateKeeperService> > = 23,
monitorexit 1,
return 23,
21 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 17,19,10,3,4 @39 exception:20,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSyntheticPasswordHandle(I)[B > 1,5 @2 exception:7,
6 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadState(Ljava/lang/String;JI)[B > 1,3,4,2 @4 exception:5,
return 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,4,8,3 @15 exception:10,
26 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 11 @19 exception:25,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 26,9,
33 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse$Builder>@25,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, <init>()V > 33 @27 exception:34,
36 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 11 @30 exception:35,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mPayload, <Primordial,[B> > 1,
return 2,
38 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, setGatekeeperHAT([B)Lcom/android/internal/widget/VerifyCredentialResponse$Builder; > 33,36 @34 exception:37,
putfield 1.< Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, mGatekeeperHAT, <Primordial,[B> > = 2,
return 1,
40 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, build()Lcom/android/internal/widget/VerifyCredentialResponse; > 38 @38 exception:39,
2 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse>@0,
3 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, mGatekeeperHAT, <Primordial,[B> > 1,
4 = getfield < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, mGatekeeperPasswordHandle, <Primordial,J> > 1,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse, <init>(II[BJLcom/android/internal/widget/VerifyCredentialResponse-IA;)V > 2,5,5,3,4,5 @10 exception:6,
return 2,
42 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 11 @42 exception:41,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mShouldReEnroll, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 42,9,
44 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, enroll(I[B[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,8,8,3 @48 exception:43,
goto (from iindex= 29 to iindex = 9),
50 = phi  44,49,
55 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 50 @61 exception:54,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mResponseCode, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 55,9,
74 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 50 @67 exception:73,
2 = getfield < Application, Landroid/service/gatekeeper/GateKeeperResponse, mPayload, <Primordial,[B> > 1,
return 2,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveSyntheticPasswordHandle([BI)V > 1,74,5 @71 exception:75,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveState(Ljava/lang/String;[BJI)V > 1,4,2,5,3 @7 exception:6,
return,
77 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @74 exception:76,
8 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, loadSyntheticPasswordHandle(I)[B > 1,5 @2 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, verifyChallenge(IJ[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,4,8,3 @15 exception:10,
26 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 11 @19 exception:25,
conditional branch(ne, to iindex=-1) 26,9,
33 = new <Application,Lcom/android/internal/widget/VerifyCredentialResponse$Builder>@25,
invokespecial < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, <init>()V > 33 @27 exception:34,
36 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 11 @30 exception:35,
38 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, setGatekeeperHAT([B)Lcom/android/internal/widget/VerifyCredentialResponse$Builder; > 33,36 @34 exception:37,
40 = invokevirtual < Application, Lcom/android/internal/widget/VerifyCredentialResponse$Builder, build()Lcom/android/internal/widget/VerifyCredentialResponse; > 38 @38 exception:39,
42 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getShouldReEnroll()Z > 11 @42 exception:41,
conditional branch(eq, to iindex=-1) 42,9,
44 = invokeinterface < Application, Landroid/service/gatekeeper/IGateKeeperService, enroll(I[B[B[B)Landroid/service/gatekeeper/GateKeeperResponse; > 2,5,8,8,3 @48 exception:43,
goto (from iindex= 29 to iindex = 9),
50 = phi  44,49,
55 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getResponseCode()I > 50 @61 exception:54,
conditional branch(ne, to iindex=-1) 55,9,
74 = invokevirtual < Application, Landroid/service/gatekeeper/GateKeeperResponse, getPayload()[B > 50 @67 exception:73,
invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, saveSyntheticPasswordHandle([BI)V > 1,74,5 @71 exception:75,
77 = invokevirtual < Application, Lcom/android/server/locksettings/SyntheticPasswordManager, verifyChallengeInternal(Landroid/service/gatekeeper/IGateKeeperService;[BJI)Lcom/android/internal/widget/VerifyCredentialResponse; > 1,2,3,4,5 @74 exception:76,
return 77,
28 = phi  26,21,
monitorexit 15,
return 28,","depth : 0
-----
depth : 1
-----
depth : 2
-----
depth : 1
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
depth : 2
-----
","public VerifyCredentialResponse verifyGatekeeperPasswordHandle(long p1, long p2, int p3){
	Object v2 = this.mGatekeeperPasswords.get(p1);
	if (v2 != 0) {
		if (this.mGateKeeperService == 0) {
			IBinder v4 = ServiceManager.getService(""android.service.gatekeeper.IGateKeeperService"");
			if (v4 == 0) {
				LockSettingsService$GateKeeperDiedRecipient v5 = new LockSettingsService$GateKeeperDiedRecipient(LockSettingsService,0);
				v4.linkToDeath(v5, 0);
				if (v4 != 0) {
					IGateKeeperService v8 = 0;
					this.mGateKeeperService = v8;
					IGateKeeperService v3 = v8;
					byte[] v11 = SyntheticPasswordManager.loadState(""handle"", 0, p3);
					byte[] v10 = v11;
					if (v10 != 0) {
						GateKeeperResponse v12 = v3.verifyChallenge(p3, p2, v10, v2);
						int v13 = this.mResponseCode;
						if (v13 != 0) {
							VerifyCredentialResponse$Builder v14 = new VerifyCredentialResponse$Builder();
							byte[] v16 = this.mPayload;
							this.mGatekeeperHAT = v16;
							VerifyCredentialResponse$Builder v17 = VerifyCredentialResponse$Builder;
							VerifyCredentialResponse v19 = new VerifyCredentialResponse(0,0,this.mGatekeeperHAT,this.mGatekeeperPasswordHandle,0);
							VerifyCredentialResponse v18 = v19;
							boolean v21 = this.mShouldReEnroll;
							if (v21 == 0) {
								GateKeeperResponse v22 = v3.enroll(p3, v10, v10, v2);
								int v23 = this.mResponseCode;
								if (v23 != 0) {
									byte[] v24 = this.mPayload;
									SyntheticPasswordManager.saveState(""handle"", v24, 0, p3);
									VerifyCredentialResponse v27 = SyntheticPasswordManager.verifyChallengeInternal(v3, v2, p2, p3);
									byte[] v28 = SyntheticPasswordManager.loadSyntheticPasswordHandle(p3);
									if (v28 != 0) {
										GateKeeperResponse v29 = v3.verifyChallenge(p3, p2, v28, v2);
										int v30 = v29.getResponseCode();
										if (v30 != 0) {
											VerifyCredentialResponse$Builder v31 = new VerifyCredentialResponse$Builder();
											byte[] v33 = v29.getPayload();
											VerifyCredentialResponse$Builder v34 = v31.setGatekeeperHAT(v33);
											VerifyCredentialResponse v35 = v34.build();
											boolean v36 = v29.getShouldReEnroll();
											if (v36 == 0) {
												GateKeeperResponse v37 = v3.enroll(p3, v28, v28, v2);
												int v38 = v37.getResponseCode();
												if (v38 != 0) {
													byte[] v39 = v37.getPayload();
													SyntheticPasswordManager.saveSyntheticPasswordHandle(v39, p3);
													VerifyCredentialResponse v41 = SyntheticPasswordManager.verifyChallengeInternal(v3, v2, p2, p3);
													VerifyCredentialResponse v9 = v41;
													return ERROR;
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
	}
}
","SYS_OR_SIG"

