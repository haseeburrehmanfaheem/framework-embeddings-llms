"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/security/FileIntegrityService$1","isApkVeritySupported()Z","0","3 = invokestatic < Application, Lcom/android/internal/security/VerityUtils, isFsVeritySupported()Z > @0 exception:2,
return 3,","depth : 0
public boolean isApkVeritySupported(){
	boolean v1 = VerityUtils.isFsVeritySupported();
	return v1;
}
-----
","NONE"
"Lcom/android/server/security/FileIntegrityService$1","isApkVeritySupported()Z","1","3 = invokestatic < Application, Lcom/android/internal/security/VerityUtils, isFsVeritySupported()Z > @0 exception:2,
1 = getstatic < Application, Landroid/os/Build$VERSION, DEVICE_INITIAL_SDK_INT, <Primordial,I> >,
conditional branch(ge, to iindex=-1) 1,3,
conditional branch(ne, to iindex=-1) 6,7,
12 = phi  2,10,
return 12,
return 3,","depth : 0
public boolean isApkVeritySupported(){
	boolean v1 = VerityUtils.isFsVeritySupported();
	return v1;
}
-----
depth : 1
public boolean isFsVeritySupported(){
	int v1 = SystemProperties.getInt(""ro.apk_verity.mode"", 0);
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/security/FileIntegrityService$1","isApkVeritySupported()Z","1","3 = invokestatic < Application, Lcom/android/internal/security/VerityUtils, isFsVeritySupported()Z > @0 exception:2,
1 = getstatic < Application, Landroid/os/Build$VERSION, DEVICE_INITIAL_SDK_INT, <Primordial,I> >,
conditional branch(ge, to iindex=-1) 1,3,
12 = phi  2,10,
return 12,
return 3,","depth : 0
public boolean isApkVeritySupported(){
	boolean v1 = VerityUtils.isFsVeritySupported();
	return v1;
}
-----
depth : 1
public boolean isFsVeritySupported(){
	return phiInstruction;
}
-----
","NONE"

"Lcom/android/server/security/FileIntegrityService$1","isAppSourceCertificateTrusted([BLjava/lang/String;)Z","0","invokevirtual < Application, Lcom/android/server/security/FileIntegrityService$1, checkCallerPermission(Ljava/lang/String;)V > 1,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/internal/security/VerityUtils, isFsVeritySupported()Z > @6 exception:7,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 2,6,
9 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
11 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$fgetmTrustedCertificates(Lcom/android/server/security/FileIntegrityService;)Ljava/util/Collection; > 9 @23 exception:10,
13 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$smtoCertificate([B)Ljava/security/cert/X509Certificate; > 2 @27 exception:12,
return 15,","depth : 0
public boolean isAppSourceCertificateTrusted(byte[] p1, String p2){
	p0.checkCallerPermission(p2);
	boolean v2 = VerityUtils.isFsVeritySupported();
	Collection v3 = FileIntegrityService.-$$Nest$fgetmTrustedCertificates(this.this$0);
	X509Certificate v4 = FileIntegrityService.-$$Nest$smtoCertificate(p1);
	boolean v5 = v3.contains(v4);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/security/FileIntegrityService$1","isAppSourceCertificateTrusted([BLjava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/security/FileIntegrityService$1, checkCallerPermission(Ljava/lang/String;)V > 1,3 @2 exception:5,
conditional branch(ne, to iindex=-1) 35,36,
37 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
40 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
43 = checkcast <Application,Landroid/app/AppOpsManager>42 <Application,Landroid/app/AppOpsManager>,
conditional branch(ne, to iindex=-1) 46,36,
return,
8 = invokestatic < Application, Lcom/android/internal/security/VerityUtils, isFsVeritySupported()Z > @6 exception:7,
1 = getstatic < Application, Landroid/os/Build$VERSION, DEVICE_INITIAL_SDK_INT, <Primordial,I> >,
conditional branch(ge, to iindex=-1) 1,3,
conditional branch(ne, to iindex=-1) 6,7,
12 = phi  2,10,
return 12,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 2,6,
9 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
11 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$fgetmTrustedCertificates(Lcom/android/server/security/FileIntegrityService;)Ljava/util/Collection; > 9 @23 exception:10,
2 = getfield < Application, Lcom/android/server/security/FileIntegrityService, mTrustedCertificates, <Application,Ljava/util/Collection> > 1,
return 2,
13 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$smtoCertificate([B)Ljava/security/cert/X509Certificate; > 2 @27 exception:12,
3 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, toCertificate([B)Ljava/security/cert/X509Certificate; > 1 @0 exception:2,
return 3,
return 15,","depth : 0
public boolean isAppSourceCertificateTrusted(byte[] p1, String p2){
	p0.checkCallerPermission(p2);
	boolean v2 = VerityUtils.isFsVeritySupported();
	Collection v3 = FileIntegrityService.-$$Nest$fgetmTrustedCertificates(this.this$0);
	X509Certificate v4 = FileIntegrityService.-$$Nest$smtoCertificate(p1);
	boolean v5 = v3.contains(v4);
	return v5;
}
-----
depth : 1
public void checkCallerPermission(String p1){
	Context v7 = this.this$0.getContext();
	Object v8 = v7.getSystemService(AppOpsManage.class);
	int v9 = v8.checkOpNoThrow(66, v1, p1);
	return;
}
-----
depth : 1
public boolean isFsVeritySupported(){
	int v1 = SystemProperties.getInt(""ro.apk_verity.mode"", 0);
	return phiInstruction;
}
-----
depth : 1
public Collection -$$Nest$fgetmTrustedCertificates(FileIntegrityService p1){
	return this.mTrustedCertificates;
}
-----
depth : 1
public X509Certificate -$$Nest$smtoCertificate(byte[] p1){
	X509Certificate v1 = FileIntegrityService.toCertificate(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/security/FileIntegrityService$1","isAppSourceCertificateTrusted([BLjava/lang/String;)Z","1","invokevirtual < Application, Lcom/android/server/security/FileIntegrityService$1, checkCallerPermission(Ljava/lang/String;)V > 1,3 @2 exception:5,
conditional branch(ne, to iindex=-1) 35,36,
37 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
40 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
43 = checkcast <Application,Landroid/app/AppOpsManager>42 <Application,Landroid/app/AppOpsManager>,
conditional branch(ne, to iindex=-1) 46,36,
return,
8 = invokestatic < Application, Lcom/android/internal/security/VerityUtils, isFsVeritySupported()Z > @6 exception:7,
1 = getstatic < Application, Landroid/os/Build$VERSION, DEVICE_INITIAL_SDK_INT, <Primordial,I> >,
conditional branch(ge, to iindex=-1) 1,3,
12 = phi  2,10,
return 12,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 2,6,
9 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
11 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$fgetmTrustedCertificates(Lcom/android/server/security/FileIntegrityService;)Ljava/util/Collection; > 9 @23 exception:10,
2 = getfield < Application, Lcom/android/server/security/FileIntegrityService, mTrustedCertificates, <Application,Ljava/util/Collection> > 1,
return 2,
13 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$smtoCertificate([B)Ljava/security/cert/X509Certificate; > 2 @27 exception:12,
3 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, toCertificate([B)Ljava/security/cert/X509Certificate; > 1 @0 exception:2,
return 3,
return 15,","depth : 0
public boolean isAppSourceCertificateTrusted(byte[] p1, String p2){
	p0.checkCallerPermission(p2);
	boolean v2 = VerityUtils.isFsVeritySupported();
	Collection v3 = FileIntegrityService.-$$Nest$fgetmTrustedCertificates(this.this$0);
	X509Certificate v4 = FileIntegrityService.-$$Nest$smtoCertificate(p1);
	boolean v5 = v3.contains(v4);
	return v5;
}
-----
depth : 1
public void checkCallerPermission(String p1){
	Context v7 = this.this$0.getContext();
	Object v8 = v7.getSystemService(AppOpsManage.class);
	int v9 = v8.checkOpNoThrow(66, v1, p1);
	return;
}
-----
depth : 1
public boolean isFsVeritySupported(){
	return phiInstruction;
}
-----
depth : 1
public Collection -$$Nest$fgetmTrustedCertificates(FileIntegrityService p1){
	return this.mTrustedCertificates;
}
-----
depth : 1
public X509Certificate -$$Nest$smtoCertificate(byte[] p1){
	X509Certificate v1 = FileIntegrityService.toCertificate(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/security/FileIntegrityService$1","isAppSourceCertificateTrusted([BLjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/security/FileIntegrityService$1, checkCallerPermission(Ljava/lang/String;)V > 1,3 @2 exception:5,
conditional branch(ne, to iindex=-1) 35,36,
37 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
40 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
43 = checkcast <Application,Landroid/app/AppOpsManager>42 <Application,Landroid/app/AppOpsManager>,
conditional branch(ne, to iindex=-1) 46,36,
return,
8 = invokestatic < Application, Lcom/android/internal/security/VerityUtils, isFsVeritySupported()Z > @6 exception:7,
1 = getstatic < Application, Landroid/os/Build$VERSION, DEVICE_INITIAL_SDK_INT, <Primordial,I> >,
conditional branch(ge, to iindex=-1) 1,3,
conditional branch(ne, to iindex=-1) 6,7,
12 = phi  2,10,
return 12,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 2,6,
9 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
11 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$fgetmTrustedCertificates(Lcom/android/server/security/FileIntegrityService;)Ljava/util/Collection; > 9 @23 exception:10,
2 = getfield < Application, Lcom/android/server/security/FileIntegrityService, mTrustedCertificates, <Application,Ljava/util/Collection> > 1,
return 2,
13 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$smtoCertificate([B)Ljava/security/cert/X509Certificate; > 2 @27 exception:12,
3 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, toCertificate([B)Ljava/security/cert/X509Certificate; > 1 @0 exception:2,
2 = getstatic < Application, Lcom/android/server/security/FileIntegrityService, sCertFactory, <Application,Ljava/security/cert/CertificateFactory> >,
3 = new <Application,Ljava/io/ByteArrayInputStream>@2,
7 = instanceof 6 <Application,Ljava/security/cert/X509Certificate>,
conditional branch(eq, to iindex=-1) 7,8,
12 = checkcast <Application,Ljava/security/cert/X509Certificate>6 <Application,Ljava/security/cert/X509Certificate>,
return 12,
return 3,
return 15,","depth : 0
public boolean isAppSourceCertificateTrusted(byte[] p1, String p2){
	p0.checkCallerPermission(p2);
	boolean v2 = VerityUtils.isFsVeritySupported();
	Collection v3 = FileIntegrityService.-$$Nest$fgetmTrustedCertificates(this.this$0);
	X509Certificate v4 = FileIntegrityService.-$$Nest$smtoCertificate(p1);
	boolean v5 = v3.contains(v4);
	return v5;
}
-----
depth : 1
public void checkCallerPermission(String p1){
	Context v7 = this.this$0.getContext();
	Object v8 = v7.getSystemService(AppOpsManage.class);
	int v9 = v8.checkOpNoThrow(66, v1, p1);
	return;
}
-----
depth : 1
public boolean isFsVeritySupported(){
	int v1 = SystemProperties.getInt(""ro.apk_verity.mode"", 0);
	return phiInstruction;
}
-----
depth : 1
public Collection -$$Nest$fgetmTrustedCertificates(FileIntegrityService p1){
	return this.mTrustedCertificates;
}
-----
depth : 1
public X509Certificate -$$Nest$smtoCertificate(byte[] p1){
	X509Certificate v1 = FileIntegrityService.toCertificate(p1);
	return v1;
}
-----
depth : 2
public X509Certificate toCertificate(byte[] p1){
	ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
	Certificate v2 = this.sCertFactory.generateCertificate(v0);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/security/FileIntegrityService$1","isAppSourceCertificateTrusted([BLjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/security/FileIntegrityService$1, checkCallerPermission(Ljava/lang/String;)V > 1,3 @2 exception:5,
conditional branch(ne, to iindex=-1) 35,36,
37 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
40 = load_metadata: <Application,Landroid/app/AppOpsManager>, <Primordial,Ljava/lang/Class>,
43 = checkcast <Application,Landroid/app/AppOpsManager>42 <Application,Landroid/app/AppOpsManager>,
conditional branch(ne, to iindex=-1) 46,36,
return,
8 = invokestatic < Application, Lcom/android/internal/security/VerityUtils, isFsVeritySupported()Z > @6 exception:7,
1 = getstatic < Application, Landroid/os/Build$VERSION, DEVICE_INITIAL_SDK_INT, <Primordial,I> >,
conditional branch(ge, to iindex=-1) 1,3,
12 = phi  2,10,
return 12,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 2,6,
9 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
11 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$fgetmTrustedCertificates(Lcom/android/server/security/FileIntegrityService;)Ljava/util/Collection; > 9 @23 exception:10,
2 = getfield < Application, Lcom/android/server/security/FileIntegrityService, mTrustedCertificates, <Application,Ljava/util/Collection> > 1,
return 2,
13 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$smtoCertificate([B)Ljava/security/cert/X509Certificate; > 2 @27 exception:12,
3 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, toCertificate([B)Ljava/security/cert/X509Certificate; > 1 @0 exception:2,
2 = getstatic < Application, Lcom/android/server/security/FileIntegrityService, sCertFactory, <Application,Ljava/security/cert/CertificateFactory> >,
3 = new <Application,Ljava/io/ByteArrayInputStream>@2,
7 = instanceof 6 <Application,Ljava/security/cert/X509Certificate>,
conditional branch(eq, to iindex=-1) 7,8,
12 = checkcast <Application,Ljava/security/cert/X509Certificate>6 <Application,Ljava/security/cert/X509Certificate>,
return 12,
return 3,
return 15,","depth : 0
public boolean isAppSourceCertificateTrusted(byte[] p1, String p2){
	p0.checkCallerPermission(p2);
	boolean v2 = VerityUtils.isFsVeritySupported();
	Collection v3 = FileIntegrityService.-$$Nest$fgetmTrustedCertificates(this.this$0);
	X509Certificate v4 = FileIntegrityService.-$$Nest$smtoCertificate(p1);
	boolean v5 = v3.contains(v4);
	return v5;
}
-----
depth : 1
public void checkCallerPermission(String p1){
	Context v7 = this.this$0.getContext();
	Object v8 = v7.getSystemService(AppOpsManage.class);
	int v9 = v8.checkOpNoThrow(66, v1, p1);
	return;
}
-----
depth : 1
public boolean isFsVeritySupported(){
	return phiInstruction;
}
-----
depth : 1
public Collection -$$Nest$fgetmTrustedCertificates(FileIntegrityService p1){
	return this.mTrustedCertificates;
}
-----
depth : 1
public X509Certificate -$$Nest$smtoCertificate(byte[] p1){
	X509Certificate v1 = FileIntegrityService.toCertificate(p1);
	return v1;
}
-----
depth : 2
public X509Certificate toCertificate(byte[] p1){
	ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
	Certificate v2 = this.sCertFactory.generateCertificate(v0);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/security/FileIntegrityService$1","isAppSourceCertificateTrusted([BLjava/lang/String;)Z","2","invokevirtual < Application, Lcom/android/server/security/FileIntegrityService$1, checkCallerPermission(Ljava/lang/String;)V > 1,3 @2 exception:5,
conditional branch(ne, to iindex=-1) 35,36,
return,
8 = invokestatic < Application, Lcom/android/internal/security/VerityUtils, isFsVeritySupported()Z > @6 exception:7,
1 = getstatic < Application, Landroid/os/Build$VERSION, DEVICE_INITIAL_SDK_INT, <Primordial,I> >,
conditional branch(ge, to iindex=-1) 1,3,
conditional branch(ne, to iindex=-1) 6,7,
12 = phi  2,10,
return 12,
conditional branch(ne, to iindex=-1) 8,6,
conditional branch(ne, to iindex=-1) 2,6,
9 = getfield < Application, Lcom/android/server/security/FileIntegrityService$1, this$0, <Application,Lcom/android/server/security/FileIntegrityService> > 1,
11 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$fgetmTrustedCertificates(Lcom/android/server/security/FileIntegrityService;)Ljava/util/Collection; > 9 @23 exception:10,
2 = getfield < Application, Lcom/android/server/security/FileIntegrityService, mTrustedCertificates, <Application,Ljava/util/Collection> > 1,
return 2,
13 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, -$$Nest$smtoCertificate([B)Ljava/security/cert/X509Certificate; > 2 @27 exception:12,
3 = invokestatic < Application, Lcom/android/server/security/FileIntegrityService, toCertificate([B)Ljava/security/cert/X509Certificate; > 1 @0 exception:2,
2 = getstatic < Application, Lcom/android/server/security/FileIntegrityService, sCertFactory, <Application,Ljava/security/cert/CertificateFactory> >,
3 = new <Application,Ljava/io/ByteArrayInputStream>@2,
7 = instanceof 6 <Application,Ljava/security/cert/X509Certificate>,
conditional branch(eq, to iindex=-1) 7,8,
12 = checkcast <Application,Ljava/security/cert/X509Certificate>6 <Application,Ljava/security/cert/X509Certificate>,
return 12,
return 3,
return 15,","depth : 0
public boolean isAppSourceCertificateTrusted(byte[] p1, String p2){
	p0.checkCallerPermission(p2);
	boolean v2 = VerityUtils.isFsVeritySupported();
	Collection v3 = FileIntegrityService.-$$Nest$fgetmTrustedCertificates(this.this$0);
	X509Certificate v4 = FileIntegrityService.-$$Nest$smtoCertificate(p1);
	boolean v5 = v3.contains(v4);
	return v5;
}
-----
depth : 1
public void checkCallerPermission(String p1){
	return;
}
-----
depth : 1
public boolean isFsVeritySupported(){
	int v1 = SystemProperties.getInt(""ro.apk_verity.mode"", 0);
	return phiInstruction;
}
-----
depth : 1
public Collection -$$Nest$fgetmTrustedCertificates(FileIntegrityService p1){
	return this.mTrustedCertificates;
}
-----
depth : 1
public X509Certificate -$$Nest$smtoCertificate(byte[] p1){
	X509Certificate v1 = FileIntegrityService.toCertificate(p1);
	return v1;
}
-----
depth : 2
public X509Certificate toCertificate(byte[] p1){
	ByteArrayInputStream v0 = new ByteArrayInputStream(p1);
	Certificate v2 = this.sCertFactory.generateCertificate(v0);
	return v2;
}
-----
","SYS_OR_SIG"

