"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/VcnManagementService","clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCarrierPrivilegeOrProvisioningPackage(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,3 @51 exception:29,
30 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda5>@54,
return,","depth : 0
public void clearVcnConfig(ParcelUuid p1, String p2){
	p0.enforceCarrierPrivilegeOrProvisioningPackage(p1, p2);
	VcnManagementService$$ExternalSyntheticLambda5 v11 = new VcnManagementService$$ExternalSyntheticLambda5(p0,p1);
	Binder.withCleanCallingIdentity(v11);
	return;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCarrierPrivilegeOrProvisioningPackage(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,3 @51 exception:29,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforcePrimaryUser()V > 1 @0 exception:4,
6 = invokevirtual < Application, Lcom/android/server/VcnManagementService, isProvisioningPackageForConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)Z > 1,2,3 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCallingUserAndCarrierPrivilege(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,3 @10 exception:8,
return,
30 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda5>@54,
return,","depth : 0
public void clearVcnConfig(ParcelUuid p1, String p2){
	p0.enforceCarrierPrivilegeOrProvisioningPackage(p1, p2);
	VcnManagementService$$ExternalSyntheticLambda5 v11 = new VcnManagementService$$ExternalSyntheticLambda5(p0,p1);
	Binder.withCleanCallingIdentity(v11);
	return;
}
-----
depth : 1
public void enforceCarrierPrivilegeOrProvisioningPackage(ParcelUuid p1, String p2){
	p0.enforcePrimaryUser();
	boolean v2 = p0.isProvisioningPackageForConfig(p1, p2);
	p0.enforceCallingUserAndCarrierPrivilege(p1, p2);
	return;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCarrierPrivilegeOrProvisioningPackage(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,3 @51 exception:29,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforcePrimaryUser()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/VcnManagementService, mDeps, <Application,Lcom/android/server/VcnManagementService$Dependencies> > 1,
conditional branch(eq, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 12,13,
return,
6 = invokevirtual < Application, Lcom/android/server/VcnManagementService, isProvisioningPackageForConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)Z > 1,2,3 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
10 = checkcast <Application,Landroid/net/vcn/VcnConfig>9 <Application,Landroid/net/vcn/VcnConfig>,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(eq, to iindex=-1) 15,11,
monitorexit 6,
return 20,
conditional branch(eq, to iindex=-1) 6,7,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCallingUserAndCarrierPrivilege(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,3 @10 exception:8,
5 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
6 = load_metadata: <Application,Landroid/telephony/SubscriptionManager>, <Primordial,Ljava/lang/Class>,
9 = checkcast <Application,Landroid/telephony/SubscriptionManager>8 <Application,Landroid/telephony/SubscriptionManager>,
10 = new <Application,Ljava/util/ArrayList>@13,
12 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda11>@18,
conditional branch(eq, to iindex=-1) 18,19,
22 = checkcast <Application,Landroid/telephony/SubscriptionInfo>21 <Application,Landroid/telephony/SubscriptionInfo>,
23 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
24 = load_metadata: <Application,Landroid/telephony/TelephonyManager>, <Primordial,Ljava/lang/Class>,
27 = checkcast <Application,Landroid/telephony/TelephonyManager>26 <Application,Landroid/telephony/TelephonyManager>,
conditional branch(eq, to iindex=-1) 35,19,
conditional branch(ne, to iindex=-1) 42,43,
return,
return,
30 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda5>@54,
return,","depth : 0
public void clearVcnConfig(ParcelUuid p1, String p2){
	p0.enforceCarrierPrivilegeOrProvisioningPackage(p1, p2);
	VcnManagementService$$ExternalSyntheticLambda5 v11 = new VcnManagementService$$ExternalSyntheticLambda5(p0,p1);
	Binder.withCleanCallingIdentity(v11);
	return;
}
-----
depth : 1
public void enforceCarrierPrivilegeOrProvisioningPackage(ParcelUuid p1, String p2){
	p0.enforcePrimaryUser();
	boolean v2 = p0.isProvisioningPackageForConfig(p1, p2);
	p0.enforceCallingUserAndCarrierPrivilege(p1, p2);
	return;
}
-----
depth : 2
public void enforcePrimaryUser(){
	int v1 = this.mDeps.getBinderCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	boolean v3 = v2.isSystem();
	return;
}
-----
depth : 2
public boolean isProvisioningPackageForConfig(ParcelUuid p1, String p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mConfigs.get(p1);
	String v3 = v2.getProvisioningPackageName();
	boolean v4 = p2.equals(v3);
	Binder.restoreCallingIdentity(v1);
	return 1;
}
-----
depth : 2
public void enforceCallingUserAndCarrierPrivilege(ParcelUuid p1, String p2){
	p0.enforcePrimaryUser();
	Object v2 = this.mContext.getSystemService(SubscriptionManage.class);
	ArrayList v2 = new ArrayList();
	VcnManagementService$$ExternalSyntheticLambda11 v3 = new VcnManagementService$$ExternalSyntheticLambda11(v2,v2,p1);
	Binder.withCleanCallingIdentity(v3);
	Iterator v6 = v2.iterator();
	boolean v7 = v6.hasNext();
	Object v8 = v6.next();
	Object v9 = this.mContext.getSystemService(TelephonyManage.class);
	int v10 = v8.getSubscriptionId();
	TelephonyManager v11 = v9.createForSubscriptionId(v10);
	int v12 = v8.getSimSlotIndex();
	boolean v13 = SubscriptionManager.isValidSlotIndex(v12);
	int v14 = v11.checkCarrierPrivilegesForPackage(p2);
	return;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","clearVcnConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCarrierPrivilegeOrProvisioningPackage(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,3 @51 exception:29,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforcePrimaryUser()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/VcnManagementService, mDeps, <Application,Lcom/android/server/VcnManagementService$Dependencies> > 1,
conditional branch(eq, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 12,13,
return,
6 = invokevirtual < Application, Lcom/android/server/VcnManagementService, isProvisioningPackageForConfig(Landroid/os/ParcelUuid;Ljava/lang/String;)Z > 1,2,3 @3 exception:5,
6 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
10 = checkcast <Application,Landroid/net/vcn/VcnConfig>9 <Application,Landroid/net/vcn/VcnConfig>,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(eq, to iindex=-1) 15,11,
monitorexit 6,
return 11,
conditional branch(eq, to iindex=-1) 6,7,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCallingUserAndCarrierPrivilege(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,3 @10 exception:8,
5 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
6 = load_metadata: <Application,Landroid/telephony/SubscriptionManager>, <Primordial,Ljava/lang/Class>,
9 = checkcast <Application,Landroid/telephony/SubscriptionManager>8 <Application,Landroid/telephony/SubscriptionManager>,
10 = new <Application,Ljava/util/ArrayList>@13,
12 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda11>@18,
conditional branch(eq, to iindex=-1) 18,19,
22 = checkcast <Application,Landroid/telephony/SubscriptionInfo>21 <Application,Landroid/telephony/SubscriptionInfo>,
23 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
24 = load_metadata: <Application,Landroid/telephony/TelephonyManager>, <Primordial,Ljava/lang/Class>,
27 = checkcast <Application,Landroid/telephony/TelephonyManager>26 <Application,Landroid/telephony/TelephonyManager>,
conditional branch(eq, to iindex=-1) 35,19,
conditional branch(ne, to iindex=-1) 42,43,
return,
return,
30 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda5>@54,
return,","depth : 0
public void clearVcnConfig(ParcelUuid p1, String p2){
	p0.enforceCarrierPrivilegeOrProvisioningPackage(p1, p2);
	VcnManagementService$$ExternalSyntheticLambda5 v11 = new VcnManagementService$$ExternalSyntheticLambda5(p0,p1);
	Binder.withCleanCallingIdentity(v11);
	return;
}
-----
depth : 1
public void enforceCarrierPrivilegeOrProvisioningPackage(ParcelUuid p1, String p2){
	p0.enforcePrimaryUser();
	boolean v2 = p0.isProvisioningPackageForConfig(p1, p2);
	p0.enforceCallingUserAndCarrierPrivilege(p1, p2);
	return;
}
-----
depth : 2
public void enforcePrimaryUser(){
	int v1 = this.mDeps.getBinderCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	boolean v3 = v2.isSystem();
	return;
}
-----
depth : 2
public boolean isProvisioningPackageForConfig(ParcelUuid p1, String p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = this.mConfigs.get(p1);
	String v3 = v2.getProvisioningPackageName();
	boolean v4 = p2.equals(v3);
	Binder.restoreCallingIdentity(v1);
	return 0;
}
-----
depth : 2
public void enforceCallingUserAndCarrierPrivilege(ParcelUuid p1, String p2){
	p0.enforcePrimaryUser();
	Object v2 = this.mContext.getSystemService(SubscriptionManage.class);
	ArrayList v2 = new ArrayList();
	VcnManagementService$$ExternalSyntheticLambda11 v3 = new VcnManagementService$$ExternalSyntheticLambda11(v2,v2,p1);
	Binder.withCleanCallingIdentity(v3);
	Iterator v6 = v2.iterator();
	boolean v7 = v6.hasNext();
	Object v8 = v6.next();
	Object v9 = this.mContext.getSystemService(TelephonyManage.class);
	int v10 = v8.getSubscriptionId();
	TelephonyManager v11 = v9.createForSubscriptionId(v10);
	int v12 = v8.getSimSlotIndex();
	boolean v13 = SubscriptionManager.isValidSlotIndex(v12);
	int v14 = v11.checkCarrierPrivilegesForPackage(p2);
	return;
}
-----
","NONE"

"Lcom/android/server/VcnManagementService","addVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V","0","12 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda2>@18,
return,","depth : 0
public void addVcnUnderlyingNetworkPolicyListener(IVcnUnderlyingNetworkPolicyListener p1){
	VcnManagementService$$ExternalSyntheticLambda2 v2 = new VcnManagementService$$ExternalSyntheticLambda2(p0,p1);
	Binder.withCleanCallingIdentity(v2);
	return;
}
-----
","NORMAL"

"Lcom/android/server/VcnManagementService","removeVcnUnderlyingNetworkPolicyListener(Landroid/net/vcn/IVcnUnderlyingNetworkPolicyListener;)V","0","12 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda3>@18,
return,","depth : 0
public void removeVcnUnderlyingNetworkPolicyListener(IVcnUnderlyingNetworkPolicyListener p1){
	VcnManagementService$$ExternalSyntheticLambda3 v2 = new VcnManagementService$$ExternalSyntheticLambda3(p0,p1);
	Binder.withCleanCallingIdentity(v2);
	return;
}
-----
","NORMAL"

"Lcom/android/server/VcnManagementService","setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V","0","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceManageTestNetworksForTestMode(Landroid/net/vcn/VcnConfig;)V > 1,3 @70 exception:43,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCallingUserAndCarrierPrivilege(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,4 @73 exception:44,
45 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda4>@76,
return,","depth : 0
public void setVcnConfig(ParcelUuid p1, VcnConfig p2, String p3){
	p0.enforceManageTestNetworksForTestMode(p2);
	p0.enforceCallingUserAndCarrierPrivilege(p1, p3);
	VcnManagementService$$ExternalSyntheticLambda4 v16 = new VcnManagementService$$ExternalSyntheticLambda4(p0,p1,p2);
	Binder.withCleanCallingIdentity(v16);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/VcnManagementService","setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceManageTestNetworksForTestMode(Landroid/net/vcn/VcnConfig;)V > 1,3 @70 exception:43,
return,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCallingUserAndCarrierPrivilege(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,4 @73 exception:44,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforcePrimaryUser()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
6 = load_metadata: <Application,Landroid/telephony/SubscriptionManager>, <Primordial,Ljava/lang/Class>,
9 = checkcast <Application,Landroid/telephony/SubscriptionManager>8 <Application,Landroid/telephony/SubscriptionManager>,
10 = new <Application,Ljava/util/ArrayList>@13,
12 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda11>@18,
conditional branch(eq, to iindex=-1) 18,19,
22 = checkcast <Application,Landroid/telephony/SubscriptionInfo>21 <Application,Landroid/telephony/SubscriptionInfo>,
23 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
24 = load_metadata: <Application,Landroid/telephony/TelephonyManager>, <Primordial,Ljava/lang/Class>,
27 = checkcast <Application,Landroid/telephony/TelephonyManager>26 <Application,Landroid/telephony/TelephonyManager>,
conditional branch(eq, to iindex=-1) 35,19,
conditional branch(ne, to iindex=-1) 42,43,
return,
45 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda4>@76,
return,","depth : 0
public void setVcnConfig(ParcelUuid p1, VcnConfig p2, String p3){
	p0.enforceManageTestNetworksForTestMode(p2);
	p0.enforceCallingUserAndCarrierPrivilege(p1, p3);
	VcnManagementService$$ExternalSyntheticLambda4 v16 = new VcnManagementService$$ExternalSyntheticLambda4(p0,p1,p2);
	Binder.withCleanCallingIdentity(v16);
	return;
}
-----
depth : 1
public void enforceManageTestNetworksForTestMode(VcnConfig p1){
	return;
}
-----
depth : 1
public void enforceCallingUserAndCarrierPrivilege(ParcelUuid p1, String p2){
	p0.enforcePrimaryUser();
	Object v2 = this.mContext.getSystemService(SubscriptionManage.class);
	ArrayList v2 = new ArrayList();
	VcnManagementService$$ExternalSyntheticLambda11 v3 = new VcnManagementService$$ExternalSyntheticLambda11(v2,v2,p1);
	Binder.withCleanCallingIdentity(v3);
	Iterator v6 = v2.iterator();
	boolean v7 = v6.hasNext();
	Object v8 = v6.next();
	Object v9 = this.mContext.getSystemService(TelephonyManage.class);
	int v10 = v8.getSubscriptionId();
	TelephonyManager v11 = v9.createForSubscriptionId(v10);
	int v12 = v8.getSimSlotIndex();
	boolean v13 = SubscriptionManager.isValidSlotIndex(v12);
	int v14 = v11.checkCarrierPrivilegesForPackage(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/VcnManagementService","setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V","1","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceManageTestNetworksForTestMode(Landroid/net/vcn/VcnConfig;)V > 1,3 @70 exception:43,
4 = invokevirtual < Application, Landroid/net/vcn/VcnConfig, isTestModeProfile()Z > 2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
return,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCallingUserAndCarrierPrivilege(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,4 @73 exception:44,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforcePrimaryUser()V > 1 @0 exception:4,
5 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
6 = load_metadata: <Application,Landroid/telephony/SubscriptionManager>, <Primordial,Ljava/lang/Class>,
9 = checkcast <Application,Landroid/telephony/SubscriptionManager>8 <Application,Landroid/telephony/SubscriptionManager>,
10 = new <Application,Ljava/util/ArrayList>@13,
12 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda11>@18,
conditional branch(eq, to iindex=-1) 18,19,
22 = checkcast <Application,Landroid/telephony/SubscriptionInfo>21 <Application,Landroid/telephony/SubscriptionInfo>,
23 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
24 = load_metadata: <Application,Landroid/telephony/TelephonyManager>, <Primordial,Ljava/lang/Class>,
27 = checkcast <Application,Landroid/telephony/TelephonyManager>26 <Application,Landroid/telephony/TelephonyManager>,
conditional branch(eq, to iindex=-1) 35,19,
conditional branch(ne, to iindex=-1) 42,43,
return,
45 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda4>@76,
return,","depth : 0
public void setVcnConfig(ParcelUuid p1, VcnConfig p2, String p3){
	p0.enforceManageTestNetworksForTestMode(p2);
	p0.enforceCallingUserAndCarrierPrivilege(p1, p3);
	VcnManagementService$$ExternalSyntheticLambda4 v16 = new VcnManagementService$$ExternalSyntheticLambda4(p0,p1,p2);
	Binder.withCleanCallingIdentity(v16);
	return;
}
-----
depth : 1
public void enforceManageTestNetworksForTestMode(VcnConfig p1){
	boolean v1 = p1.isTestModeProfile();
	return;
}
-----
depth : 1
public void enforceCallingUserAndCarrierPrivilege(ParcelUuid p1, String p2){
	p0.enforcePrimaryUser();
	Object v2 = this.mContext.getSystemService(SubscriptionManage.class);
	ArrayList v2 = new ArrayList();
	VcnManagementService$$ExternalSyntheticLambda11 v3 = new VcnManagementService$$ExternalSyntheticLambda11(v2,v2,p1);
	Binder.withCleanCallingIdentity(v3);
	Iterator v6 = v2.iterator();
	boolean v7 = v6.hasNext();
	Object v8 = v6.next();
	Object v9 = this.mContext.getSystemService(TelephonyManage.class);
	int v10 = v8.getSubscriptionId();
	TelephonyManager v11 = v9.createForSubscriptionId(v10);
	int v12 = v8.getSimSlotIndex();
	boolean v13 = SubscriptionManager.isValidSlotIndex(v12);
	int v14 = v11.checkCarrierPrivilegesForPackage(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/VcnManagementService","setVcnConfig(Landroid/os/ParcelUuid;Landroid/net/vcn/VcnConfig;Ljava/lang/String;)V","2","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceManageTestNetworksForTestMode(Landroid/net/vcn/VcnConfig;)V > 1,3 @70 exception:43,
4 = invokevirtual < Application, Landroid/net/vcn/VcnConfig, isTestModeProfile()Z > 2 @0 exception:3,
2 = getfield < Application, Landroid/net/vcn/VcnConfig, mIsTestModeProfile, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 4,5,
return,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforceCallingUserAndCarrierPrivilege(Landroid/os/ParcelUuid;Ljava/lang/String;)V > 1,2,4 @73 exception:44,
invokevirtual < Application, Lcom/android/server/VcnManagementService, enforcePrimaryUser()V > 1 @0 exception:4,
2 = getfield < Application, Lcom/android/server/VcnManagementService, mDeps, <Application,Lcom/android/server/VcnManagementService$Dependencies> > 1,
conditional branch(eq, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 12,13,
return,
5 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
6 = load_metadata: <Application,Landroid/telephony/SubscriptionManager>, <Primordial,Ljava/lang/Class>,
9 = checkcast <Application,Landroid/telephony/SubscriptionManager>8 <Application,Landroid/telephony/SubscriptionManager>,
10 = new <Application,Ljava/util/ArrayList>@13,
12 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda11>@18,
conditional branch(eq, to iindex=-1) 18,19,
22 = checkcast <Application,Landroid/telephony/SubscriptionInfo>21 <Application,Landroid/telephony/SubscriptionInfo>,
23 = getfield < Application, Lcom/android/server/VcnManagementService, mContext, <Application,Landroid/content/Context> > 1,
24 = load_metadata: <Application,Landroid/telephony/TelephonyManager>, <Primordial,Ljava/lang/Class>,
27 = checkcast <Application,Landroid/telephony/TelephonyManager>26 <Application,Landroid/telephony/TelephonyManager>,
conditional branch(eq, to iindex=-1) 35,19,
conditional branch(ne, to iindex=-1) 42,43,
return,
45 = new <Application,Lcom/android/server/VcnManagementService$$ExternalSyntheticLambda4>@76,
return,","depth : 0
public void setVcnConfig(ParcelUuid p1, VcnConfig p2, String p3){
	p0.enforceManageTestNetworksForTestMode(p2);
	p0.enforceCallingUserAndCarrierPrivilege(p1, p3);
	VcnManagementService$$ExternalSyntheticLambda4 v16 = new VcnManagementService$$ExternalSyntheticLambda4(p0,p1,p2);
	Binder.withCleanCallingIdentity(v16);
	return;
}
-----
depth : 1
public void enforceManageTestNetworksForTestMode(VcnConfig p1){
	boolean v1 = p1.isTestModeProfile();
	return;
}
-----
depth : 2
public boolean isTestModeProfile(){
	return this.mIsTestModeProfile;
}
-----
depth : 1
public void enforceCallingUserAndCarrierPrivilege(ParcelUuid p1, String p2){
	p0.enforcePrimaryUser();
	Object v2 = this.mContext.getSystemService(SubscriptionManage.class);
	ArrayList v2 = new ArrayList();
	VcnManagementService$$ExternalSyntheticLambda11 v3 = new VcnManagementService$$ExternalSyntheticLambda11(v2,v2,p1);
	Binder.withCleanCallingIdentity(v3);
	Iterator v6 = v2.iterator();
	boolean v7 = v6.hasNext();
	Object v8 = v6.next();
	Object v9 = this.mContext.getSystemService(TelephonyManage.class);
	int v10 = v8.getSubscriptionId();
	TelephonyManager v11 = v9.createForSubscriptionId(v10);
	int v12 = v8.getSimSlotIndex();
	boolean v13 = SubscriptionManager.isValidSlotIndex(v12);
	int v14 = v11.checkCarrierPrivilegesForPackage(p2);
	return;
}
-----
depth : 2
public void enforcePrimaryUser(){
	int v1 = this.mDeps.getBinderCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	boolean v3 = v2.isSystem();
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/VcnManagementService","getConfiguredSubscriptionGroups(Ljava/lang/String;)Ljava/util/List;","0","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforcePrimaryUser()V > 1 @25 exception:15,
16 = new <Application,Ljava/util/ArrayList>@28,
18 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
19 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
conditional branch(eq, to iindex=-1) 25,26,
monitorexit 18,
return 16,","depth : 0
public List getConfiguredSubscriptionGroups(String p1){
	p0.enforcePrimaryUser();
	ArrayList v5 = new ArrayList();
	Set v7 = this.mConfigs.keySet();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	return v5;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","getConfiguredSubscriptionGroups(Ljava/lang/String;)Ljava/util/List;","1","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforcePrimaryUser()V > 1 @25 exception:15,
2 = getfield < Application, Lcom/android/server/VcnManagementService, mDeps, <Application,Lcom/android/server/VcnManagementService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VcnManagementService$Dependencies, getBinderCallingUid()I > 2 @2 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 12,13,
return,
16 = new <Application,Ljava/util/ArrayList>@28,
18 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
19 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
conditional branch(eq, to iindex=-1) 25,26,
monitorexit 18,
return 16,","depth : 0
public List getConfiguredSubscriptionGroups(String p1){
	p0.enforcePrimaryUser();
	ArrayList v5 = new ArrayList();
	Set v7 = this.mConfigs.keySet();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	return v5;
}
-----
depth : 1
public void enforcePrimaryUser(){
	int v1 = this.mDeps.getBinderCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	boolean v3 = v2.isSystem();
	return;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","getConfiguredSubscriptionGroups(Ljava/lang/String;)Ljava/util/List;","2","invokevirtual < Application, Lcom/android/server/VcnManagementService, enforcePrimaryUser()V > 1 @25 exception:15,
2 = getfield < Application, Lcom/android/server/VcnManagementService, mDeps, <Application,Lcom/android/server/VcnManagementService$Dependencies> > 1,
4 = invokevirtual < Application, Lcom/android/server/VcnManagementService$Dependencies, getBinderCallingUid()I > 2 @2 exception:3,
return 3,
conditional branch(eq, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 12,13,
return,
16 = new <Application,Ljava/util/ArrayList>@28,
18 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
19 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
conditional branch(eq, to iindex=-1) 25,26,
monitorexit 18,
return 16,","depth : 0
public List getConfiguredSubscriptionGroups(String p1){
	p0.enforcePrimaryUser();
	ArrayList v5 = new ArrayList();
	Set v7 = this.mConfigs.keySet();
	Iterator v8 = v7.iterator();
	boolean v9 = v8.hasNext();
	return v5;
}
-----
depth : 1
public void enforcePrimaryUser(){
	int v1 = this.mDeps.getBinderCallingUid();
	UserHandle v2 = UserHandle.getUserHandleForUid(v1);
	boolean v3 = v2.isSystem();
	return;
}
-----
depth : 2
public int getBinderCallingUid(){
	int v1 = Binder.getCallingUid();
	return v1;
}
-----
","NONE"

"Lcom/android/server/VcnManagementService","registerVcnStatusCallback(Landroid/os/ParcelUuid;Landroid/net/vcn/IVcnStatusCallback;Ljava/lang/String;)V","0","27 = new <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>@44,
32 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 32,
33 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
conditional branch(ne, to iindex=-1) 35,28,
39 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
42 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
45 = checkcast <Application,Landroid/net/vcn/VcnConfig>44 <Application,Landroid/net/vcn/VcnConfig>,
46 = getfield < Application, Lcom/android/server/VcnManagementService, mVcns, <Application,Ljava/util/Map> > 1,
49 = checkcast <Application,Lcom/android/server/vcn/Vcn>48 <Application,Lcom/android/server/vcn/Vcn>,
conditional branch(ne, to iindex=-1) 49,28,
goto (from iindex= 47 to iindex = 5),
52 = phi  28,51,
conditional branch(eq, to iindex=-1) 45,28,
56 = invokevirtual < Application, Lcom/android/server/VcnManagementService, isCallbackPermissioned(Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo;Landroid/os/ParcelUuid;)Z > 1,27,2 @101 exception:55,
conditional branch(ne, to iindex=-1) 56,28,
conditional branch(ne, to iindex=-1) 49,28,
conditional branch(eq, to iindex=-1) 52,57,
conditional branch(ne, to iindex=-1) 52,58,
goto (from iindex= 62 to iindex = 22),
73 = phi  28,28,70,28,52,
76 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mCallback, <Application,Landroid/net/vcn/IVcnStatusCallback> > 27,
78 = getCaughtException ,
invokevirtual < Application, Lcom/android/server/VcnManagementService, logDbg(Ljava/lang/String;Ljava/lang/Throwable;)V > 1,79,78 @150 exception:80,
monitorexit 32,
return,","depth : 0
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v8 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v8, 0);
	boolean v11 = this.mRegisteredStatusCallbacks.containsKey(v8);
	Object v12 = this.mRegisteredStatusCallbacks.put(v8, v8);
	Object v13 = this.mConfigs.get(p1);
	Object v14 = this.mVcns.get(p1);
	boolean v15 = p0.isCallbackPermissioned(v8, p1);
	VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);
	p0.logDbg(""VcnStatusCallback threw on VCN status change"", caughtException);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","registerVcnStatusCallback(Landroid/os/ParcelUuid;Landroid/net/vcn/IVcnStatusCallback;Ljava/lang/String;)V","1","27 = new <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>@44,
32 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 32,
33 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
conditional branch(ne, to iindex=-1) 35,28,
39 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
42 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
45 = checkcast <Application,Landroid/net/vcn/VcnConfig>44 <Application,Landroid/net/vcn/VcnConfig>,
46 = getfield < Application, Lcom/android/server/VcnManagementService, mVcns, <Application,Ljava/util/Map> > 1,
49 = checkcast <Application,Lcom/android/server/vcn/Vcn>48 <Application,Lcom/android/server/vcn/Vcn>,
conditional branch(ne, to iindex=-1) 49,28,
goto (from iindex= 47 to iindex = 5),
52 = phi  28,51,
conditional branch(eq, to iindex=-1) 45,28,
56 = invokevirtual < Application, Lcom/android/server/VcnManagementService, isCallbackPermissioned(Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo;Landroid/os/ParcelUuid;)Z > 1,27,2 @101 exception:55,
4 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mSubGroup, <Application,Landroid/os/ParcelUuid> > 2,
6 = invokevirtual < Application, Landroid/os/ParcelUuid, equals(Ljava/lang/Object;)Z > 3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VcnManagementService, mLastSnapshot, <Application,Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot> > 1,
9 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mPkgName, <Application,Ljava/lang/String> > 2,
11 = invokevirtual < Application, Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot, packageHasPermissionsForSubscriptionGroup(Landroid/os/ParcelUuid;Ljava/lang/String;)Z > 8,3,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,7,
return 7,
conditional branch(ne, to iindex=-1) 56,28,
conditional branch(ne, to iindex=-1) 49,28,
conditional branch(eq, to iindex=-1) 52,57,
conditional branch(ne, to iindex=-1) 52,58,
goto (from iindex= 62 to iindex = 22),
73 = phi  28,28,70,28,52,
76 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mCallback, <Application,Landroid/net/vcn/IVcnStatusCallback> > 27,
78 = getCaughtException ,
invokevirtual < Application, Lcom/android/server/VcnManagementService, logDbg(Ljava/lang/String;Ljava/lang/Throwable;)V > 1,79,78 @150 exception:80,
4 = getstatic < Application, Lcom/android/server/VcnManagementService, TAG, <Application,Ljava/lang/String> >,
return,
monitorexit 32,
return,","depth : 0
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v8 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v8, 0);
	boolean v11 = this.mRegisteredStatusCallbacks.containsKey(v8);
	Object v12 = this.mRegisteredStatusCallbacks.put(v8, v8);
	Object v13 = this.mConfigs.get(p1);
	Object v14 = this.mVcns.get(p1);
	boolean v15 = p0.isCallbackPermissioned(v8, p1);
	VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);
	p0.logDbg(""VcnStatusCallback threw on VCN status change"", caughtException);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public boolean isCallbackPermissioned(VcnManagementService$VcnStatusCallbackInfo p1, ParcelUuid p2){
	boolean v1 = p2.equals(VcnManagementService$VcnStatusCallbackInfo.mSubGroup);
	boolean v2 = this.mLastSnapshot.packageHasPermissionsForSubscriptionGroup(p2, VcnManagementService$VcnStatusCallbackInfo.mPkgName);
	return 0;
}
-----
depth : 1
public void logDbg(String p1, Throwable p2){
	int v1 = Slog.d(this.TAG, p1, p2);
	return;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","registerVcnStatusCallback(Landroid/os/ParcelUuid;Landroid/net/vcn/IVcnStatusCallback;Ljava/lang/String;)V","1","27 = new <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>@44,
32 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 32,
33 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
conditional branch(ne, to iindex=-1) 35,28,
39 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
42 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
45 = checkcast <Application,Landroid/net/vcn/VcnConfig>44 <Application,Landroid/net/vcn/VcnConfig>,
46 = getfield < Application, Lcom/android/server/VcnManagementService, mVcns, <Application,Ljava/util/Map> > 1,
49 = checkcast <Application,Lcom/android/server/vcn/Vcn>48 <Application,Lcom/android/server/vcn/Vcn>,
conditional branch(ne, to iindex=-1) 49,28,
goto (from iindex= 47 to iindex = 5),
52 = phi  28,51,
conditional branch(eq, to iindex=-1) 45,28,
56 = invokevirtual < Application, Lcom/android/server/VcnManagementService, isCallbackPermissioned(Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo;Landroid/os/ParcelUuid;)Z > 1,27,2 @101 exception:55,
4 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mSubGroup, <Application,Landroid/os/ParcelUuid> > 2,
6 = invokevirtual < Application, Landroid/os/ParcelUuid, equals(Ljava/lang/Object;)Z > 3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VcnManagementService, mLastSnapshot, <Application,Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot> > 1,
9 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mPkgName, <Application,Ljava/lang/String> > 2,
11 = invokevirtual < Application, Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot, packageHasPermissionsForSubscriptionGroup(Landroid/os/ParcelUuid;Ljava/lang/String;)Z > 8,3,9 @14 exception:10,
conditional branch(ne, to iindex=-1) 11,7,
return 7,
conditional branch(ne, to iindex=-1) 56,28,
conditional branch(ne, to iindex=-1) 49,28,
goto (from iindex= 57 to iindex = 30),
73 = phi  28,28,70,28,52,
76 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mCallback, <Application,Landroid/net/vcn/IVcnStatusCallback> > 27,
78 = getCaughtException ,
invokevirtual < Application, Lcom/android/server/VcnManagementService, logDbg(Ljava/lang/String;Ljava/lang/Throwable;)V > 1,79,78 @150 exception:80,
4 = getstatic < Application, Lcom/android/server/VcnManagementService, TAG, <Application,Ljava/lang/String> >,
return,
monitorexit 32,
return,","depth : 0
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v8 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v8, 0);
	boolean v11 = this.mRegisteredStatusCallbacks.containsKey(v8);
	Object v12 = this.mRegisteredStatusCallbacks.put(v8, v8);
	Object v13 = this.mConfigs.get(p1);
	Object v14 = this.mVcns.get(p1);
	boolean v15 = p0.isCallbackPermissioned(v8, p1);
	VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);
	p0.logDbg(""VcnStatusCallback threw on VCN status change"", caughtException);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public boolean isCallbackPermissioned(VcnManagementService$VcnStatusCallbackInfo p1, ParcelUuid p2){
	boolean v1 = p2.equals(VcnManagementService$VcnStatusCallbackInfo.mSubGroup);
	boolean v2 = this.mLastSnapshot.packageHasPermissionsForSubscriptionGroup(p2, VcnManagementService$VcnStatusCallbackInfo.mPkgName);
	return 0;
}
-----
depth : 1
public void logDbg(String p1, Throwable p2){
	int v1 = Slog.d(this.TAG, p1, p2);
	return;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","registerVcnStatusCallback(Landroid/os/ParcelUuid;Landroid/net/vcn/IVcnStatusCallback;Ljava/lang/String;)V","2","27 = new <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>@44,
32 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 32,
33 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
conditional branch(ne, to iindex=-1) 35,28,
39 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
42 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
45 = checkcast <Application,Landroid/net/vcn/VcnConfig>44 <Application,Landroid/net/vcn/VcnConfig>,
46 = getfield < Application, Lcom/android/server/VcnManagementService, mVcns, <Application,Ljava/util/Map> > 1,
49 = checkcast <Application,Lcom/android/server/vcn/Vcn>48 <Application,Lcom/android/server/vcn/Vcn>,
conditional branch(ne, to iindex=-1) 49,28,
goto (from iindex= 47 to iindex = 5),
52 = phi  28,51,
conditional branch(eq, to iindex=-1) 45,28,
56 = invokevirtual < Application, Lcom/android/server/VcnManagementService, isCallbackPermissioned(Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo;Landroid/os/ParcelUuid;)Z > 1,27,2 @101 exception:55,
4 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mSubGroup, <Application,Landroid/os/ParcelUuid> > 2,
6 = invokevirtual < Application, Landroid/os/ParcelUuid, equals(Ljava/lang/Object;)Z > 3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VcnManagementService, mLastSnapshot, <Application,Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot> > 1,
9 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mPkgName, <Application,Ljava/lang/String> > 2,
11 = invokevirtual < Application, Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot, packageHasPermissionsForSubscriptionGroup(Landroid/os/ParcelUuid;Ljava/lang/String;)Z > 8,3,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot, mPrivilegedPackages, <Application,Ljava/util/Map> > 1,
7 = checkcast <Application,Ljava/util/Set>6 <Application,Ljava/util/Set>,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 9 to iindex = 2),
15 = phi  14,8,
return 15,
conditional branch(ne, to iindex=-1) 11,7,
return 7,
conditional branch(ne, to iindex=-1) 56,28,
conditional branch(ne, to iindex=-1) 49,28,
conditional branch(eq, to iindex=-1) 52,57,
conditional branch(ne, to iindex=-1) 52,58,
goto (from iindex= 62 to iindex = 22),
73 = phi  28,28,70,28,52,
76 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mCallback, <Application,Landroid/net/vcn/IVcnStatusCallback> > 27,
78 = getCaughtException ,
invokevirtual < Application, Lcom/android/server/VcnManagementService, logDbg(Ljava/lang/String;Ljava/lang/Throwable;)V > 1,79,78 @150 exception:80,
monitorexit 32,
return,","depth : 0
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v8 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v8, 0);
	boolean v11 = this.mRegisteredStatusCallbacks.containsKey(v8);
	Object v12 = this.mRegisteredStatusCallbacks.put(v8, v8);
	Object v13 = this.mConfigs.get(p1);
	Object v14 = this.mVcns.get(p1);
	boolean v15 = p0.isCallbackPermissioned(v8, p1);
	VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);
	p0.logDbg(""VcnStatusCallback threw on VCN status change"", caughtException);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public boolean isCallbackPermissioned(VcnManagementService$VcnStatusCallbackInfo p1, ParcelUuid p2){
	boolean v1 = p2.equals(VcnManagementService$VcnStatusCallbackInfo.mSubGroup);
	boolean v2 = this.mLastSnapshot.packageHasPermissionsForSubscriptionGroup(p2, VcnManagementService$VcnStatusCallbackInfo.mPkgName);
	return 0;
}
-----
depth : 2
public boolean packageHasPermissionsForSubscriptionGroup(ParcelUuid p1, String p2){
	Object v1 = this.mPrivilegedPackages.get(p1);
	boolean v2 = v1.contains(p2);
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","registerVcnStatusCallback(Landroid/os/ParcelUuid;Landroid/net/vcn/IVcnStatusCallback;Ljava/lang/String;)V","2","27 = new <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>@44,
32 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 32,
33 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
conditional branch(ne, to iindex=-1) 35,28,
39 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
42 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
45 = checkcast <Application,Landroid/net/vcn/VcnConfig>44 <Application,Landroid/net/vcn/VcnConfig>,
46 = getfield < Application, Lcom/android/server/VcnManagementService, mVcns, <Application,Ljava/util/Map> > 1,
49 = checkcast <Application,Lcom/android/server/vcn/Vcn>48 <Application,Lcom/android/server/vcn/Vcn>,
conditional branch(ne, to iindex=-1) 49,28,
goto (from iindex= 47 to iindex = 5),
52 = phi  28,51,
conditional branch(eq, to iindex=-1) 45,28,
56 = invokevirtual < Application, Lcom/android/server/VcnManagementService, isCallbackPermissioned(Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo;Landroid/os/ParcelUuid;)Z > 1,27,2 @101 exception:55,
4 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mSubGroup, <Application,Landroid/os/ParcelUuid> > 2,
6 = invokevirtual < Application, Landroid/os/ParcelUuid, equals(Ljava/lang/Object;)Z > 3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VcnManagementService, mLastSnapshot, <Application,Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot> > 1,
9 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mPkgName, <Application,Ljava/lang/String> > 2,
11 = invokevirtual < Application, Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot, packageHasPermissionsForSubscriptionGroup(Landroid/os/ParcelUuid;Ljava/lang/String;)Z > 8,3,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot, mPrivilegedPackages, <Application,Ljava/util/Map> > 1,
7 = checkcast <Application,Ljava/util/Set>6 <Application,Ljava/util/Set>,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 9 to iindex = 2),
15 = phi  14,8,
return 15,
conditional branch(ne, to iindex=-1) 11,7,
return 12,
conditional branch(ne, to iindex=-1) 56,28,
conditional branch(ne, to iindex=-1) 49,28,
conditional branch(eq, to iindex=-1) 52,57,
conditional branch(ne, to iindex=-1) 52,58,
goto (from iindex= 62 to iindex = 22),
73 = phi  28,28,70,28,52,
76 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mCallback, <Application,Landroid/net/vcn/IVcnStatusCallback> > 27,
78 = getCaughtException ,
invokevirtual < Application, Lcom/android/server/VcnManagementService, logDbg(Ljava/lang/String;Ljava/lang/Throwable;)V > 1,79,78 @150 exception:80,
monitorexit 32,
return,","depth : 0
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v8 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v8, 0);
	boolean v11 = this.mRegisteredStatusCallbacks.containsKey(v8);
	Object v12 = this.mRegisteredStatusCallbacks.put(v8, v8);
	Object v13 = this.mConfigs.get(p1);
	Object v14 = this.mVcns.get(p1);
	boolean v15 = p0.isCallbackPermissioned(v8, p1);
	VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);
	p0.logDbg(""VcnStatusCallback threw on VCN status change"", caughtException);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public boolean isCallbackPermissioned(VcnManagementService$VcnStatusCallbackInfo p1, ParcelUuid p2){
	boolean v1 = p2.equals(VcnManagementService$VcnStatusCallbackInfo.mSubGroup);
	boolean v2 = this.mLastSnapshot.packageHasPermissionsForSubscriptionGroup(p2, VcnManagementService$VcnStatusCallbackInfo.mPkgName);
	return 1;
}
-----
depth : 2
public boolean packageHasPermissionsForSubscriptionGroup(ParcelUuid p1, String p2){
	Object v1 = this.mPrivilegedPackages.get(p1);
	boolean v2 = v1.contains(p2);
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","registerVcnStatusCallback(Landroid/os/ParcelUuid;Landroid/net/vcn/IVcnStatusCallback;Ljava/lang/String;)V","2","27 = new <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>@44,
32 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 32,
33 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
conditional branch(ne, to iindex=-1) 35,28,
39 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
42 = getfield < Application, Lcom/android/server/VcnManagementService, mConfigs, <Application,Ljava/util/Map> > 1,
45 = checkcast <Application,Landroid/net/vcn/VcnConfig>44 <Application,Landroid/net/vcn/VcnConfig>,
46 = getfield < Application, Lcom/android/server/VcnManagementService, mVcns, <Application,Ljava/util/Map> > 1,
49 = checkcast <Application,Lcom/android/server/vcn/Vcn>48 <Application,Lcom/android/server/vcn/Vcn>,
conditional branch(ne, to iindex=-1) 49,28,
goto (from iindex= 47 to iindex = 5),
52 = phi  28,51,
conditional branch(eq, to iindex=-1) 45,28,
56 = invokevirtual < Application, Lcom/android/server/VcnManagementService, isCallbackPermissioned(Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo;Landroid/os/ParcelUuid;)Z > 1,27,2 @101 exception:55,
4 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mSubGroup, <Application,Landroid/os/ParcelUuid> > 2,
6 = invokevirtual < Application, Landroid/os/ParcelUuid, equals(Ljava/lang/Object;)Z > 3,4 @2 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/VcnManagementService, mLastSnapshot, <Application,Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot> > 1,
9 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mPkgName, <Application,Ljava/lang/String> > 2,
11 = invokevirtual < Application, Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot, packageHasPermissionsForSubscriptionGroup(Landroid/os/ParcelUuid;Ljava/lang/String;)Z > 8,3,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/vcn/TelephonySubscriptionTracker$TelephonySubscriptionSnapshot, mPrivilegedPackages, <Application,Ljava/util/Map> > 1,
7 = checkcast <Application,Ljava/util/Set>6 <Application,Ljava/util/Set>,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 9 to iindex = 2),
15 = phi  14,8,
return 15,
conditional branch(ne, to iindex=-1) 11,7,
return 7,
conditional branch(ne, to iindex=-1) 56,28,
conditional branch(ne, to iindex=-1) 49,28,
goto (from iindex= 57 to iindex = 30),
73 = phi  28,28,70,28,52,
76 = getfield < Application, Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo, mCallback, <Application,Landroid/net/vcn/IVcnStatusCallback> > 27,
78 = getCaughtException ,
invokevirtual < Application, Lcom/android/server/VcnManagementService, logDbg(Ljava/lang/String;Ljava/lang/Throwable;)V > 1,79,78 @150 exception:80,
monitorexit 32,
return,","depth : 0
public void registerVcnStatusCallback(ParcelUuid p1, IVcnStatusCallback p2, String p3){
	IBinder v8 = p2.asBinder();
	VcnManagementService$VcnStatusCallbackInfo v8 = new VcnManagementService$VcnStatusCallbackInfo(p0,p1,p2,p3,v1,0);
	v8.linkToDeath(v8, 0);
	boolean v11 = this.mRegisteredStatusCallbacks.containsKey(v8);
	Object v12 = this.mRegisteredStatusCallbacks.put(v8, v8);
	Object v13 = this.mConfigs.get(p1);
	Object v14 = this.mVcns.get(p1);
	boolean v15 = p0.isCallbackPermissioned(v8, p1);
	VcnManagementService$VcnStatusCallbackInfo.mCallback.onVcnStatusChanged(phiInstruction);
	p0.logDbg(""VcnStatusCallback threw on VCN status change"", caughtException);
	Binder.restoreCallingIdentity(v2);
	return;
}
-----
depth : 1
public boolean isCallbackPermissioned(VcnManagementService$VcnStatusCallbackInfo p1, ParcelUuid p2){
	boolean v1 = p2.equals(VcnManagementService$VcnStatusCallbackInfo.mSubGroup);
	boolean v2 = this.mLastSnapshot.packageHasPermissionsForSubscriptionGroup(p2, VcnManagementService$VcnStatusCallbackInfo.mPkgName);
	return 0;
}
-----
depth : 2
public boolean packageHasPermissionsForSubscriptionGroup(ParcelUuid p1, String p2){
	Object v1 = this.mPrivilegedPackages.get(p1);
	boolean v2 = v1.contains(p2);
	return phiInstruction;
}
-----
","NONE"

"Lcom/android/server/VcnManagementService","unregisterVcnStatusCallback(Landroid/net/vcn/IVcnStatusCallback;)V","0","10 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
14 = checkcast <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>13 <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>,
conditional branch(eq, to iindex=-1) 14,15,
monitorexit 10,
return,","depth : 0
public void unregisterVcnStatusCallback(IVcnStatusCallback p1){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = Objects.requireNonNull(p1, ""callback must not be null"");
	IBinder v3 = p1.asBinder();
	Object v4 = this.mRegisteredStatusCallbacks.remove(v3);
	boolean v5 = v3.unlinkToDeath(v4, 0);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","NONE"
"Lcom/android/server/VcnManagementService","unregisterVcnStatusCallback(Landroid/net/vcn/IVcnStatusCallback;)V","0","10 = getfield < Application, Lcom/android/server/VcnManagementService, mLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/VcnManagementService, mRegisteredStatusCallbacks, <Application,Ljava/util/Map> > 1,
14 = checkcast <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>13 <Application,Lcom/android/server/VcnManagementService$VcnStatusCallbackInfo>,
conditional branch(eq, to iindex=-1) 14,15,
monitorexit 10,
return,","depth : 0
public void unregisterVcnStatusCallback(IVcnStatusCallback p1){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = Objects.requireNonNull(p1, ""callback must not be null"");
	IBinder v3 = p1.asBinder();
	Object v4 = this.mRegisteredStatusCallbacks.remove(v3);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","NONE"

