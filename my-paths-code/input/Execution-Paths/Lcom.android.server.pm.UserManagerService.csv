"Class","Method","Depth","Trace Instruction(s) ...","Java Code Representation","Access Control Level"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserInfo(I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,7 @12 exception:8,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
monitorexit 5,
return 9,","depth : 0
public UserInfo getUserInfo(int p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""query user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	UserInfo v3 = p0.userWithName(v2);
	return v3;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgePlain()I > 6 @18 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgePlain, <Primordial,I> > 1,
return 2,
return 11,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	int v4 = v2.getBadgePlain();
	return v4;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgePlain(){
	return this.mBadgePlain;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgePlain()I > 6 @18 exception:10,
return 11,","depth : 0
public int getUserBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	int v4 = v2.getBadgePlain();
	return v4;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserSwitcherEnabled(I)Z","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
7 = invokestatic < Application, Landroid/content/res/Resources, getSystem()Landroid/content/res/Resources; > @6 exception:6,
10 = invokevirtual < Application, Landroid/content/res/Resources, getBoolean(I)Z > 7,8 @13 exception:9,
conditional branch(eq, to iindex=-1) 13,15,
goto (from iindex= 15 to iindex = 2),
16 = phi  14,15,
conditional branch(eq, to iindex=-1) 18,15,
30 = phi  14,15,
return 30,","depth : 0
public boolean isUserSwitcherEnabled(int p1){
	ContentResolver v1 = this.mContext.getContentResolver();
	Resources v2 = Resources.getSystem();
	boolean v3 = v2.getBoolean(17891761);
	int v4 = Settings$Global.getInt(v1, ""user_switcher_enabled"", v3);
	boolean v5 = UserManager.supportsMultipleUsers();
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","0","8 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
monitorexit 24,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","1","8 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
8 = new <Application,Ljava/util/ArrayList>@4,
34 = phi  33,12,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","1","7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @28 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 1 @2 exception:2,
return 3,
19 = phi  18,7,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
8 = new <Application,Ljava/util/ArrayList>@4,
34 = phi  33,12,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	boolean v2 = UserManagerService.hasCreateUsersPermission();
	long v3 = Binder.clearCallingIdentity();
	List v4 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v3);
	return v4;
}
-----
depth : 1
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","2","8 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 6,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
47 = phi  46,12,
conditional branch(ge, to iindex=-1) 47,15,
return 7,
8 = new <Application,Ljava/util/ArrayList>@4,
34 = phi  33,12,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	int v4 = this.mUsers.size();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","2","8 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 6,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
47 = phi  46,12,
conditional branch(ge, to iindex=-1) 47,15,
return 7,
8 = new <Application,Ljava/util/ArrayList>@4,
34 = phi  33,12,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	int v4 = this.mUsers.size();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfiles(IZ)Ljava/util/List;","2","8 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 16 @23 exception:17,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
goto (from iindex= 12 to iindex = 5),
19 = phi  18,7,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfilesLU(ILjava/lang/String;ZZ)Ljava/util/List; > 1,2,25,3,19 @40 exception:26,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @0 exception:6,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 6,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
47 = phi  46,12,
conditional branch(ge, to iindex=-1) 47,15,
return 7,
8 = new <Application,Ljava/util/ArrayList>@4,
34 = phi  33,12,
conditional branch(ge, to iindex=-1) 34,14,
return 8,
monitorexit 24,
return 27,","depth : 0
public List getProfiles(int p1, boolean p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	List v8 = p0.getProfilesLU(p1, 0, p2, phiInstruction);
	Binder.restoreCallingIdentity(v7);
	return v8;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return phiInstruction;
}
-----
depth : 1
public List getProfilesLU(int p1, String p2, boolean p3, boolean p4){
	IntArray v1 = p0.getProfileIdsLU(p1, p2, p3);
	ArrayList v1 = new ArrayList(v2);
	int v2 = v1.size();
	int v4 = v1.size();
	return v1;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	int v4 = this.mUsers.size();
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","0","9 = new <Application,Ljava/util/ArrayList>@16,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","1","9 = new <Application,Ljava/util/ArrayList>@16,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/RestrictionsSet>5 <Application,Lcom/android/server/pm/RestrictionsSet>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/pm/RestrictionsSet>@10,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
12 = phi  6,8,
return 12,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
4 = new <Application,Ljava/util/ArrayList>@0,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
4 = new <Application,Ljava/util/ArrayList>@0,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int p1){
	Object v1 = this.mDevicePolicyLocalUserRestrictions.get(p1);
	RestrictionsSet v1 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
depth : 1
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","1","9 = new <Application,Ljava/util/ArrayList>@16,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/RestrictionsSet>5 <Application,Lcom/android/server/pm/RestrictionsSet>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/pm/RestrictionsSet>@10,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
12 = phi  6,8,
return 12,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
4 = new <Application,Ljava/util/ArrayList>@0,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
4 = new <Application,Ljava/util/ArrayList>@0,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	RestrictionsSet v5 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v6 = v5.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v7 = v2.addAll(v6);
	List v8 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int p1){
	Object v1 = this.mDevicePolicyLocalUserRestrictions.get(p1);
	RestrictionsSet v1 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
depth : 1
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","2","9 = new <Application,Ljava/util/ArrayList>@16,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","2","9 = new <Application,Ljava/util/ArrayList>@16,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("")"");
	StringBuilder v10 = v4.append("": "");
	StringBuilder v11 = v4.append(p1);
	boolean v12 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v13 = v4.toString();
	int v14 = Slog.wtf(""UserRestrictionsUtils"", v13);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List;","2","9 = new <Application,Ljava/util/ArrayList>@16,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
monitorexit 22,
return 9,","depth : 0
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	RestrictionsSet v5 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v6 = v5.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v7 = v2.addAll(v6);
	List v8 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	return v2;
}
-----
depth : 1
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","0","6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","1","6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
8 = binaryop(and) 6 , 7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 7 to iindex = 3),
11 = phi  5,10,
return 11,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isDemo(){
	boolean v1 = UserManager.isUserTypeDemo(this.userType);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","1","6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
8 = binaryop(and) 6 , 7,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 2),
11 = phi  5,10,
return 11,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isDemo(){
	boolean v1 = UserManager.isUserTypeDemo(this.userType);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","2","6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","2","6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 11 to iindex = 2),
15 = phi  5,13,
return 15,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
conditional branch(eq, to iindex=-1) 29,7,
goto (from iindex= 28 to iindex = 2),
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isDemoUser(I)Z","2","6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @6 exception:5,
4 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 2 @4 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
return 4,
conditional branch(eq, to iindex=-1) 6,7,
goto (from iindex= 6 to iindex = 29),
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 25,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @44 exception:26,
conditional branch(eq, to iindex=-1) 27,7,
29 = invokevirtual < Application, Landroid/content/pm/UserInfo, isDemo()Z > 27 @50 exception:28,
conditional branch(eq, to iindex=-1) 29,7,
34 = phi  33,7,
monitorexit 25,
return 34,","depth : 0
public boolean isDemoUser(int p1){
	boolean v2 = UserManagerService.hasManageUsersPermission();
	UserInfo v3 = p0.getUserInfoLU(p1);
	boolean v4 = v3.isDemo();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","removeUserEvenWhenDisallowed(I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @5 exception:5,
return 6,","depth : 0
public boolean removeUserEvenWhenDisallowed(int p1){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	boolean v2 = p0.removeUserUnchecked(p1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserEvenWhenDisallowed(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @5 exception:5,
return 6,","depth : 0
public boolean removeUserEvenWhenDisallowed(int p1){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	boolean v2 = p0.removeUserUnchecked(p1);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserEvenWhenDisallowed(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @5 exception:5,
return 6,","depth : 0
public boolean removeUserEvenWhenDisallowed(int p1){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	boolean v2 = p0.removeUserUnchecked(p1);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","0","conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","1","conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, verifyCallingPackage(Ljava/lang/String;I)V > 1,2,3 @0 exception:7,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @3 exception:8,
conditional branch(eq, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 5,10,
conditional branch(ne, to iindex=-1) 6,10,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,18,4 @18 exception:19,
conditional branch(eq, to iindex=-1) 20,10,
26 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 24,3 @26 exception:25,
conditional branch(eq, to iindex=-1) 26,10,
27 = load_metadata: <Application,Landroid/content/pm/ShortcutServiceInternal>, <Primordial,Ljava/lang/Class>,
29 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 27 @35 exception:28,
30 = checkcast <Application,Landroid/content/pm/ShortcutServiceInternal>29 <Application,Landroid/content/pm/ShortcutServiceInternal>,
conditional branch(eq, to iindex=-1) 30,10,
conditional branch(eq, to iindex=-1) 32,10,
return,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @6 exception:5,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > = 7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return 9,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:7,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @7 exception:9,
conditional branch(eq, to iindex=-1) 8,11,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 8 @13 exception:12,
conditional branch(eq, to iindex=-1) 13,11,
31 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 8 @19 exception:30,
conditional branch(ne, to iindex=-1) 31,3,
32 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
34 = binaryop(xor) 32 , 33,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 34,
35 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
37 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,35 @57 exception:36,
monitorexit 6,
38 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 38,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,37 @65 exception:39,
monitorexit 38,
conditional branch(eq, to iindex=-1) 3,11,
63 = load_metadata: <Application,Landroid/app/ActivityManagerInternal>, <Primordial,Ljava/lang/Class>,
65 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 63 @82 exception:64,
66 = checkcast <Application,Landroid/app/ActivityManagerInternal>65 <Application,Landroid/app/ActivityManagerInternal>,
goto (from iindex= 46 to iindex = 17),
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logQuietModeEnabled(IZLjava/lang/String;)V > 1,2,3,5 @108 exception:73,
goto (from iindex= 56 to iindex = 4),
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 8 @115 exception:80,
83 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 10 @119 exception:82,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, broadcastProfileAvailabilityChanges(Landroid/os/UserHandle;Landroid/os/UserHandle;Z)V > 1,81,83,3 @123 exception:84,
return,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
depth : 1
public void ensureCanModifyQuietMode(String p1, int p2, int p3, boolean p4, boolean p5){
	p0.verifyCallingPackage(p1, p2);
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getUserId(p2);
	boolean v4 = p0.isSameProfileGroupNoChecks(v3, p3);
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MODIFY_QUIET_MODE"", p2);
	Object v6 = LocalServices.getService(ShortcutServiceInterna.class);
	boolean v7 = v6.isForegroundDefaultLauncher(p1, p2);
	return;
}
-----
depth : 1
public PackageManagerInternal getPackageManagerInternal(){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	this.mPmInternal = v1;
	return this.mPmInternal;
}
-----
depth : 1
public void setQuietModeEnabled(int p1, boolean p2, IntentSender p3, String p4){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getProfileParentLU(p1);
	boolean v3 = v1.isManagedProfile();
	boolean v4 = v1.isQuietModeEnabled();
	UserInfo.flags = (UserInfo.flags ^ 128);
	UserManagerService$UserData v5 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v5);
	IActivityManager v7 = ActivityManager.getService();
	int v8 = v7.stopUser(p1, 1, 0);
	Object v9 = LocalServices.getService(ActivityManagerInterna.class);
	v9.killForegroundAppsForUser(p1);
	p0.logQuietModeEnabled(p1, p2, p4);
	UserHandle v12 = v1.getUserHandle();
	UserHandle v13 = v2.getUserHandle();
	p0.broadcastProfileAvailabilityChanges(v12, v13, p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","2","conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, verifyCallingPackage(Ljava/lang/String;I)V > 1,2,3 @0 exception:7,
return,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @3 exception:8,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 5,10,
conditional branch(ne, to iindex=-1) 6,10,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,18,4 @18 exception:19,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 20,10,
26 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 24,3 @26 exception:25,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 26,10,
27 = load_metadata: <Application,Landroid/content/pm/ShortcutServiceInternal>, <Primordial,Ljava/lang/Class>,
29 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 27 @35 exception:28,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
30 = checkcast <Application,Landroid/content/pm/ShortcutServiceInternal>29 <Application,Landroid/content/pm/ShortcutServiceInternal>,
conditional branch(eq, to iindex=-1) 30,10,
conditional branch(eq, to iindex=-1) 32,10,
return,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @6 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > = 7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return 9,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @7 exception:9,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
return 9,
conditional branch(eq, to iindex=-1) 8,11,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 8 @13 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 13,11,
31 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 8 @19 exception:30,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 31,3,
32 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
34 = binaryop(xor) 32 , 33,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 34,
35 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
37 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,35 @57 exception:36,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
monitorexit 6,
38 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 38,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,37 @65 exception:39,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 38,
conditional branch(eq, to iindex=-1) 3,11,
63 = load_metadata: <Application,Landroid/app/ActivityManagerInternal>, <Primordial,Ljava/lang/Class>,
65 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 63 @82 exception:64,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
66 = checkcast <Application,Landroid/app/ActivityManagerInternal>65 <Application,Landroid/app/ActivityManagerInternal>,
goto (from iindex= 46 to iindex = 17),
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logQuietModeEnabled(IZLjava/lang/String;)V > 1,2,3,5 @108 exception:73,
8 = new <Application,[Ljava/lang/Object>@57 ,
arraystore 8[9] = 4,
arraystore 8[12] = 11,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
monitorexit 14,
conditional branch(ne, to iindex=-1) 16,9,
24 = binaryop(lt) 22 , 23,
conditional branch(eq, to iindex=-1) 24,9,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 16,
26 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 25,
29 = phi  28,26,
34 = binaryop(sub) 20 , 29,
38 = new <Application,[Ljava/lang/String>@6212 ,
arraystore 38[9] = 4,
return,
goto (from iindex= 56 to iindex = 4),
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 8 @115 exception:80,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
return 4,
83 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 10 @119 exception:82,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
return 4,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, broadcastProfileAvailabilityChanges(Landroid/os/UserHandle;Landroid/os/UserHandle;Z)V > 1,81,83,3 @123 exception:84,
5 = new <Application,Landroid/content/Intent>@0,
conditional branch(eq, to iindex=-1) 4,7,
goto (from iindex= 5 to iindex = 6),
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,
return,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
depth : 1
public void ensureCanModifyQuietMode(String p1, int p2, int p3, boolean p4, boolean p5){
	p0.verifyCallingPackage(p1, p2);
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getUserId(p2);
	boolean v4 = p0.isSameProfileGroupNoChecks(v3, p3);
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MODIFY_QUIET_MODE"", p2);
	Object v6 = LocalServices.getService(ShortcutServiceInterna.class);
	boolean v7 = v6.isForegroundDefaultLauncher(p1, p2);
	return;
}
-----
depth : 2
public void verifyCallingPackage(String p1, int p2){
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public PackageManagerInternal getPackageManagerInternal(){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	this.mPmInternal = v1;
	return this.mPmInternal;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public void setQuietModeEnabled(int p1, boolean p2, IntentSender p3, String p4){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getProfileParentLU(p1);
	boolean v3 = v1.isManagedProfile();
	boolean v4 = v1.isQuietModeEnabled();
	UserInfo.flags = (UserInfo.flags ^ 128);
	UserManagerService$UserData v5 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v5);
	IActivityManager v7 = ActivityManager.getService();
	int v8 = v7.stopUser(p1, 1, 0);
	Object v9 = LocalServices.getService(ActivityManagerInterna.class);
	v9.killForegroundAppsForUser(p1);
	p0.logQuietModeEnabled(p1, p2, p4);
	UserHandle v12 = v1.getUserHandle();
	UserHandle v13 = v2.getUserHandle();
	p0.broadcastProfileAvailabilityChanges(v12, v13, p2);
	return;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 2
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 2
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public void logQuietModeEnabled(int p1, boolean p2, String p3){
	Object v0 = new Object(2);
	Boolean v1 = Boolean.valueOf(p2);
	Slogf.i(""UserManagerService"", ""requestQuietModeEnabled called by package %s, with enableQuietMode %b."", v0);
	UserManagerService$UserData v3 = p0.getUserDataLU(p1);
	long v4 = System.currentTimeMillis();
	long v5 = v3.getLastRequestQuietModeEnabledMillis();
	DevicePolicyEventLogger v6 = DevicePolicyEventLogger.createEvent(55);
	String v6 = new String(1);
	DevicePolicyEventLogger v7 = v6.setStrings(v6);
	DevicePolicyEventLogger v8 = v7.setBoolean(p2);
	DevicePolicyEventLogger v9 = v8.setTimePeriod((v4 - phiInstruction));
	v9.write();
	v3.setLastRequestQuietModeEnabledMillis(v4);
	return;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public void broadcastProfileAvailabilityChanges(UserHandle p1, UserHandle p2, boolean p3){
	Intent v0 = new Intent();
	Intent v2 = v0.setAction(""android.intent.action.MANAGED_PROFILE_UNAVAILABLE"");
	Intent v3 = v0.putExtra(""android.intent.extra.QUIET_MODE"", p3);
	Intent v4 = v0.putExtra(""android.intent.extra.USER"", p1);
	int v5 = p1.getIdentifier();
	Intent v6 = v0.putExtra(""android.intent.extra.user_handle"", v5);
	DevicePolicyManagerInternal v7 = p0.getDevicePolicyManagerInternal();
	v7.broadcastIntentToManifestReceivers(v0, p2, 1);
	Intent v9 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","2","conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, verifyCallingPackage(Ljava/lang/String;I)V > 1,2,3 @0 exception:7,
return,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @3 exception:8,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 5,10,
conditional branch(ne, to iindex=-1) 6,10,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,18,4 @18 exception:19,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 20,10,
26 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 24,3 @26 exception:25,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 26,10,
27 = load_metadata: <Application,Landroid/content/pm/ShortcutServiceInternal>, <Primordial,Ljava/lang/Class>,
29 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 27 @35 exception:28,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
30 = checkcast <Application,Landroid/content/pm/ShortcutServiceInternal>29 <Application,Landroid/content/pm/ShortcutServiceInternal>,
conditional branch(eq, to iindex=-1) 30,10,
conditional branch(eq, to iindex=-1) 32,10,
return,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @6 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > = 7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return 9,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @7 exception:9,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
return 9,
conditional branch(eq, to iindex=-1) 8,11,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 8 @13 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 13,11,
31 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 8 @19 exception:30,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 31,3,
32 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
34 = binaryop(xor) 32 , 33,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 34,
35 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
37 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,35 @57 exception:36,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
monitorexit 6,
38 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 38,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,37 @65 exception:39,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 38,
conditional branch(eq, to iindex=-1) 3,11,
63 = load_metadata: <Application,Landroid/app/ActivityManagerInternal>, <Primordial,Ljava/lang/Class>,
65 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 63 @82 exception:64,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
66 = checkcast <Application,Landroid/app/ActivityManagerInternal>65 <Application,Landroid/app/ActivityManagerInternal>,
goto (from iindex= 46 to iindex = 17),
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logQuietModeEnabled(IZLjava/lang/String;)V > 1,2,3,5 @108 exception:73,
8 = new <Application,[Ljava/lang/Object>@57 ,
arraystore 8[9] = 4,
arraystore 8[12] = 11,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
monitorexit 14,
conditional branch(ne, to iindex=-1) 16,9,
24 = binaryop(lt) 22 , 23,
conditional branch(eq, to iindex=-1) 24,9,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 16,
26 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 25,
29 = phi  28,26,
34 = binaryop(sub) 20 , 29,
38 = new <Application,[Ljava/lang/String>@6212 ,
arraystore 38[9] = 4,
return,
goto (from iindex= 56 to iindex = 4),
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 8 @115 exception:80,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
return 4,
83 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 10 @119 exception:82,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
return 4,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, broadcastProfileAvailabilityChanges(Landroid/os/UserHandle;Landroid/os/UserHandle;Z)V > 1,81,83,3 @123 exception:84,
5 = new <Application,Landroid/content/Intent>@0,
conditional branch(eq, to iindex=-1) 4,7,
goto (from iindex= 5 to iindex = 6),
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,
return,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
depth : 1
public void ensureCanModifyQuietMode(String p1, int p2, int p3, boolean p4, boolean p5){
	p0.verifyCallingPackage(p1, p2);
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getUserId(p2);
	boolean v4 = p0.isSameProfileGroupNoChecks(v3, p3);
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MODIFY_QUIET_MODE"", p2);
	Object v6 = LocalServices.getService(ShortcutServiceInterna.class);
	boolean v7 = v6.isForegroundDefaultLauncher(p1, p2);
	return;
}
-----
depth : 2
public void verifyCallingPackage(String p1, int p2){
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public PackageManagerInternal getPackageManagerInternal(){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	this.mPmInternal = v1;
	return this.mPmInternal;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public void setQuietModeEnabled(int p1, boolean p2, IntentSender p3, String p4){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getProfileParentLU(p1);
	boolean v3 = v1.isManagedProfile();
	boolean v4 = v1.isQuietModeEnabled();
	UserInfo.flags = (UserInfo.flags ^ 128);
	UserManagerService$UserData v5 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v5);
	IActivityManager v7 = ActivityManager.getService();
	int v8 = v7.stopUser(p1, 1, 0);
	Object v9 = LocalServices.getService(ActivityManagerInterna.class);
	v9.killForegroundAppsForUser(p1);
	p0.logQuietModeEnabled(p1, p2, p4);
	UserHandle v12 = v1.getUserHandle();
	UserHandle v13 = v2.getUserHandle();
	p0.broadcastProfileAvailabilityChanges(v12, v13, p2);
	return;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 2
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
depth : 2
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public void logQuietModeEnabled(int p1, boolean p2, String p3){
	Object v0 = new Object(2);
	Boolean v1 = Boolean.valueOf(p2);
	Slogf.i(""UserManagerService"", ""requestQuietModeEnabled called by package %s, with enableQuietMode %b."", v0);
	UserManagerService$UserData v3 = p0.getUserDataLU(p1);
	long v4 = System.currentTimeMillis();
	long v5 = v3.getLastRequestQuietModeEnabledMillis();
	DevicePolicyEventLogger v6 = DevicePolicyEventLogger.createEvent(55);
	String v6 = new String(1);
	DevicePolicyEventLogger v7 = v6.setStrings(v6);
	DevicePolicyEventLogger v8 = v7.setBoolean(p2);
	DevicePolicyEventLogger v9 = v8.setTimePeriod((v4 - phiInstruction));
	v9.write();
	v3.setLastRequestQuietModeEnabledMillis(v4);
	return;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public void broadcastProfileAvailabilityChanges(UserHandle p1, UserHandle p2, boolean p3){
	Intent v0 = new Intent();
	Intent v2 = v0.setAction(""android.intent.action.MANAGED_PROFILE_UNAVAILABLE"");
	Intent v3 = v0.putExtra(""android.intent.extra.QUIET_MODE"", p3);
	Intent v4 = v0.putExtra(""android.intent.extra.USER"", p1);
	int v5 = p1.getIdentifier();
	Intent v6 = v0.putExtra(""android.intent.extra.user_handle"", v5);
	DevicePolicyManagerInternal v7 = p0.getDevicePolicyManagerInternal();
	v7.broadcastIntentToManifestReceivers(v0, p2, 1);
	Intent v9 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","requestQuietModeEnabled(Ljava/lang/String;ZILandroid/content/IntentSender;I)Z","2","conditional branch(eq, to iindex=-1) 3,9,
conditional branch(ne, to iindex=-1) 5,9,
goto (from iindex= 3 to iindex = 9),
14 = binaryop(and) 6 , 13,
conditional branch(eq, to iindex=-1) 14,9,
goto (from iindex= 13 to iindex = 2),
16 = phi  15,9,
18 = binaryop(and) 6 , 17,
conditional branch(eq, to iindex=-1) 18,9,
goto (from iindex= 18 to iindex = 2),
19 = phi  15,9,
conditional branch(eq, to iindex=-1) 16,9,
conditional branch(ne, to iindex=-1) 19,9,
goto (from iindex= 22 to iindex = 24),
conditional branch(eq, to iindex=-1) 5,9,
goto (from iindex= 37 to iindex = 2),
33 = phi  15,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, ensureCanModifyQuietMode(Ljava/lang/String;IIZZ)V > 1,2,32,4,33,16 @73 exception:34,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, verifyCallingPackage(Ljava/lang/String;I)V > 1,2,3 @0 exception:7,
return,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @3 exception:8,
return 4,
conditional branch(eq, to iindex=-1) 9,10,
conditional branch(ne, to iindex=-1) 5,10,
conditional branch(ne, to iindex=-1) 6,10,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,18,4 @18 exception:19,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 20,10,
26 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 24,3 @26 exception:25,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 26,10,
27 = load_metadata: <Application,Landroid/content/pm/ShortcutServiceInternal>, <Primordial,Ljava/lang/Class>,
29 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 27 @35 exception:28,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
30 = checkcast <Application,Landroid/content/pm/ShortcutServiceInternal>29 <Application,Landroid/content/pm/ShortcutServiceInternal>,
conditional branch(eq, to iindex=-1) 30,10,
conditional branch(eq, to iindex=-1) 32,10,
return,
conditional branch(eq, to iindex=-1) 19,9,
36 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getPackageManagerInternal()Landroid/content/pm/PackageManagerInternal; > 1 @78 exception:35,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
conditional branch(ne, to iindex=-1) 2,3,
4 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
6 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 4 @6 exception:5,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
7 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>6 <Application,Landroid/content/pm/PackageManagerInternal>,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > = 7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPmInternal, <Application,Landroid/content/pm/PackageManagerInternal> > 1,
return 9,
40 = invokevirtual < Application, Landroid/content/ComponentName, getPackageName()Ljava/lang/String; > 38 @86 exception:39,
conditional branch(ne, to iindex=-1) 42,9,
goto (from iindex= 54 to iindex = 9),
conditional branch(eq, to iindex=-1) 3,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setQuietModeEnabled(IZLandroid/content/IntentSender;Ljava/lang/String;)V > 1,4,15,5,2 @111 exception:87,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @7 exception:9,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
return 9,
conditional branch(eq, to iindex=-1) 8,11,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 8 @13 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 13,11,
31 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 8 @19 exception:30,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 31,3,
32 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
34 = binaryop(xor) 32 , 33,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 34,
35 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
37 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,35 @57 exception:36,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
monitorexit 6,
38 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 38,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,37 @65 exception:39,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 38,
conditional branch(eq, to iindex=-1) 3,11,
63 = load_metadata: <Application,Landroid/app/ActivityManagerInternal>, <Primordial,Ljava/lang/Class>,
65 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 63 @82 exception:64,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
66 = checkcast <Application,Landroid/app/ActivityManagerInternal>65 <Application,Landroid/app/ActivityManagerInternal>,
goto (from iindex= 46 to iindex = 17),
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logQuietModeEnabled(IZLjava/lang/String;)V > 1,2,3,5 @108 exception:73,
8 = new <Application,[Ljava/lang/Object>@57 ,
arraystore 8[9] = 4,
arraystore 8[12] = 11,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
monitorexit 14,
conditional branch(ne, to iindex=-1) 16,9,
24 = binaryop(lt) 22 , 23,
conditional branch(eq, to iindex=-1) 24,9,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 16,
26 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 25,
29 = phi  28,26,
34 = binaryop(sub) 20 , 29,
38 = new <Application,[Ljava/lang/String>@6212 ,
arraystore 38[9] = 4,
return,
goto (from iindex= 56 to iindex = 4),
81 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 8 @115 exception:80,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
return 4,
83 = invokevirtual < Application, Landroid/content/pm/UserInfo, getUserHandle()Landroid/os/UserHandle; > 10 @119 exception:82,
2 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 1,
return 4,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, broadcastProfileAvailabilityChanges(Landroid/os/UserHandle;Landroid/os/UserHandle;Z)V > 1,81,83,3 @123 exception:84,
5 = new <Application,Landroid/content/Intent>@0,
conditional branch(eq, to iindex=-1) 4,7,
goto (from iindex= 5 to iindex = 6),
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,
return,
return 15,","depth : 0
public boolean requestQuietModeEnabled(String p1, boolean p2, int p3, IntentSender p4, int p5){
	Object v1 = Objects.requireNonNull(p1);
	int v2 = Binder.getCallingUid();
	p0.ensureCanModifyQuietMode(p1, v2, p3, phiInstruction, phiInstruction);
	PackageManagerInternal v4 = p0.getPackageManagerInternal();
	ComponentName v5 = v4.getSystemUiServiceComponent();
	String v6 = v5.getPackageName();
	boolean v7 = p1.equals(v6);
	long v8 = Binder.clearCallingIdentity();
	p0.setQuietModeEnabled(p3, 1, p4, p1);
	Binder.restoreCallingIdentity(v8);
	return 1;
}
-----
depth : 1
public void ensureCanModifyQuietMode(String p1, int p2, int p3, boolean p4, boolean p5){
	p0.verifyCallingPackage(p1, p2);
	boolean v2 = UserManagerService.hasManageUsersPermission();
	int v3 = UserHandle.getUserId(p2);
	boolean v4 = p0.isSameProfileGroupNoChecks(v3, p3);
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.MODIFY_QUIET_MODE"", p2);
	Object v6 = LocalServices.getService(ShortcutServiceInterna.class);
	boolean v7 = v6.isForegroundDefaultLauncher(p1, p2);
	return;
}
-----
depth : 2
public void verifyCallingPackage(String p1, int p2){
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public PackageManagerInternal getPackageManagerInternal(){
	Object v1 = LocalServices.getService(PackageManagerInterna.class);
	this.mPmInternal = v1;
	return this.mPmInternal;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 1
public void setQuietModeEnabled(int p1, boolean p2, IntentSender p3, String p4){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getProfileParentLU(p1);
	boolean v3 = v1.isManagedProfile();
	boolean v4 = v1.isQuietModeEnabled();
	UserInfo.flags = (UserInfo.flags ^ 128);
	UserManagerService$UserData v5 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v5);
	IActivityManager v7 = ActivityManager.getService();
	int v8 = v7.stopUser(p1, 1, 0);
	Object v9 = LocalServices.getService(ActivityManagerInterna.class);
	v9.killForegroundAppsForUser(p1);
	p0.logQuietModeEnabled(p1, p2, p4);
	UserHandle v12 = v1.getUserHandle();
	UserHandle v13 = v2.getUserHandle();
	p0.broadcastProfileAvailabilityChanges(v12, v13, p2);
	return;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 2
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 2
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
depth : 2
public void logQuietModeEnabled(int p1, boolean p2, String p3){
	Object v0 = new Object(2);
	Boolean v1 = Boolean.valueOf(p2);
	Slogf.i(""UserManagerService"", ""requestQuietModeEnabled called by package %s, with enableQuietMode %b."", v0);
	UserManagerService$UserData v3 = p0.getUserDataLU(p1);
	long v4 = System.currentTimeMillis();
	long v5 = v3.getLastRequestQuietModeEnabledMillis();
	DevicePolicyEventLogger v6 = DevicePolicyEventLogger.createEvent(55);
	String v6 = new String(1);
	DevicePolicyEventLogger v7 = v6.setStrings(v6);
	DevicePolicyEventLogger v8 = v7.setBoolean(p2);
	DevicePolicyEventLogger v9 = v8.setTimePeriod((v4 - phiInstruction));
	v9.write();
	v3.setLastRequestQuietModeEnabledMillis(v4);
	return;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public UserHandle getUserHandle(){
	UserHandle v1 = UserHandle.of(this.id);
	return v1;
}
-----
depth : 2
public void broadcastProfileAvailabilityChanges(UserHandle p1, UserHandle p2, boolean p3){
	Intent v0 = new Intent();
	Intent v2 = v0.setAction(""android.intent.action.MANAGED_PROFILE_UNAVAILABLE"");
	Intent v3 = v0.putExtra(""android.intent.extra.QUIET_MODE"", p3);
	Intent v4 = v0.putExtra(""android.intent.extra.USER"", p1);
	int v5 = p1.getIdentifier();
	Intent v6 = v0.putExtra(""android.intent.extra.user_handle"", v5);
	DevicePolicyManagerInternal v7 = p0.getDevicePolicyManagerInternal();
	v7.broadcastIntentToManifestReceivers(v0, p2, 1);
	Intent v9 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, p2);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 1
public boolean isAdmin(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 1
public boolean isAdmin(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public boolean isRestricted(){
	boolean v1 = UserManager.isUserTypeRestricted(this.userType);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
goto (from iindex= 11 to iindex = 24),
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public boolean isRestricted(){
	boolean v1 = UserManager.isUserTypeRestricted(this.userType);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canHaveRestrictedProfile(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 7 @15 exception:9,
3 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 1 @0 exception:2,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 1 @7 exception:5,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(ne, to iindex=-1) 6,4,
8 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 1 @13 exception:7,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 10,8,
12 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 7 @22 exception:11,
conditional branch(ne, to iindex=-1) 12,8,
monitorexit 5,
return 8,","depth : 0
public boolean canHaveRestrictedProfile(int p1){
	UserManagerService.checkManageUsersPermission(""canHaveRestrictedProfile"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.canHaveProfile();
	boolean v4 = v2.isAdmin();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public boolean isRestricted(){
	boolean v1 = UserManager.isUserTypeRestricted(this.userType);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isSettingRestrictedForUser(Ljava/lang/String;ILjava/lang/String;I)Z","0","12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
14 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSettingRestrictedForUser(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;I)Z > 12,2,3,4,5 @10 exception:13,
return 14,","depth : 0
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSettingRestrictedForUser(Ljava/lang/String;ILjava/lang/String;I)Z","1","12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
14 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSettingRestrictedForUser(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;I)Z > 12,2,3,4,5 @10 exception:13,
8 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
11 = checkcast <Application,Landroid/os/UserManager>10 <Application,Landroid/os/UserManager>,
10: switch 13 [-2099894345->324,-1796809747->313,-1490222856->302,-1115710219->291,-970351711->280,-693072130->269,-623873498->258,-416662510->247,-101820922->233,-32505807->219,-16943007->205,58027029->191,258514750->177,683724341->163,926123534->149,1073289638->135,1223734380->121,1275530062->107,1334097968->93,1602982312->79,1646894952->65,1661297501->51,1701140351->37,1735689732->23] default: 21,
goto (from iindex= 11 to iindex = 313),
112 = phi  16,16,110,16,106,16,102,16,98,16,94,16,90,16,86,16,82,16,78,16,74,16,70,16,66,16,62,16,58,16,54,16,50,16,46,16,42,16,38,16,34,16,30,16,26,16,14,16,15,
182: switch 112 [0->486,1->457,2->447,3->437,4->486,5->431,6->418,7->415,8->447,9->447,10->431,11->405,12->399,13->392,14->381,15->447,16->392,17->374,18->418,19->447,20->418,21->374,22->363,23->431] default: 343,
conditional branch(eq, to iindex=-1) 156,15,
conditional branch(eq, to iindex=-1) 158,15,
goto (from iindex= 192 to iindex = 135),
161 = phi  159,153,150,149,146,145,144,141,140,137,136,133,130,120,
return 168,
return 14,","depth : 0
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);
	return v2;
}
-----
depth : 1
public boolean isSettingRestrictedForUser(Context p1, String p2, int p3, String p4, int p5){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = p1.getSystemService(UserManage.class);
	int v3 = p2.hashCode();
	boolean v4 = p2.startsWith(""data_roaming"");
	boolean v5 = 0.equals(p4);
	UserHandle v6 = UserHandle.of(p3);
	boolean v7 = v2.hasUserRestriction(phiInstruction, v6);
	return v7;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSettingRestrictedForUser(Ljava/lang/String;ILjava/lang/String;I)Z","1","12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
14 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSettingRestrictedForUser(Landroid/content/Context;Ljava/lang/String;ILjava/lang/String;I)Z > 12,2,3,4,5 @10 exception:13,
8 = load_metadata: <Application,Landroid/os/UserManager>, <Primordial,Ljava/lang/Class>,
11 = checkcast <Application,Landroid/os/UserManager>10 <Application,Landroid/os/UserManager>,
10: switch 13 [-2099894345->324,-1796809747->313,-1490222856->302,-1115710219->291,-970351711->280,-693072130->269,-623873498->258,-416662510->247,-101820922->233,-32505807->219,-16943007->205,58027029->191,258514750->177,683724341->163,926123534->149,1073289638->135,1223734380->121,1275530062->107,1334097968->93,1602982312->79,1646894952->65,1661297501->51,1701140351->37,1735689732->23] default: 21,
goto (from iindex= 11 to iindex = 313),
112 = phi  16,16,110,16,106,16,102,16,98,16,94,16,90,16,86,16,82,16,78,16,74,16,70,16,66,16,62,16,58,16,54,16,50,16,46,16,42,16,38,16,34,16,30,16,26,16,14,16,15,
182: switch 112 [0->486,1->457,2->447,3->437,4->486,5->431,6->418,7->415,8->447,9->447,10->431,11->405,12->399,13->392,14->381,15->447,16->392,17->374,18->418,19->447,20->418,21->374,22->363,23->431] default: 343,
conditional branch(eq, to iindex=-1) 156,15,
conditional branch(eq, to iindex=-1) 158,15,
return 15,
return 14,","depth : 0
public boolean isSettingRestrictedForUser(String p1, int p2, String p3, int p4){
	boolean v2 = UserRestrictionsUtils.isSettingRestrictedForUser(this.mContext, p1, p2, p3, p4);
	return v2;
}
-----
depth : 1
public boolean isSettingRestrictedForUser(Context p1, String p2, int p3, String p4, int p5){
	Object v1 = Objects.requireNonNull(p2);
	Object v2 = p1.getSystemService(UserManage.class);
	int v3 = p2.hashCode();
	boolean v4 = p2.startsWith(""data_roaming"");
	boolean v5 = 0.equals(p4);
	return 0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountOptions(I)Landroid/os/PersistableBundle;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountOptions, <Application,Landroid/os/PersistableBundle> > 7,
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public PersistableBundle getSeedAccountOptions(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","addUserRestrictionsListener(Landroid/os/IUserRestrictionsListener;)V","0","9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
10 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda1>@10,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, addUserRestrictionsListener(Lcom/android/server/pm/UserManagerInternal$UserRestrictionsListener;)V > 9,10 @15 exception:12,
return,","depth : 0
public void addUserRestrictionsListener(IUserRestrictionsListener p1){
	UserManagerService$$ExternalSyntheticLambda1 v1 = new UserManagerService$$ExternalSyntheticLambda1(p1);
	this.mLocalService.addUserRestrictionsListener(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","addUserRestrictionsListener(Landroid/os/IUserRestrictionsListener;)V","1","9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
10 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda1>@10,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, addUserRestrictionsListener(Lcom/android/server/pm/UserManagerInternal$UserRestrictionsListener;)V > 9,10 @15 exception:12,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserRestrictionsListeners(Lcom/android/server/pm/UserManagerService;)Ljava/util/ArrayList; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserRestrictionsListeners(Lcom/android/server/pm/UserManagerService;)Ljava/util/ArrayList; > 6 @9 exception:7,
monitorexit 5,
return,
return,","depth : 0
public void addUserRestrictionsListener(IUserRestrictionsListener p1){
	UserManagerService$$ExternalSyntheticLambda1 v1 = new UserManagerService$$ExternalSyntheticLambda1(p1);
	this.mLocalService.addUserRestrictionsListener(v1);
	return;
}
-----
depth : 1
public void addUserRestrictionsListener(UserManagerInternal$UserRestrictionsListener p1){
	ArrayList v1 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	ArrayList v2 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	boolean v3 = v2.add(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","addUserRestrictionsListener(Landroid/os/IUserRestrictionsListener;)V","2","9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
10 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda1>@10,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, addUserRestrictionsListener(Lcom/android/server/pm/UserManagerInternal$UserRestrictionsListener;)V > 9,10 @15 exception:12,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserRestrictionsListeners(Lcom/android/server/pm/UserManagerService;)Ljava/util/ArrayList; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserRestrictionsListeners, <Application,Ljava/util/ArrayList> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserRestrictionsListeners(Lcom/android/server/pm/UserManagerService;)Ljava/util/ArrayList; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserRestrictionsListeners, <Application,Ljava/util/ArrayList> > 1,
return 2,
monitorexit 5,
return,
return,","depth : 0
public void addUserRestrictionsListener(IUserRestrictionsListener p1){
	UserManagerService$$ExternalSyntheticLambda1 v1 = new UserManagerService$$ExternalSyntheticLambda1(p1);
	this.mLocalService.addUserRestrictionsListener(v1);
	return;
}
-----
depth : 1
public void addUserRestrictionsListener(UserManagerInternal$UserRestrictionsListener p1){
	ArrayList v1 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	ArrayList v2 = UserManagerService.-$$Nest$fgetmUserRestrictionsListeners(this.this$0);
	boolean v3 = v2.add(p1);
	return;
}
-----
depth : 2
public ArrayList -$$Nest$fgetmUserRestrictionsListeners(UserManagerService p1){
	return this.mUserRestrictionsListeners;
}
-----
depth : 2
public ArrayList -$$Nest$fgetmUserRestrictionsListeners(UserManagerService p1){
	return this.mUserRestrictionsListeners;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserUnlockRealtime()J","0","2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,6 @11 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, unlockRealtime, <Primordial,J> > 8,
monitorexit 2,
return 11,","depth : 0
public long getUserUnlockRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.unlockRealtime;
}
-----
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserUnlockRealtime()J","1","2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,6 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, unlockRealtime, <Primordial,J> > 8,
monitorexit 2,
return 11,","depth : 0
public long getUserUnlockRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.unlockRealtime;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserUnlockRealtime()J","1","2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,6 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, unlockRealtime, <Primordial,J> > 8,
monitorexit 2,
return 11,","depth : 0
public long getUserUnlockRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.unlockRealtime;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","NONE"

"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
5 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 3 @6 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 6 to iindex = 22),
return 6,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasAccountNoChecks(String p1, String p2){
	boolean v1 = TextUtils.isEmpty(p1);
	boolean v2 = TextUtils.isEmpty(p2);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
5 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 3 @6 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
9 = new <Application,Landroid/accounts/Account>@13,
11 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda2>@18,
15 = checkcast <Application,Ljava/lang/Boolean>14 <Application,Ljava/lang/Boolean>,
return 17,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasAccountNoChecks(String p1, String p2){
	boolean v1 = TextUtils.isEmpty(p1);
	boolean v2 = TextUtils.isEmpty(p2);
	Account v2 = new Account(p1,p2);
	UserManagerService$$ExternalSyntheticLambda2 v3 = new UserManagerService$$ExternalSyntheticLambda2(p0,v2,p1,p2);
	Object v5 = Binder.withCleanCallingIdentity(v3);
	boolean v6 = v5.booleanValue();
	return v6;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
5 = invokestatic < Application, Landroid/text/TextUtils, isEmpty(Ljava/lang/CharSequence;)Z > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
return 6,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasAccountNoChecks(String p1, String p2){
	boolean v1 = TextUtils.isEmpty(p1);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasAccount(Ljava/lang/String;Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
return 7,","depth : 0
public boolean someUserHasAccount(String p1, String p2){
	UserManagerService.checkCreateUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 1
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
return 2,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 1
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle();
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 14,15,
conditional branch(eq, to iindex=-1) 17,15,
return 7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	return v2;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 14,15,
conditional branch(eq, to iindex=-1) 17,15,
return 22,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictions(I)Landroid/os/Bundle;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 14,15,
conditional branch(eq, to iindex=-1) 17,15,
return 7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,","depth : 0
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	return v2;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","0","5 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
conditional branch(ne, to iindex=-1) 20,21,
goto (from iindex= 17 to iindex = 5),
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","1","5 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 20,21,
23 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 20 @37 exception:22,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isRestricted();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isRestricted(){
	boolean v1 = UserManager.isUserTypeRestricted(this.userType);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","1","5 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 20,21,
goto (from iindex= 17 to iindex = 5),
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","2","5 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
conditional branch(ne, to iindex=-1) 20,21,
goto (from iindex= 17 to iindex = 5),
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isRestricted(I)Z","2","5 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 13 @23 exception:14,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @29 exception:19,
conditional branch(ne, to iindex=-1) 20,21,
23 = invokevirtual < Application, Landroid/content/pm/UserInfo, isRestricted()Z > 20 @37 exception:22,
24 = phi  21,23,
monitorexit 18,
return 24,","depth : 0
public boolean isRestricted(int p1){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""query isRestricted for user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkCreateUsersPermission(v5);
	UserInfo v7 = p0.getUserInfoLU(p1);
	boolean v8 = v7.isRestricted();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(eq, to iindex=-1) 9,7,
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBadge(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(eq, to iindex=-1) 9,7,
14 = phi  13,7,
return 14,","depth : 0
public boolean hasBadge(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""hasBadge"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","0","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
24 = phi  23,5,
conditional branch(ge, to iindex=-1) 24,10,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
conditional branch(eq, to iindex=-1) 16,5,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","1","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
return 5,
24 = phi  23,5,
conditional branch(ge, to iindex=-1) 24,10,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
13 = phi  6,9,
monitorexit 3,
return 13,
conditional branch(eq, to iindex=-1) 16,5,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","1","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
return 5,
24 = phi  23,5,
conditional branch(ge, to iindex=-1) 24,10,
return 5,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	return 0;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","2","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
return 2,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
conditional branch(eq, to iindex=-1) 15,6,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
return 8,
return 5,
24 = phi  23,5,
conditional branch(ge, to iindex=-1) 24,10,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 14,15,
conditional branch(eq, to iindex=-1) 17,15,
return 7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
conditional branch(eq, to iindex=-1) 16,5,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
depth : 2
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	return v2;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","2","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
return 2,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
conditional branch(eq, to iindex=-1) 15,6,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
return 8,
return 5,
24 = phi  23,5,
conditional branch(ge, to iindex=-1) 24,10,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 14,15,
conditional branch(eq, to iindex=-1) 17,15,
return 7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
conditional branch(eq, to iindex=-1) 16,5,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("")"");
	StringBuilder v10 = v4.append("": "");
	StringBuilder v11 = v4.append(p1);
	boolean v12 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v13 = v4.toString();
	int v14 = Slog.wtf(""UserRestrictionsUtils"", v13);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
depth : 2
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	return v2;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestrictionOnAnyUser(Ljava/lang/String;)Z","2","4 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:3,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
return 2,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
conditional branch(eq, to iindex=-1) 15,6,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 4,5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(Z)Ljava/util/List; > 1,6 @9 exception:7,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsers(ZZZ)Ljava/util/List; > 1,3,2,3 @1 exception:4,
return 8,
return 5,
24 = phi  23,5,
conditional branch(ge, to iindex=-1) 24,10,
13 = checkcast <Application,Landroid/content/pm/UserInfo>12 <Application,Landroid/content/pm/UserInfo>,
14 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
16 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,14 @28 exception:15,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,2 @11 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 14,15,
conditional branch(eq, to iindex=-1) 17,15,
return 22,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 10,2,9 @17 exception:11,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
13 = phi  6,9,
monitorexit 3,
return 13,
conditional branch(eq, to iindex=-1) 16,5,
conditional branch(eq, to iindex=-1) 18,5,
return 6,","depth : 0
public boolean hasUserRestrictionOnAnyUser(String p1){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	List v2 = p0.getUsers(1);
	int v3 = v2.size();
	Object v4 = v2.get(phiInstruction);
	Bundle v5 = p0.getEffectiveUserRestrictions(UserInfo.id);
	boolean v6 = v5.getBoolean(p1);
	return 1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public List getUsers(boolean p1){
	List v1 = p0.getUsers(1, p1, 1);
	return v1;
}
-----
depth : 2
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	Bundle v7 = BundleUtils.clone(v2);
	UserRestrictionsUtils.merge(v7, v3);
	Bundle v9 = v4.mergeAll();
	UserRestrictionsUtils.merge(v7, v9);
	return v7;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
conditional branch(lt, to iindex=-1) 11,12,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,12,
monitorexit 5,
return 14,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
12 = phi  3,10,
return 12,
conditional branch(lt, to iindex=-1) 11,12,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,12,
monitorexit 5,
return 14,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
12 = phi  3,10,
return 12,
conditional branch(lt, to iindex=-1) 11,12,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,12,
monitorexit 5,
return 14,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserRunning(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserRunning(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
conditional branch(lt, to iindex=-1) 6,7,
12 = phi  3,10,
return 12,
conditional branch(lt, to iindex=-1) 11,12,
goto (from iindex= 12 to iindex = 2),
14 = phi  13,12,
monitorexit 5,
return 14,
return 7,","depth : 0
public boolean isUserRunning(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserRunning"");
	boolean v2 = this.mLocalService.isUserRunning(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserRunning(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfileIds(IZ)[I","0","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
return 6,","depth : 0
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileIds(IZ)[I","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
monitorexit 22,
return 26,
return 6,","depth : 0
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 1
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileIds(IZ)[I","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
conditional branch(eq, to iindex=-1) 3,4,
return,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 6,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
47 = phi  46,12,
conditional branch(ge, to iindex=-1) 47,15,
return 7,
monitorexit 22,
return 26,
return 6,","depth : 0
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 1
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	int v4 = this.mUsers.size();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileIds(IZ)[I","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,2,4,3 @1 exception:5,
7 = new <Application,Ljava/lang/StringBuilder>@6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 15 @23 exception:16,
conditional branch(eq, to iindex=-1) 3,4,
return,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIdsLU(ILjava/lang/String;Z)Landroid/util/IntArray; > 1,2,3,4 @33 exception:23,
7 = new <Application,Landroid/util/IntArray>@4,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ne, to iindex=-1) 6,12,
return 7,
monitorexit 22,
return 26,
return 6,","depth : 0
public [I getProfileIds(int p1, boolean p2){
	[I v1 = p0.getProfileIds(p1, 0, p2);
	return v1;
}
-----
depth : 1
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public IntArray getProfileIdsLU(int p1, String p2, boolean p3){
	UserInfo v1 = p0.getUserInfoLU(p1);
	IntArray v1 = new IntArray(v2);
	int v2 = this.mUsers.size();
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserForeground(I)Z","0","7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 5 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 7 to iindex = 37),
30 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0>@51,
34 = checkcast <Application,Ljava/lang/Integer>33 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 36,2,
goto (from iindex= 32 to iindex = 2),
38 = phi  37,8,
return 38,","depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserForeground(I)Z","1","7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 5 @8 exception:6,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 7 to iindex = 37),
30 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0>@51,
34 = checkcast <Application,Ljava/lang/Integer>33 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 36,2,
goto (from iindex= 32 to iindex = 2),
38 = phi  37,8,
return 38,","depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserForeground(I)Z","2","7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 5 @8 exception:6,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 7 to iindex = 37),
30 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0>@51,
34 = checkcast <Application,Ljava/lang/Integer>33 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 36,2,
goto (from iindex= 32 to iindex = 2),
38 = phi  37,8,
return 38,","depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserForeground(I)Z","2","7 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 5 @8 exception:6,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 11 to iindex = 2),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 7 to iindex = 37),
30 = new <Application,Lcom/android/server/pm/UserManagerService$$ExternalSyntheticLambda0>@51,
34 = checkcast <Application,Ljava/lang/Integer>33 <Application,Ljava/lang/Integer>,
conditional branch(ne, to iindex=-1) 36,2,
goto (from iindex= 32 to iindex = 2),
38 = phi  37,8,
return 38,","depth : 0
public boolean isUserForeground(int p1){
	boolean v2 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserManagerService$$ExternalSyntheticLambda0 v2 = new UserManagerService$$ExternalSyntheticLambda0();
	Object v4 = Binder.withCleanCallingIdentity(v2);
	int v5 = v4.intValue();
	return phiInstruction;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 10,6,
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 10,6,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserOfType(ILjava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(eq, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @7 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 10,6,
14 = phi  13,6,
return 14,","depth : 0
public boolean isUserOfType(int p1, String p2){
	UserManagerService.checkQueryOrCreateUsersPermission(""check user type"");
	String v2 = p0.getUserTypeNoChecks(p1);
	boolean v3 = p2.equals(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isEnabled(){
	return this.mEnabled;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 11,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isEnabled(){
	return this.mEnabled;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserTypeEnabled(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean isUserTypeEnabled(String p1){
	UserManagerService.checkCreateUsersPermission(""check if user type is enabled."");
	Object v2 = this.mUserTypes.get(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,8,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
conditional branch(eq, to iindex=-1) 13,8,
goto (from iindex= 11 to iindex = 5),
17 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, cleanAppRestrictionsForPackageLAr(Ljava/lang/String;I)Z > 2,4 @27 exception:16,
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	boolean v4 = UserManagerService.cleanAppRestrictionsForPackageLAr(p1, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
goto (from iindex= 7 to iindex = 24),
return,
conditional branch(eq, to iindex=-1) 3,8,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
conditional branch(eq, to iindex=-1) 13,8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Ljava/lang/String;Landroid/os/Bundle;I)V > 2,3,4 @23 exception:14,
4 = new <Application,Landroid/util/AtomicFile>@0,
5 = new <Application,Ljava/io/File>@2,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Landroid/os/Bundle;Landroid/util/AtomicFile;)V > 2,4 @18 exception:12,
return,
goto (from iindex= 13 to iindex = 5),
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	UserManagerService.writeApplicationRestrictionsLAr(p1, p2, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public void writeApplicationRestrictionsLAr(String p1, Bundle p2, int p3){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p3);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(ne, to iindex=-1) 6,7,
return,
conditional branch(eq, to iindex=-1) 3,8,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
conditional branch(eq, to iindex=-1) 13,8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Ljava/lang/String;Landroid/os/Bundle;I)V > 2,3,4 @23 exception:14,
4 = new <Application,Landroid/util/AtomicFile>@0,
5 = new <Application,Ljava/io/File>@2,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Landroid/os/Bundle;Landroid/util/AtomicFile;)V > 2,4 @18 exception:12,
return,
goto (from iindex= 13 to iindex = 5),
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	UserManagerService.writeApplicationRestrictionsLAr(p1, p2, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public void writeApplicationRestrictionsLAr(String p1, Bundle p2, int p3){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p3);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v0);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
goto (from iindex= 7 to iindex = 24),
return,
conditional branch(eq, to iindex=-1) 3,8,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
conditional branch(eq, to iindex=-1) 13,8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Ljava/lang/String;Landroid/os/Bundle;I)V > 2,3,4 @23 exception:14,
4 = new <Application,Landroid/util/AtomicFile>@0,
5 = new <Application,Ljava/io/File>@2,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:8,
2 = new <Application,Ljava/lang/StringBuilder>@0,
return 13,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Landroid/os/Bundle;Landroid/util/AtomicFile;)V > 2,4 @18 exception:12,
10 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
25 = getCaughtException ,
goto (from iindex= 19 to iindex = 2),
26 = phi  6,4,
27 = phi  25,7,
return,
return,
goto (from iindex= 13 to iindex = 5),
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	UserManagerService.writeApplicationRestrictionsLAr(p1, p2, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public void writeApplicationRestrictionsLAr(String p1, Bundle p2, int p3){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p3);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v0);
	return;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public void writeApplicationRestrictionsLAr(Bundle p1, AtomicFile p2){
	FileOutputStream v1 = p2.startWrite();
	TypedXmlSerializer v2 = Xml.resolveSerializer(v1);
	v2.startDocument(0, Boolean.TRUE);
	p2.failWrite(phiInstruction);
	int v5 = Slog.e(""UserManagerService"", ""Error writing application restrictions list"", phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(ne, to iindex=-1) 6,7,
return,
conditional branch(eq, to iindex=-1) 3,8,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
conditional branch(eq, to iindex=-1) 13,8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Ljava/lang/String;Landroid/os/Bundle;I)V > 2,3,4 @23 exception:14,
4 = new <Application,Landroid/util/AtomicFile>@0,
5 = new <Application,Ljava/io/File>@2,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:8,
2 = new <Application,Ljava/lang/StringBuilder>@0,
return 13,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Landroid/os/Bundle;Landroid/util/AtomicFile;)V > 2,4 @18 exception:12,
10 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
25 = getCaughtException ,
goto (from iindex= 19 to iindex = 2),
26 = phi  6,4,
27 = phi  25,7,
return,
return,
goto (from iindex= 13 to iindex = 5),
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
26 = new <Application,Landroid/content/Intent>@35,
30 = invokevirtual < Application, Landroid/content/Intent, setPackage(Ljava/lang/String;)Landroid/content/Intent; > 26,2 @42 exception:29,
33 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 26,31 @47 exception:32,
34 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	UserManagerService.writeApplicationRestrictionsLAr(p1, p2, p3);
	Intent v4 = new Intent(""android.intent.action.APPLICATION_RESTRICTIONS_CHANGED"");
	Intent v6 = v4.setPackage(p1);
	Intent v7 = v4.addFlags(1073741824);
	UserHandle v8 = UserHandle.of(p3);
	this.mContext.sendBroadcastAsUser(v4, v8);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public void writeApplicationRestrictionsLAr(String p1, Bundle p2, int p3){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p3);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v0);
	return;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public void writeApplicationRestrictionsLAr(Bundle p1, AtomicFile p2){
	FileOutputStream v1 = p2.startWrite();
	TypedXmlSerializer v2 = Xml.resolveSerializer(v1);
	v2.startDocument(0, Boolean.TRUE);
	p2.failWrite(phiInstruction);
	int v5 = Slog.e(""UserManagerService"", ""Error writing application restrictions list"", phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setApplicationRestrictions(Ljava/lang/String;Landroid/os/Bundle;I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 5 @2 exception:6,
goto (from iindex= 7 to iindex = 24),
return,
conditional branch(eq, to iindex=-1) 3,8,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 11,
conditional branch(eq, to iindex=-1) 3,8,
conditional branch(eq, to iindex=-1) 13,8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Ljava/lang/String;Landroid/os/Bundle;I)V > 2,3,4 @23 exception:14,
4 = new <Application,Landroid/util/AtomicFile>@0,
5 = new <Application,Ljava/io/File>@2,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:8,
2 = new <Application,Ljava/lang/StringBuilder>@0,
return 13,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, writeApplicationRestrictionsLAr(Landroid/os/Bundle;Landroid/util/AtomicFile;)V > 2,4 @18 exception:12,
10 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
25 = getCaughtException ,
goto (from iindex= 19 to iindex = 2),
26 = phi  6,4,
27 = phi  25,7,
return,
return,
goto (from iindex= 13 to iindex = 5),
18 = phi  7,17,
monitorexit 11,
conditional branch(ne, to iindex=-1) 18,8,
return,","depth : 0
public void setApplicationRestrictions(String p1, Bundle p2, int p3){
	UserManagerService.checkSystemOrRoot(""set application restrictions"");
	p2.setDefusable(1);
	boolean v3 = p2.isEmpty();
	UserManagerService.writeApplicationRestrictionsLAr(p1, p2, p3);
	return;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public void writeApplicationRestrictionsLAr(String p1, Bundle p2, int p3){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p3);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	UserManagerService.writeApplicationRestrictionsLAr(p2, v0);
	return;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public void writeApplicationRestrictionsLAr(Bundle p1, AtomicFile p2){
	FileOutputStream v1 = p2.startWrite();
	TypedXmlSerializer v2 = Xml.resolveSerializer(v1);
	v2.startDocument(0, Boolean.TRUE);
	p2.failWrite(phiInstruction);
	int v5 = Slog.e(""UserManagerService"", ""Error writing application restrictions list"", phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","0","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
return 9,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
return 5,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
return 9,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 11 to iindex = 2),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
return 9,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParent(I)Landroid/content/pm/UserInfo;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 4,5,
return 5,
monitorexit 10,
return 12,","depth : 0
public UserInfo getProfileParent(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.INTERACT_ACROSS_USERS"");
	UserInfo v2 = p0.getProfileParentLU(p1);
	return v2;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
16 = new <Application,Ljava/lang/StringBuilder>@24,
26 = new <Application,Ljava/lang/StringBuilder>@44,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
26 = new <Application,Ljava/lang/StringBuilder>@44,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
26 = new <Application,Ljava/lang/StringBuilder>@44,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
26 = new <Application,Ljava/lang/StringBuilder>@44,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(le, to iindex=-1) 8,5,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
conditional branch(eq, to iindex=-1) 19,5,
33 = phi  4,32,
monitorexit 2,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
19 = binaryop(or) 4 , 18,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
conditional branch(eq, to iindex=-1) 52,14,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
return,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
return 4,
conditional branch(eq, to iindex=-1) 6,4,
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
26 = new <Application,Ljava/lang/StringBuilder>@44,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(le, to iindex=-1) 8,5,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
conditional branch(eq, to iindex=-1) 19,5,
33 = phi  4,32,
monitorexit 2,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
19 = binaryop(or) 4 , 18,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
conditional branch(eq, to iindex=-1) 52,14,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
return,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","preCreateUserWithThrow(Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDefaultUserInfoFlags()I > 6 @10 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDefaultUserInfoPropertyFlags, <Primordial,I> > 1,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(or) 3 , 2,
return 4,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,7,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 10 @17 exception:13,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, isUserTypeEligibleForPreCreation(Lcom/android/server/pm/UserTypeDetails;)Z > 6 @20 exception:14,
conditional branch(ne, to iindex=-1) 1,2,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 1 @4 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 4,2,
6 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 1 @10 exception:5,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
conditional branch(ne, to iindex=-1) 9,2,
11 = phi  2,2,10,
return 11,
16 = new <Application,Ljava/lang/StringBuilder>@24,
26 = new <Application,Ljava/lang/StringBuilder>@44,
41 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,7,2,10,38,39,7,7 @74 exception:40,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(le, to iindex=-1) 8,5,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
conditional branch(eq, to iindex=-1) 19,5,
33 = phi  4,32,
monitorexit 2,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
19 = binaryop(or) 4 , 18,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
conditional branch(eq, to iindex=-1) 52,14,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
return,
return 27,
return 41,","depth : 0
public UserInfo preCreateUserWithThrow(String p1){
	Object v1 = this.mUserTypes.get(p1);
	int v2 = v1.getDefaultUserInfoFlags();
	UserManagerService.checkCreateUsersPermission(phiInstruction);
	boolean v4 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""cannot pre-create user of type "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	Preconditions.checkArgument(v4, v8);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Pre-creating user of type "");
	StringBuilder v12 = v9.append(p1);
	String v13 = v9.toString();
	int v14 = Slog.i(""UserManagerService"", v13);
	UserInfo v15 = p0.createUserInternalUnchecked(0, p1, phiInstruction, -10000, 1, 0, 0);
	return v15;
}
-----
depth : 1
public int getDefaultUserInfoFlags(){
	return (this.mBaseType | this.mDefaultUserInfoPropertyFlags);
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isUserTypeEligibleForPreCreation(UserTypeDetails p1){
	boolean v1 = p1.isProfile();
	String v2 = p1.getName();
	boolean v3 = v2.equals(""android.os.usertype.full.RESTRICTED"");
	return phiInstruction;
}
-----
depth : 2
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","0","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
conditional branch(eq, to iindex=-1) 25,23,
28 = new <Application,Ljava/lang/StringBuilder>@46,
return 23,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Cannot remove user. "");
	StringBuilder v13 = v10.append(v7);
	StringBuilder v14 = v10.append("" is enabled."");
	String v15 = v10.toString();
	int v16 = Slog.w(""UserManagerService"", v15);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","1","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,
conditional branch(eq, to iindex=-1) 25,23,
28 = new <Application,Ljava/lang/StringBuilder>@46,
return 23,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Cannot remove user. "");
	StringBuilder v13 = v10.append(v7);
	StringBuilder v14 = v10.append("" is enabled."");
	String v15 = v10.toString();
	int v16 = Slog.w(""UserManagerService"", v15);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","1","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,
conditional branch(eq, to iindex=-1) 25,23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @72 exception:26,
return 27,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	boolean v11 = p0.removeUserUnchecked(p1);
	return v11;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","2","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(ne, to iindex=-1) 6,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
conditional branch(eq, to iindex=-1) 25,23,
28 = new <Application,Ljava/lang/StringBuilder>@46,
return 23,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Cannot remove user. "");
	StringBuilder v13 = v10.append(v7);
	StringBuilder v14 = v10.append("" is enabled."");
	String v15 = v10.toString();
	int v16 = Slog.w(""UserManagerService"", v15);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","2","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(ne, to iindex=-1) 6,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
conditional branch(eq, to iindex=-1) 25,23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @72 exception:26,
return 27,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	boolean v11 = p0.removeUserUnchecked(p1);
	return v11;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUser(I)Z","2","3 = new <Application,Ljava/lang/StringBuilder>@0,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 15 @24 exception:16,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
18 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @27 exception:17,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
20 = phi  19,18,
return 20,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,20 @35 exception:21,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(ne, to iindex=-1) 6,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
conditional branch(eq, to iindex=-1) 25,23,
28 = new <Application,Ljava/lang/StringBuilder>@46,
return 23,","depth : 0
public boolean removeUser(int p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""removeUser u"");
	StringBuilder v3 = v0.append(p1);
	String v4 = v0.toString();
	int v5 = Slog.i(""UserManagerService"", v4);
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v7 = p0.getUserRemovalRestriction(p1);
	int v8 = UserHandle.getCallingUserId();
	Bundle v9 = p0.getUserRestrictions(v8);
	boolean v10 = v9.getBoolean(v7, 0);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Cannot remove user. "");
	StringBuilder v13 = v10.append(v7);
	StringBuilder v14 = v10.append("" is enabled."");
	String v15 = v10.toString();
	int v16 = Slog.w(""UserManagerService"", v15);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
24 = binaryop(or) 14 , 15,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 24,
goto (from iindex= 55 to iindex = 7),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
24 = binaryop(or) 14 , 15,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 24,
goto (from iindex= 55 to iindex = 7),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
24 = binaryop(or) 14 , 15,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 24,
goto (from iindex= 55 to iindex = 7),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
24 = binaryop(or) 14 , 15,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 24,
goto (from iindex= 55 to iindex = 7),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 13,
16 = binaryop(and) 14 , 15,
conditional branch(eq, to iindex=-1) 16,12,
goto (from iindex= 30 to iindex = 2),
18 = phi  17,12,
20 = binaryop(and) 14 , 19,
conditional branch(eq, to iindex=-1) 20,12,
goto (from iindex= 35 to iindex = 2),
21 = phi  17,12,
conditional branch(eq, to iindex=-1) 21,12,
conditional branch(ne, to iindex=-1) 3,12,
conditional branch(eq, to iindex=-1) 18,3,
conditional branch(eq, to iindex=-1) 3,12,
23 = binaryop(and) 14 , 22,
putfield 13.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 23,
goto (from iindex= 58 to iindex = 2),
25 = phi  11,11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 25,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @113 exception:27,
monitorexit 6,
return 17,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	UserInfo.flags = (UserInfo.flags & -257);
	p0.writeUserLP(phiInstruction);
	return 1;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEphemeral(IZ)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
41 = new <Application,Ljava/lang/StringBuilder>@24,
monitorexit 7,
monitorexit 6,
return 12,","depth : 0
public boolean setUserEphemeral(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""update ephemeral user flag"");
	Object v2 = this.mUsers.get(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""User not found for setting ephemeral mode: u"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.e(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasRestrictedProfiles(I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
20 = phi  19,9,
conditional branch(ge, to iindex=-1) 20,8,
monitorexit 5,
return 9,","depth : 0
public boolean hasRestrictedProfiles(int p1){
	UserManagerService.checkManageUsersPermission(""hasRestrictedProfiles"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasRestrictedProfiles(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
20 = phi  19,9,
conditional branch(ge, to iindex=-1) 20,8,
monitorexit 5,
return 9,","depth : 0
public boolean hasRestrictedProfiles(int p1){
	UserManagerService.checkManageUsersPermission(""hasRestrictedProfiles"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasRestrictedProfiles(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
20 = phi  19,9,
conditional branch(ge, to iindex=-1) 20,8,
monitorexit 5,
return 9,","depth : 0
public boolean hasRestrictedProfiles(int p1){
	UserManagerService.checkManageUsersPermission(""hasRestrictedProfiles"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 12,10,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
monitorexit 15,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,
conditional branch(eq, to iindex=-1) 12,10,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 15,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,
conditional branch(eq, to iindex=-1) 12,10,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 15,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 1
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(ne, to iindex=-1) 6,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
conditional branch(eq, to iindex=-1) 12,10,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
monitorexit 15,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 6 to iindex = 44),
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(ne, to iindex=-1) 6,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
conditional branch(eq, to iindex=-1) 12,10,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
conditional branch(ne, to iindex=-1) 26,10,
27 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
putfield 27.< Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > = 28,
29 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 27,
31 = binaryop(or) 29 , 30,
putfield 27.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @86 exception:32,
monitorexit 15,
return 28,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	UserInfo.guestToRemove = 1;
	UserInfo.flags = (UserInfo.flags | 64);
	p0.writeUserLP(v6);
	Binder.restoreCallingIdentity(v5);
	return 1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","markGuestForDeletion(I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,6 @9 exception:7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(ne, to iindex=-1) 6,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
conditional branch(eq, to iindex=-1) 12,10,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
20 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>19 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 2,10,
conditional branch(eq, to iindex=-1) 20,10,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(eq, to iindex=-1) 23,10,
monitorexit 16,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 20,
26 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 24 @64 exception:25,
conditional branch(ne, to iindex=-1) 26,10,
monitorexit 15,
return 10,","depth : 0
public boolean markGuestForDeletion(int p1){
	UserManagerService.checkManageUsersPermission(""Only the system can remove users"");
	int v2 = UserHandle.getCallingUserId();
	Bundle v3 = p0.getUserRestrictions(v2);
	boolean v4 = v3.getBoolean(""no_remove_user"", 0);
	long v5 = Binder.clearCallingIdentity();
	Object v6 = this.mUsers.get(p1);
	boolean v7 = this.mRemovingUserIds.get(p1);
	boolean v8 = UserManagerService$UserData.info.isGuest();
	Binder.restoreCallingIdentity(v5);
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isAdmin(){
	return phiInstruction;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isAdmin(){
	return phiInstruction;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @33 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @37 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	UserInfo.flags = (UserInfo.flags ^ 2);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAdmin(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isAdmin()Z > 8 @18 exception:13,
conditional branch(eq, to iindex=-1) 14,12,
goto (from iindex= 13 to iindex = 18),
monitorexit 5,
return,","depth : 0
public void setUserAdmin(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user admin"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isAdmin();
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","0","12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 10,4 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,9,
goto (from iindex= 12 to iindex = 9),
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	boolean v4 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	UserInfo v5 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","1","8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 8,9,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","1","8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 8,9,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","2","8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 8,9,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","2","8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 8,9,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
goto (from iindex= 25 to iindex = 2),
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserNameSet(I)Z","2","8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @8 exception:7,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 8,9,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @36 exception:25,
conditional branch(eq, to iindex=-1) 26,9,
27 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 26,
conditional branch(eq, to iindex=-1) 27,9,
30 = phi  29,9,
monitorexit 24,
return 30,","depth : 0
public boolean isUserNameSet(int p1){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	boolean v3 = UserManagerService.hasQueryOrCreateUsersPermission();
	UserInfo v4 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
5 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetEffectiveUserRestrictions(Lcom/android/server/pm/UserManagerService;I)Landroid/os/Bundle; > 7,3 @10 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 11,6,
13 = phi  6,6,12,
return 13,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public boolean hasUserRestriction(String p1, int p2){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v2 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
	boolean v3 = v2.getBoolean(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
5 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:4,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetEffectiveUserRestrictions(Lcom/android/server/pm/UserManagerService;I)Landroid/os/Bundle; > 7,3 @10 exception:8,
return 4,
conditional branch(eq, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 11,6,
13 = phi  6,6,12,
return 13,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean hasUserRestriction(String p1, int p2){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v2 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
	boolean v3 = v2.getBoolean(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle -$$Nest$mgetEffectiveUserRestrictions(UserManagerService p1, int p2){
	Bundle v1 = p1.getEffectiveUserRestrictions(p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
5 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:4,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetEffectiveUserRestrictions(Lcom/android/server/pm/UserManagerService;I)Landroid/os/Bundle; > 7,3 @10 exception:8,
return 4,
conditional branch(eq, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 11,6,
13 = phi  6,6,12,
return 13,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean hasUserRestriction(String p1, int p2){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v2 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
	boolean v3 = v2.getBoolean(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("")"");
	StringBuilder v10 = v4.append("": "");
	StringBuilder v11 = v4.append(p1);
	boolean v12 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v13 = v4.toString();
	int v14 = Slog.wtf(""UserRestrictionsUtils"", v13);
	return 0;
}
-----
depth : 2
public Bundle -$$Nest$mgetEffectiveUserRestrictions(UserManagerService p1, int p2){
	Bundle v1 = p1.getEffectiveUserRestrictions(p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasUserRestriction(Ljava/lang/String;I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,3,4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, hasUserRestriction(Ljava/lang/String;I)Z > 6,2,3 @7 exception:7,
5 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @0 exception:4,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 5,6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetEffectiveUserRestrictions(Lcom/android/server/pm/UserManagerService;I)Landroid/os/Bundle; > 7,3 @10 exception:8,
return 4,
conditional branch(eq, to iindex=-1) 9,6,
conditional branch(eq, to iindex=-1) 11,6,
13 = phi  6,6,12,
return 13,
return 8,","depth : 0
public boolean hasUserRestriction(String p1, int p2){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p2, ""hasUserRestriction"");
	boolean v2 = this.mLocalService.hasUserRestriction(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean hasUserRestriction(String p1, int p2){
	boolean v1 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v2 = UserManagerService.-$$Nest$mgetEffectiveUserRestrictions(this.this$0, p2);
	boolean v3 = v2.getBoolean(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle -$$Nest$mgetEffectiveUserRestrictions(UserManagerService p1, int p2){
	Bundle v1 = p1.getEffectiveUserRestrictions(p2);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 1
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
return 2,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 1
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle();
	return v0;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
return 2,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
conditional branch(eq, to iindex=-1) 15,6,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 1,2,
goto (from iindex= 1 to iindex = 6),
5 = phi  1,3,
return 5,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
return,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 14,15,
conditional branch(eq, to iindex=-1) 17,15,
return 7,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
conditional branch(eq, to iindex=-1) 6,7,
8 = new <Application,Landroid/os/Bundle>@7,
10 = new <Application,Landroid/os/Bundle>@12,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
13 = new <Application,Lcom/android/server/pm/UserManagerService$4>@19,
return,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle nonNull(Bundle p1){
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 2
public void scheduleWriteUser(UserManagerService$UserData p1){
	boolean v1 = this.mHandler.hasMessages(1, p1);
	Message v2 = this.mHandler.obtainMessage(1, p1);
	boolean v3 = this.mHandler.sendMessageDelayed(v2, 2000);
	return;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	return v2;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public void propagateUserRestrictionsLR(int p1, Bundle p2, Bundle p3){
	boolean v1 = UserRestrictionsUtils.areEqual(p2, p3);
	Bundle v1 = new Bundle(p2);
	Bundle v2 = new Bundle(p3);
	UserManagerService$4 v3 = new UserManagerService$4(p0,p1,v1,v2);
	boolean v5 = this.mHandler.post(v3);
	return;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
return 2,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
conditional branch(eq, to iindex=-1) 15,6,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 1,2,
goto (from iindex= 1 to iindex = 6),
5 = phi  1,3,
return 5,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
return,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 14,15,
conditional branch(eq, to iindex=-1) 17,15,
return 7,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
conditional branch(eq, to iindex=-1) 6,7,
8 = new <Application,Landroid/os/Bundle>@7,
10 = new <Application,Landroid/os/Bundle>@12,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
13 = new <Application,Lcom/android/server/pm/UserManagerService$4>@19,
return,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("")"");
	StringBuilder v10 = v4.append("": "");
	StringBuilder v11 = v4.append(p1);
	boolean v12 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v13 = v4.toString();
	int v14 = Slog.wtf(""UserRestrictionsUtils"", v13);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle nonNull(Bundle p1){
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 2
public void scheduleWriteUser(UserManagerService$UserData p1){
	boolean v1 = this.mHandler.hasMessages(1, p1);
	Message v2 = this.mHandler.obtainMessage(1, p1);
	boolean v3 = this.mHandler.sendMessageDelayed(v2, 2000);
	return;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	return v2;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public void propagateUserRestrictionsLR(int p1, Bundle p2, Bundle p3){
	boolean v1 = UserRestrictionsUtils.areEqual(p2, p3);
	Bundle v1 = new Bundle(p2);
	Bundle v2 = new Bundle(p3);
	UserManagerService$4 v3 = new UserManagerService$4(p0,p1,v1,v2);
	boolean v5 = this.mHandler.post(v3);
	return;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserRestriction(Ljava/lang/String;ZI)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
return 2,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
conditional branch(eq, to iindex=-1) 15,6,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
6 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 4,3 @2 exception:5,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, nonNull(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @6 exception:7,
conditional branch(eq, to iindex=-1) 1,2,
3 = new <Application,Landroid/os/Bundle>@3,
5 = phi  1,3,
return 5,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @14 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
18 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 16,3 @30 exception:17,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
23 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 21,3,2 @43 exception:22,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
conditional branch(eq, to iindex=-1) 23,9,
25 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,3 @49 exception:24,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, scheduleWriteUser(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,25 @53 exception:26,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
conditional branch(ne, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
return,
31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, computeEffectiveUserRestrictionsLR(I)Landroid/os/Bundle; > 1,3 @56 exception:30,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 14,15,
conditional branch(eq, to iindex=-1) 17,15,
return 7,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
34 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 32,3,31 @62 exception:33,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, propagateUserRestrictionsLR(ILandroid/os/Bundle;Landroid/os/Bundle;)V > 1,3,31,8 @79 exception:45,
conditional branch(eq, to iindex=-1) 6,7,
8 = new <Application,Landroid/os/Bundle>@7,
10 = new <Application,Landroid/os/Bundle>@12,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
13 = new <Application,Lcom/android/server/pm/UserManagerService$4>@19,
return,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
50 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, updateRestrictions(ILandroid/os/Bundle;)Z > 46,3,47 @89 exception:49,
4 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Landroid/os/Bundle>6 <Application,Landroid/os/Bundle>,
11 = binaryop(xor) 9 , 10,
conditional branch(ne, to iindex=-1) 11,12,
conditional branch(ne, to iindex=-1) 14,12,
17 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
goto (from iindex= 16 to iindex = 6),
return 10,
return,
monitorexit 10,
return,","depth : 0
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
depth : 1
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle nonNull(Bundle p1){
	Bundle v0 = new Bundle();
	return phiInstruction;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 2
public void scheduleWriteUser(UserManagerService$UserData p1){
	boolean v1 = this.mHandler.hasMessages(1, p1);
	Message v2 = this.mHandler.obtainMessage(1, p1);
	boolean v3 = this.mHandler.sendMessageDelayed(v2, 2000);
	return;
}
-----
depth : 2
public Bundle computeEffectiveUserRestrictionsLR(int p1){
	Bundle v1 = this.mBaseUserRestrictions.getRestrictions(p1);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mDevicePolicyGlobalUserRestrictions.mergeAll();
	RestrictionsSet v4 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p1);
	boolean v5 = BundleUtils.isEmpty(v3);
	boolean v6 = v4.isEmpty();
	return v2;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
depth : 2
public void propagateUserRestrictionsLR(int p1, Bundle p2, Bundle p3){
	boolean v1 = UserRestrictionsUtils.areEqual(p2, p3);
	Bundle v1 = new Bundle(p2);
	Bundle v2 = new Bundle(p3);
	UserManagerService$4 v3 = new UserManagerService$4(p0,p1,v1,v2);
	boolean v5 = this.mHandler.post(v3);
	return;
}
-----
depth : 2
public boolean updateRestrictions(int p1, Bundle p2){
	Object v1 = this.mUserRestrictions.get(p1);
	boolean v2 = UserRestrictionsUtils.areEqual(v1, p2);
	boolean v3 = BundleUtils.isEmpty(p2);
	this.mUserRestrictions.put(p1, p2);
	return 1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUsersLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetProfileParentLU(Lcom/android/server/pm/UserManagerService;I)Landroid/content/pm/UserInfo; > 6,2 @9 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
monitorexit 5,
return 2,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return p1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUsersLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetProfileParentLU(Lcom/android/server/pm/UserManagerService;I)Landroid/content/pm/UserInfo; > 6,2 @9 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
monitorexit 5,
return 10,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return UserInfo.id;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUsersLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetProfileParentLU(Lcom/android/server/pm/UserManagerService;I)Landroid/content/pm/UserInfo; > 6,2 @9 exception:7,
return 4,
conditional branch(ne, to iindex=-1) 8,9,
monitorexit 5,
return 2,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return p1;
}
-----
depth : 2
public Object -$$Nest$fgetmUsersLock(UserManagerService p1){
	return this.mUsersLock;
}
-----
depth : 2
public UserInfo -$$Nest$mgetProfileParentLU(UserManagerService p1, int p2){
	UserInfo v1 = p1.getProfileParentLU(p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileParentId(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, getProfileParentId(I)I > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUsersLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetProfileParentLU(Lcom/android/server/pm/UserManagerService;I)Landroid/content/pm/UserInfo; > 6,2 @9 exception:7,
return 4,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
monitorexit 5,
return 10,
return 7,","depth : 0
public int getProfileParentId(int p1){
	UserManagerService.checkManageUsersPermission(""get the profile parent"");
	int v2 = this.mLocalService.getProfileParentId(p1);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public int getProfileParentId(int p1){
	Object v1 = UserManagerService.-$$Nest$fgetmUsersLock(this.this$0);
	UserInfo v2 = UserManagerService.-$$Nest$mgetProfileParentLU(this.this$0, p1);
	return UserInfo.id;
}
-----
depth : 2
public Object -$$Nest$fgetmUsersLock(UserManagerService p1){
	return this.mUsersLock;
}
-----
depth : 2
public UserInfo -$$Nest$mgetProfileParentLU(UserManagerService p1, int p2){
	UserInfo v1 = p1.getProfileParentLU(p2);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(ne, to iindex=-1) 11,18,
goto (from iindex= 19 to iindex = 2),
21 = phi  20,19,
return 21,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public boolean isUserUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(ne, to iindex=-1) 11,18,
goto (from iindex= 19 to iindex = 2),
21 = phi  20,19,
return 21,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(ne, to iindex=-1) 11,18,
goto (from iindex= 19 to iindex = 2),
21 = phi  20,19,
return 21,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
conditional branch(lt, to iindex=-1) 6,7,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(ne, to iindex=-1) 11,18,
goto (from iindex= 19 to iindex = 2),
21 = phi  20,19,
return 21,
return 7,","depth : 0
public boolean isUserUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
monitorexit 10,
return,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
return,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
return 23,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 23,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
return,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 23,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
return,
monitorexit 10,
return,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 2
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 4 to iindex = 12),
15 = phi  14,13,12,
return 23,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 23,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
return,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 23,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
return,
monitorexit 10,
return,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 2
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	int v2 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v2, ""Cannot add user"");
	UserInfo v4 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v4;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createRestrictedProfileWithThrow(Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,6,7,3,7 @12 exception:8,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
return 23,
return 9,
conditional branch(ne, to iindex=-1) 9,7,
13 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,12,14,13 @29 exception:15,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
return 2,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 23,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
return,
monitorexit 10,
return,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
20 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
24 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, setUserRestriction(Ljava/lang/String;ZI)V > 1,23,14,24 @50 exception:25,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:7,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 11,4 @17 exception:12,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
15 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 13 @21 exception:14,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, updateUserRestrictionsInternalLR(Landroid/os/Bundle;I)V > 1,15,4 @28 exception:17,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 2,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 12,2,
goto (from iindex= 13 to iindex = 2),
14 = phi  13,9,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 18,2,
goto (from iindex= 20 to iindex = 2),
19 = phi  13,9,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 23,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppOpsService, <Application,Lcom/android/internal/app/IAppOpsService> > 1,
conditional branch(eq, to iindex=-1) 35,9,
36 = getfield < Application, Lcom/android/server/pm/UserManagerService, mHandler, <Application,Landroid/os/Handler> > 1,
37 = new <Application,Lcom/android/server/pm/UserManagerService$3>@71,
46 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppliedUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
47 = new <Application,Landroid/os/Bundle>@84,
return,
monitorexit 10,
return,
return 9,","depth : 0
public UserInfo createRestrictedProfileWithThrow(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""setupRestrictedProfile"");
	UserInfo v2 = p0.createProfileForUserWithThrow(p1, ""android.os.usertype.full.RESTRICTED"", 0, p2, 0);
	long v3 = Binder.clearCallingIdentity();
	p0.setUserRestriction(""no_modify_accounts"", 1, UserInfo.id);
	ContentResolver v5 = this.mContext.getContentResolver();
	boolean v6 = Settings$Secure.putIntForUser(v5, ""location_mode"", 0, UserInfo.id);
	p0.setUserRestriction(""no_share_location"", 1, UserInfo.id);
	Binder.restoreCallingIdentity(v3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 2
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle();
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
depth : 1
public void setUserRestriction(String p1, boolean p2, int p3){
	UserManagerService.checkManageUsersPermission(""setUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p3);
	Bundle v4 = BundleUtils.clone(v3);
	v4.putBoolean(p1, p2);
	p0.updateUserRestrictionsInternalLR(v4, p3);
	return;
}
-----
depth : 2
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
depth : 2
public void updateUserRestrictionsInternalLR(Bundle p1, int p2){
	Bundle v1 = this.mAppliedUserRestrictions.getRestrictions(p2);
	Bundle v2 = UserRestrictionsUtils.nonNull(v1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	Bundle v5 = this.mCachedEffectiveUserRestrictions.getRestrictions(p2);
	Preconditions.checkState(phiInstruction);
	boolean v7 = this.mBaseUserRestrictions.updateRestrictions(p2, p1);
	UserManagerService$UserData v8 = p0.getUserDataNoChecks(p2);
	p0.scheduleWriteUser(v8);
	Bundle v10 = p0.computeEffectiveUserRestrictionsLR(p2);
	boolean v11 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p2, v10);
	UserManagerService$3 v11 = new UserManagerService$3(p0,v10,p2);
	boolean v13 = this.mHandler.post(v11);
	p0.propagateUserRestrictionsLR(p2, v10, v2);
	Bundle v14 = new Bundle(v10);
	boolean v16 = this.mAppliedUserRestrictions.updateRestrictions(p2, v14);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","0","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 23,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 23,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 25,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return """";
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 1
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 23,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 23,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return UserInfo.name;
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserName()Ljava/lang/String;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @4 exception:4,
2 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:1,
return 3,
conditional branch(ne, to iindex=-1) 2,3,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,5 @12 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(ne, to iindex=-1) 5,6,
9 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 7,3 @12 exception:8,
conditional branch(eq, to iindex=-1) 9,6,
goto (from iindex= 9 to iindex = 9),
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 18,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,17 @34 exception:19,
22 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, userWithName(Landroid/content/pm/UserInfo;)Landroid/content/pm/UserInfo; > 1,20 @38 exception:21,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 2,
conditional branch(ne, to iindex=-1) 4,3,
5 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 2,
conditional branch(ne, to iindex=-1) 5,3,
7 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 2 @16 exception:6,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 7,3,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getGuestName()Ljava/lang/String; > 1 @22 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
return 5,
12 = phi  11,3,9,
conditional branch(eq, to iindex=-1) 12,3,
17 = new <Application,Landroid/content/pm/UserInfo>@28,
putfield 17.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 12,
return 17,
conditional branch(eq, to iindex=-1) 22,6,
23 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 22,
conditional branch(eq, to iindex=-1) 23,6,
monitorexit 18,
return 25,","depth : 0
public String getUserName(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasQueryOrCreateUsersPermission();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.GET_ACCOUNTS_PRIVILEGED"", v1);
	int v4 = UserHandle.getUserId(v1);
	UserInfo v5 = p0.getUserInfoLU(v4);
	UserInfo v6 = p0.userWithName(v5);
	return """";
}
-----
depth : 1
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserInfo userWithName(UserInfo p1){
	boolean v1 = p1.isGuest();
	String v2 = p0.getGuestName();
	UserInfo v2 = new UserInfo(p1);
	UserInfo.name = phiInstruction;
	return v2;
}
-----
depth : 2
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
depth : 2
public String getGuestName(){
	String v1 = this.mContext.getString(17040437);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isSameProfileGroup(II)Z","0","conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @6 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,2,3 @9 exception:6,
return 7,","depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission(""check if in the same profile group"");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSameProfileGroup(II)Z","1","conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @6 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,2,3 @9 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
return 7,","depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission(""check if in the same profile group"");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkQueryUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryUsersPermission();
	return;
}
-----
depth : 1
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSameProfileGroup(II)Z","2","conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @6 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,2,3 @9 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
return 7,","depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission(""check if in the same profile group"");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkQueryUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 1
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isSameProfileGroup(II)Z","2","conditional branch(ne, to iindex=-1) 2,3,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryUsersPermission(Ljava/lang/String;)V > 4 @6 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,2,3 @9 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @17 exception:10,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
goto (from iindex= 15 to iindex = 8),
monitorexit 4,
return 7,
return 7,","depth : 0
public boolean isSameProfileGroup(int p1, int p2){
	UserManagerService.checkQueryUsersPermission(""check if in the same profile group"");
	boolean v2 = p0.isSameProfileGroupNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkQueryUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 1
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","0","conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","1","conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
goto (from iindex= 7 to iindex = 24),
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","1","conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
conditional branch(ne, to iindex=-1) 6,7,
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","2","conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
goto (from iindex= 7 to iindex = 24),
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
2 = new <Application,Ljava/lang/StringBuilder>@0,
return 13,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
3 = new <Application,Landroid/os/Bundle>@2,
5 = new <Application,Ljava/util/ArrayList>@7,
conditional branch(ne, to iindex=-1) 10,11,
conditional branch(eq, to iindex=-1) 18,19,
28 = new <Application,Ljava/lang/StringBuilder>@42,
48 = getCaughtException ,
42 = phi  11,13,13,13,13,13,13,13,13,13,13,13,13,13,
49 = new <Application,Ljava/lang/StringBuilder>@88,
goto (from iindex= 54 to iindex = -31),
63 = phi  13,42,
goto (from iindex= 40 to iindex = 29),
return 3,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(AtomicFile p1){
	Bundle v0 = new Bundle();
	ArrayList v1 = new ArrayList();
	File v3 = p1.getBaseFile();
	boolean v4 = v3.exists();
	FileInputStream v5 = p1.openRead();
	TypedXmlPullParser v6 = Xml.resolvePullParser(v5);
	XmlUtils.nextElement(v6);
	int v8 = v6.getEventType();
	StringBuilder v8 = new StringBuilder;
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error parsing "");
	File v11 = p1.getBaseFile();
	StringBuilder v12 = v8.append(v11);
	String v13 = v8.toString();
	int v14 = Slog.w(""UserManagerService"", v13, caughtException);
	IoUtils.closeQuietly(phiInstruction);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","2","conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
conditional branch(ne, to iindex=-1) 6,7,
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
2 = new <Application,Ljava/lang/StringBuilder>@0,
return 13,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
3 = new <Application,Landroid/os/Bundle>@2,
5 = new <Application,Ljava/util/ArrayList>@7,
conditional branch(ne, to iindex=-1) 10,11,
conditional branch(eq, to iindex=-1) 18,19,
28 = new <Application,Ljava/lang/StringBuilder>@42,
48 = getCaughtException ,
42 = phi  11,13,13,13,13,13,13,13,13,13,13,13,13,13,
49 = new <Application,Ljava/lang/StringBuilder>@88,
goto (from iindex= 54 to iindex = -31),
63 = phi  13,42,
goto (from iindex= 40 to iindex = 29),
return 3,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(AtomicFile p1){
	Bundle v0 = new Bundle();
	ArrayList v1 = new ArrayList();
	File v3 = p1.getBaseFile();
	boolean v4 = v3.exists();
	FileInputStream v5 = p1.openRead();
	TypedXmlPullParser v6 = Xml.resolvePullParser(v5);
	XmlUtils.nextElement(v6);
	int v8 = v6.getEventType();
	StringBuilder v8 = new StringBuilder;
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error parsing "");
	File v11 = p1.getBaseFile();
	StringBuilder v12 = v8.append(v11);
	String v13 = v8.toString();
	int v14 = Slog.w(""UserManagerService"", v13, caughtException);
	IoUtils.closeQuietly(phiInstruction);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle;","2","16 = new <Application,Ljava/lang/StringBuilder>@20,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
goto (from iindex= 7 to iindex = 24),
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, packageToRestrictionsFileName(Ljava/lang/String;)Ljava/lang/String; > 1 @8 exception:7,
2 = new <Application,Ljava/lang/StringBuilder>@0,
return 13,
12 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Landroid/util/AtomicFile;)Landroid/os/Bundle; > 3 @18 exception:11,
3 = new <Application,Landroid/os/Bundle>@2,
5 = new <Application,Ljava/util/ArrayList>@7,
conditional branch(ne, to iindex=-1) 10,11,
conditional branch(eq, to iindex=-1) 18,19,
28 = new <Application,Ljava/lang/StringBuilder>@42,
48 = getCaughtException ,
42 = phi  11,13,13,13,13,13,13,13,13,13,13,13,13,13,
49 = new <Application,Ljava/lang/StringBuilder>@88,
goto (from iindex= 54 to iindex = -31),
63 = phi  13,42,
goto (from iindex= 40 to iindex = 29),
return 3,
return 12,
monitorexit 30,
return 32,","depth : 0
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""get application restrictions for other user/app "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkSystemOrRoot(v5);
	Bundle v7 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v7;
}
-----
depth : 1
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 1
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
depth : 2
public String packageToRestrictionsFileName(String p1){
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(""res_"");
	StringBuilder v3 = v0.append(p1);
	StringBuilder v4 = v0.append("".xml"");
	String v5 = v0.toString();
	return v5;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(AtomicFile p1){
	Bundle v0 = new Bundle();
	ArrayList v1 = new ArrayList();
	File v3 = p1.getBaseFile();
	boolean v4 = v3.exists();
	FileInputStream v5 = p1.openRead();
	TypedXmlPullParser v6 = Xml.resolvePullParser(v5);
	XmlUtils.nextElement(v6);
	int v8 = v6.getEventType();
	StringBuilder v8 = new StringBuilder;
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error parsing "");
	File v11 = p1.getBaseFile();
	StringBuilder v12 = v8.append(v11);
	String v13 = v8.toString();
	int v14 = Slog.w(""UserManagerService"", v13, caughtException);
	IoUtils.closeQuietly(phiInstruction);
	return v0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
return 4,
conditional branch(eq, to iindex=-1) 6,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createUserWithThrow(Ljava/lang/String;Ljava/lang/String;I)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,6,7 @10 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 4 to iindex = 12),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createUserWithThrow(String p1, String p2, int p3){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, -10000, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	int v2 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v2, ""Cannot add user"");
	UserInfo v4 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v4;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserStartRealtime()J","0","6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,5 @11 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, startRealtime, <Primordial,J> > 8,
monitorexit 6,
return 11,","depth : 0
public long getUserStartRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.startRealtime;
}
-----
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserStartRealtime()J","1","6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,5 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, startRealtime, <Primordial,J> > 8,
monitorexit 6,
return 11,","depth : 0
public long getUserStartRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.startRealtime;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserStartRealtime()J","1","6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,5 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(eq, to iindex=-1) 8,9,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, startRealtime, <Primordial,J> > 8,
monitorexit 6,
return 11,","depth : 0
public long getUserStartRealtime(){
	int v1 = Binder.getCallingUid();
	int v2 = UserHandle.getUserId(v1);
	UserManagerService$UserData v3 = p0.getUserDataLU(v2);
	return UserManagerService$UserData.startRealtime;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","NONE"

"Lcom/android/server/pm/UserManagerService","getUserRestrictionSource(Ljava/lang/String;I)I","0","5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; > 1,2,3 @0 exception:4,
9 = binaryop(add) 7 , 8,
18 = phi  17,9,
19 = phi  16,10,
conditional branch(lt, to iindex=-1) 18,10,
return 19,","depth : 0
public int getUserRestrictionSource(String p1, int p2){
	List v1 = p0.getUserRestrictionSources(p1, p2);
	int v2 = v1.size();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSource(Ljava/lang/String;I)I","1","5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; > 1,2,3 @0 exception:4,
9 = new <Application,Ljava/util/ArrayList>@16,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
monitorexit 22,
return 9,
9 = binaryop(add) 7 , 8,
18 = phi  17,9,
19 = phi  16,10,
conditional branch(lt, to iindex=-1) 18,10,
return 19,","depth : 0
public int getUserRestrictionSource(String p1, int p2){
	List v1 = p0.getUserRestrictionSources(p1, p2);
	int v2 = v1.size();
	return phiInstruction;
}
-----
depth : 1
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSource(Ljava/lang/String;I)I","2","5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; > 1,2,3 @0 exception:4,
9 = new <Application,Ljava/util/ArrayList>@16,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/RestrictionsSet>5 <Application,Lcom/android/server/pm/RestrictionsSet>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/pm/RestrictionsSet>@10,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
12 = phi  6,8,
return 12,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
4 = new <Application,Ljava/util/ArrayList>@0,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
4 = new <Application,Ljava/util/ArrayList>@0,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
monitorexit 22,
return 9,
9 = binaryop(add) 7 , 8,
18 = phi  17,9,
19 = phi  16,10,
conditional branch(lt, to iindex=-1) 18,10,
return 19,","depth : 0
public int getUserRestrictionSource(String p1, int p2){
	List v1 = p0.getUserRestrictionSources(p1, p2);
	int v2 = v1.size();
	return phiInstruction;
}
-----
depth : 1
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 2
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 2
public RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int p1){
	Object v1 = this.mDevicePolicyLocalUserRestrictions.get(p1);
	RestrictionsSet v1 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
depth : 2
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserRestrictionSource(Ljava/lang/String;I)I","2","5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictionSources(Ljava/lang/String;I)Ljava/util/List; > 1,2,3 @0 exception:4,
9 = new <Application,Ljava/util/ArrayList>@16,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, hasBaseUserRestriction(Ljava/lang/String;I)Z > 1,2,3 @21 exception:11,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(eq, to iindex=-1) 12,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,
conditional branch(eq, to iindex=-1) 12,8,
13 = new <Application,Landroid/os/UserManager$EnforcingUser>@27,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getDevicePolicyLocalRestrictionsForTargetUserLR(I)Lcom/android/server/pm/RestrictionsSet; > 1,3 @41 exception:23,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/RestrictionsSet>5 <Application,Lcom/android/server/pm/RestrictionsSet>,
conditional branch(ne, to iindex=-1) 6,7,
8 = new <Application,Lcom/android/server/pm/RestrictionsSet>@10,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyLocalUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
12 = phi  6,8,
return 12,
25 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
27 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 24,2,25 @47 exception:26,
4 = new <Application,Ljava/util/ArrayList>@0,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDevicePolicyGlobalUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
31 = getfield < Application, Lcom/android/server/pm/UserManagerService, mDeviceOwnerUserId, <Primordial,I> > 1,
33 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getEnforcingUsers(Ljava/lang/String;I)Ljava/util/List; > 30,2,31 @58 exception:32,
4 = new <Application,Ljava/util/ArrayList>@0,
28 = phi  27,6,
7 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
conditional branch(ge, to iindex=-1) 28,9,
return 4,
monitorexit 22,
return 9,
9 = binaryop(add) 7 , 8,
18 = phi  17,9,
19 = phi  16,10,
conditional branch(lt, to iindex=-1) 18,10,
return 19,","depth : 0
public int getUserRestrictionSource(String p1, int p2){
	List v1 = p0.getUserRestrictionSources(p1, p2);
	int v2 = v1.size();
	return phiInstruction;
}
-----
depth : 1
public List getUserRestrictionSources(String p1, int p2){
	ArrayList v2 = new ArrayList();
	boolean v4 = p0.hasBaseUserRestriction(p1, p2);
	UserManager$EnforcingUser v4 = new UserManager$EnforcingUser(-10000,1);
	boolean v6 = v2.add(v4);
	RestrictionsSet v7 = p0.getDevicePolicyLocalRestrictionsForTargetUserLR(p2);
	List v8 = v7.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v9 = v2.addAll(v8);
	List v10 = this.mDevicePolicyGlobalUserRestrictions.getEnforcingUsers(p1, this.mDeviceOwnerUserId);
	boolean v11 = v2.addAll(v10);
	return v2;
}
-----
depth : 2
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	return phiInstruction;
}
-----
depth : 2
public RestrictionsSet getDevicePolicyLocalRestrictionsForTargetUserLR(int p1){
	Object v1 = this.mDevicePolicyLocalUserRestrictions.get(p1);
	RestrictionsSet v1 = new RestrictionsSet();
	this.mDevicePolicyLocalUserRestrictions.put(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
depth : 2
public List getEnforcingUsers(String p1, int p2){
	ArrayList v0 = new ArrayList();
	int v2 = this.mUserRestrictions.size();
	return v0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(eq, to iindex=-1) 11,18,
conditional branch(ne, to iindex=-1) 11,19,
goto (from iindex= 20 to iindex = 3),
23 = phi  20,22,
return 23,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public boolean isUserUnlockingOrUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(eq, to iindex=-1) 11,18,
conditional branch(ne, to iindex=-1) 11,19,
goto (from iindex= 20 to iindex = 3),
23 = phi  20,22,
return 23,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlockingOrUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(eq, to iindex=-1) 11,18,
conditional branch(ne, to iindex=-1) 11,19,
goto (from iindex= 22 to iindex = 2),
23 = phi  20,22,
return 23,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlockingOrUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isUserUnlockingOrUnlocked(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, isUserUnlockingOrUnlocked(I)Z > 5,2 @7 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 3 @2 exception:4,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmUserStates(Lcom/android/server/pm/UserManagerService;)Lcom/android/server/pm/UserManagerService$WatchedUserStates; > 6 @9 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserStates, <Application,Lcom/android/server/pm/UserManagerService$WatchedUserStates> > 1,
return 2,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, get(II)I > 8,2,9 @14 exception:10,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
conditional branch(lt, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$WatchedUserStates, states, <Application,Landroid/util/SparseIntArray> > 1,
12 = phi  3,10,
return 12,
monitorexit 5,
conditional branch(eq, to iindex=-1) 11,16,
conditional branch(ne, to iindex=-1) 11,17,
conditional branch(eq, to iindex=-1) 11,18,
conditional branch(ne, to iindex=-1) 11,19,
goto (from iindex= 20 to iindex = 3),
23 = phi  20,22,
return 23,
return 7,","depth : 0
public boolean isUserUnlockingOrUnlocked(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isUserUnlockingOrUnlocked"");
	boolean v2 = this.mLocalService.isUserUnlockingOrUnlocked(p1);
	return v2;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public boolean isUserUnlockingOrUnlocked(int p1){
	UserManagerService$WatchedUserStates v1 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	UserManagerService$WatchedUserStates v2 = UserManagerService.-$$Nest$fgetmUserStates(this.this$0);
	int v3 = v2.get(p1, -1);
	return phiInstruction;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public UserManagerService$WatchedUserStates -$$Nest$fgetmUserStates(UserManagerService p1){
	return this.mUserStates;
}
-----
depth : 2
public int get(int p1, int p2){
	int v1 = this.states.indexOfKey(p1);
	int v2 = this.states.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
3 = new <Application,Landroid/content/Intent>@0,
8 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;I)Landroid/content/Intent; > 3,6,2 @9 exception:7,
11 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 3,9 @14 exception:10,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
13 = getstatic < Application, Landroid/os/UserHandle, ALL, <Application,Landroid/os/UserHandle> >,
return,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 1
public void sendUserInfoChangedBroadcast(int p1){
	Intent v0 = new Intent(""android.intent.action.USER_INFO_CHANGED"");
	Intent v2 = v0.putExtra(""android.intent.extra.user_handle"", p1);
	Intent v3 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, UserHandle.ALL);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
monitorexit 3,
return 7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
3 = new <Application,Landroid/content/Intent>@0,
8 = invokevirtual < Application, Landroid/content/Intent, putExtra(Ljava/lang/String;I)Landroid/content/Intent; > 3,6,2 @9 exception:7,
11 = invokevirtual < Application, Landroid/content/Intent, addFlags(I)Landroid/content/Intent; > 3,9 @14 exception:10,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
13 = getstatic < Application, Landroid/os/UserHandle, ALL, <Application,Landroid/os/UserHandle> >,
return,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
depth : 1
public void sendUserInfoChangedBroadcast(int p1){
	Intent v0 = new Intent(""android.intent.action.USER_INFO_CHANGED"");
	Intent v2 = v0.putExtra(""android.intent.extra.user_handle"", p1);
	Intent v3 = v0.addFlags(1073741824);
	this.mContext.sendBroadcastAsUser(v0, UserHandle.ALL);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	long v5 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v5);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
conditional branch(ne, to iindex=-1) 14,9,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
putfield 18.< Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > = 3,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @35 exception:19,
goto (from iindex= 20 to iindex = 2),
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	UserInfo.name = p2;
	p0.writeUserLP(v2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserName(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataNoChecks(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:7,
conditional branch(eq, to iindex=-1) 8,9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 8,
11 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 10,
conditional branch(eq, to iindex=-1) 11,9,
conditional branch(eq, to iindex=-1) 3,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, name, <Application,Ljava/lang/String> > 10,
conditional branch(ne, to iindex=-1) 14,9,
22 = phi  20,9,
monitorexit 6,
conditional branch(eq, to iindex=-1) 22,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, sendUserInfoChangedBroadcast(I)V > 1,2 @48 exception:27,
goto (from iindex= 28 to iindex = 6),
return,","depth : 0
public void setUserName(int p1, String p2){
	UserManagerService.checkManageUsersPermission(""rename users"");
	UserManagerService$UserData v2 = p0.getUserDataNoChecks(p1);
	boolean v3 = p2.equals(UserInfo.name);
	long v4 = Binder.clearCallingIdentity();
	p0.sendUserInfoChangedBroadcast(p1);
	Binder.restoreCallingIdentity(v4);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIsCredentialSharableWithParent, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 1
public boolean isCredentialSharableWithParent(){
	return this.mIsCredentialSharableWithParent;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIsCredentialSharableWithParent, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 1
public boolean isCredentialSharableWithParent(){
	return this.mIsCredentialSharableWithParent;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
goto (from iindex= 14 to iindex = 2),
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isCredentialSharableWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isCredentialSharableWithParent()Z > 7 @20 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
18 = phi  17,8,
monitorexit 5,
return 18,","depth : 0
public boolean isCredentialSharableWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isCredentialSharableWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isCredentialSharableWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
return 9,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge dark color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 7,
goto (from iindex= 8 to iindex = 2),
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeColor(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeColors, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
6 = arraylength 3,
8 = binaryop(add) 6 , 7,
11 = arrayload 3[10],
return 11,
return 14,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeColor(int p1){
	int v1 = Math.min(p1, (this.mBadgeColors.length + -1));
	return this.mBadgeColors[v1];
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeColor(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeColors, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
6 = arraylength 3,
8 = binaryop(add) 6 , 7,
11 = arrayload 3[10],
return 11,
return 14,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeColor(int p1){
	int v1 = Math.min(p1, (this.mBadgeColors.length + -1));
	return this.mBadgeColors[v1];
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
return 9,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge dark color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeColor(I)I > 8,12 @26 exception:13,
return 14,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
return 9,","depth : 0
public int getUserBadgeColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge dark color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
goto (from iindex= 10 to iindex = 2),
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isPreCreated(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 7,
conditional branch(eq, to iindex=-1) 9,8,
12 = phi  11,8,
monitorexit 5,
return 12,","depth : 0
public boolean isPreCreated(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isPreCreated"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","0","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
goto (from iindex= 12 to iindex = 59),
41 = new <Application,Ljava/lang/StringBuilder>@83,
monitorexit 10,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.GET_ACCOUNTS_PRIVILEGED"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserIcon: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 7,
goto (from iindex= 8 to iindex = 2),
10 = phi  9,8,
monitorexit 3,
return 10,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
goto (from iindex= 12 to iindex = 59),
41 = new <Application,Ljava/lang/StringBuilder>@83,
monitorexit 10,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.GET_ACCOUNTS_PRIVILEGED"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserIcon: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","1","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
10 = phi  9,8,
monitorexit 3,
return 10,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
goto (from iindex= 12 to iindex = 59),
41 = new <Application,Ljava/lang/StringBuilder>@83,
monitorexit 10,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.GET_ACCOUNTS_PRIVILEGED"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserIcon: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 9 to iindex = 3),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
goto (from iindex= 12 to iindex = 59),
41 = new <Application,Ljava/lang/StringBuilder>@83,
monitorexit 10,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.GET_ACCOUNTS_PRIVILEGED"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserIcon: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","2","5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersOrPermission(Ljava/lang/String;)Z > 3 @2 exception:4,
5 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission(I)Z > 3 @4 exception:4,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 1,5,
conditional branch(eq, to iindex=-1) 8,5,
goto (from iindex= 11 to iindex = 2),
15 = phi  5,13,
return 15,
conditional branch(ne, to iindex=-1) 5,6,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 1,3 @10 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,6,
goto (from iindex= 8 to iindex = 3),
13 = phi  6,12,
return 13,
conditional branch(eq, to iindex=-1) 5,6,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 10,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:11,
conditional branch(eq, to iindex=-1) 12,6,
13 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 12,
conditional branch(eq, to iindex=-1) 13,6,
goto (from iindex= 12 to iindex = 59),
41 = new <Application,Ljava/lang/StringBuilder>@83,
monitorexit 10,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.GET_ACCOUNTS_PRIVILEGED"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""getUserIcon: unknown user #"");
	StringBuilder v5 = v2.append(p1);
	String v6 = v2.toString();
	int v7 = Slog.w(""UserManagerService"", v6);
	return 0;
}
-----
depth : 1
public boolean hasManageUsersOrPermission(String p1){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	boolean v3 = UserManagerService.hasPermissionGranted(p1, v1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(int p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", p1);
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIcon(I)Landroid/os/ParcelFileDescriptor;","2","conditional branch(ne, to iindex=-1) 22,6,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 23 @50 exception:24,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
27 = getfield < Application, Landroid/content/pm/UserInfo, iconPath, <Application,Ljava/lang/String> > 12,
conditional branch(ne, to iindex=-1) 27,6,
monitorexit 10,
28 = new <Application,Ljava/io/File>@60,
32 = invokestatic < Application, Landroid/os/ParcelFileDescriptor, open(Ljava/io/File;I)Landroid/os/ParcelFileDescriptor; > 28,30 @67 exception:31,
36 = getCaughtException ,
return 6,","depth : 0
public ParcelFileDescriptor getUserIcon(int p1){
	UserManagerService.checkManageUsersPermission(""get the icon of a user who is not related"");
	File v5 = new File(UserInfo.iconPath);
	ParcelFileDescriptor v7 = ParcelFileDescriptor.open(v5, 268435456);
	int v8 = Slog.e(""UserManagerService"", ""Couldn't find icon file"", caughtException);
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","0","14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @9 exception:13,
goto (from iindex= 7 to iindex = 17),
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v2 = p0.getUserInfoLU(p1);
	return UserInfo.creationTime;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","1","14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @9 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
goto (from iindex= 7 to iindex = 17),
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v2 = p0.getUserInfoLU(p1);
	return UserInfo.creationTime;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","1","12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @24 exception:11,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
goto (from iindex= 15 to iindex = 2),
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v3 = p0.getUserInfoLU(p1);
	return UserInfo.creationTime;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","2","7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @14 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
return 9,
conditional branch(eq, to iindex=-1) 7,8,
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v2 = p0.getProfileParentLU(p1);
	return UserInfo.creationTime;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserCreationTime(I)J","2","7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @14 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 4,5,
return 5,
conditional branch(eq, to iindex=-1) 7,8,
16 = phi  14,12,8,
monitorexit 5,
conditional branch(eq, to iindex=-1) 16,8,
27 = getfield < Application, Landroid/content/pm/UserInfo, creationTime, <Primordial,J> > 16,
return 27,","depth : 0
public long getUserCreationTime(int p1){
	UserInfo v2 = p0.getProfileParentLU(p1);
	return UserInfo.creationTime;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 13 @27 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 13 @27 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 4 to iindex = 2),
6 = phi  3,5,
return 6,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isPrimary(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 13 @27 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
6 = phi  3,5,
return 6,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isPrimary(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isPrimary()Z > 13 @27 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
conditional branch(ne, to iindex=-1) 19,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isPrimary();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPrimaryUser()Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
25 = phi  24,8,
conditional branch(ge, to iindex=-1) 25,7,
monitorexit 4,
return 8,","depth : 0
public UserInfo getPrimaryUser(){
	UserManagerService.checkManageUsersPermission(""query users"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested icon badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getIconBadge()I > 6 @18 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
return 2,
return 11,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	int v4 = v2.getIconBadge();
	return v4;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getIconBadge(){
	return this.mIconBadge;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested icon badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested icon badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested icon badge for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserIconBadgeResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getIconBadge()I > 6 @18 exception:10,
return 11,","depth : 0
public int getUserIconBadgeResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserIconBadgeResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	int v4 = v2.getIconBadge();
	return v4;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIsMediaSharedWithParent, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 1
public boolean isMediaSharedWithParent(){
	return this.mIsMediaSharedWithParent;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBaseType, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIsMediaSharedWithParent, <Primordial,Z> > 1,
return 2,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
depth : 1
public boolean isMediaSharedWithParent(){
	return this.mIsMediaSharedWithParent;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","isMediaSharedWithParent(I)Z","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @8 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isProfile()Z > 7 @15 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isMediaSharedWithParent()Z > 7 @21 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
15 = phi  8,8,8,13,
monitorexit 5,
return 15,","depth : 0
public boolean isMediaSharedWithParent(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""isMediaSharedWithParent"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.isProfile();
	boolean v4 = v2.isMediaSharedWithParent();
	return phiInstruction;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getRemainingCreatableProfileCount(Ljava/lang/String;I)I","0","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @1 exception:5,
return 6,","depth : 0
public int getRemainingCreatableProfileCount(String p1, int p2){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, 0);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableProfileCount(Ljava/lang/String;I)I","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @1 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
return 6,","depth : 0
public int getRemainingCreatableProfileCount(String p1, int p2){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, 0);
	return v1;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableProfileCount(Ljava/lang/String;I)I","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @1 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
7 = new <Application,Ljava/lang/StringBuilder>@6,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
monitorexit 22,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 7,5,
return 10,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
return 6,","depth : 0
public int getRemainingCreatableProfileCount(String p1, int p2){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, 0);
	return v1;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	int v3 = SystemProperties.getInt(""persist.sys.max_profiles"", v1);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableProfileCount(Ljava/lang/String;I)I","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @1 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
7 = new <Application,Ljava/lang/StringBuilder>@6,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
monitorexit 22,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 7,5,
return 3,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
return 6,","depth : 0
public int getRemainingCreatableProfileCount(String p1, int p2){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, 0);
	return v1;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","evictCredentialEncryptionKey(I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
6 = invokestatic < Application, Landroid/app/ActivityManagerNative, getDefault()Landroid/app/IActivityManager; > @5 exception:5,
return,","depth : 0
public void evictCredentialEncryptionKey(int p1){
	UserManagerService.checkManageUsersPermission(""evict CE key"");
	IActivityManager v2 = ActivityManagerNative.getDefault();
	long v3 = Binder.clearCallingIdentity();
	int v4 = v2.restartUserInBackground(p1);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","evictCredentialEncryptionKey(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokestatic < Application, Landroid/app/ActivityManagerNative, getDefault()Landroid/app/IActivityManager; > @5 exception:5,
return 2,
return,","depth : 0
public void evictCredentialEncryptionKey(int p1){
	UserManagerService.checkManageUsersPermission(""evict CE key"");
	IActivityManager v2 = ActivityManagerNative.getDefault();
	long v3 = Binder.clearCallingIdentity();
	int v4 = v2.restartUserInBackground(p1);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public IActivityManager getDefault(){
	IActivityManager v1 = ActivityManager.getService();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","evictCredentialEncryptionKey(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
6 = invokestatic < Application, Landroid/app/ActivityManagerNative, getDefault()Landroid/app/IActivityManager; > @5 exception:5,
return,","depth : 0
public void evictCredentialEncryptionKey(int p1){
	UserManagerService.checkManageUsersPermission(""evict CE key"");
	IActivityManager v2 = ActivityManagerNative.getDefault();
	long v3 = Binder.clearCallingIdentity();
	int v4 = v2.restartUserInBackground(p1);
	Binder.restoreCallingIdentity(v3);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","0","31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @169 exception:30,
conditional branch(eq, to iindex=-1) 31,6,
36 = new <Application,Ljava/lang/StringBuilder>@182,
55 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 24,
56 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 55,
58 = binaryop(or) 56 , 57,
putfield 55.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 58,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,24 @223 exception:59,
monitorexit 19,
return 60,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	boolean v10 = p0.removeUserUnchecked(p1);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Unable to immediately remove user "");
	StringBuilder v13 = v10.append(p1);
	StringBuilder v14 = v10.append("" (current user is "");
	StringBuilder v15 = v10.append(v9);
	StringBuilder v16 = v10.append(""). User is set as ephemeral and will be removed on user switch or reboot."");
	String v17 = v10.toString();
	int v18 = Slog.i(""UserManagerService"", v17);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(v7);
	Binder.restoreCallingIdentity(v6);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
return 8,
conditional branch(eq, to iindex=-1) 14,6,
123 = new <Application,Ljava/lang/StringBuilder>@28,
return 137,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v2 = p0.getUserRemovalRestriction(p1);
	int v3 = UserHandle.getCallingUserId();
	Bundle v4 = p0.getUserRestrictions(v3);
	boolean v5 = v4.getBoolean(v2, 0);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot remove user. "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append("" is enabled."");
	String v10 = v5.toString();
	int v11 = Slog.w(""UserManagerService"", v10);
	return -2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","1","31 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, removeUserUnchecked(I)Z > 1,2 @169 exception:30,
conditional branch(eq, to iindex=-1) 31,6,
36 = new <Application,Ljava/lang/StringBuilder>@182,
55 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 24,
56 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 55,
58 = binaryop(or) 56 , 57,
putfield 55.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 58,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,24 @223 exception:59,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 19,
return 60,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	boolean v10 = p0.removeUserUnchecked(p1);
	StringBuilder v10 = new StringBuilder();
	StringBuilder v12 = v10.append(""Unable to immediately remove user "");
	StringBuilder v13 = v10.append(p1);
	StringBuilder v14 = v10.append("" (current user is "");
	StringBuilder v15 = v10.append(v9);
	StringBuilder v16 = v10.append(""). User is set as ephemeral and will be removed on user switch or reboot."");
	String v17 = v10.toString();
	int v18 = Slog.i(""UserManagerService"", v17);
	UserInfo.flags = (UserInfo.flags | 256);
	p0.writeUserLP(v7);
	Binder.restoreCallingIdentity(v6);
	return 1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(ne, to iindex=-1) 6,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
conditional branch(eq, to iindex=-1) 14,6,
123 = new <Application,Ljava/lang/StringBuilder>@28,
return 137,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v2 = p0.getUserRemovalRestriction(p1);
	int v3 = UserHandle.getCallingUserId();
	Bundle v4 = p0.getUserRestrictions(v3);
	boolean v5 = v4.getBoolean(v2, 0);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot remove user. "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append("" is enabled."");
	String v10 = v5.toString();
	int v11 = Slog.w(""UserManagerService"", v10);
	return -2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
20 = phi  19,18,
return 20,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
conditional branch(eq, to iindex=-1) 10,8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(ne, to iindex=-1) 6,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
conditional branch(eq, to iindex=-1) 14,6,
123 = new <Application,Ljava/lang/StringBuilder>@28,
return 137,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v2 = p0.getUserRemovalRestriction(p1);
	int v3 = UserHandle.getCallingUserId();
	Bundle v4 = p0.getUserRestrictions(v3);
	boolean v5 = v4.getBoolean(v2, 0);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot remove user. "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append("" is enabled."");
	String v10 = v5.toString();
	int v11 = Slog.w(""UserManagerService"", v10);
	return -2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","removeUserWhenPossible(IZ)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
conditional branch(ne, to iindex=-1) 3,6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRemovalRestriction(I)Ljava/lang/String; > 1,2 @8 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 3,
conditional branch(eq, to iindex=-1) 5,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 5 @10 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
goto (from iindex= 10 to iindex = 2),
15 = phi  14,8,
conditional branch(eq, to iindex=-1) 15,8,
goto (from iindex= 14 to iindex = 3),
20 = phi  19,18,
return 20,
12 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserRestrictions(I)Landroid/os/Bundle; > 1,10 @16 exception:11,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
conditional branch(eq, to iindex=-1) 7,8,
goto (from iindex= 6 to iindex = 44),
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getEffectiveUserRestrictions(I)Landroid/os/Bundle; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
conditional branch(ne, to iindex=-1) 6,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mCachedEffectiveUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
13 = phi  6,9,
monitorexit 3,
return 13,
8 = invokestatic < Application, Lcom/android/server/BundleUtils, clone(Landroid/os/Bundle;)Landroid/os/Bundle; > 6 @9 exception:7,
2 = new <Application,Landroid/os/Bundle>@0,
conditional branch(eq, to iindex=-1) 1,3,
goto (from iindex= 3 to iindex = 4),
return 2,
return 8,
conditional branch(eq, to iindex=-1) 14,6,
123 = new <Application,Ljava/lang/StringBuilder>@28,
return 137,","depth : 0
public int removeUserWhenPossible(int p1, boolean p2){
	UserManagerService.checkCreateUsersPermission(""Only the system can remove users"");
	String v2 = p0.getUserRemovalRestriction(p1);
	int v3 = UserHandle.getCallingUserId();
	Bundle v4 = p0.getUserRestrictions(v3);
	boolean v5 = v4.getBoolean(v2, 0);
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot remove user. "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append("" is enabled."");
	String v10 = v5.toString();
	int v11 = Slog.w(""UserManagerService"", v10);
	return -2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public String getUserRemovalRestriction(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public Bundle getUserRestrictions(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserRestrictions"");
	Bundle v2 = p0.getEffectiveUserRestrictions(p1);
	Bundle v3 = BundleUtils.clone(v2);
	return v3;
}
-----
depth : 2
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	return;
}
-----
depth : 2
public Bundle getEffectiveUserRestrictions(int p1){
	Bundle v1 = this.mCachedEffectiveUserRestrictions.getRestrictions(p1);
	Bundle v2 = p0.computeEffectiveUserRestrictionsLR(p1);
	boolean v3 = this.mCachedEffectiveUserRestrictions.updateRestrictions(p1, v2);
	return phiInstruction;
}
-----
depth : 2
public Bundle clone(Bundle p1){
	Bundle v0 = new Bundle(p1);
	return v0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountName(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > 7,
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountName(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
conditional branch(ne, to iindex=-1) 16,9,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
conditional branch(ne, to iindex=-1) 47,48,
50 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @103 exception:49,
52 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,2 @107 exception:51,
53 = binaryop(sub) 50 , 52,
55 = phi  17,53,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = v2.getMaxAllowed();
	int v12 = p0.getNumberOfUsersOfType(p1);
	int v13 = Math.min(phiInstruction, phiInstruction);
	int v14 = Math.max(0, v13);
	return v14;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
conditional branch(ne, to iindex=-1) 16,9,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 47,48,
50 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @103 exception:49,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
52 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,2 @107 exception:51,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
30 = phi  29,7,
31 = phi  24,7,
conditional branch(ge, to iindex=-1) 30,6,
monitorexit 3,
return 31,
53 = binaryop(sub) 50 , 52,
55 = phi  17,53,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = v2.getMaxAllowed();
	int v12 = p0.getNumberOfUsersOfType(p1);
	int v13 = Math.min(phiInstruction, phiInstruction);
	int v14 = Math.max(0, v13);
	return v14;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 1
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 1
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 1
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
depth : 1
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
depth : 1
public int getNumberOfUsersOfType(String p1){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
conditional branch(ne, to iindex=-1) 16,9,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 47,48,
goto (from iindex= 60 to iindex = 11),
55 = phi  17,53,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = Math.min(phiInstruction, phiInstruction);
	int v12 = Math.max(0, v11);
	return v12;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 1
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 1
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 1
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
conditional branch(ne, to iindex=-1) 16,9,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
conditional branch(ne, to iindex=-1) 47,48,
50 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @103 exception:49,
52 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,2 @107 exception:51,
53 = binaryop(sub) 50 , 52,
55 = phi  17,53,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = v2.getMaxAllowed();
	int v12 = p0.getNumberOfUsersOfType(p1);
	int v13 = Math.min(phiInstruction, phiInstruction);
	int v14 = Math.max(0, v13);
	return v14;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 11 to iindex = 2),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
conditional branch(ne, to iindex=-1) 16,9,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
conditional branch(ne, to iindex=-1) 47,48,
50 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @103 exception:49,
52 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,2 @107 exception:51,
53 = binaryop(sub) 50 , 52,
55 = phi  17,53,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = v2.getMaxAllowed();
	int v12 = p0.getNumberOfUsersOfType(p1);
	int v13 = Math.min(phiInstruction, phiInstruction);
	int v14 = Math.max(0, v13);
	return v14;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getRemainingCreatableUserCount(Ljava/lang/String;)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryOrCreateUsersPermission()Z > @0 exception:2,
conditional branch(ne, to iindex=-1) 2,3,
conditional branch(eq, to iindex=-1) 8,3,
goto (from iindex= 9 to iindex = 3),
13 = phi  3,12,
return 13,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 8 @16 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 12,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @27 exception:13,
conditional branch(ne, to iindex=-1) 16,9,
conditional branch(eq, to iindex=-1) 19,9,
goto (from iindex= 23 to iindex = 7),
26 = phi  22,17,
30 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 8 @54 exception:29,
conditional branch(eq, to iindex=-1) 30,9,
32 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 37,9,
conditional branch(gt, to iindex=-1) 26,9,
goto (from iindex= 44 to iindex = 2),
38 = phi  31,9,
conditional branch(ne, to iindex=-1) 14,31,
goto (from iindex= 48 to iindex = 2),
39 = phi  31,9,
40 = binaryop(and) 39 , 38,
conditional branch(eq, to iindex=-1) 40,9,
42 = phi  26,26,31,
conditional branch(gt, to iindex=-1) 42,9,
47 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 8 @95 exception:46,
conditional branch(ne, to iindex=-1) 47,48,
goto (from iindex= 60 to iindex = 11),
55 = phi  17,53,
monitorexit 12,
return 62,","depth : 0
public int getRemainingCreatableUserCount(String p1){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of users that can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	int v4 = p0.getAliveUsersExcludingGuestsCountLU();
	boolean v5 = UserManager.isUserTypeGuest(p1);
	boolean v6 = UserManager.isUserTypeDemo(p1);
	boolean v7 = v2.isManagedProfile();
	PackageManager v8 = this.mContext.getPackageManager();
	boolean v9 = v8.hasSystemFeature(""android.software.managed_users"");
	int v10 = v2.getMaxAllowed();
	int v11 = Math.min(phiInstruction, phiInstruction);
	int v12 = Math.max(0, v11);
	return v12;
}
-----
depth : 1
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasQueryOrCreateUsersPermission(){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	int v2 = Binder.getCallingUid();
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.QUERY_USERS"", v2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setDefaultGuestRestrictions(Landroid/os/Bundle;)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorexit 5,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserListLP()V > 1 @22 exception:15,
monitorexit 14,
return,","depth : 0
public void setDefaultGuestRestrictions(Bundle p1){
	UserManagerService.checkManageUsersPermission(""setDefaultGuestRestrictions"");
	this.mGuestRestrictions.clear();
	this.mGuestRestrictions.putAll(p1);
	p0.writeUserListLP();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setDefaultGuestRestrictions(Landroid/os/Bundle;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorexit 5,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserListLP()V > 1 @22 exception:15,
2 = new <Application,Landroid/util/AtomicFile>@0,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserListFile, <Application,Ljava/io/File> > 1,
10 = getstatic < Application, Ljava/lang/Boolean, TRUE, <Application,Ljava/lang/Boolean> >,
19 = getfield < Application, Lcom/android/server/pm/UserManagerService, mNextSerialNumber, <Primordial,I> > 1,
100 = phi  5,7,
return,
monitorexit 14,
return,","depth : 0
public void setDefaultGuestRestrictions(Bundle p1){
	UserManagerService.checkManageUsersPermission(""setDefaultGuestRestrictions"");
	this.mGuestRestrictions.clear();
	this.mGuestRestrictions.putAll(p1);
	p0.writeUserListLP();
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public void writeUserListLP(){
	AtomicFile v0 = new AtomicFile(this.mUserListFile);
	FileOutputStream v2 = v0.startWrite();
	TypedXmlSerializer v3 = Xml.resolveSerializer(v2);
	v3.startDocument(0, Boolean.TRUE);
	v3.setFeature(""http://xmlpull.org/v1/doc/features.html#indent-output"", 1);
	XmlSerializer v6 = v3.startTag(0, ""users"");
	v0.failWrite(phiInstruction);
	int v8 = Slog.e(""UserManagerService"", ""Error writing user list"");
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setDefaultGuestRestrictions(Landroid/os/Bundle;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorexit 5,
14 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 14,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserListLP()V > 1 @22 exception:15,
monitorexit 14,
return,","depth : 0
public void setDefaultGuestRestrictions(Bundle p1){
	UserManagerService.checkManageUsersPermission(""setDefaultGuestRestrictions"");
	this.mGuestRestrictions.clear();
	this.mGuestRestrictions.putAll(p1);
	p0.writeUserListLP();
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge (no background) for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeNoBackground()I > 6 @18 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeNoBackground, <Primordial,I> > 1,
return 2,
return 11,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	int v4 = v2.getBadgeNoBackground();
	return v4;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeNoBackground(){
	return this.mBadgeNoBackground;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge (no background) for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge (no background) for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
goto (from iindex= 8 to iindex = 6),
15 = new <Application,Ljava/lang/StringBuilder>@23,
return 7,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""Requested badge (no background) for non-badged user "");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.e(""UserManagerService"", v7);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeNoBackgroundResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetailsNoChecks(I)Lcom/android/server/pm/UserTypeDetails; > 1,2 @5 exception:5,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeNoChecks(I)Ljava/lang/String; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
conditional branch(eq, to iindex=-1) 5,6,
7 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 5,
goto (from iindex= 6 to iindex = 2),
8 = phi  7,6,
monitorexit 3,
return 8,
conditional branch(eq, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
goto (from iindex= 7 to iindex = 2),
10 = phi  9,5,
return 10,
conditional branch(eq, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 6 @11 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeNoBackground()I > 6 @18 exception:10,
return 11,","depth : 0
public int getUserBadgeNoBackgroundResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeNoBackgroundResId"");
	UserTypeDetails v2 = p0.getUserTypeDetailsNoChecks(p1);
	boolean v3 = v2.hasBadge();
	int v4 = v2.getBadgeNoBackground();
	return v4;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetailsNoChecks(int p1){
	String v1 = p0.getUserTypeNoChecks(p1);
	Object v2 = this.mUserTypes.get(v1);
	return phiInstruction;
}
-----
depth : 2
public String getUserTypeNoChecks(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserAccount(I)Ljava/lang/String;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>8 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 9,
monitorexit 5,
return 10,","depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""get user account"");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserAccount(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>8 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 9,
monitorexit 5,
return 10,","depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""get user account"");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserAccount(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>8 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 9,
monitorexit 5,
return 10,","depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""get user account"");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserAccount(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 3 @2 exception:4,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>8 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 9,
monitorexit 5,
return 10,","depth : 0
public String getUserAccount(int p1){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""get user account"");
	Object v2 = this.mUsers.get(p1);
	return UserManagerService$UserData.account;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
3 = getfield < Application, Lcom/android/server/pm/RestrictionsSet, mUserRestrictions, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Landroid/os/Bundle>5 <Application,Landroid/os/Bundle>,
return 6,
conditional branch(eq, to iindex=-1) 12,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 1
public Bundle getRestrictions(int p1){
	Object v1 = this.mUserRestrictions.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
return 2,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
conditional branch(eq, to iindex=-1) 15,6,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
return 2,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
conditional branch(eq, to iindex=-1) 15,6,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
conditional branch(eq, to iindex=-1) 14,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	boolean v4 = v3.getBoolean(p1, 0);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("")"");
	StringBuilder v10 = v4.append("": "");
	StringBuilder v11 = v4.append(p1);
	boolean v12 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v13 = v4.toString();
	int v14 = Slog.wtf(""UserRestrictionsUtils"", v13);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","hasBaseUserRestriction(Ljava/lang/String;I)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isValidRestriction(Ljava/lang/String;)Z > 2 @5 exception:6,
2 = getstatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, USER_RESTRICTIONS, <Application,Ljava/util/Set> >,
conditional branch(ne, to iindex=-1) 4,6,
10 = invokestatic < Application, Landroid/app/AppGlobals, getPackageManager()Landroid/content/pm/IPackageManager; > @14 exception:9,
return 2,
13 = phi  6,12,
14 = new <Application,Ljava/lang/StringBuilder>@22,
conditional branch(eq, to iindex=-1) 13,6,
19 = arraylength 13,
conditional branch(le, to iindex=-1) 19,6,
23 = arrayload 13[6],
26 = arraylength 13,
conditional branch(le, to iindex=-1) 26,5,
conditional branch(eq, to iindex=-1) 1,6,
47 = invokestatic < Application, Lcom/android/server/pm/UserRestrictionsUtils, isSystemApp(I[Ljava/lang/String;)Z > 8,13 @73 exception:46,
conditional branch(eq, to iindex=-1) 4,6,
conditional branch(ne, to iindex=-1) 2,6,
23 = phi  22,6,
9 = arraylength 2,
conditional branch(ge, to iindex=-1) 23,9,
10 = arrayload 2[23],
conditional branch(eq, to iindex=-1) 15,6,
conditional branch(eq, to iindex=-1) 17,6,
return 5,
conditional branch(eq, to iindex=-1) 47,6,
goto (from iindex= 41 to iindex = 8),
return 6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mBaseUserRestrictions, <Application,Lcom/android/server/pm/RestrictionsSet> > 1,
12 = invokevirtual < Application, Lcom/android/server/pm/RestrictionsSet, getRestrictions(I)Landroid/os/Bundle; > 10,3 @18 exception:11,
conditional branch(eq, to iindex=-1) 12,8,
16 = phi  8,8,15,
monitorexit 9,
return 16,","depth : 0
public boolean hasBaseUserRestriction(String p1, int p2){
	UserManagerService.checkCreateUsersPermission(""hasBaseUserRestriction"");
	boolean v2 = UserRestrictionsUtils.isValidRestriction(p1);
	Bundle v3 = this.mBaseUserRestrictions.getRestrictions(p2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean isValidRestriction(String p1){
	boolean v1 = this.USER_RESTRICTIONS.contains(p1);
	int v2 = Binder.getCallingUid();
	IPackageManager v3 = AppGlobals.getPackageManager();
	String v4 = v3.getPackagesForUid(v2);
	StringBuilder v4 = new StringBuilder(""Unknown restriction queried by uid "");
	StringBuilder v6 = v4.append(v2);
	StringBuilder v7 = v4.append("" ("");
	StringBuilder v8 = v4.append(phiInstruction[0]);
	StringBuilder v9 = v4.append("" et al"");
	StringBuilder v10 = v4.append("")"");
	StringBuilder v11 = v4.append("": "");
	StringBuilder v12 = v4.append(p1);
	boolean v13 = UserRestrictionsUtils.isSystemApp(v2, phiInstruction);
	String v14 = v4.toString();
	int v15 = Slog.wtf(""UserRestrictionsUtils"", v14);
	return 0;
}
-----
depth : 2
public IPackageManager getPackageManager(){
	IPackageManager v1 = ActivityThread.getPackageManager();
	return v1;
}
-----
depth : 2
public boolean isSystemApp(int p1, String p2){
	IPackageManager v2 = AppGlobals.getPackageManager();
	int v3 = UserHandle.getUserId(p1);
	ApplicationInfo v4 = v2.getApplicationInfo(p2[phiInstruction], 794624, v3);
	boolean v5 = v4.isSystemApp();
	return 1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
return 4,
conditional branch(eq, to iindex=-1) 6,4,
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 9 to iindex = 3),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	boolean v2 = UserManager.isUserTypeManagedProfile(p2);
	int v3 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v3, ""Cannot add user"");
	UserInfo v5 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v5;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternal(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6 @3 exception:8,
conditional branch(eq, to iindex=-1) 8,9,
goto (from iindex= 4 to iindex = 12),
15 = phi  14,13,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,15,19,20 @27 exception:21,
return,
23 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,9,6,9 @38 exception:22,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
return 27,
return 23,
return 9,","depth : 0
public UserInfo createProfileForUserWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternal(p1, p2, p3, p4, p5);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternal(String p1, String p2, int p3, int p4, String p5){
	boolean v1 = UserManager.isUserTypeCloneProfile(p2);
	int v2 = UserHandle.getCallingUserId();
	p0.enforceUserRestriction(phiInstruction, v2, ""Cannot add user"");
	UserInfo v4 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v4;
}
-----
depth : 2
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 2
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserSerialNumber(I)I","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
8 = getfield < Application, Landroid/content/pm/UserInfo, serialNumber, <Primordial,I> > 5,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,7,
monitorexit 3,
return 9,","depth : 0
public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserSerialNumber(I)I","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
conditional branch(eq, to iindex=-1) 5,6,
9 = phi  8,7,
monitorexit 3,
return 9,","depth : 0
public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserSerialNumber(I)I","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 5,6,
8 = getfield < Application, Landroid/content/pm/UserInfo, serialNumber, <Primordial,I> > 5,
goto (from iindex= 6 to iindex = 2),
9 = phi  8,7,
monitorexit 3,
return 9,","depth : 0
public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/pm/UserManagerService","getUserSerialNumber(I)I","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
5 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @3 exception:4,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 5,6,
9 = phi  8,7,
monitorexit 3,
return 9,","depth : 0
public int getUserSerialNumber(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return phiInstruction;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","NONE"

"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 2 @17 exception:10,
13 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,11 @21 exception:12,
conditional branch(ge, to iindex=-1) 13,7,
14 = phi  5,9,
return 14,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	String v3 = p1.getName();
	int v4 = p0.getNumberOfUsersOfType(v3);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 2 @17 exception:10,
13 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,11 @21 exception:12,
conditional branch(ge, to iindex=-1) 13,7,
14 = phi  5,9,
return 14,
conditional branch(eq, to iindex=-1) 11,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	String v3 = p1.getName();
	int v4 = p0.getNumberOfUsersOfType(v3);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 2 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
13 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,11 @21 exception:12,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
30 = phi  29,7,
31 = phi  24,7,
conditional branch(ge, to iindex=-1) 30,6,
monitorexit 3,
return 31,
conditional branch(ge, to iindex=-1) 13,7,
14 = phi  5,9,
return 14,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	String v3 = p1.getName();
	int v4 = p0.getNumberOfUsersOfType(v3);
	return phiInstruction;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 2
public int getNumberOfUsersOfType(String p1){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 7,8,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getName()Ljava/lang/String; > 2 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 2,
13 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNumberOfUsersOfType(Ljava/lang/String;)I > 1,11 @21 exception:12,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
30 = phi  29,7,
31 = phi  24,7,
conditional branch(ge, to iindex=-1) 30,6,
monitorexit 3,
return 31,
conditional branch(ge, to iindex=-1) 13,7,
14 = phi  5,9,
return 14,
conditional branch(eq, to iindex=-1) 11,9,
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	String v3 = p1.getName();
	int v4 = p0.getNumberOfUsersOfType(v3);
	return phiInstruction;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
depth : 2
public String getName(){
	return this.mName;
}
-----
depth : 2
public int getNumberOfUsersOfType(String p1){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreUsersOfType(Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
8 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>7 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreUsersOfType(Lcom/android/server/pm/UserTypeDetails;)Z > 1,8 @15 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 2 @0 exception:3,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 4,5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getMaxAllowed()I > 2 @8 exception:6,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mMaxAllowed, <Primordial,I> > 1,
return 2,
conditional branch(ne, to iindex=-1) 7,8,
return 9,
conditional branch(eq, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 2),
16 = phi  15,9,
return 16,","depth : 0
public boolean canAddMoreUsersOfType(String p1){
	UserManagerService.checkCreateUsersPermission(""check if more users can be added."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = p0.canAddMoreUsersOfType(v2);
	return phiInstruction;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public boolean canAddMoreUsersOfType(UserTypeDetails p1){
	boolean v1 = p1.isEnabled();
	int v2 = p1.getMaxAllowed();
	return 1;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public int getMaxAllowed(){
	return this.mMaxAllowed;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
return 9,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 7,
goto (from iindex= 8 to iindex = 2),
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDarkThemeBadgeColor(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDarkThemeBadgeColors, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
goto (from iindex= 5 to iindex = 11),
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeColor(I)I > 1,2 @20 exception:12,
return 13,
return 14,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getDarkThemeBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getDarkThemeBadgeColor(int p1){
	int v1 = p0.getBadgeColor(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDarkThemeBadgeColor(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mDarkThemeBadgeColors, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
goto (from iindex= 5 to iindex = 11),
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeColor(I)I > 1,2 @20 exception:12,
return 13,
return 14,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getDarkThemeBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getDarkThemeBadgeColor(int p1){
	int v1 = p0.getBadgeColor(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
return 9,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getDarkThemeBadgeColor(I)I > 8,12 @26 exception:13,
return 14,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getDarkThemeBadgeColor(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeDarkColorResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
return 9,","depth : 0
public int getUserBadgeDarkColorResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeDarkColorResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge color for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
return 9,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge label for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 7,
goto (from iindex= 8 to iindex = 2),
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeLabel(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeLabels, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
6 = arraylength 3,
8 = binaryop(add) 6 , 7,
11 = arrayload 3[10],
return 11,
return 14,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeLabel(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeLabel(int p1){
	int v1 = Math.min(p1, (this.mBadgeLabels.length + -1));
	return this.mBadgeLabels[v1];
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
7 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>6 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 7,8,
10 = phi  9,8,
monitorexit 3,
return 10,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 2,3,
4 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 2,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
conditional branch(eq, to iindex=-1) 5,3,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
9 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>8 <Application,Lcom/android/server/pm/UserTypeDetails>,
10 = phi  3,9,
return 10,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mIconBadge, <Primordial,I> > 1,
conditional branch(eq, to iindex=-1) 2,3,
goto (from iindex= 3 to iindex = 2),
5 = phi  4,3,
return 5,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeLabel(I)I > 8,12 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mBadgeLabels, <Primordial,[I> > 1,
conditional branch(eq, to iindex=-1) 3,4,
5 = arraylength 3,
conditional branch(eq, to iindex=-1) 5,4,
conditional branch(ge, to iindex=-1) 2,4,
6 = arraylength 3,
8 = binaryop(add) 6 , 7,
11 = arrayload 3[10],
return 11,
return 14,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeLabel(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoNoChecks(int p1){
	Object v1 = this.mUsers.get(p1);
	return phiInstruction;
}
-----
depth : 1
public UserTypeDetails getUserTypeDetails(UserInfo p1){
	Object v1 = this.mUserTypes.get(phiInstruction);
	return phiInstruction;
}
-----
depth : 1
public boolean hasBadge(){
	return phiInstruction;
}
-----
depth : 1
public int getBadgeLabel(int p1){
	int v1 = Math.min(p1, (this.mBadgeLabels.length + -1));
	return this.mBadgeLabels[v1];
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
return 9,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge label for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileBadge, <Primordial,I> > 6,
14 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, getBadgeLabel(I)I > 8,12 @26 exception:13,
return 14,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	int v5 = v3.getBadgeLabel(UserInfo.profileBadge);
	return v5;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUserBadgeLabelResId(I)I","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkManageOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @13 exception:9,
return 4,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoNoChecks(I)Landroid/content/pm/UserInfo; > 1,2 @5 exception:5,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserTypeDetails(Landroid/content/pm/UserInfo;)Lcom/android/server/pm/UserTypeDetails; > 1,6 @9 exception:7,
conditional branch(eq, to iindex=-1) 6,9,
conditional branch(eq, to iindex=-1) 8,9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, hasBadge()Z > 8 @17 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 8),
17 = new <Application,Ljava/lang/StringBuilder>@31,
return 9,","depth : 0
public int getUserBadgeLabelResId(int p1){
	p0.checkManageOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getUserBadgeLabelResId"");
	UserInfo v2 = p0.getUserInfoNoChecks(p1);
	UserTypeDetails v3 = p0.getUserTypeDetails(v2);
	boolean v4 = v3.hasBadge();
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""Requested badge label for non-badged user "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	int v9 = Slog.e(""UserManagerService"", v8);
	return 0;
}
-----
depth : 1
public void checkManageOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasManageUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
conditional branch(eq, to iindex=-1) 11,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
monitorexit 9,
return 16,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return UserInfo.id;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 11,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
monitorexit 9,
return 16,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return UserInfo.id;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
return 9,
conditional branch(eq, to iindex=-1) 11,8,
monitorexit 9,
goto (from iindex= 15 to iindex = 4),
return 2,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return p1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
return 9,
conditional branch(eq, to iindex=-1) 11,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
monitorexit 9,
return 16,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return UserInfo.id;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 4,5,
6 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 4,
conditional branch(eq, to iindex=-1) 6,2,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,6 @17 exception:8,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
return 9,
conditional branch(eq, to iindex=-1) 11,8,
monitorexit 9,
goto (from iindex= 15 to iindex = 4),
return 2,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return p1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(UserInfo.profileGroupId);
	return v2;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getCredentialOwnerProfile(I)I","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLockPatternUtils, <Application,Lcom/android/internal/widget/LockPatternUtils> > 1,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 9,
11 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileParentLU(I)Landroid/content/pm/UserInfo; > 1,2 @16 exception:10,
4 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @0 exception:3,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(ne, to iindex=-1) 4,5,
return 5,
conditional branch(eq, to iindex=-1) 11,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 11,
monitorexit 9,
return 16,","depth : 0
public int getCredentialOwnerProfile(int p1){
	UserManagerService.checkManageUsersPermission(""get the credential owner"");
	boolean v2 = this.mLockPatternUtils.isSeparateProfileChallengeEnabled(p1);
	UserInfo v3 = p0.getProfileParentLU(p1);
	return UserInfo.id;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo getProfileParentLU(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	return 0;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
11 = new <Application,[Ljava/lang/String>@1910 ,
14 = checkcast <Application,[Ljava/lang/String>13 <Application,[Ljava/lang/String>,
return 14,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	int v3 = v2.size();
	String v3 = new String(v3);
	Object v4 = v2.toArray(v3);
	return v4;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 17 to iindex = 3),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
27 = new <Application,Landroid/util/ArraySet>@40,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
11 = new <Application,[Ljava/lang/String>@1910 ,
14 = checkcast <Application,[Ljava/lang/String>13 <Application,[Ljava/lang/String>,
return 14,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	int v3 = v2.size();
	String v3 = new String(v3);
	Object v4 = v2.toArray(v3);
	return v4;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 17 to iindex = 3),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
27 = new <Application,Landroid/util/ArraySet>@40,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
return 8,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 5,3,
return 5,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
5 = phi  2,4,
return 5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 17 to iindex = 3),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
5 = new <Application,Landroid/util/ArraySet>@4,
6 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
33 = phi  32,10,
11 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 33,13,
return 5,
27 = new <Application,Landroid/util/ArraySet>@40,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
11 = new <Application,[Ljava/lang/String>@1910 ,
14 = checkcast <Application,[Ljava/lang/String>13 <Application,[Ljava/lang/String>,
return 14,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	int v3 = v2.size();
	String v3 = new String(v3);
	Object v4 = v2.toArray(v3);
	return v4;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
depth : 2
public int getWhitelistMode(){
	int v1 = SystemProperties.getInt(""persist.debug.user.package_whitelist_mode"", -1);
	return v1;
}
-----
depth : 2
public boolean isEnforceMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistSystemMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isUserTypeSubtypeOfSystem(String p1){
	Object v1 = this.mUserTypes.get(p1);
	boolean v2 = v1.isSystem();
	return phiInstruction;
}
-----
depth : 2
public Set getWhitelistedPackagesForUserType(String p1){
	long v1 = p0.getUserTypeMask(p1);
	ArraySet v1 = new ArraySet(v2);
	int v2 = this.mWhitelistedPackagesForUserTypes.size();
	int v4 = this.mWhitelistedPackagesForUserTypes.size();
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 5,3,
return 7,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
5 = phi  2,4,
return 5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 17 to iindex = 3),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
5 = new <Application,Landroid/util/ArraySet>@4,
6 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
33 = phi  32,10,
11 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 33,13,
return 5,
27 = new <Application,Landroid/util/ArraySet>@40,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
11 = new <Application,[Ljava/lang/String>@1910 ,
14 = checkcast <Application,[Ljava/lang/String>13 <Application,[Ljava/lang/String>,
return 14,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	int v3 = v2.size();
	String v3 = new String(v3);
	Object v4 = v2.toArray(v3);
	return v4;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
depth : 2
public int getWhitelistMode(){
	int v1 = SystemProperties.getInt(""persist.debug.user.package_whitelist_mode"", -1);
	int v2 = p0.getDeviceDefaultWhitelistMode();
	return v2;
}
-----
depth : 2
public boolean isEnforceMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistSystemMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isUserTypeSubtypeOfSystem(String p1){
	Object v1 = this.mUserTypes.get(p1);
	boolean v2 = v1.isSystem();
	return phiInstruction;
}
-----
depth : 2
public Set getWhitelistedPackagesForUserType(String p1){
	long v1 = p0.getUserTypeMask(p1);
	ArraySet v1 = new ArraySet(v2);
	int v2 = this.mWhitelistedPackagesForUserTypes.size();
	int v4 = this.mWhitelistedPackagesForUserTypes.size();
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getPreInstallableSystemPackages(Ljava/lang/String;)[Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mSystemPackageInstaller, <Application,Lcom/android/server/pm/UserSystemPackageInstaller> > 1,
7 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getInstallablePackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 5,2 @7 exception:6,
4 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistMode()I > 1 @0 exception:3,
conditional branch(eq, to iindex=-1) 5,3,
return 5,
6 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isEnforceMode(I)Z > 4 @4 exception:5,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
5 = phi  2,4,
return 5,
conditional branch(ne, to iindex=-1) 6,7,
9 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistMode(I)Z > 4 @12 exception:8,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(ne, to iindex=-1) 9,7,
11 = invokestatic < Application, Lcom/android/server/pm/UserSystemPackageInstaller, isImplicitWhitelistSystemMode(I)Z > 4 @18 exception:10,
3 = binaryop(and) 1 , 2,
conditional branch(eq, to iindex=-1) 3,4,
goto (from iindex= 3 to iindex = 2),
6 = phi  5,4,
return 6,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mUm, <Application,Lcom/android/server/pm/UserManagerService> > 1,
14 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isUserTypeSubtypeOfSystem(Ljava/lang/String;)Z > 12,2 @26 exception:13,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>5 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 6,7,
conditional branch(eq, to iindex=-1) 9,7,
goto (from iindex= 9 to iindex = 2),
14 = phi  13,7,
return 14,
conditional branch(eq, to iindex=-1) 14,7,
goto (from iindex= 17 to iindex = 3),
22 = phi  7,21,
26 = invokevirtual < Application, Lcom/android/server/pm/UserSystemPackageInstaller, getWhitelistedPackagesForUserType(Ljava/lang/String;)Ljava/util/Set; > 1,2 @36 exception:25,
5 = new <Application,Landroid/util/ArraySet>@4,
6 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
33 = phi  32,10,
11 = getfield < Application, Lcom/android/server/pm/UserSystemPackageInstaller, mWhitelistedPackagesForUserTypes, <Application,Landroid/util/ArrayMap> > 1,
conditional branch(ge, to iindex=-1) 33,13,
return 5,
27 = new <Application,Landroid/util/ArraySet>@40,
29 = load_metadata: <Application,Landroid/content/pm/PackageManagerInternal>, <Primordial,Ljava/lang/Class>,
31 = invokestatic < Application, Lcom/android/server/LocalServices, getService(Ljava/lang/Class;)Ljava/lang/Object; > 29 @47 exception:30,
2 = getstatic < Application, Lcom/android/server/LocalServices, sLocalServiceObjects, <Application,Landroid/util/ArrayMap> >,
monitorenter 2,
monitorexit 2,
return 4,
32 = checkcast <Application,Landroid/content/pm/PackageManagerInternal>31 <Application,Landroid/content/pm/PackageManagerInternal>,
33 = new <Application,Lcom/android/server/pm/UserSystemPackageInstaller$$ExternalSyntheticLambda0>@53,
return 27,
conditional branch(ne, to iindex=-1) 7,8,
return 8,","depth : 0
public String getPreInstallableSystemPackages(String p1){
	UserManagerService.checkCreateUsersPermission(""getPreInstallableSystemPackages"");
	Set v2 = this.mSystemPackageInstaller.getInstallablePackagesForUserType(p1);
	return 0;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public Set getInstallablePackagesForUserType(String p1){
	int v1 = p0.getWhitelistMode();
	boolean v2 = UserSystemPackageInstaller.isEnforceMode(v1);
	boolean v3 = UserSystemPackageInstaller.isImplicitWhitelistMode(v1);
	boolean v4 = UserSystemPackageInstaller.isImplicitWhitelistSystemMode(v1);
	boolean v5 = this.mUm.isUserTypeSubtypeOfSystem(p1);
	Set v6 = p0.getWhitelistedPackagesForUserType(p1);
	ArraySet v6 = new ArraySet();
	Object v8 = LocalServices.getService(PackageManagerInterna.class);
	UserSystemPackageInstaller$$ExternalSyntheticLambda0 v8 = new UserSystemPackageInstaller$$ExternalSyntheticLambda0(p0,v6,phiInstruction,v6);
	v8.forEachPackage(v8);
	return v6;
}
-----
depth : 2
public int getWhitelistMode(){
	int v1 = SystemProperties.getInt(""persist.debug.user.package_whitelist_mode"", -1);
	return v1;
}
-----
depth : 2
public boolean isEnforceMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isImplicitWhitelistSystemMode(int p1){
	return phiInstruction;
}
-----
depth : 2
public boolean isUserTypeSubtypeOfSystem(String p1){
	Object v1 = this.mUserTypes.get(p1);
	boolean v2 = v1.isSystem();
	return phiInstruction;
}
-----
depth : 2
public Set getWhitelistedPackagesForUserType(String p1){
	long v1 = p0.getUserTypeMask(p1);
	ArraySet v1 = new ArraySet(v2);
	int v2 = this.mWhitelistedPackagesForUserTypes.size();
	int v4 = this.mWhitelistedPackagesForUserTypes.size();
	return v1;
}
-----
depth : 2
public Object getService(Class p1){
	Object v1 = this.sLocalServiceObjects.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","isQuietModeEnabled(I)Z","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @6 exception:5,
monitorexit 4,
conditional branch(eq, to iindex=-1) 6,9,
11 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 6 @13 exception:10,
conditional branch(ne, to iindex=-1) 11,9,
goto (from iindex= 11 to iindex = 7),
monitorexit 3,
return 9,","depth : 0
public boolean isQuietModeEnabled(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	return 0;
}
-----
","NONE"
"Lcom/android/server/pm/UserManagerService","isQuietModeEnabled(I)Z","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @6 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 4,
conditional branch(eq, to iindex=-1) 6,9,
11 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 6 @13 exception:10,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(ne, to iindex=-1) 11,9,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 6 @20 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
monitorexit 3,
return 13,","depth : 0
public boolean isQuietModeEnabled(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	boolean v3 = v1.isQuietModeEnabled();
	return v3;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
","NONE"
"Lcom/android/server/pm/UserManagerService","isQuietModeEnabled(I)Z","1","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @6 exception:5,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 4,
conditional branch(eq, to iindex=-1) 6,9,
11 = invokevirtual < Application, Landroid/content/pm/UserInfo, isManagedProfile()Z > 6 @13 exception:10,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(ne, to iindex=-1) 11,9,
13 = invokevirtual < Application, Landroid/content/pm/UserInfo, isQuietModeEnabled()Z > 6 @20 exception:12,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
7 = phi  6,5,
return 7,
monitorexit 3,
return 13,","depth : 0
public boolean isQuietModeEnabled(int p1){
	UserInfo v1 = p0.getUserInfoLU(p1);
	boolean v2 = v1.isManagedProfile();
	boolean v3 = v1.isQuietModeEnabled();
	return v3;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.userType);
	return v1;
}
-----
depth : 1
public boolean isQuietModeEnabled(){
	return phiInstruction;
}
-----
","NONE"

"Lcom/android/server/pm/UserManagerService","getUsers(ZZZ)Ljava/util/List;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsersInternal(ZZZ)Ljava/util/List; > 1,2,3,4 @5 exception:7,
return 8,","depth : 0
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUsers(ZZZ)Ljava/util/List;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsersInternal(ZZZ)Ljava/util/List; > 1,2,3,4 @5 exception:7,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = new <Application,Ljava/util/ArrayList>@3,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
40 = phi  39,14,
conditional branch(ge, to iindex=-1) 40,13,
monitorexit 5,
return 6,
return 8,","depth : 0
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public List getUsersInternal(boolean p1, boolean p2, boolean p3){
	ArrayList v0 = new ArrayList(v1);
	int v1 = this.mUsers.size();
	int v3 = this.mUsers.size();
	return v0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getUsers(ZZZ)Ljava/util/List;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @0 exception:2,
return 3,
conditional branch(eq, to iindex=-1) 3,4,
return,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUsersInternal(ZZZ)Ljava/util/List; > 1,2,3,4 @5 exception:7,
return 8,","depth : 0
public List getUsers(boolean p1, boolean p2, boolean p3){
	UserManagerService.checkCreateUsersPermission(""query users"");
	List v2 = p0.getUsersInternal(p1, p2, p3);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
goto (from iindex= 8 to iindex = 3),
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getSeedAccountType(I)Ljava/lang/String;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @8 exception:6,
conditional branch(ne, to iindex=-1) 7,8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > 7,
10 = phi  8,9,
monitorexit 5,
return 10,","depth : 0
public String getSeedAccountType(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot get seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return phiInstruction;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	v0.finishWrite(v7);
	StringBuilder v9 = new StringBuilder();
	StringBuilder v11 = v9.append(""Error writing user info "");
	StringBuilder v12 = v9.append(UserInfo.id);
	String v13 = v9.toString();
	int v14 = Slog.e(""UserManagerService"", v13, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,16 @61 exception:17,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	p0.writeUserLP(phiInstruction);
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserAccount(ILjava/lang/String;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUserAndAcrossUsersFullPermission(Ljava/lang/String;)V > 4 @2 exception:5,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 6,3 @13 exception:7,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 8,5,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 9,3 @21 exception:10,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 11,5,
return,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
11 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>10 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(ne, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > 11,
conditional branch(ne, to iindex=-1) 15,12,
putfield 11.< Application, Lcom/android/server/pm/UserManagerService$UserData, account, <Application,Ljava/lang/String> > = 3,
goto (from iindex= 28 to iindex = 2),
16 = phi  11,12,
monitorexit 7,
conditional branch(eq, to iindex=-1) 16,12,
monitorexit 6,
return,","depth : 0
public void setUserAccount(int p1, String p2){
	UserManagerService.checkManageUserAndAcrossUsersFullPermission(""set user account"");
	Object v2 = this.mUsers.get(p1);
	boolean v3 = Objects.equals(UserManagerService$UserData.account, p2);
	UserManagerService$UserData.account = p2;
	return;
}
-----
depth : 1
public void checkManageUserAndAcrossUsersFullPermission(String p1){
	boolean v2 = UserManagerService.hasPermissionGranted(""android.permission.MANAGE_USERS"", v1);
	boolean v3 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS_FULL"", v1);
	return;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","0","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
7 = new <Application,Ljava/lang/StringBuilder>@6,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
monitorexit 22,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 7,5,
return 10,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	int v3 = SystemProperties.getInt(""persist.sys.max_profiles"", v1);
	return v3;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
7 = new <Application,Ljava/lang/StringBuilder>@6,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
monitorexit 22,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 7,5,
return 3,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrCreateUsersPermission(Ljava/lang/String;)V > 5 @2 exception:6,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
13 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isEnabled()Z > 10 @16 exception:12,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mEnabled, <Primordial,Z> > 1,
return 2,
conditional branch(ne, to iindex=-1) 13,11,
15 = invokevirtual < Application, Lcom/android/server/pm/UserTypeDetails, isManagedProfile()Z > 10 @24 exception:14,
2 = getfield < Application, Lcom/android/server/pm/UserTypeDetails, mName, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
26 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,3 @48 exception:25,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 26,11,
28 = invokevirtual < Application, Landroid/content/pm/UserInfo, canHaveProfile()Z > 26 @54 exception:27,
conditional branch(ne, to iindex=-1) 3,4,
conditional branch(ne, to iindex=-1) 6,4,
conditional branch(eq, to iindex=-1) 8,4,
goto (from iindex= 10 to iindex = 27),
return 4,
conditional branch(ne, to iindex=-1) 28,11,
30 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getProfileIds(ILjava/lang/String;Z)[I > 1,3,2,11 @61 exception:29,
7 = new <Application,Ljava/lang/StringBuilder>@6,
22 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 22,
monitorexit 22,
return 26,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
35 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getAliveUsersExcludingGuestsCountLU()I > 1 @74 exception:34,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
26 = phi  25,5,
27 = phi  20,5,
conditional branch(ge, to iindex=-1) 26,4,
return 27,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
42 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, getMaxUsersOfTypePerParent(Lcom/android/server/pm/UserTypeDetails;)I > 10 @92 exception:41,
4 = getstatic < Application, Landroid/os/Build, IS_DEBUGGABLE, <Primordial,Z> >,
conditional branch(ne, to iindex=-1) 4,5,
conditional branch(eq, to iindex=-1) 7,5,
return 10,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
9 = phi  8,7,
return 9,","depth : 0
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 1
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
depth : 2
public void checkQueryOrCreateUsersPermission(String p1){
	boolean v1 = UserManagerService.hasQueryOrCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean isEnabled(){
	return this.mEnabled;
}
-----
depth : 2
public boolean isManagedProfile(){
	boolean v1 = UserManager.isUserTypeManagedProfile(this.mName);
	return v1;
}
-----
depth : 2
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 2
public boolean canHaveProfile(){
	boolean v1 = p0.isProfile();
	boolean v2 = p0.isGuest();
	boolean v3 = p0.isRestricted();
	return 0;
}
-----
depth : 2
public [I getProfileIds(int p1, String p2, boolean p3){
	StringBuilder v1 = new StringBuilder();
	StringBuilder v3 = v1.append(""getting profiles related to user "");
	StringBuilder v4 = v1.append(p1);
	String v5 = v1.toString();
	UserManagerService.checkQueryOrCreateUsersPermission(v5);
	long v7 = Binder.clearCallingIdentity();
	IntArray v8 = p0.getProfileIdsLU(p1, p2, p3);
	[I v9 = v8.toArray();
	Binder.restoreCallingIdentity(v7);
	return v9;
}
-----
depth : 2
public int getAliveUsersExcludingGuestsCountLU(){
	int v1 = this.mUsers.size();
	return phiInstruction;
}
-----
depth : 2
public int getMaxUsersOfTypePerParent(UserTypeDetails p1){
	int v1 = p1.getMaxAllowedPerParent();
	boolean v2 = p1.isManagedProfile();
	int v3 = SystemProperties.getInt(""persist.sys.max_profiles"", v1);
	return v3;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","canAddMoreManagedProfiles(IZ)Z","0","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z > 1,4,2,3 @2 exception:5,
return 6,","depth : 0
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	boolean v1 = p0.canAddMoreProfilesToUser(""android.os.usertype.profile.MANAGED"", p1, p2);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreManagedProfiles(IZ)Z","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z > 1,4,2,3 @2 exception:5,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,
return 6,","depth : 0
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	boolean v1 = p0.canAddMoreProfilesToUser(""android.os.usertype.profile.MANAGED"", p1, p2);
	return v1;
}
-----
depth : 1
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreManagedProfiles(IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z > 1,4,2,3 @2 exception:5,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 13,11,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
conditional branch(eq, to iindex=-1) 26,11,
conditional branch(ne, to iindex=-1) 28,11,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
goto (from iindex= 4 to iindex = 2),
9 = phi  8,7,
return 9,
return 6,","depth : 0
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	boolean v1 = p0.canAddMoreProfilesToUser(""android.os.usertype.profile.MANAGED"", p1, p2);
	return v1;
}
-----
depth : 1
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 2
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","canAddMoreManagedProfiles(IZ)Z","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, canAddMoreProfilesToUser(Ljava/lang/String;IZ)Z > 1,4,2,3 @2 exception:5,
6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getRemainingCreatableProfileCount(Ljava/lang/String;IZ)I > 1,2,3,4 @0 exception:5,
7 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
10 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>9 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(eq, to iindex=-1) 10,11,
conditional branch(ne, to iindex=-1) 13,11,
conditional branch(eq, to iindex=-1) 15,11,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mContext, <Application,Landroid/content/Context> > 1,
conditional branch(ne, to iindex=-1) 21,11,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 24,
conditional branch(eq, to iindex=-1) 26,11,
conditional branch(ne, to iindex=-1) 28,11,
31 = arraylength 30,
conditional branch(le, to iindex=-1) 31,11,
conditional branch(eq, to iindex=-1) 4,11,
goto (from iindex= 39 to iindex = 2),
33 = phi  32,11,
36 = binaryop(sub) 35 , 33,
39 = binaryop(sub) 38 , 36,
conditional branch(gt, to iindex=-1) 39,11,
conditional branch(eq, to iindex=-1) 15,11,
conditional branch(ne, to iindex=-1) 36,32,
goto (from iindex= 50 to iindex = 2),
40 = phi  32,39,
conditional branch(eq, to iindex=-1) 42,43,
44 = binaryop(sub) 31 , 33,
45 = binaryop(sub) 42 , 44,
49 = phi  40,47,
conditional branch(gt, to iindex=-1) 49,11,
monitorexit 24,
return 11,
conditional branch(le, to iindex=-1) 6,7,
9 = phi  8,7,
return 9,
return 6,","depth : 0
public boolean canAddMoreManagedProfiles(int p1, boolean p2){
	boolean v1 = p0.canAddMoreProfilesToUser(""android.os.usertype.profile.MANAGED"", p1, p2);
	return v1;
}
-----
depth : 1
public boolean canAddMoreProfilesToUser(String p1, int p2, boolean p3){
	int v1 = p0.getRemainingCreatableProfileCount(p1, p2, p3);
	return phiInstruction;
}
-----
depth : 2
public int getRemainingCreatableProfileCount(String p1, int p2, boolean p3){
	UserManagerService.checkQueryOrCreateUsersPermission(""get the remaining number of profiles that can be added to the given user."");
	Object v2 = this.mUserTypes.get(p1);
	boolean v3 = v2.isEnabled();
	boolean v4 = v2.isManagedProfile();
	PackageManager v5 = this.mContext.getPackageManager();
	boolean v6 = v5.hasSystemFeature(""android.software.managed_users"");
	UserInfo v7 = p0.getUserInfoLU(p2);
	boolean v8 = v7.canHaveProfile();
	[I v9 = p0.getProfileIds(p2, p1, 0);
	int v10 = p0.getAliveUsersExcludingGuestsCountLU();
	int v11 = UserManager.getMaxSupportedUsers();
	int v12 = UserManagerService.getMaxUsersOfTypePerParent(v2);
	int v13 = Math.min(phiInstruction, (v12 - (v9.length - phiInstruction)));
	return 0;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle;","0","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle; > 1,2,4 @4 exception:5,
return 6,","depth : 0
public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle;","1","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle; > 1,2,4 @4 exception:5,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
monitorexit 30,
return 32,
return 6,","depth : 0
public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
	return v2;
}
-----
depth : 1
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle;","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle; > 1,2,4 @4 exception:5,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
goto (from iindex= 7 to iindex = 24),
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
return 12,
monitorexit 30,
return 32,
return 6,","depth : 0
public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
	return v2;
}
-----
depth : 1
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 2
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getApplicationRestrictions(Ljava/lang/String;)Landroid/os/Bundle;","2","6 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getApplicationRestrictionsForUser(Ljava/lang/String;I)Landroid/os/Bundle; > 1,2,4 @4 exception:5,
conditional branch(ne, to iindex=-1) 11,12,
16 = new <Application,Ljava/lang/StringBuilder>@20,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkSystemOrRoot(Ljava/lang/String;)V > 24 @37 exception:25,
conditional branch(ne, to iindex=-1) 6,7,
return,
30 = getfield < Application, Lcom/android/server/pm/UserManagerService, mAppRestrictionsLock, <Application,Ljava/lang/Object> > 1,
monitorenter 30,
32 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, readApplicationRestrictionsLAr(Ljava/lang/String;I)Landroid/os/Bundle; > 2,3 @43 exception:31,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
return 12,
monitorexit 30,
return 32,
return 6,","depth : 0
public Bundle getApplicationRestrictions(String p1){
	int v1 = UserHandle.getCallingUserId();
	Bundle v2 = p0.getApplicationRestrictionsForUser(p1, v1);
	return v2;
}
-----
depth : 1
public Bundle getApplicationRestrictionsForUser(String p1, int p2){
	StringBuilder v4 = new StringBuilder();
	StringBuilder v6 = v4.append(""get application restrictions for other user/app "");
	StringBuilder v7 = v4.append(p1);
	String v8 = v4.toString();
	UserManagerService.checkSystemOrRoot(v8);
	Bundle v10 = UserManagerService.readApplicationRestrictionsLAr(p1, p2);
	return v10;
}
-----
depth : 2
public void checkSystemOrRoot(String p1){
	return;
}
-----
depth : 2
public Bundle readApplicationRestrictionsLAr(String p1, int p2){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(v1,v2);
	File v1 = Environment.getUserSystemDirectory(p2);
	String v2 = UserManagerService.packageToRestrictionsFileName(p1);
	Bundle v5 = UserManagerService.readApplicationRestrictionsLAr(v0);
	return v5;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getDefaultGuestRestrictions()Landroid/os/Bundle;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 4,
5 = new <Application,Landroid/os/Bundle>@8,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorexit 4,
return 5,","depth : 0
public Bundle getDefaultGuestRestrictions(){
	UserManagerService.checkManageUsersPermission(""getDefaultGuestRestrictions"");
	Bundle v1 = new Bundle(this.mGuestRestrictions);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getDefaultGuestRestrictions()Landroid/os/Bundle;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 4,
5 = new <Application,Landroid/os/Bundle>@8,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorexit 4,
return 5,","depth : 0
public Bundle getDefaultGuestRestrictions(){
	UserManagerService.checkManageUsersPermission(""getDefaultGuestRestrictions"");
	Bundle v1 = new Bundle(this.mGuestRestrictions);
	return v1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getDefaultGuestRestrictions()Landroid/os/Bundle;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorenter 4,
5 = new <Application,Landroid/os/Bundle>@8,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mGuestRestrictions, <Application,Landroid/os/Bundle> > 1,
monitorexit 4,
return 5,","depth : 0
public Bundle getDefaultGuestRestrictions(){
	UserManagerService.checkManageUsersPermission(""getDefaultGuestRestrictions"");
	Bundle v1 = new Bundle(this.mGuestRestrictions);
	return v1;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","setUserIcon(ILandroid/graphics/Bitmap;)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,6,2,7 @9 exception:8,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, setUserIcon(ILandroid/graphics/Bitmap;)V > 12,2,3 @14 exception:13,
return,","depth : 0
public void setUserIcon(int p1, Bitmap p2){
	UserManagerService.checkManageUsersPermission(""update users"");
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	this.mLocalService.setUserIcon(p1, p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserIcon(ILandroid/graphics/Bitmap;)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,6,2,7 @9 exception:8,
return,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, setUserIcon(ILandroid/graphics/Bitmap;)V > 12,2,3 @14 exception:13,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmPackagesLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 6 @6 exception:7,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetUserDataNoChecks(Lcom/android/server/pm/UserManagerService;I)Lcom/android/server/pm/UserManagerService$UserData; > 9,2 @13 exception:10,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 13,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mwriteBitmapLP(Lcom/android/server/pm/UserManagerService;Landroid/content/pm/UserInfo;Landroid/graphics/Bitmap;)V > 15,13,3 @28 exception:16,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mwriteUserLP(Lcom/android/server/pm/UserManagerService;Lcom/android/server/pm/UserManagerService$UserData;)V > 17,11 @33 exception:18,
monitorexit 8,
19 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$msendUserInfoChangedBroadcast(Lcom/android/server/pm/UserManagerService;I)V > 19,2 @39 exception:20,
return,
return,","depth : 0
public void setUserIcon(int p1, Bitmap p2){
	UserManagerService.checkManageUsersPermission(""update users"");
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	this.mLocalService.setUserIcon(p1, p2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public void enforceUserRestriction(String p1, int p2, String p3){
	return;
}
-----
depth : 1
public void setUserIcon(int p1, Bitmap p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = UserManagerService.-$$Nest$fgetmPackagesLock(this.this$0);
	UserManagerService$UserData v3 = UserManagerService.-$$Nest$mgetUserDataNoChecks(this.this$0, p1);
	UserManagerService.-$$Nest$mwriteBitmapLP(this.this$0, UserManagerService$UserData.info, p2);
	UserManagerService.-$$Nest$mwriteUserLP(this.this$0, v3);
	UserManagerService.-$$Nest$msendUserInfoChangedBroadcast(this.this$0, p1);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserIcon(ILandroid/graphics/Bitmap;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,6,2,7 @9 exception:8,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, setUserIcon(ILandroid/graphics/Bitmap;)V > 12,2,3 @14 exception:13,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmPackagesLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 6 @6 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetUserDataNoChecks(Lcom/android/server/pm/UserManagerService;I)Lcom/android/server/pm/UserManagerService$UserData; > 9,2 @13 exception:10,
return 4,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 13,
conditional branch(eq, to iindex=-1) 14,12,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mwriteBitmapLP(Lcom/android/server/pm/UserManagerService;Landroid/content/pm/UserInfo;Landroid/graphics/Bitmap;)V > 15,13,3 @28 exception:16,
return,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mwriteUserLP(Lcom/android/server/pm/UserManagerService;Lcom/android/server/pm/UserManagerService$UserData;)V > 17,11 @33 exception:18,
return,
monitorexit 8,
19 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$msendUserInfoChangedBroadcast(Lcom/android/server/pm/UserManagerService;I)V > 19,2 @39 exception:20,
return,
return,
return,","depth : 0
public void setUserIcon(int p1, Bitmap p2){
	UserManagerService.checkManageUsersPermission(""update users"");
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	this.mLocalService.setUserIcon(p1, p2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public void setUserIcon(int p1, Bitmap p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = UserManagerService.-$$Nest$fgetmPackagesLock(this.this$0);
	UserManagerService$UserData v3 = UserManagerService.-$$Nest$mgetUserDataNoChecks(this.this$0, p1);
	UserManagerService.-$$Nest$mwriteBitmapLP(this.this$0, UserManagerService$UserData.info, p2);
	UserManagerService.-$$Nest$mwriteUserLP(this.this$0, v3);
	UserManagerService.-$$Nest$msendUserInfoChangedBroadcast(this.this$0, p1);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public Object -$$Nest$fgetmPackagesLock(UserManagerService p1){
	return this.mPackagesLock;
}
-----
depth : 2
public UserManagerService$UserData -$$Nest$mgetUserDataNoChecks(UserManagerService p1, int p2){
	UserManagerService$UserData v1 = p1.getUserDataNoChecks(p2);
	return v1;
}
-----
depth : 2
public void -$$Nest$mwriteBitmapLP(UserManagerService p1, UserInfo p2, Bitmap p3){
	p1.writeBitmapLP(p2, p3);
	return;
}
-----
depth : 2
public void -$$Nest$mwriteUserLP(UserManagerService p1, UserManagerService$UserData p2){
	p1.writeUserLP(p2);
	return;
}
-----
depth : 2
public void -$$Nest$msendUserInfoChangedBroadcast(UserManagerService p1, int p2){
	p1.sendUserInfoChangedBroadcast(p2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserIcon(ILandroid/graphics/Bitmap;)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, enforceUserRestriction(Ljava/lang/String;ILjava/lang/String;)V > 1,6,2,7 @9 exception:8,
12 = getfield < Application, Lcom/android/server/pm/UserManagerService, mLocalService, <Application,Lcom/android/server/pm/UserManagerService$LocalService> > 1,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$LocalService, setUserIcon(ILandroid/graphics/Bitmap;)V > 12,2,3 @14 exception:13,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
8 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$fgetmPackagesLock(Lcom/android/server/pm/UserManagerService;)Ljava/lang/Object; > 6 @6 exception:7,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
return 2,
monitorenter 8,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService$LocalService, this$0, <Application,Lcom/android/server/pm/UserManagerService> > 1,
11 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, -$$Nest$mgetUserDataNoChecks(Lcom/android/server/pm/UserManagerService;I)Lcom/android/server/pm/UserManagerService$UserData; > 9,2 @13 exception:10,
return 4,
conditional branch(eq, to iindex=-1) 11,12,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 11,
14 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 13,
conditional branch(eq, to iindex=-1) 14,12,
goto (from iindex= 13 to iindex = 21),
23 = new <Application,Ljava/lang/StringBuilder>@48,
monitorexit 8,
return,
return,","depth : 0
public void setUserIcon(int p1, Bitmap p2){
	UserManagerService.checkManageUsersPermission(""update users"");
	p0.enforceUserRestriction(""no_set_user_icon"", p1, ""Cannot set user icon"");
	this.mLocalService.setUserIcon(p1, p2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public void setUserIcon(int p1, Bitmap p2){
	long v1 = Binder.clearCallingIdentity();
	Object v2 = UserManagerService.-$$Nest$fgetmPackagesLock(this.this$0);
	UserManagerService$UserData v3 = UserManagerService.-$$Nest$mgetUserDataNoChecks(this.this$0, p1);
	StringBuilder v3 = new StringBuilder();
	StringBuilder v5 = v3.append(""setUserIcon: unknown user #"");
	StringBuilder v6 = v3.append(p1);
	String v7 = v3.toString();
	int v8 = Slog.w(""UserManagerService"", v7);
	Binder.restoreCallingIdentity(v1);
	return;
}
-----
depth : 2
public Object -$$Nest$fgetmPackagesLock(UserManagerService p1){
	return this.mPackagesLock;
}
-----
depth : 2
public UserManagerService$UserData -$$Nest$mgetUserDataNoChecks(UserManagerService p1, int p2){
	UserManagerService$UserData v1 = p1.getUserDataNoChecks(p2);
	return v1;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 13 @27 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 16,8,
17 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 17,8,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
conditional branch(ne, to iindex=-1) 21,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isGuest();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 13 @27 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 1,
return 4,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 16,8,
17 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 17,8,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
conditional branch(ne, to iindex=-1) 21,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isGuest();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean isGuest(){
	boolean v1 = UserManager.isUserTypeGuest(this.userType);
	return v1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
monitorexit 4,
return 8,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isGuest()Z > 13 @27 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Landroid/content/pm/UserInfo, guestToRemove, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 16,8,
17 = getfield < Application, Landroid/content/pm/UserInfo, preCreated, <Primordial,Z> > 13,
conditional branch(ne, to iindex=-1) 17,8,
18 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
19 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 13,
conditional branch(ne, to iindex=-1) 21,8,
monitorexit 4,
return 13,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	Object v3 = this.mUsers.valueAt(phiInstruction);
	boolean v4 = UserManagerService$UserData.info.isGuest();
	boolean v5 = this.mRemovingUserIds.get(UserInfo.id);
	return UserManagerService$UserData.info;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","findCurrentGuestUser()Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 2 @2 exception:3,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
27 = phi  26,8,
conditional branch(ge, to iindex=-1) 27,7,
monitorexit 4,
return 8,","depth : 0
public UserInfo findCurrentGuestUser(){
	UserManagerService.checkManageUsersPermission(""findCurrentGuestUser"");
	int v2 = this.mUsers.size();
	return 0;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
33 = phi  32,8,
conditional branch(ge, to iindex=-1) 33,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isInitialized()Z > 13 @23 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 17,
conditional branch(eq, to iindex=-1) 20,8,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 21,8,
conditional branch(ne, to iindex=-1) 23,8,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 24,8,
conditional branch(ne, to iindex=-1) 26,8,
monitorexit 4,
return 44,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasSeedAccountNoChecks(String p1, String p2){
	int v1 = this.mUsers.size();
	Object v2 = this.mUsers.valueAt(phiInstruction);
	boolean v3 = UserManagerService$UserData.info.isInitialized();
	boolean v4 = this.mRemovingUserIds.get(UserInfo.id);
	boolean v5 = UserManagerService$UserData.seedAccountName.equals(p1);
	boolean v6 = UserManagerService$UserData.seedAccountType.equals(p2);
	return 1;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
33 = phi  32,8,
conditional branch(ge, to iindex=-1) 33,7,
monitorexit 4,
return 8,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public boolean someUserHasSeedAccountNoChecks(String p1, String p2){
	int v1 = this.mUsers.size();
	return 0;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
33 = phi  32,8,
conditional branch(ge, to iindex=-1) 33,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isInitialized()Z > 13 @23 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 17,
conditional branch(eq, to iindex=-1) 20,8,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 21,8,
conditional branch(ne, to iindex=-1) 23,8,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 24,8,
conditional branch(ne, to iindex=-1) 26,8,
monitorexit 4,
return 44,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean someUserHasSeedAccountNoChecks(String p1, String p2){
	int v1 = this.mUsers.size();
	Object v2 = this.mUsers.valueAt(phiInstruction);
	boolean v3 = UserManagerService$UserData.info.isInitialized();
	boolean v4 = this.mRemovingUserIds.get(UserInfo.id);
	boolean v5 = UserManagerService$UserData.seedAccountName.equals(p1);
	boolean v6 = UserManagerService$UserData.seedAccountType.equals(p2);
	return 1;
}
-----
depth : 2
public boolean isInitialized(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","someUserHasSeedAccount(Ljava/lang/String;Ljava/lang/String;)Z","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 4 @2 exception:5,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, someUserHasSeedAccountNoChecks(Ljava/lang/String;Ljava/lang/String;)Z > 1,2,3 @5 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
33 = phi  32,8,
conditional branch(ge, to iindex=-1) 33,7,
9 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
12 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>11 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
15 = invokevirtual < Application, Landroid/content/pm/UserInfo, isInitialized()Z > 13 @23 exception:14,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(ne, to iindex=-1) 4,3,
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 15,8,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
17 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 12,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 17,
conditional branch(eq, to iindex=-1) 20,8,
21 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 21,8,
conditional branch(ne, to iindex=-1) 23,8,
24 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > 12,
conditional branch(eq, to iindex=-1) 24,8,
conditional branch(ne, to iindex=-1) 26,8,
monitorexit 4,
return 44,
return 7,","depth : 0
public boolean someUserHasSeedAccount(String p1, String p2){
	UserManagerService.checkManageUsersPermission(""check seed account information"");
	boolean v2 = p0.someUserHasSeedAccountNoChecks(p1, p2);
	return v2;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public boolean someUserHasSeedAccountNoChecks(String p1, String p2){
	int v1 = this.mUsers.size();
	Object v2 = this.mUsers.valueAt(phiInstruction);
	boolean v3 = UserManagerService$UserData.info.isInitialized();
	boolean v4 = this.mRemovingUserIds.get(UserInfo.id);
	boolean v5 = UserManagerService$UserData.seedAccountName.equals(p1);
	boolean v6 = UserManagerService$UserData.seedAccountType.equals(p2);
	return 1;
}
-----
depth : 2
public boolean isInitialized(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, clearSeedAccountData()V > 8 @20 exception:10,
monitorexit 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @24 exception:11,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	v2.clearSeedAccountData();
	p0.writeUserLP(v2);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, clearSeedAccountData()V > 8 @20 exception:10,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountOptions, <Application,Landroid/os/PersistableBundle> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, persistSeedData, <Primordial,Z> > = 2,
return,
monitorexit 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @24 exception:11,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	v2.clearSeedAccountData();
	p0.writeUserLP(v2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 1
public void clearSeedAccountData(){
	this.seedAccountName = 0;
	this.seedAccountType = 0;
	this.seedAccountOptions = 0;
	this.persistSeedData = 0;
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, clearSeedAccountData()V > 8 @20 exception:10,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountName, <Application,Ljava/lang/String> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountType, <Application,Ljava/lang/String> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, seedAccountOptions, <Application,Landroid/os/PersistableBundle> > = 2,
putfield 1.< Application, Lcom/android/server/pm/UserManagerService$UserData, persistSeedData, <Primordial,Z> > = 2,
return,
monitorexit 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @24 exception:11,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	v2.clearSeedAccountData();
	p0.writeUserLP(v2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
depth : 1
public void clearSeedAccountData(){
	this.seedAccountName = 0;
	this.seedAccountType = 0;
	this.seedAccountOptions = 0;
	this.persistSeedData = 0;
	return;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService$UserData, clearSeedAccountData()V > 8 @20 exception:10,
monitorexit 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,8 @24 exception:11,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	v2.clearSeedAccountData();
	p0.writeUserLP(v2);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","clearSeedAccountData(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,2 @11 exception:7,
conditional branch(ne, to iindex=-1) 8,9,
monitorexit 6,
monitorexit 5,
return,","depth : 0
public void clearSeedAccountData(int p1){
	UserManagerService.checkManageUsersPermission(""Cannot clear seed account information"");
	UserManagerService$UserData v2 = p0.getUserDataLU(p1);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","0","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 4 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","1","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return 7,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isProfile(){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
return 3,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
return 3,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
12 = getfield < Application, Landroid/content/pm/UserInfo, userType, <Application,Ljava/lang/String> > 7,
goto (from iindex= 11 to iindex = 3),
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","getProfileType(I)Ljava/lang/String;","2","invokevirtual < Application, Lcom/android/server/pm/UserManagerService, checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(ILjava/lang/String;)V > 1,2,3 @2 exception:4,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, isSameProfileGroupNoChecks(II)Z > 1,5,2 @6 exception:6,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 4,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 8,9,
conditional branch(eq, to iindex=-1) 11,7,
12 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 11,
conditional branch(ne, to iindex=-1) 12,9,
13 = getfield < Application, Landroid/content/pm/UserInfo, profileGroupId, <Primordial,I> > 6,
conditional branch(ne, to iindex=-1) 13,12,
15 = phi  7,14,
monitorexit 4,
return 15,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasQueryUsersPermission()Z > @13 exception:9,
return 3,
conditional branch(eq, to iindex=-1) 10,8,
15 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasPermissionGranted(Ljava/lang/String;I)Z > 13,12 @26 exception:14,
conditional branch(ne, to iindex=-1) 6,7,
goto (from iindex= 5 to iindex = 2),
8 = phi  4,7,
return 8,
conditional branch(eq, to iindex=-1) 15,8,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
7 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @8 exception:6,
conditional branch(eq, to iindex=-1) 7,8,
10 = invokevirtual < Application, Landroid/content/pm/UserInfo, isProfile()Z > 7 @14 exception:9,
conditional branch(eq, to iindex=-1) 10,8,
13 = phi  12,11,
monitorexit 5,
return 13,","depth : 0
public String getProfileType(int p1){
	p0.checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(p1, ""getProfileType"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isProfile();
	return phiInstruction;
}
-----
depth : 1
public void checkQueryOrInteractPermissionIfCallerInOtherProfileGroup(int p1, String p2){
	boolean v2 = p0.isSameProfileGroupNoChecks(v1, p1);
	boolean v3 = UserManagerService.hasQueryUsersPermission();
	int v4 = Binder.getCallingUid();
	boolean v5 = UserManagerService.hasPermissionGranted(""android.permission.INTERACT_ACROSS_USERS"", v4);
	return;
}
-----
depth : 2
public boolean isSameProfileGroupNoChecks(int p1, int p2){
	UserInfo v1 = p0.getUserInfoLU(p1);
	UserInfo v2 = p0.getUserInfoLU(p2);
	return phiInstruction;
}
-----
depth : 2
public boolean hasQueryUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.QUERY_USERS"");
	return v1;
}
-----
depth : 2
public boolean hasPermissionGranted(String p1, int p2){
	return phiInstruction;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
conditional branch(eq, to iindex=-1) 6,4,
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(le, to iindex=-1) 8,5,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
conditional branch(eq, to iindex=-1) 19,5,
33 = phi  4,32,
monitorexit 2,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
19 = binaryop(or) 4 , 18,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
conditional branch(eq, to iindex=-1) 52,14,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
return,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
6 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @34 exception:5,
return 4,
conditional branch(eq, to iindex=-1) 6,4,
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(le, to iindex=-1) 8,5,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
conditional branch(eq, to iindex=-1) 19,5,
33 = phi  4,32,
monitorexit 2,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
19 = binaryop(or) 4 , 18,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
conditional branch(eq, to iindex=-1) 52,14,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
goto (from iindex= 2 to iindex = 2),
7 = phi  6,5,
return,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","createProfileForUserEvenWhenDisallowedWithThrow(Ljava/lang/String;Ljava/lang/String;II[Ljava/lang/String;)Landroid/content/pm/UserInfo;","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkCreateUsersPermission(I)V > 4 @0 exception:7,
3 = binaryop(and) 1 , 2,
conditional branch(ne, to iindex=-1) 3,4,
19 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasCreateUsersPermission()Z > @4 exception:18,
return 3,
conditional branch(eq, to iindex=-1) 19,4,
goto (from iindex= 5 to iindex = 30),
return,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUnchecked(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,8,6,8 @11 exception:9,
10 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getNextAvailableId()I > 1 @4 exception:9,
2 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 2,
conditional branch(lt, to iindex=-1) 4,5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(le, to iindex=-1) 8,5,
13 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
15 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRecentlyRemovedIds, <Application,Ljava/util/LinkedList> > 1,
conditional branch(eq, to iindex=-1) 19,5,
33 = phi  4,32,
monitorexit 2,
conditional branch(lt, to iindex=-1) 33,5,
return 33,
11 = new <Application,Lcom/android/server/utils/TimingsTraceAndSlog>@8,
13 = new <Application,Ljava/lang/StringBuilder>@13,
invokevirtual < Application, Lcom/android/server/utils/TimingsTraceAndSlog, traceBegin(Ljava/lang/String;)V > 11,21 @30 exception:22,
3 = getfield < Application, Lcom/android/server/utils/TimingsTraceAndSlog, mTag, <Application,Ljava/lang/String> > 1,
return,
24 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyBegin(ILjava/lang/String;I)J > 1,10,3,4 @35 exception:23,
return 7,
27 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, createUserInternalUncheckedNoTracing(Ljava/lang/String;Ljava/lang/String;IIZ[Ljava/lang/String;Lcom/android/server/utils/TimingsTraceAndSlog;Ljava/lang/Object;)Landroid/content/pm/UserInfo; > 1,2,3,4,5,6,7,11,8 @57 exception:26,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserTypes, <Application,Landroid/util/ArrayMap> > 1,
13 = checkcast <Application,Lcom/android/server/pm/UserTypeDetails>12 <Application,Lcom/android/server/pm/UserTypeDetails>,
conditional branch(ne, to iindex=-1) 13,14,
19 = binaryop(or) 4 , 18,
conditional branch(ne, to iindex=-1) 21,14,
23 = binaryop(and) 19 , 22,
conditional branch(eq, to iindex=-1) 23,14,
conditional branch(ne, to iindex=-1) 25,14,
27 = new <Application,Ljava/lang/StringBuilder>@145,
43 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 43,
44 = getfield < Application, Lcom/android/server/pm/UserManagerService, mForceEphemeralUsers, <Primordial,Z> > 1,
conditional branch(eq, to iindex=-1) 44,14,
46 = binaryop(or) 19 , 45,
47 = phi  19,46,
monitorexit 43,
conditional branch(ne, to iindex=-1) 6,14,
conditional branch(ge, to iindex=-1) 5,14,
conditional branch(eq, to iindex=-1) 52,14,
conditional branch(eq, to iindex=-1) 57,14,
return 57,
conditional branch(eq, to iindex=-1) 27,25,
32 = phi  25,31,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, logUserCreateJourneyFinish(JIZ)V > 1,24,10,32 @64 exception:33,
conditional branch(eq, to iindex=-1) 4,5,
7 = phi  6,5,
return,
return 27,
return 10,","depth : 0
public UserInfo createProfileForUserEvenWhenDisallowedWithThrow(String p1, String p2, int p3, int p4, String p5){
	UserManagerService.checkCreateUsersPermission(p3);
	UserInfo v2 = p0.createUserInternalUnchecked(p1, p2, p3, p4, 0, p5, 0);
	return v2;
}
-----
depth : 1
public void checkCreateUsersPermission(int p1){
	boolean v1 = UserManagerService.hasCreateUsersPermission();
	return;
}
-----
depth : 2
public boolean hasCreateUsersPermission(){
	boolean v1 = UserManagerService.hasManageUsersOrPermission(""android.permission.CREATE_USERS"");
	return v1;
}
-----
depth : 1
public UserInfo createUserInternalUnchecked(String p1, String p2, int p3, int p4, boolean p5, String p6, Object p7){
	int v1 = p0.getNextAvailableId();
	TimingsTraceAndSlog v1 = new TimingsTraceAndSlog();
	StringBuilder v2 = new StringBuilder();
	StringBuilder v4 = v2.append(""createUser-"");
	StringBuilder v5 = v2.append(p3);
	String v6 = v2.toString();
	v1.traceBegin(v6);
	long v8 = p0.logUserCreateJourneyBegin(v1, p2, p3);
	UserInfo v9 = p0.createUserInternalUncheckedNoTracing(p1, p2, p3, p4, p5, p6, v1, p7);
	p0.logUserCreateJourneyFinish(v8, v1, phiInstruction);
	v1.traceEnd();
	return v9;
}
-----
depth : 2
public int getNextAvailableId(){
	int v1 = p0.scanNextAvailableIdLocked();
	int v2 = this.mRemovingUserIds.size();
	int v3 = Slog.i(""UserManagerService"", ""All available IDs are used. Recycling LRU ids."");
	this.mRemovingUserIds.clear();
	Iterator v5 = this.mRecentlyRemovedIds.iterator();
	boolean v6 = v5.hasNext();
	int v7 = p0.scanNextAvailableIdLocked();
	UserManager.invalidateStaticUserProperties();
	return phiInstruction;
}
-----
depth : 2
public void traceBegin(String p1){
	int v1 = Slog.d(this.mTag, p1);
	return;
}
-----
depth : 2
public long logUserCreateJourneyBegin(int p1, String p2, int p3){
	long v1 = p0.logUserJourneyBegin(4, p1, p2, p3);
	return v1;
}
-----
depth : 2
public UserInfo createUserInternalUncheckedNoTracing(String p1, String p2, int p3, int p4, boolean p5, String p6, TimingsTraceAndSlog p7, Object p8){
	Object v1 = this.mUserTypes.get(p2);
	String v2 = p2.intern();
	int v3 = v1.getDefaultUserInfoFlags();
	boolean v4 = UserManagerService.checkUserTypeConsistency((p3 | v3));
	boolean v5 = v1.isEnabled();
	StringBuilder v5 = new StringBuilder();
	StringBuilder v7 = v5.append(""Cannot add a user of disabled type "");
	StringBuilder v8 = v5.append(v2);
	StringBuilder v9 = v5.append(""."");
	String v10 = v5.toString();
	p0.throwCheckedUserOperationException(v10, 6);
	boolean v12 = UserManagerService.isUserTypeEligibleForPreCreation(v1);
	UserInfo v13 = p0.convertPreCreatedUserIfPossible(v2, phiInstruction, p1, p8);
	return v13;
}
-----
depth : 2
public void logUserCreateJourneyFinish(long p1, int p2, boolean p3){
	FrameworkStatsLog.write(265, p1, p2, 3, phiInstruction);
	return;
}
-----
","SYS_OR_SIG"

"Lcom/android/server/pm/UserManagerService","getUserHandle(I)I","0","3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 3,
4 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUserIds, <Primordial,[I> > 1,
5 = arraylength 4,
14 = phi  13,6,
conditional branch(ge, to iindex=-1) 14,5,
monitorexit 3,
return 15,","depth : 0
public int getUserHandle(int p1){
	return -1;
}
-----
","NONE"

"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","0","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @32 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @36 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @32 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 7,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @36 exception:21,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isEnabled(){
	return phiInstruction;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return 0;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","1","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
conditional branch(eq, to iindex=-1) 6,7,
16 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
17 = phi  7,16,
return 17,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
2 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 1,
4 = binaryop(and) 2 , 3,
conditional branch(eq, to iindex=-1) 4,3,
goto (from iindex= 5 to iindex = 2),
7 = phi  6,5,
return 7,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @32 exception:19,
3 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsers, <Application,Landroid/util/SparseArray> > 1,
6 = checkcast <Application,Lcom/android/server/pm/UserManagerService$UserData>5 <Application,Lcom/android/server/pm/UserManagerService$UserData>,
conditional branch(eq, to iindex=-1) 6,7,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 6,
9 = getfield < Application, Landroid/content/pm/UserInfo, partial, <Primordial,Z> > 8,
conditional branch(eq, to iindex=-1) 9,7,
10 = getfield < Application, Lcom/android/server/pm/UserManagerService, mRemovingUserIds, <Application,Landroid/util/SparseBooleanArray> > 1,
conditional branch(ne, to iindex=-1) 12,7,
return 6,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @36 exception:21,
3 = new <Application,Landroid/util/AtomicFile>@0,
4 = new <Application,Ljava/io/File>@2,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersDir, <Application,Ljava/io/File> > 1,
6 = new <Application,Ljava/lang/StringBuilder>@6,
8 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
9 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;Ljava/io/OutputStream;)V > 1,2,20 @37 exception:23,
26 = getCaughtException ,
goto (from iindex= 20 to iindex = 3),
27 = phi  20,22,
28 = phi  26,21,
30 = new <Application,Ljava/lang/StringBuilder>@48,
35 = getfield < Application, Lcom/android/server/pm/UserManagerService$UserData, info, <Application,Landroid/content/pm/UserInfo> > 2,
36 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 35,
return,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 1
public UserInfo getUserInfoLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return phiInstruction;
}
-----
depth : 1
public boolean isEnabled(){
	return phiInstruction;
}
-----
depth : 1
public UserManagerService$UserData getUserDataLU(int p1){
	Object v1 = this.mUsers.get(p1);
	boolean v2 = this.mRemovingUserIds.get(p1);
	return v1;
}
-----
depth : 1
public void writeUserLP(UserManagerService$UserData p1){
	AtomicFile v0 = new AtomicFile(v0);
	File v0 = new File(this.mUsersDir,v4);
	StringBuilder v0 = new StringBuilder();
	StringBuilder v2 = v0.append(UserInfo.id);
	StringBuilder v3 = v0.append("".xml"");
	String v4 = v0.toString();
	FileOutputStream v7 = v0.startWrite();
	p0.writeUserLP(p1, v7);
	StringBuilder v8 = new StringBuilder();
	StringBuilder v10 = v8.append(""Error writing user info "");
	StringBuilder v11 = v8.append(UserInfo.id);
	String v12 = v8.toString();
	int v13 = Slog.e(""UserManagerService"", v12, phiInstruction);
	v0.failWrite(phiInstruction);
	return;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
15 = getfield < Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > 8,
17 = binaryop(xor) 15 , 16,
putfield 8.< Application, Landroid/content/pm/UserInfo, flags, <Primordial,I> > = 17,
18 = getfield < Application, Landroid/content/pm/UserInfo, id, <Primordial,I> > 8,
20 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserDataLU(I)Lcom/android/server/pm/UserManagerService$UserData; > 1,18 @32 exception:19,
invokevirtual < Application, Lcom/android/server/pm/UserManagerService, writeUserLP(Lcom/android/server/pm/UserManagerService$UserData;)V > 1,20 @36 exception:21,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	UserInfo.flags = (UserInfo.flags ^ 64);
	UserManagerService$UserData v4 = p0.getUserDataLU(UserInfo.id);
	p0.writeUserLP(v4);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
14 = invokevirtual < Application, Landroid/content/pm/UserInfo, isEnabled()Z > 8 @18 exception:13,
conditional branch(ne, to iindex=-1) 14,12,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	boolean v3 = v2.isEnabled();
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"
"Lcom/android/server/pm/UserManagerService","setUserEnabled(I)V","2","invokestatic < Application, Lcom/android/server/pm/UserManagerService, checkManageUsersPermission(Ljava/lang/String;)V > 3 @2 exception:4,
3 = invokestatic < Application, Lcom/android/server/pm/UserManagerService, hasManageUsersPermission()Z > @0 exception:2,
return 4,
conditional branch(eq, to iindex=-1) 3,4,
return,
5 = getfield < Application, Lcom/android/server/pm/UserManagerService, mPackagesLock, <Application,Ljava/lang/Object> > 1,
monitorenter 5,
6 = getfield < Application, Lcom/android/server/pm/UserManagerService, mUsersLock, <Application,Ljava/lang/Object> > 1,
monitorenter 6,
8 = invokevirtual < Application, Lcom/android/server/pm/UserManagerService, getUserInfoLU(I)Landroid/content/pm/UserInfo; > 1,2 @11 exception:7,
monitorexit 6,
conditional branch(eq, to iindex=-1) 8,12,
monitorexit 5,
return,","depth : 0
public void setUserEnabled(int p1){
	UserManagerService.checkManageUsersPermission(""enable user"");
	UserInfo v2 = p0.getUserInfoLU(p1);
	return;
}
-----
depth : 1
public void checkManageUsersPermission(String p1){
	boolean v1 = UserManagerService.hasManageUsersPermission();
	return;
}
-----
depth : 2
public boolean hasManageUsersPermission(){
	int v1 = Binder.getCallingUid();
	boolean v2 = UserManagerService.hasManageUsersPermission(v1);
	return v2;
}
-----
","SYS_OR_SIG"

